

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 01 21:35:01 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	text56,global,reloc=2,class=CODE,delta=1
    74                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    75                           	psect	text58,global,reloc=2,class=CODE,delta=1
    76                           	psect	text59,global,reloc=2,class=CODE,delta=1
    77                           	psect	text60,global,reloc=2,class=CODE,delta=1
    78                           	psect	text61,global,reloc=2,class=CODE,delta=1
    79                           	psect	text62,global,reloc=2,class=CODE,delta=1
    80                           	psect	text63,global,reloc=2,class=CODE,delta=1
    81                           	psect	text64,global,reloc=2,class=CODE,delta=1
    82                           	psect	text65,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    86                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,delta=1
    93                           	psect	text75,global,reloc=2,class=CODE,delta=1
    94                           	psect	text76,global,reloc=2,class=CODE,delta=1
    95                           	psect	text77,global,reloc=2,class=CODE,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,delta=1
    97                           	psect	text79,global,reloc=2,class=CODE,delta=1
    98                           	psect	text80,global,reloc=2,class=CODE,delta=1
    99                           	psect	text81,global,reloc=2,class=CODE,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,delta=1
   106                           	psect	text88,global,reloc=2,class=CODE,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   113                           	psect	text95,global,reloc=2,class=CODE,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   115                           	psect	text97,global,reloc=2,class=CODE,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   119                           	psect	text101,global,reloc=2,class=CODE,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,delta=1
   121                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text106,global,reloc=2,class=CODE,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   128                           	psect	text110,global,reloc=2,class=CODE,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,delta=1
   130                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   131                           	psect	text112,global,reloc=2,class=CODE,delta=1
   132                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   133                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   134  0000                     
   135                           ; Version 1.45 (B)
   136                           ; Generated 30/01/2018 GMT
   137                           ; 
   138                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   139                           ; All rights reserved.
   140                           ; 
   141                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   142                           ; 
   143                           ; Redistribution and use in source and binary forms, with or without modification, are
   144                           ; permitted provided that the following conditions are met:
   145                           ; 
   146                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   147                           ;        conditions and the following disclaimer.
   148                           ; 
   149                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   150                           ;        of conditions and the following disclaimer in the documentation and/or other
   151                           ;        materials provided with the distribution.
   152                           ; 
   153                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   154                           ;        software without specific prior written permission.
   155                           ; 
   156                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   157                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   158                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   159                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   160                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   161                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   162                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   163                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   164                           ; 
   165                           ; 
   166                           ; Code-generator required, PIC18LF67K40 Definitions
   167                           ; 
   168                           ; SFR Addresses
   169  0000                     
   170                           	psect	idataBANK0
   171  01638A                     __pidataBANK0:
   172                           	opt stack 0
   173                           
   174                           ;initializer for _Vpk_const
   175                           ;main.c: 58: volatile bit eusart2RxStringReady = 0;
   176                           ;main.c: 61: volatile unsigned long on_time = 0;
   177                           ;main.c: 64: volatile double FVR_ADC_Result;
   178                           ;main.c: 65: volatile double AVSS_ADC_Result;
   179                           ;main.c: 66: volatile double ADC_Result_Scaling;
   180                           ;main.c: 67: volatile double POS3P3_ADC_Result;
   181                           ;main.c: 68: volatile double POS12_ADC_Result;
   182                           ;main.c: 69: volatile double Temp_ADC_Result;
   183                           ;main.c: 70: volatile double Temp_ADC_Offset = -267.409;
   184  01638A  B5                 	db	181
   185  01638B  29                 	db	41
   186  01638C  43                 	db	67
   187                           
   188                           ;initializer for _Temp_ADC_Offset
   189  01638D  B4                 	db	180
   190  01638E  85                 	db	133
   191  01638F  C3                 	db	195
   192                           
   193                           	psect	mediumconst
   194  00F328                     __pmediumconst:
   195                           	opt stack 0
   196  00F328  00                 	db	0
   197  00F329                     _dpowers:
   198                           	opt stack 0
   199  00F329  0001               	dw	1
   200  00F32B  0000               	dw	0
   201  00F32D  000A               	dw	10
   202  00F32F  0000               	dw	0
   203  00F331  0064               	dw	100
   204  00F333  0000               	dw	0
   205  00F335  03E8               	dw	1000
   206  00F337  0000               	dw	0
   207  00F339  2710               	dw	10000
   208  00F33B  0000               	dw	0
   209  00F33D  86A0               	dw	34464
   210  00F33F  0001               	dw	1
   211  00F341  4240               	dw	16960
   212  00F343  000F               	dw	15
   213  00F345  9680               	dw	38528
   214  00F347  0098               	dw	152
   215  00F349  E100               	dw	57600
   216  00F34B  05F5               	dw	1525
   217  00F34D  CA00               	dw	51712
   218  00F34F  3B9A               	dw	15258
   219  00F351                     __end_of_dpowers:
   220                           	opt stack 0
   221  00F351                     __powers_:
   222                           	opt stack 0
   223  00F351  00                 	db	0
   224  00F352  80                 	db	128
   225  00F353  3F                 	db	63
   226  00F354  00                 	db	0
   227  00F355  20                 	db	32
   228  00F356  41                 	db	65
   229  00F357  00                 	db	0
   230  00F358  C8                 	db	200
   231  00F359  42                 	db	66
   232  00F35A  00                 	db	0
   233  00F35B  7A                 	db	122
   234  00F35C  44                 	db	68
   235  00F35D  40                 	db	64
   236  00F35E  1C                 	db	28
   237  00F35F  46                 	db	70
   238  00F360  50                 	db	80
   239  00F361  C3                 	db	195
   240  00F362  47                 	db	71
   241  00F363  24                 	db	36
   242  00F364  74                 	db	116
   243  00F365  49                 	db	73
   244  00F366  97                 	db	151
   245  00F367  18                 	db	24
   246  00F368  4B                 	db	75
   247  00F369  BC                 	db	188
   248  00F36A  BE                 	db	190
   249  00F36B  4C                 	db	76
   250  00F36C  6B                 	db	107
   251  00F36D  6E                 	db	110
   252  00F36E  4E                 	db	78
   253  00F36F  03                 	db	3
   254  00F370  15                 	db	21
   255  00F371  50                 	db	80
   256  00F372  79                 	db	121
   257  00F373  AD                 	db	173
   258  00F374  60                 	db	96
   259  00F375  F3                 	db	243
   260  00F376  49                 	db	73
   261  00F377  71                 	db	113
   262  00F378                     __end_of__powers_:
   263                           	opt stack 0
   264  00F378                     __npowers_:
   265                           	opt stack 0
   266  00F378  00                 	db	0
   267  00F379  80                 	db	128
   268  00F37A  3F                 	db	63
   269  00F37B  CD                 	db	205
   270  00F37C  CC                 	db	204
   271  00F37D  3D                 	db	61
   272  00F37E  D7                 	db	215
   273  00F37F  23                 	db	35
   274  00F380  3C                 	db	60
   275  00F381  12                 	db	18
   276  00F382  83                 	db	131
   277  00F383  3A                 	db	58
   278  00F384  B7                 	db	183
   279  00F385  D1                 	db	209
   280  00F386  38                 	db	56
   281  00F387  C6                 	db	198
   282  00F388  27                 	db	39
   283  00F389  37                 	db	55
   284  00F38A  38                 	db	56
   285  00F38B  86                 	db	134
   286  00F38C  35                 	db	53
   287  00F38D  C0                 	db	192
   288  00F38E  D6                 	db	214
   289  00F38F  33                 	db	51
   290  00F390  CC                 	db	204
   291  00F391  2B                 	db	43
   292  00F392  32                 	db	50
   293  00F393  70                 	db	112
   294  00F394  89                 	db	137
   295  00F395  30                 	db	48
   296  00F396  E7                 	db	231
   297  00F397  DB                 	db	219
   298  00F398  2E                 	db	46
   299  00F399  E5                 	db	229
   300  00F39A  3C                 	db	60
   301  00F39B  1E                 	db	30
   302  00F39C  42                 	db	66
   303  00F39D  A2                 	db	162
   304  00F39E  0D                 	db	13
   305  00F39F                     __end_of__npowers_:
   306                           	opt stack 0
   307  00F39F                     _hexpowers:
   308                           	opt stack 0
   309  00F39F  0001               	dw	1
   310  00F3A1  0000               	dw	0
   311  00F3A3  0010               	dw	16
   312  00F3A5  0000               	dw	0
   313  00F3A7  0100               	dw	256
   314  00F3A9  0000               	dw	0
   315  00F3AB  1000               	dw	4096
   316  00F3AD  0000               	dw	0
   317  00F3AF  0000               	dw	0
   318  00F3B1  0001               	dw	1
   319  00F3B3  0000               	dw	0
   320  00F3B5  0010               	dw	16
   321  00F3B7  0000               	dw	0
   322  00F3B9  0100               	dw	256
   323  00F3BB  0000               	dw	0
   324  00F3BD  1000               	dw	4096
   325  00F3BF                     __end_of_hexpowers:
   326                           	opt stack 0
   327  00F3BF                     atan@coeff_a:
   328                           	opt stack 0
   329  00F3BF  3C                 	db	60
   330  00F3C0  04                 	db	4
   331  00F3C1  42                 	db	66
   332  00F3C2  9F                 	db	159
   333  00F3C3  6A                 	db	106
   334  00F3C4  42                 	db	66
   335  00F3C5  90                 	db	144
   336  00F3C6  01                 	db	1
   337  00F3C7  42                 	db	66
   338  00F3C8  4D                 	db	77
   339  00F3C9  BB                 	db	187
   340  00F3CA  40                 	db	64
   341  00F3CB  EC                 	db	236
   342  00F3CC  47                 	db	71
   343  00F3CD  3E                 	db	62
   344  00F3CE  8E                 	db	142
   345  00F3CF  1F                 	db	31
   346  00F3D0  BB                 	db	187
   347  00F3D1                     __end_ofatan@coeff_a:
   348                           	opt stack 0
   349  00F3D1                     sin@coeff_a:
   350                           	opt stack 0
   351  00F3D1  F4                 	db	244
   352  00F3D2  4A                 	db	74
   353  00F3D3  48                 	db	72
   354  00F3D4  95                 	db	149
   355  00F3D5  95                 	db	149
   356  00F3D6  C7                 	db	199
   357  00F3D7  C1                 	db	193
   358  00F3D8  DC                 	db	220
   359  00F3D9  45                 	db	69
   360  00F3DA  DC                 	db	220
   361  00F3DB  6D                 	db	109
   362  00F3DC  C3                 	db	195
   363  00F3DD  B3                 	db	179
   364  00F3DE  33                 	db	51
   365  00F3DF  40                 	db	64
   366  00F3E0                     __end_ofsin@coeff_a:
   367                           	opt stack 0
   368  00F3E0                     atan@coeff_b:
   369                           	opt stack 0
   370  00F3E0  3C                 	db	60
   371  00F3E1  04                 	db	4
   372  00F3E2  42                 	db	66
   373  00F3E3  5A                 	db	90
   374  00F3E4  8B                 	db	139
   375  00F3E5  42                 	db	66
   376  00F3E6  04                 	db	4
   377  00F3E7  44                 	db	68
   378  00F3E8  42                 	db	66
   379  00F3E9  9C                 	db	156
   380  00F3EA  4F                 	db	79
   381  00F3EB  41                 	db	65
   382  00F3EC  00                 	db	0
   383  00F3ED  80                 	db	128
   384  00F3EE  3F                 	db	63
   385  00F3EF                     __end_ofatan@coeff_b:
   386                           	opt stack 0
   387  00F3EF                     sin@coeff_b:
   388                           	opt stack 0
   389  00F3EF  34                 	db	52
   390  00F3F0  01                 	db	1
   391  00F3F1  48                 	db	72
   392  00F3F2  9D                 	db	157
   393  00F3F3  B0                 	db	176
   394  00F3F4  45                 	db	69
   395  00F3F5  00                 	db	0
   396  00F3F6  DA                 	db	218
   397  00F3F7  42                 	db	66
   398  00F3F8  00                 	db	0
   399  00F3F9  80                 	db	128
   400  00F3FA  3F                 	db	63
   401  00F3FB                     __end_ofsin@coeff_b:
   402                           	opt stack 0
   403  0000                     _FVRCONbits	set	3780
   404  0000                     _FVRCON	set	3780
   405  0000                     _RC2REG	set	3825
   406  0000                     _RC2STAbits	set	3829
   407  0000                     _TX2REG	set	3826
   408  0000                     _TX2STAbits	set	3830
   409  0000                     _SP2BRGH	set	3828
   410  0000                     _SP2BRGL	set	3827
   411  0000                     _TX2STA	set	3830
   412  0000                     _RC2STA	set	3829
   413  0000                     _BAUD2CON	set	3831
   414  0000                     _PIR1bits	set	3636
   415  0000                     _PIE1bits	set	3626
   416  0000                     _PIR5bits	set	3640
   417  0000                     _PIE5bits	set	3630
   418  0000                     _PIR3bits	set	3638
   419  0000                     _PIE3bits	set	3628
   420  0000                     _IPR1bits	set	3616
   421  0000                     _IPR5bits	set	3620
   422  0000                     _IPR3bits	set	3618
   423  0000                     _RX2PPS	set	3601
   424  0000                     _RG7PPS	set	3721
   425  0000                     _SLRCONH	set	3774
   426  0000                     _SLRCONG	set	3769
   427  0000                     _SLRCONF	set	3761
   428  0000                     _SLRCONE	set	3756
   429  0000                     _SLRCOND	set	3748
   430  0000                     _SLRCONC	set	3743
   431  0000                     _SLRCONB	set	3735
   432  0000                     _SLRCONA	set	3727
   433  0000                     _ODCOND	set	3749
   434  0000                     _ODCONC	set	3744
   435  0000                     _ODCONH	set	3775
   436  0000                     _ODCONB	set	3736
   437  0000                     _ODCONG	set	3770
   438  0000                     _ODCONA	set	3728
   439  0000                     _ODCONF	set	3762
   440  0000                     _ODCONE	set	3757
   441  0000                     _WPUH	set	3776
   442  0000                     _WPUC	set	3745
   443  0000                     _WPUA	set	3729
   444  0000                     _WPUG	set	3771
   445  0000                     _WPUB	set	3737
   446  0000                     _WPUE	set	3758
   447  0000                     _WPUF	set	3763
   448  0000                     _WPUD	set	3750
   449  0000                     _ANSELA	set	3730
   450  0000                     _ANSELF	set	3764
   451  0000                     _ANSELG	set	3772
   452  0000                     _ANSELE	set	3759
   453  0000                     _ANSELB	set	3738
   454  0000                     _ANSELD	set	3751
   455  0000                     _PMD5	set	3665
   456  0000                     _PMD4	set	3664
   457  0000                     _PMD3	set	3663
   458  0000                     _PMD2	set	3662
   459  0000                     _PMD1	set	3661
   460  0000                     _PMD0	set	3660
   461  0000                     _OSCTUNE	set	3656
   462  0000                     _OSCFRQ	set	3657
   463  0000                     _OSCEN	set	3655
   464  0000                     _OSCCON3	set	3653
   465  0000                     _OSCCON1	set	3651
   466  0000                     _PLLR	set	29232
   467  0000                     _T7GCONbits	set	3889
   468  0000                     _T7CONbits	set	3888
   469  0000                     _T7CON	set	3888
   470  0000                     _TMR7L	set	3886
   471  0000                     _TMR7H	set	3887
   472  0000                     _T7CLK	set	3891
   473  0000                     _T7GATE	set	3890
   474  0000                     _T7GCON	set	3889
   475  0000                     _ADCON1bits	set	3929
   476  0000                     _ADCON2bits	set	3930
   477  0000                     _ADPRE	set	3934
   478  0000                     _ADCON3bits	set	3931
   479  0000                     _ADACQ	set	3932
   480  0000                     _ADCLK	set	3927
   481  0000                     _ADACT	set	3926
   482  0000                     _ADREF	set	3928
   483  0000                     _ADCON3	set	3931
   484  0000                     _ADCON2	set	3930
   485  0000                     _ADCON1	set	3929
   486  0000                     _ADCAP	set	3933
   487  0000                     _ADPCH	set	3935
   488  0000                     _LATGbits	set	3967
   489  0000                     _LATFbits	set	3966
   490  0000                     _T5GCONbits	set	4036
   491  0000                     _T5CONbits	set	4035
   492  0000                     _T5CON	set	4035
   493  0000                     _TMR5L	set	4033
   494  0000                     _TMR5H	set	4034
   495  0000                     _T5CLK	set	4038
   496  0000                     _T5GATE	set	4037
   497  0000                     _T5GCON	set	4036
   498  0000                     _ADERRL	set	3950
   499  0000                     _ADERRH	set	3951
   500  0000                     _ADPREVL	set	3937
   501  0000                     _ADPREVH	set	3938
   502  0000                     _ADFLTRL	set	3954
   503  0000                     _ADFLTRH	set	3955
   504  0000                     _ADSTATbits	set	3941
   505  0000                     _ADACCL	set	3952
   506  0000                     _ADACCH	set	3953
   507  0000                     _ADCNT	set	3943
   508  0000                     _ADRESL	set	3939
   509  0000                     _ADRESH	set	3940
   510  0000                     _ADCON0bits	set	3936
   511  0000                     _ADCON0	set	3936
   512  0000                     _ADSTAT	set	3941
   513  0000                     _ADRPT	set	3942
   514  0000                     _ADSTPTH	set	3945
   515  0000                     _ADSTPTL	set	3944
   516  0000                     _ADUTHH	set	3949
   517  0000                     _ADUTHL	set	3948
   518  0000                     _ADLTHH	set	3947
   519  0000                     _ADLTHL	set	3946
   520  0000                     _PR6	set	4016
   521  0000                     _TMR6	set	4015
   522  0000                     _T6CONbits	set	4017
   523  0000                     _T6RSTbits	set	4020
   524  0000                     _T6HLTbits	set	4018
   525  0000                     _T6CON	set	4017
   526  0000                     _T6TMR	set	4015
   527  0000                     _T6PR	set	4016
   528  0000                     _T6RST	set	4020
   529  0000                     _T6HLT	set	4018
   530  0000                     _T6CLKCON	set	4019
   531  0000                     _INTCONbits	set	4082
   532  0000                     _TRISD	set	3972
   533  0000                     _TRISC	set	3971
   534  0000                     _TRISH	set	3976
   535  0000                     _TRISB	set	3970
   536  0000                     _TRISG	set	3975
   537  0000                     _TRISA	set	3969
   538  0000                     _TRISF	set	3974
   539  0000                     _TRISE	set	3973
   540  0000                     _LATH	set	3968
   541  0000                     _LATC	set	3963
   542  0000                     _LATG	set	3967
   543  0000                     _LATB	set	3962
   544  0000                     _LATF	set	3966
   545  0000                     _LATA	set	3961
   546  0000                     _LATD	set	3964
   547  0000                     _LATE	set	3965
   548  00F3FB                     STR_85:
   549  00F3FB  4C                 	db	76	;'L'
   550  00F3FC  69                 	db	105	;'i'
   551  00F3FD  73                 	db	115	;'s'
   552  00F3FE  74                 	db	116	;'t'
   553  00F3FF  20                 	db	32
   554  00F400  6F                 	db	111	;'o'
   555  00F401  66                 	db	102	;'f'
   556  00F402  20                 	db	32
   557  00F403  73                 	db	115	;'s'
   558  00F404  75                 	db	117	;'u'
   559  00F405  70                 	db	112	;'p'
   560  00F406  70                 	db	112	;'p'
   561  00F407  6F                 	db	111	;'o'
   562  00F408  72                 	db	114	;'r'
   563  00F409  74                 	db	116	;'t'
   564  00F40A  65                 	db	101	;'e'
   565  00F40B  64                 	db	100	;'d'
   566  00F40C  20                 	db	32
   567  00F40D  63                 	db	99	;'c'
   568  00F40E  6F                 	db	111	;'o'
   569  00F40F  6D                 	db	109	;'m'
   570  00F410  6D                 	db	109	;'m'
   571  00F411  61                 	db	97	;'a'
   572  00F412  6E                 	db	110	;'n'
   573  00F413  64                 	db	100	;'d'
   574  00F414  73                 	db	115	;'s'
   575  00F415  3A                 	db	58	;':'
   576  00F416  0A                 	db	10
   577  00F417  0D                 	db	13
   578  00F418  20                 	db	32
   579  00F419  20                 	db	32
   580  00F41A  20                 	db	32
   581  00F41B  52                 	db	82	;'R'
   582  00F41C  65                 	db	101	;'e'
   583  00F41D  73                 	db	115	;'s'
   584  00F41E  65                 	db	101	;'e'
   585  00F41F  74                 	db	116	;'t'
   586  00F420  3A                 	db	58	;':'
   587  00F421  20                 	db	32
   588  00F422  43                 	db	67	;'C'
   589  00F423  6C                 	db	108	;'l'
   590  00F424  65                 	db	101	;'e'
   591  00F425  61                 	db	97	;'a'
   592  00F426  72                 	db	114	;'r'
   593  00F427  73                 	db	115	;'s'
   594  00F428  20                 	db	32
   595  00F429  74                 	db	116	;'t'
   596  00F42A  68                 	db	104	;'h'
   597  00F42B  65                 	db	101	;'e'
   598  00F42C  20                 	db	32
   599  00F42D  74                 	db	116	;'t'
   600  00F42E  65                 	db	101	;'e'
   601  00F42F  72                 	db	114	;'r'
   602  00F430  6D                 	db	109	;'m'
   603  00F431  69                 	db	105	;'i'
   604  00F432  6E                 	db	110	;'n'
   605  00F433  61                 	db	97	;'a'
   606  00F434  6C                 	db	108	;'l'
   607  00F435  20                 	db	32
   608  00F436  61                 	db	97	;'a'
   609  00F437  6E                 	db	110	;'n'
   610  00F438  64                 	db	100	;'d'
   611  00F439  20                 	db	32
   612  00F43A  72                 	db	114	;'r'
   613  00F43B  65                 	db	101	;'e'
   614  00F43C  73                 	db	115	;'s'
   615  00F43D  65                 	db	101	;'e'
   616  00F43E  74                 	db	116	;'t'
   617  00F43F  73                 	db	115	;'s'
   618  00F440  20                 	db	32
   619  00F441  74                 	db	116	;'t'
   620  00F442  68                 	db	104	;'h'
   621  00F443  65                 	db	101	;'e'
   622  00F444  20                 	db	32
   623  00F445  6D                 	db	109	;'m'
   624  00F446  69                 	db	105	;'i'
   625  00F447  63                 	db	99	;'c'
   626  00F448  72                 	db	114	;'r'
   627  00F449  6F                 	db	111	;'o'
   628  00F44A  0A                 	db	10
   629  00F44B  0D                 	db	13
   630  00F44C  20                 	db	32
   631  00F44D  20                 	db	32
   632  00F44E  20                 	db	32
   633  00F44F  43                 	db	67	;'C'
   634  00F450  6C                 	db	108	;'l'
   635  00F451  65                 	db	101	;'e'
   636  00F452  61                 	db	97	;'a'
   637  00F453  72                 	db	114	;'r'
   638  00F454  3A                 	db	58	;':'
   639  00F455  20                 	db	32
   640  00F456  43                 	db	67	;'C'
   641  00F457  6C                 	db	108	;'l'
   642  00F458  65                 	db	101	;'e'
   643  00F459  61                 	db	97	;'a'
   644  00F45A  72                 	db	114	;'r'
   645  00F45B  73                 	db	115	;'s'
   646  00F45C  20                 	db	32
   647  00F45D  74                 	db	116	;'t'
   648  00F45E  68                 	db	104	;'h'
   649  00F45F  65                 	db	101	;'e'
   650  00F460  20                 	db	32
   651  00F461  74                 	db	116	;'t'
   652  00F462  65                 	db	101	;'e'
   653  00F463  72                 	db	114	;'r'
   654  00F464  6D                 	db	109	;'m'
   655  00F465  69                 	db	105	;'i'
   656  00F466  6E                 	db	110	;'n'
   657  00F467  61                 	db	97	;'a'
   658  00F468  6C                 	db	108	;'l'
   659  00F469  20                 	db	32
   660  00F46A  62                 	db	98	;'b'
   661  00F46B  75                 	db	117	;'u'
   662  00F46C  74                 	db	116	;'t'
   663  00F46D  20                 	db	32
   664  00F46E  64                 	db	100	;'d'
   665  00F46F  6F                 	db	111	;'o'
   666  00F470  65                 	db	101	;'e'
   667  00F471  73                 	db	115	;'s'
   668  00F472  6E                 	db	110	;'n'
   669  00F473  27                 	db	39
   670  00F474  74                 	db	116	;'t'
   671  00F475  20                 	db	32
   672  00F476  72                 	db	114	;'r'
   673  00F477  65                 	db	101	;'e'
   674  00F478  73                 	db	115	;'s'
   675  00F479  65                 	db	101	;'e'
   676  00F47A  74                 	db	116	;'t'
   677  00F47B  20                 	db	32
   678  00F47C  74                 	db	116	;'t'
   679  00F47D  68                 	db	104	;'h'
   680  00F47E  65                 	db	101	;'e'
   681  00F47F  20                 	db	32
   682  00F480  6D                 	db	109	;'m'
   683  00F481  69                 	db	105	;'i'
   684  00F482  63                 	db	99	;'c'
   685  00F483  72                 	db	114	;'r'
   686  00F484  6F                 	db	111	;'o'
   687  00F485  0A                 	db	10
   688  00F486  0D                 	db	13
   689  00F487  20                 	db	32
   690  00F488  20                 	db	32
   691  00F489  20                 	db	32
   692  00F48A  2A                 	db	42
   693  00F48B  49                 	db	73	;'I'
   694  00F48C  44                 	db	68	;'D'
   695  00F48D  4E                 	db	78	;'N'
   696  00F48E  3F                 	db	63	;'?'
   697  00F48F  3A                 	db	58	;':'
   698  00F490  20                 	db	32
   699  00F491  52                 	db	82	;'R'
   700  00F492  65                 	db	101	;'e'
   701  00F493  74                 	db	116	;'t'
   702  00F494  75                 	db	117	;'u'
   703  00F495  72                 	db	114	;'r'
   704  00F496  6E                 	db	110	;'n'
   705  00F497  73                 	db	115	;'s'
   706  00F498  20                 	db	32
   707  00F499  64                 	db	100	;'d'
   708  00F49A  65                 	db	101	;'e'
   709  00F49B  76                 	db	118	;'v'
   710  00F49C  69                 	db	105	;'i'
   711  00F49D  63                 	db	99	;'c'
   712  00F49E  65                 	db	101	;'e'
   713  00F49F  20                 	db	32
   714  00F4A0  69                 	db	105	;'i'
   715  00F4A1  64                 	db	100	;'d'
   716  00F4A2  65                 	db	101	;'e'
   717  00F4A3  6E                 	db	110	;'n'
   718  00F4A4  74                 	db	116	;'t'
   719  00F4A5  69                 	db	105	;'i'
   720  00F4A6  66                 	db	102	;'f'
   721  00F4A7  69                 	db	105	;'i'
   722  00F4A8  63                 	db	99	;'c'
   723  00F4A9  61                 	db	97	;'a'
   724  00F4AA  74                 	db	116	;'t'
   725  00F4AB  69                 	db	105	;'i'
   726  00F4AC  6F                 	db	111	;'o'
   727  00F4AD  6E                 	db	110	;'n'
   728  00F4AE  0A                 	db	10
   729  00F4AF  0D                 	db	13
   730  00F4B0  20                 	db	32
   731  00F4B1  20                 	db	32
   732  00F4B2  20                 	db	32
   733  00F4B3  4D                 	db	77	;'M'
   734  00F4B4  65                 	db	101	;'e'
   735  00F4B5  61                 	db	97	;'a'
   736  00F4B6  73                 	db	115	;'s'
   737  00F4B7  75                 	db	117	;'u'
   738  00F4B8  72                 	db	114	;'r'
   739  00F4B9  65                 	db	101	;'e'
   740  00F4BA  20                 	db	32
   741  00F4BB  50                 	db	80	;'P'
   742  00F4BC  4F                 	db	79	;'O'
   743  00F4BD  53                 	db	83	;'S'
   744  00F4BE  33                 	db	51	;'3'
   745  00F4BF  50                 	db	80	;'P'
   746  00F4C0  33                 	db	51	;'3'
   747  00F4C1  3F                 	db	63	;'?'
   748  00F4C2  3A                 	db	58	;':'
   749  00F4C3  20                 	db	32
   750  00F4C4  52                 	db	82	;'R'
   751  00F4C5  65                 	db	101	;'e'
   752  00F4C6  74                 	db	116	;'t'
   753  00F4C7  75                 	db	117	;'u'
   754  00F4C8  72                 	db	114	;'r'
   755  00F4C9  6E                 	db	110	;'n'
   756  00F4CA  73                 	db	115	;'s'
   757  00F4CB  20                 	db	32
   758  00F4CC  2B                 	db	43
   759  00F4CD  33                 	db	51	;'3'
   760  00F4CE  2E                 	db	46
   761  00F4CF  33                 	db	51	;'3'
   762  00F4D0  56                 	db	86	;'V'
   763  00F4D1  20                 	db	32
   764  00F4D2  41                 	db	65	;'A'
   765  00F4D3  44                 	db	68	;'D'
   766  00F4D4  43                 	db	67	;'C'
   767  00F4D5  20                 	db	32
   768  00F4D6  43                 	db	67	;'C'
   769  00F4D7  6F                 	db	111	;'o'
   770  00F4D8  6E                 	db	110	;'n'
   771  00F4D9  76                 	db	118	;'v'
   772  00F4DA  65                 	db	101	;'e'
   773  00F4DB  72                 	db	114	;'r'
   774  00F4DC  73                 	db	115	;'s'
   775  00F4DD  69                 	db	105	;'i'
   776  00F4DE  6F                 	db	111	;'o'
   777  00F4DF  6E                 	db	110	;'n'
   778  00F4E0  20                 	db	32
   779  00F4E1  69                 	db	105	;'i'
   780  00F4E2  6E                 	db	110	;'n'
   781  00F4E3  20                 	db	32
   782  00F4E4  76                 	db	118	;'v'
   783  00F4E5  6F                 	db	111	;'o'
   784  00F4E6  6C                 	db	108	;'l'
   785  00F4E7  74                 	db	116	;'t'
   786  00F4E8  73                 	db	115	;'s'
   787  00F4E9  0A                 	db	10
   788  00F4EA  0D                 	db	13
   789  00F4EB  20                 	db	32
   790  00F4EC  20                 	db	32
   791  00F4ED  20                 	db	32
   792  00F4EE  4D                 	db	77	;'M'
   793  00F4EF  65                 	db	101	;'e'
   794  00F4F0  61                 	db	97	;'a'
   795  00F4F1  73                 	db	115	;'s'
   796  00F4F2  75                 	db	117	;'u'
   797  00F4F3  72                 	db	114	;'r'
   798  00F4F4  65                 	db	101	;'e'
   799  00F4F5  20                 	db	32
   800  00F4F6  50                 	db	80	;'P'
   801  00F4F7  4F                 	db	79	;'O'
   802  00F4F8  53                 	db	83	;'S'
   803  00F4F9  31                 	db	49	;'1'
   804  00F4FA  32                 	db	50	;'2'
   805  00F4FB  3F                 	db	63	;'?'
   806  00F4FC  3A                 	db	58	;':'
   807  00F4FD  20                 	db	32
   808  00F4FE  52                 	db	82	;'R'
   809  00F4FF  65                 	db	101	;'e'
   810  00F500  74                 	db	116	;'t'
   811  00F501  75                 	db	117	;'u'
   812  00F502  72                 	db	114	;'r'
   813  00F503  6E                 	db	110	;'n'
   814  00F504  73                 	db	115	;'s'
   815  00F505  20                 	db	32
   816  00F506  2B                 	db	43
   817  00F507  31                 	db	49	;'1'
   818  00F508  32                 	db	50	;'2'
   819  00F509  56                 	db	86	;'V'
   820  00F50A  20                 	db	32
   821  00F50B  41                 	db	65	;'A'
   822  00F50C  44                 	db	68	;'D'
   823  00F50D  43                 	db	67	;'C'
   824  00F50E  20                 	db	32
   825  00F50F  43                 	db	67	;'C'
   826  00F510  6F                 	db	111	;'o'
   827  00F511  6E                 	db	110	;'n'
   828  00F512  76                 	db	118	;'v'
   829  00F513  65                 	db	101	;'e'
   830  00F514  72                 	db	114	;'r'
   831  00F515  73                 	db	115	;'s'
   832  00F516  69                 	db	105	;'i'
   833  00F517  6F                 	db	111	;'o'
   834  00F518  6E                 	db	110	;'n'
   835  00F519  20                 	db	32
   836  00F51A  69                 	db	105	;'i'
   837  00F51B  6E                 	db	110	;'n'
   838  00F51C  20                 	db	32
   839  00F51D  76                 	db	118	;'v'
   840  00F51E  6F                 	db	111	;'o'
   841  00F51F  6C                 	db	108	;'l'
   842  00F520  74                 	db	116	;'t'
   843  00F521  73                 	db	115	;'s'
   844  00F522  0A                 	db	10
   845  00F523  0D                 	db	13
   846  00F524  20                 	db	32
   847  00F525  20                 	db	32
   848  00F526  20                 	db	32
   849  00F527  4D                 	db	77	;'M'
   850  00F528  65                 	db	101	;'e'
   851  00F529  61                 	db	97	;'a'
   852  00F52A  73                 	db	115	;'s'
   853  00F52B  75                 	db	117	;'u'
   854  00F52C  72                 	db	114	;'r'
   855  00F52D  65                 	db	101	;'e'
   856  00F52E  20                 	db	32
   857  00F52F  44                 	db	68	;'D'
   858  00F530  69                 	db	105	;'i'
   859  00F531  65                 	db	101	;'e'
   860  00F532  20                 	db	32
   861  00F533  54                 	db	84	;'T'
   862  00F534  65                 	db	101	;'e'
   863  00F535  6D                 	db	109	;'m'
   864  00F536  70                 	db	112	;'p'
   865  00F537  3F                 	db	63	;'?'
   866  00F538  3A                 	db	58	;':'
   867  00F539  20                 	db	32
   868  00F53A  52                 	db	82	;'R'
   869  00F53B  65                 	db	101	;'e'
   870  00F53C  74                 	db	116	;'t'
   871  00F53D  75                 	db	117	;'u'
   872  00F53E  72                 	db	114	;'r'
   873  00F53F  6E                 	db	110	;'n'
   874  00F540  73                 	db	115	;'s'
   875  00F541  20                 	db	32
   876  00F542  74                 	db	116	;'t'
   877  00F543  68                 	db	104	;'h'
   878  00F544  65                 	db	101	;'e'
   879  00F545  20                 	db	32
   880  00F546  6D                 	db	109	;'m'
   881  00F547  69                 	db	105	;'i'
   882  00F548  63                 	db	99	;'c'
   883  00F549  72                 	db	114	;'r'
   884  00F54A  6F                 	db	111	;'o'
   885  00F54B  63                 	db	99	;'c'
   886  00F54C  6F                 	db	111	;'o'
   887  00F54D  6E                 	db	110	;'n'
   888  00F54E  74                 	db	116	;'t'
   889  00F54F  72                 	db	114	;'r'
   890  00F550  6F                 	db	111	;'o'
   891  00F551  6C                 	db	108	;'l'
   892  00F552  6C                 	db	108	;'l'
   893  00F553  65                 	db	101	;'e'
   894  00F554  72                 	db	114	;'r'
   895  00F555  20                 	db	32
   896  00F556  64                 	db	100	;'d'
   897  00F557  69                 	db	105	;'i'
   898  00F558  65                 	db	101	;'e'
   899  00F559  20                 	db	32
   900  00F55A  74                 	db	116	;'t'
   901  00F55B  65                 	db	101	;'e'
   902  00F55C  6D                 	db	109	;'m'
   903  00F55D  70                 	db	112	;'p'
   904  00F55E  65                 	db	101	;'e'
   905  00F55F  72                 	db	114	;'r'
   906  00F560  61                 	db	97	;'a'
   907  00F561  74                 	db	116	;'t'
   908  00F562  75                 	db	117	;'u'
   909  00F563  72                 	db	114	;'r'
   910  00F564  65                 	db	101	;'e'
   911  00F565  20                 	db	32
   912  00F566  69                 	db	105	;'i'
   913  00F567  6E                 	db	110	;'n'
   914  00F568  20                 	db	32
   915  00F569  64                 	db	100	;'d'
   916  00F56A  65                 	db	101	;'e'
   917  00F56B  67                 	db	103	;'g'
   918  00F56C  72                 	db	114	;'r'
   919  00F56D  65                 	db	101	;'e'
   920  00F56E  65                 	db	101	;'e'
   921  00F56F  73                 	db	115	;'s'
   922  00F570  20                 	db	32
   923  00F571  43                 	db	67	;'C'
   924  00F572  0A                 	db	10
   925  00F573  0D                 	db	13
   926  00F574  20                 	db	32
   927  00F575  20                 	db	32
   928  00F576  20                 	db	32
   929  00F577  4D                 	db	77	;'M'
   930  00F578  65                 	db	101	;'e'
   931  00F579  61                 	db	97	;'a'
   932  00F57A  73                 	db	115	;'s'
   933  00F57B  75                 	db	117	;'u'
   934  00F57C  72                 	db	114	;'r'
   935  00F57D  65                 	db	101	;'e'
   936  00F57E  20                 	db	32
   937  00F57F  44                 	db	68	;'D'
   938  00F580  65                 	db	101	;'e'
   939  00F581  74                 	db	116	;'t'
   940  00F582  65                 	db	101	;'e'
   941  00F583  63                 	db	99	;'c'
   942  00F584  74                 	db	116	;'t'
   943  00F585  65                 	db	101	;'e'
   944  00F586  64                 	db	100	;'d'
   945  00F587  20                 	db	32
   946  00F588  43                 	db	67	;'C'
   947  00F589  75                 	db	117	;'u'
   948  00F58A  72                 	db	114	;'r'
   949  00F58B  72                 	db	114	;'r'
   950  00F58C  65                 	db	101	;'e'
   951  00F58D  6E                 	db	110	;'n'
   952  00F58E  74                 	db	116	;'t'
   953  00F58F  3F                 	db	63	;'?'
   954  00F590  3A                 	db	58	;':'
   955  00F591  20                 	db	32
   956  00F592  52                 	db	82	;'R'
   957  00F593  65                 	db	101	;'e'
   958  00F594  74                 	db	116	;'t'
   959  00F595  75                 	db	117	;'u'
   960  00F596  72                 	db	114	;'r'
   961  00F597  6E                 	db	110	;'n'
   962  00F598  73                 	db	115	;'s'
   963  00F599  20                 	db	32
   964  00F59A  6D                 	db	109	;'m'
   965  00F59B  65                 	db	101	;'e'
   966  00F59C  61                 	db	97	;'a'
   967  00F59D  73                 	db	115	;'s'
   968  00F59E  75                 	db	117	;'u'
   969  00F59F  72                 	db	114	;'r'
   970  00F5A0  65                 	db	101	;'e'
   971  00F5A1  64                 	db	100	;'d'
   972  00F5A2  20                 	db	32
   973  00F5A3  6F                 	db	111	;'o'
   974  00F5A4  75                 	db	117	;'u'
   975  00F5A5  74                 	db	116	;'t'
   976  00F5A6  70                 	db	112	;'p'
   977  00F5A7  75                 	db	117	;'u'
   978  00F5A8  74                 	db	116	;'t'
   979  00F5A9  20                 	db	32
   980  00F5AA  63                 	db	99	;'c'
   981  00F5AB  75                 	db	117	;'u'
   982  00F5AC  72                 	db	114	;'r'
   983  00F5AD  72                 	db	114	;'r'
   984  00F5AE  65                 	db	101	;'e'
   985  00F5AF  6E                 	db	110	;'n'
   986  00F5B0  74                 	db	116	;'t'
   987  00F5B1  20                 	db	32
   988  00F5B2  69                 	db	105	;'i'
   989  00F5B3  6E                 	db	110	;'n'
   990  00F5B4  20                 	db	32
   991  00F5B5  61                 	db	97	;'a'
   992  00F5B6  6D                 	db	109	;'m'
   993  00F5B7  70                 	db	112	;'p'
   994  00F5B8  73                 	db	115	;'s'
   995  00F5B9  20                 	db	32
   996  00F5BA  61                 	db	97	;'a'
   997  00F5BB  73                 	db	115	;'s'
   998  00F5BC  20                 	db	32
   999  00F5BD  73                 	db	115	;'s'
  1000  00F5BE  65                 	db	101	;'e'
  1001  00F5BF  65                 	db	101	;'e'
  1002  00F5C0  6E                 	db	110	;'n'
  1003  00F5C1  20                 	db	32
  1004  00F5C2  62                 	db	98	;'b'
  1005  00F5C3  79                 	db	121	;'y'
  1006  00F5C4  20                 	db	32
  1007  00F5C5  41                 	db	65	;'A'
  1008  00F5C6  44                 	db	68	;'D'
  1009  00F5C7  43                 	db	67	;'C'
  1010  00F5C8  0A                 	db	10
  1011  00F5C9  0D                 	db	13
  1012  00F5CA  20                 	db	32
  1013  00F5CB  20                 	db	32
  1014  00F5CC  20                 	db	32
  1015  00F5CD  4D                 	db	77	;'M'
  1016  00F5CE  65                 	db	101	;'e'
  1017  00F5CF  61                 	db	97	;'a'
  1018  00F5D0  73                 	db	115	;'s'
  1019  00F5D1  75                 	db	117	;'u'
  1020  00F5D2  72                 	db	114	;'r'
  1021  00F5D3  65                 	db	101	;'e'
  1022  00F5D4  20                 	db	32
  1023  00F5D5  52                 	db	82	;'R'
  1024  00F5D6  4D                 	db	77	;'M'
  1025  00F5D7  53                 	db	83	;'S'
  1026  00F5D8  20                 	db	32
  1027  00F5D9  43                 	db	67	;'C'
  1028  00F5DA  75                 	db	117	;'u'
  1029  00F5DB  72                 	db	114	;'r'
  1030  00F5DC  72                 	db	114	;'r'
  1031  00F5DD  65                 	db	101	;'e'
  1032  00F5DE  6E                 	db	110	;'n'
  1033  00F5DF  74                 	db	116	;'t'
  1034  00F5E0  3F                 	db	63	;'?'
  1035  00F5E1  3A                 	db	58	;':'
  1036  00F5E2  20                 	db	32
  1037  00F5E3  52                 	db	82	;'R'
  1038  00F5E4  65                 	db	101	;'e'
  1039  00F5E5  74                 	db	116	;'t'
  1040  00F5E6  75                 	db	117	;'u'
  1041  00F5E7  72                 	db	114	;'r'
  1042  00F5E8  6E                 	db	110	;'n'
  1043  00F5E9  73                 	db	115	;'s'
  1044  00F5EA  20                 	db	32
  1045  00F5EB  74                 	db	116	;'t'
  1046  00F5EC  68                 	db	104	;'h'
  1047  00F5ED  65                 	db	101	;'e'
  1048  00F5EE  20                 	db	32
  1049  00F5EF  63                 	db	99	;'c'
  1050  00F5F0  61                 	db	97	;'a'
  1051  00F5F1  6C                 	db	108	;'l'
  1052  00F5F2  63                 	db	99	;'c'
  1053  00F5F3  75                 	db	117	;'u'
  1054  00F5F4  6C                 	db	108	;'l'
  1055  00F5F5  61                 	db	97	;'a'
  1056  00F5F6  74                 	db	116	;'t'
  1057  00F5F7  65                 	db	101	;'e'
  1058  00F5F8  64                 	db	100	;'d'
  1059  00F5F9  20                 	db	32
  1060  00F5FA  52                 	db	82	;'R'
  1061  00F5FB  4D                 	db	77	;'M'
  1062  00F5FC  53                 	db	83	;'S'
  1063  00F5FD  20                 	db	32
  1064  00F5FE  6F                 	db	111	;'o'
  1065  00F5FF  75                 	db	117	;'u'
  1066  00F600  74                 	db	116	;'t'
  1067  00F601  70                 	db	112	;'p'
  1068  00F602  75                 	db	117	;'u'
  1069  00F603  74                 	db	116	;'t'
  1070  00F604  20                 	db	32
  1071  00F605  63                 	db	99	;'c'
  1072  00F606  75                 	db	117	;'u'
  1073  00F607  72                 	db	114	;'r'
  1074  00F608  72                 	db	114	;'r'
  1075  00F609  65                 	db	101	;'e'
  1076  00F60A  6E                 	db	110	;'n'
  1077  00F60B  74                 	db	116	;'t'
  1078  00F60C  20                 	db	32
  1079  00F60D  66                 	db	102	;'f'
  1080  00F60E  72                 	db	114	;'r'
  1081  00F60F  6F                 	db	111	;'o'
  1082  00F610  6D                 	db	109	;'m'
  1083  00F611  20                 	db	32
  1084  00F612  6D                 	db	109	;'m'
  1085  00F613  65                 	db	101	;'e'
  1086  00F614  61                 	db	97	;'a'
  1087  00F615  73                 	db	115	;'s'
  1088  00F616  75                 	db	117	;'u'
  1089  00F617  72                 	db	114	;'r'
  1090  00F618  65                 	db	101	;'e'
  1091  00F619  6D                 	db	109	;'m'
  1092  00F61A  65                 	db	101	;'e'
  1093  00F61B  6E                 	db	110	;'n'
  1094  00F61C  74                 	db	116	;'t'
  1095  00F61D  73                 	db	115	;'s'
  1096  00F61E  20                 	db	32
  1097  00F61F  61                 	db	97	;'a'
  1098  00F620  6E                 	db	110	;'n'
  1099  00F621  64                 	db	100	;'d'
  1100  00F622  20                 	db	32
  1101  00F623  54                 	db	84	;'T'
  1102  00F624  52                 	db	82	;'R'
  1103  00F625  49                 	db	73	;'I'
  1104  00F626  41                 	db	65	;'A'
  1105  00F627  43                 	db	67	;'C'
  1106  00F628  20                 	db	32
  1107  00F629  66                 	db	102	;'f'
  1108  00F62A  69                 	db	105	;'i'
  1109  00F62B  72                 	db	114	;'r'
  1110  00F62C  69                 	db	105	;'i'
  1111  00F62D  6E                 	db	110	;'n'
  1112  00F62E  67                 	db	103	;'g'
  1113  00F62F  20                 	db	32
  1114  00F630  61                 	db	97	;'a'
  1115  00F631  6E                 	db	110	;'n'
  1116  00F632  67                 	db	103	;'g'
  1117  00F633  6C                 	db	108	;'l'
  1118  00F634  65                 	db	101	;'e'
  1119  00F635  0A                 	db	10
  1120  00F636  0D                 	db	13
  1121  00F637  20                 	db	32
  1122  00F638  20                 	db	32
  1123  00F639  20                 	db	32
  1124  00F63A  4D                 	db	77	;'M'
  1125  00F63B  65                 	db	101	;'e'
  1126  00F63C  61                 	db	97	;'a'
  1127  00F63D  73                 	db	115	;'s'
  1128  00F63E  75                 	db	117	;'u'
  1129  00F63F  72                 	db	114	;'r'
  1130  00F640  65                 	db	101	;'e'
  1131  00F641  20                 	db	32
  1132  00F642  52                 	db	82	;'R'
  1133  00F643  4D                 	db	77	;'M'
  1134  00F644  53                 	db	83	;'S'
  1135  00F645  20                 	db	32
  1136  00F646  56                 	db	86	;'V'
  1137  00F647  6F                 	db	111	;'o'
  1138  00F648  6C                 	db	108	;'l'
  1139  00F649  74                 	db	116	;'t'
  1140  00F64A  61                 	db	97	;'a'
  1141  00F64B  67                 	db	103	;'g'
  1142  00F64C  65                 	db	101	;'e'
  1143  00F64D  3F                 	db	63	;'?'
  1144  00F64E  3A                 	db	58	;':'
  1145  00F64F  20                 	db	32
  1146  00F650  52                 	db	82	;'R'
  1147  00F651  65                 	db	101	;'e'
  1148  00F652  74                 	db	116	;'t'
  1149  00F653  75                 	db	117	;'u'
  1150  00F654  72                 	db	114	;'r'
  1151  00F655  6E                 	db	110	;'n'
  1152  00F656  73                 	db	115	;'s'
  1153  00F657  20                 	db	32
  1154  00F658  74                 	db	116	;'t'
  1155  00F659  68                 	db	104	;'h'
  1156  00F65A  65                 	db	101	;'e'
  1157  00F65B  20                 	db	32
  1158  00F65C  63                 	db	99	;'c'
  1159  00F65D  61                 	db	97	;'a'
  1160  00F65E  6C                 	db	108	;'l'
  1161  00F65F  63                 	db	99	;'c'
  1162  00F660  75                 	db	117	;'u'
  1163  00F661  6C                 	db	108	;'l'
  1164  00F662  61                 	db	97	;'a'
  1165  00F663  74                 	db	116	;'t'
  1166  00F664  65                 	db	101	;'e'
  1167  00F665  64                 	db	100	;'d'
  1168  00F666  20                 	db	32
  1169  00F667  52                 	db	82	;'R'
  1170  00F668  4D                 	db	77	;'M'
  1171  00F669  53                 	db	83	;'S'
  1172  00F66A  20                 	db	32
  1173  00F66B  6F                 	db	111	;'o'
  1174  00F66C  75                 	db	117	;'u'
  1175  00F66D  74                 	db	116	;'t'
  1176  00F66E  70                 	db	112	;'p'
  1177  00F66F  75                 	db	117	;'u'
  1178  00F670  74                 	db	116	;'t'
  1179  00F671  20                 	db	32
  1180  00F672  76                 	db	118	;'v'
  1181  00F673  6F                 	db	111	;'o'
  1182  00F674  6C                 	db	108	;'l'
  1183  00F675  74                 	db	116	;'t'
  1184  00F676  61                 	db	97	;'a'
  1185  00F677  67                 	db	103	;'g'
  1186  00F678  65                 	db	101	;'e'
  1187  00F679  20                 	db	32
  1188  00F67A  66                 	db	102	;'f'
  1189  00F67B  72                 	db	114	;'r'
  1190  00F67C  6F                 	db	111	;'o'
  1191  00F67D  6D                 	db	109	;'m'
  1192  00F67E  20                 	db	32
  1193  00F67F  54                 	db	84	;'T'
  1194  00F680  52                 	db	82	;'R'
  1195  00F681  49                 	db	73	;'I'
  1196  00F682  41                 	db	65	;'A'
  1197  00F683  43                 	db	67	;'C'
  1198  00F684  20                 	db	32
  1199  00F685  66                 	db	102	;'f'
  1200  00F686  69                 	db	105	;'i'
  1201  00F687  72                 	db	114	;'r'
  1202  00F688  69                 	db	105	;'i'
  1203  00F689  6E                 	db	110	;'n'
  1204  00F68A  67                 	db	103	;'g'
  1205  00F68B  20                 	db	32
  1206  00F68C  61                 	db	97	;'a'
  1207  00F68D  6E                 	db	110	;'n'
  1208  00F68E  67                 	db	103	;'g'
  1209  00F68F  6C                 	db	108	;'l'
  1210  00F690  65                 	db	101	;'e'
  1211  00F691  0A                 	db	10
  1212  00F692  0D                 	db	13
  1213  00F693  20                 	db	32
  1214  00F694  20                 	db	32
  1215  00F695  20                 	db	32
  1216  00F696  4D                 	db	77	;'M'
  1217  00F697  65                 	db	101	;'e'
  1218  00F698  61                 	db	97	;'a'
  1219  00F699  73                 	db	115	;'s'
  1220  00F69A  75                 	db	117	;'u'
  1221  00F69B  72                 	db	114	;'r'
  1222  00F69C  65                 	db	101	;'e'
  1223  00F69D  20                 	db	32
  1224  00F69E  46                 	db	70	;'F'
  1225  00F69F  56                 	db	86	;'V'
  1226  00F6A0  52                 	db	82	;'R'
  1227  00F6A1  3F                 	db	63	;'?'
  1228  00F6A2  3A                 	db	58	;':'
  1229  00F6A3  20                 	db	32
  1230  00F6A4  52                 	db	82	;'R'
  1231  00F6A5  65                 	db	101	;'e'
  1232  00F6A6  74                 	db	116	;'t'
  1233  00F6A7  75                 	db	117	;'u'
  1234  00F6A8  72                 	db	114	;'r'
  1235  00F6A9  6E                 	db	110	;'n'
  1236  00F6AA  73                 	db	115	;'s'
  1237  00F6AB  20                 	db	32
  1238  00F6AC  74                 	db	116	;'t'
  1239  00F6AD  68                 	db	104	;'h'
  1240  00F6AE  65                 	db	101	;'e'
  1241  00F6AF  20                 	db	32
  1242  00F6B0  69                 	db	105	;'i'
  1243  00F6B1  6E                 	db	110	;'n'
  1244  00F6B2  74                 	db	116	;'t'
  1245  00F6B3  65                 	db	101	;'e'
  1246  00F6B4  72                 	db	114	;'r'
  1247  00F6B5  6E                 	db	110	;'n'
  1248  00F6B6  61                 	db	97	;'a'
  1249  00F6B7  6C                 	db	108	;'l'
  1250  00F6B8  20                 	db	32
  1251  00F6B9  66                 	db	102	;'f'
  1252  00F6BA  69                 	db	105	;'i'
  1253  00F6BB  78                 	db	120	;'x'
  1254  00F6BC  65                 	db	101	;'e'
  1255  00F6BD  64                 	db	100	;'d'
  1256  00F6BE  20                 	db	32
  1257  00F6BF  76                 	db	118	;'v'
  1258  00F6C0  6F                 	db	111	;'o'
  1259  00F6C1  6C                 	db	108	;'l'
  1260  00F6C2  74                 	db	116	;'t'
  1261  00F6C3  61                 	db	97	;'a'
  1262  00F6C4  67                 	db	103	;'g'
  1263  00F6C5  65                 	db	101	;'e'
  1264  00F6C6  20                 	db	32
  1265  00F6C7  72                 	db	114	;'r'
  1266  00F6C8  65                 	db	101	;'e'
  1267  00F6C9  66                 	db	102	;'f'
  1268  00F6CA  65                 	db	101	;'e'
  1269  00F6CB  72                 	db	114	;'r'
  1270  00F6CC  65                 	db	101	;'e'
  1271  00F6CD  6E                 	db	110	;'n'
  1272  00F6CE  63                 	db	99	;'c'
  1273  00F6CF  65                 	db	101	;'e'
  1274  00F6D0  20                 	db	32
  1275  00F6D1  62                 	db	98	;'b'
  1276  00F6D2  75                 	db	117	;'u'
  1277  00F6D3  66                 	db	102	;'f'
  1278  00F6D4  66                 	db	102	;'f'
  1279  00F6D5  65                 	db	101	;'e'
  1280  00F6D6  72                 	db	114	;'r'
  1281  00F6D7  20                 	db	32
  1282  00F6D8  31                 	db	49	;'1'
  1283  00F6D9  20                 	db	32
  1284  00F6DA  6F                 	db	111	;'o'
  1285  00F6DB  75                 	db	117	;'u'
  1286  00F6DC  74                 	db	116	;'t'
  1287  00F6DD  70                 	db	112	;'p'
  1288  00F6DE  75                 	db	117	;'u'
  1289  00F6DF  74                 	db	116	;'t'
  1290  00F6E0  20                 	db	32
  1291  00F6E1  69                 	db	105	;'i'
  1292  00F6E2  6E                 	db	110	;'n'
  1293  00F6E3  20                 	db	32
  1294  00F6E4  76                 	db	118	;'v'
  1295  00F6E5  6F                 	db	111	;'o'
  1296  00F6E6  6C                 	db	108	;'l'
  1297  00F6E7  74                 	db	116	;'t'
  1298  00F6E8  73                 	db	115	;'s'
  1299  00F6E9  0A                 	db	10
  1300  00F6EA  0D                 	db	13
  1301  00F6EB  20                 	db	32
  1302  00F6EC  20                 	db	32
  1303  00F6ED  20                 	db	32
  1304  00F6EE  4D                 	db	77	;'M'
  1305  00F6EF  65                 	db	101	;'e'
  1306  00F6F0  61                 	db	97	;'a'
  1307  00F6F1  73                 	db	115	;'s'
  1308  00F6F2  75                 	db	117	;'u'
  1309  00F6F3  72                 	db	114	;'r'
  1310  00F6F4  65                 	db	101	;'e'
  1311  00F6F5  20                 	db	32
  1312  00F6F6  41                 	db	65	;'A'
  1313  00F6F7  56                 	db	86	;'V'
  1314  00F6F8  53                 	db	83	;'S'
  1315  00F6F9  53                 	db	83	;'S'
  1316  00F6FA  3F                 	db	63	;'?'
  1317  00F6FB  3A                 	db	58	;':'
  1318  00F6FC  20                 	db	32
  1319  00F6FD  52                 	db	82	;'R'
  1320  00F6FE  65                 	db	101	;'e'
  1321  00F6FF  74                 	db	116	;'t'
  1322  00F700  75                 	db	117	;'u'
  1323  00F701  72                 	db	114	;'r'
  1324  00F702  6E                 	db	110	;'n'
  1325  00F703  73                 	db	115	;'s'
  1326  00F704  20                 	db	32
  1327  00F705  74                 	db	116	;'t'
  1328  00F706  68                 	db	104	;'h'
  1329  00F707  65                 	db	101	;'e'
  1330  00F708  20                 	db	32
  1331  00F709  6D                 	db	109	;'m'
  1332  00F70A  65                 	db	101	;'e'
  1333  00F70B  61                 	db	97	;'a'
  1334  00F70C  73                 	db	115	;'s'
  1335  00F70D  75                 	db	117	;'u'
  1336  00F70E  72                 	db	114	;'r'
  1337  00F70F  65                 	db	101	;'e'
  1338  00F710  64                 	db	100	;'d'
  1339  00F711  20                 	db	32
  1340  00F712  76                 	db	118	;'v'
  1341  00F713  61                 	db	97	;'a'
  1342  00F714  6C                 	db	108	;'l'
  1343  00F715  75                 	db	117	;'u'
  1344  00F716  65                 	db	101	;'e'
  1345  00F717  20                 	db	32
  1346  00F718  6F                 	db	111	;'o'
  1347  00F719  66                 	db	102	;'f'
  1348  00F71A  20                 	db	32
  1349  00F71B  41                 	db	65	;'A'
  1350  00F71C  6E                 	db	110	;'n'
  1351  00F71D  61                 	db	97	;'a'
  1352  00F71E  6C                 	db	108	;'l'
  1353  00F71F  6F                 	db	111	;'o'
  1354  00F720  67                 	db	103	;'g'
  1355  00F721  20                 	db	32
  1356  00F722  56                 	db	86	;'V'
  1357  00F723  53                 	db	83	;'S'
  1358  00F724  53                 	db	83	;'S'
  1359  00F725  20                 	db	32
  1360  00F726  69                 	db	105	;'i'
  1361  00F727  6E                 	db	110	;'n'
  1362  00F728  20                 	db	32
  1363  00F729  76                 	db	118	;'v'
  1364  00F72A  6F                 	db	111	;'o'
  1365  00F72B  6C                 	db	108	;'l'
  1366  00F72C  74                 	db	116	;'t'
  1367  00F72D  73                 	db	115	;'s'
  1368  00F72E  0A                 	db	10
  1369  00F72F  0D                 	db	13
  1370  00F730  20                 	db	32
  1371  00F731  20                 	db	32
  1372  00F732  20                 	db	32
  1373  00F733  4F                 	db	79	;'O'
  1374  00F734  6E                 	db	110	;'n'
  1375  00F735  20                 	db	32
  1376  00F736  54                 	db	84	;'T'
  1377  00F737  69                 	db	105	;'i'
  1378  00F738  6D                 	db	109	;'m'
  1379  00F739  65                 	db	101	;'e'
  1380  00F73A  3F                 	db	63	;'?'
  1381  00F73B  3A                 	db	58	;':'
  1382  00F73C  20                 	db	32
  1383  00F73D  52                 	db	82	;'R'
  1384  00F73E  65                 	db	101	;'e'
  1385  00F73F  74                 	db	116	;'t'
  1386  00F740  75                 	db	117	;'u'
  1387  00F741  72                 	db	114	;'r'
  1388  00F742  6E                 	db	110	;'n'
  1389  00F743  73                 	db	115	;'s'
  1390  00F744  20                 	db	32
  1391  00F745  64                 	db	100	;'d'
  1392  00F746  65                 	db	101	;'e'
  1393  00F747  76                 	db	118	;'v'
  1394  00F748  69                 	db	105	;'i'
  1395  00F749  63                 	db	99	;'c'
  1396  00F74A  65                 	db	101	;'e'
  1397  00F74B  20                 	db	32
  1398  00F74C  6F                 	db	111	;'o'
  1399  00F74D  6E                 	db	110	;'n'
  1400  00F74E  20                 	db	32
  1401  00F74F  74                 	db	116	;'t'
  1402  00F750  69                 	db	105	;'i'
  1403  00F751  6D                 	db	109	;'m'
  1404  00F752  65                 	db	101	;'e'
  1405  00F753  20                 	db	32
  1406  00F754  73                 	db	115	;'s'
  1407  00F755  69                 	db	105	;'i'
  1408  00F756  6E                 	db	110	;'n'
  1409  00F757  63                 	db	99	;'c'
  1410  00F758  65                 	db	101	;'e'
  1411  00F759  20                 	db	32
  1412  00F75A  6C                 	db	108	;'l'
  1413  00F75B  61                 	db	97	;'a'
  1414  00F75C  73                 	db	115	;'s'
  1415  00F75D  74                 	db	116	;'t'
  1416  00F75E  20                 	db	32
  1417  00F75F  64                 	db	100	;'d'
  1418  00F760  65                 	db	101	;'e'
  1419  00F761  76                 	db	118	;'v'
  1420  00F762  69                 	db	105	;'i'
  1421  00F763  63                 	db	99	;'c'
  1422  00F764  65                 	db	101	;'e'
  1423  00F765  20                 	db	32
  1424  00F766  72                 	db	114	;'r'
  1425  00F767  65                 	db	101	;'e'
  1426  00F768  73                 	db	115	;'s'
  1427  00F769  65                 	db	101	;'e'
  1428  00F76A  74                 	db	116	;'t'
  1429  00F76B  0A                 	db	10
  1430  00F76C  0D                 	db	13
  1431  00F76D  20                 	db	32
  1432  00F76E  20                 	db	32
  1433  00F76F  20                 	db	32
  1434  00F770  45                 	db	69	;'E'
  1435  00F771  6E                 	db	110	;'n'
  1436  00F772  61                 	db	97	;'a'
  1437  00F773  62                 	db	98	;'b'
  1438  00F774  6C                 	db	108	;'l'
  1439  00F775  65                 	db	101	;'e'
  1440  00F776  20                 	db	32
  1441  00F777  44                 	db	68	;'D'
  1442  00F778  69                 	db	105	;'i'
  1443  00F779  6D                 	db	109	;'m'
  1444  00F77A  6D                 	db	109	;'m'
  1445  00F77B  69                 	db	105	;'i'
  1446  00F77C  6E                 	db	110	;'n'
  1447  00F77D  67                 	db	103	;'g'
  1448  00F77E  3A                 	db	58	;':'
  1449  00F77F  20                 	db	32
  1450  00F780  45                 	db	69	;'E'
  1451  00F781  6E                 	db	110	;'n'
  1452  00F782  61                 	db	97	;'a'
  1453  00F783  62                 	db	98	;'b'
  1454  00F784  6C                 	db	108	;'l'
  1455  00F785  65                 	db	101	;'e'
  1456  00F786  20                 	db	32
  1457  00F787  54                 	db	84	;'T'
  1458  00F788  52                 	db	82	;'R'
  1459  00F789  49                 	db	73	;'I'
  1460  00F78A  41                 	db	65	;'A'
  1461  00F78B  43                 	db	67	;'C'
  1462  00F78C  20                 	db	32
  1463  00F78D  6F                 	db	111	;'o'
  1464  00F78E  75                 	db	117	;'u'
  1465  00F78F  74                 	db	116	;'t'
  1466  00F790  70                 	db	112	;'p'
  1467  00F791  75                 	db	117	;'u'
  1468  00F792  74                 	db	116	;'t'
  1469  00F793  20                 	db	32
  1470  00F794  64                 	db	100	;'d'
  1471  00F795  69                 	db	105	;'i'
  1472  00F796  6D                 	db	109	;'m'
  1473  00F797  6D                 	db	109	;'m'
  1474  00F798  69                 	db	105	;'i'
  1475  00F799  6E                 	db	110	;'n'
  1476  00F79A  67                 	db	103	;'g'
  1477  00F79B  0A                 	db	10
  1478  00F79C  0D                 	db	13
  1479  00F79D  20                 	db	32
  1480  00F79E  20                 	db	32
  1481  00F79F  20                 	db	32
  1482  00F7A0  44                 	db	68	;'D'
  1483  00F7A1  69                 	db	105	;'i'
  1484  00F7A2  73                 	db	115	;'s'
  1485  00F7A3  61                 	db	97	;'a'
  1486  00F7A4  62                 	db	98	;'b'
  1487  00F7A5  6C                 	db	108	;'l'
  1488  00F7A6  65                 	db	101	;'e'
  1489  00F7A7  20                 	db	32
  1490  00F7A8  44                 	db	68	;'D'
  1491  00F7A9  69                 	db	105	;'i'
  1492  00F7AA  6D                 	db	109	;'m'
  1493  00F7AB  6D                 	db	109	;'m'
  1494  00F7AC  69                 	db	105	;'i'
  1495  00F7AD  6E                 	db	110	;'n'
  1496  00F7AE  67                 	db	103	;'g'
  1497  00F7AF  3A                 	db	58	;':'
  1498  00F7B0  20                 	db	32
  1499  00F7B1  44                 	db	68	;'D'
  1500  00F7B2  69                 	db	105	;'i'
  1501  00F7B3  73                 	db	115	;'s'
  1502  00F7B4  61                 	db	97	;'a'
  1503  00F7B5  62                 	db	98	;'b'
  1504  00F7B6  6C                 	db	108	;'l'
  1505  00F7B7  65                 	db	101	;'e'
  1506  00F7B8  20                 	db	32
  1507  00F7B9  54                 	db	84	;'T'
  1508  00F7BA  52                 	db	82	;'R'
  1509  00F7BB  49                 	db	73	;'I'
  1510  00F7BC  41                 	db	65	;'A'
  1511  00F7BD  43                 	db	67	;'C'
  1512  00F7BE  20                 	db	32
  1513  00F7BF  6F                 	db	111	;'o'
  1514  00F7C0  75                 	db	117	;'u'
  1515  00F7C1  74                 	db	116	;'t'
  1516  00F7C2  70                 	db	112	;'p'
  1517  00F7C3  75                 	db	117	;'u'
  1518  00F7C4  74                 	db	116	;'t'
  1519  00F7C5  20                 	db	32
  1520  00F7C6  64                 	db	100	;'d'
  1521  00F7C7  69                 	db	105	;'i'
  1522  00F7C8  6D                 	db	109	;'m'
  1523  00F7C9  6D                 	db	109	;'m'
  1524  00F7CA  69                 	db	105	;'i'
  1525  00F7CB  6E                 	db	110	;'n'
  1526  00F7CC  67                 	db	103	;'g'
  1527  00F7CD  0A                 	db	10
  1528  00F7CE  0D                 	db	13
  1529  00F7CF  20                 	db	32
  1530  00F7D0  20                 	db	32
  1531  00F7D1  20                 	db	32
  1532  00F7D2  45                 	db	69	;'E'
  1533  00F7D3  6E                 	db	110	;'n'
  1534  00F7D4  61                 	db	97	;'a'
  1535  00F7D5  62                 	db	98	;'b'
  1536  00F7D6  6C                 	db	108	;'l'
  1537  00F7D7  65                 	db	101	;'e'
  1538  00F7D8  20                 	db	32
  1539  00F7D9  4C                 	db	76	;'L'
  1540  00F7DA  6F                 	db	111	;'o'
  1541  00F7DB  61                 	db	97	;'a'
  1542  00F7DC  64                 	db	100	;'d'
  1543  00F7DD  3A                 	db	58	;':'
  1544  00F7DE  20                 	db	32
  1545  00F7DF  45                 	db	69	;'E'
  1546  00F7E0  6E                 	db	110	;'n'
  1547  00F7E1  61                 	db	97	;'a'
  1548  00F7E2  62                 	db	98	;'b'
  1549  00F7E3  6C                 	db	108	;'l'
  1550  00F7E4  65                 	db	101	;'e'
  1551  00F7E5  73                 	db	115	;'s'
  1552  00F7E6  20                 	db	32
  1553  00F7E7  74                 	db	116	;'t'
  1554  00F7E8  68                 	db	104	;'h'
  1555  00F7E9  65                 	db	101	;'e'
  1556  00F7EA  20                 	db	32
  1557  00F7EB  6F                 	db	111	;'o'
  1558  00F7EC  75                 	db	117	;'u'
  1559  00F7ED  74                 	db	116	;'t'
  1560  00F7EE  70                 	db	112	;'p'
  1561  00F7EF  75                 	db	117	;'u'
  1562  00F7F0  74                 	db	116	;'t'
  1563  00F7F1  20                 	db	32
  1564  00F7F2  54                 	db	84	;'T'
  1565  00F7F3  52                 	db	82	;'R'
  1566  00F7F4  49                 	db	73	;'I'
  1567  00F7F5  41                 	db	65	;'A'
  1568  00F7F6  43                 	db	67	;'C'
  1569  00F7F7  20                 	db	32
  1570  00F7F8  77                 	db	119	;'w'
  1571  00F7F9  69                 	db	105	;'i'
  1572  00F7FA  74                 	db	116	;'t'
  1573  00F7FB  68                 	db	104	;'h'
  1574  00F7FC  20                 	db	32
  1575  00F7FD  64                 	db	100	;'d'
  1576  00F7FE  69                 	db	105	;'i'
  1577  00F7FF  6D                 	db	109	;'m'
  1578  00F800  6D                 	db	109	;'m'
  1579  00F801  69                 	db	105	;'i'
  1580  00F802  6E                 	db	110	;'n'
  1581  00F803  67                 	db	103	;'g'
  1582  00F804  20                 	db	32
  1583  00F805  64                 	db	100	;'d'
  1584  00F806  69                 	db	105	;'i'
  1585  00F807  73                 	db	115	;'s'
  1586  00F808  61                 	db	97	;'a'
  1587  00F809  62                 	db	98	;'b'
  1588  00F80A  6C                 	db	108	;'l'
  1589  00F80B  65                 	db	101	;'e'
  1590  00F80C  64                 	db	100	;'d'
  1591  00F80D  0A                 	db	10
  1592  00F80E  0D                 	db	13
  1593  00F80F  20                 	db	32
  1594  00F810  20                 	db	32
  1595  00F811  20                 	db	32
  1596  00F812  44                 	db	68	;'D'
  1597  00F813  69                 	db	105	;'i'
  1598  00F814  73                 	db	115	;'s'
  1599  00F815  61                 	db	97	;'a'
  1600  00F816  62                 	db	98	;'b'
  1601  00F817  6C                 	db	108	;'l'
  1602  00F818  65                 	db	101	;'e'
  1603  00F819  20                 	db	32
  1604  00F81A  4C                 	db	76	;'L'
  1605  00F81B  6F                 	db	111	;'o'
  1606  00F81C  61                 	db	97	;'a'
  1607  00F81D  64                 	db	100	;'d'
  1608  00F81E  3A                 	db	58	;':'
  1609  00F81F  20                 	db	32
  1610  00F820  44                 	db	68	;'D'
  1611  00F821  69                 	db	105	;'i'
  1612  00F822  73                 	db	115	;'s'
  1613  00F823  61                 	db	97	;'a'
  1614  00F824  62                 	db	98	;'b'
  1615  00F825  6C                 	db	108	;'l'
  1616  00F826  65                 	db	101	;'e'
  1617  00F827  73                 	db	115	;'s'
  1618  00F828  20                 	db	32
  1619  00F829  74                 	db	116	;'t'
  1620  00F82A  68                 	db	104	;'h'
  1621  00F82B  65                 	db	101	;'e'
  1622  00F82C  20                 	db	32
  1623  00F82D  6F                 	db	111	;'o'
  1624  00F82E  75                 	db	117	;'u'
  1625  00F82F  74                 	db	116	;'t'
  1626  00F830  70                 	db	112	;'p'
  1627  00F831  75                 	db	117	;'u'
  1628  00F832  74                 	db	116	;'t'
  1629  00F833  20                 	db	32
  1630  00F834  54                 	db	84	;'T'
  1631  00F835  52                 	db	82	;'R'
  1632  00F836  49                 	db	73	;'I'
  1633  00F837  41                 	db	65	;'A'
  1634  00F838  43                 	db	67	;'C'
  1635  00F839  20                 	db	32
  1636  00F83A  63                 	db	99	;'c'
  1637  00F83B  6F                 	db	111	;'o'
  1638  00F83C  6D                 	db	109	;'m'
  1639  00F83D  70                 	db	112	;'p'
  1640  00F83E  6C                 	db	108	;'l'
  1641  00F83F  65                 	db	101	;'e'
  1642  00F840  74                 	db	116	;'t'
  1643  00F841  65                 	db	101	;'e'
  1644  00F842  6C                 	db	108	;'l'
  1645  00F843  79                 	db	121	;'y'
  1646  00F844  0A                 	db	10
  1647  00F845  0D                 	db	13
  1648  00F846  20                 	db	32
  1649  00F847  20                 	db	32
  1650  00F848  20                 	db	32
  1651  00F849  53                 	db	83	;'S'
  1652  00F84A  65                 	db	101	;'e'
  1653  00F84B  74                 	db	116	;'t'
  1654  00F84C  20                 	db	32
  1655  00F84D  44                 	db	68	;'D'
  1656  00F84E  69                 	db	105	;'i'
  1657  00F84F  6D                 	db	109	;'m'
  1658  00F850  6D                 	db	109	;'m'
  1659  00F851  69                 	db	105	;'i'
  1660  00F852  6E                 	db	110	;'n'
  1661  00F853  67                 	db	103	;'g'
  1662  00F854  20                 	db	32
  1663  00F855  50                 	db	80	;'P'
  1664  00F856  65                 	db	101	;'e'
  1665  00F857  72                 	db	114	;'r'
  1666  00F858  63                 	db	99	;'c'
  1667  00F859  65                 	db	101	;'e'
  1668  00F85A  6E                 	db	110	;'n'
  1669  00F85B  74                 	db	116	;'t'
  1670  00F85C  61                 	db	97	;'a'
  1671  00F85D  67                 	db	103	;'g'
  1672  00F85E  65                 	db	101	;'e'
  1673  00F85F  3A                 	db	58	;':'
  1674  00F860  20                 	db	32
  1675  00F861  3C                 	db	60	;'<'
  1676  00F862  78                 	db	120	;'x'
  1677  00F863  3E                 	db	62	;'>'
  1678  00F864  3A                 	db	58	;':'
  1679  00F865  20                 	db	32
  1680  00F866  53                 	db	83	;'S'
  1681  00F867  65                 	db	101	;'e'
  1682  00F868  74                 	db	116	;'t'
  1683  00F869  73                 	db	115	;'s'
  1684  00F86A  20                 	db	32
  1685  00F86B  74                 	db	116	;'t'
  1686  00F86C  68                 	db	104	;'h'
  1687  00F86D  65                 	db	101	;'e'
  1688  00F86E  20                 	db	32
  1689  00F86F  6F                 	db	111	;'o'
  1690  00F870  75                 	db	117	;'u'
  1691  00F871  74                 	db	116	;'t'
  1692  00F872  70                 	db	112	;'p'
  1693  00F873  75                 	db	117	;'u'
  1694  00F874  74                 	db	116	;'t'
  1695  00F875  20                 	db	32
  1696  00F876  64                 	db	100	;'d'
  1697  00F877  69                 	db	105	;'i'
  1698  00F878  6D                 	db	109	;'m'
  1699  00F879  6D                 	db	109	;'m'
  1700  00F87A  69                 	db	105	;'i'
  1701  00F87B  6E                 	db	110	;'n'
  1702  00F87C  67                 	db	103	;'g'
  1703  00F87D  20                 	db	32
  1704  00F87E  70                 	db	112	;'p'
  1705  00F87F  65                 	db	101	;'e'
  1706  00F880  72                 	db	114	;'r'
  1707  00F881  63                 	db	99	;'c'
  1708  00F882  65                 	db	101	;'e'
  1709  00F883  6E                 	db	110	;'n'
  1710  00F884  74                 	db	116	;'t'
  1711  00F885  61                 	db	97	;'a'
  1712  00F886  67                 	db	103	;'g'
  1713  00F887  65                 	db	101	;'e'
  1714  00F888  20                 	db	32
  1715  00F889  61                 	db	97	;'a'
  1716  00F88A  73                 	db	115	;'s'
  1717  00F88B  20                 	db	32
  1718  00F88C  78                 	db	120	;'x'
  1719  00F88D  20                 	db	32
  1720  00F88E  70                 	db	112	;'p'
  1721  00F88F  65                 	db	101	;'e'
  1722  00F890  72                 	db	114	;'r'
  1723  00F891  63                 	db	99	;'c'
  1724  00F892  65                 	db	101	;'e'
  1725  00F893  6E                 	db	110	;'n'
  1726  00F894  74                 	db	116	;'t'
  1727  00F895  0A                 	db	10
  1728  00F896  0D                 	db	13
  1729  00F897  20                 	db	32
  1730  00F898  20                 	db	32
  1731  00F899  20                 	db	32
  1732  00F89A  48                 	db	72	;'H'
  1733  00F89B  65                 	db	101	;'e'
  1734  00F89C  6C                 	db	108	;'l'
  1735  00F89D  70                 	db	112	;'p'
  1736  00F89E  3A                 	db	58	;':'
  1737  00F89F  20                 	db	32
  1738  00F8A0  54                 	db	84	;'T'
  1739  00F8A1  68                 	db	104	;'h'
  1740  00F8A2  69                 	db	105	;'i'
  1741  00F8A3  73                 	db	115	;'s'
  1742  00F8A4  20                 	db	32
  1743  00F8A5  6D                 	db	109	;'m'
  1744  00F8A6  65                 	db	101	;'e'
  1745  00F8A7  73                 	db	115	;'s'
  1746  00F8A8  73                 	db	115	;'s'
  1747  00F8A9  61                 	db	97	;'a'
  1748  00F8AA  67                 	db	103	;'g'
  1749  00F8AB  65                 	db	101	;'e'
  1750  00F8AC  2C                 	db	44
  1751  00F8AD  20                 	db	32
  1752  00F8AE  6C                 	db	108	;'l'
  1753  00F8AF  69                 	db	105	;'i'
  1754  00F8B0  73                 	db	115	;'s'
  1755  00F8B1  74                 	db	116	;'t'
  1756  00F8B2  73                 	db	115	;'s'
  1757  00F8B3  20                 	db	32
  1758  00F8B4  63                 	db	99	;'c'
  1759  00F8B5  6F                 	db	111	;'o'
  1760  00F8B6  6D                 	db	109	;'m'
  1761  00F8B7  6D                 	db	109	;'m'
  1762  00F8B8  61                 	db	97	;'a'
  1763  00F8B9  6E                 	db	110	;'n'
  1764  00F8BA  64                 	db	100	;'d'
  1765  00F8BB  73                 	db	115	;'s'
  1766  00F8BC  0A                 	db	10
  1767  00F8BD  0D                 	db	13
  1768  00F8BE  00                 	db	0
  1769  00F8BF  20                 	db	32
  1770  00F8C0  20                 	db	32
  1771  00F8C1  20                 	db	32
  1772  00F8C2  20                 	db	32
  1773  00F8C3  42                 	db	66	;'B'
  1774  00F8C4  6F                 	db	111	;'o'
  1775  00F8C5  6F                 	db	111	;'o'
  1776  00F8C6  74                 	db	116	;'t'
  1777  00F8C7  20                 	db	32
  1778  00F8C8  63                 	db	99	;'c'
  1779  00F8C9  6F                 	db	111	;'o'
  1780  00F8CA  6D                 	db	109	;'m'
  1781  00F8CB  70                 	db	112	;'p'
  1782  00F8CC  6C                 	db	108	;'l'
  1783  00F8CD  65                 	db	101	;'e'
  1784  00F8CE  74                 	db	116	;'t'
  1785  00F8CF  65                 	db	101	;'e'
  1786  00F8D0  0A                 	db	10
  1787  00F8D1  0D                 	db	13
  1788  00F8D2  20                 	db	32
  1789  00F8D3  20                 	db	32
  1790  00F8D4  20                 	db	32
  1791  00F8D5  20                 	db	32
  1792  00F8D6  50                 	db	80	;'P'
  1793  00F8D7  49                 	db	73	;'I'
  1794  00F8D8  43                 	db	67	;'C'
  1795  00F8D9  31                 	db	49	;'1'
  1796  00F8DA  38                 	db	56	;'8'
  1797  00F8DB  46                 	db	70	;'F'
  1798  00F8DC  36                 	db	54	;'6'
  1799  00F8DD  37                 	db	55	;'7'
  1800  00F8DE  4B                 	db	75	;'K'
  1801  00F8DF  34                 	db	52	;'4'
  1802  00F8E0  30                 	db	48	;'0'
  1803  00F8E1  20                 	db	32
  1804  00F8E2  6D                 	db	109	;'m'
  1805  00F8E3  54                 	db	84	;'T'
  1806  00F8E4  6F                 	db	111	;'o'
  1807  00F8E5  75                 	db	117	;'u'
  1808  00F8E6  63                 	db	99	;'c'
  1809  00F8E7  68                 	db	104	;'h'
  1810  00F8E8  20                 	db	32
  1811  00F8E9  54                 	db	84	;'T'
  1812  00F8EA  65                 	db	101	;'e'
  1813  00F8EB  73                 	db	115	;'s'
  1814  00F8EC  74                 	db	116	;'t'
  1815  00F8ED  20                 	db	32
  1816  00F8EE  42                 	db	66	;'B'
  1817  00F8EF  6F                 	db	111	;'o'
  1818  00F8F0  61                 	db	97	;'a'
  1819  00F8F1  72                 	db	114	;'r'
  1820  00F8F2  64                 	db	100	;'d'
  1821  00F8F3  0A                 	db	10
  1822  00F8F4  0D                 	db	13
  1823  00F8F5  20                 	db	32
  1824  00F8F6  20                 	db	32
  1825  00F8F7  20                 	db	32
  1826  00F8F8  20                 	db	32
  1827  00F8F9  45                 	db	69	;'E'
  1828  00F8FA  76                 	db	118	;'v'
  1829  00F8FB  61                 	db	97	;'a'
  1830  00F8FC  6C                 	db	108	;'l'
  1831  00F8FD  75                 	db	117	;'u'
  1832  00F8FE  61                 	db	97	;'a'
  1833  00F8FF  74                 	db	116	;'t'
  1834  00F900  65                 	db	101	;'e'
  1835  00F901  73                 	db	115	;'s'
  1836  00F902  20                 	db	32
  1837  00F903  74                 	db	116	;'t'
  1838  00F904  68                 	db	104	;'h'
  1839  00F905  65                 	db	101	;'e'
  1840  00F906  20                 	db	32
  1841  00F907  6D                 	db	109	;'m'
  1842  00F908  54                 	db	84	;'T'
  1843  00F909  6F                 	db	111	;'o'
  1844  00F90A  75                 	db	117	;'u'
  1845  00F90B  63                 	db	99	;'c'
  1846  00F90C  68                 	db	104	;'h'
  1847  00F90D  20                 	db	32
  1848  00F90E  63                 	db	99	;'c'
  1849  00F90F  61                 	db	97	;'a'
  1850  00F910  70                 	db	112	;'p'
  1851  00F911  61                 	db	97	;'a'
  1852  00F912  63                 	db	99	;'c'
  1853  00F913  69                 	db	105	;'i'
  1854  00F914  74                 	db	116	;'t'
  1855  00F915  69                 	db	105	;'i'
  1856  00F916  76                 	db	118	;'v'
  1857  00F917  65                 	db	101	;'e'
  1858  00F918  20                 	db	32
  1859  00F919  74                 	db	116	;'t'
  1860  00F91A  6F                 	db	111	;'o'
  1861  00F91B  75                 	db	117	;'u'
  1862  00F91C  63                 	db	99	;'c'
  1863  00F91D  68                 	db	104	;'h'
  1864  00F91E  20                 	db	32
  1865  00F91F  6C                 	db	108	;'l'
  1866  00F920  69                 	db	105	;'i'
  1867  00F921  62                 	db	98	;'b'
  1868  00F922  72                 	db	114	;'r'
  1869  00F923  61                 	db	97	;'a'
  1870  00F924  72                 	db	114	;'r'
  1871  00F925  79                 	db	121	;'y'
  1872  00F926  20                 	db	32
  1873  00F927  64                 	db	100	;'d'
  1874  00F928  69                 	db	105	;'i'
  1875  00F929  73                 	db	115	;'s'
  1876  00F92A  74                 	db	116	;'t'
  1877  00F92B  72                 	db	114	;'r'
  1878  00F92C  69                 	db	105	;'i'
  1879  00F92D  62                 	db	98	;'b'
  1880  00F92E  75                 	db	117	;'u'
  1881  00F92F  74                 	db	116	;'t'
  1882  00F930  65                 	db	101	;'e'
  1883  00F931  64                 	db	100	;'d'
  1884  00F932  20                 	db	32
  1885  00F933  62                 	db	98	;'b'
  1886  00F934  79                 	db	121	;'y'
  1887  00F935  20                 	db	32
  1888  00F936  4D                 	db	77	;'M'
  1889  00F937  69                 	db	105	;'i'
  1890  00F938  63                 	db	99	;'c'
  1891  00F939  72                 	db	114	;'r'
  1892  00F93A  6F                 	db	111	;'o'
  1893  00F93B  63                 	db	99	;'c'
  1894  00F93C  68                 	db	104	;'h'
  1895  00F93D  69                 	db	105	;'i'
  1896  00F93E  70                 	db	112	;'p'
  1897  00F93F  0A                 	db	10
  1898  00F940  0D                 	db	13
  1899  00F941  20                 	db	32
  1900  00F942  20                 	db	32
  1901  00F943  20                 	db	32
  1902  00F944  20                 	db	32
  1903  00F945  53                 	db	83	;'S'
  1904  00F946  65                 	db	101	;'e'
  1905  00F947  74                 	db	116	;'t'
  1906  00F948  73                 	db	115	;'s'
  1907  00F949  20                 	db	32
  1908  00F94A  74                 	db	116	;'t'
  1909  00F94B  68                 	db	104	;'h'
  1910  00F94C  65                 	db	101	;'e'
  1911  00F94D  20                 	db	32
  1912  00F94E  73                 	db	115	;'s'
  1913  00F94F  74                 	db	116	;'t'
  1914  00F950  61                 	db	97	;'a'
  1915  00F951  74                 	db	116	;'t'
  1916  00F952  65                 	db	101	;'e'
  1917  00F953  20                 	db	32
  1918  00F954  6F                 	db	111	;'o'
  1919  00F955  66                 	db	102	;'f'
  1920  00F956  20                 	db	32
  1921  00F957  66                 	db	102	;'f'
  1922  00F958  69                 	db	105	;'i'
  1923  00F959  76                 	db	118	;'v'
  1924  00F95A  65                 	db	101	;'e'
  1925  00F95B  20                 	db	32
  1926  00F95C  4C                 	db	76	;'L'
  1927  00F95D  45                 	db	69	;'E'
  1928  00F95E  44                 	db	68	;'D'
  1929  00F95F  73                 	db	115	;'s'
  1930  00F960  20                 	db	32
  1931  00F961  62                 	db	98	;'b'
  1932  00F962  61                 	db	97	;'a'
  1933  00F963  73                 	db	115	;'s'
  1934  00F964  65                 	db	101	;'e'
  1935  00F965  64                 	db	100	;'d'
  1936  00F966  20                 	db	32
  1937  00F967  6F                 	db	111	;'o'
  1938  00F968  6E                 	db	110	;'n'
  1939  00F969  20                 	db	32
  1940  00F96A  6D                 	db	109	;'m'
  1941  00F96B  54                 	db	84	;'T'
  1942  00F96C  6F                 	db	111	;'o'
  1943  00F96D  75                 	db	117	;'u'
  1944  00F96E  63                 	db	99	;'c'
  1945  00F96F  68                 	db	104	;'h'
  1946  00F970  20                 	db	32
  1947  00F971  63                 	db	99	;'c'
  1948  00F972  61                 	db	97	;'a'
  1949  00F973  70                 	db	112	;'p'
  1950  00F974  61                 	db	97	;'a'
  1951  00F975  63                 	db	99	;'c'
  1952  00F976  69                 	db	105	;'i'
  1953  00F977  74                 	db	116	;'t'
  1954  00F978  69                 	db	105	;'i'
  1955  00F979  76                 	db	118	;'v'
  1956  00F97A  65                 	db	101	;'e'
  1957  00F97B  20                 	db	32
  1958  00F97C  70                 	db	112	;'p'
  1959  00F97D  75                 	db	117	;'u'
  1960  00F97E  73                 	db	115	;'s'
  1961  00F97F  68                 	db	104	;'h'
  1962  00F980  62                 	db	98	;'b'
  1963  00F981  75                 	db	117	;'u'
  1964  00F982  74                 	db	116	;'t'
  1965  00F983  74                 	db	116	;'t'
  1966  00F984  6F                 	db	111	;'o'
  1967  00F985  6E                 	db	110	;'n'
  1968  00F986  73                 	db	115	;'s'
  1969  00F987  0A                 	db	10
  1970  00F988  0D                 	db	13
  1971  00F989  20                 	db	32
  1972  00F98A  20                 	db	32
  1973  00F98B  20                 	db	32
  1974  00F98C  20                 	db	32
  1975  00F98D  42                 	db	66	;'B'
  1976  00F98E  61                 	db	97	;'a'
  1977  00F98F  75                 	db	117	;'u'
  1978  00F990  64                 	db	100	;'d'
  1979  00F991  20                 	db	32
  1980  00F992  72                 	db	114	;'r'
  1981  00F993  61                 	db	97	;'a'
  1982  00F994  74                 	db	116	;'t'
  1983  00F995  65                 	db	101	;'e'
  1984  00F996  3A                 	db	58	;':'
  1985  00F997  20                 	db	32
  1986  00F998  31                 	db	49	;'1'
  1987  00F999  31                 	db	49	;'1'
  1988  00F99A  35                 	db	53	;'5'
  1989  00F99B  32                 	db	50	;'2'
  1990  00F99C  30                 	db	48	;'0'
  1991  00F99D  30                 	db	48	;'0'
  1992  00F99E  20                 	db	32
  1993  00F99F  62                 	db	98	;'b'
  1994  00F9A0  70                 	db	112	;'p'
  1995  00F9A1  73                 	db	115	;'s'
  1996  00F9A2  0A                 	db	10
  1997  00F9A3  0D                 	db	13
  1998  00F9A4  20                 	db	32
  1999  00F9A5  20                 	db	32
  2000  00F9A6  20                 	db	32
  2001  00F9A7  20                 	db	32
  2002  00F9A8  4E                 	db	78	;'N'
  2003  00F9A9  6F                 	db	111	;'o'
  2004  00F9AA  20                 	db	32
  2005  00F9AB  70                 	db	112	;'p'
  2006  00F9AC  61                 	db	97	;'a'
  2007  00F9AD  72                 	db	114	;'r'
  2008  00F9AE  69                 	db	105	;'i'
  2009  00F9AF  74                 	db	116	;'t'
  2010  00F9B0  79                 	db	121	;'y'
  2011  00F9B1  2C                 	db	44
  2012  00F9B2  20                 	db	32
  2013  00F9B3  38                 	db	56	;'8'
  2014  00F9B4  20                 	db	32
  2015  00F9B5  62                 	db	98	;'b'
  2016  00F9B6  69                 	db	105	;'i'
  2017  00F9B7  74                 	db	116	;'t'
  2018  00F9B8  73                 	db	115	;'s'
  2019  00F9B9  2C                 	db	44
  2020  00F9BA  20                 	db	32
  2021  00F9BB  6E                 	db	110	;'n'
  2022  00F9BC  6F                 	db	111	;'o'
  2023  00F9BD  20                 	db	32
  2024  00F9BE  66                 	db	102	;'f'
  2025  00F9BF  6C                 	db	108	;'l'
  2026  00F9C0  6F                 	db	111	;'o'
  2027  00F9C1  77                 	db	119	;'w'
  2028  00F9C2  20                 	db	32
  2029  00F9C3  63                 	db	99	;'c'
  2030  00F9C4  6F                 	db	111	;'o'
  2031  00F9C5  6E                 	db	110	;'n'
  2032  00F9C6  74                 	db	116	;'t'
  2033  00F9C7  72                 	db	114	;'r'
  2034  00F9C8  6F                 	db	111	;'o'
  2035  00F9C9  6C                 	db	108	;'l'
  2036  00F9CA  2C                 	db	44
  2037  00F9CB  20                 	db	32
  2038  00F9CC  31                 	db	49	;'1'
  2039  00F9CD  20                 	db	32
  2040  00F9CE  73                 	db	115	;'s'
  2041  00F9CF  74                 	db	116	;'t'
  2042  00F9D0  6F                 	db	111	;'o'
  2043  00F9D1  70                 	db	112	;'p'
  2044  00F9D2  20                 	db	32
  2045  00F9D3  62                 	db	98	;'b'
  2046  00F9D4  69                 	db	105	;'i'
  2047  00F9D5  74                 	db	116	;'t'
  2048  00F9D6  0A                 	db	10
  2049  00F9D7  0D                 	db	13
  2050  00F9D8  20                 	db	32
  2051  00F9D9  20                 	db	32
  2052  00F9DA  20                 	db	32
  2053  00F9DB  20                 	db	32
  2054  00F9DC  43                 	db	67	;'C'
  2055  00F9DD  6F                 	db	111	;'o'
  2056  00F9DE  6D                 	db	109	;'m'
  2057  00F9DF  6D                 	db	109	;'m'
  2058  00F9E0  61                 	db	97	;'a'
  2059  00F9E1  6E                 	db	110	;'n'
  2060  00F9E2  64                 	db	100	;'d'
  2061  00F9E3  73                 	db	115	;'s'
  2062  00F9E4  20                 	db	32
  2063  00F9E5  61                 	db	97	;'a'
  2064  00F9E6  72                 	db	114	;'r'
  2065  00F9E7  65                 	db	101	;'e'
  2066  00F9E8  20                 	db	32
  2067  00F9E9  63                 	db	99	;'c'
  2068  00F9EA  61                 	db	97	;'a'
  2069  00F9EB  73                 	db	115	;'s'
  2070  00F9EC  65                 	db	101	;'e'
  2071  00F9ED  20                 	db	32
  2072  00F9EE  73                 	db	115	;'s'
  2073  00F9EF  65                 	db	101	;'e'
  2074  00F9F0  6E                 	db	110	;'n'
  2075  00F9F1  73                 	db	115	;'s'
  2076  00F9F2  69                 	db	105	;'i'
  2077  00F9F3  74                 	db	116	;'t'
  2078  00F9F4  69                 	db	105	;'i'
  2079  00F9F5  76                 	db	118	;'v'
  2080  00F9F6  65                 	db	101	;'e'
  2081  00F9F7  0A                 	db	10
  2082  00F9F8  0D                 	db	13
  2083  00F9F9  20                 	db	32
  2084  00F9FA  20                 	db	32
  2085  00F9FB  20                 	db	32
  2086  00F9FC  20                 	db	32
  2087  00F9FD  45                 	db	69	;'E'
  2088  00F9FE  6E                 	db	110	;'n'
  2089  00F9FF  74                 	db	116	;'t'
  2090  00FA00  65                 	db	101	;'e'
  2091  00FA01  72                 	db	114	;'r'
  2092  00FA02  20                 	db	32
  2093  00FA03  61                 	db	97	;'a'
  2094  00FA04  20                 	db	32
  2095  00FA05  63                 	db	99	;'c'
  2096  00FA06  6F                 	db	111	;'o'
  2097  00FA07  6D                 	db	109	;'m'
  2098  00FA08  6D                 	db	109	;'m'
  2099  00FA09  61                 	db	97	;'a'
  2100  00FA0A  6E                 	db	110	;'n'
  2101  00FA0B  64                 	db	100	;'d'
  2102  00FA0C  2C                 	db	44
  2103  00FA0D  20                 	db	32
  2104  00FA0E  6F                 	db	111	;'o'
  2105  00FA0F  72                 	db	114	;'r'
  2106  00FA10  20                 	db	32
  2107  00FA11  65                 	db	101	;'e'
  2108  00FA12  6E                 	db	110	;'n'
  2109  00FA13  74                 	db	116	;'t'
  2110  00FA14  65                 	db	101	;'e'
  2111  00FA15  72                 	db	114	;'r'
  2112  00FA16  20                 	db	32
  2113  00FA17  48                 	db	72	;'H'
  2114  00FA18  65                 	db	101	;'e'
  2115  00FA19  6C                 	db	108	;'l'
  2116  00FA1A  70                 	db	112	;'p'
  2117  00FA1B  20                 	db	32
  2118  00FA1C  66                 	db	102	;'f'
  2119  00FA1D  6F                 	db	111	;'o'
  2120  00FA1E  72                 	db	114	;'r'
  2121  00FA1F  20                 	db	32
  2122  00FA20  6C                 	db	108	;'l'
  2123  00FA21  69                 	db	105	;'i'
  2124  00FA22  73                 	db	115	;'s'
  2125  00FA23  74                 	db	116	;'t'
  2126  00FA24  20                 	db	32
  2127  00FA25  6F                 	db	111	;'o'
  2128  00FA26  66                 	db	102	;'f'
  2129  00FA27  20                 	db	32
  2130  00FA28  63                 	db	99	;'c'
  2131  00FA29  6F                 	db	111	;'o'
  2132  00FA2A  6D                 	db	109	;'m'
  2133  00FA2B  6D                 	db	109	;'m'
  2134  00FA2C  61                 	db	97	;'a'
  2135  00FA2D  6E                 	db	110	;'n'
  2136  00FA2E  64                 	db	100	;'d'
  2137  00FA2F  73                 	db	115	;'s'
  2138  00FA30  0A                 	db	10
  2139  00FA31  0D                 	db	13
  2140  00FA32  00                 	db	0
  2141  00FA33                     STR_77:
  2142  00FA33  49                 	db	73	;'I'
  2143  00FA34  66                 	db	102	;'f'
  2144  00FA35  20                 	db	32
  2145  00FA36  79                 	db	121	;'y'
  2146  00FA37  6F                 	db	111	;'o'
  2147  00FA38  75                 	db	117	;'u'
  2148  00FA39  27                 	db	39
  2149  00FA3A  64                 	db	100	;'d'
  2150  00FA3B  20                 	db	32
  2151  00FA3C  6C                 	db	108	;'l'
  2152  00FA3D  69                 	db	105	;'i'
  2153  00FA3E  6B                 	db	107	;'k'
  2154  00FA3F  65                 	db	101	;'e'
  2155  00FA40  20                 	db	32
  2156  00FA41  74                 	db	116	;'t'
  2157  00FA42  6F                 	db	111	;'o'
  2158  00FA43  20                 	db	32
  2159  00FA44  63                 	db	99	;'c'
  2160  00FA45  6F                 	db	111	;'o'
  2161  00FA46  6D                 	db	109	;'m'
  2162  00FA47  70                 	db	112	;'p'
  2163  00FA48  6C                 	db	108	;'l'
  2164  00FA49  65                 	db	101	;'e'
  2165  00FA4A  74                 	db	116	;'t'
  2166  00FA4B  65                 	db	101	;'e'
  2167  00FA4C  6C                 	db	108	;'l'
  2168  00FA4D  79                 	db	121	;'y'
  2169  00FA4E  20                 	db	32
  2170  00FA4F  65                 	db	101	;'e'
  2171  00FA50  6E                 	db	110	;'n'
  2172  00FA51  61                 	db	97	;'a'
  2173  00FA52  62                 	db	98	;'b'
  2174  00FA53  6C                 	db	108	;'l'
  2175  00FA54  65                 	db	101	;'e'
  2176  00FA55  20                 	db	32
  2177  00FA56  6F                 	db	111	;'o'
  2178  00FA57  72                 	db	114	;'r'
  2179  00FA58  20                 	db	32
  2180  00FA59  64                 	db	100	;'d'
  2181  00FA5A  69                 	db	105	;'i'
  2182  00FA5B  73                 	db	115	;'s'
  2183  00FA5C  61                 	db	97	;'a'
  2184  00FA5D  62                 	db	98	;'b'
  2185  00FA5E  6C                 	db	108	;'l'
  2186  00FA5F  65                 	db	101	;'e'
  2187  00FA60  20                 	db	32
  2188  00FA61  74                 	db	116	;'t'
  2189  00FA62  68                 	db	104	;'h'
  2190  00FA63  65                 	db	101	;'e'
  2191  00FA64  20                 	db	32
  2192  00FA65  6C                 	db	108	;'l'
  2193  00FA66  6F                 	db	111	;'o'
  2194  00FA67  61                 	db	97	;'a'
  2195  00FA68  64                 	db	100	;'d'
  2196  00FA69  2C                 	db	44
  2197  00FA6A  20                 	db	32
  2198  00FA6B  64                 	db	100	;'d'
  2199  00FA6C  69                 	db	105	;'i'
  2200  00FA6D  73                 	db	115	;'s'
  2201  00FA6E  61                 	db	97	;'a'
  2202  00FA6F  62                 	db	98	;'b'
  2203  00FA70  6C                 	db	108	;'l'
  2204  00FA71  65                 	db	101	;'e'
  2205  00FA72  20                 	db	32
  2206  00FA73  64                 	db	100	;'d'
  2207  00FA74  69                 	db	105	;'i'
  2208  00FA75  6D                 	db	109	;'m'
  2209  00FA76  6D                 	db	109	;'m'
  2210  00FA77  69                 	db	105	;'i'
  2211  00FA78  6E                 	db	110	;'n'
  2212  00FA79  67                 	db	103	;'g'
  2213  00FA7A  20                 	db	32
  2214  00FA7B  61                 	db	97	;'a'
  2215  00FA7C  6E                 	db	110	;'n'
  2216  00FA7D  64                 	db	100	;'d'
  2217  00FA7E  20                 	db	32
  2218  00FA7F  75                 	db	117	;'u'
  2219  00FA80  73                 	db	115	;'s'
  2220  00FA81  65                 	db	101	;'e'
  2221  00FA82  20                 	db	32
  2222  00FA83  72                 	db	114	;'r'
  2223  00FA84  65                 	db	101	;'e'
  2224  00FA85  73                 	db	115	;'s'
  2225  00FA86  70                 	db	112	;'p'
  2226  00FA87  65                 	db	101	;'e'
  2227  00FA88  63                 	db	99	;'c'
  2228  00FA89  74                 	db	116	;'t'
  2229  00FA8A  69                 	db	105	;'i'
  2230  00FA8B  76                 	db	118	;'v'
  2231  00FA8C  65                 	db	101	;'e'
  2232  00FA8D  20                 	db	32
  2233  00FA8E  63                 	db	99	;'c'
  2234  00FA8F  6F                 	db	111	;'o'
  2235  00FA90  6D                 	db	109	;'m'
  2236  00FA91  6D                 	db	109	;'m'
  2237  00FA92  61                 	db	97	;'a'
  2238  00FA93  6E                 	db	110	;'n'
  2239  00FA94  64                 	db	100	;'d'
  2240  00FA95  73                 	db	115	;'s'
  2241  00FA96  0A                 	db	10
  2242  00FA97  0D                 	db	13
  2243  00FA98  00                 	db	0
  2244  00FA99                     STR_76:
  2245  00FA99  45                 	db	69	;'E'
  2246  00FA9A  52                 	db	82	;'R'
  2247  00FA9B  52                 	db	82	;'R'
  2248  00FA9C  4F                 	db	79	;'O'
  2249  00FA9D  52                 	db	82	;'R'
  2250  00FA9E  3A                 	db	58	;':'
  2251  00FA9F  20                 	db	32
  2252  00FAA0  50                 	db	80	;'P'
  2253  00FAA1  6C                 	db	108	;'l'
  2254  00FAA2  65                 	db	101	;'e'
  2255  00FAA3  61                 	db	97	;'a'
  2256  00FAA4  73                 	db	115	;'s'
  2257  00FAA5  65                 	db	101	;'e'
  2258  00FAA6  20                 	db	32
  2259  00FAA7  73                 	db	115	;'s'
  2260  00FAA8  65                 	db	101	;'e'
  2261  00FAA9  74                 	db	116	;'t'
  2262  00FAAA  20                 	db	32
  2263  00FAAB  64                 	db	100	;'d'
  2264  00FAAC  69                 	db	105	;'i'
  2265  00FAAD  6D                 	db	109	;'m'
  2266  00FAAE  6D                 	db	109	;'m'
  2267  00FAAF  69                 	db	105	;'i'
  2268  00FAB0  6E                 	db	110	;'n'
  2269  00FAB1  67                 	db	103	;'g'
  2270  00FAB2  20                 	db	32
  2271  00FAB3  70                 	db	112	;'p'
  2272  00FAB4  65                 	db	101	;'e'
  2273  00FAB5  72                 	db	114	;'r'
  2274  00FAB6  63                 	db	99	;'c'
  2275  00FAB7  65                 	db	101	;'e'
  2276  00FAB8  6E                 	db	110	;'n'
  2277  00FAB9  74                 	db	116	;'t'
  2278  00FABA  61                 	db	97	;'a'
  2279  00FABB  67                 	db	103	;'g'
  2280  00FABC  65                 	db	101	;'e'
  2281  00FABD  20                 	db	32
  2282  00FABE  74                 	db	116	;'t'
  2283  00FABF  6F                 	db	111	;'o'
  2284  00FAC0  20                 	db	32
  2285  00FAC1  61                 	db	97	;'a'
  2286  00FAC2  6E                 	db	110	;'n'
  2287  00FAC3  20                 	db	32
  2288  00FAC4  69                 	db	105	;'i'
  2289  00FAC5  6E                 	db	110	;'n'
  2290  00FAC6  74                 	db	116	;'t'
  2291  00FAC7  65                 	db	101	;'e'
  2292  00FAC8  67                 	db	103	;'g'
  2293  00FAC9  65                 	db	101	;'e'
  2294  00FACA  72                 	db	114	;'r'
  2295  00FACB  20                 	db	32
  2296  00FACC  67                 	db	103	;'g'
  2297  00FACD  72                 	db	114	;'r'
  2298  00FACE  65                 	db	101	;'e'
  2299  00FACF  61                 	db	97	;'a'
  2300  00FAD0  74                 	db	116	;'t'
  2301  00FAD1  65                 	db	101	;'e'
  2302  00FAD2  72                 	db	114	;'r'
  2303  00FAD3  20                 	db	32
  2304  00FAD4  74                 	db	116	;'t'
  2305  00FAD5  68                 	db	104	;'h'
  2306  00FAD6  61                 	db	97	;'a'
  2307  00FAD7  6E                 	db	110	;'n'
  2308  00FAD8  20                 	db	32
  2309  00FAD9  30                 	db	48	;'0'
  2310  00FADA  20                 	db	32
  2311  00FADB  61                 	db	97	;'a'
  2312  00FADC  6E                 	db	110	;'n'
  2313  00FADD  64                 	db	100	;'d'
  2314  00FADE  20                 	db	32
  2315  00FADF  6C                 	db	108	;'l'
  2316  00FAE0  65                 	db	101	;'e'
  2317  00FAE1  73                 	db	115	;'s'
  2318  00FAE2  73                 	db	115	;'s'
  2319  00FAE3  20                 	db	32
  2320  00FAE4  74                 	db	116	;'t'
  2321  00FAE5  68                 	db	104	;'h'
  2322  00FAE6  61                 	db	97	;'a'
  2323  00FAE7  6E                 	db	110	;'n'
  2324  00FAE8  20                 	db	32
  2325  00FAE9  31                 	db	49	;'1'
  2326  00FAEA  30                 	db	48	;'0'
  2327  00FAEB  30                 	db	48	;'0'
  2328  00FAEC  0A                 	db	10
  2329  00FAED  0D                 	db	13
  2330  00FAEE  00                 	db	0
  2331  00FAEF                     STR_81:
  2332  00FAEF  54                 	db	84	;'T'
  2333  00FAF0  68                 	db	104	;'h'
  2334  00FAF1  69                 	db	105	;'i'
  2335  00FAF2  73                 	db	115	;'s'
  2336  00FAF3  20                 	db	32
  2337  00FAF4  63                 	db	99	;'c'
  2338  00FAF5  6F                 	db	111	;'o'
  2339  00FAF6  72                 	db	114	;'r'
  2340  00FAF7  72                 	db	114	;'r'
  2341  00FAF8  65                 	db	101	;'e'
  2342  00FAF9  73                 	db	115	;'s'
  2343  00FAFA  70                 	db	112	;'p'
  2344  00FAFB  6F                 	db	111	;'o'
  2345  00FAFC  6E                 	db	110	;'n'
  2346  00FAFD  64                 	db	100	;'d'
  2347  00FAFE  73                 	db	115	;'s'
  2348  00FAFF  20                 	db	32
  2349  00FB00  74                 	db	116	;'t'
  2350  00FB01  6F                 	db	111	;'o'
  2351  00FB02  20                 	db	32
  2352  00FB03  61                 	db	97	;'a'
  2353  00FB04  20                 	db	32
  2354  00FB05  31                 	db	49	;'1'
  2355  00FB06  36                 	db	54	;'6'
  2356  00FB07  20                 	db	32
  2357  00FB08  62                 	db	98	;'b'
  2358  00FB09  69                 	db	105	;'i'
  2359  00FB0A  74                 	db	116	;'t'
  2360  00FB0B  20                 	db	32
  2361  00FB0C  74                 	db	116	;'t'
  2362  00FB0D  69                 	db	105	;'i'
  2363  00FB0E  6D                 	db	109	;'m'
  2364  00FB0F  65                 	db	101	;'e'
  2365  00FB10  72                 	db	114	;'r'
  2366  00FB11  20                 	db	32
  2367  00FB12  70                 	db	112	;'p'
  2368  00FB13  72                 	db	114	;'r'
  2369  00FB14  65                 	db	101	;'e'
  2370  00FB15  2D                 	db	45
  2371  00FB16  6C                 	db	108	;'l'
  2372  00FB17  6F                 	db	111	;'o'
  2373  00FB18  61                 	db	97	;'a'
  2374  00FB19  64                 	db	100	;'d'
  2375  00FB1A  20                 	db	32
  2376  00FB1B  76                 	db	118	;'v'
  2377  00FB1C  61                 	db	97	;'a'
  2378  00FB1D  6C                 	db	108	;'l'
  2379  00FB1E  75                 	db	117	;'u'
  2380  00FB1F  65                 	db	101	;'e'
  2381  00FB20  20                 	db	32
  2382  00FB21  6F                 	db	111	;'o'
  2383  00FB22  66                 	db	102	;'f'
  2384  00FB23  20                 	db	32
  2385  00FB24  30                 	db	48	;'0'
  2386  00FB25  78                 	db	120	;'x'
  2387  00FB26  25                 	db	37
  2388  00FB27  58                 	db	88	;'X'
  2389  00FB28  20                 	db	32
  2390  00FB29  28                 	db	40
  2391  00FB2A  25                 	db	37
  2392  00FB2B  75                 	db	117	;'u'
  2393  00FB2C  20                 	db	32
  2394  00FB2D  4C                 	db	76	;'L'
  2395  00FB2E  53                 	db	83	;'S'
  2396  00FB2F  42                 	db	66	;'B'
  2397  00FB30  73                 	db	115	;'s'
  2398  00FB31  29                 	db	41
  2399  00FB32  20                 	db	32
  2400  00FB33  0A                 	db	10
  2401  00FB34  0D                 	db	13
  2402  00FB35  00                 	db	0
  2403  00FB36                     STR_80:
  2404  00FB36  43                 	db	67	;'C'
  2405  00FB37  61                 	db	97	;'a'
  2406  00FB38  6C                 	db	108	;'l'
  2407  00FB39  63                 	db	99	;'c'
  2408  00FB3A  75                 	db	117	;'u'
  2409  00FB3B  6C                 	db	108	;'l'
  2410  00FB3C  61                 	db	97	;'a'
  2411  00FB3D  74                 	db	116	;'t'
  2412  00FB3E  65                 	db	101	;'e'
  2413  00FB3F  64                 	db	100	;'d'
  2414  00FB40  20                 	db	32
  2415  00FB41  54                 	db	84	;'T'
  2416  00FB42  52                 	db	82	;'R'
  2417  00FB43  49                 	db	73	;'I'
  2418  00FB44  41                 	db	65	;'A'
  2419  00FB45  43                 	db	67	;'C'
  2420  00FB46  20                 	db	32
  2421  00FB47  66                 	db	102	;'f'
  2422  00FB48  69                 	db	105	;'i'
  2423  00FB49  72                 	db	114	;'r'
  2424  00FB4A  69                 	db	105	;'i'
  2425  00FB4B  6E                 	db	110	;'n'
  2426  00FB4C  67                 	db	103	;'g'
  2427  00FB4D  20                 	db	32
  2428  00FB4E  61                 	db	97	;'a'
  2429  00FB4F  6E                 	db	110	;'n'
  2430  00FB50  67                 	db	103	;'g'
  2431  00FB51  6C                 	db	108	;'l'
  2432  00FB52  65                 	db	101	;'e'
  2433  00FB53  20                 	db	32
  2434  00FB54  69                 	db	105	;'i'
  2435  00FB55  73                 	db	115	;'s'
  2436  00FB56  20                 	db	32
  2437  00FB57  25                 	db	37
  2438  00FB58  2E                 	db	46
  2439  00FB59  33                 	db	51	;'3'
  2440  00FB5A  66                 	db	102	;'f'
  2441  00FB5B  20                 	db	32
  2442  00FB5C  72                 	db	114	;'r'
  2443  00FB5D  61                 	db	97	;'a'
  2444  00FB5E  64                 	db	100	;'d'
  2445  00FB5F  69                 	db	105	;'i'
  2446  00FB60  61                 	db	97	;'a'
  2447  00FB61  6E                 	db	110	;'n'
  2448  00FB62  73                 	db	115	;'s'
  2449  00FB63  20                 	db	32
  2450  00FB64  28                 	db	40
  2451  00FB65  25                 	db	37
  2452  00FB66  2E                 	db	46
  2453  00FB67  33                 	db	51	;'3'
  2454  00FB68  66                 	db	102	;'f'
  2455  00FB69  20                 	db	32
  2456  00FB6A  64                 	db	100	;'d'
  2457  00FB6B  65                 	db	101	;'e'
  2458  00FB6C  67                 	db	103	;'g'
  2459  00FB6D  72                 	db	114	;'r'
  2460  00FB6E  65                 	db	101	;'e'
  2461  00FB6F  65                 	db	101	;'e'
  2462  00FB70  73                 	db	115	;'s'
  2463  00FB71  29                 	db	41
  2464  00FB72  0A                 	db	10
  2465  00FB73  0D                 	db	13
  2466  00FB74  00                 	db	0
  2467  00FB75                     STR_83:
  2468  00FB75  44                 	db	68	;'D'
  2469  00FB76  65                 	db	101	;'e'
  2470  00FB77  76                 	db	118	;'v'
  2471  00FB78  69                 	db	105	;'i'
  2472  00FB79  63                 	db	99	;'c'
  2473  00FB7A  65                 	db	101	;'e'
  2474  00FB7B  20                 	db	32
  2475  00FB7C  6F                 	db	111	;'o'
  2476  00FB7D  6E                 	db	110	;'n'
  2477  00FB7E  20                 	db	32
  2478  00FB7F  74                 	db	116	;'t'
  2479  00FB80  69                 	db	105	;'i'
  2480  00FB81  6D                 	db	109	;'m'
  2481  00FB82  65                 	db	101	;'e'
  2482  00FB83  20                 	db	32
  2483  00FB84  73                 	db	115	;'s'
  2484  00FB85  69                 	db	105	;'i'
  2485  00FB86  6E                 	db	110	;'n'
  2486  00FB87  63                 	db	99	;'c'
  2487  00FB88  65                 	db	101	;'e'
  2488  00FB89  20                 	db	32
  2489  00FB8A  6C                 	db	108	;'l'
  2490  00FB8B  61                 	db	97	;'a'
  2491  00FB8C  73                 	db	115	;'s'
  2492  00FB8D  74                 	db	116	;'t'
  2493  00FB8E  20                 	db	32
  2494  00FB8F  72                 	db	114	;'r'
  2495  00FB90  65                 	db	101	;'e'
  2496  00FB91  73                 	db	115	;'s'
  2497  00FB92  65                 	db	101	;'e'
  2498  00FB93  74                 	db	116	;'t'
  2499  00FB94  20                 	db	32
  2500  00FB95  63                 	db	99	;'c'
  2501  00FB96  6F                 	db	111	;'o'
  2502  00FB97  6E                 	db	110	;'n'
  2503  00FB98  64                 	db	100	;'d'
  2504  00FB99  69                 	db	105	;'i'
  2505  00FB9A  74                 	db	116	;'t'
  2506  00FB9B  69                 	db	105	;'i'
  2507  00FB9C  6F                 	db	111	;'o'
  2508  00FB9D  6E                 	db	110	;'n'
  2509  00FB9E  20                 	db	32
  2510  00FB9F  69                 	db	105	;'i'
  2511  00FBA0  73                 	db	115	;'s'
  2512  00FBA1  20                 	db	32
  2513  00FBA2  25                 	db	37
  2514  00FBA3  64                 	db	100	;'d'
  2515  00FBA4  20                 	db	32
  2516  00FBA5  73                 	db	115	;'s'
  2517  00FBA6  65                 	db	101	;'e'
  2518  00FBA7  63                 	db	99	;'c'
  2519  00FBA8  6F                 	db	111	;'o'
  2520  00FBA9  6E                 	db	110	;'n'
  2521  00FBAA  64                 	db	100	;'d'
  2522  00FBAB  73                 	db	115	;'s'
  2523  00FBAC  0A                 	db	10
  2524  00FBAD  0D                 	db	13
  2525  00FBAE  00                 	db	0
  2526  00FBAF                     STR_58:
  2527  00FBAF  46                 	db	70	;'F'
  2528  00FBB0  69                 	db	105	;'i'
  2529  00FBB1  78                 	db	120	;'x'
  2530  00FBB2  65                 	db	101	;'e'
  2531  00FBB3  64                 	db	100	;'d'
  2532  00FBB4  20                 	db	32
  2533  00FBB5  56                 	db	86	;'V'
  2534  00FBB6  6F                 	db	111	;'o'
  2535  00FBB7  6C                 	db	108	;'l'
  2536  00FBB8  74                 	db	116	;'t'
  2537  00FBB9  61                 	db	97	;'a'
  2538  00FBBA  67                 	db	103	;'g'
  2539  00FBBB  65                 	db	101	;'e'
  2540  00FBBC  20                 	db	32
  2541  00FBBD  52                 	db	82	;'R'
  2542  00FBBE  65                 	db	101	;'e'
  2543  00FBBF  66                 	db	102	;'f'
  2544  00FBC0  65                 	db	101	;'e'
  2545  00FBC1  72                 	db	114	;'r'
  2546  00FBC2  65                 	db	101	;'e'
  2547  00FBC3  6E                 	db	110	;'n'
  2548  00FBC4  63                 	db	99	;'c'
  2549  00FBC5  65                 	db	101	;'e'
  2550  00FBC6  20                 	db	32
  2551  00FBC7  42                 	db	66	;'B'
  2552  00FBC8  75                 	db	117	;'u'
  2553  00FBC9  66                 	db	102	;'f'
  2554  00FBCA  66                 	db	102	;'f'
  2555  00FBCB  65                 	db	101	;'e'
  2556  00FBCC  72                 	db	114	;'r'
  2557  00FBCD  20                 	db	32
  2558  00FBCE  31                 	db	49	;'1'
  2559  00FBCF  20                 	db	32
  2560  00FBD0  6D                 	db	109	;'m'
  2561  00FBD1  65                 	db	101	;'e'
  2562  00FBD2  61                 	db	97	;'a'
  2563  00FBD3  73                 	db	115	;'s'
  2564  00FBD4  75                 	db	117	;'u'
  2565  00FBD5  72                 	db	114	;'r'
  2566  00FBD6  65                 	db	101	;'e'
  2567  00FBD7  64                 	db	100	;'d'
  2568  00FBD8  20                 	db	32
  2569  00FBD9  61                 	db	97	;'a'
  2570  00FBDA  73                 	db	115	;'s'
  2571  00FBDB  20                 	db	32
  2572  00FBDC  25                 	db	37
  2573  00FBDD  66                 	db	102	;'f'
  2574  00FBDE  20                 	db	32
  2575  00FBDF  56                 	db	86	;'V'
  2576  00FBE0  6F                 	db	111	;'o'
  2577  00FBE1  6C                 	db	108	;'l'
  2578  00FBE2  74                 	db	116	;'t'
  2579  00FBE3  73                 	db	115	;'s'
  2580  00FBE4  0A                 	db	10
  2581  00FBE5  0D                 	db	13
  2582  00FBE6  00                 	db	0
  2583  00FBE7                     STR_50:
  2584  00FBE7  4D                 	db	77	;'M'
  2585  00FBE8  61                 	db	97	;'a'
  2586  00FBE9  72                 	db	114	;'r'
  2587  00FBEA  71                 	db	113	;'q'
  2588  00FBEB  75                 	db	117	;'u'
  2589  00FBEC  65                 	db	101	;'e'
  2590  00FBED  74                 	db	116	;'t'
  2591  00FBEE  74                 	db	116	;'t'
  2592  00FBEF  65                 	db	101	;'e'
  2593  00FBF0  20                 	db	32
  2594  00FBF1  55                 	db	85	;'U'
  2595  00FBF2  6E                 	db	110	;'n'
  2596  00FBF3  69                 	db	105	;'i'
  2597  00FBF4  76                 	db	118	;'v'
  2598  00FBF5  65                 	db	101	;'e'
  2599  00FBF6  72                 	db	114	;'r'
  2600  00FBF7  73                 	db	115	;'s'
  2601  00FBF8  69                 	db	105	;'i'
  2602  00FBF9  74                 	db	116	;'t'
  2603  00FBFA  79                 	db	121	;'y'
  2604  00FBFB  20                 	db	32
  2605  00FBFC  45                 	db	69	;'E'
  2606  00FBFD  4C                 	db	76	;'L'
  2607  00FBFE  45                 	db	69	;'E'
  2608  00FBFF  4E                 	db	78	;'N'
  2609  00FC00  20                 	db	32
  2610  00FC01  33                 	db	51	;'3'
  2611  00FC02  30                 	db	48	;'0'
  2612  00FC03  33                 	db	51	;'3'
  2613  00FC04  35                 	db	53	;'5'
  2614  00FC05  20                 	db	32
  2615  00FC06  46                 	db	70	;'F'
  2616  00FC07  69                 	db	105	;'i'
  2617  00FC08  6E                 	db	110	;'n'
  2618  00FC09  61                 	db	97	;'a'
  2619  00FC0A  6C                 	db	108	;'l'
  2620  00FC0B  20                 	db	32
  2621  00FC0C  50                 	db	80	;'P'
  2622  00FC0D  72                 	db	114	;'r'
  2623  00FC0E  6F                 	db	111	;'o'
  2624  00FC0F  6A                 	db	106	;'j'
  2625  00FC10  65                 	db	101	;'e'
  2626  00FC11  63                 	db	99	;'c'
  2627  00FC12  74                 	db	116	;'t'
  2628  00FC13  0A                 	db	10
  2629  00FC14  0D                 	db	13
  2630  00FC15  00                 	db	0
  2631  00FC16                     STR_78:
  2632  00FC16  45                 	db	69	;'E'
  2633  00FC17  6E                 	db	110	;'n'
  2634  00FC18  74                 	db	116	;'t'
  2635  00FC19  65                 	db	101	;'e'
  2636  00FC1A  72                 	db	114	;'r'
  2637  00FC1B  20                 	db	32
  2638  00FC1C  27                 	db	39
  2639  00FC1D  48                 	db	72	;'H'
  2640  00FC1E  65                 	db	101	;'e'
  2641  00FC1F  6C                 	db	108	;'l'
  2642  00FC20  70                 	db	112	;'p'
  2643  00FC21  27                 	db	39
  2644  00FC22  20                 	db	32
  2645  00FC23  66                 	db	102	;'f'
  2646  00FC24  6F                 	db	111	;'o'
  2647  00FC25  72                 	db	114	;'r'
  2648  00FC26  20                 	db	32
  2649  00FC27  6C                 	db	108	;'l'
  2650  00FC28  69                 	db	105	;'i'
  2651  00FC29  73                 	db	115	;'s'
  2652  00FC2A  74                 	db	116	;'t'
  2653  00FC2B  20                 	db	32
  2654  00FC2C  6F                 	db	111	;'o'
  2655  00FC2D  66                 	db	102	;'f'
  2656  00FC2E  20                 	db	32
  2657  00FC2F  61                 	db	97	;'a'
  2658  00FC30  76                 	db	118	;'v'
  2659  00FC31  61                 	db	97	;'a'
  2660  00FC32  69                 	db	105	;'i'
  2661  00FC33  6C                 	db	108	;'l'
  2662  00FC34  61                 	db	97	;'a'
  2663  00FC35  62                 	db	98	;'b'
  2664  00FC36  6C                 	db	108	;'l'
  2665  00FC37  65                 	db	101	;'e'
  2666  00FC38  20                 	db	32
  2667  00FC39  63                 	db	99	;'c'
  2668  00FC3A  6F                 	db	111	;'o'
  2669  00FC3B  6D                 	db	109	;'m'
  2670  00FC3C  6D                 	db	109	;'m'
  2671  00FC3D  61                 	db	97	;'a'
  2672  00FC3E  6E                 	db	110	;'n'
  2673  00FC3F  64                 	db	100	;'d'
  2674  00FC40  73                 	db	115	;'s'
  2675  00FC41  0A                 	db	10
  2676  00FC42  0D                 	db	13
  2677  00FC43  00                 	db	0
  2678  00FC44                     STR_72:
  2679  00FC44  4C                 	db	76	;'L'
  2680  00FC45  6F                 	db	111	;'o'
  2681  00FC46  61                 	db	97	;'a'
  2682  00FC47  64                 	db	100	;'d'
  2683  00FC48  20                 	db	32
  2684  00FC49  68                 	db	104	;'h'
  2685  00FC4A  61                 	db	97	;'a'
  2686  00FC4B  73                 	db	115	;'s'
  2687  00FC4C  20                 	db	32
  2688  00FC4D  62                 	db	98	;'b'
  2689  00FC4E  65                 	db	101	;'e'
  2690  00FC4F  65                 	db	101	;'e'
  2691  00FC50  6E                 	db	110	;'n'
  2692  00FC51  20                 	db	32
  2693  00FC52  65                 	db	101	;'e'
  2694  00FC53  6E                 	db	110	;'n'
  2695  00FC54  61                 	db	97	;'a'
  2696  00FC55  62                 	db	98	;'b'
  2697  00FC56  6C                 	db	108	;'l'
  2698  00FC57  65                 	db	101	;'e'
  2699  00FC58  64                 	db	100	;'d'
  2700  00FC59  2C                 	db	44
  2701  00FC5A  20                 	db	32
  2702  00FC5B  64                 	db	100	;'d'
  2703  00FC5C  69                 	db	105	;'i'
  2704  00FC5D  6D                 	db	109	;'m'
  2705  00FC5E  6D                 	db	109	;'m'
  2706  00FC5F  69                 	db	105	;'i'
  2707  00FC60  6E                 	db	110	;'n'
  2708  00FC61  67                 	db	103	;'g'
  2709  00FC62  20                 	db	32
  2710  00FC63  64                 	db	100	;'d'
  2711  00FC64  69                 	db	105	;'i'
  2712  00FC65  73                 	db	115	;'s'
  2713  00FC66  61                 	db	97	;'a'
  2714  00FC67  62                 	db	98	;'b'
  2715  00FC68  6C                 	db	108	;'l'
  2716  00FC69  65                 	db	101	;'e'
  2717  00FC6A  64                 	db	100	;'d'
  2718  00FC6B  0A                 	db	10
  2719  00FC6C  0D                 	db	13
  2720  00FC6D  00                 	db	0
  2721  00FC6E                     STR_70:
  2722  00FC6E  54                 	db	84	;'T'
  2723  00FC6F  52                 	db	82	;'R'
  2724  00FC70  49                 	db	73	;'I'
  2725  00FC71  41                 	db	65	;'A'
  2726  00FC72  43                 	db	67	;'C'
  2727  00FC73  20                 	db	32
  2728  00FC74  6F                 	db	111	;'o'
  2729  00FC75  75                 	db	117	;'u'
  2730  00FC76  74                 	db	116	;'t'
  2731  00FC77  70                 	db	112	;'p'
  2732  00FC78  75                 	db	117	;'u'
  2733  00FC79  74                 	db	116	;'t'
  2734  00FC7A  20                 	db	32
  2735  00FC7B  64                 	db	100	;'d'
  2736  00FC7C  69                 	db	105	;'i'
  2737  00FC7D  6D                 	db	109	;'m'
  2738  00FC7E  6D                 	db	109	;'m'
  2739  00FC7F  69                 	db	105	;'i'
  2740  00FC80  6E                 	db	110	;'n'
  2741  00FC81  67                 	db	103	;'g'
  2742  00FC82  20                 	db	32
  2743  00FC83  68                 	db	104	;'h'
  2744  00FC84  61                 	db	97	;'a'
  2745  00FC85  73                 	db	115	;'s'
  2746  00FC86  20                 	db	32
  2747  00FC87  62                 	db	98	;'b'
  2748  00FC88  65                 	db	101	;'e'
  2749  00FC89  65                 	db	101	;'e'
  2750  00FC8A  6E                 	db	110	;'n'
  2751  00FC8B  20                 	db	32
  2752  00FC8C  64                 	db	100	;'d'
  2753  00FC8D  69                 	db	105	;'i'
  2754  00FC8E  73                 	db	115	;'s'
  2755  00FC8F  61                 	db	97	;'a'
  2756  00FC90  62                 	db	98	;'b'
  2757  00FC91  6C                 	db	108	;'l'
  2758  00FC92  65                 	db	101	;'e'
  2759  00FC93  64                 	db	100	;'d'
  2760  00FC94  0A                 	db	10
  2761  00FC95  0D                 	db	13
  2762  00FC96  00                 	db	0
  2763  00FC97                     STR_68:
  2764  00FC97  54                 	db	84	;'T'
  2765  00FC98  52                 	db	82	;'R'
  2766  00FC99  49                 	db	73	;'I'
  2767  00FC9A  41                 	db	65	;'A'
  2768  00FC9B  43                 	db	67	;'C'
  2769  00FC9C  20                 	db	32
  2770  00FC9D  6F                 	db	111	;'o'
  2771  00FC9E  75                 	db	117	;'u'
  2772  00FC9F  74                 	db	116	;'t'
  2773  00FCA0  70                 	db	112	;'p'
  2774  00FCA1  75                 	db	117	;'u'
  2775  00FCA2  74                 	db	116	;'t'
  2776  00FCA3  20                 	db	32
  2777  00FCA4  64                 	db	100	;'d'
  2778  00FCA5  69                 	db	105	;'i'
  2779  00FCA6  6D                 	db	109	;'m'
  2780  00FCA7  6D                 	db	109	;'m'
  2781  00FCA8  69                 	db	105	;'i'
  2782  00FCA9  6E                 	db	110	;'n'
  2783  00FCAA  67                 	db	103	;'g'
  2784  00FCAB  20                 	db	32
  2785  00FCAC  68                 	db	104	;'h'
  2786  00FCAD  61                 	db	97	;'a'
  2787  00FCAE  73                 	db	115	;'s'
  2788  00FCAF  20                 	db	32
  2789  00FCB0  62                 	db	98	;'b'
  2790  00FCB1  65                 	db	101	;'e'
  2791  00FCB2  65                 	db	101	;'e'
  2792  00FCB3  6E                 	db	110	;'n'
  2793  00FCB4  20                 	db	32
  2794  00FCB5  65                 	db	101	;'e'
  2795  00FCB6  6E                 	db	110	;'n'
  2796  00FCB7  61                 	db	97	;'a'
  2797  00FCB8  62                 	db	98	;'b'
  2798  00FCB9  6C                 	db	108	;'l'
  2799  00FCBA  65                 	db	101	;'e'
  2800  00FCBB  64                 	db	100	;'d'
  2801  00FCBC  0A                 	db	10
  2802  00FCBD  0D                 	db	13
  2803  00FCBE  00                 	db	0
  2804  00FCBF                     STR_88:
  2805  00FCBF  4D                 	db	77	;'M'
  2806  00FCC0  65                 	db	101	;'e'
  2807  00FCC1  61                 	db	97	;'a'
  2808  00FCC2  73                 	db	115	;'s'
  2809  00FCC3  75                 	db	117	;'u'
  2810  00FCC4  72                 	db	114	;'r'
  2811  00FCC5  65                 	db	101	;'e'
  2812  00FCC6  6D                 	db	109	;'m'
  2813  00FCC7  65                 	db	101	;'e'
  2814  00FCC8  6E                 	db	110	;'n'
  2815  00FCC9  74                 	db	116	;'t'
  2816  00FCCA  73                 	db	115	;'s'
  2817  00FCCB  20                 	db	32
  2818  00FCCC  72                 	db	114	;'r'
  2819  00FCCD  65                 	db	101	;'e'
  2820  00FCCE  73                 	db	115	;'s'
  2821  00FCCF  70                 	db	112	;'p'
  2822  00FCD0  6F                 	db	111	;'o'
  2823  00FCD1  6E                 	db	110	;'n'
  2824  00FCD2  73                 	db	115	;'s'
  2825  00FCD3  65                 	db	101	;'e'
  2826  00FCD4  73                 	db	115	;'s'
  2827  00FCD5  20                 	db	32
  2828  00FCD6  61                 	db	97	;'a'
  2829  00FCD7  70                 	db	112	;'p'
  2830  00FCD8  70                 	db	112	;'p'
  2831  00FCD9  65                 	db	101	;'e'
  2832  00FCDA  61                 	db	97	;'a'
  2833  00FCDB  72                 	db	114	;'r'
  2834  00FCDC  20                 	db	32
  2835  00FCDD  69                 	db	105	;'i'
  2836  00FCDE  6E                 	db	110	;'n'
  2837  00FCDF  20                 	db	32
  2838  00FCE0  63                 	db	99	;'c'
  2839  00FCE1  79                 	db	121	;'y'
  2840  00FCE2  61                 	db	97	;'a'
  2841  00FCE3  6E                 	db	110	;'n'
  2842  00FCE4  0A                 	db	10
  2843  00FCE5  0D                 	db	13
  2844  00FCE6  00                 	db	0
  2845  00FCE7                     STR_60:
  2846  00FCE7  41                 	db	65	;'A'
  2847  00FCE8  56                 	db	86	;'V'
  2848  00FCE9  53                 	db	83	;'S'
  2849  00FCEA  53                 	db	83	;'S'
  2850  00FCEB  20                 	db	32
  2851  00FCEC  6D                 	db	109	;'m'
  2852  00FCED  65                 	db	101	;'e'
  2853  00FCEE  61                 	db	97	;'a'
  2854  00FCEF  73                 	db	115	;'s'
  2855  00FCF0  75                 	db	117	;'u'
  2856  00FCF1  72                 	db	114	;'r'
  2857  00FCF2  65                 	db	101	;'e'
  2858  00FCF3  64                 	db	100	;'d'
  2859  00FCF4  20                 	db	32
  2860  00FCF5  61                 	db	97	;'a'
  2861  00FCF6  73                 	db	115	;'s'
  2862  00FCF7  20                 	db	32
  2863  00FCF8  25                 	db	37
  2864  00FCF9  2E                 	db	46
  2865  00FCFA  33                 	db	51	;'3'
  2866  00FCFB  66                 	db	102	;'f'
  2867  00FCFC  20                 	db	32
  2868  00FCFD  56                 	db	86	;'V'
  2869  00FCFE  6F                 	db	111	;'o'
  2870  00FCFF  6C                 	db	108	;'l'
  2871  00FD00  74                 	db	116	;'t'
  2872  00FD01  73                 	db	115	;'s'
  2873  00FD02  20                 	db	32
  2874  00FD03  62                 	db	98	;'b'
  2875  00FD04  79                 	db	121	;'y'
  2876  00FD05  20                 	db	32
  2877  00FD06  41                 	db	65	;'A'
  2878  00FD07  44                 	db	68	;'D'
  2879  00FD08  43                 	db	67	;'C'
  2880  00FD09  0A                 	db	10
  2881  00FD0A  0D                 	db	13
  2882  00FD0B  00                 	db	0
  2883  00FD0C                     STR_79:
  2884  00FD0C  44                 	db	68	;'D'
  2885  00FD0D  69                 	db	105	;'i'
  2886  00FD0E  6D                 	db	109	;'m'
  2887  00FD0F  6D                 	db	109	;'m'
  2888  00FD10  69                 	db	105	;'i'
  2889  00FD11  6E                 	db	110	;'n'
  2890  00FD12  67                 	db	103	;'g'
  2891  00FD13  20                 	db	32
  2892  00FD14  68                 	db	104	;'h'
  2893  00FD15  61                 	db	97	;'a'
  2894  00FD16  73                 	db	115	;'s'
  2895  00FD17  20                 	db	32
  2896  00FD18  62                 	db	98	;'b'
  2897  00FD19  65                 	db	101	;'e'
  2898  00FD1A  65                 	db	101	;'e'
  2899  00FD1B  6E                 	db	110	;'n'
  2900  00FD1C  20                 	db	32
  2901  00FD1D  73                 	db	115	;'s'
  2902  00FD1E  65                 	db	101	;'e'
  2903  00FD1F  74                 	db	116	;'t'
  2904  00FD20  20                 	db	32
  2905  00FD21  74                 	db	116	;'t'
  2906  00FD22  6F                 	db	111	;'o'
  2907  00FD23  20                 	db	32
  2908  00FD24  25                 	db	37
  2909  00FD25  64                 	db	100	;'d'
  2910  00FD26  20                 	db	32
  2911  00FD27  70                 	db	112	;'p'
  2912  00FD28  65                 	db	101	;'e'
  2913  00FD29  72                 	db	114	;'r'
  2914  00FD2A  63                 	db	99	;'c'
  2915  00FD2B  65                 	db	101	;'e'
  2916  00FD2C  6E                 	db	110	;'n'
  2917  00FD2D  74                 	db	116	;'t'
  2918  00FD2E  0A                 	db	10
  2919  00FD2F  0D                 	db	13
  2920  00FD30  00                 	db	0
  2921  00FD31                     STR_52:
  2922  00FD31  2B                 	db	43
  2923  00FD32  33                 	db	51	;'3'
  2924  00FD33  2E                 	db	46
  2925  00FD34  33                 	db	51	;'3'
  2926  00FD35  56                 	db	86	;'V'
  2927  00FD36  20                 	db	32
  2928  00FD37  72                 	db	114	;'r'
  2929  00FD38  61                 	db	97	;'a'
  2930  00FD39  69                 	db	105	;'i'
  2931  00FD3A  6C                 	db	108	;'l'
  2932  00FD3B  20                 	db	32
  2933  00FD3C  6D                 	db	109	;'m'
  2934  00FD3D  65                 	db	101	;'e'
  2935  00FD3E  61                 	db	97	;'a'
  2936  00FD3F  73                 	db	115	;'s'
  2937  00FD40  75                 	db	117	;'u'
  2938  00FD41  72                 	db	114	;'r'
  2939  00FD42  65                 	db	101	;'e'
  2940  00FD43  64                 	db	100	;'d'
  2941  00FD44  20                 	db	32
  2942  00FD45  61                 	db	97	;'a'
  2943  00FD46  73                 	db	115	;'s'
  2944  00FD47  20                 	db	32
  2945  00FD48  2B                 	db	43
  2946  00FD49  25                 	db	37
  2947  00FD4A  66                 	db	102	;'f'
  2948  00FD4B  20                 	db	32
  2949  00FD4C  56                 	db	86	;'V'
  2950  00FD4D  6F                 	db	111	;'o'
  2951  00FD4E  6C                 	db	108	;'l'
  2952  00FD4F  74                 	db	116	;'t'
  2953  00FD50  73                 	db	115	;'s'
  2954  00FD51  0A                 	db	10
  2955  00FD52  0D                 	db	13
  2956  00FD53  00                 	db	0
  2957  00FD54                     STR_56:
  2958  00FD54  44                 	db	68	;'D'
  2959  00FD55  69                 	db	105	;'i'
  2960  00FD56  65                 	db	101	;'e'
  2961  00FD57  20                 	db	32
  2962  00FD58  54                 	db	84	;'T'
  2963  00FD59  65                 	db	101	;'e'
  2964  00FD5A  6D                 	db	109	;'m'
  2965  00FD5B  70                 	db	112	;'p'
  2966  00FD5C  65                 	db	101	;'e'
  2967  00FD5D  72                 	db	114	;'r'
  2968  00FD5E  61                 	db	97	;'a'
  2969  00FD5F  74                 	db	116	;'t'
  2970  00FD60  75                 	db	117	;'u'
  2971  00FD61  72                 	db	114	;'r'
  2972  00FD62  65                 	db	101	;'e'
  2973  00FD63  20                 	db	32
  2974  00FD64  6D                 	db	109	;'m'
  2975  00FD65  65                 	db	101	;'e'
  2976  00FD66  61                 	db	97	;'a'
  2977  00FD67  73                 	db	115	;'s'
  2978  00FD68  75                 	db	117	;'u'
  2979  00FD69  72                 	db	114	;'r'
  2980  00FD6A  65                 	db	101	;'e'
  2981  00FD6B  64                 	db	100	;'d'
  2982  00FD6C  20                 	db	32
  2983  00FD6D  61                 	db	97	;'a'
  2984  00FD6E  73                 	db	115	;'s'
  2985  00FD6F  20                 	db	32
  2986  00FD70  25                 	db	37
  2987  00FD71  66                 	db	102	;'f'
  2988  00FD72  43                 	db	67	;'C'
  2989  00FD73  0A                 	db	10
  2990  00FD74  0D                 	db	13
  2991  00FD75  00                 	db	0
  2992  00FD76                     STR_64:
  2993  00FD76  52                 	db	82	;'R'
  2994  00FD77  4D                 	db	77	;'M'
  2995  00FD78  53                 	db	83	;'S'
  2996  00FD79  20                 	db	32
  2997  00FD7A  4F                 	db	79	;'O'
  2998  00FD7B  75                 	db	117	;'u'
  2999  00FD7C  74                 	db	116	;'t'
  3000  00FD7D  70                 	db	112	;'p'
  3001  00FD7E  75                 	db	117	;'u'
  3002  00FD7F  74                 	db	116	;'t'
  3003  00FD80  20                 	db	32
  3004  00FD81  43                 	db	67	;'C'
  3005  00FD82  75                 	db	117	;'u'
  3006  00FD83  72                 	db	114	;'r'
  3007  00FD84  72                 	db	114	;'r'
  3008  00FD85  65                 	db	101	;'e'
  3009  00FD86  6E                 	db	110	;'n'
  3010  00FD87  74                 	db	116	;'t'
  3011  00FD88  20                 	db	32
  3012  00FD89  69                 	db	105	;'i'
  3013  00FD8A  73                 	db	115	;'s'
  3014  00FD8B  20                 	db	32
  3015  00FD8C  25                 	db	37
  3016  00FD8D  2E                 	db	46
  3017  00FD8E  33                 	db	51	;'3'
  3018  00FD8F  66                 	db	102	;'f'
  3019  00FD90  20                 	db	32
  3020  00FD91  41                 	db	65	;'A'
  3021  00FD92  72                 	db	114	;'r'
  3022  00FD93  6D                 	db	109	;'m'
  3023  00FD94  73                 	db	115	;'s'
  3024  00FD95  0A                 	db	10
  3025  00FD96  0D                 	db	13
  3026  00FD97  00                 	db	0
  3027  00FD98                     STR_66:
  3028  00FD98  52                 	db	82	;'R'
  3029  00FD99  4D                 	db	77	;'M'
  3030  00FD9A  53                 	db	83	;'S'
  3031  00FD9B  20                 	db	32
  3032  00FD9C  4F                 	db	79	;'O'
  3033  00FD9D  75                 	db	117	;'u'
  3034  00FD9E  74                 	db	116	;'t'
  3035  00FD9F  70                 	db	112	;'p'
  3036  00FDA0  75                 	db	117	;'u'
  3037  00FDA1  74                 	db	116	;'t'
  3038  00FDA2  20                 	db	32
  3039  00FDA3  56                 	db	86	;'V'
  3040  00FDA4  6F                 	db	111	;'o'
  3041  00FDA5  6C                 	db	108	;'l'
  3042  00FDA6  74                 	db	116	;'t'
  3043  00FDA7  61                 	db	97	;'a'
  3044  00FDA8  67                 	db	103	;'g'
  3045  00FDA9  65                 	db	101	;'e'
  3046  00FDAA  20                 	db	32
  3047  00FDAB  69                 	db	105	;'i'
  3048  00FDAC  73                 	db	115	;'s'
  3049  00FDAD  20                 	db	32
  3050  00FDAE  25                 	db	37
  3051  00FDAF  2E                 	db	46
  3052  00FDB0  33                 	db	51	;'3'
  3053  00FDB1  66                 	db	102	;'f'
  3054  00FDB2  20                 	db	32
  3055  00FDB3  56                 	db	86	;'V'
  3056  00FDB4  72                 	db	114	;'r'
  3057  00FDB5  6D                 	db	109	;'m'
  3058  00FDB6  73                 	db	115	;'s'
  3059  00FDB7  0A                 	db	10
  3060  00FDB8  0D                 	db	13
  3061  00FDB9  00                 	db	0
  3062  00FDBA                     STR_54:
  3063  00FDBA  2B                 	db	43
  3064  00FDBB  31                 	db	49	;'1'
  3065  00FDBC  32                 	db	50	;'2'
  3066  00FDBD  56                 	db	86	;'V'
  3067  00FDBE  20                 	db	32
  3068  00FDBF  72                 	db	114	;'r'
  3069  00FDC0  61                 	db	97	;'a'
  3070  00FDC1  69                 	db	105	;'i'
  3071  00FDC2  6C                 	db	108	;'l'
  3072  00FDC3  20                 	db	32
  3073  00FDC4  6D                 	db	109	;'m'
  3074  00FDC5  65                 	db	101	;'e'
  3075  00FDC6  61                 	db	97	;'a'
  3076  00FDC7  73                 	db	115	;'s'
  3077  00FDC8  75                 	db	117	;'u'
  3078  00FDC9  72                 	db	114	;'r'
  3079  00FDCA  65                 	db	101	;'e'
  3080  00FDCB  64                 	db	100	;'d'
  3081  00FDCC  20                 	db	32
  3082  00FDCD  61                 	db	97	;'a'
  3083  00FDCE  73                 	db	115	;'s'
  3084  00FDCF  20                 	db	32
  3085  00FDD0  2B                 	db	43
  3086  00FDD1  25                 	db	37
  3087  00FDD2  66                 	db	102	;'f'
  3088  00FDD3  20                 	db	32
  3089  00FDD4  56                 	db	86	;'V'
  3090  00FDD5  6F                 	db	111	;'o'
  3091  00FDD6  6C                 	db	108	;'l'
  3092  00FDD7  74                 	db	116	;'t'
  3093  00FDD8  73                 	db	115	;'s'
  3094  00FDD9  0A                 	db	10
  3095  00FDDA  0D                 	db	13
  3096  00FDDB  00                 	db	0
  3097  00FDDC                     STR_86:
  3098  00FDDC  48                 	db	72	;'H'
  3099  00FDDD  65                 	db	101	;'e'
  3100  00FDDE  6C                 	db	108	;'l'
  3101  00FDDF  70                 	db	112	;'p'
  3102  00FDE0  20                 	db	32
  3103  00FDE1  6D                 	db	109	;'m'
  3104  00FDE2  65                 	db	101	;'e'
  3105  00FDE3  73                 	db	115	;'s'
  3106  00FDE4  73                 	db	115	;'s'
  3107  00FDE5  61                 	db	97	;'a'
  3108  00FDE6  67                 	db	103	;'g'
  3109  00FDE7  65                 	db	101	;'e'
  3110  00FDE8  73                 	db	115	;'s'
  3111  00FDE9  20                 	db	32
  3112  00FDEA  61                 	db	97	;'a'
  3113  00FDEB  70                 	db	112	;'p'
  3114  00FDEC  70                 	db	112	;'p'
  3115  00FDED  65                 	db	101	;'e'
  3116  00FDEE  61                 	db	97	;'a'
  3117  00FDEF  72                 	db	114	;'r'
  3118  00FDF0  20                 	db	32
  3119  00FDF1  69                 	db	105	;'i'
  3120  00FDF2  6E                 	db	110	;'n'
  3121  00FDF3  20                 	db	32
  3122  00FDF4  79                 	db	121	;'y'
  3123  00FDF5  65                 	db	101	;'e'
  3124  00FDF6  6C                 	db	108	;'l'
  3125  00FDF7  6C                 	db	108	;'l'
  3126  00FDF8  6F                 	db	111	;'o'
  3127  00FDF9  77                 	db	119	;'w'
  3128  00FDFA  0A                 	db	10
  3129  00FDFB  0D                 	db	13
  3130  00FDFC  00                 	db	0
  3131  00FDFD                     STR_62:
  3132  00FDFD  4D                 	db	77	;'M'
  3133  00FDFE  65                 	db	101	;'e'
  3134  00FDFF  61                 	db	97	;'a'
  3135  00FE00  73                 	db	115	;'s'
  3136  00FE01  75                 	db	117	;'u'
  3137  00FE02  72                 	db	114	;'r'
  3138  00FE03  65                 	db	101	;'e'
  3139  00FE04  64                 	db	100	;'d'
  3140  00FE05  20                 	db	32
  3141  00FE06  43                 	db	67	;'C'
  3142  00FE07  75                 	db	117	;'u'
  3143  00FE08  72                 	db	114	;'r'
  3144  00FE09  72                 	db	114	;'r'
  3145  00FE0A  65                 	db	101	;'e'
  3146  00FE0B  6E                 	db	110	;'n'
  3147  00FE0C  74                 	db	116	;'t'
  3148  00FE0D  20                 	db	32
  3149  00FE0E  69                 	db	105	;'i'
  3150  00FE0F  73                 	db	115	;'s'
  3151  00FE10  20                 	db	32
  3152  00FE11  25                 	db	37
  3153  00FE12  2E                 	db	46
  3154  00FE13  33                 	db	51	;'3'
  3155  00FE14  66                 	db	102	;'f'
  3156  00FE15  20                 	db	32
  3157  00FE16  41                 	db	65	;'A'
  3158  00FE17  6D                 	db	109	;'m'
  3159  00FE18  70                 	db	112	;'p'
  3160  00FE19  73                 	db	115	;'s'
  3161  00FE1A  0A                 	db	10
  3162  00FE1B  0D                 	db	13
  3163  00FE1C  00                 	db	0
  3164  00FE1D                     STR_90:
  3165  00FE1D  55                 	db	85	;'U'
  3166  00FE1E  73                 	db	115	;'s'
  3167  00FE1F  65                 	db	101	;'e'
  3168  00FE20  72                 	db	114	;'r'
  3169  00FE21  20                 	db	32
  3170  00FE22  69                 	db	105	;'i'
  3171  00FE23  6E                 	db	110	;'n'
  3172  00FE24  70                 	db	112	;'p'
  3173  00FE25  75                 	db	117	;'u'
  3174  00FE26  74                 	db	116	;'t'
  3175  00FE27  20                 	db	32
  3176  00FE28  61                 	db	97	;'a'
  3177  00FE29  70                 	db	112	;'p'
  3178  00FE2A  70                 	db	112	;'p'
  3179  00FE2B  65                 	db	101	;'e'
  3180  00FE2C  61                 	db	97	;'a'
  3181  00FE2D  72                 	db	114	;'r'
  3182  00FE2E  73                 	db	115	;'s'
  3183  00FE2F  20                 	db	32
  3184  00FE30  69                 	db	105	;'i'
  3185  00FE31  6E                 	db	110	;'n'
  3186  00FE32  20                 	db	32
  3187  00FE33  77                 	db	119	;'w'
  3188  00FE34  68                 	db	104	;'h'
  3189  00FE35  69                 	db	105	;'i'
  3190  00FE36  74                 	db	116	;'t'
  3191  00FE37  65                 	db	101	;'e'
  3192  00FE38  0A                 	db	10
  3193  00FE39  0D                 	db	13
  3194  00FE3A  00                 	db	0
  3195  00FE3B                     STR_87:
  3196  00FE3B  49                 	db	73	;'I'
  3197  00FE3C  44                 	db	68	;'D'
  3198  00FE3D  4E                 	db	78	;'N'
  3199  00FE3E  20                 	db	32
  3200  00FE3F  73                 	db	115	;'s'
  3201  00FE40  74                 	db	116	;'t'
  3202  00FE41  72                 	db	114	;'r'
  3203  00FE42  69                 	db	105	;'i'
  3204  00FE43  6E                 	db	110	;'n'
  3205  00FE44  67                 	db	103	;'g'
  3206  00FE45  20                 	db	32
  3207  00FE46  61                 	db	97	;'a'
  3208  00FE47  70                 	db	112	;'p'
  3209  00FE48  70                 	db	112	;'p'
  3210  00FE49  65                 	db	101	;'e'
  3211  00FE4A  61                 	db	97	;'a'
  3212  00FE4B  72                 	db	114	;'r'
  3213  00FE4C  73                 	db	115	;'s'
  3214  00FE4D  20                 	db	32
  3215  00FE4E  69                 	db	105	;'i'
  3216  00FE4F  6E                 	db	110	;'n'
  3217  00FE50  20                 	db	32
  3218  00FE51  67                 	db	103	;'g'
  3219  00FE52  72                 	db	114	;'r'
  3220  00FE53  65                 	db	101	;'e'
  3221  00FE54  65                 	db	101	;'e'
  3222  00FE55  6E                 	db	110	;'n'
  3223  00FE56  0A                 	db	10
  3224  00FE57  0D                 	db	13
  3225  00FE58  00                 	db	0
  3226  00FE59                     STR_61:
  3227  00FE59  4D                 	db	77	;'M'
  3228  00FE5A  65                 	db	101	;'e'
  3229  00FE5B  61                 	db	97	;'a'
  3230  00FE5C  73                 	db	115	;'s'
  3231  00FE5D  75                 	db	117	;'u'
  3232  00FE5E  72                 	db	114	;'r'
  3233  00FE5F  65                 	db	101	;'e'
  3234  00FE60  20                 	db	32
  3235  00FE61  44                 	db	68	;'D'
  3236  00FE62  65                 	db	101	;'e'
  3237  00FE63  74                 	db	116	;'t'
  3238  00FE64  65                 	db	101	;'e'
  3239  00FE65  63                 	db	99	;'c'
  3240  00FE66  74                 	db	116	;'t'
  3241  00FE67  65                 	db	101	;'e'
  3242  00FE68  64                 	db	100	;'d'
  3243  00FE69  20                 	db	32
  3244  00FE6A  43                 	db	67	;'C'
  3245  00FE6B  75                 	db	117	;'u'
  3246  00FE6C  72                 	db	114	;'r'
  3247  00FE6D  72                 	db	114	;'r'
  3248  00FE6E  65                 	db	101	;'e'
  3249  00FE6F  6E                 	db	110	;'n'
  3250  00FE70  74                 	db	116	;'t'
  3251  00FE71  3F                 	db	63	;'?'
  3252  00FE72  00                 	db	0
  3253  00FE73                     STR_74:
  3254  00FE73  4C                 	db	76	;'L'
  3255  00FE74  6F                 	db	111	;'o'
  3256  00FE75  61                 	db	97	;'a'
  3257  00FE76  64                 	db	100	;'d'
  3258  00FE77  20                 	db	32
  3259  00FE78  68                 	db	104	;'h'
  3260  00FE79  61                 	db	97	;'a'
  3261  00FE7A  73                 	db	115	;'s'
  3262  00FE7B  20                 	db	32
  3263  00FE7C  62                 	db	98	;'b'
  3264  00FE7D  65                 	db	101	;'e'
  3265  00FE7E  65                 	db	101	;'e'
  3266  00FE7F  6E                 	db	110	;'n'
  3267  00FE80  20                 	db	32
  3268  00FE81  64                 	db	100	;'d'
  3269  00FE82  69                 	db	105	;'i'
  3270  00FE83  73                 	db	115	;'s'
  3271  00FE84  61                 	db	97	;'a'
  3272  00FE85  62                 	db	98	;'b'
  3273  00FE86  6C                 	db	108	;'l'
  3274  00FE87  65                 	db	101	;'e'
  3275  00FE88  64                 	db	100	;'d'
  3276  00FE89  0A                 	db	10
  3277  00FE8A  0D                 	db	13
  3278  00FE8B  00                 	db	0
  3279  00FE8C                     STR_75:
  3280  00FE8C  53                 	db	83	;'S'
  3281  00FE8D  65                 	db	101	;'e'
  3282  00FE8E  74                 	db	116	;'t'
  3283  00FE8F  20                 	db	32
  3284  00FE90  44                 	db	68	;'D'
  3285  00FE91  69                 	db	105	;'i'
  3286  00FE92  6D                 	db	109	;'m'
  3287  00FE93  6D                 	db	109	;'m'
  3288  00FE94  69                 	db	105	;'i'
  3289  00FE95  6E                 	db	110	;'n'
  3290  00FE96  67                 	db	103	;'g'
  3291  00FE97  20                 	db	32
  3292  00FE98  50                 	db	80	;'P'
  3293  00FE99  65                 	db	101	;'e'
  3294  00FE9A  72                 	db	114	;'r'
  3295  00FE9B  63                 	db	99	;'c'
  3296  00FE9C  65                 	db	101	;'e'
  3297  00FE9D  6E                 	db	110	;'n'
  3298  00FE9E  74                 	db	116	;'t'
  3299  00FE9F  61                 	db	97	;'a'
  3300  00FEA0  67                 	db	103	;'g'
  3301  00FEA1  65                 	db	101	;'e'
  3302  00FEA2  3A                 	db	58	;':'
  3303  00FEA3  20                 	db	32
  3304  00FEA4  00                 	db	0
  3305  00FEA5                     STR_89:
  3306  00FEA5  45                 	db	69	;'E'
  3307  00FEA6  72                 	db	114	;'r'
  3308  00FEA7  72                 	db	114	;'r'
  3309  00FEA8  6F                 	db	111	;'o'
  3310  00FEA9  72                 	db	114	;'r'
  3311  00FEAA  73                 	db	115	;'s'
  3312  00FEAB  20                 	db	32
  3313  00FEAC  61                 	db	97	;'a'
  3314  00FEAD  70                 	db	112	;'p'
  3315  00FEAE  70                 	db	112	;'p'
  3316  00FEAF  65                 	db	101	;'e'
  3317  00FEB0  61                 	db	97	;'a'
  3318  00FEB1  72                 	db	114	;'r'
  3319  00FEB2  20                 	db	32
  3320  00FEB3  69                 	db	105	;'i'
  3321  00FEB4  6E                 	db	110	;'n'
  3322  00FEB5  20                 	db	32
  3323  00FEB6  72                 	db	114	;'r'
  3324  00FEB7  65                 	db	101	;'e'
  3325  00FEB8  64                 	db	100	;'d'
  3326  00FEB9  0A                 	db	10
  3327  00FEBA  0D                 	db	13
  3328  00FEBB  00                 	db	0
  3329  00FEBC                     STR_65:
  3330  00FEBC  4D                 	db	77	;'M'
  3331  00FEBD  65                 	db	101	;'e'
  3332  00FEBE  61                 	db	97	;'a'
  3333  00FEBF  73                 	db	115	;'s'
  3334  00FEC0  75                 	db	117	;'u'
  3335  00FEC1  72                 	db	114	;'r'
  3336  00FEC2  65                 	db	101	;'e'
  3337  00FEC3  20                 	db	32
  3338  00FEC4  52                 	db	82	;'R'
  3339  00FEC5  4D                 	db	77	;'M'
  3340  00FEC6  53                 	db	83	;'S'
  3341  00FEC7  20                 	db	32
  3342  00FEC8  56                 	db	86	;'V'
  3343  00FEC9  6F                 	db	111	;'o'
  3344  00FECA  6C                 	db	108	;'l'
  3345  00FECB  74                 	db	116	;'t'
  3346  00FECC  61                 	db	97	;'a'
  3347  00FECD  67                 	db	103	;'g'
  3348  00FECE  65                 	db	101	;'e'
  3349  00FECF  3F                 	db	63	;'?'
  3350  00FED0  00                 	db	0
  3351  00FED1                     STR_63:
  3352  00FED1  4D                 	db	77	;'M'
  3353  00FED2  65                 	db	101	;'e'
  3354  00FED3  61                 	db	97	;'a'
  3355  00FED4  73                 	db	115	;'s'
  3356  00FED5  75                 	db	117	;'u'
  3357  00FED6  72                 	db	114	;'r'
  3358  00FED7  65                 	db	101	;'e'
  3359  00FED8  20                 	db	32
  3360  00FED9  52                 	db	82	;'R'
  3361  00FEDA  4D                 	db	77	;'M'
  3362  00FEDB  53                 	db	83	;'S'
  3363  00FEDC  20                 	db	32
  3364  00FEDD  43                 	db	67	;'C'
  3365  00FEDE  75                 	db	117	;'u'
  3366  00FEDF  72                 	db	114	;'r'
  3367  00FEE0  72                 	db	114	;'r'
  3368  00FEE1  65                 	db	101	;'e'
  3369  00FEE2  6E                 	db	110	;'n'
  3370  00FEE3  74                 	db	116	;'t'
  3371  00FEE4  3F                 	db	63	;'?'
  3372  00FEE5  00                 	db	0
  3373  00FEE6                     STR_55:
  3374  00FEE6  4D                 	db	77	;'M'
  3375  00FEE7  65                 	db	101	;'e'
  3376  00FEE8  61                 	db	97	;'a'
  3377  00FEE9  73                 	db	115	;'s'
  3378  00FEEA  75                 	db	117	;'u'
  3379  00FEEB  72                 	db	114	;'r'
  3380  00FEEC  65                 	db	101	;'e'
  3381  00FEED  20                 	db	32
  3382  00FEEE  44                 	db	68	;'D'
  3383  00FEEF  69                 	db	105	;'i'
  3384  00FEF0  65                 	db	101	;'e'
  3385  00FEF1  20                 	db	32
  3386  00FEF2  54                 	db	84	;'T'
  3387  00FEF3  65                 	db	101	;'e'
  3388  00FEF4  6D                 	db	109	;'m'
  3389  00FEF5  70                 	db	112	;'p'
  3390  00FEF6  3F                 	db	63	;'?'
  3391  00FEF7  00                 	db	0
  3392  00FEF8                     STR_91:
  3393  00FEF8  30                 	db	48	;'0'
  3394  00FEF9  31                 	db	49	;'1'
  3395  00FEFA  32                 	db	50	;'2'
  3396  00FEFB  33                 	db	51	;'3'
  3397  00FEFC  34                 	db	52	;'4'
  3398  00FEFD  35                 	db	53	;'5'
  3399  00FEFE  36                 	db	54	;'6'
  3400  00FEFF  37                 	db	55	;'7'
  3401  00FF00  38                 	db	56	;'8'
  3402  00FF01  39                 	db	57	;'9'
  3403  00FF02  41                 	db	65	;'A'
  3404  00FF03  42                 	db	66	;'B'
  3405  00FF04  43                 	db	67	;'C'
  3406  00FF05  44                 	db	68	;'D'
  3407  00FF06  45                 	db	69	;'E'
  3408  00FF07  46                 	db	70	;'F'
  3409  00FF08  00                 	db	0
  3410  00FF09                     STR_49:
  3411  00FF09  41                 	db	65	;'A'
  3412  00FF0A  43                 	db	67	;'C'
  3413  00FF0B  20                 	db	32
  3414  00FF0C  50                 	db	80	;'P'
  3415  00FF0D  6F                 	db	111	;'o'
  3416  00FF0E  77                 	db	119	;'w'
  3417  00FF0F  65                 	db	101	;'e'
  3418  00FF10  72                 	db	114	;'r'
  3419  00FF11  20                 	db	32
  3420  00FF12  4D                 	db	77	;'M'
  3421  00FF13  65                 	db	101	;'e'
  3422  00FF14  74                 	db	116	;'t'
  3423  00FF15  65                 	db	101	;'e'
  3424  00FF16  72                 	db	114	;'r'
  3425  00FF17  0A                 	db	10
  3426  00FF18  0D                 	db	13
  3427  00FF19  00                 	db	0
  3428  00FF1A                     STR_51:
  3429  00FF1A  4D                 	db	77	;'M'
  3430  00FF1B  65                 	db	101	;'e'
  3431  00FF1C  61                 	db	97	;'a'
  3432  00FF1D  73                 	db	115	;'s'
  3433  00FF1E  75                 	db	117	;'u'
  3434  00FF1F  72                 	db	114	;'r'
  3435  00FF20  65                 	db	101	;'e'
  3436  00FF21  20                 	db	32
  3437  00FF22  50                 	db	80	;'P'
  3438  00FF23  4F                 	db	79	;'O'
  3439  00FF24  53                 	db	83	;'S'
  3440  00FF25  33                 	db	51	;'3'
  3441  00FF26  50                 	db	80	;'P'
  3442  00FF27  33                 	db	51	;'3'
  3443  00FF28  3F                 	db	63	;'?'
  3444  00FF29  00                 	db	0
  3445  00FF2A                     STR_69:
  3446  00FF2A  44                 	db	68	;'D'
  3447  00FF2B  69                 	db	105	;'i'
  3448  00FF2C  73                 	db	115	;'s'
  3449  00FF2D  61                 	db	97	;'a'
  3450  00FF2E  62                 	db	98	;'b'
  3451  00FF2F  6C                 	db	108	;'l'
  3452  00FF30  65                 	db	101	;'e'
  3453  00FF31  20                 	db	32
  3454  00FF32  44                 	db	68	;'D'
  3455  00FF33  69                 	db	105	;'i'
  3456  00FF34  6D                 	db	109	;'m'
  3457  00FF35  6D                 	db	109	;'m'
  3458  00FF36  69                 	db	105	;'i'
  3459  00FF37  6E                 	db	110	;'n'
  3460  00FF38  67                 	db	103	;'g'
  3461  00FF39  00                 	db	0
  3462  00FF3A                     STR_53:
  3463  00FF3A  4D                 	db	77	;'M'
  3464  00FF3B  65                 	db	101	;'e'
  3465  00FF3C  61                 	db	97	;'a'
  3466  00FF3D  73                 	db	115	;'s'
  3467  00FF3E  75                 	db	117	;'u'
  3468  00FF3F  72                 	db	114	;'r'
  3469  00FF40  65                 	db	101	;'e'
  3470  00FF41  20                 	db	32
  3471  00FF42  50                 	db	80	;'P'
  3472  00FF43  4F                 	db	79	;'O'
  3473  00FF44  53                 	db	83	;'S'
  3474  00FF45  31                 	db	49	;'1'
  3475  00FF46  32                 	db	50	;'2'
  3476  00FF47  3F                 	db	63	;'?'
  3477  00FF48  00                 	db	0
  3478  00FF49                     STR_67:
  3479  00FF49  45                 	db	69	;'E'
  3480  00FF4A  6E                 	db	110	;'n'
  3481  00FF4B  61                 	db	97	;'a'
  3482  00FF4C  62                 	db	98	;'b'
  3483  00FF4D  6C                 	db	108	;'l'
  3484  00FF4E  65                 	db	101	;'e'
  3485  00FF4F  20                 	db	32
  3486  00FF50  44                 	db	68	;'D'
  3487  00FF51  69                 	db	105	;'i'
  3488  00FF52  6D                 	db	109	;'m'
  3489  00FF53  6D                 	db	109	;'m'
  3490  00FF54  69                 	db	105	;'i'
  3491  00FF55  6E                 	db	110	;'n'
  3492  00FF56  67                 	db	103	;'g'
  3493  00FF57  00                 	db	0
  3494  00FF58                     STR_59:
  3495  00FF58  4D                 	db	77	;'M'
  3496  00FF59  65                 	db	101	;'e'
  3497  00FF5A  61                 	db	97	;'a'
  3498  00FF5B  73                 	db	115	;'s'
  3499  00FF5C  75                 	db	117	;'u'
  3500  00FF5D  72                 	db	114	;'r'
  3501  00FF5E  65                 	db	101	;'e'
  3502  00FF5F  20                 	db	32
  3503  00FF60  41                 	db	65	;'A'
  3504  00FF61  56                 	db	86	;'V'
  3505  00FF62  53                 	db	83	;'S'
  3506  00FF63  53                 	db	83	;'S'
  3507  00FF64  3F                 	db	63	;'?'
  3508  00FF65  00                 	db	0
  3509  00FF66                     STR_57:
  3510  00FF66  4D                 	db	77	;'M'
  3511  00FF67  65                 	db	101	;'e'
  3512  00FF68  61                 	db	97	;'a'
  3513  00FF69  73                 	db	115	;'s'
  3514  00FF6A  75                 	db	117	;'u'
  3515  00FF6B  72                 	db	114	;'r'
  3516  00FF6C  65                 	db	101	;'e'
  3517  00FF6D  20                 	db	32
  3518  00FF6E  46                 	db	70	;'F'
  3519  00FF6F  56                 	db	86	;'V'
  3520  00FF70  52                 	db	82	;'R'
  3521  00FF71  3F                 	db	63	;'?'
  3522  00FF72  00                 	db	0
  3523  00FF73                     STR_73:
  3524  00FF73  44                 	db	68	;'D'
  3525  00FF74  69                 	db	105	;'i'
  3526  00FF75  73                 	db	115	;'s'
  3527  00FF76  61                 	db	97	;'a'
  3528  00FF77  62                 	db	98	;'b'
  3529  00FF78  6C                 	db	108	;'l'
  3530  00FF79  65                 	db	101	;'e'
  3531  00FF7A  20                 	db	32
  3532  00FF7B  4C                 	db	76	;'L'
  3533  00FF7C  6F                 	db	111	;'o'
  3534  00FF7D  61                 	db	97	;'a'
  3535  00FF7E  64                 	db	100	;'d'
  3536  00FF7F  00                 	db	0
  3537  00FF80                     STR_71:
  3538  00FF80  45                 	db	69	;'E'
  3539  00FF81  6E                 	db	110	;'n'
  3540  00FF82  61                 	db	97	;'a'
  3541  00FF83  62                 	db	98	;'b'
  3542  00FF84  6C                 	db	108	;'l'
  3543  00FF85  65                 	db	101	;'e'
  3544  00FF86  20                 	db	32
  3545  00FF87  4C                 	db	76	;'L'
  3546  00FF88  6F                 	db	111	;'o'
  3547  00FF89  61                 	db	97	;'a'
  3548  00FF8A  64                 	db	100	;'d'
  3549  00FF8B  00                 	db	0
  3550  00FF8C                     STR_82:
  3551  00FF8C  4F                 	db	79	;'O'
  3552  00FF8D  6E                 	db	110	;'n'
  3553  00FF8E  20                 	db	32
  3554  00FF8F  54                 	db	84	;'T'
  3555  00FF90  69                 	db	105	;'i'
  3556  00FF91  6D                 	db	109	;'m'
  3557  00FF92  65                 	db	101	;'e'
  3558  00FF93  3F                 	db	63	;'?'
  3559  00FF94  00                 	db	0
  3560  00FF95                     STR_47:
  3561  00FF95  2A                 	db	42
  3562  00FF96  49                 	db	73	;'I'
  3563  00FF97  44                 	db	68	;'D'
  3564  00FF98  4E                 	db	78	;'N'
  3565  00FF99  3F                 	db	63	;'?'
  3566  00FF9A  00                 	db	0
  3567  00FF9B                     STR_44:
  3568  00FF9B  43                 	db	67	;'C'
  3569  00FF9C  6C                 	db	108	;'l'
  3570  00FF9D  65                 	db	101	;'e'
  3571  00FF9E  61                 	db	97	;'a'
  3572  00FF9F  72                 	db	114	;'r'
  3573  00FFA0  00                 	db	0
  3574  00FFA1                     STR_41:
  3575  00FFA1  52                 	db	82	;'R'
  3576  00FFA2  65                 	db	101	;'e'
  3577  00FFA3  73                 	db	115	;'s'
  3578  00FFA4  65                 	db	101	;'e'
  3579  00FFA5  74                 	db	116	;'t'
  3580  00FFA6  00                 	db	0
  3581  00FFA7                     STR_84:
  3582  00FFA7  48                 	db	72	;'H'
  3583  00FFA8  65                 	db	101	;'e'
  3584  00FFA9  6C                 	db	108	;'l'
  3585  00FFAA  70                 	db	112	;'p'
  3586  00FFAB  00                 	db	0
  3587  00FFAC                     STR_2:
  3588  00FFAC  1B                 	db	27
  3589  00FFAD  5B                 	db	91	;'['
  3590  00FFAE  32                 	db	50	;'2'
  3591  00FFAF  4A                 	db	74	;'J'
  3592  00FFB0  00                 	db	0
  3593  00FFB1                     STR_48:
  3594  00FFB1  49                 	db	73	;'I'
  3595  00FFB2  44                 	db	68	;'D'
  3596  00FFB3  4E                 	db	78	;'N'
  3597  00FFB4  00                 	db	0
  3598  00FFB5                     STR_3:
  3599  00FFB5  1B                 	db	27
  3600  00FFB6  5B                 	db	91	;'['
  3601  00FFB7  48                 	db	72	;'H'
  3602  00FFB8  00                 	db	0
  3603  00FFB9  1B                 	db	27
  3604  00FFBA  5B                 	db	91	;'['
  3605  00FFBB  73                 	db	115	;'s'
  3606  00FFBC  00                 	db	0
  3607  00FFBD  1B                 	db	27
  3608  00FFBE  5B                 	db	91	;'['
  3609  00FFBF  75                 	db	117	;'u'
  3610  00FFC0  00                 	db	0
  3611  00FFC1                     STR_1:
  3612  00FFC1  1B                 	db	27
  3613  00FFC2  5B                 	db	91	;'['
  3614  00FFC3  4B                 	db	75	;'K'
  3615  00FFC4  00                 	db	0
  3616  00FFC5                     STR_20:
  3617  00FFC5  33                 	db	51	;'3'
  3618  00FFC6  30                 	db	48	;'0'
  3619  00FFC7  00                 	db	0
  3620  00FFC8                     STR_30:
  3621  00FFC8  34                 	db	52	;'4'
  3622  00FFC9  30                 	db	48	;'0'
  3623  00FFCA  00                 	db	0
  3624  00FFCB                     STR_21:
  3625  00FFCB  33                 	db	51	;'3'
  3626  00FFCC  31                 	db	49	;'1'
  3627  00FFCD  00                 	db	0
  3628  00FFCE                     STR_31:
  3629  00FFCE  34                 	db	52	;'4'
  3630  00FFCF  31                 	db	49	;'1'
  3631  00FFD0  00                 	db	0
  3632  00FFD1                     STR_22:
  3633  00FFD1  33                 	db	51	;'3'
  3634  00FFD2  32                 	db	50	;'2'
  3635  00FFD3  00                 	db	0
  3636  00FFD4                     STR_32:
  3637  00FFD4  34                 	db	52	;'4'
  3638  00FFD5  32                 	db	50	;'2'
  3639  00FFD6  00                 	db	0
  3640  00FFD7                     STR_23:
  3641  00FFD7  33                 	db	51	;'3'
  3642  00FFD8  33                 	db	51	;'3'
  3643  00FFD9  00                 	db	0
  3644  00FFDA                     STR_33:
  3645  00FFDA  34                 	db	52	;'4'
  3646  00FFDB  33                 	db	51	;'3'
  3647  00FFDC  00                 	db	0
  3648  00FFDD                     STR_24:
  3649  00FFDD  33                 	db	51	;'3'
  3650  00FFDE  34                 	db	52	;'4'
  3651  00FFDF  00                 	db	0
  3652  00FFE0                     STR_34:
  3653  00FFE0  34                 	db	52	;'4'
  3654  00FFE1  34                 	db	52	;'4'
  3655  00FFE2  00                 	db	0
  3656  00FFE3                     STR_25:
  3657  00FFE3  33                 	db	51	;'3'
  3658  00FFE4  35                 	db	53	;'5'
  3659  00FFE5  00                 	db	0
  3660  00FFE6                     STR_35:
  3661  00FFE6  34                 	db	52	;'4'
  3662  00FFE7  35                 	db	53	;'5'
  3663  00FFE8  00                 	db	0
  3664  00FFE9                     STR_26:
  3665  00FFE9  33                 	db	51	;'3'
  3666  00FFEA  36                 	db	54	;'6'
  3667  00FFEB  00                 	db	0
  3668  00FFEC                     STR_36:
  3669  00FFEC  34                 	db	52	;'4'
  3670  00FFED  36                 	db	54	;'6'
  3671  00FFEE  00                 	db	0
  3672  00FFEF                     STR_27:
  3673  00FFEF  33                 	db	51	;'3'
  3674  00FFF0  37                 	db	55	;'7'
  3675  00FFF1  00                 	db	0
  3676  00FFF2                     STR_37:
  3677  00FFF2  34                 	db	52	;'4'
  3678  00FFF3  37                 	db	55	;'7'
  3679  00FFF4  00                 	db	0
  3680  00FFF5                     STR_11:
  3681  00FFF5  1B                 	db	27
  3682  00FFF6  5B                 	db	91	;'['
  3683  00FFF7  00                 	db	0
  3684  00FFF8                     STR_17:
  3685  00FFF8  38                 	db	56	;'8'
  3686  00FFF9  00                 	db	0
  3687  00FFFA                     STR_19:
  3688  00FFFA  3B                 	db	59	;';'
  3689  00FFFB  00                 	db	0
  3690  00FFFC                     STR_39:
  3691  00FFFC  6D                 	db	109	;'m'
  3692  00FFFD  00                 	db	0
  3693  0000                     
  3694                           ; #config settings
  3695  00FFFE  00                 	db	0	; dummy byte at the end
  3696  0000                     
  3697                           	psect	cinit
  3698  015B14                     __pcinit:
  3699                           	opt stack 0
  3700  015B14                     start_initialization:
  3701                           	opt stack 0
  3702  015B14                     __initialization:
  3703                           	opt stack 0
  3704                           
  3705                           ; Initialize objects allocated to BANK0 (6 bytes)
  3706                           ; load TBLPTR registers with __pidataBANK0
  3707  015B14  0E8A               	movlw	low __pidataBANK0
  3708  015B16  6EF6               	movwf	tblptrl,c
  3709  015B18  0E63               	movlw	high __pidataBANK0
  3710  015B1A  6EF7               	movwf	tblptrh,c
  3711  015B1C  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3712  015B1E  6EF8               	movwf	tblptru,c
  3713  015B20  EE00  F0EB         	lfsr	0,__pdataBANK0
  3714  015B24  EE10 F006          	lfsr	1,6
  3715  015B28                     copy_data0:
  3716  015B28  0009               	tblrd		*+
  3717  015B2A  CFF5 FFEE          	movff	tablat,postinc0
  3718  015B2E  50E5               	movf	postdec1,w,c
  3719  015B30  50E1               	movf	fsr1l,w,c
  3720  015B32  E1FA               	bnz	copy_data0
  3721                           
  3722                           ; Clear objects allocated to BANK2 (256 bytes)
  3723  015B34  EE02  F000         	lfsr	0,__pbssBANK2
  3724  015B38  EE11 F000          	lfsr	1,256
  3725  015B3C                     clear_0:
  3726  015B3C  6AEE               	clrf	postinc0,c
  3727  015B3E  50E5               	movf	postdec1,w,c
  3728  015B40  50E1               	movf	fsr1l,w,c
  3729  015B42  E1FC               	bnz	clear_0
  3730  015B44  50E2               	movf	fsr1h,w,c
  3731  015B46  E1FA               	bnz	clear_0
  3732                           
  3733                           ; Clear objects allocated to BANK1 (37 bytes)
  3734  015B48  EE01  F0B9         	lfsr	0,__pbssBANK1
  3735  015B4C  0E25               	movlw	37
  3736  015B4E                     clear_1:
  3737  015B4E  6AEE               	clrf	postinc0,c
  3738  015B50  06E8               	decf	wreg,f,c
  3739  015B52  E1FD               	bnz	clear_1
  3740                           
  3741                           ; Clear objects allocated to BITBANK0 (1 bytes)
  3742  015B54  0100               	movlb	0
  3743  015B56  6BF1               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  3744                           
  3745                           ; Clear objects allocated to BANK0 (38 bytes)
  3746  015B58  EE00  F0C5         	lfsr	0,__pbssBANK0
  3747  015B5C  0E26               	movlw	38
  3748  015B5E                     clear_2:
  3749  015B5E  6AEE               	clrf	postinc0,c
  3750  015B60  06E8               	decf	wreg,f,c
  3751  015B62  E1FD               	bnz	clear_2
  3752                           
  3753                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  3754  015B64  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  3755  015B66                     end_of_initialization:
  3756                           	opt stack 0
  3757  015B66                     __end_of__initialization:
  3758                           	opt stack 0
  3759  015B66  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3760  015B68  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3761  015B6A  0100               	movlb	0
  3762  015B6C  EF4E  F0AB         	goto	_main	;jump to C main() function
  3763                           tblptru	equ	0xFF8
  3764                           tblptrh	equ	0xFF7
  3765                           tblptrl	equ	0xFF6
  3766                           tablat	equ	0xFF5
  3767                           postinc0	equ	0xFEE
  3768                           wreg	equ	0xFE8
  3769                           postdec1	equ	0xFE5
  3770                           fsr1h	equ	0xFE2
  3771                           fsr1l	equ	0xFE1
  3772                           
  3773                           	psect	bitbssCOMRAM
  3774  0002F0                     __pbitbssCOMRAM:
  3775                           	opt stack 0
  3776  0002F0                     _load_enable:
  3777                           	opt stack 0
  3778  0002F0                     	ds	1
  3779                           tblptru	equ	0xFF8
  3780                           tblptrh	equ	0xFF7
  3781                           tblptrl	equ	0xFF6
  3782                           tablat	equ	0xFF5
  3783                           postinc0	equ	0xFEE
  3784                           wreg	equ	0xFE8
  3785                           postdec1	equ	0xFE5
  3786                           fsr1h	equ	0xFE2
  3787                           fsr1l	equ	0xFE1
  3788                           
  3789                           	psect	bitbssBANK0
  3790  000788                     __pbitbssBANK0:
  3791                           	opt stack 0
  3792  000788                     _eusart2RxStringReady:
  3793                           	opt stack 0
  3794  000788                     	ds	1
  3795                           tblptru	equ	0xFF8
  3796                           tblptrh	equ	0xFF7
  3797                           tblptrl	equ	0xFF6
  3798                           tablat	equ	0xFF5
  3799                           postinc0	equ	0xFEE
  3800                           wreg	equ	0xFE8
  3801                           postdec1	equ	0xFE5
  3802                           fsr1h	equ	0xFE2
  3803                           fsr1l	equ	0xFE1
  3804                           
  3805                           	psect	bssBANK0
  3806  0000C5                     __pbssBANK0:
  3807                           	opt stack 0
  3808  0000C5                     _Imeas:
  3809                           	opt stack 0
  3810  0000C5                     	ds	3
  3811  0000C8                     _Ipk:
  3812                           	opt stack 0
  3813  0000C8                     	ds	3
  3814  0000CB                     _Vpk:
  3815                           	opt stack 0
  3816  0000CB                     	ds	3
  3817  0000CE                     _POS3P3_ADC_Result:
  3818                           	opt stack 0
  3819  0000CE                     	ds	3
  3820  0000D1                     _ADC_Result_Scaling:
  3821                           	opt stack 0
  3822  0000D1                     	ds	3
  3823  0000D4                     _AVSS_ADC_Result:
  3824                           	opt stack 0
  3825  0000D4                     	ds	3
  3826  0000D7                     _ADCC_ADI_InterruptHandler:
  3827                           	opt stack 0
  3828  0000D7                     	ds	3
  3829  0000DA                     _EUSART2_RxDefaultInterruptHandler:
  3830                           	opt stack 0
  3831  0000DA                     	ds	3
  3832  0000DD                     _errno:
  3833                           	opt stack 0
  3834  0000DD                     	ds	2
  3835  0000DF                     _dimming_period:
  3836                           	opt stack 0
  3837  0000DF                     	ds	2
  3838  0000E1                     _background_color:
  3839                           	opt stack 0
  3840  0000E1                     	ds	1
  3841  0000E2                     _foreground_color:
  3842                           	opt stack 0
  3843  0000E2                     	ds	1
  3844  0000E3                     _attribute:
  3845                           	opt stack 0
  3846  0000E3                     	ds	1
  3847  0000E4                     _eusart2RxHead:
  3848                           	opt stack 0
  3849  0000E4                     	ds	1
  3850  0000E5                     _TRIAC_Firing_Angle:
  3851                           	opt stack 0
  3852  0000E5                     	ds	3
  3853  0000E8                     _FVR_ADC_Result:
  3854                           	opt stack 0
  3855  0000E8                     	ds	3
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           postinc0	equ	0xFEE
  3861                           wreg	equ	0xFE8
  3862                           postdec1	equ	0xFE5
  3863                           fsr1h	equ	0xFE2
  3864                           fsr1l	equ	0xFE1
  3865                           
  3866                           	psect	dataBANK0
  3867  0000EB                     __pdataBANK0:
  3868                           	opt stack 0
  3869  0000EB                     _Vpk_const:
  3870                           	opt stack 0
  3871  0000EB                     	ds	3
  3872  0000EE                     _Temp_ADC_Offset:
  3873                           	opt stack 0
  3874  0000EE                     	ds	3
  3875                           tblptru	equ	0xFF8
  3876                           tblptrh	equ	0xFF7
  3877                           tblptrl	equ	0xFF6
  3878                           tablat	equ	0xFF5
  3879                           postinc0	equ	0xFEE
  3880                           wreg	equ	0xFE8
  3881                           postdec1	equ	0xFE5
  3882                           fsr1h	equ	0xFE2
  3883                           fsr1l	equ	0xFE1
  3884                           
  3885                           	psect	bssBANK1
  3886  0001B9                     __pbssBANK1:
  3887                           	opt stack 0
  3888  0001B9                     _on_time:
  3889                           	opt stack 0
  3890  0001B9                     	ds	4
  3891  0001BD                     _Vrms:
  3892                           	opt stack 0
  3893  0001BD                     	ds	3
  3894  0001C0                     _Irms:
  3895                           	opt stack 0
  3896  0001C0                     	ds	3
  3897  0001C3                     _Temp_ADC_Result:
  3898                           	opt stack 0
  3899  0001C3                     	ds	3
  3900  0001C6                     _POS12_ADC_Result:
  3901                           	opt stack 0
  3902  0001C6                     	ds	3
  3903  0001C9                     _TMR5_InterruptHandler:
  3904                           	opt stack 0
  3905  0001C9                     	ds	3
  3906  0001CC                     _TMR7_InterruptHandler:
  3907                           	opt stack 0
  3908  0001CC                     	ds	3
  3909  0001CF                     _TMR6_InterruptHandler:
  3910                           	opt stack 0
  3911  0001CF                     	ds	3
  3912  0001D2                     _EUSART2_TxDefaultInterruptHandler:
  3913                           	opt stack 0
  3914  0001D2                     	ds	3
  3915  0001D5                     _timer5ReloadVal:
  3916                           	opt stack 0
  3917  0001D5                     	ds	2
  3918  0001D7                     _timer7ReloadVal:
  3919                           	opt stack 0
  3920  0001D7                     	ds	2
  3921  0001D9                     _eusart2RxCount:
  3922                           	opt stack 0
  3923  0001D9                     	ds	1
  3924  0001DA                     _eusart2RxTail:
  3925                           	opt stack 0
  3926  0001DA                     	ds	1
  3927  0001DB                     _eusart2TxBufferRemaining:
  3928                           	opt stack 0
  3929  0001DB                     	ds	1
  3930  0001DC                     _eusart2TxTail:
  3931                           	opt stack 0
  3932  0001DC                     	ds	1
  3933  0001DD                     _eusart2TxHead:
  3934                           	opt stack 0
  3935  0001DD                     	ds	1
  3936                           tblptru	equ	0xFF8
  3937                           tblptrh	equ	0xFF7
  3938                           tblptrl	equ	0xFF6
  3939                           tablat	equ	0xFF5
  3940                           postinc0	equ	0xFEE
  3941                           wreg	equ	0xFE8
  3942                           postdec1	equ	0xFE5
  3943                           fsr1h	equ	0xFE2
  3944                           fsr1l	equ	0xFE1
  3945                           
  3946                           	psect	bssBANK2
  3947  000200                     __pbssBANK2:
  3948                           	opt stack 0
  3949  000200                     _eusart2TxBuffer:
  3950                           	opt stack 0
  3951  000200                     	ds	128
  3952  000280                     _eusart2RxBuffer:
  3953                           	opt stack 0
  3954  000280                     	ds	64
  3955  0002C0                     _line:
  3956                           	opt stack 0
  3957  0002C0                     	ds	64
  3958                           tblptru	equ	0xFF8
  3959                           tblptrh	equ	0xFF7
  3960                           tblptrl	equ	0xFF6
  3961                           tablat	equ	0xFF5
  3962                           postinc0	equ	0xFEE
  3963                           wreg	equ	0xFE8
  3964                           postdec1	equ	0xFE5
  3965                           fsr1h	equ	0xFE2
  3966                           fsr1l	equ	0xFE1
  3967                           
  3968                           	psect	cstackBANK1
  3969  000100                     __pcstackBANK1:
  3970                           	opt stack 0
  3971  000100                     ??_heartbeatTimerCallback:
  3972  000100                     ADCC_StartConversion@channel:
  3973                           	opt stack 0
  3974  000100                     TMR7_WriteTimer@timerVal:
  3975                           	opt stack 0
  3976                           
  3977                           ; 2 bytes @ 0x0
  3978  000100                     	ds	1
  3979  000101                     
  3980                           ; 1 bytes @ 0x1
  3981  000101                     	ds	1
  3982  000102                     ??_INTERRUPT_InterruptManagerLow:
  3983  000102                     
  3984                           ; 1 bytes @ 0x2
  3985  000102                     	ds	21
  3986  000117                     ??_isdigit:
  3987  000117                     ?_strlen:
  3988                           	opt stack 0
  3989  000117                     ?_strcmp:
  3990                           	opt stack 0
  3991  000117                     ?_strchr:
  3992                           	opt stack 0
  3993  000117                     ?___awmod:
  3994                           	opt stack 0
  3995  000117                     ?___ftpack:
  3996                           	opt stack 0
  3997  000117                     ?__tdiv_to_l_:
  3998                           	opt stack 0
  3999  000117                     ?__div_to_l_:
  4000                           	opt stack 0
  4001  000117                     ?___lldiv:
  4002                           	opt stack 0
  4003  000117                     EUSART2_Read@readValue:
  4004                           	opt stack 0
  4005  000117                     EUSART2_Write@txData:
  4006                           	opt stack 0
  4007  000117                     ___awmod@dividend:
  4008                           	opt stack 0
  4009  000117                     strcat@to:
  4010                           	opt stack 0
  4011  000117                     strcmp@s1:
  4012                           	opt stack 0
  4013  000117                     strlen@s:
  4014                           	opt stack 0
  4015  000117                     strncpy@to:
  4016                           	opt stack 0
  4017  000117                     strchr@ptr:
  4018                           	opt stack 0
  4019  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  4020                           	opt stack 0
  4021  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  4022                           	opt stack 0
  4023  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  4024                           	opt stack 0
  4025  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  4026                           	opt stack 0
  4027  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  4028                           	opt stack 0
  4029  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  4030                           	opt stack 0
  4031  000117                     __div_to_l_@f1:
  4032                           	opt stack 0
  4033  000117                     ___ftpack@arg:
  4034                           	opt stack 0
  4035  000117                     __tdiv_to_l_@f1:
  4036                           	opt stack 0
  4037  000117                     ___ftge@ff1:
  4038                           	opt stack 0
  4039  000117                     ___lldiv@dividend:
  4040                           	opt stack 0
  4041                           
  4042                           ; 4 bytes @ 0x17
  4043  000117                     	ds	1
  4044  000118                     putch@txData:
  4045                           	opt stack 0
  4046  000118                     _isdigit$2497:
  4047                           	opt stack 0
  4048                           
  4049                           ; 1 bytes @ 0x18
  4050  000118                     	ds	1
  4051  000119                     ??_strlen:
  4052  000119                     isdigit@c:
  4053                           	opt stack 0
  4054  000119                     ___awmod@divisor:
  4055                           	opt stack 0
  4056  000119                     strcat@from:
  4057                           	opt stack 0
  4058  000119                     strcmp@s2:
  4059                           	opt stack 0
  4060  000119                     strncpy@from:
  4061                           	opt stack 0
  4062  000119                     strchr@chr:
  4063                           	opt stack 0
  4064                           
  4065                           ; 2 bytes @ 0x19
  4066  000119                     	ds	1
  4067  00011A                     ??_TMR7_Initialize:
  4068  00011A                     ??_TMR5_Initialize:
  4069  00011A                     ___ftpack@exp:
  4070                           	opt stack 0
  4071  00011A                     __div_to_l_@f2:
  4072                           	opt stack 0
  4073  00011A                     __tdiv_to_l_@f2:
  4074                           	opt stack 0
  4075  00011A                     ___ftge@ff2:
  4076                           	opt stack 0
  4077                           
  4078                           ; 3 bytes @ 0x1A
  4079  00011A                     	ds	1
  4080  00011B                     ??_strcmp:
  4081  00011B                     ___awmod@counter:
  4082                           	opt stack 0
  4083  00011B                     ___ftpack@sign:
  4084                           	opt stack 0
  4085  00011B                     strcat@cp:
  4086                           	opt stack 0
  4087  00011B                     strlen@cp:
  4088                           	opt stack 0
  4089  00011B                     strncpy@size:
  4090                           	opt stack 0
  4091  00011B                     ___lldiv@divisor:
  4092                           	opt stack 0
  4093                           
  4094                           ; 4 bytes @ 0x1B
  4095  00011B                     	ds	1
  4096  00011C                     ??___ftpack:
  4097  00011C                     ___awmod@sign:
  4098                           	opt stack 0
  4099  00011C                     strcmp@r:
  4100                           	opt stack 0
  4101                           
  4102                           ; 1 bytes @ 0x1C
  4103  00011C                     	ds	1
  4104  00011D                     ??__tdiv_to_l_:
  4105  00011D                     ??___ftge:
  4106  00011D                     ?_strncmp:
  4107                           	opt stack 0
  4108  00011D                     ?___awdiv:
  4109                           	opt stack 0
  4110  00011D                     ___awdiv@dividend:
  4111                           	opt stack 0
  4112  00011D                     strncpy@cp:
  4113                           	opt stack 0
  4114  00011D                     strncmp@s1:
  4115                           	opt stack 0
  4116  00011D                     __div_to_l_@quot:
  4117                           	opt stack 0
  4118                           
  4119                           ; 4 bytes @ 0x1D
  4120  00011D                     	ds	2
  4121  00011F                     ?___awtoft:
  4122                           	opt stack 0
  4123  00011F                     ?___lltoft:
  4124                           	opt stack 0
  4125  00011F                     ___awdiv@divisor:
  4126                           	opt stack 0
  4127  00011F                     ___awtoft@c:
  4128                           	opt stack 0
  4129  00011F                     strncmp@s2:
  4130                           	opt stack 0
  4131  00011F                     ___lldiv@quotient:
  4132                           	opt stack 0
  4133  00011F                     ___lltoft@c:
  4134                           	opt stack 0
  4135                           
  4136                           ; 4 bytes @ 0x1F
  4137  00011F                     	ds	1
  4138  000120                     __tdiv_to_l_@quot:
  4139                           	opt stack 0
  4140                           
  4141                           ; 4 bytes @ 0x20
  4142  000120                     	ds	1
  4143  000121                     ___awdiv@counter:
  4144                           	opt stack 0
  4145  000121                     __div_to_l_@cntr:
  4146                           	opt stack 0
  4147  000121                     strncmp@len:
  4148                           	opt stack 0
  4149                           
  4150                           ; 2 bytes @ 0x21
  4151  000121                     	ds	1
  4152  000122                     ___awdiv@sign:
  4153                           	opt stack 0
  4154  000122                     ___awtoft@sign:
  4155                           	opt stack 0
  4156  000122                     __div_to_l_@exp1:
  4157                           	opt stack 0
  4158                           
  4159                           ; 1 bytes @ 0x22
  4160  000122                     	ds	1
  4161  000123                     ??_strncmp:
  4162  000123                     ??___lltoft:
  4163  000123                     ?___ftneg:
  4164                           	opt stack 0
  4165  000123                     ___lldiv@counter:
  4166                           	opt stack 0
  4167  000123                     ___awdiv@quotient:
  4168                           	opt stack 0
  4169  000123                     ___ftneg@f1:
  4170                           	opt stack 0
  4171                           
  4172                           ; 3 bytes @ 0x23
  4173  000123                     	ds	1
  4174  000124                     ?___llmod:
  4175                           	opt stack 0
  4176  000124                     __tdiv_to_l_@cntr:
  4177                           	opt stack 0
  4178  000124                     ___llmod@dividend:
  4179                           	opt stack 0
  4180                           
  4181                           ; 4 bytes @ 0x24
  4182  000124                     	ds	1
  4183  000125                     ?___wmul:
  4184                           	opt stack 0
  4185  000125                     __tdiv_to_l_@exp1:
  4186                           	opt stack 0
  4187  000125                     ___wmul@multiplier:
  4188                           	opt stack 0
  4189                           
  4190                           ; 2 bytes @ 0x25
  4191  000125                     	ds	1
  4192  000126                     ?_strstr:
  4193                           	opt stack 0
  4194  000126                     strstr@s1:
  4195                           	opt stack 0
  4196                           
  4197                           ; 2 bytes @ 0x26
  4198  000126                     	ds	1
  4199  000127                     ___lltoft@exp:
  4200                           	opt stack 0
  4201  000127                     ___wmul@multiplicand:
  4202                           	opt stack 0
  4203                           
  4204                           ; 2 bytes @ 0x27
  4205  000127                     	ds	1
  4206  000128                     strstr@s2:
  4207                           	opt stack 0
  4208  000128                     ___llmod@divisor:
  4209                           	opt stack 0
  4210                           
  4211                           ; 4 bytes @ 0x28
  4212  000128                     	ds	1
  4213  000129                     ___wmul@product:
  4214                           	opt stack 0
  4215                           
  4216                           ; 2 bytes @ 0x29
  4217  000129                     	ds	1
  4218  00012A                     
  4219                           ; 1 bytes @ 0x2A
  4220  00012A                     	ds	1
  4221  00012B                     ?_atoi:
  4222                           	opt stack 0
  4223  00012B                     ?___ftadd:
  4224                           	opt stack 0
  4225  00012B                     atoi@s:
  4226                           	opt stack 0
  4227  00012B                     ___ftadd@f1:
  4228                           	opt stack 0
  4229                           
  4230                           ; 3 bytes @ 0x2B
  4231  00012B                     	ds	1
  4232  00012C                     ___llmod@counter:
  4233                           	opt stack 0
  4234                           
  4235                           ; 1 bytes @ 0x2C
  4236  00012C                     	ds	1
  4237  00012D                     ??_atoi:
  4238                           
  4239                           ; 1 bytes @ 0x2D
  4240  00012D                     	ds	1
  4241  00012E                     ___ftadd@f2:
  4242                           	opt stack 0
  4243                           
  4244                           ; 3 bytes @ 0x2E
  4245  00012E                     	ds	1
  4246  00012F                     atoi@sign:
  4247                           	opt stack 0
  4248                           
  4249                           ; 1 bytes @ 0x2F
  4250  00012F                     	ds	1
  4251  000130                     atoi@a:
  4252                           	opt stack 0
  4253                           
  4254                           ; 2 bytes @ 0x30
  4255  000130                     	ds	1
  4256  000131                     ??___ftadd:
  4257                           
  4258                           ; 1 bytes @ 0x31
  4259  000131                     	ds	3
  4260  000134                     ___ftadd@sign:
  4261                           	opt stack 0
  4262                           
  4263                           ; 1 bytes @ 0x34
  4264  000134                     	ds	1
  4265  000135                     ___ftadd@exp2:
  4266                           	opt stack 0
  4267                           
  4268                           ; 1 bytes @ 0x35
  4269  000135                     	ds	1
  4270  000136                     ___ftadd@exp1:
  4271                           	opt stack 0
  4272                           
  4273                           ; 1 bytes @ 0x36
  4274  000136                     	ds	1
  4275  000137                     ?___ftdiv:
  4276                           	opt stack 0
  4277  000137                     ?___ftsub:
  4278                           	opt stack 0
  4279  000137                     ___ftdiv@f1:
  4280                           	opt stack 0
  4281  000137                     ___ftsub@f1:
  4282                           	opt stack 0
  4283                           
  4284                           ; 3 bytes @ 0x37
  4285  000137                     	ds	3
  4286  00013A                     ___ftdiv@f2:
  4287                           	opt stack 0
  4288  00013A                     ___ftsub@f2:
  4289                           	opt stack 0
  4290                           
  4291                           ; 3 bytes @ 0x3A
  4292  00013A                     	ds	3
  4293  00013D                     ??___ftdiv:
  4294  00013D                     
  4295                           ; 1 bytes @ 0x3D
  4296  00013D                     	ds	3
  4297  000140                     ___ftdiv@cntr:
  4298                           	opt stack 0
  4299                           
  4300                           ; 1 bytes @ 0x40
  4301  000140                     	ds	1
  4302  000141                     ___ftdiv@f3:
  4303                           	opt stack 0
  4304                           
  4305                           ; 3 bytes @ 0x41
  4306  000141                     	ds	3
  4307  000144                     ___ftdiv@exp:
  4308                           	opt stack 0
  4309                           
  4310                           ; 1 bytes @ 0x44
  4311  000144                     	ds	1
  4312  000145                     ___ftdiv@sign:
  4313                           	opt stack 0
  4314                           
  4315                           ; 1 bytes @ 0x45
  4316  000145                     	ds	1
  4317  000146                     ?___ftmul:
  4318                           	opt stack 0
  4319  000146                     ___ftmul@f1:
  4320                           	opt stack 0
  4321                           
  4322                           ; 3 bytes @ 0x46
  4323  000146                     	ds	3
  4324  000149                     ___ftmul@f2:
  4325                           	opt stack 0
  4326                           
  4327                           ; 3 bytes @ 0x49
  4328  000149                     	ds	3
  4329  00014C                     ??___ftmul:
  4330                           
  4331                           ; 1 bytes @ 0x4C
  4332  00014C                     	ds	3
  4333  00014F                     ___ftmul@exp:
  4334                           	opt stack 0
  4335                           
  4336                           ; 1 bytes @ 0x4F
  4337  00014F                     	ds	1
  4338  000150                     ___ftmul@f3_as_product:
  4339                           	opt stack 0
  4340                           
  4341                           ; 3 bytes @ 0x50
  4342  000150                     	ds	3
  4343  000153                     ___ftmul@cntr:
  4344                           	opt stack 0
  4345                           
  4346                           ; 1 bytes @ 0x53
  4347  000153                     	ds	1
  4348  000154                     ___ftmul@sign:
  4349                           	opt stack 0
  4350                           
  4351                           ; 1 bytes @ 0x54
  4352  000154                     	ds	1
  4353  000155                     ?_fround:
  4354                           	opt stack 0
  4355  000155                     ?_scale:
  4356                           	opt stack 0
  4357  000155                     ?___fttol:
  4358                           	opt stack 0
  4359  000155                     ___fttol@f1:
  4360                           	opt stack 0
  4361                           
  4362                           ; 3 bytes @ 0x55
  4363  000155                     	ds	3
  4364  000158                     _fround$3140:
  4365                           	opt stack 0
  4366  000158                     _scale$3141:
  4367                           	opt stack 0
  4368                           
  4369                           ; 3 bytes @ 0x58
  4370  000158                     	ds	1
  4371  000159                     ??___fttol:
  4372                           
  4373                           ; 1 bytes @ 0x59
  4374  000159                     	ds	2
  4375  00015B                     scale@scl:
  4376                           	opt stack 0
  4377  00015B                     _fround$3139:
  4378                           	opt stack 0
  4379                           
  4380                           ; 3 bytes @ 0x5B
  4381  00015B                     	ds	3
  4382  00015E                     fround@prec:
  4383                           	opt stack 0
  4384  00015E                     ___fttol@sign1:
  4385                           	opt stack 0
  4386                           
  4387                           ; 1 bytes @ 0x5E
  4388  00015E                     	ds	1
  4389  00015F                     ___fttol@lval:
  4390                           	opt stack 0
  4391                           
  4392                           ; 4 bytes @ 0x5F
  4393  00015F                     	ds	4
  4394  000163                     ___fttol@exp1:
  4395                           	opt stack 0
  4396                           
  4397                           ; 1 bytes @ 0x63
  4398  000163                     	ds	1
  4399  000164                     ?_printf:
  4400                           	opt stack 0
  4401  000164                     printf@f:
  4402                           	opt stack 0
  4403                           
  4404                           ; 2 bytes @ 0x64
  4405  000164                     	ds	8
  4406  00016C                     ??_printf:
  4407                           
  4408                           ; 1 bytes @ 0x6C
  4409  00016C                     	ds	6
  4410  000172                     _printf$3142:
  4411                           	opt stack 0
  4412                           
  4413                           ; 3 bytes @ 0x72
  4414  000172                     	ds	3
  4415  000175                     printf@idx:
  4416                           	opt stack 0
  4417                           
  4418                           ; 1 bytes @ 0x75
  4419  000175                     	ds	1
  4420  000176                     printf@cp:
  4421                           	opt stack 0
  4422                           
  4423                           ; 2 bytes @ 0x76
  4424  000176                     	ds	2
  4425  000178                     printf@len:
  4426                           	opt stack 0
  4427                           
  4428                           ; 2 bytes @ 0x78
  4429  000178                     	ds	2
  4430  00017A                     printf@ap:
  4431                           	opt stack 0
  4432                           
  4433                           ; 2 bytes @ 0x7A
  4434  00017A                     	ds	2
  4435  00017C                     printf@flag:
  4436                           	opt stack 0
  4437                           
  4438                           ; 2 bytes @ 0x7C
  4439  00017C                     	ds	2
  4440  00017E                     printf@exp:
  4441                           	opt stack 0
  4442                           
  4443                           ; 2 bytes @ 0x7E
  4444  00017E                     	ds	2
  4445  000180                     printf@tmpval:
  4446                           	opt stack 0
  4447                           
  4448                           ; 4 bytes @ 0x80
  4449  000180                     	ds	4
  4450  000184                     printf@val:
  4451                           	opt stack 0
  4452                           
  4453                           ; 4 bytes @ 0x84
  4454  000184                     	ds	4
  4455  000188                     printf@fval:
  4456                           	opt stack 0
  4457                           
  4458                           ; 3 bytes @ 0x88
  4459  000188                     	ds	3
  4460  00018B                     printf@prec:
  4461                           	opt stack 0
  4462                           
  4463                           ; 2 bytes @ 0x8B
  4464  00018B                     	ds	2
  4465  00018D                     printf@c:
  4466                           	opt stack 0
  4467                           
  4468                           ; 1 bytes @ 0x8D
  4469  00018D                     	ds	1
  4470  00018E                     terminal_textAttributes@background_color:
  4471                           	opt stack 0
  4472                           
  4473                           ; 1 bytes @ 0x8E
  4474  00018E                     	ds	1
  4475  00018F                     terminal_textAttributes@input_attribute:
  4476                           	opt stack 0
  4477                           
  4478                           ; 1 bytes @ 0x8F
  4479  00018F                     	ds	1
  4480  000190                     terminal_textAttributes@foreground_color:
  4481                           	opt stack 0
  4482                           
  4483                           ; 1 bytes @ 0x90
  4484  000190                     	ds	1
  4485  000191                     terminal_textAttributes@output_buff:
  4486                           	opt stack 0
  4487                           
  4488                           ; 15 bytes @ 0x91
  4489  000191                     	ds	15
  4490  0001A0                     ringBufferLUT@line:
  4491                           	opt stack 0
  4492                           
  4493                           ; 2 bytes @ 0xA0
  4494  0001A0                     	ds	2
  4495  0001A2                     ??_ringBufferLUT:
  4496                           
  4497                           ; 1 bytes @ 0xA2
  4498  0001A2                     	ds	2
  4499  0001A4                     ringBufferLUT@angle_degrees:
  4500                           	opt stack 0
  4501                           
  4502                           ; 3 bytes @ 0xA4
  4503  0001A4                     	ds	3
  4504  0001A7                     ringBufferLUT@arg_buff:
  4505                           	opt stack 0
  4506                           
  4507                           ; 3 bytes @ 0xA7
  4508  0001A7                     	ds	3
  4509  0001AA                     ringBufferLUT@index:
  4510                           	opt stack 0
  4511                           
  4512                           ; 2 bytes @ 0xAA
  4513  0001AA                     	ds	2
  4514  0001AC                     ringBufferLUT@percentage:
  4515                           	opt stack 0
  4516                           
  4517                           ; 2 bytes @ 0xAC
  4518  0001AC                     	ds	2
  4519  0001AE                     ??_terminal_ringBufferPull:
  4520                           
  4521                           ; 1 bytes @ 0xAE
  4522  0001AE                     	ds	3
  4523  0001B1                     terminal_ringBufferPull@charNumber:
  4524                           	opt stack 0
  4525                           
  4526                           ; 2 bytes @ 0xB1
  4527  0001B1                     	ds	2
  4528  0001B3                     terminal_ringBufferPull@index_1975:
  4529                           	opt stack 0
  4530                           
  4531                           ; 2 bytes @ 0xB3
  4532  0001B3                     	ds	2
  4533  0001B5                     terminal_ringBufferPull@index:
  4534                           	opt stack 0
  4535                           
  4536                           ; 2 bytes @ 0xB5
  4537  0001B5                     	ds	2
  4538  0001B7                     ??_main:
  4539                           
  4540                           ; 1 bytes @ 0xB7
  4541  0001B7                     	ds	2
  4542                           tblptru	equ	0xFF8
  4543                           tblptrh	equ	0xFF7
  4544                           tblptrl	equ	0xFF6
  4545                           tablat	equ	0xFF5
  4546                           postinc0	equ	0xFEE
  4547                           wreg	equ	0xFE8
  4548                           postdec1	equ	0xFE5
  4549                           fsr1h	equ	0xFE2
  4550                           fsr1l	equ	0xFE1
  4551                           
  4552                           	psect	cstackBANK0
  4553  000060                     __pcstackBANK0:
  4554                           	opt stack 0
  4555  000060                     ?i2___ftsub:
  4556                           	opt stack 0
  4557  000060                     atan@y:
  4558                           	opt stack 0
  4559  000060                     i2___ftsub@f1:
  4560                           	opt stack 0
  4561                           
  4562                           ; 3 bytes @ 0x0
  4563  000060                     	ds	3
  4564  000063                     atan@x:
  4565                           	opt stack 0
  4566  000063                     i2___ftsub@f2:
  4567                           	opt stack 0
  4568                           
  4569                           ; 3 bytes @ 0x3
  4570  000063                     	ds	3
  4571  000066                     ?i2_printf:
  4572                           	opt stack 0
  4573  000066                     ?_sin:
  4574                           	opt stack 0
  4575  000066                     ?_sqrt:
  4576                           	opt stack 0
  4577  000066                     atan@recip:
  4578                           	opt stack 0
  4579  000066                     i2printf@f:
  4580                           	opt stack 0
  4581  000066                     sin@f:
  4582                           	opt stack 0
  4583  000066                     sqrt@a:
  4584                           	opt stack 0
  4585                           
  4586                           ; 3 bytes @ 0x6
  4587  000066                     	ds	1
  4588  000067                     atan@val_squared:
  4589                           	opt stack 0
  4590                           
  4591                           ; 3 bytes @ 0x7
  4592  000067                     	ds	1
  4593  000068                     ??i2_printf:
  4594                           
  4595                           ; 1 bytes @ 0x8
  4596  000068                     	ds	1
  4597  000069                     ??_sqrt:
  4598  000069                     sin@y:
  4599                           	opt stack 0
  4600                           
  4601                           ; 3 bytes @ 0x9
  4602  000069                     	ds	1
  4603  00006A                     atan@val:
  4604                           	opt stack 0
  4605                           
  4606                           ; 3 bytes @ 0xA
  4607  00006A                     	ds	2
  4608  00006C                     sqrt@og:
  4609                           	opt stack 0
  4610  00006C                     _sin$3333:
  4611                           	opt stack 0
  4612                           
  4613                           ; 3 bytes @ 0xC
  4614  00006C                     	ds	2
  4615  00006E                     i2_printf$3337:
  4616                           	opt stack 0
  4617                           
  4618                           ; 3 bytes @ 0xE
  4619  00006E                     	ds	1
  4620  00006F                     sqrt@i:
  4621                           	opt stack 0
  4622  00006F                     sin@x2:
  4623                           	opt stack 0
  4624                           
  4625                           ; 3 bytes @ 0xF
  4626  00006F                     	ds	1
  4627  000070                     sqrt@z:
  4628                           	opt stack 0
  4629                           
  4630                           ; 3 bytes @ 0x10
  4631  000070                     	ds	1
  4632  000071                     i2printf@idx:
  4633                           	opt stack 0
  4634                           
  4635                           ; 1 bytes @ 0x11
  4636  000071                     	ds	1
  4637  000072                     sin@sgn:
  4638                           	opt stack 0
  4639  000072                     i2printf@cp:
  4640                           	opt stack 0
  4641                           
  4642                           ; 2 bytes @ 0x12
  4643  000072                     	ds	1
  4644  000073                     ?_currentMeasuredToPeak:
  4645                           	opt stack 0
  4646  000073                     currentMeasuredToPeak@Measured:
  4647                           	opt stack 0
  4648  000073                     sqrt@q:
  4649                           	opt stack 0
  4650                           
  4651                           ; 3 bytes @ 0x13
  4652  000073                     	ds	1
  4653  000074                     i2printf@len:
  4654                           	opt stack 0
  4655                           
  4656                           ; 2 bytes @ 0x14
  4657  000074                     	ds	2
  4658  000076                     i2printf@ap:
  4659                           	opt stack 0
  4660  000076                     currentMeasuredToPeak@Angle:
  4661                           	opt stack 0
  4662  000076                     sqrt@x:
  4663                           	opt stack 0
  4664                           
  4665                           ; 3 bytes @ 0x16
  4666  000076                     	ds	2
  4667  000078                     i2printf@flag:
  4668                           	opt stack 0
  4669                           
  4670                           ; 2 bytes @ 0x18
  4671  000078                     	ds	1
  4672  000079                     ?_asin:
  4673                           	opt stack 0
  4674  000079                     currentMeasuredToPeak@Peak:
  4675                           	opt stack 0
  4676  000079                     asin@x:
  4677                           	opt stack 0
  4678                           
  4679                           ; 3 bytes @ 0x19
  4680  000079                     	ds	1
  4681  00007A                     i2printf@exp:
  4682                           	opt stack 0
  4683                           
  4684                           ; 2 bytes @ 0x1A
  4685  00007A                     	ds	2
  4686  00007C                     asin@sgn:
  4687                           	opt stack 0
  4688  00007C                     i2printf@tmpval:
  4689                           	opt stack 0
  4690                           
  4691                           ; 4 bytes @ 0x1C
  4692  00007C                     	ds	3
  4693  00007F                     _asin$3329:
  4694                           	opt stack 0
  4695                           
  4696                           ; 3 bytes @ 0x1F
  4697  00007F                     	ds	1
  4698  000080                     i2printf@fval:
  4699                           	opt stack 0
  4700                           
  4701                           ; 3 bytes @ 0x20
  4702  000080                     	ds	2
  4703  000082                     _asin$3332:
  4704                           	opt stack 0
  4705                           
  4706                           ; 3 bytes @ 0x22
  4707  000082                     	ds	1
  4708  000083                     i2printf@val:
  4709                           	opt stack 0
  4710                           
  4711                           ; 4 bytes @ 0x23
  4712  000083                     	ds	2
  4713  000085                     _asin$3331:
  4714                           	opt stack 0
  4715                           
  4716                           ; 3 bytes @ 0x25
  4717  000085                     	ds	2
  4718  000087                     i2printf@prec:
  4719                           	opt stack 0
  4720                           
  4721                           ; 2 bytes @ 0x27
  4722  000087                     	ds	1
  4723  000088                     asin@y:
  4724                           	opt stack 0
  4725                           
  4726                           ; 3 bytes @ 0x28
  4727  000088                     	ds	1
  4728  000089                     i2printf@c:
  4729                           	opt stack 0
  4730                           
  4731                           ; 1 bytes @ 0x29
  4732  000089                     	ds	2
  4733  00008B                     _asin$3330:
  4734                           	opt stack 0
  4735                           
  4736                           ; 3 bytes @ 0x2B
  4737  00008B                     	ds	3
  4738  00008E                     ?_acos:
  4739                           	opt stack 0
  4740  00008E                     acos@x:
  4741                           	opt stack 0
  4742                           
  4743                           ; 3 bytes @ 0x2E
  4744  00008E                     	ds	3
  4745  000091                     _acos$3328:
  4746                           	opt stack 0
  4747                           
  4748                           ; 3 bytes @ 0x31
  4749  000091                     	ds	3
  4750  000094                     ?_peakToRMS:
  4751                           	opt stack 0
  4752  000094                     peakToRMS@Peak:
  4753                           	opt stack 0
  4754                           
  4755                           ; 3 bytes @ 0x34
  4756  000094                     	ds	3
  4757  000097                     peakToRMS@Angle:
  4758                           	opt stack 0
  4759                           
  4760                           ; 3 bytes @ 0x37
  4761  000097                     	ds	3
  4762  00009A                     _peakToRMS$3322:
  4763                           	opt stack 0
  4764                           
  4765                           ; 3 bytes @ 0x3A
  4766  00009A                     	ds	3
  4767  00009D                     _peakToRMS$3323:
  4768                           	opt stack 0
  4769                           
  4770                           ; 3 bytes @ 0x3D
  4771  00009D                     	ds	3
  4772  0000A0                     _peakToRMS$3321:
  4773                           	opt stack 0
  4774                           
  4775                           ; 3 bytes @ 0x40
  4776  0000A0                     	ds	3
  4777  0000A3                     peakToRMS@RMS:
  4778                           	opt stack 0
  4779                           
  4780                           ; 3 bytes @ 0x43
  4781  0000A3                     	ds	3
  4782  0000A6                     _ADC_postProcessingCallback$3325:
  4783                           	opt stack 0
  4784                           
  4785                           ; 3 bytes @ 0x46
  4786  0000A6                     	ds	3
  4787  0000A9                     _ADC_postProcessingCallback$3326:
  4788                           	opt stack 0
  4789                           
  4790                           ; 3 bytes @ 0x49
  4791  0000A9                     	ds	3
  4792  0000AC                     _ADC_postProcessingCallback$3327:
  4793                           	opt stack 0
  4794                           
  4795                           ; 3 bytes @ 0x4C
  4796  0000AC                     	ds	3
  4797  0000AF                     ADC_postProcessingCallback@currentADCChannel:
  4798                           	opt stack 0
  4799                           
  4800                           ; 1 bytes @ 0x4F
  4801  0000AF                     	ds	1
  4802  0000B0                     _ADC_postProcessingCallback$3324:
  4803                           	opt stack 0
  4804                           
  4805                           ; 3 bytes @ 0x50
  4806  0000B0                     	ds	3
  4807  0000B3                     ??_INTERRUPT_InterruptManagerHigh:
  4808                           
  4809                           ; 1 bytes @ 0x53
  4810  0000B3                     	ds	18
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           postinc0	equ	0xFEE
  4816                           wreg	equ	0xFE8
  4817                           postdec1	equ	0xFE5
  4818                           fsr1h	equ	0xFE2
  4819                           fsr1l	equ	0xFE1
  4820                           
  4821                           	psect	cstackCOMRAM
  4822  000001                     __pcstackCOMRAM:
  4823                           	opt stack 0
  4824  000001                     ??i2_isdigit:
  4825  000001                     ?_ADCC_GetConversionResult:
  4826                           	opt stack 0
  4827  000001                     ?i2___awmod:
  4828                           	opt stack 0
  4829  000001                     ?i2___ftpack:
  4830                           	opt stack 0
  4831  000001                     ?i2__div_to_l_:
  4832                           	opt stack 0
  4833  000001                     ?i2__tdiv_to_l_:
  4834                           	opt stack 0
  4835  000001                     ?i2___lldiv:
  4836                           	opt stack 0
  4837  000001                     i2EUSART2_Write@txData:
  4838                           	opt stack 0
  4839  000001                     TMR5_WriteTimer@timerVal:
  4840                           	opt stack 0
  4841  000001                     i2___awmod@dividend:
  4842                           	opt stack 0
  4843  000001                     frexp@value:
  4844                           	opt stack 0
  4845  000001                     i2__div_to_l_@f1:
  4846                           	opt stack 0
  4847  000001                     i2___ftpack@arg:
  4848                           	opt stack 0
  4849  000001                     i2__tdiv_to_l_@f1:
  4850                           	opt stack 0
  4851  000001                     i2___lldiv@dividend:
  4852                           	opt stack 0
  4853                           
  4854                           ; 4 bytes @ 0x0
  4855  000001                     	ds	1
  4856  000002                     i2putch@txData:
  4857                           	opt stack 0
  4858  000002                     i2_isdigit$2497:
  4859                           	opt stack 0
  4860                           
  4861                           ; 1 bytes @ 0x1
  4862  000002                     	ds	1
  4863  000003                     ??_ADCC_GetConversionResult:
  4864  000003                     i2isdigit@c:
  4865                           	opt stack 0
  4866  000003                     i2___awmod@divisor:
  4867                           	opt stack 0
  4868                           
  4869                           ; 2 bytes @ 0x2
  4870  000003                     	ds	1
  4871  000004                     i2___ftpack@exp:
  4872                           	opt stack 0
  4873  000004                     frexp@eptr:
  4874                           	opt stack 0
  4875  000004                     i2__div_to_l_@f2:
  4876                           	opt stack 0
  4877  000004                     i2__tdiv_to_l_@f2:
  4878                           	opt stack 0
  4879                           
  4880                           ; 3 bytes @ 0x3
  4881  000004                     	ds	1
  4882  000005                     i2___awmod@counter:
  4883                           	opt stack 0
  4884  000005                     i2___ftpack@sign:
  4885                           	opt stack 0
  4886  000005                     i2___lldiv@divisor:
  4887                           	opt stack 0
  4888                           
  4889                           ; 4 bytes @ 0x4
  4890  000005                     	ds	1
  4891  000006                     ??_frexp:
  4892  000006                     ??i2___ftpack:
  4893  000006                     i2___awmod@sign:
  4894                           	opt stack 0
  4895                           
  4896                           ; 1 bytes @ 0x5
  4897  000006                     	ds	1
  4898  000007                     ??i2__tdiv_to_l_:
  4899  000007                     ?i2___awdiv:
  4900                           	opt stack 0
  4901  000007                     i2___awdiv@dividend:
  4902                           	opt stack 0
  4903  000007                     i2__div_to_l_@quot:
  4904                           	opt stack 0
  4905                           
  4906                           ; 4 bytes @ 0x6
  4907  000007                     	ds	2
  4908  000009                     ?___lwtoft:
  4909                           	opt stack 0
  4910  000009                     ?i2___lltoft:
  4911                           	opt stack 0
  4912  000009                     ___lwtoft@c:
  4913                           	opt stack 0
  4914  000009                     i2___awdiv@divisor:
  4915                           	opt stack 0
  4916  000009                     i2___lldiv@quotient:
  4917                           	opt stack 0
  4918  000009                     i2___lltoft@c:
  4919                           	opt stack 0
  4920                           
  4921                           ; 4 bytes @ 0x8
  4922  000009                     	ds	1
  4923  00000A                     i2__tdiv_to_l_@quot:
  4924                           	opt stack 0
  4925                           
  4926                           ; 4 bytes @ 0x9
  4927  00000A                     	ds	1
  4928  00000B                     i2___awdiv@counter:
  4929                           	opt stack 0
  4930  00000B                     i2__div_to_l_@cntr:
  4931                           	opt stack 0
  4932                           
  4933                           ; 1 bytes @ 0xA
  4934  00000B                     	ds	1
  4935  00000C                     i2___awdiv@sign:
  4936                           	opt stack 0
  4937  00000C                     i2__div_to_l_@exp1:
  4938                           	opt stack 0
  4939                           
  4940                           ; 1 bytes @ 0xB
  4941  00000C                     	ds	1
  4942  00000D                     ??i2___lltoft:
  4943  00000D                     i2___lldiv@counter:
  4944                           	opt stack 0
  4945  00000D                     i2___awdiv@quotient:
  4946                           	opt stack 0
  4947                           
  4948                           ; 2 bytes @ 0xC
  4949  00000D                     	ds	1
  4950  00000E                     ?i2___llmod:
  4951                           	opt stack 0
  4952  00000E                     i2__tdiv_to_l_@cntr:
  4953                           	opt stack 0
  4954  00000E                     i2___llmod@dividend:
  4955                           	opt stack 0
  4956                           
  4957                           ; 4 bytes @ 0xD
  4958  00000E                     	ds	1
  4959  00000F                     ?i2___wmul:
  4960                           	opt stack 0
  4961  00000F                     i2__tdiv_to_l_@exp1:
  4962                           	opt stack 0
  4963  00000F                     i2___wmul@multiplier:
  4964                           	opt stack 0
  4965                           
  4966                           ; 2 bytes @ 0xE
  4967  00000F                     	ds	2
  4968  000011                     i2___lltoft@exp:
  4969                           	opt stack 0
  4970  000011                     i2___wmul@multiplicand:
  4971                           	opt stack 0
  4972                           
  4973                           ; 2 bytes @ 0x10
  4974  000011                     	ds	1
  4975  000012                     i2___llmod@divisor:
  4976                           	opt stack 0
  4977                           
  4978                           ; 4 bytes @ 0x11
  4979  000012                     	ds	1
  4980  000013                     i2___wmul@product:
  4981                           	opt stack 0
  4982                           
  4983                           ; 2 bytes @ 0x12
  4984  000013                     	ds	2
  4985  000015                     ?i2___ftdiv:
  4986                           	opt stack 0
  4987  000015                     i2___ftdiv@f1:
  4988                           	opt stack 0
  4989                           
  4990                           ; 3 bytes @ 0x14
  4991  000015                     	ds	1
  4992  000016                     i2___llmod@counter:
  4993                           	opt stack 0
  4994                           
  4995                           ; 1 bytes @ 0x15
  4996  000016                     	ds	2
  4997  000018                     i2___ftdiv@f2:
  4998                           	opt stack 0
  4999                           
  5000                           ; 3 bytes @ 0x17
  5001  000018                     	ds	3
  5002  00001B                     ??i2___ftdiv:
  5003                           
  5004                           ; 1 bytes @ 0x1A
  5005  00001B                     	ds	3
  5006  00001E                     i2___ftdiv@cntr:
  5007                           	opt stack 0
  5008                           
  5009                           ; 1 bytes @ 0x1D
  5010  00001E                     	ds	1
  5011  00001F                     i2___ftdiv@exp:
  5012                           	opt stack 0
  5013                           
  5014                           ; 1 bytes @ 0x1E
  5015  00001F                     	ds	1
  5016  000020                     i2___ftdiv@f3:
  5017                           	opt stack 0
  5018                           
  5019                           ; 3 bytes @ 0x1F
  5020  000020                     	ds	3
  5021  000023                     i2___ftdiv@sign:
  5022                           	opt stack 0
  5023                           
  5024                           ; 1 bytes @ 0x22
  5025  000023                     	ds	1
  5026  000024                     ?i2___ftneg:
  5027                           	opt stack 0
  5028  000024                     i2___ftneg@f1:
  5029                           	opt stack 0
  5030                           
  5031                           ; 3 bytes @ 0x23
  5032  000024                     	ds	3
  5033  000027                     ?_fabs:
  5034                           	opt stack 0
  5035  000027                     ?i2___ftmul:
  5036                           	opt stack 0
  5037  000027                     fabs@d:
  5038                           	opt stack 0
  5039  000027                     i2___ftmul@f1:
  5040                           	opt stack 0
  5041                           
  5042                           ; 3 bytes @ 0x26
  5043  000027                     	ds	3
  5044  00002A                     i2___ftge@ff1:
  5045                           	opt stack 0
  5046  00002A                     i2___ftmul@f2:
  5047                           	opt stack 0
  5048                           
  5049                           ; 3 bytes @ 0x29
  5050  00002A                     	ds	3
  5051  00002D                     ??i2___ftmul:
  5052  00002D                     i2___ftge@ff2:
  5053                           	opt stack 0
  5054                           
  5055                           ; 3 bytes @ 0x2C
  5056  00002D                     	ds	3
  5057  000030                     ??i2___ftge:
  5058  000030                     i2___ftmul@exp:
  5059                           	opt stack 0
  5060                           
  5061                           ; 1 bytes @ 0x2F
  5062  000030                     	ds	1
  5063  000031                     i2___ftmul@f3_as_product:
  5064                           	opt stack 0
  5065                           
  5066                           ; 3 bytes @ 0x30
  5067  000031                     	ds	3
  5068  000034                     i2___ftmul@cntr:
  5069                           	opt stack 0
  5070                           
  5071                           ; 1 bytes @ 0x33
  5072  000034                     	ds	1
  5073  000035                     i2___ftmul@sign:
  5074                           	opt stack 0
  5075                           
  5076                           ; 1 bytes @ 0x34
  5077  000035                     	ds	1
  5078  000036                     ?i2_fround:
  5079                           	opt stack 0
  5080  000036                     ?i2_scale:
  5081                           	opt stack 0
  5082                           
  5083                           ; 3 bytes @ 0x35
  5084  000036                     	ds	3
  5085  000039                     i2_fround$3335:
  5086                           	opt stack 0
  5087  000039                     i2_scale$3336:
  5088                           	opt stack 0
  5089                           
  5090                           ; 3 bytes @ 0x38
  5091  000039                     	ds	3
  5092  00003C                     i2scale@scl:
  5093                           	opt stack 0
  5094  00003C                     i2_fround$3334:
  5095                           	opt stack 0
  5096                           
  5097                           ; 3 bytes @ 0x3B
  5098  00003C                     	ds	1
  5099  00003D                     ?i2___fttol:
  5100                           	opt stack 0
  5101  00003D                     i2___fttol@f1:
  5102                           	opt stack 0
  5103                           
  5104                           ; 3 bytes @ 0x3C
  5105  00003D                     	ds	2
  5106  00003F                     i2fround@prec:
  5107                           	opt stack 0
  5108                           
  5109                           ; 1 bytes @ 0x3E
  5110  00003F                     	ds	1
  5111  000040                     ?i2___ftadd:
  5112                           	opt stack 0
  5113  000040                     i2___ftadd@f1:
  5114                           	opt stack 0
  5115                           
  5116                           ; 3 bytes @ 0x3F
  5117  000040                     	ds	1
  5118  000041                     ??i2___fttol:
  5119                           
  5120                           ; 1 bytes @ 0x40
  5121  000041                     	ds	2
  5122  000043                     i2___ftadd@f2:
  5123                           	opt stack 0
  5124                           
  5125                           ; 3 bytes @ 0x42
  5126  000043                     	ds	3
  5127  000046                     ??i2___ftadd:
  5128  000046                     i2___fttol@sign1:
  5129                           	opt stack 0
  5130                           
  5131                           ; 1 bytes @ 0x45
  5132  000046                     	ds	1
  5133  000047                     i2___fttol@lval:
  5134                           	opt stack 0
  5135                           
  5136                           ; 4 bytes @ 0x46
  5137  000047                     	ds	2
  5138  000049                     i2___ftadd@sign:
  5139                           	opt stack 0
  5140                           
  5141                           ; 1 bytes @ 0x48
  5142  000049                     	ds	1
  5143  00004A                     i2___ftadd@exp2:
  5144                           	opt stack 0
  5145                           
  5146                           ; 1 bytes @ 0x49
  5147  00004A                     	ds	1
  5148  00004B                     i2___ftadd@exp1:
  5149                           	opt stack 0
  5150  00004B                     i2___fttol@exp1:
  5151                           	opt stack 0
  5152                           
  5153                           ; 1 bytes @ 0x4A
  5154  00004B                     	ds	1
  5155  00004C                     ?_eval_poly:
  5156                           	opt stack 0
  5157  00004C                     ?___altoft:
  5158                           	opt stack 0
  5159  00004C                     eval_poly@x:
  5160                           	opt stack 0
  5161  00004C                     ___altoft@c:
  5162                           	opt stack 0
  5163                           
  5164                           ; 4 bytes @ 0x4B
  5165  00004C                     	ds	3
  5166  00004F                     eval_poly@d:
  5167                           	opt stack 0
  5168                           
  5169                           ; 2 bytes @ 0x4E
  5170  00004F                     	ds	1
  5171  000050                     ??___altoft:
  5172                           
  5173                           ; 1 bytes @ 0x4F
  5174  000050                     	ds	1
  5175  000051                     eval_poly@n:
  5176                           	opt stack 0
  5177                           
  5178                           ; 2 bytes @ 0x50
  5179  000051                     	ds	2
  5180  000053                     ??_eval_poly:
  5181                           
  5182                           ; 1 bytes @ 0x52
  5183  000053                     	ds	1
  5184  000054                     ___altoft@exp:
  5185                           	opt stack 0
  5186                           
  5187                           ; 1 bytes @ 0x53
  5188  000054                     	ds	1
  5189  000055                     ___altoft@sign:
  5190                           	opt stack 0
  5191  000055                     eval_poly@res:
  5192                           	opt stack 0
  5193                           
  5194                           ; 3 bytes @ 0x54
  5195  000055                     	ds	1
  5196  000056                     ?_floor:
  5197                           	opt stack 0
  5198  000056                     floor@x:
  5199                           	opt stack 0
  5200                           
  5201                           ; 3 bytes @ 0x55
  5202  000056                     	ds	2
  5203  000058                     ?_atan:
  5204                           	opt stack 0
  5205  000058                     atan@f:
  5206                           	opt stack 0
  5207                           
  5208                           ; 3 bytes @ 0x57
  5209  000058                     	ds	1
  5210  000059                     floor@i:
  5211                           	opt stack 0
  5212                           
  5213                           ; 3 bytes @ 0x58
  5214  000059                     	ds	2
  5215  00005B                     
  5216                           ; 1 bytes @ 0x5A
  5217  00005B                     	ds	1
  5218  00005C                     floor@expon:
  5219                           	opt stack 0
  5220                           
  5221                           ; 2 bytes @ 0x5B
  5222  00005C                     	ds	2
  5223  00005E                     tblptru	equ	0xFF8
  5224                           tblptrh	equ	0xFF7
  5225                           tblptrl	equ	0xFF6
  5226                           tablat	equ	0xFF5
  5227                           postinc0	equ	0xFEE
  5228                           wreg	equ	0xFE8
  5229                           postdec1	equ	0xFE5
  5230                           fsr1h	equ	0xFE2
  5231                           fsr1l	equ	0xFE1
  5232                           
  5233                           ; 1 bytes @ 0x5D
  5234 ;;
  5235 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5236 ;;
  5237 ;; *************** function _main *****************
  5238 ;; Defined at:
  5239 ;;		line 279 in file "main.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;		None
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;		None
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5255 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5256 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5257 ;;Total ram usage:        2 bytes
  5258 ;; Hardware stack levels required when called:   22
  5259 ;; This function calls:
  5260 ;;		_ADCC_SetADIInterruptHandler
  5261 ;;		_SYSTEM_Initialize
  5262 ;;		_TMR6_SetInterruptHandler
  5263 ;;		_TMR7_SetInterruptHandler
  5264 ;;		_terminal_clearTerminal
  5265 ;;		_terminal_ringBufferPull
  5266 ;;		_terminal_setCursorHome
  5267 ;;		_terminal_textAttributesReset
  5268 ;; This function is called by:
  5269 ;;		Startup code after reset
  5270 ;; This function uses a non-reentrant model
  5271 ;;
  5272                           
  5273                           	psect	text0
  5274  01569C                     __ptext0:
  5275                           	opt stack 0
  5276  01569C                     _main:
  5277                           	opt stack 9
  5278                           
  5279                           ;main.c: 284: _delay((unsigned long)((250)*(64000000/4000.0)));
  5280                           
  5281                           ;incstack = 0
  5282  01569C  0E15               	movlw	21
  5283  01569E  0101               	movlb	1	; () banked
  5284  0156A0  6FB8               	movwf	(??_main+1)& (0+255),b
  5285  0156A2  0E4B               	movlw	75
  5286  0156A4  6FB7               	movwf	??_main& (0+255),b
  5287  0156A6  0EBE               	movlw	190
  5288  0156A8                     u16327:
  5289  0156A8  2EE8               	decfsz	wreg,f,c
  5290  0156AA  D7FE               	bra	u16327
  5291  0156AC  2FB7               	decfsz	??_main& (0+255),f,b
  5292  0156AE  D7FC               	bra	u16327
  5293  0156B0  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  5294  0156B2  D7FA               	bra	u16327
  5295  0156B4  F000               	nop	
  5296                           
  5297                           ;main.c: 287: SYSTEM_Initialize();
  5298  0156B6  EC52  F0B0         	call	_SYSTEM_Initialize	;wreg free
  5299                           
  5300                           ;main.c: 290: LATGbits.LATG0 = 0;
  5301  0156BA  907F               	bcf	3967,0,c	;volatile
  5302                           
  5303                           ;main.c: 291: LATGbits.LATG1 = 0;
  5304  0156BC  927F               	bcf	3967,1,c	;volatile
  5305                           
  5306                           ;main.c: 292: load_enable = 0;
  5307  0156BE  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  5308                           
  5309                           ;main.c: 295: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  5310  0156C0  0E76               	movlw	low _heartbeatTimerCallback
  5311  0156C2  0101               	movlb	1	; () banked
  5312  0156C4  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  5313  0156C6  0E60               	movlw	high _heartbeatTimerCallback
  5314  0156C8  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5315  0156CA  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  5316  0156CC  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5317  0156CE  EC8C  F0B1         	call	_TMR6_SetInterruptHandler	;wreg free
  5318                           
  5319                           ;main.c: 298: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  5320  0156D2  0EB0               	movlw	low _ADC_postProcessingCallback
  5321  0156D4  0101               	movlb	1	; () banked
  5322  0156D6  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  5323  0156D8  0E1C               	movlw	high _ADC_postProcessingCallback
  5324  0156DA  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  5325  0156DC  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  5326  0156DE  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  5327  0156E0  ECA8  F0B1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  5328                           
  5329                           ;main.c: 301: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  5330  0156E4  0EF4               	movlw	low _acquisitionTimerCallback
  5331  0156E6  0101               	movlb	1	; () banked
  5332  0156E8  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  5333  0156EA  0E59               	movlw	high _acquisitionTimerCallback
  5334  0156EC  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5335  0156EE  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  5336  0156F0  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5337  0156F2  EC85  F0B1         	call	_TMR7_SetInterruptHandler	;wreg free
  5338                           
  5339                           ;main.c: 304: (INTCONbits.GIEH = 1);
  5340  0156F6  8EF2               	bsf	intcon,7,c	;volatile
  5341                           
  5342                           ;main.c: 307: (INTCONbits.GIEL = 1);
  5343  0156F8  8CF2               	bsf	intcon,6,c	;volatile
  5344                           
  5345                           ;main.c: 311: terminal_clearTerminal();
  5346  0156FA  EC76  F0B1         	call	_terminal_clearTerminal	;wreg free
  5347                           
  5348                           ;main.c: 312: terminal_setCursorHome();
  5349  0156FE  EC66  F0B1         	call	_terminal_setCursorHome	;wreg free
  5350                           
  5351                           ;main.c: 313: terminal_textAttributesReset();
  5352  015702  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  5353  015706                     
  5354                           ;main.c: 317: {
  5355                           ;main.c: 320: if (eusart2RxStringReady) {
  5356  015706  0100               	movlb	0	; () banked
  5357  015708  A1F1               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5358  01570A  D7FD               	goto	l854
  5359                           
  5360                           ; BSR set to: 0
  5361                           ;main.c: 322: terminal_ringBufferPull();
  5362  01570C  EC4C  F0A2         	call	_terminal_ringBufferPull	;wreg free
  5363  015710  D7FA               	goto	l854
  5364  015712                     __end_of_main:
  5365                           	opt stack 0
  5366                           tblptru	equ	0xFF8
  5367                           tblptrh	equ	0xFF7
  5368                           tblptrl	equ	0xFF6
  5369                           tablat	equ	0xFF5
  5370                           intcon	equ	0xFF2
  5371                           postinc0	equ	0xFEE
  5372                           wreg	equ	0xFE8
  5373                           postdec1	equ	0xFE5
  5374                           fsr1h	equ	0xFE2
  5375                           fsr1l	equ	0xFE1
  5376                           
  5377 ;; *************** function _terminal_setCursorHome *****************
  5378 ;; Defined at:
  5379 ;;		line 85 in file "ring_buffer_interface.c"
  5380 ;; Parameters:    Size  Location     Type
  5381 ;;		None
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;		None
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  1    wreg      void 
  5386 ;; Registers used:
  5387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5397 ;;Total ram usage:        0 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; Hardware stack levels required when called:   18
  5400 ;; This function calls:
  5401 ;;		_printf
  5402 ;; This function is called by:
  5403 ;;		_main
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           	psect	text1
  5408  0162CC                     __ptext1:
  5409                           	opt stack 0
  5410  0162CC                     _terminal_setCursorHome:
  5411                           	opt stack 12
  5412                           
  5413                           ;ring_buffer_interface.c: 86: printf("\033[H");
  5414                           
  5415                           ;incstack = 0
  5416  0162CC  0EB5               	movlw	low STR_3
  5417  0162CE  0101               	movlb	1	; () banked
  5418  0162D0  6F64               	movwf	printf@f& (0+255),b
  5419  0162D2  0EFF               	movlw	high STR_3
  5420  0162D4  6F65               	movwf	(printf@f+1)& (0+255),b
  5421  0162D6  EC00  F080         	call	_printf	;wreg free
  5422  0162DA  0012               	return		;funcret
  5423  0162DC                     __end_of_terminal_setCursorHome:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           intcon	equ	0xFF2
  5430                           postinc0	equ	0xFEE
  5431                           wreg	equ	0xFE8
  5432                           postdec1	equ	0xFE5
  5433                           fsr1h	equ	0xFE2
  5434                           fsr1l	equ	0xFE1
  5435                           
  5436 ;; *************** function _terminal_ringBufferPull *****************
  5437 ;; Defined at:
  5438 ;;		line 12 in file "ring_buffer_interface.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;		None
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  index           2  179[BANK1 ] int 
  5443 ;;  index           2  181[BANK1 ] int 
  5444 ;;  charNumber      2  177[BANK1 ] int 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5455 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5456 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5457 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5458 ;;Total ram usage:        9 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:   21
  5461 ;; This function calls:
  5462 ;;		_EUSART2_Read
  5463 ;;		_ringBufferLUT
  5464 ;;		_strlen
  5465 ;; This function is called by:
  5466 ;;		_main
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text2
  5471  014498                     __ptext2:
  5472                           	opt stack 0
  5473  014498                     _terminal_ringBufferPull:
  5474                           	opt stack 9
  5475                           
  5476                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  5477                           
  5478                           ;incstack = 0
  5479  014498  C1D9  F1B1         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  5480  01449C  0101               	movlb	1	; () banked
  5481  01449E  6BB2               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  5482                           
  5483                           ; BSR set to: 1
  5484                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  5485  0144A0  0E00               	movlw	0
  5486  0144A2  6FB6               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  5487  0144A4  0E00               	movlw	0
  5488  0144A6  6FB5               	movwf	terminal_ringBufferPull@index& (0+255),b
  5489  0144A8                     l10453:
  5490                           
  5491                           ; BSR set to: 1
  5492  0144A8  BFB6               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  5493  0144AA  D006               	goto	l893
  5494  0144AC  51B6               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5495  0144AE  E10F               	bnz	l10463
  5496  0144B0  0E40               	movlw	64
  5497  0144B2  5DB5               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  5498  0144B4  B0D8               	btfsc	status,0,c
  5499  0144B6  D00B               	goto	u12510
  5500  0144B8                     l893:
  5501                           
  5502                           ; BSR set to: 1
  5503                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  5504                           
  5505                           ; BSR set to: 1
  5506  0144B8  0EC0               	movlw	low _line
  5507  0144BA  25B5               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  5508  0144BC  6ED9               	movwf	fsr2l,c
  5509  0144BE  0E02               	movlw	high _line
  5510  0144C0  21B6               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5511  0144C2  6EDA               	movwf	fsr2h,c
  5512  0144C4  0E00               	movlw	0
  5513  0144C6  6EDF               	movwf	indf2,c
  5514                           
  5515                           ; BSR set to: 1
  5516  0144C8  4BB5               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  5517  0144CA  2BB6               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  5518  0144CC  D7ED               	goto	l10453
  5519  0144CE                     u12510:
  5520  0144CE                     l10463:
  5521                           
  5522                           ; BSR set to: 1
  5523                           ;ring_buffer_interface.c: 21: }
  5524                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  5525  0144CE  0E00               	movlw	0
  5526  0144D0  6FB4               	movwf	(terminal_ringBufferPull@index_1975+1)& (0+255),b
  5527  0144D2  0E00               	movlw	0
  5528  0144D4  6FB3               	movwf	terminal_ringBufferPull@index_1975& (0+255),b
  5529  0144D6  D00E               	goto	l895
  5530  0144D8                     
  5531                           ; BSR set to: 1
  5532                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  5533                           
  5534                           ; BSR set to: 1
  5535  0144D8  EC1E  F0AF         	call	_EUSART2_Read	;wreg free
  5536  0144DC  0101               	movlb	1	; () banked
  5537  0144DE  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5538  0144E0  0EC0               	movlw	low _line
  5539  0144E2  25B3               	addwf	terminal_ringBufferPull@index_1975& (0+255),w,b
  5540  0144E4  6ED9               	movwf	fsr2l,c
  5541  0144E6  0E02               	movlw	high _line
  5542  0144E8  21B4               	addwfc	(terminal_ringBufferPull@index_1975+1)& (0+255),w,b
  5543  0144EA  6EDA               	movwf	fsr2h,c
  5544  0144EC  C1AE  FFDF         	movff	??_terminal_ringBufferPull,indf2
  5545                           
  5546                           ; BSR set to: 1
  5547  0144F0  4BB3               	infsnz	terminal_ringBufferPull@index_1975& (0+255),f,b
  5548  0144F2  2BB4               	incf	(terminal_ringBufferPull@index_1975+1)& (0+255),f,b
  5549  0144F4                     l895:
  5550                           
  5551                           ; BSR set to: 1
  5552                           
  5553                           ; BSR set to: 1
  5554  0144F4  51B1               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  5555  0144F6  5DB3               	subwf	terminal_ringBufferPull@index_1975& (0+255),w,b
  5556  0144F8  51B4               	movf	(terminal_ringBufferPull@index_1975+1)& (0+255),w,b
  5557  0144FA  0A80               	xorlw	128
  5558  0144FC  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5559  0144FE  51B2               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  5560  014500  0A80               	xorlw	128
  5561  014502  59AE               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  5562  014504  A0D8               	btfss	status,0,c
  5563  014506  D7E8               	goto	l896
  5564                           
  5565                           ; BSR set to: 1
  5566                           ;ring_buffer_interface.c: 28: }
  5567                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  5568  014508  C0E4  F1DA         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  5569                           
  5570                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  5571                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  5572  01450C  D017               	goto	l898
  5573  01450E                     
  5574                           ; BSR set to: 1
  5575                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  5576                           
  5577                           ; BSR set to: 1
  5578  01450E  0EFF               	movlw	255
  5579  014510  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5580  014512  0EFF               	movlw	255
  5581  014514  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5582  014516  0EC0               	movlw	low _line
  5583  014518  6F17               	movwf	strlen@s& (0+255),b
  5584  01451A  0E02               	movlw	high _line
  5585  01451C  6F18               	movwf	(strlen@s+1)& (0+255),b
  5586  01451E  ECE6  F0AD         	call	_strlen	;wreg free
  5587  014522  0101               	movlb	1	; () banked
  5588  014524  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5589  014526  2717               	addwf	?_strlen& (0+255),f,b
  5590  014528  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5591  01452A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5592  01452C  0EC0               	movlw	low _line
  5593  01452E  2517               	addwf	?_strlen& (0+255),w,b
  5594  014530  6ED9               	movwf	fsr2l,c
  5595  014532  0E02               	movlw	high _line
  5596  014534  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5597  014536  6EDA               	movwf	fsr2h,c
  5598  014538  0E00               	movlw	0
  5599  01453A  6EDF               	movwf	indf2,c
  5600  01453C                     l898:
  5601                           
  5602                           ; BSR set to: 1
  5603  01453C  0EFF               	movlw	255
  5604  01453E  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5605  014540  0EFF               	movlw	255
  5606  014542  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5607  014544  0EC0               	movlw	low _line
  5608  014546  6F17               	movwf	strlen@s& (0+255),b
  5609  014548  0E02               	movlw	high _line
  5610  01454A  6F18               	movwf	(strlen@s+1)& (0+255),b
  5611  01454C  ECE6  F0AD         	call	_strlen	;wreg free
  5612  014550  0101               	movlb	1	; () banked
  5613  014552  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5614  014554  2717               	addwf	?_strlen& (0+255),f,b
  5615  014556  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5616  014558  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5617  01455A  0EC0               	movlw	low _line
  5618  01455C  2517               	addwf	?_strlen& (0+255),w,b
  5619  01455E  6ED9               	movwf	fsr2l,c
  5620  014560  0E02               	movlw	high _line
  5621  014562  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5622  014564  6EDA               	movwf	fsr2h,c
  5623  014566  0E0A               	movlw	10
  5624  014568  18DE               	xorwf	postinc2,w,c
  5625  01456A  B4D8               	btfsc	status,2,c
  5626  01456C  D7D0               	goto	l899
  5627                           
  5628                           ; BSR set to: 1
  5629  01456E  0EFF               	movlw	255
  5630  014570  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5631  014572  0EFF               	movlw	255
  5632  014574  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5633  014576  0EC0               	movlw	low _line
  5634  014578  6F17               	movwf	strlen@s& (0+255),b
  5635  01457A  0E02               	movlw	high _line
  5636  01457C  6F18               	movwf	(strlen@s+1)& (0+255),b
  5637  01457E  ECE6  F0AD         	call	_strlen	;wreg free
  5638  014582  0101               	movlb	1	; () banked
  5639  014584  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5640  014586  2717               	addwf	?_strlen& (0+255),f,b
  5641  014588  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5642  01458A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5643  01458C  0EC0               	movlw	low _line
  5644  01458E  2517               	addwf	?_strlen& (0+255),w,b
  5645  014590  6ED9               	movwf	fsr2l,c
  5646  014592  0E02               	movlw	high _line
  5647  014594  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5648  014596  6EDA               	movwf	fsr2h,c
  5649  014598  0E0D               	movlw	13
  5650  01459A  18DE               	xorwf	postinc2,w,c
  5651  01459C  B4D8               	btfsc	status,2,c
  5652  01459E  D7B7               	goto	l899
  5653                           
  5654                           ; BSR set to: 1
  5655                           ;ring_buffer_interface.c: 40: }
  5656                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  5657  0145A0  0100               	movlb	0	; () banked
  5658  0145A2  91F1               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5659                           
  5660                           ; BSR set to: 0
  5661                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  5662  0145A4  0EC0               	movlw	low _line
  5663  0145A6  0101               	movlb	1	; () banked
  5664  0145A8  6FA0               	movwf	ringBufferLUT@line& (0+255),b
  5665  0145AA  0E02               	movlw	high _line
  5666  0145AC  6FA1               	movwf	(ringBufferLUT@line+1)& (0+255),b
  5667  0145AE  EC2B  F08A         	call	_ringBufferLUT	;wreg free
  5668  0145B2  0012               	return		;funcret
  5669  0145B4                     __end_of_terminal_ringBufferPull:
  5670                           	opt stack 0
  5671                           tblptru	equ	0xFF8
  5672                           tblptrh	equ	0xFF7
  5673                           tblptrl	equ	0xFF6
  5674                           tablat	equ	0xFF5
  5675                           intcon	equ	0xFF2
  5676                           postinc0	equ	0xFEE
  5677                           wreg	equ	0xFE8
  5678                           postdec1	equ	0xFE5
  5679                           fsr1h	equ	0xFE2
  5680                           fsr1l	equ	0xFE1
  5681                           indf2	equ	0xFDF
  5682                           postinc2	equ	0xFDE
  5683                           fsr2h	equ	0xFDA
  5684                           fsr2l	equ	0xFD9
  5685                           status	equ	0xFD8
  5686                           
  5687 ;; *************** function _ringBufferLUT *****************
  5688 ;; Defined at:
  5689 ;;		line 32 in file "ring_buffer_LUT.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  line            2  160[BANK1 ] PTR unsigned char 
  5692 ;;		 -> line(64), 
  5693 ;; Auto vars:     Size  Location     Type
  5694 ;;  angle_degree    3  164[BANK1 ] PTR unsigned char 
  5695 ;;  index           2  170[BANK1 ] int 
  5696 ;;  arg_buff        3  167[BANK1 ] unsigned char [3]
  5697 ;;  percentage      2  172[BANK1 ] int 
  5698 ;; Return value:  Size  Location     Type
  5699 ;;                  1    wreg      void 
  5700 ;; Registers used:
  5701 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5702 ;; Tracked objects:
  5703 ;;		On entry : 0/0
  5704 ;;		On exit  : 0/0
  5705 ;;		Unchanged: 0/0
  5706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5707 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5708 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5709 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5710 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5711 ;;Total ram usage:       14 bytes
  5712 ;; Hardware stack levels used:    1
  5713 ;; Hardware stack levels required when called:   20
  5714 ;; This function calls:
  5715 ;;		___awtoft
  5716 ;;		___ftadd
  5717 ;;		___ftdiv
  5718 ;;		___ftmul
  5719 ;;		___ftneg
  5720 ;;		___wmul
  5721 ;;		_atoi
  5722 ;;		_printf
  5723 ;;		_strcmp
  5724 ;;		_strstr
  5725 ;;		_terminal_printNewline
  5726 ;;		_terminal_textAttributes
  5727 ;;		_terminal_textAttributesReset
  5728 ;; This function is called by:
  5729 ;;		_terminal_ringBufferPull
  5730 ;; This function uses a non-reentrant model
  5731 ;;
  5732                           
  5733                           	psect	text3
  5734  011456                     __ptext3:
  5735                           	opt stack 0
  5736  011456                     _ringBufferLUT:
  5737                           	opt stack 9
  5738                           
  5739                           ;ring_buffer_LUT.c: 38: if((0 == strcmp(line, "Reset"))) {
  5740                           
  5741                           ;incstack = 0
  5742  011456  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5743  01145A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5744  01145E  0EA1               	movlw	low STR_41
  5745  011460  0101               	movlb	1	; () banked
  5746  011462  6F19               	movwf	strcmp@s2& (0+255),b
  5747  011464  0EFF               	movlw	high STR_41
  5748  011466  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5749  011468  EC3D  F0AE         	call	_strcmp	;wreg free
  5750  01146C  0101               	movlb	1	; () banked
  5751  01146E  5117               	movf	?_strcmp& (0+255),w,b
  5752  011470  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5753  011472  A4D8               	btfss	status,2,c
  5754  011474  D00F               	goto	l1008
  5755                           
  5756                           ; BSR set to: 1
  5757                           ;ring_buffer_LUT.c: 41: printf("\033[2J");
  5758  011476  0EAC               	movlw	low STR_2
  5759  011478  6F64               	movwf	printf@f& (0+255),b
  5760  01147A  0EFF               	movlw	high STR_2
  5761  01147C  6F65               	movwf	(printf@f+1)& (0+255),b
  5762  01147E  EC00  F080         	call	_printf	;wreg free
  5763                           
  5764                           ;ring_buffer_LUT.c: 44: printf("\033[H");
  5765  011482  0EB5               	movlw	low STR_3
  5766  011484  0101               	movlb	1	; () banked
  5767  011486  6F64               	movwf	printf@f& (0+255),b
  5768  011488  0EFF               	movlw	high STR_3
  5769  01148A  6F65               	movwf	(printf@f+1)& (0+255),b
  5770  01148C  EC00  F080         	call	_printf	;wreg free
  5771  011490  00FF               	reset		;# 
  5772                           
  5773                           ;ring_buffer_LUT.c: 49: }
  5774  011492  0012               	return	
  5775  011494                     l1008:
  5776                           
  5777                           ;ring_buffer_LUT.c: 52: else if((0 == strcmp(line, "Clear"))) {
  5778  011494  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5779  011498  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5780  01149C  0E9B               	movlw	low STR_44
  5781  01149E  0101               	movlb	1	; () banked
  5782  0114A0  6F19               	movwf	strcmp@s2& (0+255),b
  5783  0114A2  0EFF               	movlw	high STR_44
  5784  0114A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5785  0114A6  EC3D  F0AE         	call	_strcmp	;wreg free
  5786  0114AA  0101               	movlb	1	; () banked
  5787  0114AC  5117               	movf	?_strcmp& (0+255),w,b
  5788  0114AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5789  0114B0  A4D8               	btfss	status,2,c
  5790  0114B2  D00E               	goto	l1010
  5791                           
  5792                           ; BSR set to: 1
  5793                           ;ring_buffer_LUT.c: 55: printf("\033[2J");
  5794  0114B4  0EAC               	movlw	low STR_2
  5795  0114B6  6F64               	movwf	printf@f& (0+255),b
  5796  0114B8  0EFF               	movlw	high STR_2
  5797  0114BA  6F65               	movwf	(printf@f+1)& (0+255),b
  5798  0114BC  EC00  F080         	call	_printf	;wreg free
  5799                           
  5800                           ;ring_buffer_LUT.c: 58: printf("\033[H");
  5801  0114C0  0EB5               	movlw	low STR_3
  5802  0114C2  0101               	movlb	1	; () banked
  5803  0114C4  6F64               	movwf	printf@f& (0+255),b
  5804  0114C6  0EFF               	movlw	high STR_3
  5805  0114C8  6F65               	movwf	(printf@f+1)& (0+255),b
  5806  0114CA  EC00  F080         	call	_printf	;wreg free
  5807                           
  5808                           ;ring_buffer_LUT.c: 60: }
  5809  0114CE  0012               	return	
  5810  0114D0                     l1010:
  5811                           
  5812                           ;ring_buffer_LUT.c: 63: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  5813  0114D0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5814  0114D4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5815  0114D8  0E95               	movlw	low STR_47
  5816  0114DA  0101               	movlb	1	; () banked
  5817  0114DC  6F19               	movwf	strcmp@s2& (0+255),b
  5818  0114DE  0EFF               	movlw	high STR_47
  5819  0114E0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5820  0114E2  EC3D  F0AE         	call	_strcmp	;wreg free
  5821  0114E6  0101               	movlb	1	; () banked
  5822  0114E8  5117               	movf	?_strcmp& (0+255),w,b
  5823  0114EA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5824  0114EC  B4D8               	btfsc	status,2,c
  5825  0114EE  D00F               	goto	u11660
  5826                           
  5827                           ; BSR set to: 1
  5828  0114F0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5829  0114F4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5830  0114F8  0EB1               	movlw	low STR_48
  5831  0114FA  6F19               	movwf	strcmp@s2& (0+255),b
  5832  0114FC  0EFF               	movlw	high STR_48
  5833  0114FE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5834  011500  EC3D  F0AE         	call	_strcmp	;wreg free
  5835  011504  0101               	movlb	1	; () banked
  5836  011506  5117               	movf	?_strcmp& (0+255),w,b
  5837  011508  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5838  01150A  A4D8               	btfss	status,2,c
  5839  01150C  D01D               	goto	l1012
  5840  01150E                     u11660:
  5841                           
  5842                           ; BSR set to: 1
  5843                           ;ring_buffer_LUT.c: 66: terminal_printNewline();
  5844                           
  5845                           ; BSR set to: 1
  5846  01150E  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  5847                           
  5848                           ;ring_buffer_LUT.c: 68: terminal_textAttributes(GREEN, BLACK, NORMAL);
  5849  011512  0E00               	movlw	0
  5850  011514  0101               	movlb	1	; () banked
  5851  011516  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5852  011518  0E00               	movlw	0
  5853  01151A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5854  01151C  0E02               	movlw	2
  5855  01151E  EC19  F095         	call	_terminal_textAttributes
  5856                           
  5857                           ;ring_buffer_LUT.c: 70: printf("AC Power Meter\n\r");
  5858  011522  0E09               	movlw	low STR_49
  5859  011524  0101               	movlb	1	; () banked
  5860  011526  6F64               	movwf	printf@f& (0+255),b
  5861  011528  0EFF               	movlw	high STR_49
  5862  01152A  6F65               	movwf	(printf@f+1)& (0+255),b
  5863  01152C  EC00  F080         	call	_printf	;wreg free
  5864                           
  5865                           ;ring_buffer_LUT.c: 71: printf("Marquette University ELEN 3035 Final Project\n\r");
  5866  011530  0EE7               	movlw	low STR_50
  5867  011532  0101               	movlb	1	; () banked
  5868  011534  6F64               	movwf	printf@f& (0+255),b
  5869  011536  0EFB               	movlw	high STR_50
  5870  011538  6F65               	movwf	(printf@f+1)& (0+255),b
  5871  01153A  EC00  F080         	call	_printf	;wreg free
  5872                           
  5873                           ;ring_buffer_LUT.c: 73: terminal_textAttributesReset();
  5874  01153E  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  5875                           
  5876                           ;ring_buffer_LUT.c: 75: terminal_printNewline();
  5877  011542  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  5878                           
  5879                           ;ring_buffer_LUT.c: 77: }
  5880  011546  0012               	return	
  5881  011548                     l1012:
  5882                           
  5883                           ;ring_buffer_LUT.c: 80: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  5884  011548  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5885  01154C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5886  011550  0E1A               	movlw	low STR_51
  5887  011552  0101               	movlb	1	; () banked
  5888  011554  6F19               	movwf	strcmp@s2& (0+255),b
  5889  011556  0EFF               	movlw	high STR_51
  5890  011558  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5891  01155A  EC3D  F0AE         	call	_strcmp	;wreg free
  5892  01155E  0101               	movlb	1	; () banked
  5893  011560  5117               	movf	?_strcmp& (0+255),w,b
  5894  011562  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5895  011564  A4D8               	btfss	status,2,c
  5896  011566  D01C               	goto	l1016
  5897                           
  5898                           ; BSR set to: 1
  5899                           ;ring_buffer_LUT.c: 83: terminal_printNewline();
  5900  011568  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  5901                           
  5902                           ;ring_buffer_LUT.c: 85: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5903  01156C  0E00               	movlw	0
  5904  01156E  0101               	movlb	1	; () banked
  5905  011570  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5906  011572  0E00               	movlw	0
  5907  011574  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5908  011576  0E06               	movlw	6
  5909  011578  EC19  F095         	call	_terminal_textAttributes
  5910                           
  5911                           ;ring_buffer_LUT.c: 86: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  5912  01157C  0E31               	movlw	low STR_52
  5913  01157E  0101               	movlb	1	; () banked
  5914  011580  6F64               	movwf	printf@f& (0+255),b
  5915  011582  0EFD               	movlw	high STR_52
  5916  011584  6F65               	movwf	(printf@f+1)& (0+255),b
  5917  011586  C0CE  F166         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  5918  01158A  C0CF  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  5919  01158E  C0D0  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  5920  011592  EC00  F080         	call	_printf	;wreg free
  5921                           
  5922                           ;ring_buffer_LUT.c: 88: terminal_textAttributesReset();
  5923  011596  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  5924                           
  5925                           ;ring_buffer_LUT.c: 90: terminal_printNewline();
  5926  01159A  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  5927                           
  5928                           ;ring_buffer_LUT.c: 93: }
  5929  01159E  0012               	return	
  5930  0115A0                     l1016:
  5931                           
  5932                           ;ring_buffer_LUT.c: 96: else if((0 == strcmp(line, "Measure POS12?"))) {
  5933  0115A0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5934  0115A4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5935  0115A8  0E3A               	movlw	low STR_53
  5936  0115AA  0101               	movlb	1	; () banked
  5937  0115AC  6F19               	movwf	strcmp@s2& (0+255),b
  5938  0115AE  0EFF               	movlw	high STR_53
  5939  0115B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5940  0115B2  EC3D  F0AE         	call	_strcmp	;wreg free
  5941  0115B6  0101               	movlb	1	; () banked
  5942  0115B8  5117               	movf	?_strcmp& (0+255),w,b
  5943  0115BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5944  0115BC  A4D8               	btfss	status,2,c
  5945  0115BE  D01C               	goto	l1018
  5946                           
  5947                           ; BSR set to: 1
  5948                           ;ring_buffer_LUT.c: 99: terminal_printNewline();
  5949  0115C0  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  5950                           
  5951                           ;ring_buffer_LUT.c: 101: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5952  0115C4  0E00               	movlw	0
  5953  0115C6  0101               	movlb	1	; () banked
  5954  0115C8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5955  0115CA  0E00               	movlw	0
  5956  0115CC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5957  0115CE  0E06               	movlw	6
  5958  0115D0  EC19  F095         	call	_terminal_textAttributes
  5959                           
  5960                           ;ring_buffer_LUT.c: 102: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  5961  0115D4  0EBA               	movlw	low STR_54
  5962  0115D6  0101               	movlb	1	; () banked
  5963  0115D8  6F64               	movwf	printf@f& (0+255),b
  5964  0115DA  0EFD               	movlw	high STR_54
  5965  0115DC  6F65               	movwf	(printf@f+1)& (0+255),b
  5966  0115DE  C1C6  F166         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  5967  0115E2  C1C7  F167         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  5968  0115E6  C1C8  F168         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  5969  0115EA  EC00  F080         	call	_printf	;wreg free
  5970                           
  5971                           ;ring_buffer_LUT.c: 104: terminal_textAttributesReset();
  5972  0115EE  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  5973                           
  5974                           ;ring_buffer_LUT.c: 106: terminal_printNewline();
  5975  0115F2  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  5976                           
  5977                           ;ring_buffer_LUT.c: 109: }
  5978  0115F6  0012               	return	
  5979  0115F8                     l1018:
  5980                           
  5981                           ;ring_buffer_LUT.c: 112: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  5982  0115F8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5983  0115FC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5984  011600  0EE6               	movlw	low STR_55
  5985  011602  0101               	movlb	1	; () banked
  5986  011604  6F19               	movwf	strcmp@s2& (0+255),b
  5987  011606  0EFE               	movlw	high STR_55
  5988  011608  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5989  01160A  EC3D  F0AE         	call	_strcmp	;wreg free
  5990  01160E  0101               	movlb	1	; () banked
  5991  011610  5117               	movf	?_strcmp& (0+255),w,b
  5992  011612  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5993  011614  A4D8               	btfss	status,2,c
  5994  011616  D01C               	goto	l1020
  5995                           
  5996                           ; BSR set to: 1
  5997                           ;ring_buffer_LUT.c: 115: terminal_printNewline();
  5998  011618  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  5999                           
  6000                           ;ring_buffer_LUT.c: 117: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6001  01161C  0E00               	movlw	0
  6002  01161E  0101               	movlb	1	; () banked
  6003  011620  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6004  011622  0E00               	movlw	0
  6005  011624  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6006  011626  0E06               	movlw	6
  6007  011628  EC19  F095         	call	_terminal_textAttributes
  6008                           
  6009                           ;ring_buffer_LUT.c: 118: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  6010  01162C  0E54               	movlw	low STR_56
  6011  01162E  0101               	movlb	1	; () banked
  6012  011630  6F64               	movwf	printf@f& (0+255),b
  6013  011632  0EFD               	movlw	high STR_56
  6014  011634  6F65               	movwf	(printf@f+1)& (0+255),b
  6015  011636  C1C3  F166         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  6016  01163A  C1C4  F167         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  6017  01163E  C1C5  F168         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  6018  011642  EC00  F080         	call	_printf	;wreg free
  6019                           
  6020                           ;ring_buffer_LUT.c: 120: terminal_textAttributesReset();
  6021  011646  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6022                           
  6023                           ;ring_buffer_LUT.c: 122: terminal_printNewline();
  6024  01164A  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6025                           
  6026                           ;ring_buffer_LUT.c: 125: }
  6027  01164E  0012               	return	
  6028  011650                     l1020:
  6029                           
  6030                           ;ring_buffer_LUT.c: 128: else if((0 == strcmp(line, "Measure FVR?"))) {
  6031  011650  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6032  011654  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6033  011658  0E66               	movlw	low STR_57
  6034  01165A  0101               	movlb	1	; () banked
  6035  01165C  6F19               	movwf	strcmp@s2& (0+255),b
  6036  01165E  0EFF               	movlw	high STR_57
  6037  011660  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6038  011662  EC3D  F0AE         	call	_strcmp	;wreg free
  6039  011666  0101               	movlb	1	; () banked
  6040  011668  5117               	movf	?_strcmp& (0+255),w,b
  6041  01166A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6042  01166C  A4D8               	btfss	status,2,c
  6043  01166E  D01C               	goto	l1022
  6044                           
  6045                           ; BSR set to: 1
  6046                           ;ring_buffer_LUT.c: 131: terminal_printNewline();
  6047  011670  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6048                           
  6049                           ;ring_buffer_LUT.c: 133: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6050  011674  0E00               	movlw	0
  6051  011676  0101               	movlb	1	; () banked
  6052  011678  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6053  01167A  0E00               	movlw	0
  6054  01167C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6055  01167E  0E06               	movlw	6
  6056  011680  EC19  F095         	call	_terminal_textAttributes
  6057                           
  6058                           ;ring_buffer_LUT.c: 134: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  6059  011684  0EAF               	movlw	low STR_58
  6060  011686  0101               	movlb	1	; () banked
  6061  011688  6F64               	movwf	printf@f& (0+255),b
  6062  01168A  0EFB               	movlw	high STR_58
  6063  01168C  6F65               	movwf	(printf@f+1)& (0+255),b
  6064  01168E  C0E8  F166         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  6065  011692  C0E9  F167         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  6066  011696  C0EA  F168         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  6067  01169A  EC00  F080         	call	_printf	;wreg free
  6068                           
  6069                           ;ring_buffer_LUT.c: 136: terminal_textAttributesReset();
  6070  01169E  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6071                           
  6072                           ;ring_buffer_LUT.c: 138: terminal_printNewline();
  6073  0116A2  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6074                           
  6075                           ;ring_buffer_LUT.c: 141: }
  6076  0116A6  0012               	return	
  6077  0116A8                     l1022:
  6078                           
  6079                           ;ring_buffer_LUT.c: 144: else if((0 == strcmp(line, "Measure AVSS?"))) {
  6080  0116A8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6081  0116AC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6082  0116B0  0E58               	movlw	low STR_59
  6083  0116B2  0101               	movlb	1	; () banked
  6084  0116B4  6F19               	movwf	strcmp@s2& (0+255),b
  6085  0116B6  0EFF               	movlw	high STR_59
  6086  0116B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6087  0116BA  EC3D  F0AE         	call	_strcmp	;wreg free
  6088  0116BE  0101               	movlb	1	; () banked
  6089  0116C0  5117               	movf	?_strcmp& (0+255),w,b
  6090  0116C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6091  0116C4  A4D8               	btfss	status,2,c
  6092  0116C6  D01C               	goto	l1024
  6093                           
  6094                           ; BSR set to: 1
  6095                           ;ring_buffer_LUT.c: 147: terminal_printNewline();
  6096  0116C8  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6097                           
  6098                           ;ring_buffer_LUT.c: 149: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6099  0116CC  0E00               	movlw	0
  6100  0116CE  0101               	movlb	1	; () banked
  6101  0116D0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6102  0116D2  0E00               	movlw	0
  6103  0116D4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6104  0116D6  0E06               	movlw	6
  6105  0116D8  EC19  F095         	call	_terminal_textAttributes
  6106                           
  6107                           ;ring_buffer_LUT.c: 150: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  6108  0116DC  0EE7               	movlw	low STR_60
  6109  0116DE  0101               	movlb	1	; () banked
  6110  0116E0  6F64               	movwf	printf@f& (0+255),b
  6111  0116E2  0EFC               	movlw	high STR_60
  6112  0116E4  6F65               	movwf	(printf@f+1)& (0+255),b
  6113  0116E6  C0D4  F166         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  6114  0116EA  C0D5  F167         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  6115  0116EE  C0D6  F168         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  6116  0116F2  EC00  F080         	call	_printf	;wreg free
  6117                           
  6118                           ;ring_buffer_LUT.c: 152: terminal_textAttributesReset();
  6119  0116F6  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6120                           
  6121                           ;ring_buffer_LUT.c: 154: terminal_printNewline();
  6122  0116FA  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6123                           
  6124                           ;ring_buffer_LUT.c: 157: }
  6125  0116FE  0012               	return	
  6126  011700                     l1024:
  6127                           
  6128                           ;ring_buffer_LUT.c: 160: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  6129  011700  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6130  011704  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6131  011708  0E59               	movlw	low STR_61
  6132  01170A  0101               	movlb	1	; () banked
  6133  01170C  6F19               	movwf	strcmp@s2& (0+255),b
  6134  01170E  0EFE               	movlw	high STR_61
  6135  011710  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6136  011712  EC3D  F0AE         	call	_strcmp	;wreg free
  6137  011716  0101               	movlb	1	; () banked
  6138  011718  5117               	movf	?_strcmp& (0+255),w,b
  6139  01171A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6140  01171C  A4D8               	btfss	status,2,c
  6141  01171E  D01C               	goto	l1026
  6142                           
  6143                           ; BSR set to: 1
  6144                           ;ring_buffer_LUT.c: 163: terminal_printNewline();
  6145  011720  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6146                           
  6147                           ;ring_buffer_LUT.c: 165: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6148  011724  0E00               	movlw	0
  6149  011726  0101               	movlb	1	; () banked
  6150  011728  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6151  01172A  0E00               	movlw	0
  6152  01172C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6153  01172E  0E06               	movlw	6
  6154  011730  EC19  F095         	call	_terminal_textAttributes
  6155                           
  6156                           ;ring_buffer_LUT.c: 166: printf("Measured Current is %.3f Amps\n\r", Imeas);
  6157  011734  0EFD               	movlw	low STR_62
  6158  011736  0101               	movlb	1	; () banked
  6159  011738  6F64               	movwf	printf@f& (0+255),b
  6160  01173A  0EFD               	movlw	high STR_62
  6161  01173C  6F65               	movwf	(printf@f+1)& (0+255),b
  6162  01173E  C0C5  F166         	movff	_Imeas,?_printf+2	;volatile
  6163  011742  C0C6  F167         	movff	_Imeas+1,?_printf+3	;volatile
  6164  011746  C0C7  F168         	movff	_Imeas+2,?_printf+4	;volatile
  6165  01174A  EC00  F080         	call	_printf	;wreg free
  6166                           
  6167                           ;ring_buffer_LUT.c: 168: terminal_textAttributesReset();
  6168  01174E  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6169                           
  6170                           ;ring_buffer_LUT.c: 170: terminal_printNewline();
  6171  011752  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6172                           
  6173                           ;ring_buffer_LUT.c: 172: }
  6174  011756  0012               	return	
  6175  011758                     l1026:
  6176                           
  6177                           ;ring_buffer_LUT.c: 175: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  6178  011758  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6179  01175C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6180  011760  0ED1               	movlw	low STR_63
  6181  011762  0101               	movlb	1	; () banked
  6182  011764  6F19               	movwf	strcmp@s2& (0+255),b
  6183  011766  0EFE               	movlw	high STR_63
  6184  011768  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6185  01176A  EC3D  F0AE         	call	_strcmp	;wreg free
  6186  01176E  0101               	movlb	1	; () banked
  6187  011770  5117               	movf	?_strcmp& (0+255),w,b
  6188  011772  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6189  011774  A4D8               	btfss	status,2,c
  6190  011776  D01C               	goto	l1028
  6191                           
  6192                           ; BSR set to: 1
  6193                           ;ring_buffer_LUT.c: 178: terminal_printNewline();
  6194  011778  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6195                           
  6196                           ;ring_buffer_LUT.c: 180: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6197  01177C  0E00               	movlw	0
  6198  01177E  0101               	movlb	1	; () banked
  6199  011780  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6200  011782  0E00               	movlw	0
  6201  011784  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6202  011786  0E06               	movlw	6
  6203  011788  EC19  F095         	call	_terminal_textAttributes
  6204                           
  6205                           ;ring_buffer_LUT.c: 181: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  6206  01178C  0E76               	movlw	low STR_64
  6207  01178E  0101               	movlb	1	; () banked
  6208  011790  6F64               	movwf	printf@f& (0+255),b
  6209  011792  0EFD               	movlw	high STR_64
  6210  011794  6F65               	movwf	(printf@f+1)& (0+255),b
  6211  011796  C1C0  F166         	movff	_Irms,?_printf+2	;volatile
  6212  01179A  C1C1  F167         	movff	_Irms+1,?_printf+3	;volatile
  6213  01179E  C1C2  F168         	movff	_Irms+2,?_printf+4	;volatile
  6214  0117A2  EC00  F080         	call	_printf	;wreg free
  6215                           
  6216                           ;ring_buffer_LUT.c: 183: terminal_textAttributesReset();
  6217  0117A6  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6218                           
  6219                           ;ring_buffer_LUT.c: 185: terminal_printNewline();
  6220  0117AA  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6221                           
  6222                           ;ring_buffer_LUT.c: 187: }
  6223  0117AE  0012               	return	
  6224  0117B0                     l1028:
  6225                           
  6226                           ;ring_buffer_LUT.c: 190: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  6227  0117B0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6228  0117B4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6229  0117B8  0EBC               	movlw	low STR_65
  6230  0117BA  0101               	movlb	1	; () banked
  6231  0117BC  6F19               	movwf	strcmp@s2& (0+255),b
  6232  0117BE  0EFE               	movlw	high STR_65
  6233  0117C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6234  0117C2  EC3D  F0AE         	call	_strcmp	;wreg free
  6235  0117C6  0101               	movlb	1	; () banked
  6236  0117C8  5117               	movf	?_strcmp& (0+255),w,b
  6237  0117CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6238  0117CC  A4D8               	btfss	status,2,c
  6239  0117CE  D01C               	goto	l1030
  6240                           
  6241                           ; BSR set to: 1
  6242                           ;ring_buffer_LUT.c: 193: terminal_printNewline();
  6243  0117D0  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6244                           
  6245                           ;ring_buffer_LUT.c: 195: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6246  0117D4  0E00               	movlw	0
  6247  0117D6  0101               	movlb	1	; () banked
  6248  0117D8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6249  0117DA  0E00               	movlw	0
  6250  0117DC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6251  0117DE  0E06               	movlw	6
  6252  0117E0  EC19  F095         	call	_terminal_textAttributes
  6253                           
  6254                           ;ring_buffer_LUT.c: 196: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  6255  0117E4  0E98               	movlw	low STR_66
  6256  0117E6  0101               	movlb	1	; () banked
  6257  0117E8  6F64               	movwf	printf@f& (0+255),b
  6258  0117EA  0EFD               	movlw	high STR_66
  6259  0117EC  6F65               	movwf	(printf@f+1)& (0+255),b
  6260  0117EE  C1BD  F166         	movff	_Vrms,?_printf+2	;volatile
  6261  0117F2  C1BE  F167         	movff	_Vrms+1,?_printf+3	;volatile
  6262  0117F6  C1BF  F168         	movff	_Vrms+2,?_printf+4	;volatile
  6263  0117FA  EC00  F080         	call	_printf	;wreg free
  6264                           
  6265                           ;ring_buffer_LUT.c: 198: terminal_textAttributesReset();
  6266  0117FE  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6267                           
  6268                           ;ring_buffer_LUT.c: 200: terminal_printNewline();
  6269  011802  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6270                           
  6271                           ;ring_buffer_LUT.c: 202: }
  6272  011806  0012               	return	
  6273  011808                     l1030:
  6274                           
  6275                           ;ring_buffer_LUT.c: 205: else if ((0 == strcmp(line, "Enable Dimming"))) {
  6276  011808  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6277  01180C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6278  011810  0E49               	movlw	low STR_67
  6279  011812  0101               	movlb	1	; () banked
  6280  011814  6F19               	movwf	strcmp@s2& (0+255),b
  6281  011816  0EFF               	movlw	high STR_67
  6282  011818  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6283  01181A  EC3D  F0AE         	call	_strcmp	;wreg free
  6284  01181E  0101               	movlb	1	; () banked
  6285  011820  5117               	movf	?_strcmp& (0+255),w,b
  6286  011822  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6287  011824  A4D8               	btfss	status,2,c
  6288  011826  D017               	goto	l1032
  6289                           
  6290                           ; BSR set to: 1
  6291                           ;ring_buffer_LUT.c: 208: LATGbits.LATG0 = 0;
  6292  011828  907F               	bcf	3967,0,c	;volatile
  6293                           
  6294                           ; BSR set to: 1
  6295                           ;ring_buffer_LUT.c: 211: terminal_printNewline();
  6296  01182A  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6297                           
  6298                           ;ring_buffer_LUT.c: 213: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6299  01182E  0E00               	movlw	0
  6300  011830  0101               	movlb	1	; () banked
  6301  011832  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6302  011834  0E00               	movlw	0
  6303  011836  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6304  011838  0E06               	movlw	6
  6305  01183A  EC19  F095         	call	_terminal_textAttributes
  6306                           
  6307                           ;ring_buffer_LUT.c: 214: printf("TRIAC output dimming has been enabled\n\r");
  6308  01183E  0E97               	movlw	low STR_68
  6309  011840  0101               	movlb	1	; () banked
  6310  011842  6F64               	movwf	printf@f& (0+255),b
  6311  011844  0EFC               	movlw	high STR_68
  6312  011846  6F65               	movwf	(printf@f+1)& (0+255),b
  6313  011848  EC00  F080         	call	_printf	;wreg free
  6314                           
  6315                           ;ring_buffer_LUT.c: 216: terminal_textAttributesReset();
  6316  01184C  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6317                           
  6318                           ;ring_buffer_LUT.c: 218: terminal_printNewline();
  6319  011850  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6320                           
  6321                           ;ring_buffer_LUT.c: 220: }
  6322  011854  0012               	return	
  6323  011856                     l1032:
  6324                           
  6325                           ;ring_buffer_LUT.c: 223: else if ((0 == strcmp(line, "Disable Dimming"))) {
  6326  011856  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6327  01185A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6328  01185E  0E2A               	movlw	low STR_69
  6329  011860  0101               	movlb	1	; () banked
  6330  011862  6F19               	movwf	strcmp@s2& (0+255),b
  6331  011864  0EFF               	movlw	high STR_69
  6332  011866  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6333  011868  EC3D  F0AE         	call	_strcmp	;wreg free
  6334  01186C  0101               	movlb	1	; () banked
  6335  01186E  5117               	movf	?_strcmp& (0+255),w,b
  6336  011870  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6337  011872  A4D8               	btfss	status,2,c
  6338  011874  D017               	goto	l1034
  6339                           
  6340                           ; BSR set to: 1
  6341                           ;ring_buffer_LUT.c: 226: LATGbits.LATG0 = 1;
  6342  011876  807F               	bsf	3967,0,c	;volatile
  6343                           
  6344                           ; BSR set to: 1
  6345                           ;ring_buffer_LUT.c: 229: terminal_printNewline();
  6346  011878  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6347                           
  6348                           ;ring_buffer_LUT.c: 231: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6349  01187C  0E00               	movlw	0
  6350  01187E  0101               	movlb	1	; () banked
  6351  011880  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6352  011882  0E00               	movlw	0
  6353  011884  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6354  011886  0E06               	movlw	6
  6355  011888  EC19  F095         	call	_terminal_textAttributes
  6356                           
  6357                           ;ring_buffer_LUT.c: 232: printf("TRIAC output dimming has been disabled\n\r");
  6358  01188C  0E6E               	movlw	low STR_70
  6359  01188E  0101               	movlb	1	; () banked
  6360  011890  6F64               	movwf	printf@f& (0+255),b
  6361  011892  0EFC               	movlw	high STR_70
  6362  011894  6F65               	movwf	(printf@f+1)& (0+255),b
  6363  011896  EC00  F080         	call	_printf	;wreg free
  6364                           
  6365                           ;ring_buffer_LUT.c: 234: terminal_textAttributesReset();
  6366  01189A  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6367                           
  6368                           ;ring_buffer_LUT.c: 236: terminal_printNewline();
  6369  01189E  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6370                           
  6371                           ;ring_buffer_LUT.c: 238: }
  6372  0118A2  0012               	return	
  6373  0118A4                     l1034:
  6374                           
  6375                           ;ring_buffer_LUT.c: 241: else if ((0 == strcmp(line, "Enable Load"))) {
  6376  0118A4  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6377  0118A8  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6378  0118AC  0E80               	movlw	low STR_71
  6379  0118AE  0101               	movlb	1	; () banked
  6380  0118B0  6F19               	movwf	strcmp@s2& (0+255),b
  6381  0118B2  0EFF               	movlw	high STR_71
  6382  0118B4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6383  0118B6  EC3D  F0AE         	call	_strcmp	;wreg free
  6384  0118BA  0101               	movlb	1	; () banked
  6385  0118BC  5117               	movf	?_strcmp& (0+255),w,b
  6386  0118BE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6387  0118C0  A4D8               	btfss	status,2,c
  6388  0118C2  D019               	goto	l1036
  6389                           
  6390                           ; BSR set to: 1
  6391                           ;ring_buffer_LUT.c: 243: LATGbits.LATG0 = 1;
  6392  0118C4  807F               	bsf	3967,0,c	;volatile
  6393                           
  6394                           ;ring_buffer_LUT.c: 244: LATGbits.LATG1 = 0;
  6395  0118C6  927F               	bcf	3967,1,c	;volatile
  6396                           
  6397                           ;ring_buffer_LUT.c: 245: load_enable = 1;
  6398  0118C8  805E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  6399                           
  6400                           ; BSR set to: 1
  6401                           ;ring_buffer_LUT.c: 248: terminal_printNewline();
  6402  0118CA  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6403                           
  6404                           ;ring_buffer_LUT.c: 250: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6405  0118CE  0E00               	movlw	0
  6406  0118D0  0101               	movlb	1	; () banked
  6407  0118D2  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6408  0118D4  0E00               	movlw	0
  6409  0118D6  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6410  0118D8  0E06               	movlw	6
  6411  0118DA  EC19  F095         	call	_terminal_textAttributes
  6412                           
  6413                           ;ring_buffer_LUT.c: 251: printf("Load has been enabled, dimming disabled\n\r");
  6414  0118DE  0E44               	movlw	low STR_72
  6415  0118E0  0101               	movlb	1	; () banked
  6416  0118E2  6F64               	movwf	printf@f& (0+255),b
  6417  0118E4  0EFC               	movlw	high STR_72
  6418  0118E6  6F65               	movwf	(printf@f+1)& (0+255),b
  6419  0118E8  EC00  F080         	call	_printf	;wreg free
  6420                           
  6421                           ;ring_buffer_LUT.c: 253: terminal_textAttributesReset();
  6422  0118EC  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6423                           
  6424                           ;ring_buffer_LUT.c: 255: terminal_printNewline();
  6425  0118F0  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6426                           
  6427                           ;ring_buffer_LUT.c: 257: }
  6428  0118F4  0012               	return	
  6429  0118F6                     l1036:
  6430                           
  6431                           ;ring_buffer_LUT.c: 260: else if ((0 == strcmp(line, "Disable Load"))) {
  6432  0118F6  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6433  0118FA  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6434  0118FE  0E73               	movlw	low STR_73
  6435  011900  0101               	movlb	1	; () banked
  6436  011902  6F19               	movwf	strcmp@s2& (0+255),b
  6437  011904  0EFF               	movlw	high STR_73
  6438  011906  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6439  011908  EC3D  F0AE         	call	_strcmp	;wreg free
  6440  01190C  0101               	movlb	1	; () banked
  6441  01190E  5117               	movf	?_strcmp& (0+255),w,b
  6442  011910  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6443  011912  A4D8               	btfss	status,2,c
  6444  011914  D019               	goto	l1038
  6445                           
  6446                           ; BSR set to: 1
  6447                           ;ring_buffer_LUT.c: 262: LATGbits.LATG1 = 0;
  6448  011916  927F               	bcf	3967,1,c	;volatile
  6449                           
  6450                           ;ring_buffer_LUT.c: 263: LATGbits.LATG0 = 0;
  6451  011918  907F               	bcf	3967,0,c	;volatile
  6452                           
  6453                           ;ring_buffer_LUT.c: 264: load_enable = 0;
  6454  01191A  905E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  6455                           
  6456                           ; BSR set to: 1
  6457                           ;ring_buffer_LUT.c: 267: terminal_printNewline();
  6458  01191C  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6459                           
  6460                           ;ring_buffer_LUT.c: 269: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6461  011920  0E00               	movlw	0
  6462  011922  0101               	movlb	1	; () banked
  6463  011924  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6464  011926  0E00               	movlw	0
  6465  011928  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6466  01192A  0E06               	movlw	6
  6467  01192C  EC19  F095         	call	_terminal_textAttributes
  6468                           
  6469                           ;ring_buffer_LUT.c: 270: printf("Load has been disabled\n\r");
  6470  011930  0E73               	movlw	low STR_74
  6471  011932  0101               	movlb	1	; () banked
  6472  011934  6F64               	movwf	printf@f& (0+255),b
  6473  011936  0EFE               	movlw	high STR_74
  6474  011938  6F65               	movwf	(printf@f+1)& (0+255),b
  6475  01193A  EC00  F080         	call	_printf	;wreg free
  6476                           
  6477                           ;ring_buffer_LUT.c: 272: terminal_textAttributesReset();
  6478  01193E  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6479                           
  6480                           ;ring_buffer_LUT.c: 274: terminal_printNewline();
  6481  011942  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6482                           
  6483                           ;ring_buffer_LUT.c: 276: }
  6484  011946  0012               	return	
  6485  011948                     l1038:
  6486                           
  6487                           ;ring_buffer_LUT.c: 279: else if ((strstr(line, "Set Dimming Percentage: "))) {
  6488  011948  C1A0  F126         	movff	ringBufferLUT@line,strstr@s1
  6489  01194C  C1A1  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  6490  011950  0E8C               	movlw	low STR_75
  6491  011952  0101               	movlb	1	; () banked
  6492  011954  6F28               	movwf	strstr@s2& (0+255),b
  6493  011956  0EFE               	movlw	high STR_75
  6494  011958  6F29               	movwf	(strstr@s2+1)& (0+255),b
  6495  01195A  EC88  F0A9         	call	_strstr	;wreg free
  6496  01195E  0101               	movlb	1	; () banked
  6497  011960  5126               	movf	?_strstr& (0+255),w,b
  6498  011962  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  6499  011964  B4D8               	btfsc	status,2,c
  6500  011966  D113               	goto	l1040
  6501                           
  6502                           ; BSR set to: 1
  6503                           ;ring_buffer_LUT.c: 282: char arg_buff[3];
  6504                           ;ring_buffer_LUT.c: 285: for (int index = 0; index < 3; index++) {
  6505  011968  0E00               	movlw	0
  6506  01196A  6FAB               	movwf	(ringBufferLUT@index+1)& (0+255),b
  6507  01196C  0E00               	movlw	0
  6508  01196E  6FAA               	movwf	ringBufferLUT@index& (0+255),b
  6509  011970                     l10049:
  6510                           
  6511                           ; BSR set to: 1
  6512  011970  BFAB               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  6513  011972  D006               	goto	l1041
  6514  011974  51AB               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  6515  011976  E11B               	bnz	l10059
  6516  011978  0E03               	movlw	3
  6517  01197A  5DAA               	subwf	ringBufferLUT@index& (0+255),w,b
  6518  01197C  B0D8               	btfsc	status,0,c
  6519  01197E  D017               	goto	u11810
  6520  011980                     l1041:
  6521                           
  6522                           ; BSR set to: 1
  6523                           ;ring_buffer_LUT.c: 287: arg_buff[index] = line[index + 24];
  6524                           
  6525                           ; BSR set to: 1
  6526  011980  0E18               	movlw	24
  6527  011982  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  6528  011984  6FA2               	movwf	??_ringBufferLUT& (0+255),b
  6529  011986  0E00               	movlw	0
  6530  011988  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6531  01198A  6FA3               	movwf	(??_ringBufferLUT+1)& (0+255),b
  6532  01198C  51A2               	movf	??_ringBufferLUT& (0+255),w,b
  6533  01198E  25A0               	addwf	ringBufferLUT@line& (0+255),w,b
  6534  011990  6ED9               	movwf	fsr2l,c
  6535  011992  51A3               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  6536  011994  21A1               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  6537  011996  6EDA               	movwf	fsr2h,c
  6538  011998  0EA7               	movlw	low ringBufferLUT@arg_buff
  6539  01199A  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  6540  01199C  6EE1               	movwf	fsr1l,c
  6541  01199E  0E01               	movlw	high ringBufferLUT@arg_buff
  6542  0119A0  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6543  0119A2  6EE2               	movwf	fsr1h,c
  6544  0119A4  CFDF FFE7          	movff	indf2,indf1
  6545                           
  6546                           ; BSR set to: 1
  6547  0119A8  4BAA               	infsnz	ringBufferLUT@index& (0+255),f,b
  6548  0119AA  2BAB               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  6549  0119AC  D7E1               	goto	l10049
  6550  0119AE                     u11810:
  6551  0119AE                     l10059:
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;ring_buffer_LUT.c: 289: }
  6555                           ;ring_buffer_LUT.c: 291: int percentage = atoi(arg_buff);
  6556  0119AE  0EA7               	movlw	low ringBufferLUT@arg_buff
  6557  0119B0  6F2B               	movwf	atoi@s& (0+255),b
  6558  0119B2  0E01               	movlw	high ringBufferLUT@arg_buff
  6559  0119B4  6F2C               	movwf	(atoi@s+1)& (0+255),b
  6560  0119B6  EC88  F0A6         	call	_atoi	;wreg free
  6561  0119BA  C12B  F1AC         	movff	?_atoi,ringBufferLUT@percentage
  6562  0119BE  C12C  F1AD         	movff	?_atoi+1,ringBufferLUT@percentage+1
  6563                           
  6564                           ;ring_buffer_LUT.c: 294: if ( (percentage >= 100) ||
  6565                           ;ring_buffer_LUT.c: 295: (percentage <= 0)) {
  6566  0119C2  0101               	movlb	1	; () banked
  6567  0119C4  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6568  0119C6  D006               	goto	u11820
  6569  0119C8  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6570  0119CA  E10B               	bnz	l10065
  6571  0119CC  0E64               	movlw	100
  6572  0119CE  5DAC               	subwf	ringBufferLUT@percentage& (0+255),w,b
  6573  0119D0  B0D8               	btfsc	status,0,c
  6574  0119D2  D007               	goto	u11830
  6575  0119D4                     u11820:
  6576                           
  6577                           ; BSR set to: 1
  6578  0119D4  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6579  0119D6  D005               	goto	u11830
  6580  0119D8  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6581  0119DA  E12F               	bnz	l10067
  6582  0119DC  05AC               	decf	ringBufferLUT@percentage& (0+255),w,b
  6583  0119DE  B0D8               	btfsc	status,0,c
  6584  0119E0  D02C               	goto	l1043
  6585  0119E2                     u11830:
  6586  0119E2                     l10065:
  6587                           
  6588                           ; BSR set to: 1
  6589                           ;ring_buffer_LUT.c: 298: terminal_printNewline();
  6590  0119E2  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6591                           
  6592                           ;ring_buffer_LUT.c: 300: terminal_textAttributes(RED, BLACK, NORMAL);
  6593  0119E6  0E00               	movlw	0
  6594  0119E8  0101               	movlb	1	; () banked
  6595  0119EA  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6596  0119EC  0E00               	movlw	0
  6597  0119EE  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6598  0119F0  0E01               	movlw	1
  6599  0119F2  EC19  F095         	call	_terminal_textAttributes
  6600                           
  6601                           ;ring_buffer_LUT.c: 301: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  6602  0119F6  0E99               	movlw	low STR_76
  6603  0119F8  0101               	movlb	1	; () banked
  6604  0119FA  6F64               	movwf	printf@f& (0+255),b
  6605  0119FC  0EFA               	movlw	high STR_76
  6606  0119FE  6F65               	movwf	(printf@f+1)& (0+255),b
  6607  011A00  EC00  F080         	call	_printf	;wreg free
  6608                           
  6609                           ;ring_buffer_LUT.c: 303: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6610  011A04  0E00               	movlw	0
  6611  011A06  0101               	movlb	1	; () banked
  6612  011A08  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6613  011A0A  0E00               	movlw	0
  6614  011A0C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6615  011A0E  0E03               	movlw	3
  6616  011A10  EC19  F095         	call	_terminal_textAttributes
  6617                           
  6618                           ;ring_buffer_LUT.c: 304: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  6619  011A14  0E33               	movlw	low STR_77
  6620  011A16  0101               	movlb	1	; () banked
  6621  011A18  6F64               	movwf	printf@f& (0+255),b
  6622  011A1A  0EFA               	movlw	high STR_77
  6623  011A1C  6F65               	movwf	(printf@f+1)& (0+255),b
  6624  011A1E  EC00  F080         	call	_printf	;wreg free
  6625                           
  6626                           ;ring_buffer_LUT.c: 305: printf("Enter 'Help' for list of available commands\n\r");
  6627  011A22  0E16               	movlw	low STR_78
  6628  011A24  0101               	movlb	1	; () banked
  6629  011A26  6F64               	movwf	printf@f& (0+255),b
  6630  011A28  0EFC               	movlw	high STR_78
  6631  011A2A  6F65               	movwf	(printf@f+1)& (0+255),b
  6632  011A2C  EC00  F080         	call	_printf	;wreg free
  6633                           
  6634                           ;ring_buffer_LUT.c: 307: terminal_textAttributesReset();
  6635  011A30  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6636                           
  6637                           ;ring_buffer_LUT.c: 309: terminal_printNewline();
  6638  011A34  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6639                           
  6640                           ;ring_buffer_LUT.c: 311: }
  6641  011A38  0012               	return	
  6642  011A3A                     l1043:
  6643  011A3A                     l10067:
  6644                           
  6645                           ;ring_buffer_LUT.c: 314: else {
  6646                           ;ring_buffer_LUT.c: 317: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  6647  011A3A  0E00               	movlw	0
  6648  011A3C  0101               	movlb	1	; () banked
  6649  011A3E  6F3A               	movwf	___ftdiv@f2& (0+255),b
  6650  011A40  0EC8               	movlw	200
  6651  011A42  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  6652  011A44  0E42               	movlw	66
  6653  011A46  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  6654  011A48  0E00               	movlw	0
  6655  011A4A  6F2E               	movwf	___ftadd@f2& (0+255),b
  6656  011A4C  0EC8               	movlw	200
  6657  011A4E  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  6658  011A50  0E42               	movlw	66
  6659  011A52  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  6660  011A54  C1AC  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  6661  011A58  C1AD  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  6662  011A5C  EC82  F0AF         	call	___awtoft	;wreg free
  6663  011A60  C11F  F123         	movff	?___awtoft,___ftneg@f1
  6664  011A64  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  6665  011A68  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  6666  011A6C  ECA3  F0B0         	call	___ftneg	;wreg free
  6667  011A70  C123  F12B         	movff	?___ftneg,___ftadd@f1
  6668  011A74  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  6669  011A78  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  6670  011A7C  EC7A  F09D         	call	___ftadd	;wreg free
  6671  011A80  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  6672  011A84  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  6673  011A88  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  6674  011A8C  ECC5  F0A4         	call	___ftdiv	;wreg free
  6675  011A90  C137  F146         	movff	?___ftdiv,___ftmul@f1
  6676  011A94  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  6677  011A98  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  6678  011A9C  0E10               	movlw	16
  6679  011A9E  0101               	movlb	1	; () banked
  6680  011AA0  6F49               	movwf	___ftmul@f2& (0+255),b
  6681  011AA2  0E49               	movlw	73
  6682  011AA4  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6683  011AA6  0E40               	movlw	64
  6684  011AA8  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6685  011AAA  EC56  F0A3         	call	___ftmul	;wreg free
  6686  011AAE  C146  F0E5         	movff	?___ftmul,_TRIAC_Firing_Angle	;volatile
  6687  011AB2  C147  F0E6         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1	;volatile
  6688  011AB6  C148  F0E7         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2	;volatile
  6689                           
  6690                           ;ring_buffer_LUT.c: 318: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  6691  011ABA  C0E5  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1	;volatile
  6692  011ABE  C0E6  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1	;volatile
  6693  011AC2  C0E7  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2	;volatile
  6694  011AC6  0E2F               	movlw	47
  6695  011AC8  0101               	movlb	1	; () banked
  6696  011ACA  6F49               	movwf	___ftmul@f2& (0+255),b
  6697  011ACC  0E65               	movlw	101
  6698  011ACE  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6699  011AD0  0E42               	movlw	66
  6700  011AD2  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6701  011AD4  EC56  F0A3         	call	___ftmul	;wreg free
  6702  011AD8  C146  F1A4         	movff	?___ftmul,ringBufferLUT@angle_degrees
  6703  011ADC  C147  F1A5         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  6704  011AE0  C148  F1A6         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  6705                           
  6706                           ;ring_buffer_LUT.c: 319: dimming_period = (100 - percentage) * (0xFFFF / 100);
  6707  011AE4  C1AC  F1A2         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  6708  011AE8  C1AD  F1A3         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  6709  011AEC  0101               	movlb	1	; () banked
  6710  011AEE  1FA2               	comf	??_ringBufferLUT& (0+255),f,b
  6711  011AF0  1FA3               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  6712  011AF2  4BA2               	infsnz	??_ringBufferLUT& (0+255),f,b
  6713  011AF4  2BA3               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  6714  011AF6  0E64               	movlw	100
  6715  011AF8  25A2               	addwf	??_ringBufferLUT& (0+255),w,b
  6716  011AFA  6F25               	movwf	___wmul@multiplier& (0+255),b
  6717  011AFC  0E00               	movlw	0
  6718  011AFE  21A3               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  6719  011B00  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  6720  011B02  0E02               	movlw	2
  6721  011B04  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6722  011B06  0E8F               	movlw	143
  6723  011B08  6F27               	movwf	___wmul@multiplicand& (0+255),b
  6724  011B0A  EC67  F0B0         	call	___wmul	;wreg free
  6725  011B0E  C125  F0DF         	movff	?___wmul,_dimming_period	;volatile
  6726  011B12  C126  F0E0         	movff	?___wmul+1,_dimming_period+1	;volatile
  6727                           
  6728                           ;ring_buffer_LUT.c: 322: terminal_printNewline();
  6729  011B16  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6730                           
  6731                           ;ring_buffer_LUT.c: 324: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6732  011B1A  0E00               	movlw	0
  6733  011B1C  0101               	movlb	1	; () banked
  6734  011B1E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6735  011B20  0E00               	movlw	0
  6736  011B22  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6737  011B24  0E06               	movlw	6
  6738  011B26  EC19  F095         	call	_terminal_textAttributes
  6739                           
  6740                           ;ring_buffer_LUT.c: 325: printf("Dimming has been set to %d percent\n\r", percentage);
  6741  011B2A  0E0C               	movlw	low STR_79
  6742  011B2C  0101               	movlb	1	; () banked
  6743  011B2E  6F64               	movwf	printf@f& (0+255),b
  6744  011B30  0EFD               	movlw	high STR_79
  6745  011B32  6F65               	movwf	(printf@f+1)& (0+255),b
  6746  011B34  C1AC  F166         	movff	ringBufferLUT@percentage,?_printf+2
  6747  011B38  C1AD  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  6748  011B3C  EC00  F080         	call	_printf	;wreg free
  6749                           
  6750                           ;ring_buffer_LUT.c: 326: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  6751  011B40  0E36               	movlw	low STR_80
  6752  011B42  0101               	movlb	1	; () banked
  6753  011B44  6F64               	movwf	printf@f& (0+255),b
  6754  011B46  0EFB               	movlw	high STR_80
  6755  011B48  6F65               	movwf	(printf@f+1)& (0+255),b
  6756  011B4A  C0E5  F166         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  6757  011B4E  C0E6  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  6758  011B52  C0E7  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  6759  011B56  C1A4  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  6760  011B5A  C1A5  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  6761  011B5E  C1A6  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  6762  011B62  EC00  F080         	call	_printf	;wreg free
  6763                           
  6764                           ;ring_buffer_LUT.c: 327: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  6765  011B66  0EEF               	movlw	low STR_81
  6766  011B68  0101               	movlb	1	; () banked
  6767  011B6A  6F64               	movwf	printf@f& (0+255),b
  6768  011B6C  0EFA               	movlw	high STR_81
  6769  011B6E  6F65               	movwf	(printf@f+1)& (0+255),b
  6770  011B70  C0DF  F166         	movff	_dimming_period,?_printf+2	;volatile
  6771  011B74  C0E0  F167         	movff	_dimming_period+1,?_printf+3	;volatile
  6772  011B78  C0DF  F168         	movff	_dimming_period,?_printf+4	;volatile
  6773  011B7C  C0E0  F169         	movff	_dimming_period+1,?_printf+5	;volatile
  6774  011B80  EC00  F080         	call	_printf	;wreg free
  6775                           
  6776                           ;ring_buffer_LUT.c: 329: terminal_textAttributesReset();
  6777  011B84  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6778                           
  6779                           ;ring_buffer_LUT.c: 331: terminal_printNewline();
  6780  011B88  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6781                           
  6782                           ;ring_buffer_LUT.c: 333: }
  6783                           ;ring_buffer_LUT.c: 335: }
  6784  011B8C  0012               	return	
  6785  011B8E                     l1040:
  6786                           
  6787                           ;ring_buffer_LUT.c: 338: else if((0 == strcmp(line, "On Time?"))) {
  6788  011B8E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6789  011B92  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6790  011B96  0E8C               	movlw	low STR_82
  6791  011B98  0101               	movlb	1	; () banked
  6792  011B9A  6F19               	movwf	strcmp@s2& (0+255),b
  6793  011B9C  0EFF               	movlw	high STR_82
  6794  011B9E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6795  011BA0  EC3D  F0AE         	call	_strcmp	;wreg free
  6796  011BA4  0101               	movlb	1	; () banked
  6797  011BA6  5117               	movf	?_strcmp& (0+255),w,b
  6798  011BA8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6799  011BAA  A4D8               	btfss	status,2,c
  6800  011BAC  D01E               	goto	l1048
  6801                           
  6802                           ; BSR set to: 1
  6803                           ;ring_buffer_LUT.c: 341: terminal_printNewline();
  6804  011BAE  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6805                           
  6806                           ;ring_buffer_LUT.c: 343: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6807  011BB2  0E00               	movlw	0
  6808  011BB4  0101               	movlb	1	; () banked
  6809  011BB6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6810  011BB8  0E00               	movlw	0
  6811  011BBA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6812  011BBC  0E06               	movlw	6
  6813  011BBE  EC19  F095         	call	_terminal_textAttributes
  6814                           
  6815                           ;ring_buffer_LUT.c: 344: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", on_time);
  6816  011BC2  0E75               	movlw	low STR_83
  6817  011BC4  0101               	movlb	1	; () banked
  6818  011BC6  6F64               	movwf	printf@f& (0+255),b
  6819  011BC8  0EFB               	movlw	high STR_83
  6820  011BCA  6F65               	movwf	(printf@f+1)& (0+255),b
  6821  011BCC  C1B9  F166         	movff	_on_time,?_printf+2	;volatile
  6822  011BD0  C1BA  F167         	movff	_on_time+1,?_printf+3	;volatile
  6823  011BD4  C1BB  F168         	movff	_on_time+2,?_printf+4	;volatile
  6824  011BD8  C1BC  F169         	movff	_on_time+3,?_printf+5	;volatile
  6825  011BDC  EC00  F080         	call	_printf	;wreg free
  6826                           
  6827                           ;ring_buffer_LUT.c: 346: terminal_textAttributesReset();
  6828  011BE0  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6829                           
  6830                           ;ring_buffer_LUT.c: 348: terminal_printNewline();
  6831  011BE4  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6832                           
  6833                           ;ring_buffer_LUT.c: 351: }
  6834  011BE8  0012               	return	
  6835  011BEA                     l1048:
  6836                           
  6837                           ;ring_buffer_LUT.c: 356: else if((0 == strcmp(line, "Help"))) {
  6838  011BEA  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6839  011BEE  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6840  011BF2  0EA7               	movlw	low STR_84
  6841  011BF4  0101               	movlb	1	; () banked
  6842  011BF6  6F19               	movwf	strcmp@s2& (0+255),b
  6843  011BF8  0EFF               	movlw	high STR_84
  6844  011BFA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6845  011BFC  EC3D  F0AE         	call	_strcmp	;wreg free
  6846  011C00  0101               	movlb	1	; () banked
  6847  011C02  5117               	movf	?_strcmp& (0+255),w,b
  6848  011C04  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6849  011C06  A4D8               	btfss	status,2,c
  6850  011C08  0012               	return	
  6851                           
  6852                           ; BSR set to: 1
  6853                           ;ring_buffer_LUT.c: 359: terminal_printNewline();
  6854  011C0A  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6855                           
  6856                           ;ring_buffer_LUT.c: 361: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6857  011C0E  0E00               	movlw	0
  6858  011C10  0101               	movlb	1	; () banked
  6859  011C12  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6860  011C14  0E00               	movlw	0
  6861  011C16  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6862  011C18  0E03               	movlw	3
  6863  011C1A  EC19  F095         	call	_terminal_textAttributes
  6864                           
  6865                           ;ring_buffer_LUT.c: 362: printf("List of supported commands:\n\r"
  6866                           ;ring_buffer_LUT.c: 363: "   Reset: Clears the terminal and resets the micro\n\r"
  6867                           ;ring_buffer_LUT.c: 364: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  6868                           ;ring_buffer_LUT.c: 365: "   *IDN?: Returns device identification\n\r"
  6869                           ;ring_buffer_LUT.c: 366: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
  6870                           ;ring_buffer_LUT.c: 367: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
  6871                           ;ring_buffer_LUT.c: 368: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
  6872  011C1E  0EFB               	movlw	low STR_85
  6873  011C20  0101               	movlb	1	; () banked
  6874  011C22  6F64               	movwf	printf@f& (0+255),b
  6875  011C24  0EF3               	movlw	high STR_85
  6876  011C26  6F65               	movwf	(printf@f+1)& (0+255),b
  6877  011C28  EC00  F080         	call	_printf	;wreg free
  6878                           
  6879                           ;ring_buffer_LUT.c: 383: terminal_printNewline();
  6880  011C2C  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6881                           
  6882                           ;ring_buffer_LUT.c: 384: printf("Help messages appear in yellow\n\r");
  6883  011C30  0EDC               	movlw	low STR_86
  6884  011C32  0101               	movlb	1	; () banked
  6885  011C34  6F64               	movwf	printf@f& (0+255),b
  6886  011C36  0EFD               	movlw	high STR_86
  6887  011C38  6F65               	movwf	(printf@f+1)& (0+255),b
  6888  011C3A  EC00  F080         	call	_printf	;wreg free
  6889                           
  6890                           ;ring_buffer_LUT.c: 386: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6891  011C3E  0E00               	movlw	0
  6892  011C40  0101               	movlb	1	; () banked
  6893  011C42  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6894  011C44  0E00               	movlw	0
  6895  011C46  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6896  011C48  0E02               	movlw	2
  6897  011C4A  EC19  F095         	call	_terminal_textAttributes
  6898                           
  6899                           ;ring_buffer_LUT.c: 387: printf("IDN string appears in green\n\r");
  6900  011C4E  0E3B               	movlw	low STR_87
  6901  011C50  0101               	movlb	1	; () banked
  6902  011C52  6F64               	movwf	printf@f& (0+255),b
  6903  011C54  0EFE               	movlw	high STR_87
  6904  011C56  6F65               	movwf	(printf@f+1)& (0+255),b
  6905  011C58  EC00  F080         	call	_printf	;wreg free
  6906                           
  6907                           ;ring_buffer_LUT.c: 388: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6908  011C5C  0E00               	movlw	0
  6909  011C5E  0101               	movlb	1	; () banked
  6910  011C60  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6911  011C62  0E00               	movlw	0
  6912  011C64  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6913  011C66  0E06               	movlw	6
  6914  011C68  EC19  F095         	call	_terminal_textAttributes
  6915                           
  6916                           ;ring_buffer_LUT.c: 389: printf("Measurements responses appear in cyan\n\r");
  6917  011C6C  0EBF               	movlw	low STR_88
  6918  011C6E  0101               	movlb	1	; () banked
  6919  011C70  6F64               	movwf	printf@f& (0+255),b
  6920  011C72  0EFC               	movlw	high STR_88
  6921  011C74  6F65               	movwf	(printf@f+1)& (0+255),b
  6922  011C76  EC00  F080         	call	_printf	;wreg free
  6923                           
  6924                           ;ring_buffer_LUT.c: 390: terminal_textAttributes(RED, BLACK, NORMAL);
  6925  011C7A  0E00               	movlw	0
  6926  011C7C  0101               	movlb	1	; () banked
  6927  011C7E  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6928  011C80  0E00               	movlw	0
  6929  011C82  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6930  011C84  0E01               	movlw	1
  6931  011C86  EC19  F095         	call	_terminal_textAttributes
  6932                           
  6933                           ;ring_buffer_LUT.c: 391: printf("Errors appear in red\n\r");
  6934  011C8A  0EA5               	movlw	low STR_89
  6935  011C8C  0101               	movlb	1	; () banked
  6936  011C8E  6F64               	movwf	printf@f& (0+255),b
  6937  011C90  0EFE               	movlw	high STR_89
  6938  011C92  6F65               	movwf	(printf@f+1)& (0+255),b
  6939  011C94  EC00  F080         	call	_printf	;wreg free
  6940                           
  6941                           ;ring_buffer_LUT.c: 392: terminal_textAttributesReset();
  6942  011C98  EC54  F0B1         	call	_terminal_textAttributesReset	;wreg free
  6943                           
  6944                           ;ring_buffer_LUT.c: 393: printf("User input appears in white\n\r");
  6945  011C9C  0E1D               	movlw	low STR_90
  6946  011C9E  0101               	movlb	1	; () banked
  6947  011CA0  6F64               	movwf	printf@f& (0+255),b
  6948  011CA2  0EFE               	movlw	high STR_90
  6949  011CA4  6F65               	movwf	(printf@f+1)& (0+255),b
  6950  011CA6  EC00  F080         	call	_printf	;wreg free
  6951                           
  6952                           ;ring_buffer_LUT.c: 396: terminal_printNewline();
  6953  011CAA  EC6E  F0B1         	call	_terminal_printNewline	;wreg free
  6954  011CAE  0012               	return	
  6955  011CB0                     __end_of_ringBufferLUT:
  6956                           	opt stack 0
  6957                           tblptru	equ	0xFF8
  6958                           tblptrh	equ	0xFF7
  6959                           tblptrl	equ	0xFF6
  6960                           tablat	equ	0xFF5
  6961                           intcon	equ	0xFF2
  6962                           postinc0	equ	0xFEE
  6963                           wreg	equ	0xFE8
  6964                           indf1	equ	0xFE7
  6965                           postdec1	equ	0xFE5
  6966                           fsr1h	equ	0xFE2
  6967                           fsr1l	equ	0xFE1
  6968                           indf2	equ	0xFDF
  6969                           postinc2	equ	0xFDE
  6970                           fsr2h	equ	0xFDA
  6971                           fsr2l	equ	0xFD9
  6972                           status	equ	0xFD8
  6973                           
  6974 ;; *************** function _terminal_textAttributesReset *****************
  6975 ;; Defined at:
  6976 ;;		line 223 in file "ring_buffer_interface.c"
  6977 ;; Parameters:    Size  Location     Type
  6978 ;;		None
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;		None
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  1    wreg      void 
  6983 ;; Registers used:
  6984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6994 ;;Total ram usage:        0 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:   19
  6997 ;; This function calls:
  6998 ;;		_terminal_textAttributes
  6999 ;; This function is called by:
  7000 ;;		_main
  7001 ;;		_ringBufferLUT
  7002 ;; This function uses a non-reentrant model
  7003 ;;
  7004                           
  7005                           	psect	text4
  7006  0162A8                     __ptext4:
  7007                           	opt stack 0
  7008  0162A8                     _terminal_textAttributesReset:
  7009                           	opt stack 11
  7010                           
  7011                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  7012                           
  7013                           ;incstack = 0
  7014  0162A8  0E00               	movlw	0
  7015  0162AA  0101               	movlb	1	; () banked
  7016  0162AC  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  7017  0162AE  0E00               	movlw	0
  7018  0162B0  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7019  0162B2  0E07               	movlw	7
  7020  0162B4  EC19  F095         	call	_terminal_textAttributes
  7021  0162B8  0012               	return		;funcret
  7022  0162BA                     __end_of_terminal_textAttributesReset:
  7023                           	opt stack 0
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           intcon	equ	0xFF2
  7029                           postinc0	equ	0xFEE
  7030                           wreg	equ	0xFE8
  7031                           indf1	equ	0xFE7
  7032                           postdec1	equ	0xFE5
  7033                           fsr1h	equ	0xFE2
  7034                           fsr1l	equ	0xFE1
  7035                           indf2	equ	0xFDF
  7036                           postinc2	equ	0xFDE
  7037                           fsr2h	equ	0xFDA
  7038                           fsr2l	equ	0xFD9
  7039                           status	equ	0xFD8
  7040                           
  7041 ;; *************** function _terminal_textAttributes *****************
  7042 ;; Defined at:
  7043 ;;		line 115 in file "ring_buffer_interface.c"
  7044 ;; Parameters:    Size  Location     Type
  7045 ;;  foreground_c    1    wreg     enum E17839
  7046 ;;  background_c    1  142[BANK1 ] enum E17839
  7047 ;;  input_attrib    1  143[BANK1 ] enum E17831
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;  foreground_c    1  144[BANK1 ] enum E17839
  7050 ;;  output_buff    15  145[BANK1 ] unsigned char [15]
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7060 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7061 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7063 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7064 ;;Total ram usage:       18 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:   18
  7067 ;; This function calls:
  7068 ;;		_printf
  7069 ;;		_strcat
  7070 ;;		_strncpy
  7071 ;; This function is called by:
  7072 ;;		_terminal_textAttributesReset
  7073 ;;		_ringBufferLUT
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           	psect	text5
  7078  012A32                     __ptext5:
  7079                           	opt stack 0
  7080  012A32                     _terminal_textAttributes:
  7081                           	opt stack 11
  7082                           
  7083                           ;incstack = 0
  7084                           ;terminal_textAttributes@foreground_color stored from wreg
  7085  012A32  0101               	movlb	1	; () banked
  7086  012A34  6F90               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  7087                           
  7088                           ;ring_buffer_interface.c: 119: char output_buff[15];
  7089                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  7090  012A36  0E91               	movlw	low terminal_textAttributes@output_buff
  7091  012A38  0101               	movlb	1	; () banked
  7092  012A3A  6F17               	movwf	strncpy@to& (0+255),b
  7093  012A3C  0E01               	movlw	high terminal_textAttributes@output_buff
  7094  012A3E  6F18               	movwf	(strncpy@to+1)& (0+255),b
  7095  012A40  0EF5               	movlw	low STR_11
  7096  012A42  6F19               	movwf	strncpy@from& (0+255),b
  7097  012A44  0EFF               	movlw	high STR_11
  7098  012A46  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  7099  012A48  0E00               	movlw	0
  7100  012A4A  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  7101  012A4C  0E0F               	movlw	15
  7102  012A4E  6F1B               	movwf	strncpy@size& (0+255),b
  7103  012A50  ECFA  F0AB         	call	_strncpy	;wreg free
  7104                           
  7105                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  7106  012A54  D054               	goto	l922
  7107  012A56                     
  7108                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  7109  012A56  0E91               	movlw	low terminal_textAttributes@output_buff
  7110  012A58  0101               	movlb	1	; () banked
  7111  012A5A  6F17               	movwf	strcat@to& (0+255),b
  7112  012A5C  0E01               	movlw	high terminal_textAttributes@output_buff
  7113  012A5E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7114  012A60  0EC6               	movlw	low (STR_20+1)
  7115  012A62  6F19               	movwf	strcat@from& (0+255),b
  7116  012A64  0EFF               	movlw	high (STR_20+1)
  7117  012A66  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7118  012A68  EC8C  F0AE         	call	_strcat	;wreg free
  7119                           
  7120                           ;ring_buffer_interface.c: 127: break;
  7121  012A6C  D05D               	goto	l924
  7122  012A6E                     
  7123                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  7124  012A6E  0E91               	movlw	low terminal_textAttributes@output_buff
  7125  012A70  0101               	movlb	1	; () banked
  7126  012A72  6F17               	movwf	strcat@to& (0+255),b
  7127  012A74  0E01               	movlw	high terminal_textAttributes@output_buff
  7128  012A76  6F18               	movwf	(strcat@to+1)& (0+255),b
  7129  012A78  0ECC               	movlw	low (STR_21+1)
  7130  012A7A  6F19               	movwf	strcat@from& (0+255),b
  7131  012A7C  0EFF               	movlw	high (STR_21+1)
  7132  012A7E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7133  012A80  EC8C  F0AE         	call	_strcat	;wreg free
  7134                           
  7135                           ;ring_buffer_interface.c: 130: break;
  7136  012A84  D051               	goto	l924
  7137  012A86                     
  7138                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  7139  012A86  0E91               	movlw	low terminal_textAttributes@output_buff
  7140  012A88  0101               	movlb	1	; () banked
  7141  012A8A  6F17               	movwf	strcat@to& (0+255),b
  7142  012A8C  0E01               	movlw	high terminal_textAttributes@output_buff
  7143  012A8E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7144  012A90  0EDE               	movlw	low (STR_24+1)
  7145  012A92  6F19               	movwf	strcat@from& (0+255),b
  7146  012A94  0EFF               	movlw	high (STR_24+1)
  7147  012A96  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7148  012A98  EC8C  F0AE         	call	_strcat	;wreg free
  7149                           
  7150                           ;ring_buffer_interface.c: 133: break;
  7151  012A9C  D045               	goto	l924
  7152  012A9E                     
  7153                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  7154  012A9E  0E91               	movlw	low terminal_textAttributes@output_buff
  7155  012AA0  0101               	movlb	1	; () banked
  7156  012AA2  6F17               	movwf	strcat@to& (0+255),b
  7157  012AA4  0E01               	movlw	high terminal_textAttributes@output_buff
  7158  012AA6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7159  012AA8  0EE4               	movlw	low (STR_25+1)
  7160  012AAA  6F19               	movwf	strcat@from& (0+255),b
  7161  012AAC  0EFF               	movlw	high (STR_25+1)
  7162  012AAE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7163  012AB0  EC8C  F0AE         	call	_strcat	;wreg free
  7164                           
  7165                           ;ring_buffer_interface.c: 136: break;
  7166  012AB4  D039               	goto	l924
  7167  012AB6                     
  7168                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  7169  012AB6  0E91               	movlw	low terminal_textAttributes@output_buff
  7170  012AB8  0101               	movlb	1	; () banked
  7171  012ABA  6F17               	movwf	strcat@to& (0+255),b
  7172  012ABC  0E01               	movlw	high terminal_textAttributes@output_buff
  7173  012ABE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7174  012AC0  0EF0               	movlw	low (STR_27+1)
  7175  012AC2  6F19               	movwf	strcat@from& (0+255),b
  7176  012AC4  0EFF               	movlw	high (STR_27+1)
  7177  012AC6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7178  012AC8  EC8C  F0AE         	call	_strcat	;wreg free
  7179                           
  7180                           ;ring_buffer_interface.c: 139: break;
  7181  012ACC  D02D               	goto	l924
  7182  012ACE                     
  7183                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  7184  012ACE  0E91               	movlw	low terminal_textAttributes@output_buff
  7185  012AD0  0101               	movlb	1	; () banked
  7186  012AD2  6F17               	movwf	strcat@to& (0+255),b
  7187  012AD4  0E01               	movlw	high terminal_textAttributes@output_buff
  7188  012AD6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7189  012AD8  0EF8               	movlw	low STR_17
  7190  012ADA  6F19               	movwf	strcat@from& (0+255),b
  7191  012ADC  0EFF               	movlw	high STR_17
  7192  012ADE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7193  012AE0  EC8C  F0AE         	call	_strcat	;wreg free
  7194                           
  7195                           ;ring_buffer_interface.c: 142: break;
  7196  012AE4  D021               	goto	l924
  7197  012AE6                     
  7198                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  7199  012AE6  0E91               	movlw	low terminal_textAttributes@output_buff
  7200  012AE8  0101               	movlb	1	; () banked
  7201  012AEA  6F17               	movwf	strcat@to& (0+255),b
  7202  012AEC  0E01               	movlw	high terminal_textAttributes@output_buff
  7203  012AEE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7204  012AF0  0EC6               	movlw	low (STR_20+1)
  7205  012AF2  6F19               	movwf	strcat@from& (0+255),b
  7206  012AF4  0EFF               	movlw	high (STR_20+1)
  7207  012AF6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7208  012AF8  EC8C  F0AE         	call	_strcat	;wreg free
  7209                           
  7210                           ;ring_buffer_interface.c: 147: }
  7211                           
  7212                           ;ring_buffer_interface.c: 146: break;
  7213  012AFC  D015               	goto	l924
  7214  012AFE                     l922:
  7215  012AFE  0101               	movlb	1	; () banked
  7216  012B00  518F               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  7217                           
  7218                           ; Switch size 1, requested type "space"
  7219                           ; Number of cases is 6, Range of values is 0 to 5
  7220                           ; switch strategies available:
  7221                           ; Name         Instructions Cycles
  7222                           ; simple_byte           19    10 (average)
  7223                           ;	Chosen strategy is simple_byte
  7224  012B02  0A00               	xorlw	0	; case 0
  7225  012B04  B4D8               	btfsc	status,2,c
  7226  012B06  D7A7               	goto	l923
  7227  012B08  0A01               	xorlw	1	; case 1
  7228  012B0A  B4D8               	btfsc	status,2,c
  7229  012B0C  D7B0               	goto	l925
  7230  012B0E  0A03               	xorlw	3	; case 2
  7231  012B10  B4D8               	btfsc	status,2,c
  7232  012B12  D7B9               	goto	l926
  7233  012B14  0A01               	xorlw	1	; case 3
  7234  012B16  B4D8               	btfsc	status,2,c
  7235  012B18  D7C2               	goto	l927
  7236  012B1A  0A07               	xorlw	7	; case 4
  7237  012B1C  B4D8               	btfsc	status,2,c
  7238  012B1E  D7CB               	goto	l928
  7239  012B20  0A01               	xorlw	1	; case 5
  7240  012B22  B4D8               	btfsc	status,2,c
  7241  012B24  D7D4               	goto	l929
  7242  012B26  D7DF               	goto	l930
  7243  012B28                     l924:
  7244                           
  7245                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  7246                           
  7247                           ; BSR set to: 1
  7248  012B28  0E91               	movlw	low terminal_textAttributes@output_buff
  7249  012B2A  0101               	movlb	1	; () banked
  7250  012B2C  6F17               	movwf	strcat@to& (0+255),b
  7251  012B2E  0E01               	movlw	high terminal_textAttributes@output_buff
  7252  012B30  6F18               	movwf	(strcat@to+1)& (0+255),b
  7253  012B32  0EFA               	movlw	low STR_19
  7254  012B34  6F19               	movwf	strcat@from& (0+255),b
  7255  012B36  0EFF               	movlw	high STR_19
  7256  012B38  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7257  012B3A  EC8C  F0AE         	call	_strcat	;wreg free
  7258                           
  7259                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  7260  012B3E  D06C               	goto	l931
  7261  012B40                     
  7262                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  7263  012B40  0E91               	movlw	low terminal_textAttributes@output_buff
  7264  012B42  0101               	movlb	1	; () banked
  7265  012B44  6F17               	movwf	strcat@to& (0+255),b
  7266  012B46  0E01               	movlw	high terminal_textAttributes@output_buff
  7267  012B48  6F18               	movwf	(strcat@to+1)& (0+255),b
  7268  012B4A  0EC5               	movlw	low STR_20
  7269  012B4C  6F19               	movwf	strcat@from& (0+255),b
  7270  012B4E  0EFF               	movlw	high STR_20
  7271  012B50  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7272  012B52  EC8C  F0AE         	call	_strcat	;wreg free
  7273                           
  7274                           ;ring_buffer_interface.c: 155: break;
  7275  012B56  D07B               	goto	l933
  7276  012B58                     
  7277                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  7278  012B58  0E91               	movlw	low terminal_textAttributes@output_buff
  7279  012B5A  0101               	movlb	1	; () banked
  7280  012B5C  6F17               	movwf	strcat@to& (0+255),b
  7281  012B5E  0E01               	movlw	high terminal_textAttributes@output_buff
  7282  012B60  6F18               	movwf	(strcat@to+1)& (0+255),b
  7283  012B62  0ECB               	movlw	low STR_21
  7284  012B64  6F19               	movwf	strcat@from& (0+255),b
  7285  012B66  0EFF               	movlw	high STR_21
  7286  012B68  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7287  012B6A  EC8C  F0AE         	call	_strcat	;wreg free
  7288                           
  7289                           ;ring_buffer_interface.c: 158: break;
  7290  012B6E  D06F               	goto	l933
  7291  012B70                     
  7292                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  7293  012B70  0E91               	movlw	low terminal_textAttributes@output_buff
  7294  012B72  0101               	movlb	1	; () banked
  7295  012B74  6F17               	movwf	strcat@to& (0+255),b
  7296  012B76  0E01               	movlw	high terminal_textAttributes@output_buff
  7297  012B78  6F18               	movwf	(strcat@to+1)& (0+255),b
  7298  012B7A  0ED1               	movlw	low STR_22
  7299  012B7C  6F19               	movwf	strcat@from& (0+255),b
  7300  012B7E  0EFF               	movlw	high STR_22
  7301  012B80  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7302  012B82  EC8C  F0AE         	call	_strcat	;wreg free
  7303                           
  7304                           ;ring_buffer_interface.c: 161: break;
  7305  012B86  D063               	goto	l933
  7306  012B88                     
  7307                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  7308  012B88  0E91               	movlw	low terminal_textAttributes@output_buff
  7309  012B8A  0101               	movlb	1	; () banked
  7310  012B8C  6F17               	movwf	strcat@to& (0+255),b
  7311  012B8E  0E01               	movlw	high terminal_textAttributes@output_buff
  7312  012B90  6F18               	movwf	(strcat@to+1)& (0+255),b
  7313  012B92  0ED7               	movlw	low STR_23
  7314  012B94  6F19               	movwf	strcat@from& (0+255),b
  7315  012B96  0EFF               	movlw	high STR_23
  7316  012B98  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7317  012B9A  EC8C  F0AE         	call	_strcat	;wreg free
  7318                           
  7319                           ;ring_buffer_interface.c: 164: break;
  7320  012B9E  D057               	goto	l933
  7321  012BA0                     
  7322                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  7323  012BA0  0E91               	movlw	low terminal_textAttributes@output_buff
  7324  012BA2  0101               	movlb	1	; () banked
  7325  012BA4  6F17               	movwf	strcat@to& (0+255),b
  7326  012BA6  0E01               	movlw	high terminal_textAttributes@output_buff
  7327  012BA8  6F18               	movwf	(strcat@to+1)& (0+255),b
  7328  012BAA  0EDD               	movlw	low STR_24
  7329  012BAC  6F19               	movwf	strcat@from& (0+255),b
  7330  012BAE  0EFF               	movlw	high STR_24
  7331  012BB0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7332  012BB2  EC8C  F0AE         	call	_strcat	;wreg free
  7333                           
  7334                           ;ring_buffer_interface.c: 167: break;
  7335  012BB6  D04B               	goto	l933
  7336  012BB8                     
  7337                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  7338  012BB8  0E91               	movlw	low terminal_textAttributes@output_buff
  7339  012BBA  0101               	movlb	1	; () banked
  7340  012BBC  6F17               	movwf	strcat@to& (0+255),b
  7341  012BBE  0E01               	movlw	high terminal_textAttributes@output_buff
  7342  012BC0  6F18               	movwf	(strcat@to+1)& (0+255),b
  7343  012BC2  0EE3               	movlw	low STR_25
  7344  012BC4  6F19               	movwf	strcat@from& (0+255),b
  7345  012BC6  0EFF               	movlw	high STR_25
  7346  012BC8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7347  012BCA  EC8C  F0AE         	call	_strcat	;wreg free
  7348                           
  7349                           ;ring_buffer_interface.c: 170: break;
  7350  012BCE  D03F               	goto	l933
  7351  012BD0                     
  7352                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  7353  012BD0  0E91               	movlw	low terminal_textAttributes@output_buff
  7354  012BD2  0101               	movlb	1	; () banked
  7355  012BD4  6F17               	movwf	strcat@to& (0+255),b
  7356  012BD6  0E01               	movlw	high terminal_textAttributes@output_buff
  7357  012BD8  6F18               	movwf	(strcat@to+1)& (0+255),b
  7358  012BDA  0EE9               	movlw	low STR_26
  7359  012BDC  6F19               	movwf	strcat@from& (0+255),b
  7360  012BDE  0EFF               	movlw	high STR_26
  7361  012BE0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7362  012BE2  EC8C  F0AE         	call	_strcat	;wreg free
  7363                           
  7364                           ;ring_buffer_interface.c: 173: break;
  7365  012BE6  D033               	goto	l933
  7366  012BE8                     
  7367                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  7368  012BE8  0E91               	movlw	low terminal_textAttributes@output_buff
  7369  012BEA  0101               	movlb	1	; () banked
  7370  012BEC  6F17               	movwf	strcat@to& (0+255),b
  7371  012BEE  0E01               	movlw	high terminal_textAttributes@output_buff
  7372  012BF0  6F18               	movwf	(strcat@to+1)& (0+255),b
  7373  012BF2  0EEF               	movlw	low STR_27
  7374  012BF4  6F19               	movwf	strcat@from& (0+255),b
  7375  012BF6  0EFF               	movlw	high STR_27
  7376  012BF8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7377  012BFA  EC8C  F0AE         	call	_strcat	;wreg free
  7378                           
  7379                           ;ring_buffer_interface.c: 176: break;
  7380  012BFE  D027               	goto	l933
  7381  012C00                     
  7382                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  7383  012C00  0E91               	movlw	low terminal_textAttributes@output_buff
  7384  012C02  0101               	movlb	1	; () banked
  7385  012C04  6F17               	movwf	strcat@to& (0+255),b
  7386  012C06  0E01               	movlw	high terminal_textAttributes@output_buff
  7387  012C08  6F18               	movwf	(strcat@to+1)& (0+255),b
  7388  012C0A  0EEF               	movlw	low STR_27
  7389  012C0C  6F19               	movwf	strcat@from& (0+255),b
  7390  012C0E  0EFF               	movlw	high STR_27
  7391  012C10  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7392  012C12  EC8C  F0AE         	call	_strcat	;wreg free
  7393                           
  7394                           ;ring_buffer_interface.c: 181: }
  7395                           
  7396                           ;ring_buffer_interface.c: 180: break;
  7397  012C16  D01B               	goto	l933
  7398  012C18                     l931:
  7399  012C18  0101               	movlb	1	; () banked
  7400  012C1A  5190               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  7401                           
  7402                           ; Switch size 1, requested type "space"
  7403                           ; Number of cases is 8, Range of values is 0 to 7
  7404                           ; switch strategies available:
  7405                           ; Name         Instructions Cycles
  7406                           ; simple_byte           25    13 (average)
  7407                           ;	Chosen strategy is simple_byte
  7408  012C1C  0A00               	xorlw	0	; case 0
  7409  012C1E  B4D8               	btfsc	status,2,c
  7410  012C20  D78F               	goto	l932
  7411  012C22  0A01               	xorlw	1	; case 1
  7412  012C24  B4D8               	btfsc	status,2,c
  7413  012C26  D798               	goto	l934
  7414  012C28  0A03               	xorlw	3	; case 2
  7415  012C2A  B4D8               	btfsc	status,2,c
  7416  012C2C  D7A1               	goto	l935
  7417  012C2E  0A01               	xorlw	1	; case 3
  7418  012C30  B4D8               	btfsc	status,2,c
  7419  012C32  D7AA               	goto	l936
  7420  012C34  0A07               	xorlw	7	; case 4
  7421  012C36  B4D8               	btfsc	status,2,c
  7422  012C38  D7B3               	goto	l937
  7423  012C3A  0A01               	xorlw	1	; case 5
  7424  012C3C  B4D8               	btfsc	status,2,c
  7425  012C3E  D7BC               	goto	l938
  7426  012C40  0A03               	xorlw	3	; case 6
  7427  012C42  B4D8               	btfsc	status,2,c
  7428  012C44  D7C5               	goto	l939
  7429  012C46  0A01               	xorlw	1	; case 7
  7430  012C48  B4D8               	btfsc	status,2,c
  7431  012C4A  D7CE               	goto	l940
  7432  012C4C  D7D9               	goto	l941
  7433  012C4E                     l933:
  7434                           
  7435                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  7436                           
  7437                           ; BSR set to: 1
  7438  012C4E  0E91               	movlw	low terminal_textAttributes@output_buff
  7439  012C50  0101               	movlb	1	; () banked
  7440  012C52  6F17               	movwf	strcat@to& (0+255),b
  7441  012C54  0E01               	movlw	high terminal_textAttributes@output_buff
  7442  012C56  6F18               	movwf	(strcat@to+1)& (0+255),b
  7443  012C58  0EFA               	movlw	low STR_19
  7444  012C5A  6F19               	movwf	strcat@from& (0+255),b
  7445  012C5C  0EFF               	movlw	high STR_19
  7446  012C5E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7447  012C60  EC8C  F0AE         	call	_strcat	;wreg free
  7448                           
  7449                           ;ring_buffer_interface.c: 185: switch (background_color) {
  7450  012C64  D06C               	goto	l942
  7451  012C66                     
  7452                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  7453  012C66  0E91               	movlw	low terminal_textAttributes@output_buff
  7454  012C68  0101               	movlb	1	; () banked
  7455  012C6A  6F17               	movwf	strcat@to& (0+255),b
  7456  012C6C  0E01               	movlw	high terminal_textAttributes@output_buff
  7457  012C6E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7458  012C70  0EC8               	movlw	low STR_30
  7459  012C72  6F19               	movwf	strcat@from& (0+255),b
  7460  012C74  0EFF               	movlw	high STR_30
  7461  012C76  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7462  012C78  EC8C  F0AE         	call	_strcat	;wreg free
  7463                           
  7464                           ;ring_buffer_interface.c: 189: break;
  7465  012C7C  D07B               	goto	l944
  7466  012C7E                     
  7467                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  7468  012C7E  0E91               	movlw	low terminal_textAttributes@output_buff
  7469  012C80  0101               	movlb	1	; () banked
  7470  012C82  6F17               	movwf	strcat@to& (0+255),b
  7471  012C84  0E01               	movlw	high terminal_textAttributes@output_buff
  7472  012C86  6F18               	movwf	(strcat@to+1)& (0+255),b
  7473  012C88  0ECE               	movlw	low STR_31
  7474  012C8A  6F19               	movwf	strcat@from& (0+255),b
  7475  012C8C  0EFF               	movlw	high STR_31
  7476  012C8E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7477  012C90  EC8C  F0AE         	call	_strcat	;wreg free
  7478                           
  7479                           ;ring_buffer_interface.c: 192: break;
  7480  012C94  D06F               	goto	l944
  7481  012C96                     
  7482                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  7483  012C96  0E91               	movlw	low terminal_textAttributes@output_buff
  7484  012C98  0101               	movlb	1	; () banked
  7485  012C9A  6F17               	movwf	strcat@to& (0+255),b
  7486  012C9C  0E01               	movlw	high terminal_textAttributes@output_buff
  7487  012C9E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7488  012CA0  0ED4               	movlw	low STR_32
  7489  012CA2  6F19               	movwf	strcat@from& (0+255),b
  7490  012CA4  0EFF               	movlw	high STR_32
  7491  012CA6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7492  012CA8  EC8C  F0AE         	call	_strcat	;wreg free
  7493                           
  7494                           ;ring_buffer_interface.c: 195: break;
  7495  012CAC  D063               	goto	l944
  7496  012CAE                     
  7497                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  7498  012CAE  0E91               	movlw	low terminal_textAttributes@output_buff
  7499  012CB0  0101               	movlb	1	; () banked
  7500  012CB2  6F17               	movwf	strcat@to& (0+255),b
  7501  012CB4  0E01               	movlw	high terminal_textAttributes@output_buff
  7502  012CB6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7503  012CB8  0EDA               	movlw	low STR_33
  7504  012CBA  6F19               	movwf	strcat@from& (0+255),b
  7505  012CBC  0EFF               	movlw	high STR_33
  7506  012CBE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7507  012CC0  EC8C  F0AE         	call	_strcat	;wreg free
  7508                           
  7509                           ;ring_buffer_interface.c: 198: break;
  7510  012CC4  D057               	goto	l944
  7511  012CC6                     
  7512                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  7513  012CC6  0E91               	movlw	low terminal_textAttributes@output_buff
  7514  012CC8  0101               	movlb	1	; () banked
  7515  012CCA  6F17               	movwf	strcat@to& (0+255),b
  7516  012CCC  0E01               	movlw	high terminal_textAttributes@output_buff
  7517  012CCE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7518  012CD0  0EE0               	movlw	low STR_34
  7519  012CD2  6F19               	movwf	strcat@from& (0+255),b
  7520  012CD4  0EFF               	movlw	high STR_34
  7521  012CD6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7522  012CD8  EC8C  F0AE         	call	_strcat	;wreg free
  7523                           
  7524                           ;ring_buffer_interface.c: 201: break;
  7525  012CDC  D04B               	goto	l944
  7526  012CDE                     
  7527                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  7528  012CDE  0E91               	movlw	low terminal_textAttributes@output_buff
  7529  012CE0  0101               	movlb	1	; () banked
  7530  012CE2  6F17               	movwf	strcat@to& (0+255),b
  7531  012CE4  0E01               	movlw	high terminal_textAttributes@output_buff
  7532  012CE6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7533  012CE8  0EE6               	movlw	low STR_35
  7534  012CEA  6F19               	movwf	strcat@from& (0+255),b
  7535  012CEC  0EFF               	movlw	high STR_35
  7536  012CEE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7537  012CF0  EC8C  F0AE         	call	_strcat	;wreg free
  7538                           
  7539                           ;ring_buffer_interface.c: 204: break;
  7540  012CF4  D03F               	goto	l944
  7541  012CF6                     
  7542                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  7543  012CF6  0E91               	movlw	low terminal_textAttributes@output_buff
  7544  012CF8  0101               	movlb	1	; () banked
  7545  012CFA  6F17               	movwf	strcat@to& (0+255),b
  7546  012CFC  0E01               	movlw	high terminal_textAttributes@output_buff
  7547  012CFE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7548  012D00  0EEC               	movlw	low STR_36
  7549  012D02  6F19               	movwf	strcat@from& (0+255),b
  7550  012D04  0EFF               	movlw	high STR_36
  7551  012D06  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7552  012D08  EC8C  F0AE         	call	_strcat	;wreg free
  7553                           
  7554                           ;ring_buffer_interface.c: 207: break;
  7555  012D0C  D033               	goto	l944
  7556  012D0E                     
  7557                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  7558  012D0E  0E91               	movlw	low terminal_textAttributes@output_buff
  7559  012D10  0101               	movlb	1	; () banked
  7560  012D12  6F17               	movwf	strcat@to& (0+255),b
  7561  012D14  0E01               	movlw	high terminal_textAttributes@output_buff
  7562  012D16  6F18               	movwf	(strcat@to+1)& (0+255),b
  7563  012D18  0EF2               	movlw	low STR_37
  7564  012D1A  6F19               	movwf	strcat@from& (0+255),b
  7565  012D1C  0EFF               	movlw	high STR_37
  7566  012D1E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7567  012D20  EC8C  F0AE         	call	_strcat	;wreg free
  7568                           
  7569                           ;ring_buffer_interface.c: 210: break;
  7570  012D24  D027               	goto	l944
  7571  012D26                     
  7572                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  7573  012D26  0E91               	movlw	low terminal_textAttributes@output_buff
  7574  012D28  0101               	movlb	1	; () banked
  7575  012D2A  6F17               	movwf	strcat@to& (0+255),b
  7576  012D2C  0E01               	movlw	high terminal_textAttributes@output_buff
  7577  012D2E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7578  012D30  0EF2               	movlw	low STR_37
  7579  012D32  6F19               	movwf	strcat@from& (0+255),b
  7580  012D34  0EFF               	movlw	high STR_37
  7581  012D36  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7582  012D38  EC8C  F0AE         	call	_strcat	;wreg free
  7583                           
  7584                           ;ring_buffer_interface.c: 215: }
  7585                           
  7586                           ;ring_buffer_interface.c: 214: break;
  7587  012D3C  D01B               	goto	l944
  7588  012D3E                     l942:
  7589  012D3E  0101               	movlb	1	; () banked
  7590  012D40  518E               	movf	terminal_textAttributes@background_color& (0+255),w,b
  7591                           
  7592                           ; Switch size 1, requested type "space"
  7593                           ; Number of cases is 8, Range of values is 0 to 7
  7594                           ; switch strategies available:
  7595                           ; Name         Instructions Cycles
  7596                           ; simple_byte           25    13 (average)
  7597                           ;	Chosen strategy is simple_byte
  7598  012D42  0A00               	xorlw	0	; case 0
  7599  012D44  B4D8               	btfsc	status,2,c
  7600  012D46  D78F               	goto	l943
  7601  012D48  0A01               	xorlw	1	; case 1
  7602  012D4A  B4D8               	btfsc	status,2,c
  7603  012D4C  D798               	goto	l945
  7604  012D4E  0A03               	xorlw	3	; case 2
  7605  012D50  B4D8               	btfsc	status,2,c
  7606  012D52  D7A1               	goto	l946
  7607  012D54  0A01               	xorlw	1	; case 3
  7608  012D56  B4D8               	btfsc	status,2,c
  7609  012D58  D7AA               	goto	l947
  7610  012D5A  0A07               	xorlw	7	; case 4
  7611  012D5C  B4D8               	btfsc	status,2,c
  7612  012D5E  D7B3               	goto	l948
  7613  012D60  0A01               	xorlw	1	; case 5
  7614  012D62  B4D8               	btfsc	status,2,c
  7615  012D64  D7BC               	goto	l949
  7616  012D66  0A03               	xorlw	3	; case 6
  7617  012D68  B4D8               	btfsc	status,2,c
  7618  012D6A  D7C5               	goto	l950
  7619  012D6C  0A01               	xorlw	1	; case 7
  7620  012D6E  B4D8               	btfsc	status,2,c
  7621  012D70  D7CE               	goto	l951
  7622  012D72  D7D9               	goto	l952
  7623  012D74                     l944:
  7624                           
  7625                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  7626                           
  7627                           ; BSR set to: 1
  7628  012D74  0E91               	movlw	low terminal_textAttributes@output_buff
  7629  012D76  0101               	movlb	1	; () banked
  7630  012D78  6F17               	movwf	strcat@to& (0+255),b
  7631  012D7A  0E01               	movlw	high terminal_textAttributes@output_buff
  7632  012D7C  6F18               	movwf	(strcat@to+1)& (0+255),b
  7633  012D7E  0EFC               	movlw	low STR_39
  7634  012D80  6F19               	movwf	strcat@from& (0+255),b
  7635  012D82  0EFF               	movlw	high STR_39
  7636  012D84  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7637  012D86  EC8C  F0AE         	call	_strcat	;wreg free
  7638                           
  7639                           ;ring_buffer_interface.c: 219: printf(output_buff);
  7640  012D8A  0E91               	movlw	low terminal_textAttributes@output_buff
  7641  012D8C  0101               	movlb	1	; () banked
  7642  012D8E  6F64               	movwf	printf@f& (0+255),b
  7643  012D90  0E01               	movlw	high terminal_textAttributes@output_buff
  7644  012D92  6F65               	movwf	(printf@f+1)& (0+255),b
  7645  012D94  EC00  F080         	call	_printf	;wreg free
  7646  012D98  0012               	return		;funcret
  7647  012D9A                     __end_of_terminal_textAttributes:
  7648                           	opt stack 0
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           intcon	equ	0xFF2
  7654                           postinc0	equ	0xFEE
  7655                           wreg	equ	0xFE8
  7656                           indf1	equ	0xFE7
  7657                           postdec1	equ	0xFE5
  7658                           fsr1h	equ	0xFE2
  7659                           fsr1l	equ	0xFE1
  7660                           indf2	equ	0xFDF
  7661                           postinc2	equ	0xFDE
  7662                           fsr2h	equ	0xFDA
  7663                           fsr2l	equ	0xFD9
  7664                           status	equ	0xFD8
  7665                           
  7666 ;; *************** function _strncpy *****************
  7667 ;; Defined at:
  7668 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  7669 ;; Parameters:    Size  Location     Type
  7670 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7671 ;;		 -> terminal_textAttributes@output_buff(15), 
  7672 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7673 ;;		 -> STR_11(3), 
  7674 ;;  size            2   27[BANK1 ] unsigned int 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  cp              2   29[BANK1 ] PTR unsigned char 
  7677 ;;		 -> terminal_textAttributes@output_buff(15), 
  7678 ;; Return value:  Size  Location     Type
  7679 ;;                  2   23[BANK1 ] PTR unsigned char 
  7680 ;; Registers used:
  7681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7682 ;; Tracked objects:
  7683 ;;		On entry : 0/0
  7684 ;;		On exit  : 0/0
  7685 ;;		Unchanged: 0/0
  7686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7687 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7688 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7690 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7691 ;;Total ram usage:        8 bytes
  7692 ;; Hardware stack levels used:    1
  7693 ;; Hardware stack levels required when called:   14
  7694 ;; This function calls:
  7695 ;;		Nothing
  7696 ;; This function is called by:
  7697 ;;		_terminal_textAttributes
  7698 ;; This function uses a non-reentrant model
  7699 ;;
  7700                           
  7701                           	psect	text6
  7702  0157F4                     __ptext6:
  7703                           	opt stack 0
  7704  0157F4                     _strncpy:
  7705                           	opt stack 14
  7706                           
  7707                           ;incstack = 0
  7708  0157F4  C117  F11D         	movff	strncpy@to,strncpy@cp
  7709  0157F8  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
  7710  0157FC  D018               	goto	l1884
  7711  0157FE  0101               	movlb	1	; () banked
  7712  015800  071B               	decf	strncpy@size& (0+255),f,b
  7713  015802  A0D8               	btfss	status,0,c
  7714  015804  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7715                           
  7716                           ; BSR set to: 1
  7717  015806  C119  FFF6         	movff	strncpy@from,tblptrl
  7718  01580A  C11A  FFF7         	movff	strncpy@from+1,tblptrh
  7719  01580E  4B19               	infsnz	strncpy@from& (0+255),f,b
  7720  015810  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
  7721  015812                     	if	0	;tblptru may be non-zero
  7722  015812                     	endif
  7723  015812                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7724  015812  0E00               	movlw	low (__mediumconst shr (0+16))
  7725  015814  6EF8               	movwf	tblptru,c
  7726  015816                     	endif
  7727  015816  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7728  01581A  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7729  01581E  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7730  015820  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7731  015822  0008               	tblrd		*
  7732  015824  CFF5 FFDF          	movff	tablat,indf2
  7733  015828  50DF               	movf	indf2,w,c
  7734  01582A  B4D8               	btfsc	status,2,c
  7735  01582C  D00E               	goto	l1886
  7736  01582E                     l1884:
  7737                           
  7738                           ; BSR set to: 1
  7739                           
  7740                           ; BSR set to: 1
  7741  01582E  0101               	movlb	1	; () banked
  7742  015830  511B               	movf	strncpy@size& (0+255),w,b
  7743  015832  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
  7744  015834  B4D8               	btfsc	status,2,c
  7745  015836  D009               	goto	l1886
  7746  015838  D7E2               	goto	l1883
  7747  01583A                     l9059:
  7748                           
  7749                           ; BSR set to: 1
  7750  01583A  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7751  01583E  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7752  015842  0E00               	movlw	0
  7753  015844  6EDF               	movwf	indf2,c
  7754                           
  7755                           ; BSR set to: 1
  7756  015846  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7757  015848  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7758  01584A                     l1886:
  7759                           
  7760                           ; BSR set to: 1
  7761                           
  7762                           ; BSR set to: 1
  7763  01584A  071B               	decf	strncpy@size& (0+255),f,b
  7764  01584C  A0D8               	btfss	status,0,c
  7765  01584E  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7766  015850  291B               	incf	strncpy@size& (0+255),w,b
  7767  015852  E1F3               	bnz	l9059
  7768  015854  291C               	incf	(strncpy@size+1)& (0+255),w,b
  7769  015856  B4D8               	btfsc	status,2,c
  7770  015858  0012               	return	
  7771  01585A  D7EF               	goto	l1887
  7772  01585C                     __end_of_strncpy:
  7773                           	opt stack 0
  7774                           tblptru	equ	0xFF8
  7775                           tblptrh	equ	0xFF7
  7776                           tblptrl	equ	0xFF6
  7777                           tablat	equ	0xFF5
  7778                           intcon	equ	0xFF2
  7779                           postinc0	equ	0xFEE
  7780                           wreg	equ	0xFE8
  7781                           indf1	equ	0xFE7
  7782                           postdec1	equ	0xFE5
  7783                           fsr1h	equ	0xFE2
  7784                           fsr1l	equ	0xFE1
  7785                           indf2	equ	0xFDF
  7786                           postinc2	equ	0xFDE
  7787                           fsr2h	equ	0xFDA
  7788                           fsr2l	equ	0xFD9
  7789                           status	equ	0xFD8
  7790                           
  7791 ;; *************** function _strcat *****************
  7792 ;; Defined at:
  7793 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  7794 ;; Parameters:    Size  Location     Type
  7795 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7796 ;;		 -> terminal_textAttributes@output_buff(15), 
  7797 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7798 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  7799 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  7800 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  7801 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  7802 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  7803 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  7804 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  7807 ;;		 -> terminal_textAttributes@output_buff(15), 
  7808 ;; Return value:  Size  Location     Type
  7809 ;;                  2   23[BANK1 ] PTR unsigned char 
  7810 ;; Registers used:
  7811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7812 ;; Tracked objects:
  7813 ;;		On entry : 0/0
  7814 ;;		On exit  : 0/0
  7815 ;;		Unchanged: 0/0
  7816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7817 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7818 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7820 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7821 ;;Total ram usage:        6 bytes
  7822 ;; Hardware stack levels used:    1
  7823 ;; Hardware stack levels required when called:   14
  7824 ;; This function calls:
  7825 ;;		Nothing
  7826 ;; This function is called by:
  7827 ;;		_terminal_textAttributes
  7828 ;; This function uses a non-reentrant model
  7829 ;;
  7830                           
  7831                           	psect	text7
  7832  015D18                     __ptext7:
  7833                           	opt stack 0
  7834  015D18                     _strcat:
  7835                           	opt stack 14
  7836                           
  7837                           ; BSR set to: 1
  7838                           ;incstack = 0
  7839  015D18  C117  F11B         	movff	strcat@to,strcat@cp
  7840  015D1C  C118  F11C         	movff	strcat@to+1,strcat@cp+1
  7841  015D20  D003               	goto	l1859
  7842  015D22  0101               	movlb	1	; () banked
  7843  015D24  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7844  015D26  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7845  015D28                     l1859:
  7846                           
  7847                           ; BSR set to: 1
  7848  015D28  C11B  FFD9         	movff	strcat@cp,fsr2l
  7849  015D2C  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7850  015D30  50DF               	movf	indf2,w,c
  7851  015D32  B4D8               	btfsc	status,2,c
  7852  015D34  D006               	goto	l1862
  7853  015D36  D7F5               	goto	l1860
  7854  015D38  0101               	movlb	1	; () banked
  7855  015D3A  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7856  015D3C  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7857  015D3E  4B19               	infsnz	strcat@from& (0+255),f,b
  7858  015D40  2B1A               	incf	(strcat@from+1)& (0+255),f,b
  7859  015D42                     l1862:
  7860                           
  7861                           ; BSR set to: 1
  7862  015D42  C119  FFF6         	movff	strcat@from,tblptrl
  7863  015D46  C11A  FFF7         	movff	strcat@from+1,tblptrh
  7864  015D4A                     	if	0	;tblptru may be non-zero
  7865  015D4A                     	endif
  7866  015D4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7867  015D4A  0E00               	movlw	low (__mediumconst shr (0+16))
  7868  015D4C  6EF8               	movwf	tblptru,c
  7869  015D4E                     	endif
  7870  015D4E  C11B  FFD9         	movff	strcat@cp,fsr2l
  7871  015D52  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7872  015D56  0008               	tblrd		*
  7873  015D58  CFF5 FFDF          	movff	tablat,indf2
  7874  015D5C  50DF               	movf	indf2,w,c
  7875  015D5E  B4D8               	btfsc	status,2,c
  7876  015D60  0012               	return	
  7877  015D62  D7EA               	goto	l1863
  7878  015D64                     __end_of_strcat:
  7879                           	opt stack 0
  7880                           tblptru	equ	0xFF8
  7881                           tblptrh	equ	0xFF7
  7882                           tblptrl	equ	0xFF6
  7883                           tablat	equ	0xFF5
  7884                           intcon	equ	0xFF2
  7885                           postinc0	equ	0xFEE
  7886                           wreg	equ	0xFE8
  7887                           indf1	equ	0xFE7
  7888                           postdec1	equ	0xFE5
  7889                           fsr1h	equ	0xFE2
  7890                           fsr1l	equ	0xFE1
  7891                           indf2	equ	0xFDF
  7892                           postinc2	equ	0xFDE
  7893                           fsr2h	equ	0xFDA
  7894                           fsr2l	equ	0xFD9
  7895                           status	equ	0xFD8
  7896                           
  7897 ;; *************** function _terminal_printNewline *****************
  7898 ;; Defined at:
  7899 ;;		line 230 in file "ring_buffer_interface.c"
  7900 ;; Parameters:    Size  Location     Type
  7901 ;;		None
  7902 ;; Auto vars:     Size  Location     Type
  7903 ;;		None
  7904 ;; Return value:  Size  Location     Type
  7905 ;;                  1    wreg      void 
  7906 ;; Registers used:
  7907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7908 ;; Tracked objects:
  7909 ;;		On entry : 0/0
  7910 ;;		On exit  : 0/0
  7911 ;;		Unchanged: 0/0
  7912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7917 ;;Total ram usage:        0 bytes
  7918 ;; Hardware stack levels used:    1
  7919 ;; Hardware stack levels required when called:   18
  7920 ;; This function calls:
  7921 ;;		_printf
  7922 ;; This function is called by:
  7923 ;;		_ringBufferLUT
  7924 ;; This function uses a non-reentrant model
  7925 ;;
  7926                           
  7927                           	psect	text8
  7928  0162DC                     __ptext8:
  7929                           	opt stack 0
  7930  0162DC                     _terminal_printNewline:
  7931                           	opt stack 10
  7932                           
  7933                           ;ring_buffer_interface.c: 232: printf("\n\r");
  7934                           
  7935                           ;incstack = 0
  7936  0162DC  0E33               	movlw	low (STR_81+68)
  7937  0162DE  0101               	movlb	1	; () banked
  7938  0162E0  6F64               	movwf	printf@f& (0+255),b
  7939  0162E2  0EFB               	movlw	high (STR_81+68)
  7940  0162E4  6F65               	movwf	(printf@f+1)& (0+255),b
  7941  0162E6  EC00  F080         	call	_printf	;wreg free
  7942  0162EA  0012               	return		;funcret
  7943  0162EC                     __end_of_terminal_printNewline:
  7944                           	opt stack 0
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           intcon	equ	0xFF2
  7950                           postinc0	equ	0xFEE
  7951                           wreg	equ	0xFE8
  7952                           indf1	equ	0xFE7
  7953                           postdec1	equ	0xFE5
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           postinc2	equ	0xFDE
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function _strstr *****************
  7963 ;; Defined at:
  7964 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
  7967 ;;		 -> NULL(0), line(64), 
  7968 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
  7969 ;;		 -> STR_75(25), 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  2   38[BANK1 ] PTR unsigned char 
  7974 ;; Registers used:
  7975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7981 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7984 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7985 ;;Total ram usage:        4 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:   15
  7988 ;; This function calls:
  7989 ;;		_strchr
  7990 ;;		_strlen
  7991 ;;		_strncmp
  7992 ;; This function is called by:
  7993 ;;		_ringBufferLUT
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text9
  7998  015310                     __ptext9:
  7999                           	opt stack 0
  8000  015310                     _strstr:
  8001                           	opt stack 13
  8002                           
  8003                           ;incstack = 0
  8004  015310  D034               	goto	l1898
  8005  015312  C126  F11D         	movff	strstr@s1,strncmp@s1
  8006  015316  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
  8007  01531A  C128  F11F         	movff	strstr@s2,strncmp@s2
  8008  01531E  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
  8009  015322  C128  F117         	movff	strstr@s2,strlen@s
  8010  015326  C129  F118         	movff	strstr@s2+1,strlen@s+1
  8011  01532A  ECE6  F0AD         	call	_strlen	;wreg free
  8012  01532E  C117  F121         	movff	?_strlen,strncmp@len
  8013  015332  C118  F122         	movff	?_strlen+1,strncmp@len+1
  8014  015336  ECF8  F0A8         	call	_strncmp	;wreg free
  8015  01533A  0101               	movlb	1	; () banked
  8016  01533C  511D               	movf	?_strncmp& (0+255),w,b
  8017  01533E  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
  8018  015340  A4D8               	btfss	status,2,c
  8019  015342  D005               	goto	l1900
  8020                           
  8021                           ; BSR set to: 1
  8022  015344  C126  F126         	movff	strstr@s1,?_strstr
  8023  015348  C127  F127         	movff	strstr@s1+1,?_strstr+1
  8024                           
  8025                           ; BSR set to: 1
  8026  01534C  0012               	return	
  8027  01534E                     l1900:
  8028                           
  8029                           ; BSR set to: 1
  8030                           
  8031                           ; BSR set to: 1
  8032  01534E  0E01               	movlw	1
  8033  015350  2526               	addwf	strstr@s1& (0+255),w,b
  8034  015352  6F17               	movwf	strchr@ptr& (0+255),b
  8035  015354  0E00               	movlw	0
  8036  015356  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
  8037  015358  6F18               	movwf	(strchr@ptr+1)& (0+255),b
  8038  01535A  C128  FFF6         	movff	strstr@s2,tblptrl
  8039  01535E  C129  FFF7         	movff	strstr@s2+1,tblptrh
  8040  015362                     	if	0	;tblptru may be non-zero
  8041  015362                     	endif
  8042  015362                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8043  015362  0E00               	movlw	low (__mediumconst shr (0+16))
  8044  015364  6EF8               	movwf	tblptru,c
  8045  015366                     	endif
  8046  015366  0008               	tblrd		*
  8047  015368  50F5               	movf	tablat,w,c
  8048  01536A  6F19               	movwf	strchr@chr& (0+255),b
  8049  01536C  6B1A               	clrf	(strchr@chr+1)& (0+255),b
  8050  01536E  EC9F  F0AF         	call	_strchr	;wreg free
  8051  015372  C117  F126         	movff	?_strchr,strstr@s1
  8052  015376  C118  F127         	movff	?_strchr+1,strstr@s1+1
  8053  01537A                     l1898:
  8054  01537A  0101               	movlb	1	; () banked
  8055  01537C  5126               	movf	strstr@s1& (0+255),w,b
  8056  01537E  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
  8057  015380  B4D8               	btfsc	status,2,c
  8058  015382  D007               	goto	u11120
  8059                           
  8060                           ; BSR set to: 1
  8061  015384  C126  FFD9         	movff	strstr@s1,fsr2l
  8062  015388  C127  FFDA         	movff	strstr@s1+1,fsr2h
  8063  01538C  50DF               	movf	indf2,w,c
  8064  01538E  A4D8               	btfss	status,2,c
  8065  015390  D7C0               	goto	l1899
  8066  015392                     u11120:
  8067                           
  8068                           ; BSR set to: 1
  8069                           
  8070                           ; BSR set to: 1
  8071                           
  8072                           ; BSR set to: 1
  8073  015392  0E00               	movlw	0
  8074  015394  6F26               	movwf	?_strstr& (0+255),b
  8075  015396  0E00               	movlw	0
  8076  015398  6F27               	movwf	(?_strstr+1)& (0+255),b
  8077  01539A  0012               	return	
  8078  01539C                     __end_of_strstr:
  8079                           	opt stack 0
  8080                           tblptru	equ	0xFF8
  8081                           tblptrh	equ	0xFF7
  8082                           tblptrl	equ	0xFF6
  8083                           tablat	equ	0xFF5
  8084                           intcon	equ	0xFF2
  8085                           postinc0	equ	0xFEE
  8086                           wreg	equ	0xFE8
  8087                           indf1	equ	0xFE7
  8088                           postdec1	equ	0xFE5
  8089                           fsr1h	equ	0xFE2
  8090                           fsr1l	equ	0xFE1
  8091                           indf2	equ	0xFDF
  8092                           postinc2	equ	0xFDE
  8093                           fsr2h	equ	0xFDA
  8094                           fsr2l	equ	0xFD9
  8095                           status	equ	0xFD8
  8096                           
  8097 ;; *************** function _strncmp *****************
  8098 ;; Defined at:
  8099 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  8100 ;; Parameters:    Size  Location     Type
  8101 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
  8102 ;;		 -> NULL(0), line(64), 
  8103 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
  8104 ;;		 -> STR_75(25), 
  8105 ;;  len             2   33[BANK1 ] unsigned int 
  8106 ;; Auto vars:     Size  Location     Type
  8107 ;;		None
  8108 ;; Return value:  Size  Location     Type
  8109 ;;                  2   29[BANK1 ] int 
  8110 ;; Registers used:
  8111 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8112 ;; Tracked objects:
  8113 ;;		On entry : 0/0
  8114 ;;		On exit  : 0/0
  8115 ;;		Unchanged: 0/0
  8116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8117 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8119 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8120 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8121 ;;Total ram usage:        9 bytes
  8122 ;; Hardware stack levels used:    1
  8123 ;; Hardware stack levels required when called:   14
  8124 ;; This function calls:
  8125 ;;		Nothing
  8126 ;; This function is called by:
  8127 ;;		_strstr
  8128 ;; This function uses a non-reentrant model
  8129 ;;
  8130                           
  8131                           	psect	text10
  8132  0151F0                     __ptext10:
  8133                           	opt stack 0
  8134  0151F0                     _strncmp:
  8135                           	opt stack 13
  8136                           
  8137                           ; BSR set to: 1
  8138                           ;incstack = 0
  8139  0151F0  D039               	goto	l1957
  8140  0151F2                     l9263:
  8141  0151F2  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8142  0151F6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8143  0151FA  50DF               	movf	indf2,w,c
  8144  0151FC  B4D8               	btfsc	status,2,c
  8145  0151FE  D012               	goto	u10890
  8146  015200  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8147  015204  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8148  015208  50DF               	movf	indf2,w,c
  8149  01520A  0101               	movlb	1	; () banked
  8150  01520C  6F23               	movwf	??_strncmp& (0+255),b
  8151  01520E  C11F  FFF6         	movff	strncmp@s2,tblptrl
  8152  015212  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  8153  015216                     	if	0	;tblptru may be non-zero
  8154  015216                     	endif
  8155  015216                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8156  015216  0E00               	movlw	low (__mediumconst shr (0+16))
  8157  015218  6EF8               	movwf	tblptru,c
  8158  01521A                     	endif
  8159  01521A  0008               	tblrd		*
  8160  01521C  50F5               	movf	tablat,w,c
  8161  01521E  1923               	xorwf	??_strncmp& (0+255),w,b
  8162  015220  B4D8               	btfsc	status,2,c
  8163  015222  D01C               	goto	l1959
  8164  015224                     u10890:
  8165                           
  8166                           ; BSR set to: 1
  8167  015224  C11F  FFF6         	movff	strncmp@s2,tblptrl
  8168  015228  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  8169  01522C                     	if	0	;tblptru may be non-zero
  8170  01522C                     	endif
  8171  01522C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8172  01522C  0E00               	movlw	low (__mediumconst shr (0+16))
  8173  01522E  6EF8               	movwf	tblptru,c
  8174  015230                     	endif
  8175  015230  0008               	tblrd		*
  8176  015232  50F5               	movf	tablat,w,c
  8177  015234  0101               	movlb	1	; () banked
  8178  015236  6F23               	movwf	??_strncmp& (0+255),b
  8179  015238  6B24               	clrf	(??_strncmp+1)& (0+255),b
  8180  01523A  1F23               	comf	??_strncmp& (0+255),f,b
  8181  01523C  1F24               	comf	(??_strncmp+1)& (0+255),f,b
  8182  01523E  4B23               	infsnz	??_strncmp& (0+255),f,b
  8183  015240  2B24               	incf	(??_strncmp+1)& (0+255),f,b
  8184  015242  C11D  FFD9         	movff	strncmp@s1,fsr2l
  8185  015246  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  8186  01524A  50DF               	movf	indf2,w,c
  8187  01524C  6F25               	movwf	(??_strncmp+2)& (0+255),b
  8188  01524E  5125               	movf	(??_strncmp+2)& (0+255),w,b
  8189  015250  2523               	addwf	??_strncmp& (0+255),w,b
  8190  015252  6F1D               	movwf	?_strncmp& (0+255),b
  8191  015254  0E00               	movlw	0
  8192  015256  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
  8193  015258  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  8194                           
  8195                           ; BSR set to: 1
  8196  01525A  0012               	return	
  8197  01525C                     l1959:
  8198                           
  8199                           ; BSR set to: 1
  8200                           
  8201                           ; BSR set to: 1
  8202  01525C  4B1D               	infsnz	strncmp@s1& (0+255),f,b
  8203  01525E  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
  8204  015260  4B1F               	infsnz	strncmp@s2& (0+255),f,b
  8205  015262  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
  8206  015264                     l1957:
  8207                           
  8208                           ; BSR set to: 1
  8209  015264  0101               	movlb	1	; () banked
  8210  015266  0721               	decf	strncmp@len& (0+255),f,b
  8211  015268  A0D8               	btfss	status,0,c
  8212  01526A  0722               	decf	(strncmp@len+1)& (0+255),f,b
  8213  01526C  2921               	incf	strncmp@len& (0+255),w,b
  8214  01526E  E1C1               	bnz	l9263
  8215  015270  2922               	incf	(strncmp@len+1)& (0+255),w,b
  8216  015272  A4D8               	btfss	status,2,c
  8217  015274  D7BE               	goto	l1958
  8218                           
  8219                           ; BSR set to: 1
  8220                           
  8221                           ; BSR set to: 1
  8222  015276  0E00               	movlw	0
  8223  015278  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  8224  01527A  0E00               	movlw	0
  8225  01527C  6F1D               	movwf	?_strncmp& (0+255),b
  8226  01527E  0012               	return	
  8227  015280                     __end_of_strncmp:
  8228                           	opt stack 0
  8229                           tblptru	equ	0xFF8
  8230                           tblptrh	equ	0xFF7
  8231                           tblptrl	equ	0xFF6
  8232                           tablat	equ	0xFF5
  8233                           intcon	equ	0xFF2
  8234                           postinc0	equ	0xFEE
  8235                           wreg	equ	0xFE8
  8236                           indf1	equ	0xFE7
  8237                           postdec1	equ	0xFE5
  8238                           fsr1h	equ	0xFE2
  8239                           fsr1l	equ	0xFE1
  8240                           indf2	equ	0xFDF
  8241                           postinc2	equ	0xFDE
  8242                           fsr2h	equ	0xFDA
  8243                           fsr2l	equ	0xFD9
  8244                           status	equ	0xFD8
  8245                           
  8246 ;; *************** function _strlen *****************
  8247 ;; Defined at:
  8248 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  8249 ;; Parameters:    Size  Location     Type
  8250 ;;  s               2   23[BANK1 ] PTR const unsigned char 
  8251 ;;		 -> STR_75(25), line(64), 
  8252 ;; Auto vars:     Size  Location     Type
  8253 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
  8254 ;;		 -> STR_75(25), line(64), 
  8255 ;; Return value:  Size  Location     Type
  8256 ;;                  2   23[BANK1 ] unsigned int 
  8257 ;; Registers used:
  8258 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  8259 ;; Tracked objects:
  8260 ;;		On entry : 0/0
  8261 ;;		On exit  : 0/0
  8262 ;;		Unchanged: 0/0
  8263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8264 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8265 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8266 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8267 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8268 ;;Total ram usage:        6 bytes
  8269 ;; Hardware stack levels used:    1
  8270 ;; Hardware stack levels required when called:   14
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		_terminal_ringBufferPull
  8275 ;;		_strstr
  8276 ;; This function uses a non-reentrant model
  8277 ;;
  8278                           
  8279                           	psect	text11
  8280  015BCC                     __ptext11:
  8281                           	opt stack 0
  8282  015BCC                     _strlen:
  8283                           	opt stack 15
  8284                           
  8285                           ; BSR set to: 1
  8286                           ;incstack = 0
  8287  015BCC  C117  F11B         	movff	strlen@s,strlen@cp
  8288  015BD0  C118  F11C         	movff	strlen@s+1,strlen@cp+1
  8289  015BD4  D003               	goto	l1876
  8290  015BD6  0101               	movlb	1	; () banked
  8291  015BD8  4B1B               	infsnz	strlen@cp& (0+255),f,b
  8292  015BDA  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
  8293  015BDC                     l1876:
  8294                           
  8295                           ; BSR set to: 1
  8296  015BDC  C11B  FFF6         	movff	strlen@cp,tblptrl
  8297  015BE0  C11C  FFF7         	movff	strlen@cp+1,tblptrh
  8298  015BE4  0E00               	movlw	low (__mediumconst shr (0+16))
  8299  015BE6  6EF8               	movwf	tblptru,c
  8300  015BE8  0E0D               	movlw	(high __ramtop+-1)
  8301  015BEA  64F7               	cpfsgt	tblptrh,c
  8302  015BEC  D003               	bra	u10867
  8303  015BEE  0008               	tblrd		*
  8304  015BF0  50F5               	movf	tablat,w,c
  8305  015BF2  D005               	bra	u10860
  8306  015BF4                     u10867:
  8307  015BF4  CFF6 FFE1          	movff	tblptrl,fsr1l
  8308  015BF8  CFF7 FFE2          	movff	tblptrh,fsr1h
  8309  015BFC  50E7               	movf	indf1,w,c
  8310  015BFE                     u10860:
  8311  015BFE  0900               	iorlw	0
  8312  015C00  A4D8               	btfss	status,2,c
  8313  015C02  D7E9               	goto	l1877
  8314  015C04  C117  F119         	movff	strlen@s,??_strlen
  8315  015C08  C118  F11A         	movff	strlen@s+1,??_strlen+1
  8316  015C0C  0101               	movlb	1	; () banked
  8317  015C0E  1F19               	comf	??_strlen& (0+255),f,b
  8318  015C10  1F1A               	comf	(??_strlen+1)& (0+255),f,b
  8319  015C12  4B19               	infsnz	??_strlen& (0+255),f,b
  8320  015C14  2B1A               	incf	(??_strlen+1)& (0+255),f,b
  8321  015C16  511B               	movf	strlen@cp& (0+255),w,b
  8322  015C18  2519               	addwf	??_strlen& (0+255),w,b
  8323  015C1A  6F17               	movwf	?_strlen& (0+255),b
  8324  015C1C  511C               	movf	(strlen@cp+1)& (0+255),w,b
  8325  015C1E  211A               	addwfc	(??_strlen+1)& (0+255),w,b
  8326  015C20  6F18               	movwf	(?_strlen+1)& (0+255),b
  8327  015C22  0012               	return	
  8328  015C24                     __end_of_strlen:
  8329                           	opt stack 0
  8330                           tblptru	equ	0xFF8
  8331                           tblptrh	equ	0xFF7
  8332                           tblptrl	equ	0xFF6
  8333                           tablat	equ	0xFF5
  8334                           intcon	equ	0xFF2
  8335                           postinc0	equ	0xFEE
  8336                           wreg	equ	0xFE8
  8337                           indf1	equ	0xFE7
  8338                           postdec1	equ	0xFE5
  8339                           fsr1h	equ	0xFE2
  8340                           fsr1l	equ	0xFE1
  8341                           indf2	equ	0xFDF
  8342                           postinc2	equ	0xFDE
  8343                           fsr2h	equ	0xFDA
  8344                           fsr2l	equ	0xFD9
  8345                           status	equ	0xFD8
  8346                           
  8347 ;; *************** function _strchr *****************
  8348 ;; Defined at:
  8349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
  8352 ;;		 -> NULL(0), line(64), 
  8353 ;;  chr             2   25[BANK1 ] int 
  8354 ;; Auto vars:     Size  Location     Type
  8355 ;;		None
  8356 ;; Return value:  Size  Location     Type
  8357 ;;                  2   23[BANK1 ] PTR unsigned char 
  8358 ;; Registers used:
  8359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8360 ;; Tracked objects:
  8361 ;;		On entry : 0/0
  8362 ;;		On exit  : 0/0
  8363 ;;		Unchanged: 0/0
  8364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8365 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8367 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8368 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8369 ;;Total ram usage:        5 bytes
  8370 ;; Hardware stack levels used:    1
  8371 ;; Hardware stack levels required when called:   14
  8372 ;; This function calls:
  8373 ;;		Nothing
  8374 ;; This function is called by:
  8375 ;;		_strstr
  8376 ;; This function uses a non-reentrant model
  8377 ;;
  8378                           
  8379                           	psect	text12
  8380  015F3E                     __ptext12:
  8381                           	opt stack 0
  8382  015F3E                     _strchr:
  8383                           	opt stack 13
  8384                           
  8385                           ; BSR set to: 1
  8386                           ;incstack = 0
  8387  015F3E  C117  FFD9         	movff	strchr@ptr,fsr2l
  8388  015F42  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8389  015F46  0101               	movlb	1	; () banked
  8390  015F48  5119               	movf	strchr@chr& (0+255),w,b
  8391  015F4A  18DE               	xorwf	postinc2,w,c
  8392  015F4C  A4D8               	btfss	status,2,c
  8393  015F4E  D005               	goto	l1952
  8394                           
  8395                           ; BSR set to: 1
  8396  015F50  C117  F117         	movff	strchr@ptr,?_strchr
  8397  015F54  C118  F118         	movff	strchr@ptr+1,?_strchr+1
  8398                           
  8399                           ; BSR set to: 1
  8400  015F58  0012               	return	
  8401  015F5A                     l1952:
  8402                           
  8403                           ; BSR set to: 1
  8404                           
  8405                           ; BSR set to: 1
  8406  015F5A  C117  FFD9         	movff	strchr@ptr,fsr2l
  8407  015F5E  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8408  015F62  4B17               	infsnz	strchr@ptr& (0+255),f,b
  8409  015F64  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
  8410  015F66  50DF               	movf	indf2,w,c
  8411  015F68  A4D8               	btfss	status,2,c
  8412  015F6A  D7E9               	goto	_strchr
  8413                           
  8414                           ; BSR set to: 1
  8415                           
  8416                           ; BSR set to: 1
  8417  015F6C  0E00               	movlw	0
  8418  015F6E  6F17               	movwf	?_strchr& (0+255),b
  8419  015F70  0E00               	movlw	0
  8420  015F72  6F18               	movwf	(?_strchr+1)& (0+255),b
  8421  015F74  0012               	return	
  8422  015F76                     __end_of_strchr:
  8423                           	opt stack 0
  8424                           tblptru	equ	0xFF8
  8425                           tblptrh	equ	0xFF7
  8426                           tblptrl	equ	0xFF6
  8427                           tablat	equ	0xFF5
  8428                           intcon	equ	0xFF2
  8429                           postinc0	equ	0xFEE
  8430                           wreg	equ	0xFE8
  8431                           indf1	equ	0xFE7
  8432                           postdec1	equ	0xFE5
  8433                           fsr1h	equ	0xFE2
  8434                           fsr1l	equ	0xFE1
  8435                           indf2	equ	0xFDF
  8436                           postinc2	equ	0xFDE
  8437                           fsr2h	equ	0xFDA
  8438                           fsr2l	equ	0xFD9
  8439                           status	equ	0xFD8
  8440                           
  8441 ;; *************** function _strcmp *****************
  8442 ;; Defined at:
  8443 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  8444 ;; Parameters:    Size  Location     Type
  8445 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
  8446 ;;		 -> line(64), 
  8447 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
  8448 ;;		 -> STR_84(5), STR_82(9), STR_73(13), STR_71(12), 
  8449 ;;		 -> STR_69(16), STR_67(15), STR_65(21), STR_63(21), 
  8450 ;;		 -> STR_61(26), STR_59(14), STR_57(13), STR_55(18), 
  8451 ;;		 -> STR_53(15), STR_51(16), STR_48(4), STR_47(6), 
  8452 ;;		 -> STR_44(6), STR_41(6), 
  8453 ;; Auto vars:     Size  Location     Type
  8454 ;;  r               1   28[BANK1 ] char 
  8455 ;; Return value:  Size  Location     Type
  8456 ;;                  2   23[BANK1 ] int 
  8457 ;; Registers used:
  8458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8459 ;; Tracked objects:
  8460 ;;		On entry : 0/0
  8461 ;;		On exit  : 0/0
  8462 ;;		Unchanged: 0/0
  8463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8464 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8465 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8466 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8467 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8468 ;;Total ram usage:        6 bytes
  8469 ;; Hardware stack levels used:    1
  8470 ;; Hardware stack levels required when called:   14
  8471 ;; This function calls:
  8472 ;;		Nothing
  8473 ;; This function is called by:
  8474 ;;		_ringBufferLUT
  8475 ;; This function uses a non-reentrant model
  8476 ;;
  8477                           
  8478                           	psect	text13
  8479  015C7A                     __ptext13:
  8480                           	opt stack 0
  8481  015C7A                     _strcmp:
  8482                           	opt stack 14
  8483                           
  8484                           ; BSR set to: 1
  8485                           ;incstack = 0
  8486  015C7A  D005               	goto	l1868
  8487  015C7C  0101               	movlb	1	; () banked
  8488  015C7E  4B17               	infsnz	strcmp@s1& (0+255),f,b
  8489  015C80  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
  8490  015C82  4B19               	infsnz	strcmp@s2& (0+255),f,b
  8491  015C84  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
  8492  015C86                     l1868:
  8493                           
  8494                           ; BSR set to: 1
  8495  015C86  C117  FFD9         	movff	strcmp@s1,fsr2l
  8496  015C8A  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8497  015C8E  50DF               	movf	indf2,w,c
  8498  015C90  0101               	movlb	1	; () banked
  8499  015C92  6F1B               	movwf	??_strcmp& (0+255),b
  8500  015C94  C119  FFF6         	movff	strcmp@s2,tblptrl
  8501  015C98  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
  8502  015C9C                     	if	0	;tblptru may be non-zero
  8503  015C9C                     	endif
  8504  015C9C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8505  015C9C  0E00               	movlw	low (__mediumconst shr (0+16))
  8506  015C9E  6EF8               	movwf	tblptru,c
  8507  015CA0                     	endif
  8508  015CA0  0008               	tblrd		*
  8509  015CA2  50F5               	movf	tablat,w,c
  8510  015CA4  0800               	sublw	0
  8511  015CA6  251B               	addwf	??_strcmp& (0+255),w,b
  8512  015CA8  6F1C               	movwf	strcmp@r& (0+255),b
  8513  015CAA  511C               	movf	strcmp@r& (0+255),w,b
  8514  015CAC  A4D8               	btfss	status,2,c
  8515  015CAE  D007               	goto	u11090
  8516                           
  8517                           ; BSR set to: 1
  8518  015CB0  C117  FFD9         	movff	strcmp@s1,fsr2l
  8519  015CB4  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8520  015CB8  50DF               	movf	indf2,w,c
  8521  015CBA  A4D8               	btfss	status,2,c
  8522  015CBC  D7DF               	goto	l1869
  8523  015CBE                     u11090:
  8524                           
  8525                           ; BSR set to: 1
  8526                           
  8527                           ; BSR set to: 1
  8528                           
  8529                           ; BSR set to: 1
  8530  015CBE  511C               	movf	strcmp@r& (0+255),w,b
  8531  015CC0  6F17               	movwf	?_strcmp& (0+255),b
  8532  015CC2  6B18               	clrf	(?_strcmp+1)& (0+255),b
  8533  015CC4  BF17               	btfsc	?_strcmp& (0+255),7,b
  8534  015CC6  0718               	decf	(?_strcmp+1)& (0+255),f,b
  8535  015CC8  0012               	return	
  8536  015CCA                     __end_of_strcmp:
  8537                           	opt stack 0
  8538                           tblptru	equ	0xFF8
  8539                           tblptrh	equ	0xFF7
  8540                           tblptrl	equ	0xFF6
  8541                           tablat	equ	0xFF5
  8542                           intcon	equ	0xFF2
  8543                           postinc0	equ	0xFEE
  8544                           wreg	equ	0xFE8
  8545                           indf1	equ	0xFE7
  8546                           postdec1	equ	0xFE5
  8547                           fsr1h	equ	0xFE2
  8548                           fsr1l	equ	0xFE1
  8549                           indf2	equ	0xFDF
  8550                           postinc2	equ	0xFDE
  8551                           fsr2h	equ	0xFDA
  8552                           fsr2l	equ	0xFD9
  8553                           status	equ	0xFD8
  8554                           
  8555 ;; *************** function _atoi *****************
  8556 ;; Defined at:
  8557 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  8558 ;; Parameters:    Size  Location     Type
  8559 ;;  s               2   43[BANK1 ] PTR const unsigned char 
  8560 ;;		 -> ringBufferLUT@arg_buff(3), 
  8561 ;; Auto vars:     Size  Location     Type
  8562 ;;  a               2   48[BANK1 ] int 
  8563 ;;  sign            1   47[BANK1 ] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  2   43[BANK1 ] int 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8573 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8574 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8575 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8576 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8577 ;;Total ram usage:        7 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:   15
  8580 ;; This function calls:
  8581 ;;		___wmul
  8582 ;;		_isdigit
  8583 ;; This function is called by:
  8584 ;;		_ringBufferLUT
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           	psect	text14
  8589  014D10                     __ptext14:
  8590                           	opt stack 0
  8591  014D10                     _atoi:
  8592                           	opt stack 13
  8593                           
  8594                           ; BSR set to: 1
  8595                           ;incstack = 0
  8596  014D10  D003               	goto	l1381
  8597  014D12  0101               	movlb	1	; () banked
  8598  014D14  4B2B               	infsnz	atoi@s& (0+255),f,b
  8599  014D16  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8600  014D18                     l1381:
  8601                           
  8602                           ; BSR set to: 1
  8603  014D18  C12B  FFD9         	movff	atoi@s,fsr2l
  8604  014D1C  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8605  014D20  0E20               	movlw	32
  8606  014D22  18DE               	xorwf	postinc2,w,c
  8607  014D24  B4D8               	btfsc	status,2,c
  8608  014D26  D7F5               	goto	l1382
  8609  014D28  C12B  FFD9         	movff	atoi@s,fsr2l
  8610  014D2C  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8611  014D30  0E09               	movlw	9
  8612  014D32  18DE               	xorwf	postinc2,w,c
  8613  014D34  B4D8               	btfsc	status,2,c
  8614  014D36  D7ED               	goto	l1382
  8615  014D38  0E00               	movlw	0
  8616  014D3A  0101               	movlb	1	; () banked
  8617  014D3C  6F31               	movwf	(atoi@a+1)& (0+255),b
  8618  014D3E  0E00               	movlw	0
  8619  014D40  6F30               	movwf	atoi@a& (0+255),b
  8620  014D42  0E00               	movlw	0
  8621  014D44  6F2F               	movwf	atoi@sign& (0+255),b
  8622                           
  8623                           ; BSR set to: 1
  8624  014D46  C12B  FFD9         	movff	atoi@s,fsr2l
  8625  014D4A  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8626  014D4E  0E2D               	movlw	45
  8627  014D50  18DE               	xorwf	postinc2,w,c
  8628  014D52  A4D8               	btfss	status,2,c
  8629  014D54  D002               	goto	l1384
  8630                           
  8631                           ; BSR set to: 1
  8632  014D56  2B2F               	incf	atoi@sign& (0+255),f,b
  8633  014D58  D026               	goto	l9491
  8634  014D5A                     l1384:
  8635                           
  8636                           ; BSR set to: 1
  8637                           
  8638                           ; BSR set to: 1
  8639  014D5A  C12B  FFD9         	movff	atoi@s,fsr2l
  8640  014D5E  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8641  014D62  0E2B               	movlw	43
  8642  014D64  18DE               	xorwf	postinc2,w,c
  8643  014D66  A4D8               	btfss	status,2,c
  8644  014D68  D020               	goto	l1387
  8645  014D6A  D01D               	goto	l9491
  8646  014D6C                     
  8647                           ; BSR set to: 1
  8648  014D6C  C130  F125         	movff	atoi@a,___wmul@multiplier
  8649  014D70  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
  8650  014D74  0E00               	movlw	0
  8651  014D76  0101               	movlb	1	; () banked
  8652  014D78  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8653  014D7A  0E0A               	movlw	10
  8654  014D7C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  8655  014D7E  EC67  F0B0         	call	___wmul	;wreg free
  8656  014D82  C12B  FFD9         	movff	atoi@s,fsr2l
  8657  014D86  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8658  014D8A  50DF               	movf	indf2,w,c
  8659  014D8C  0101               	movlb	1	; () banked
  8660  014D8E  6F2D               	movwf	??_atoi& (0+255),b
  8661  014D90  6B2E               	clrf	(??_atoi+1)& (0+255),b
  8662  014D92  5125               	movf	?___wmul& (0+255),w,b
  8663  014D94  272D               	addwf	??_atoi& (0+255),f,b
  8664  014D96  5126               	movf	(?___wmul+1)& (0+255),w,b
  8665  014D98  232E               	addwfc	(??_atoi+1)& (0+255),f,b
  8666  014D9A  0ED0               	movlw	208
  8667  014D9C  252D               	addwf	??_atoi& (0+255),w,b
  8668  014D9E  6F30               	movwf	atoi@a& (0+255),b
  8669  014DA0  0EFF               	movlw	255
  8670  014DA2  212E               	addwfc	(??_atoi+1)& (0+255),w,b
  8671  014DA4  6F31               	movwf	(atoi@a+1)& (0+255),b
  8672  014DA6                     l9491:
  8673                           
  8674                           ; BSR set to: 1
  8675  014DA6  4B2B               	infsnz	atoi@s& (0+255),f,b
  8676  014DA8  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8677  014DAA                     l1387:
  8678                           
  8679                           ; BSR set to: 1
  8680                           
  8681                           ; BSR set to: 1
  8682  014DAA  C12B  FFD9         	movff	atoi@s,fsr2l
  8683  014DAE  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8684  014DB2  50DF               	movf	indf2,w,c
  8685  014DB4  EC00  F0B1         	call	_isdigit
  8686  014DB8  B0D8               	btfsc	status,0,c
  8687  014DBA  D7D8               	goto	l1388
  8688  014DBC  0101               	movlb	1	; () banked
  8689  014DBE  512F               	movf	atoi@sign& (0+255),w,b
  8690  014DC0  B4D8               	btfsc	status,2,c
  8691  014DC2  D00D               	goto	l1390
  8692                           
  8693                           ; BSR set to: 1
  8694  014DC4  C130  F12D         	movff	atoi@a,??_atoi
  8695  014DC8  C131  F12E         	movff	atoi@a+1,??_atoi+1
  8696  014DCC  1F2D               	comf	??_atoi& (0+255),f,b
  8697  014DCE  1F2E               	comf	(??_atoi+1)& (0+255),f,b
  8698  014DD0  4B2D               	infsnz	??_atoi& (0+255),f,b
  8699  014DD2  2B2E               	incf	(??_atoi+1)& (0+255),f,b
  8700  014DD4  C12D  F12B         	movff	??_atoi,?_atoi
  8701  014DD8  C12E  F12C         	movff	??_atoi+1,?_atoi+1
  8702  014DDC  0012               	return	
  8703  014DDE                     l1390:
  8704                           
  8705                           ; BSR set to: 1
  8706  014DDE  C130  F12B         	movff	atoi@a,?_atoi
  8707  014DE2  C131  F12C         	movff	atoi@a+1,?_atoi+1
  8708                           
  8709                           ; BSR set to: 1
  8710  014DE6  0012               	return		;funcret
  8711  014DE8                     __end_of_atoi:
  8712                           	opt stack 0
  8713                           tblptru	equ	0xFF8
  8714                           tblptrh	equ	0xFF7
  8715                           tblptrl	equ	0xFF6
  8716                           tablat	equ	0xFF5
  8717                           intcon	equ	0xFF2
  8718                           postinc0	equ	0xFEE
  8719                           wreg	equ	0xFE8
  8720                           indf1	equ	0xFE7
  8721                           postdec1	equ	0xFE5
  8722                           fsr1h	equ	0xFE2
  8723                           fsr1l	equ	0xFE1
  8724                           indf2	equ	0xFDF
  8725                           postinc2	equ	0xFDE
  8726                           fsr2h	equ	0xFDA
  8727                           fsr2l	equ	0xFD9
  8728                           status	equ	0xFD8
  8729                           
  8730 ;; *************** function ___ftdiv *****************
  8731 ;; Defined at:
  8732 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;  f1              3   55[BANK1 ] float 
  8735 ;;  f2              3   58[BANK1 ] float 
  8736 ;; Auto vars:     Size  Location     Type
  8737 ;;  f3              3   65[BANK1 ] float 
  8738 ;;  sign            1   69[BANK1 ] unsigned char 
  8739 ;;  exp             1   68[BANK1 ] unsigned char 
  8740 ;;  cntr            1   64[BANK1 ] unsigned char 
  8741 ;; Return value:  Size  Location     Type
  8742 ;;                  3   55[BANK1 ] float 
  8743 ;; Registers used:
  8744 ;;		wreg, status,2, status,0, cstack
  8745 ;; Tracked objects:
  8746 ;;		On entry : 0/0
  8747 ;;		On exit  : 0/0
  8748 ;;		Unchanged: 0/0
  8749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8750 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8754 ;;Total ram usage:       15 bytes
  8755 ;; Hardware stack levels used:    1
  8756 ;; Hardware stack levels required when called:   15
  8757 ;; This function calls:
  8758 ;;		___ftpack
  8759 ;; This function is called by:
  8760 ;;		_ringBufferLUT
  8761 ;; This function uses a non-reentrant model
  8762 ;;
  8763                           
  8764                           	psect	text15
  8765  01498A                     __ptext15:
  8766                           	opt stack 0
  8767  01498A                     ___ftdiv:
  8768                           	opt stack 13
  8769                           
  8770                           ; BSR set to: 1
  8771                           ;incstack = 0
  8772  01498A  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
  8773  01498E  0101               	movlb	1	; () banked
  8774  014990  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8775  014992  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8776  014994  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8777  014996  373D               	rlcf	??___ftdiv& (0+255),f,b
  8778  014998  E301               	bnc	u11191
  8779  01499A  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8780  01499C                     u11191:
  8781  01499C  513D               	movf	??___ftdiv& (0+255),w,b
  8782  01499E  6F44               	movwf	___ftdiv@exp& (0+255),b
  8783  0149A0  5144               	movf	___ftdiv@exp& (0+255),w,b
  8784  0149A2  A4D8               	btfss	status,2,c
  8785  0149A4  D007               	goto	l1540
  8786                           
  8787                           ; BSR set to: 1
  8788  0149A6  0E00               	movlw	0
  8789  0149A8  6F37               	movwf	?___ftdiv& (0+255),b
  8790  0149AA  0E00               	movlw	0
  8791  0149AC  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8792  0149AE  0E00               	movlw	0
  8793  0149B0  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8794                           
  8795                           ; BSR set to: 1
  8796  0149B2  0012               	return	
  8797  0149B4                     l1540:
  8798                           
  8799                           ; BSR set to: 1
  8800                           
  8801                           ; BSR set to: 1
  8802  0149B4  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
  8803  0149B8  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8804  0149BA  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8805  0149BC  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8806  0149BE  373D               	rlcf	??___ftdiv& (0+255),f,b
  8807  0149C0  E301               	bnc	u11211
  8808  0149C2  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8809  0149C4                     u11211:
  8810  0149C4  513D               	movf	??___ftdiv& (0+255),w,b
  8811  0149C6  6F45               	movwf	___ftdiv@sign& (0+255),b
  8812  0149C8  5145               	movf	___ftdiv@sign& (0+255),w,b
  8813  0149CA  A4D8               	btfss	status,2,c
  8814  0149CC  D007               	goto	l1542
  8815                           
  8816                           ; BSR set to: 1
  8817  0149CE  0E00               	movlw	0
  8818  0149D0  6F37               	movwf	?___ftdiv& (0+255),b
  8819  0149D2  0E00               	movlw	0
  8820  0149D4  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8821  0149D6  0E00               	movlw	0
  8822  0149D8  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8823                           
  8824                           ; BSR set to: 1
  8825  0149DA  0012               	return	
  8826  0149DC                     l1542:
  8827                           
  8828                           ; BSR set to: 1
  8829                           
  8830                           ; BSR set to: 1
  8831  0149DC  0E00               	movlw	0
  8832  0149DE  6F41               	movwf	___ftdiv@f3& (0+255),b
  8833  0149E0  0E00               	movlw	0
  8834  0149E2  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
  8835  0149E4  0E00               	movlw	0
  8836  0149E6  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
  8837                           
  8838                           ; BSR set to: 1
  8839  0149E8  5145               	movf	___ftdiv@sign& (0+255),w,b
  8840  0149EA  0F89               	addlw	137
  8841  0149EC  5F44               	subwf	___ftdiv@exp& (0+255),f,b
  8842                           
  8843                           ; BSR set to: 1
  8844  0149EE  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
  8845                           
  8846                           ; BSR set to: 1
  8847  0149F2  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8848  0149F4  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
  8849                           
  8850                           ; BSR set to: 1
  8851  0149F6  0E80               	movlw	128
  8852  0149F8  1745               	andwf	___ftdiv@sign& (0+255),f,b
  8853                           
  8854                           ; BSR set to: 1
  8855  0149FA  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8856                           
  8857                           ; BSR set to: 1
  8858  0149FC  0EFF               	movlw	255
  8859  0149FE  1737               	andwf	___ftdiv@f1& (0+255),f,b
  8860  014A00  0EFF               	movlw	255
  8861  014A02  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8862  014A04  0E00               	movlw	0
  8863  014A06  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 1
  8866  014A08  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8867                           
  8868                           ; BSR set to: 1
  8869  014A0A  0EFF               	movlw	255
  8870  014A0C  173A               	andwf	___ftdiv@f2& (0+255),f,b
  8871  014A0E  0EFF               	movlw	255
  8872  014A10  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8873  014A12  0E00               	movlw	0
  8874  014A14  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8875                           
  8876                           ; BSR set to: 1
  8877  014A16  0E18               	movlw	24
  8878  014A18  6F40               	movwf	___ftdiv@cntr& (0+255),b
  8879  014A1A                     
  8880                           ; BSR set to: 1
  8881                           
  8882                           ; BSR set to: 1
  8883  014A1A  90D8               	bcf	status,0,c
  8884  014A1C  3741               	rlcf	___ftdiv@f3& (0+255),f,b
  8885  014A1E  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8886  014A20  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8887                           
  8888                           ; BSR set to: 1
  8889  014A22  513A               	movf	___ftdiv@f2& (0+255),w,b
  8890  014A24  5D37               	subwf	___ftdiv@f1& (0+255),w,b
  8891  014A26  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8892  014A28  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8893  014A2A  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8894  014A2C  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8895  014A2E  A0D8               	btfss	status,0,c
  8896  014A30  D007               	goto	l1544
  8897                           
  8898                           ; BSR set to: 1
  8899  014A32  513A               	movf	___ftdiv@f2& (0+255),w,b
  8900  014A34  5F37               	subwf	___ftdiv@f1& (0+255),f,b
  8901  014A36  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8902  014A38  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8903  014A3A  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8904  014A3C  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8905                           
  8906                           ; BSR set to: 1
  8907  014A3E  8141               	bsf	___ftdiv@f3& (0+255),0,b
  8908  014A40                     l1544:
  8909                           
  8910                           ; BSR set to: 1
  8911  014A40  90D8               	bcf	status,0,c
  8912  014A42  3737               	rlcf	___ftdiv@f1& (0+255),f,b
  8913  014A44  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8914  014A46  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8915                           
  8916                           ; BSR set to: 1
  8917  014A48  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
  8918  014A4A  D7E7               	goto	l1543
  8919                           
  8920                           ; BSR set to: 1
  8921                           
  8922                           ; BSR set to: 1
  8923  014A4C  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
  8924  014A50  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8925  014A54  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8926  014A58  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
  8927  014A5C  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
  8928  014A60  EC5A  F0A7         	call	___ftpack	;wreg free
  8929  014A64  C117  F137         	movff	?___ftpack,?___ftdiv
  8930  014A68  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
  8931  014A6C  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
  8932  014A70  0012               	return	
  8933  014A72                     __end_of___ftdiv:
  8934                           	opt stack 0
  8935                           tblptru	equ	0xFF8
  8936                           tblptrh	equ	0xFF7
  8937                           tblptrl	equ	0xFF6
  8938                           tablat	equ	0xFF5
  8939                           intcon	equ	0xFF2
  8940                           postinc0	equ	0xFEE
  8941                           wreg	equ	0xFE8
  8942                           indf1	equ	0xFE7
  8943                           postdec1	equ	0xFE5
  8944                           fsr1h	equ	0xFE2
  8945                           fsr1l	equ	0xFE1
  8946                           indf2	equ	0xFDF
  8947                           postinc2	equ	0xFDE
  8948                           fsr2h	equ	0xFDA
  8949                           fsr2l	equ	0xFD9
  8950                           status	equ	0xFD8
  8951                           
  8952 ;; *************** function ___awtoft *****************
  8953 ;; Defined at:
  8954 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  c               2   31[BANK1 ] int 
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;  sign            1   34[BANK1 ] unsigned char 
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  3   31[BANK1 ] float 
  8961 ;; Registers used:
  8962 ;;		wreg, status,2, status,0, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8968 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8969 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8971 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8972 ;;Total ram usage:        4 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:   15
  8975 ;; This function calls:
  8976 ;;		___ftpack
  8977 ;; This function is called by:
  8978 ;;		_ringBufferLUT
  8979 ;; This function uses a non-reentrant model
  8980 ;;
  8981                           
  8982                           	psect	text16
  8983  015F04                     __ptext16:
  8984                           	opt stack 0
  8985  015F04                     ___awtoft:
  8986                           	opt stack 13
  8987                           
  8988                           ;incstack = 0
  8989  015F04  0E00               	movlw	0
  8990  015F06  0101               	movlb	1	; () banked
  8991  015F08  6F22               	movwf	___awtoft@sign& (0+255),b
  8992                           
  8993                           ; BSR set to: 1
  8994  015F0A  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
  8995  015F0C  D006               	goto	l1428
  8996                           
  8997                           ; BSR set to: 1
  8998  015F0E  6D1F               	negf	___awtoft@c& (0+255),b
  8999  015F10  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
  9000  015F12  B0D8               	btfsc	status,0,c
  9001  015F14  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
  9002                           
  9003                           ; BSR set to: 1
  9004  015F16  0E01               	movlw	1
  9005  015F18  6F22               	movwf	___awtoft@sign& (0+255),b
  9006  015F1A                     l1428:
  9007                           
  9008                           ; BSR set to: 1
  9009                           
  9010                           ; BSR set to: 1
  9011  015F1A  C11F  F117         	movff	___awtoft@c,___ftpack@arg
  9012  015F1E  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
  9013  015F22  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
  9014  015F24  0E8E               	movlw	142
  9015  015F26  6F1A               	movwf	___ftpack@exp& (0+255),b
  9016  015F28  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
  9017  015F2C  EC5A  F0A7         	call	___ftpack	;wreg free
  9018  015F30  C117  F11F         	movff	?___ftpack,?___awtoft
  9019  015F34  C118  F120         	movff	?___ftpack+1,?___awtoft+1
  9020  015F38  C119  F121         	movff	?___ftpack+2,?___awtoft+2
  9021  015F3C  0012               	return	
  9022  015F3E                     __end_of___awtoft:
  9023                           	opt stack 0
  9024                           tblptru	equ	0xFF8
  9025                           tblptrh	equ	0xFF7
  9026                           tblptrl	equ	0xFF6
  9027                           tablat	equ	0xFF5
  9028                           intcon	equ	0xFF2
  9029                           postinc0	equ	0xFEE
  9030                           wreg	equ	0xFE8
  9031                           indf1	equ	0xFE7
  9032                           postdec1	equ	0xFE5
  9033                           fsr1h	equ	0xFE2
  9034                           fsr1l	equ	0xFE1
  9035                           indf2	equ	0xFDF
  9036                           postinc2	equ	0xFDE
  9037                           fsr2h	equ	0xFDA
  9038                           fsr2l	equ	0xFD9
  9039                           status	equ	0xFD8
  9040                           
  9041 ;; *************** function _EUSART2_Read *****************
  9042 ;; Defined at:
  9043 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  readValue       1   23[BANK1 ] unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      unsigned char 
  9050 ;; Registers used:
  9051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9058 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;Total ram usage:        1 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:   14
  9064 ;; This function calls:
  9065 ;;		Nothing
  9066 ;; This function is called by:
  9067 ;;		_terminal_ringBufferPull
  9068 ;;		_getch
  9069 ;; This function uses a non-reentrant model
  9070 ;;
  9071                           
  9072                           	psect	text17
  9073  015E3C                     __ptext17:
  9074                           	opt stack 0
  9075  015E3C                     _EUSART2_Read:
  9076                           	opt stack 15
  9077                           
  9078                           ;eusart2.c: 132: uint8_t readValue = 0;
  9079                           
  9080                           ;incstack = 0
  9081  015E3C  0E00               	movlw	0
  9082  015E3E  0101               	movlb	1	; () banked
  9083  015E40  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  9084                           
  9085                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  9086  015E42  D001               	goto	l367
  9087  015E44                     l368:
  9088                           
  9089                           ; BSR set to: 1
  9090  015E44  0004               	clrwdt		;# 
  9091  015E46                     l367:
  9092  015E46  0101               	movlb	1	; () banked
  9093  015E48  51D9               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  9094  015E4A  B4D8               	btfsc	status,2,c
  9095  015E4C  D7FB               	goto	l368
  9096                           
  9097                           ; BSR set to: 1
  9098                           ;eusart2.c: 137: }
  9099                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  9100                           
  9101                           ; BSR set to: 1
  9102  015E4E  51DA               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  9103  015E50  0D01               	mullw	1
  9104  015E52  0E80               	movlw	low _eusart2RxBuffer
  9105  015E54  24F3               	addwf	prodl,w,c
  9106  015E56  6ED9               	movwf	fsr2l,c
  9107  015E58  0E02               	movlw	high _eusart2RxBuffer
  9108  015E5A  20F4               	addwfc	prodh,w,c
  9109  015E5C  6EDA               	movwf	fsr2h,c
  9110  015E5E  50DF               	movf	indf2,w,c
  9111  015E60  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  9112                           
  9113                           ; BSR set to: 1
  9114  015E62  2BDA               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  9115                           
  9116                           ; BSR set to: 1
  9117                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  9118  015E64  0E3F               	movlw	63
  9119  015E66  65DA               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  9120  015E68  D002               	goto	l370
  9121                           
  9122                           ; BSR set to: 1
  9123                           ;eusart2.c: 141: {
  9124                           ;eusart2.c: 142: eusart2RxTail = 0;
  9125  015E6A  0E00               	movlw	0
  9126  015E6C  6FDA               	movwf	_eusart2RxTail& (0+255),b	;volatile
  9127  015E6E                     l370:
  9128                           
  9129                           ; BSR set to: 1
  9130                           ;eusart2.c: 143: }
  9131                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  9132                           
  9133                           ; BSR set to: 1
  9134  015E6E  010E               	movlb	14	; () banked
  9135  015E70  9F2C               	bcf	44,7,b	;volatile
  9136                           
  9137                           ; BSR set to: 14
  9138                           ;eusart2.c: 145: eusart2RxCount--;
  9139  015E72  0101               	movlb	1	; () banked
  9140  015E74  07D9               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  9141                           
  9142                           ; BSR set to: 1
  9143                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  9144  015E76  010E               	movlb	14	; () banked
  9145  015E78  8F2C               	bsf	44,7,b	;volatile
  9146                           
  9147                           ; BSR set to: 14
  9148                           ;eusart2.c: 148: return readValue;
  9149  015E7A  0101               	movlb	1	; () banked
  9150  015E7C  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
  9151  015E7E  0012               	return	
  9152  015E80                     __end_of_EUSART2_Read:
  9153                           	opt stack 0
  9154                           tblptru	equ	0xFF8
  9155                           tblptrh	equ	0xFF7
  9156                           tblptrl	equ	0xFF6
  9157                           tablat	equ	0xFF5
  9158                           prodh	equ	0xFF4
  9159                           prodl	equ	0xFF3
  9160                           intcon	equ	0xFF2
  9161                           postinc0	equ	0xFEE
  9162                           wreg	equ	0xFE8
  9163                           indf1	equ	0xFE7
  9164                           postdec1	equ	0xFE5
  9165                           fsr1h	equ	0xFE2
  9166                           fsr1l	equ	0xFE1
  9167                           indf2	equ	0xFDF
  9168                           postinc2	equ	0xFDE
  9169                           fsr2h	equ	0xFDA
  9170                           fsr2l	equ	0xFD9
  9171                           status	equ	0xFD8
  9172                           
  9173 ;; *************** function _terminal_clearTerminal *****************
  9174 ;; Defined at:
  9175 ;;		line 80 in file "ring_buffer_interface.c"
  9176 ;; Parameters:    Size  Location     Type
  9177 ;;		None
  9178 ;; Auto vars:     Size  Location     Type
  9179 ;;		None
  9180 ;; Return value:  Size  Location     Type
  9181 ;;                  1    wreg      void 
  9182 ;; Registers used:
  9183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9184 ;; Tracked objects:
  9185 ;;		On entry : 0/0
  9186 ;;		On exit  : 0/0
  9187 ;;		Unchanged: 0/0
  9188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9193 ;;Total ram usage:        0 bytes
  9194 ;; Hardware stack levels used:    1
  9195 ;; Hardware stack levels required when called:   18
  9196 ;; This function calls:
  9197 ;;		_printf
  9198 ;; This function is called by:
  9199 ;;		_main
  9200 ;; This function uses a non-reentrant model
  9201 ;;
  9202                           
  9203                           	psect	text18
  9204  0162EC                     __ptext18:
  9205                           	opt stack 0
  9206  0162EC                     _terminal_clearTerminal:
  9207                           	opt stack 12
  9208                           
  9209                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  9210                           
  9211                           ; BSR set to: 1
  9212                           ;incstack = 0
  9213  0162EC  0EAC               	movlw	low STR_2
  9214  0162EE  0101               	movlb	1	; () banked
  9215  0162F0  6F64               	movwf	printf@f& (0+255),b
  9216  0162F2  0EFF               	movlw	high STR_2
  9217  0162F4  6F65               	movwf	(printf@f+1)& (0+255),b
  9218  0162F6  EC00  F080         	call	_printf	;wreg free
  9219  0162FA  0012               	return		;funcret
  9220  0162FC                     __end_of_terminal_clearTerminal:
  9221                           	opt stack 0
  9222                           tblptru	equ	0xFF8
  9223                           tblptrh	equ	0xFF7
  9224                           tblptrl	equ	0xFF6
  9225                           tablat	equ	0xFF5
  9226                           prodh	equ	0xFF4
  9227                           prodl	equ	0xFF3
  9228                           intcon	equ	0xFF2
  9229                           postinc0	equ	0xFEE
  9230                           wreg	equ	0xFE8
  9231                           indf1	equ	0xFE7
  9232                           postdec1	equ	0xFE5
  9233                           fsr1h	equ	0xFE2
  9234                           fsr1l	equ	0xFE1
  9235                           indf2	equ	0xFDF
  9236                           postinc2	equ	0xFDE
  9237                           fsr2h	equ	0xFDA
  9238                           fsr2l	equ	0xFD9
  9239                           status	equ	0xFD8
  9240                           
  9241 ;; *************** function _printf *****************
  9242 ;; Defined at:
  9243 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9244 ;; Parameters:    Size  Location     Type
  9245 ;;  f               2  100[BANK1 ] PTR const unsigned char 
  9246 ;;		 -> STR_90(30), STR_89(23), STR_88(40), STR_87(30), 
  9247 ;;		 -> STR_86(33), STR_85(1220), STR_83(58), STR_81(71), 
  9248 ;;		 -> STR_80(63), STR_79(37), STR_78(46), STR_77(102), 
  9249 ;;		 -> STR_76(86), STR_74(25), STR_72(42), STR_70(41), 
  9250 ;;		 -> STR_68(40), STR_66(34), STR_64(34), STR_62(32), 
  9251 ;;		 -> STR_60(37), STR_58(56), STR_56(34), STR_54(34), 
  9252 ;;		 -> STR_52(35), STR_50(47), STR_49(17), STR_46(4), 
  9253 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
  9254 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
  9255 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
  9256 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
  9257 ;; Auto vars:     Size  Location     Type
  9258 ;;  idx             1  117[BANK1 ] unsigned char 
  9259 ;;  val             4  132[BANK1 ] unsigned long 
  9260 ;;  tmpval          4  128[BANK1 ] struct .
  9261 ;;  fval            3  136[BANK1 ] struct .
  9262 ;;  prec            2  139[BANK1 ] int 
  9263 ;;  exp             2  126[BANK1 ] int 
  9264 ;;  flag            2  124[BANK1 ] unsigned short 
  9265 ;;  ap              2  122[BANK1 ] PTR void [1]
  9266 ;;		 -> ?i2_printf(2), ?_printf(2), 
  9267 ;;  len             2  120[BANK1 ] unsigned int 
  9268 ;;  cp              2  118[BANK1 ] PTR const unsigned char 
  9269 ;;		 -> printf@c(1), 
  9270 ;;  width           2    0        int 
  9271 ;;  c               1  141[BANK1 ] char 
  9272 ;;  d               1    0        unsigned char 
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  2  100[BANK1 ] int 
  9275 ;; Registers used:
  9276 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9277 ;; Tracked objects:
  9278 ;;		On entry : 0/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9282 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9283 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9284 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9285 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9286 ;;Total ram usage:       42 bytes
  9287 ;; Hardware stack levels used:    1
  9288 ;; Hardware stack levels required when called:   17
  9289 ;; This function calls:
  9290 ;;		___awdiv
  9291 ;;		___ftadd
  9292 ;;		___ftge
  9293 ;;		___ftmul
  9294 ;;		___ftneg
  9295 ;;		___ftsub
  9296 ;;		___fttol
  9297 ;;		___lldiv
  9298 ;;		___llmod
  9299 ;;		___lltoft
  9300 ;;		___wmul
  9301 ;;		__div_to_l_
  9302 ;;		__tdiv_to_l_
  9303 ;;		_fround
  9304 ;;		_isdigit
  9305 ;;		_putch
  9306 ;;		_scale
  9307 ;; This function is called by:
  9308 ;;		_terminal_clearTerminal
  9309 ;;		_terminal_setCursorHome
  9310 ;;		_terminal_textAttributes
  9311 ;;		_terminal_printNewline
  9312 ;;		_ringBufferLUT
  9313 ;;		_terminal_printResetMessage
  9314 ;;		_terminal_clearLine
  9315 ;;		_terminal_saveCursor
  9316 ;;		_terminal_returnCursor
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text19
  9321  010000                     __ptext19:
  9322                           	opt stack 0
  9323  010000                     _printf:
  9324                           	opt stack 11
  9325                           
  9326                           ;doprnt.c: 466: va_list ap;
  9327                           ;doprnt.c: 499: signed char c;
  9328                           ;doprnt.c: 501: int width;
  9329                           ;doprnt.c: 504: int prec;
  9330                           ;doprnt.c: 508: unsigned short flag;
  9331                           ;doprnt.c: 515: char d;
  9332                           ;doprnt.c: 516: double fval;
  9333                           ;doprnt.c: 517: int exp;
  9334                           ;doprnt.c: 523: union {
  9335                           ;doprnt.c: 524: unsigned long vd;
  9336                           ;doprnt.c: 525: double integ;
  9337                           ;doprnt.c: 526: } tmpval;
  9338                           ;doprnt.c: 528: unsigned long val;
  9339                           ;doprnt.c: 529: unsigned len;
  9340                           ;doprnt.c: 530: const char * cp;
  9341                           ;doprnt.c: 533: *ap = __va_start();
  9342                           
  9343                           ;incstack = 0
  9344  010000  0E66               	movlw	low (?_printf+2)
  9345  010002  0101               	movlb	1	; () banked
  9346  010004  6F7A               	movwf	printf@ap& (0+255),b
  9347  010006  0E01               	movlw	high (?_printf+2)
  9348  010008  6F7B               	movwf	(printf@ap+1)& (0+255),b
  9349                           
  9350                           ;doprnt.c: 536: while(c = *f++) {
  9351  01000A  EFF8  F084         	goto	u10650
  9352  01000E                     
  9353                           ; BSR set to: 1
  9354                           ;doprnt.c: 538: if(c != '%')
  9355                           
  9356                           ; BSR set to: 1
  9357  01000E  0E25               	movlw	37
  9358  010010  198D               	xorwf	printf@c& (0+255),w,b
  9359  010012  B4D8               	btfsc	status,2,c
  9360  010014  D005               	goto	l1092
  9361                           
  9362                           ; BSR set to: 1
  9363                           ;doprnt.c: 540: {
  9364                           ;doprnt.c: 541: (putch(c) );
  9365  010016  518D               	movf	printf@c& (0+255),w,b
  9366  010018  EC7E  F0B1         	call	_putch
  9367                           
  9368                           ;doprnt.c: 542: continue;
  9369  01001C  EFF8  F084         	goto	u10650
  9370  010020                     l1092:
  9371                           
  9372                           ;doprnt.c: 543: }
  9373                           ;doprnt.c: 548: flag = 0;
  9374  010020  0E00               	movlw	0
  9375  010022  0101               	movlb	1	; () banked
  9376  010024  6F7D               	movwf	(printf@flag+1)& (0+255),b
  9377  010026  0E00               	movlw	0
  9378  010028  6F7C               	movwf	printf@flag& (0+255),b
  9379                           
  9380                           ; BSR set to: 1
  9381                           ;doprnt.c: 611: if(*f == '.') {
  9382  01002A  C164  FFF6         	movff	printf@f,tblptrl
  9383  01002E  C165  FFF7         	movff	printf@f+1,tblptrh
  9384  010032  0E00               	movlw	low (__mediumconst shr (0+16))
  9385  010034  6EF8               	movwf	tblptru,c
  9386  010036  0E0D               	movlw	(high __ramtop+-1)
  9387  010038  64F7               	cpfsgt	tblptrh,c
  9388  01003A  D003               	bra	u10197
  9389  01003C  0008               	tblrd		*
  9390  01003E  50F5               	movf	tablat,w,c
  9391  010040  D005               	bra	u10190
  9392  010042                     u10197:
  9393  010042  CFF6 FFE1          	movff	tblptrl,fsr1l
  9394  010046  CFF7 FFE2          	movff	tblptrh,fsr1h
  9395  01004A  50E7               	movf	indf1,w,c
  9396  01004C                     u10190:
  9397  01004C  0A2E               	xorlw	46
  9398  01004E  A4D8               	btfss	status,2,c
  9399  010050  D049               	goto	l1093
  9400                           
  9401                           ;doprnt.c: 612: flag |= 0x4000;
  9402  010052  0101               	movlb	1	; () banked
  9403  010054  8D7D               	bsf	(printf@flag+1)& (0+255),6,b
  9404                           
  9405                           ;doprnt.c: 613: f++;
  9406  010056  4B64               	infsnz	printf@f& (0+255),f,b
  9407  010058  2B65               	incf	(printf@f+1)& (0+255),f,b
  9408                           
  9409                           ; BSR set to: 1
  9410                           ;doprnt.c: 620: {
  9411                           ;doprnt.c: 621: prec = 0;
  9412  01005A  0E00               	movlw	0
  9413  01005C  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9414  01005E  0E00               	movlw	0
  9415  010060  6F8B               	movwf	printf@prec& (0+255),b
  9416                           
  9417                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9418  010062  D02A               	goto	l1094
  9419  010064                     
  9420                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9421                           
  9422                           ; BSR set to: 1
  9423  010064  C18B  F125         	movff	printf@prec,___wmul@multiplier
  9424  010068  C18C  F126         	movff	printf@prec+1,___wmul@multiplier+1
  9425  01006C  0E00               	movlw	0
  9426  01006E  0101               	movlb	1	; () banked
  9427  010070  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9428  010072  0E0A               	movlw	10
  9429  010074  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9430  010076  EC67  F0B0         	call	___wmul	;wreg free
  9431  01007A  C164  FFF6         	movff	printf@f,tblptrl
  9432  01007E  C165  FFF7         	movff	printf@f+1,tblptrh
  9433  010082  0E00               	movlw	low (__mediumconst shr (0+16))
  9434  010084  6EF8               	movwf	tblptru,c
  9435  010086  0E0D               	movlw	(high __ramtop+-1)
  9436  010088  64F7               	cpfsgt	tblptrh,c
  9437  01008A  D003               	bra	u10217
  9438  01008C  0008               	tblrd		*
  9439  01008E  50F5               	movf	tablat,w,c
  9440  010090  D005               	bra	u10210
  9441  010092                     u10217:
  9442  010092  CFF6 FFE1          	movff	tblptrl,fsr1l
  9443  010096  CFF7 FFE2          	movff	tblptrh,fsr1h
  9444  01009A  50E7               	movf	indf1,w,c
  9445  01009C                     u10210:
  9446  01009C  0101               	movlb	1	; () banked
  9447  01009E  6F6C               	movwf	??_printf& (0+255),b
  9448  0100A0  516C               	movf	??_printf& (0+255),w,b
  9449  0100A2  2725               	addwf	?___wmul& (0+255),f,b
  9450  0100A4  0E00               	movlw	0
  9451  0100A6  2326               	addwfc	(?___wmul+1)& (0+255),f,b
  9452  0100A8  0ED0               	movlw	208
  9453  0100AA  2525               	addwf	?___wmul& (0+255),w,b
  9454  0100AC  6F8B               	movwf	printf@prec& (0+255),b
  9455  0100AE  0EFF               	movlw	255
  9456  0100B0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
  9457  0100B2  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9458                           
  9459                           ; BSR set to: 1
  9460  0100B4  4B64               	infsnz	printf@f& (0+255),f,b
  9461  0100B6  2B65               	incf	(printf@f+1)& (0+255),f,b
  9462  0100B8                     l1094:
  9463                           
  9464                           ; BSR set to: 1
  9465                           
  9466                           ; BSR set to: 1
  9467  0100B8  C164  FFF6         	movff	printf@f,tblptrl
  9468  0100BC  C165  FFF7         	movff	printf@f+1,tblptrh
  9469  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
  9470  0100C2  6EF8               	movwf	tblptru,c
  9471  0100C4  0E0D               	movlw	(high __ramtop+-1)
  9472  0100C6  64F7               	cpfsgt	tblptrh,c
  9473  0100C8  D003               	bra	u10227
  9474  0100CA  0008               	tblrd		*
  9475  0100CC  50F5               	movf	tablat,w,c
  9476  0100CE  D005               	bra	u10220
  9477  0100D0                     u10227:
  9478  0100D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9479  0100D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9480  0100D8  50E7               	movf	indf1,w,c
  9481  0100DA                     u10220:
  9482  0100DA  EC00  F0B1         	call	_isdigit
  9483  0100DE  A0D8               	btfss	status,0,c
  9484  0100E0  D03B               	goto	l1098
  9485  0100E2  D7C0               	goto	l1095
  9486  0100E4                     l1093:
  9487                           
  9488                           ;doprnt.c: 626: prec = 0;
  9489  0100E4  0E00               	movlw	0
  9490  0100E6  0101               	movlb	1	; () banked
  9491  0100E8  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9492  0100EA  0E00               	movlw	0
  9493  0100EC  6F8B               	movwf	printf@prec& (0+255),b
  9494                           
  9495                           ; BSR set to: 1
  9496                           ;doprnt.c: 628: flag |= 0x1000;
  9497  0100EE  897D               	bsf	(printf@flag+1)& (0+255),4,b
  9498                           
  9499                           ; BSR set to: 1
  9500                           ;doprnt.c: 630: }
  9501                           ;doprnt.c: 635: switch(c = *f++) {
  9502  0100F0  D033               	goto	l1098
  9503  0100F2                     
  9504                           ; BSR set to: 1
  9505                           ;doprnt.c: 663: flag |= 0x400;
  9506                           
  9507                           ; BSR set to: 1
  9508  0100F2  857D               	bsf	(printf@flag+1)& (0+255),2,b
  9509                           
  9510                           ; BSR set to: 1
  9511                           ;doprnt.c: 698: case 'i':
  9512                           ;doprnt.c: 699: break;
  9513                           
  9514                           ; BSR set to: 1
  9515                           
  9516                           ;doprnt.c: 697: case 'd':
  9517                           
  9518                           ;doprnt.c: 664: break;
  9519  0100F4  D062               	goto	l1102
  9520  0100F6                     
  9521                           ; BSR set to: 1
  9522                           ;doprnt.c: 718: case 'x':
  9523                           ;doprnt.c: 721: flag |= 0x80;
  9524                           
  9525                           ; BSR set to: 1
  9526                           
  9527                           ; BSR set to: 1
  9528  0100F6  8F7C               	bsf	printf@flag& (0+255),7,b
  9529                           
  9530                           ;doprnt.c: 723: break;
  9531  0100F8  D060               	goto	l1102
  9532  0100FA                     
  9533                           ; BSR set to: 1
  9534                           ;doprnt.c: 753: if(prec && prec < len)
  9535                           
  9536                           ; BSR set to: 1
  9537  0100FA  518B               	movf	printf@prec& (0+255),w,b
  9538  0100FC  118C               	iorwf	(printf@prec+1)& (0+255),w,b
  9539  0100FE  B4D8               	btfsc	status,2,c
  9540  010100  D015               	goto	l1109
  9541                           
  9542                           ; BSR set to: 1
  9543  010102  5178               	movf	printf@len& (0+255),w,b
  9544  010104  5D8B               	subwf	printf@prec& (0+255),w,b
  9545  010106  5179               	movf	(printf@len+1)& (0+255),w,b
  9546  010108  598C               	subwfb	(printf@prec+1)& (0+255),w,b
  9547  01010A  B0D8               	btfsc	status,0,c
  9548  01010C  D00F               	goto	l1109
  9549                           
  9550                           ; BSR set to: 1
  9551                           ;doprnt.c: 754: len = prec;
  9552  01010E  C18B  F178         	movff	printf@prec,printf@len
  9553  010112  C18C  F179         	movff	printf@prec+1,printf@len+1
  9554                           
  9555                           ; BSR set to: 1
  9556                           ;doprnt.c: 767: while(len--)
  9557  010116  D00A               	goto	l1109
  9558  010118                     l8815:
  9559                           
  9560                           ; BSR set to: 1
  9561                           ;doprnt.c: 768: (putch(*cp++) );
  9562  010118  C176  FFD9         	movff	printf@cp,fsr2l
  9563  01011C  C177  FFDA         	movff	printf@cp+1,fsr2h
  9564  010120  50DF               	movf	indf2,w,c
  9565  010122  EC7E  F0B1         	call	_putch
  9566  010126  0101               	movlb	1	; () banked
  9567  010128  4B76               	infsnz	printf@cp& (0+255),f,b
  9568  01012A  2B77               	incf	(printf@cp+1)& (0+255),f,b
  9569  01012C                     l1109:
  9570                           
  9571                           ; BSR set to: 1
  9572                           
  9573                           ; BSR set to: 1
  9574  01012C  0778               	decf	printf@len& (0+255),f,b
  9575  01012E  A0D8               	btfss	status,0,c
  9576  010130  0779               	decf	(printf@len+1)& (0+255),f,b
  9577  010132  2978               	incf	printf@len& (0+255),w,b
  9578  010134  E1F1               	bnz	l8815
  9579  010136  2979               	incf	(printf@len+1)& (0+255),w,b
  9580  010138  B4D8               	btfsc	status,2,c
  9581  01013A  EFF8  F084         	goto	u10650
  9582  01013E  D7EC               	goto	l1110
  9583  010140                     
  9584                           ; BSR set to: 1
  9585                           ;doprnt.c: 805: cp = (char *)&c;
  9586                           
  9587                           ; BSR set to: 1
  9588  010140  0E8D               	movlw	low printf@c
  9589  010142  6F76               	movwf	printf@cp& (0+255),b
  9590  010144  0E01               	movlw	high printf@c
  9591  010146  6F77               	movwf	(printf@cp+1)& (0+255),b
  9592                           
  9593                           ; BSR set to: 1
  9594                           ;doprnt.c: 806: len = 1;
  9595  010148  0E00               	movlw	0
  9596  01014A  6F79               	movwf	(printf@len+1)& (0+255),b
  9597  01014C  0E01               	movlw	1
  9598  01014E  6F78               	movwf	printf@len& (0+255),b
  9599                           
  9600                           ;doprnt.c: 807: goto dostring;
  9601  010150  D7D4               	goto	l1107
  9602  010152                     
  9603                           ; BSR set to: 1
  9604                           ;doprnt.c: 818: flag |= 0xC0;
  9605                           
  9606                           ; BSR set to: 1
  9607  010152  0EC0               	movlw	192
  9608  010154  137C               	iorwf	printf@flag& (0+255),f,b
  9609                           
  9610                           ; BSR set to: 1
  9611                           ;doprnt.c: 822: }
  9612                           
  9613                           ;doprnt.c: 819: break;
  9614  010156  D031               	goto	l1102
  9615  010158                     l1098:
  9616                           
  9617                           ; BSR set to: 1
  9618  010158  0101               	movlb	1	; () banked
  9619  01015A  5164               	movf	printf@f& (0+255),w,b
  9620  01015C  6F6C               	movwf	??_printf& (0+255),b
  9621  01015E  5165               	movf	(printf@f+1)& (0+255),w,b
  9622  010160  6F6D               	movwf	(??_printf+1)& (0+255),b
  9623  010162  4B64               	infsnz	printf@f& (0+255),f,b
  9624  010164  2B65               	incf	(printf@f+1)& (0+255),f,b
  9625  010166  C16C  FFF6         	movff	??_printf,tblptrl
  9626  01016A  C16D  FFF7         	movff	??_printf+1,tblptrh
  9627  01016E  0E00               	movlw	low (__mediumconst shr (0+16))
  9628  010170  6EF8               	movwf	tblptru,c
  9629  010172  0E0D               	movlw	(high __ramtop+-1)
  9630  010174  64F7               	cpfsgt	tblptrh,c
  9631  010176  D003               	bra	u10277
  9632  010178  0008               	tblrd		*
  9633  01017A  50F5               	movf	tablat,w,c
  9634  01017C  D005               	bra	u10270
  9635  01017E                     u10277:
  9636  01017E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9637  010182  CFF7 FFE2          	movff	tblptrh,fsr1h
  9638  010186  50E7               	movf	indf1,w,c
  9639  010188                     u10270:
  9640  010188  0101               	movlb	1	; () banked
  9641  01018A  6F8D               	movwf	printf@c& (0+255),b
  9642  01018C  518D               	movf	printf@c& (0+255),w,b
  9643                           
  9644                           ; Switch size 1, requested type "space"
  9645                           ; Number of cases is 7, Range of values is 0 to 120
  9646                           ; switch strategies available:
  9647                           ; Name         Instructions Cycles
  9648                           ; simple_byte           22    12 (average)
  9649                           ;	Chosen strategy is simple_byte
  9650  01018E  0A00               	xorlw	0	; case 0
  9651  010190  B4D8               	btfsc	status,2,c
  9652  010192  0012               	return	
  9653  010194  0A58               	xorlw	88	; case 88
  9654  010196  B4D8               	btfsc	status,2,c
  9655  010198  D7AE               	goto	l1105
  9656  01019A  0A3C               	xorlw	60	; case 100
  9657  01019C  B4D8               	btfsc	status,2,c
  9658  01019E  D00D               	goto	l1102
  9659  0101A0  0A02               	xorlw	2	; case 102
  9660  0101A2  B4D8               	btfsc	status,2,c
  9661  0101A4  D7A6               	goto	l1101
  9662  0101A6  0A0F               	xorlw	15	; case 105
  9663  0101A8  B4D8               	btfsc	status,2,c
  9664  0101AA  D007               	goto	l1102
  9665  0101AC  0A1C               	xorlw	28	; case 117
  9666  0101AE  B4D8               	btfsc	status,2,c
  9667  0101B0  D7D0               	goto	l1113
  9668  0101B2  0A0D               	xorlw	13	; case 120
  9669  0101B4  B4D8               	btfsc	status,2,c
  9670  0101B6  D79F               	goto	l1105
  9671  0101B8  D7C3               	goto	l1112
  9672  0101BA                     l1102:
  9673                           
  9674                           ; BSR set to: 1
  9675                           ;doprnt.c: 825: if(flag & (0x700)) {
  9676                           
  9677                           ; BSR set to: 1
  9678  0101BA  0E07               	movlw	7
  9679  0101BC  157D               	andwf	(printf@flag+1)& (0+255),w,b
  9680  0101BE  B4D8               	btfsc	status,2,c
  9681  0101C0  D2C1               	goto	l1114
  9682                           
  9683                           ; BSR set to: 1
  9684                           ;doprnt.c: 827: if(flag & 0x1000)
  9685  0101C2  A97D               	btfss	(printf@flag+1)& (0+255),4,b
  9686  0101C4  D004               	goto	l1115
  9687                           
  9688                           ; BSR set to: 1
  9689                           ;doprnt.c: 829: prec = 6;
  9690  0101C6  0E00               	movlw	0
  9691  0101C8  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9692  0101CA  0E06               	movlw	6
  9693  0101CC  6F8B               	movwf	printf@prec& (0+255),b
  9694  0101CE                     l1115:
  9695                           
  9696                           ; BSR set to: 1
  9697                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  9698                           
  9699                           ; BSR set to: 1
  9700  0101CE  C17A  FFD9         	movff	printf@ap,fsr2l
  9701  0101D2  C17B  FFDA         	movff	printf@ap+1,fsr2h
  9702  0101D6  CFDE F188          	movff	postinc2,printf@fval
  9703  0101DA  CFDE F189          	movff	postinc2,printf@fval+1
  9704  0101DE  CFDD F18A          	movff	postdec2,printf@fval+2
  9705                           
  9706                           ; BSR set to: 1
  9707  0101E2  0E03               	movlw	3
  9708  0101E4  277A               	addwf	printf@ap& (0+255),f,b
  9709  0101E6  0E00               	movlw	0
  9710  0101E8  237B               	addwfc	(printf@ap+1)& (0+255),f,b
  9711                           
  9712                           ; BSR set to: 1
  9713                           ;doprnt.c: 831: if(fval < 0.0) {
  9714  0101EA  AF8A               	btfss	(printf@fval+2)& (0+255),7,b
  9715  0101EC  D011               	goto	l1116
  9716                           
  9717                           ; BSR set to: 1
  9718                           ;doprnt.c: 832: fval = -fval;
  9719  0101EE  C188  F123         	movff	printf@fval,___ftneg@f1
  9720  0101F2  C189  F124         	movff	printf@fval+1,___ftneg@f1+1
  9721  0101F6  C18A  F125         	movff	printf@fval+2,___ftneg@f1+2
  9722  0101FA  ECA3  F0B0         	call	___ftneg	;wreg free
  9723  0101FE  C123  F188         	movff	?___ftneg,printf@fval
  9724  010202  C124  F189         	movff	?___ftneg+1,printf@fval+1
  9725  010206  C125  F18A         	movff	?___ftneg+2,printf@fval+2
  9726                           
  9727                           ;doprnt.c: 833: flag |= 0x03;
  9728  01020A  0E03               	movlw	3
  9729  01020C  0101               	movlb	1	; () banked
  9730  01020E  137C               	iorwf	printf@flag& (0+255),f,b
  9731  010210                     l1116:
  9732                           
  9733                           ; BSR set to: 1
  9734                           ;doprnt.c: 834: }
  9735                           ;doprnt.c: 835: exp = 0;
  9736                           
  9737                           ; BSR set to: 1
  9738  010210  0E00               	movlw	0
  9739  010212  6F7F               	movwf	(printf@exp+1)& (0+255),b
  9740  010214  0E00               	movlw	0
  9741  010216  6F7E               	movwf	printf@exp& (0+255),b
  9742                           
  9743                           ; BSR set to: 1
  9744                           ;doprnt.c: 836: if( fval!=0) {
  9745  010218  5188               	movf	printf@fval& (0+255),w,b
  9746  01021A  1189               	iorwf	(printf@fval+1)& (0+255),w,b
  9747  01021C  118A               	iorwf	(printf@fval+2)& (0+255),w,b
  9748  01021E  B4D8               	btfsc	status,2,c
  9749  010220  D088               	goto	l1121
  9750                           
  9751                           ; BSR set to: 1
  9752                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  9753  010222  0E82               	movlw	130
  9754  010224  6F6C               	movwf	??_printf& (0+255),b
  9755  010226  0EFF               	movlw	255
  9756  010228  6F6D               	movwf	(??_printf+1)& (0+255),b
  9757  01022A  C188  F16E         	movff	printf@fval,??_printf+2
  9758  01022E  C189  F16F         	movff	printf@fval+1,??_printf+3
  9759  010232  C18A  F170         	movff	printf@fval+2,??_printf+4
  9760  010236  C18B  F171         	movff	printf@fval+3,??_printf+5
  9761  01023A  0E10               	movlw	16
  9762  01023C  D005               	goto	u10320
  9763  01023E                     u10325:
  9764  01023E  90D8               	bcf	status,0,c
  9765  010240  3371               	rrcf	(??_printf+5)& (0+255),f,b
  9766  010242  3370               	rrcf	(??_printf+4)& (0+255),f,b
  9767  010244  336F               	rrcf	(??_printf+3)& (0+255),f,b
  9768  010246  336E               	rrcf	(??_printf+2)& (0+255),f,b
  9769  010248                     u10320:
  9770  010248  2EE8               	decfsz	wreg,f,c
  9771  01024A  D7F9               	goto	u10325
  9772  01024C  516E               	movf	(??_printf+2)& (0+255),w,b
  9773  01024E  256C               	addwf	??_printf& (0+255),w,b
  9774  010250  6F7E               	movwf	printf@exp& (0+255),b
  9775  010252  0E00               	movlw	0
  9776  010254  216D               	addwfc	(??_printf+1)& (0+255),w,b
  9777  010256  6F7F               	movwf	(printf@exp+1)& (0+255),b
  9778                           
  9779                           ; BSR set to: 1
  9780                           ;doprnt.c: 838: exp--;
  9781  010258  077E               	decf	printf@exp& (0+255),f,b
  9782  01025A  A0D8               	btfss	status,0,c
  9783  01025C  077F               	decf	(printf@exp+1)& (0+255),f,b
  9784                           
  9785                           ; BSR set to: 1
  9786                           ;doprnt.c: 839: exp *= 3;
  9787  01025E  C17E  F125         	movff	printf@exp,___wmul@multiplier
  9788  010262  C17F  F126         	movff	printf@exp+1,___wmul@multiplier+1
  9789  010266  0E00               	movlw	0
  9790  010268  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9791  01026A  0E03               	movlw	3
  9792  01026C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9793  01026E  EC67  F0B0         	call	___wmul	;wreg free
  9794  010272  C125  F17E         	movff	?___wmul,printf@exp
  9795  010276  C126  F17F         	movff	?___wmul+1,printf@exp+1
  9796                           
  9797                           ;doprnt.c: 840: exp /= 10;
  9798  01027A  C17E  F11D         	movff	printf@exp,___awdiv@dividend
  9799  01027E  C17F  F11E         	movff	printf@exp+1,___awdiv@dividend+1
  9800  010282  0E00               	movlw	0
  9801  010284  0101               	movlb	1	; () banked
  9802  010286  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
  9803  010288  0E0A               	movlw	10
  9804  01028A  6F1F               	movwf	___awdiv@divisor& (0+255),b
  9805  01028C  ECCE  F0A9         	call	___awdiv	;wreg free
  9806  010290  C11D  F17E         	movff	?___awdiv,printf@exp
  9807  010294  C11E  F17F         	movff	?___awdiv+1,printf@exp+1
  9808                           
  9809                           ;doprnt.c: 841: if(exp < 0)
  9810  010298  0101               	movlb	1	; () banked
  9811  01029A  AF7F               	btfss	(printf@exp+1)& (0+255),7,b
  9812  01029C  D003               	goto	l1118
  9813                           
  9814                           ; BSR set to: 1
  9815                           ;doprnt.c: 842: exp--;
  9816  01029E  077E               	decf	printf@exp& (0+255),f,b
  9817  0102A0  A0D8               	btfss	status,0,c
  9818  0102A2  077F               	decf	(printf@exp+1)& (0+255),f,b
  9819  0102A4                     l1118:
  9820                           
  9821                           ; BSR set to: 1
  9822                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9823                           
  9824                           ; BSR set to: 1
  9825  0102A4  517E               	movf	printf@exp& (0+255),w,b
  9826  0102A6  0800               	sublw	0
  9827  0102A8  ECB1  F090         	call	_scale
  9828  0102AC  C155  F180         	movff	?_scale,printf@tmpval
  9829  0102B0  C156  F181         	movff	?_scale+1,printf@tmpval+1
  9830  0102B4  C157  F182         	movff	?_scale+2,printf@tmpval+2
  9831                           
  9832                           ;doprnt.c: 847: tmpval.integ *= fval;
  9833  0102B8  C180  F146         	movff	printf@tmpval,___ftmul@f1
  9834  0102BC  C181  F147         	movff	printf@tmpval+1,___ftmul@f1+1
  9835  0102C0  C182  F148         	movff	printf@tmpval+2,___ftmul@f1+2
  9836  0102C4  C188  F149         	movff	printf@fval,___ftmul@f2
  9837  0102C8  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
  9838  0102CC  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
  9839  0102D0  EC56  F0A3         	call	___ftmul	;wreg free
  9840  0102D4  C146  F180         	movff	?___ftmul,printf@tmpval
  9841  0102D8  C147  F181         	movff	?___ftmul+1,printf@tmpval+1
  9842  0102DC  C148  F182         	movff	?___ftmul+2,printf@tmpval+2
  9843                           
  9844                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9845  0102E0  C180  F117         	movff	printf@tmpval,___ftge@ff1
  9846  0102E4  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9847  0102E8  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9848  0102EC  0E00               	movlw	0
  9849  0102EE  0101               	movlb	1	; () banked
  9850  0102F0  6F1A               	movwf	___ftge@ff2& (0+255),b
  9851  0102F2  0E80               	movlw	128
  9852  0102F4  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9853  0102F6  0E3F               	movlw	63
  9854  0102F8  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9855  0102FA  ECAF  F0A8         	call	___ftge	;wreg free
  9856  0102FE  0101               	movlb	1	; () banked
  9857  010300  B0D8               	btfsc	status,0,c
  9858  010302  D004               	goto	l1119
  9859                           
  9860                           ; BSR set to: 1
  9861                           ;doprnt.c: 849: exp--;
  9862  010304  077E               	decf	printf@exp& (0+255),f,b
  9863  010306  A0D8               	btfss	status,0,c
  9864  010308  077F               	decf	(printf@exp+1)& (0+255),f,b
  9865  01030A  D013               	goto	l1121
  9866  01030C                     l1119:
  9867                           
  9868                           ; BSR set to: 1
  9869                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9870                           
  9871                           ; BSR set to: 1
  9872  01030C  C180  F117         	movff	printf@tmpval,___ftge@ff1
  9873  010310  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9874  010314  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9875  010318  0E00               	movlw	0
  9876  01031A  6F1A               	movwf	___ftge@ff2& (0+255),b
  9877  01031C  0E20               	movlw	32
  9878  01031E  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9879  010320  0E41               	movlw	65
  9880  010322  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9881  010324  ECAF  F0A8         	call	___ftge	;wreg free
  9882  010328  0101               	movlb	1	; () banked
  9883  01032A  A0D8               	btfss	status,0,c
  9884  01032C  D002               	goto	l1121
  9885                           
  9886                           ; BSR set to: 1
  9887                           ;doprnt.c: 851: exp++;
  9888  01032E  4B7E               	infsnz	printf@exp& (0+255),f,b
  9889  010330  2B7F               	incf	(printf@exp+1)& (0+255),f,b
  9890  010332                     l1121:
  9891                           
  9892                           ; BSR set to: 1
  9893                           ;doprnt.c: 852: }
  9894                           ;doprnt.c: 1112: if(prec <= 12)
  9895                           
  9896                           ; BSR set to: 1
  9897                           
  9898                           ; BSR set to: 1
  9899                           
  9900                           ; BSR set to: 1
  9901  010332  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
  9902  010334  D006               	goto	u10360
  9903  010336  518C               	movf	(printf@prec+1)& (0+255),w,b
  9904  010338  E11B               	bnz	l8879
  9905  01033A  0E0D               	movlw	13
  9906  01033C  5D8B               	subwf	printf@prec& (0+255),w,b
  9907  01033E  B0D8               	btfsc	status,0,c
  9908  010340  D017               	goto	l1122
  9909  010342                     u10360:
  9910                           
  9911                           ; BSR set to: 1
  9912                           ;doprnt.c: 1113: fval += fround(prec);
  9913  010342  C188  F12B         	movff	printf@fval,___ftadd@f1
  9914  010346  C189  F12C         	movff	printf@fval+1,___ftadd@f1+1
  9915  01034A  C18A  F12D         	movff	printf@fval+2,___ftadd@f1+2
  9916  01034E  518B               	movf	printf@prec& (0+255),w,b
  9917  010350  ECCD  F096         	call	_fround
  9918  010354  C155  F12E         	movff	?_fround,___ftadd@f2
  9919  010358  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
  9920  01035C  C157  F130         	movff	?_fround+2,___ftadd@f2+2
  9921  010360  EC7A  F09D         	call	___ftadd	;wreg free
  9922  010364  C12B  F188         	movff	?___ftadd,printf@fval
  9923  010368  C12C  F189         	movff	?___ftadd+1,printf@fval+1
  9924  01036C  C12D  F18A         	movff	?___ftadd+2,printf@fval+2
  9925  010370                     l1122:
  9926  010370                     l8879:
  9927                           
  9928                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9929  010370  0101               	movlb	1	; () banked
  9930  010372  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
  9931  010374  D006               	goto	u10370
  9932  010376  517F               	movf	(printf@exp+1)& (0+255),w,b
  9933  010378  E11F               	bnz	l8887
  9934  01037A  0E0A               	movlw	10
  9935  01037C  5D7E               	subwf	printf@exp& (0+255),w,b
  9936  01037E  B0D8               	btfsc	status,0,c
  9937  010380  D01B               	goto	u10400
  9938  010382                     u10370:
  9939                           
  9940                           ; BSR set to: 1
  9941  010382  5188               	movf	printf@fval& (0+255),w,b
  9942  010384  1189               	iorwf	(printf@fval+1)& (0+255),w,b
  9943  010386  118A               	iorwf	(printf@fval+2)& (0+255),w,b
  9944  010388  B4D8               	btfsc	status,2,c
  9945  01038A  D054               	goto	l1123
  9946                           
  9947                           ; BSR set to: 1
  9948  01038C  C188  F155         	movff	printf@fval,___fttol@f1
  9949  010390  C189  F156         	movff	printf@fval+1,___fttol@f1+1
  9950  010394  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
  9951  010398  ECDA  F0A2         	call	___fttol	;wreg free
  9952  01039C  0101               	movlb	1	; () banked
  9953  01039E  5155               	movf	?___fttol& (0+255),w,b
  9954  0103A0  1156               	iorwf	(?___fttol+1)& (0+255),w,b
  9955  0103A2  1157               	iorwf	(?___fttol+2)& (0+255),w,b
  9956  0103A4  1158               	iorwf	(?___fttol+3)& (0+255),w,b
  9957  0103A6  B4D8               	btfsc	status,2,c
  9958                           
  9959                           ; BSR set to: 1
  9960  0103A8  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
  9961  0103AA  D044               	goto	l1123
  9962  0103AC  517F               	movf	(printf@exp+1)& (0+255),w,b
  9963  0103AE  E104               	bnz	l8887
  9964  0103B0  0E02               	movlw	2
  9965  0103B2  5D7E               	subwf	printf@exp& (0+255),w,b
  9966  0103B4  A0D8               	btfss	status,0,c
  9967  0103B6  D03E               	goto	l1123
  9968  0103B8                     u10400:
  9969  0103B8                     l8887:
  9970                           
  9971                           ; BSR set to: 1
  9972                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9973  0103B8  C180  F117         	movff	printf@tmpval,___ftge@ff1
  9974  0103BC  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9975  0103C0  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9976  0103C4  0E70               	movlw	112
  9977  0103C6  6F1A               	movwf	___ftge@ff2& (0+255),b
  9978  0103C8  0E89               	movlw	137
  9979  0103CA  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9980  0103CC  0E40               	movlw	64
  9981  0103CE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9982  0103D0  ECAF  F0A8         	call	___ftge	;wreg free
  9983  0103D4  0101               	movlb	1	; () banked
  9984  0103D6  B0D8               	btfsc	status,0,c
  9985  0103D8  D002               	goto	l1126
  9986                           
  9987                           ; BSR set to: 1
  9988                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9989  0103DA  0EF7               	movlw	247
  9990  0103DC  D001               	goto	L1
  9991  0103DE                     l1126:
  9992                           
  9993                           ; BSR set to: 1
  9994                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9995                           
  9996                           ; BSR set to: 1
  9997  0103DE  0EF8               	movlw	248
  9998  0103E0                     L1:
  9999  0103E0  277E               	addwf	printf@exp& (0+255),f,b
 10000  0103E2  0EFF               	movlw	255
 10001  0103E4  237F               	addwfc	(printf@exp+1)& (0+255),f,b
 10002                           
 10003                           ; BSR set to: 1
 10004                           ;doprnt.c: 1124: }
 10005                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 10006                           
 10007                           ; BSR set to: 1
 10008  0103E6  517E               	movf	printf@exp& (0+255),w,b
 10009  0103E8  ECB1  F090         	call	_scale
 10010  0103EC  C155  F180         	movff	?_scale,printf@tmpval
 10011  0103F0  C156  F181         	movff	?_scale+1,printf@tmpval+1
 10012  0103F4  C157  F182         	movff	?_scale+2,printf@tmpval+2
 10013                           
 10014                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 10015  0103F8  C188  F117         	movff	printf@fval,__tdiv_to_l_@f1
 10016  0103FC  C189  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 10017  010400  C18A  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 10018  010404  C180  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
 10019  010408  C181  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 10020  01040C  C182  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 10021  010410  ECF0  F09F         	call	__tdiv_to_l_	;wreg free
 10022  010414  C117  F184         	movff	?__tdiv_to_l_,printf@val
 10023  010418  C118  F185         	movff	?__tdiv_to_l_+1,printf@val+1
 10024  01041C  C119  F186         	movff	?__tdiv_to_l_+2,printf@val+2
 10025  010420  C11A  F187         	movff	?__tdiv_to_l_+3,printf@val+3
 10026                           
 10027                           ;doprnt.c: 1129: fval = 0.0;
 10028  010424  0E00               	movlw	0
 10029  010426  0101               	movlb	1	; () banked
 10030  010428  6F88               	movwf	printf@fval& (0+255),b
 10031  01042A  0E00               	movlw	0
 10032  01042C  6F89               	movwf	(printf@fval+1)& (0+255),b
 10033  01042E  0E00               	movlw	0
 10034  010430  6F8A               	movwf	(printf@fval+2)& (0+255),b
 10035                           
 10036                           ;doprnt.c: 1130: } else {
 10037  010432  D033               	goto	l1132
 10038  010434                     l1123:
 10039                           
 10040                           ; BSR set to: 1
 10041                           ;doprnt.c: 1131: val = (unsigned long)fval;
 10042                           
 10043                           ; BSR set to: 1
 10044  010434  C188  F155         	movff	printf@fval,___fttol@f1
 10045  010438  C189  F156         	movff	printf@fval+1,___fttol@f1+1
 10046  01043C  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
 10047  010440  ECDA  F0A2         	call	___fttol	;wreg free
 10048  010444  C155  F184         	movff	?___fttol,printf@val
 10049  010448  C156  F185         	movff	?___fttol+1,printf@val+1
 10050  01044C  C157  F186         	movff	?___fttol+2,printf@val+2
 10051  010450  C158  F187         	movff	?___fttol+3,printf@val+3
 10052                           
 10053                           ;doprnt.c: 1132: fval -= (double)val;
 10054  010454  C188  F137         	movff	printf@fval,___ftsub@f1
 10055  010458  C189  F138         	movff	printf@fval+1,___ftsub@f1+1
 10056  01045C  C18A  F139         	movff	printf@fval+2,___ftsub@f1+2
 10057  010460  C184  F11F         	movff	printf@val,___lltoft@c
 10058  010464  C185  F120         	movff	printf@val+1,___lltoft@c+1
 10059  010468  C186  F121         	movff	printf@val+2,___lltoft@c+2
 10060  01046C  C187  F122         	movff	printf@val+3,___lltoft@c+3
 10061  010470  EC5B  F0AD         	call	___lltoft	;wreg free
 10062  010474  C11F  F13A         	movff	?___lltoft,___ftsub@f2
 10063  010478  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
 10064  01047C  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
 10065  010480  EC40  F0AF         	call	___ftsub	;wreg free
 10066  010484  C137  F188         	movff	?___ftsub,printf@fval
 10067  010488  C138  F189         	movff	?___ftsub+1,printf@fval+1
 10068  01048C  C139  F18A         	movff	?___ftsub+2,printf@fval+2
 10069                           
 10070                           ;doprnt.c: 1133: exp = 0;
 10071  010490  0E00               	movlw	0
 10072  010492  0101               	movlb	1	; () banked
 10073  010494  6F7F               	movwf	(printf@exp+1)& (0+255),b
 10074  010496  0E00               	movlw	0
 10075  010498  6F7E               	movwf	printf@exp& (0+255),b
 10076  01049A                     l1132:
 10077                           
 10078                           ; BSR set to: 1
 10079                           ;doprnt.c: 1134: }
 10080                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10081                           
 10082                           ; BSR set to: 1
 10083  01049A  0E01               	movlw	1
 10084  01049C  6F8D               	movwf	printf@c& (0+255),b
 10085  01049E                     l8907:
 10086                           
 10087                           ; BSR set to: 1
 10088  01049E  0E0A               	movlw	10
 10089  0104A0  198D               	xorwf	printf@c& (0+255),w,b
 10090  0104A2  B4D8               	btfsc	status,2,c
 10091  0104A4  D01B               	goto	u10440
 10092                           
 10093                           ; BSR set to: 1
 10094                           ;doprnt.c: 1137: if(val < dpowers[c])
 10095                           
 10096                           ; BSR set to: 1
 10097                           
 10098                           ; BSR set to: 1
 10099  0104A6  518D               	movf	printf@c& (0+255),w,b
 10100  0104A8  0D04               	mullw	4
 10101  0104AA  0E29               	movlw	low _dpowers
 10102  0104AC  24F3               	addwf	prodl,w,c
 10103  0104AE  6EF6               	movwf	tblptrl,c
 10104  0104B0  0EF3               	movlw	high _dpowers
 10105  0104B2  20F4               	addwfc	prodh,w,c
 10106  0104B4  6EF7               	movwf	tblptrh,c
 10107  0104B6                     	if	1	;There are 3 active tblptr bytes
 10108  0104B6  6AF8               	clrf	tblptru,c
 10109  0104B8  0E00               	movlw	low (__mediumconst shr (0+16))
 10110  0104BA  22F8               	addwfc	tblptru,f,c
 10111  0104BC                     	endif
 10112  0104BC  0009               	tblrd		*+
 10113  0104BE  50F5               	movf	tablat,w,c
 10114  0104C0  5D84               	subwf	printf@val& (0+255),w,b
 10115  0104C2  0009               	tblrd		*+
 10116  0104C4  50F5               	movf	tablat,w,c
 10117  0104C6  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10118  0104C8  0009               	tblrd		*+
 10119  0104CA  50F5               	movf	tablat,w,c
 10120  0104CC  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10121  0104CE  0009               	tblrd		*+
 10122  0104D0  50F5               	movf	tablat,w,c
 10123  0104D2  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10124  0104D4  A0D8               	btfss	status,0,c
 10125  0104D6  D002               	goto	u10440
 10126                           
 10127                           ; BSR set to: 1
 10128                           
 10129                           ; BSR set to: 1
 10130                           
 10131                           ; BSR set to: 1
 10132                           ;doprnt.c: 1138: break;
 10133  0104D8  2B8D               	incf	printf@c& (0+255),f,b
 10134  0104DA  D7E1               	goto	l8907
 10135  0104DC                     u10440:
 10136                           
 10137                           ; BSR set to: 1
 10138                           ;doprnt.c: 1175: {
 10139                           ;doprnt.c: 1188: if(flag & 0x03)
 10140                           
 10141                           ; BSR set to: 1
 10142  0104DC  0E03               	movlw	3
 10143  0104DE  157C               	andwf	printf@flag& (0+255),w,b
 10144  0104E0  6F6C               	movwf	??_printf& (0+255),b
 10145  0104E2  0E00               	movlw	0
 10146  0104E4  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10147  0104E6  6F6D               	movwf	(??_printf+1)& (0+255),b
 10148  0104E8  516C               	movf	??_printf& (0+255),w,b
 10149  0104EA  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10150  0104EC  B4D8               	btfsc	status,2,c
 10151  0104EE  D04E               	goto	l1137
 10152                           
 10153                           ; BSR set to: 1
 10154                           ;doprnt.c: 1190: (putch('-') );
 10155  0104F0  0E2D               	movlw	45
 10156  0104F2  EC7E  F0B1         	call	_putch
 10157                           
 10158                           ;doprnt.c: 1195: }
 10159                           ;doprnt.c: 1196: while(c--) {
 10160  0104F6  D04A               	goto	l1137
 10161  0104F8                     
 10162                           ;doprnt.c: 1200: {
 10163                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 10164  0104F8  C184  F117         	movff	printf@val,___lldiv@dividend
 10165  0104FC  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10166  010500  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10167  010504  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10168  010508  0101               	movlb	1	; () banked
 10169  01050A  518D               	movf	printf@c& (0+255),w,b
 10170  01050C  0D04               	mullw	4
 10171  01050E  0E29               	movlw	low _dpowers
 10172  010510  24F3               	addwf	prodl,w,c
 10173  010512  6EF6               	movwf	tblptrl,c
 10174  010514  0EF3               	movlw	high _dpowers
 10175  010516  20F4               	addwfc	prodh,w,c
 10176  010518  6EF7               	movwf	tblptrh,c
 10177  01051A                     	if	1	;There are 3 active tblptr bytes
 10178  01051A  6AF8               	clrf	tblptru,c
 10179  01051C  0E00               	movlw	low (__mediumconst shr (0+16))
 10180  01051E  22F8               	addwfc	tblptru,f,c
 10181  010520                     	endif
 10182  010520  0009               	tblrd		*+
 10183  010522  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10184  010526  0009               	tblrd		*+
 10185  010528  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10186  01052C  0009               	tblrd		*+
 10187  01052E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10188  010532  000A               	tblrd		*-
 10189  010534  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10190  010538  EC11  F0AA         	call	___lldiv	;wreg free
 10191  01053C  C117  F180         	movff	?___lldiv,printf@tmpval
 10192  010540  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 10193  010544  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 10194  010548  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 10195                           
 10196                           ;doprnt.c: 1202: tmpval.vd %= 10;
 10197  01054C  C180  F124         	movff	printf@tmpval,___llmod@dividend
 10198  010550  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10199  010554  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10200  010558  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10201  01055C  0E0A               	movlw	10
 10202  01055E  0101               	movlb	1	; () banked
 10203  010560  6F28               	movwf	___llmod@divisor& (0+255),b
 10204  010562  0E00               	movlw	0
 10205  010564  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10206  010566  0E00               	movlw	0
 10207  010568  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10208  01056A  0E00               	movlw	0
 10209  01056C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10210  01056E  EC2E  F0AC         	call	___llmod	;wreg free
 10211  010572  C124  F180         	movff	?___llmod,printf@tmpval
 10212  010576  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 10213  01057A  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 10214  01057E  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 10215                           
 10216                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 10217  010582  0101               	movlb	1	; () banked
 10218  010584  5180               	movf	printf@tmpval& (0+255),w,b
 10219  010586  0F30               	addlw	48
 10220  010588  EC7E  F0B1         	call	_putch
 10221  01058C                     l1137:
 10222  01058C  0101               	movlb	1	; () banked
 10223  01058E  078D               	decf	printf@c& (0+255),f,b
 10224  010590  298D               	incf	printf@c& (0+255),w,b
 10225  010592  B4D8               	btfsc	status,2,c
 10226  010594  D008               	goto	l1140
 10227  010596  D7B0               	goto	l1138
 10228  010598                     l8931:
 10229                           
 10230                           ; BSR set to: 1
 10231                           ;doprnt.c: 1208: (putch('0') );
 10232  010598  0E30               	movlw	48
 10233  01059A  EC7E  F0B1         	call	_putch
 10234                           
 10235                           ;doprnt.c: 1209: exp--;
 10236  01059E  0101               	movlb	1	; () banked
 10237  0105A0  077E               	decf	printf@exp& (0+255),f,b
 10238  0105A2  A0D8               	btfss	status,0,c
 10239  0105A4  077F               	decf	(printf@exp+1)& (0+255),f,b
 10240  0105A6                     l1140:
 10241                           
 10242                           ; BSR set to: 1
 10243                           
 10244                           ; BSR set to: 1
 10245  0105A6  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
 10246  0105A8  D005               	goto	u10470
 10247  0105AA  517F               	movf	(printf@exp+1)& (0+255),w,b
 10248  0105AC  E1F5               	bnz	l8931
 10249  0105AE  057E               	decf	printf@exp& (0+255),w,b
 10250  0105B0  B0D8               	btfsc	status,0,c
 10251  0105B2  D7F2               	goto	l1141
 10252  0105B4                     u10470:
 10253                           
 10254                           ; BSR set to: 1
 10255                           ;doprnt.c: 1210: }
 10256                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10257                           
 10258                           ; BSR set to: 1
 10259  0105B4  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
 10260  0105B6  D009               	goto	l1143
 10261  0105B8  518C               	movf	(printf@prec+1)& (0+255),w,b
 10262  0105BA  E104               	bnz	u10480
 10263  0105BC  0E09               	movlw	9
 10264  0105BE  5D8B               	subwf	printf@prec& (0+255),w,b
 10265  0105C0  A0D8               	btfss	status,0,c
 10266  0105C2  D003               	goto	l1143
 10267  0105C4                     u10480:
 10268                           
 10269                           ; BSR set to: 1
 10270                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 10271  0105C4  0E08               	movlw	8
 10272  0105C6  6F8D               	movwf	printf@c& (0+255),b
 10273  0105C8  D002               	goto	l1144
 10274  0105CA                     l1143:
 10275                           
 10276                           ; BSR set to: 1
 10277                           ;doprnt.c: 1213: else
 10278                           ;doprnt.c: 1214: c = prec;
 10279  0105CA  C18B  F18D         	movff	printf@prec,printf@c
 10280  0105CE                     l1144:
 10281                           
 10282                           ; BSR set to: 1
 10283                           ;doprnt.c: 1215: prec -= c;
 10284                           
 10285                           ; BSR set to: 1
 10286  0105CE  518D               	movf	printf@c& (0+255),w,b
 10287  0105D0  5F8B               	subwf	printf@prec& (0+255),f,b
 10288  0105D2  0E00               	movlw	0
 10289  0105D4  BF8D               	btfsc	printf@c& (0+255),7,b
 10290  0105D6  0EFF               	movlw	255
 10291  0105D8  5B8C               	subwfb	(printf@prec+1)& (0+255),f,b
 10292                           
 10293                           ; BSR set to: 1
 10294                           ;doprnt.c: 1219: if(c)
 10295  0105DA  518D               	movf	printf@c& (0+255),w,b
 10296  0105DC  B4D8               	btfsc	status,2,c
 10297  0105DE  D003               	goto	l1145
 10298                           
 10299                           ; BSR set to: 1
 10300                           ;doprnt.c: 1221: (putch('.') );
 10301  0105E0  0E2E               	movlw	46
 10302  0105E2  EC7E  F0B1         	call	_putch
 10303  0105E6                     l1145:
 10304                           
 10305                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10306  0105E6  0101               	movlb	1	; () banked
 10307  0105E8  518D               	movf	printf@c& (0+255),w,b
 10308  0105EA  ECB1  F090         	call	_scale
 10309  0105EE  C155  F172         	movff	?_scale,_printf$3142
 10310  0105F2  C156  F173         	movff	?_scale+1,_printf$3142+1
 10311  0105F6  C157  F174         	movff	?_scale+2,_printf$3142+2
 10312                           
 10313                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10314  0105FA  C188  F149         	movff	printf@fval,___ftmul@f2
 10315  0105FE  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 10316  010602  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 10317  010606  C172  F146         	movff	_printf$3142,___ftmul@f1
 10318  01060A  C173  F147         	movff	_printf$3142+1,___ftmul@f1+1
 10319  01060E  C174  F148         	movff	_printf$3142+2,___ftmul@f1+2
 10320  010612  EC56  F0A3         	call	___ftmul	;wreg free
 10321  010616  C146  F155         	movff	?___ftmul,___fttol@f1
 10322  01061A  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 10323  01061E  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 10324  010622  ECDA  F0A2         	call	___fttol	;wreg free
 10325  010626  C155  F184         	movff	?___fttol,printf@val
 10326  01062A  C156  F185         	movff	?___fttol+1,printf@val+1
 10327  01062E  C157  F186         	movff	?___fttol+2,printf@val+2
 10328  010632  C158  F187         	movff	?___fttol+3,printf@val+3
 10329                           
 10330                           ;doprnt.c: 1228: while(c--) {
 10331  010636  D074               	goto	l1146
 10332  010638                     
 10333                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 10334  010638  C184  F117         	movff	printf@val,___lldiv@dividend
 10335  01063C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10336  010640  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10337  010644  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10338  010648  0101               	movlb	1	; () banked
 10339  01064A  518D               	movf	printf@c& (0+255),w,b
 10340  01064C  0D04               	mullw	4
 10341  01064E  0E29               	movlw	low _dpowers
 10342  010650  24F3               	addwf	prodl,w,c
 10343  010652  6EF6               	movwf	tblptrl,c
 10344  010654  0EF3               	movlw	high _dpowers
 10345  010656  20F4               	addwfc	prodh,w,c
 10346  010658  6EF7               	movwf	tblptrh,c
 10347  01065A                     	if	1	;There are 3 active tblptr bytes
 10348  01065A  6AF8               	clrf	tblptru,c
 10349  01065C  0E00               	movlw	low (__mediumconst shr (0+16))
 10350  01065E  22F8               	addwfc	tblptru,f,c
 10351  010660                     	endif
 10352  010660  0009               	tblrd		*+
 10353  010662  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10354  010666  0009               	tblrd		*+
 10355  010668  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10356  01066C  0009               	tblrd		*+
 10357  01066E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10358  010672  000A               	tblrd		*-
 10359  010674  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10360  010678  EC11  F0AA         	call	___lldiv	;wreg free
 10361  01067C  C117  F180         	movff	?___lldiv,printf@tmpval
 10362  010680  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 10363  010684  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 10364  010688  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 10365                           
 10366                           ;doprnt.c: 1230: tmpval.vd %= 10;
 10367  01068C  C180  F124         	movff	printf@tmpval,___llmod@dividend
 10368  010690  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10369  010694  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10370  010698  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10371  01069C  0E0A               	movlw	10
 10372  01069E  0101               	movlb	1	; () banked
 10373  0106A0  6F28               	movwf	___llmod@divisor& (0+255),b
 10374  0106A2  0E00               	movlw	0
 10375  0106A4  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10376  0106A6  0E00               	movlw	0
 10377  0106A8  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10378  0106AA  0E00               	movlw	0
 10379  0106AC  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10380  0106AE  EC2E  F0AC         	call	___llmod	;wreg free
 10381  0106B2  C124  F180         	movff	?___llmod,printf@tmpval
 10382  0106B6  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 10383  0106BA  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 10384  0106BE  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 10385                           
 10386                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 10387  0106C2  0101               	movlb	1	; () banked
 10388  0106C4  5180               	movf	printf@tmpval& (0+255),w,b
 10389  0106C6  0F30               	addlw	48
 10390  0106C8  EC7E  F0B1         	call	_putch
 10391                           
 10392                           ;doprnt.c: 1232: val %= dpowers[c];
 10393  0106CC  C184  F124         	movff	printf@val,___llmod@dividend
 10394  0106D0  C185  F125         	movff	printf@val+1,___llmod@dividend+1
 10395  0106D4  C186  F126         	movff	printf@val+2,___llmod@dividend+2
 10396  0106D8  C187  F127         	movff	printf@val+3,___llmod@dividend+3
 10397  0106DC  0101               	movlb	1	; () banked
 10398  0106DE  518D               	movf	printf@c& (0+255),w,b
 10399  0106E0  0D04               	mullw	4
 10400  0106E2  0E29               	movlw	low _dpowers
 10401  0106E4  24F3               	addwf	prodl,w,c
 10402  0106E6  6EF6               	movwf	tblptrl,c
 10403  0106E8  0EF3               	movlw	high _dpowers
 10404  0106EA  20F4               	addwfc	prodh,w,c
 10405  0106EC  6EF7               	movwf	tblptrh,c
 10406  0106EE                     	if	1	;There are 3 active tblptr bytes
 10407  0106EE  6AF8               	clrf	tblptru,c
 10408  0106F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10409  0106F2  22F8               	addwfc	tblptru,f,c
 10410  0106F4                     	endif
 10411  0106F4  0009               	tblrd		*+
 10412  0106F6  CFF5 F128          	movff	tablat,___llmod@divisor
 10413  0106FA  0009               	tblrd		*+
 10414  0106FC  CFF5 F129          	movff	tablat,___llmod@divisor+1
 10415  010700  0009               	tblrd		*+
 10416  010702  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 10417  010706  000A               	tblrd		*-
 10418  010708  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 10419  01070C  EC2E  F0AC         	call	___llmod	;wreg free
 10420  010710  C124  F184         	movff	?___llmod,printf@val
 10421  010714  C125  F185         	movff	?___llmod+1,printf@val+1
 10422  010718  C126  F186         	movff	?___llmod+2,printf@val+2
 10423  01071C  C127  F187         	movff	?___llmod+3,printf@val+3
 10424  010720                     l1146:
 10425  010720  0101               	movlb	1	; () banked
 10426  010722  078D               	decf	printf@c& (0+255),f,b
 10427  010724  298D               	incf	printf@c& (0+255),w,b
 10428  010726  B4D8               	btfsc	status,2,c
 10429  010728  D008               	goto	l1149
 10430  01072A  D786               	goto	l1147
 10431  01072C                     
 10432                           ; BSR set to: 1
 10433                           ;doprnt.c: 1236: (putch('0') );
 10434                           
 10435                           ; BSR set to: 1
 10436  01072C  0E30               	movlw	48
 10437  01072E  EC7E  F0B1         	call	_putch
 10438                           
 10439                           ;doprnt.c: 1237: prec--;
 10440  010732  0101               	movlb	1	; () banked
 10441  010734  078B               	decf	printf@prec& (0+255),f,b
 10442  010736  A0D8               	btfss	status,0,c
 10443  010738  078C               	decf	(printf@prec+1)& (0+255),f,b
 10444  01073A                     l1149:
 10445                           
 10446                           ; BSR set to: 1
 10447                           
 10448                           ; BSR set to: 1
 10449  01073A  518B               	movf	printf@prec& (0+255),w,b
 10450  01073C  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 10451  01073E  B4D8               	btfsc	status,2,c
 10452  010740  D157               	goto	u10650
 10453  010742  D7F4               	goto	l1150
 10454  010744                     l1114:
 10455                           
 10456                           ; BSR set to: 1
 10457                           ;doprnt.c: 1246: }
 10458                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 10459                           
 10460                           ; BSR set to: 1
 10461  010744  0EC0               	movlw	192
 10462  010746  157C               	andwf	printf@flag& (0+255),w,b
 10463  010748  6F6C               	movwf	??_printf& (0+255),b
 10464  01074A  0E00               	movlw	0
 10465  01074C  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10466  01074E  6F6D               	movwf	(??_printf+1)& (0+255),b
 10467  010750  516C               	movf	??_printf& (0+255),w,b
 10468  010752  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10469  010754  A4D8               	btfss	status,2,c
 10470  010756  D01E               	goto	l1152
 10471                           
 10472                           ; BSR set to: 1
 10473                           ;doprnt.c: 1253: {
 10474                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10475  010758  C17A  FFD9         	movff	printf@ap,fsr2l
 10476  01075C  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10477  010760  CFDE F184          	movff	postinc2,printf@val
 10478  010764  CFDD F185          	movff	postdec2,printf@val+1
 10479  010768  0E00               	movlw	0
 10480  01076A  BF85               	btfsc	(printf@val+1)& (0+255),7,b
 10481  01076C  0EFF               	movlw	-1
 10482  01076E  6F86               	movwf	(printf@val+2)& (0+255),b
 10483  010770  6F87               	movwf	(printf@val+3)& (0+255),b
 10484                           
 10485                           ; BSR set to: 1
 10486  010772  0E02               	movlw	2
 10487  010774  277A               	addwf	printf@ap& (0+255),f,b
 10488  010776  0E00               	movlw	0
 10489  010778  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10490                           
 10491                           ; BSR set to: 1
 10492                           ;doprnt.c: 1261: if((long)val < 0) {
 10493  01077A  AF87               	btfss	(printf@val+3)& (0+255),7,b
 10494  01077C  D01D               	goto	l1154
 10495                           
 10496                           ; BSR set to: 1
 10497                           ;doprnt.c: 1262: flag |= 0x03;
 10498  01077E  0E03               	movlw	3
 10499  010780  137C               	iorwf	printf@flag& (0+255),f,b
 10500                           
 10501                           ; BSR set to: 1
 10502                           ;doprnt.c: 1263: val = -val;
 10503  010782  1F87               	comf	(printf@val+3)& (0+255),f,b
 10504  010784  1F86               	comf	(printf@val+2)& (0+255),f,b
 10505  010786  1F85               	comf	(printf@val+1)& (0+255),f,b
 10506  010788  6D84               	negf	printf@val& (0+255),b
 10507  01078A  0E00               	movlw	0
 10508  01078C  2385               	addwfc	(printf@val+1)& (0+255),f,b
 10509  01078E  2386               	addwfc	(printf@val+2)& (0+255),f,b
 10510  010790  2387               	addwfc	(printf@val+3)& (0+255),f,b
 10511                           
 10512                           ; BSR set to: 1
 10513                           ;doprnt.c: 1264: }
 10514                           ;doprnt.c: 1266: }
 10515  010792  D012               	goto	l1154
 10516  010794                     l1152:
 10517                           
 10518                           ; BSR set to: 1
 10519                           ;doprnt.c: 1268: else
 10520                           ;doprnt.c: 1273: {
 10521                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10522                           
 10523                           ; BSR set to: 1
 10524  010794  C17A  FFD9         	movff	printf@ap,fsr2l
 10525  010798  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10526  01079C  CFDE F16C          	movff	postinc2,??_printf
 10527  0107A0  CFDD F16D          	movff	postdec2,??_printf+1
 10528  0107A4  C16C  F184         	movff	??_printf,printf@val
 10529  0107A8  C16D  F185         	movff	??_printf+1,printf@val+1
 10530  0107AC  6B86               	clrf	(printf@val+2)& (0+255),b
 10531  0107AE  6B87               	clrf	(printf@val+3)& (0+255),b
 10532                           
 10533                           ; BSR set to: 1
 10534  0107B0  0E02               	movlw	2
 10535  0107B2  277A               	addwf	printf@ap& (0+255),f,b
 10536  0107B4  0E00               	movlw	0
 10537  0107B6  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10538  0107B8                     l1154:
 10539                           
 10540                           ; BSR set to: 1
 10541                           ;doprnt.c: 1287: }
 10542                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 10543                           
 10544                           ; BSR set to: 1
 10545  0107B8  518B               	movf	printf@prec& (0+255),w,b
 10546  0107BA  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 10547  0107BC  A4D8               	btfss	status,2,c
 10548  0107BE  D04B               	goto	l1156
 10549                           
 10550                           ; BSR set to: 1
 10551  0107C0  5184               	movf	printf@val& (0+255),w,b
 10552  0107C2  1185               	iorwf	(printf@val+1)& (0+255),w,b
 10553  0107C4  1186               	iorwf	(printf@val+2)& (0+255),w,b
 10554  0107C6  1187               	iorwf	(printf@val+3)& (0+255),w,b
 10555  0107C8  A4D8               	btfss	status,2,c
 10556  0107CA  D045               	goto	l1156
 10557                           
 10558                           ; BSR set to: 1
 10559                           ;doprnt.c: 1291: prec++;
 10560  0107CC  4B8B               	infsnz	printf@prec& (0+255),f,b
 10561  0107CE  2B8C               	incf	(printf@prec+1)& (0+255),f,b
 10562                           
 10563                           ; BSR set to: 1
 10564                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 10565  0107D0  D042               	goto	l1156
 10566  0107D2                     
 10567                           ; BSR set to: 1
 10568                           ;doprnt.c: 1302: case 0xC0:
 10569                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10570                           
 10571                           ; BSR set to: 1
 10572                           
 10573                           ; BSR set to: 1
 10574  0107D2  0E01               	movlw	1
 10575  0107D4  6F8D               	movwf	printf@c& (0+255),b
 10576  0107D6                     l8991:
 10577                           
 10578                           ; BSR set to: 1
 10579  0107D6  0E0A               	movlw	10
 10580  0107D8  198D               	xorwf	printf@c& (0+255),w,b
 10581  0107DA  B4D8               	btfsc	status,2,c
 10582  0107DC  D047               	goto	l1162
 10583                           
 10584                           ; BSR set to: 1
 10585                           ;doprnt.c: 1306: if(val < dpowers[c])
 10586                           
 10587                           ; BSR set to: 1
 10588                           
 10589                           ; BSR set to: 1
 10590  0107DE  518D               	movf	printf@c& (0+255),w,b
 10591  0107E0  0D04               	mullw	4
 10592  0107E2  0E29               	movlw	low _dpowers
 10593  0107E4  24F3               	addwf	prodl,w,c
 10594  0107E6  6EF6               	movwf	tblptrl,c
 10595  0107E8  0EF3               	movlw	high _dpowers
 10596  0107EA  20F4               	addwfc	prodh,w,c
 10597  0107EC  6EF7               	movwf	tblptrh,c
 10598  0107EE                     	if	1	;There are 3 active tblptr bytes
 10599  0107EE  6AF8               	clrf	tblptru,c
 10600  0107F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10601  0107F2  22F8               	addwfc	tblptru,f,c
 10602  0107F4                     	endif
 10603  0107F4  0009               	tblrd		*+
 10604  0107F6  50F5               	movf	tablat,w,c
 10605  0107F8  5D84               	subwf	printf@val& (0+255),w,b
 10606  0107FA  0009               	tblrd		*+
 10607  0107FC  50F5               	movf	tablat,w,c
 10608  0107FE  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10609  010800  0009               	tblrd		*+
 10610  010802  50F5               	movf	tablat,w,c
 10611  010804  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10612  010806  0009               	tblrd		*+
 10613  010808  50F5               	movf	tablat,w,c
 10614  01080A  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10615  01080C  A0D8               	btfss	status,0,c
 10616  01080E  D02E               	goto	l1162
 10617                           
 10618                           ; BSR set to: 1
 10619                           
 10620                           ; BSR set to: 1
 10621                           
 10622                           ; BSR set to: 1
 10623                           ;doprnt.c: 1307: break;
 10624  010810  2B8D               	incf	printf@c& (0+255),f,b
 10625  010812  D7E1               	goto	l8991
 10626  010814                     
 10627                           ; BSR set to: 1
 10628                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10629                           
 10630                           ; BSR set to: 1
 10631  010814  0E01               	movlw	1
 10632  010816  6F8D               	movwf	printf@c& (0+255),b
 10633  010818                     l9005:
 10634                           
 10635                           ; BSR set to: 1
 10636  010818  0E08               	movlw	8
 10637  01081A  198D               	xorwf	printf@c& (0+255),w,b
 10638  01081C  B4D8               	btfsc	status,2,c
 10639  01081E  D026               	goto	l1162
 10640                           
 10641                           ; BSR set to: 1
 10642                           ;doprnt.c: 1317: if(val < hexpowers[c])
 10643                           
 10644                           ; BSR set to: 1
 10645                           
 10646                           ; BSR set to: 1
 10647  010820  518D               	movf	printf@c& (0+255),w,b
 10648  010822  0D04               	mullw	4
 10649  010824  0E9F               	movlw	low _hexpowers
 10650  010826  24F3               	addwf	prodl,w,c
 10651  010828  6EF6               	movwf	tblptrl,c
 10652  01082A  0EF3               	movlw	high _hexpowers
 10653  01082C  20F4               	addwfc	prodh,w,c
 10654  01082E  6EF7               	movwf	tblptrh,c
 10655  010830                     	if	1	;There are 3 active tblptr bytes
 10656  010830  6AF8               	clrf	tblptru,c
 10657  010832  0E00               	movlw	low (__mediumconst shr (0+16))
 10658  010834  22F8               	addwfc	tblptru,f,c
 10659  010836                     	endif
 10660  010836  0009               	tblrd		*+
 10661  010838  50F5               	movf	tablat,w,c
 10662  01083A  5D84               	subwf	printf@val& (0+255),w,b
 10663  01083C  0009               	tblrd		*+
 10664  01083E  50F5               	movf	tablat,w,c
 10665  010840  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10666  010842  0009               	tblrd		*+
 10667  010844  50F5               	movf	tablat,w,c
 10668  010846  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10669  010848  0009               	tblrd		*+
 10670  01084A  50F5               	movf	tablat,w,c
 10671  01084C  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10672  01084E  A0D8               	btfss	status,0,c
 10673  010850  D00D               	goto	l1162
 10674                           
 10675                           ; BSR set to: 1
 10676                           
 10677                           ; BSR set to: 1
 10678                           
 10679                           ; BSR set to: 1
 10680                           ;doprnt.c: 1318: break;
 10681  010852  2B8D               	incf	printf@c& (0+255),f,b
 10682  010854  D7E1               	goto	l9005
 10683  010856                     l1156:
 10684                           
 10685                           ; BSR set to: 1
 10686                           
 10687                           ; BSR set to: 1
 10688  010856  517C               	movf	printf@flag& (0+255),w,b
 10689  010858  0BC0               	andlw	192
 10690                           
 10691                           ; Switch size 1, requested type "space"
 10692                           ; Number of cases is 3, Range of values is 0 to 192
 10693                           ; switch strategies available:
 10694                           ; Name         Instructions Cycles
 10695                           ; simple_byte           10     6 (average)
 10696                           ;	Chosen strategy is simple_byte
 10697  01085A  0A00               	xorlw	0	; case 0
 10698  01085C  B4D8               	btfsc	status,2,c
 10699  01085E  D7B9               	goto	l1157
 10700  010860  0A80               	xorlw	128	; case 128
 10701  010862  B4D8               	btfsc	status,2,c
 10702  010864  D7D7               	goto	l1163
 10703  010866  0A40               	xorlw	64	; case 192
 10704  010868  B4D8               	btfsc	status,2,c
 10705  01086A  D7B3               	goto	l1157
 10706  01086C                     l1162:
 10707                           
 10708                           ; BSR set to: 1
 10709                           ;doprnt.c: 1339: if(c < prec)
 10710                           
 10711                           ; BSR set to: 1
 10712  01086C  0E80               	movlw	128
 10713  01086E  BF8D               	btfsc	printf@c& (0+255),7,b
 10714  010870  0E7F               	movlw	127
 10715  010872  6F6C               	movwf	??_printf& (0+255),b
 10716  010874  518B               	movf	printf@prec& (0+255),w,b
 10717  010876  5D8D               	subwf	printf@c& (0+255),w,b
 10718  010878  518C               	movf	(printf@prec+1)& (0+255),w,b
 10719  01087A  0A80               	xorlw	128
 10720  01087C  596C               	subwfb	??_printf& (0+255),w,b
 10721  01087E  B0D8               	btfsc	status,0,c
 10722  010880  D003               	goto	l1167
 10723                           
 10724                           ; BSR set to: 1
 10725                           ;doprnt.c: 1340: c = prec;
 10726  010882  C18B  F18D         	movff	printf@prec,printf@c
 10727  010886  D010               	goto	l1169
 10728  010888                     l1167:
 10729                           
 10730                           ; BSR set to: 1
 10731                           ;doprnt.c: 1341: else if(prec < c)
 10732                           
 10733                           ; BSR set to: 1
 10734  010888  518C               	movf	(printf@prec+1)& (0+255),w,b
 10735  01088A  0A80               	xorlw	128
 10736  01088C  6F6C               	movwf	??_printf& (0+255),b
 10737  01088E  518D               	movf	printf@c& (0+255),w,b
 10738  010890  5D8B               	subwf	printf@prec& (0+255),w,b
 10739  010892  0E80               	movlw	128
 10740  010894  BF8D               	btfsc	printf@c& (0+255),7,b
 10741  010896  0E7F               	movlw	127
 10742  010898  596C               	subwfb	??_printf& (0+255),w,b
 10743  01089A  B0D8               	btfsc	status,0,c
 10744  01089C  D005               	goto	l1169
 10745                           
 10746                           ; BSR set to: 1
 10747                           ;doprnt.c: 1342: prec = c;
 10748  01089E  518D               	movf	printf@c& (0+255),w,b
 10749  0108A0  6F8B               	movwf	printf@prec& (0+255),b
 10750  0108A2  6B8C               	clrf	(printf@prec+1)& (0+255),b
 10751  0108A4  BF8B               	btfsc	printf@prec& (0+255),7,b
 10752  0108A6  078C               	decf	(printf@prec+1)& (0+255),f,b
 10753  0108A8                     l1169:
 10754                           
 10755                           ; BSR set to: 1
 10756                           ;doprnt.c: 1422: {
 10757                           ;doprnt.c: 1438: if(flag & 0x03)
 10758                           
 10759                           ; BSR set to: 1
 10760                           
 10761                           ; BSR set to: 1
 10762  0108A8  0E03               	movlw	3
 10763  0108AA  157C               	andwf	printf@flag& (0+255),w,b
 10764  0108AC  6F6C               	movwf	??_printf& (0+255),b
 10765  0108AE  0E00               	movlw	0
 10766  0108B0  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10767  0108B2  6F6D               	movwf	(??_printf+1)& (0+255),b
 10768  0108B4  516C               	movf	??_printf& (0+255),w,b
 10769  0108B6  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10770  0108B8  B4D8               	btfsc	status,2,c
 10771  0108BA  D091               	goto	l1171
 10772                           
 10773                           ; BSR set to: 1
 10774                           ;doprnt.c: 1439: (putch('-') );
 10775  0108BC  0E2D               	movlw	45
 10776  0108BE  EC7E  F0B1         	call	_putch
 10777                           
 10778                           ;doprnt.c: 1469: }
 10779                           ;doprnt.c: 1474: while(prec--) {
 10780  0108C2  D08D               	goto	l1171
 10781  0108C4                     
 10782                           ;doprnt.c: 1486: case 0xC0:
 10783                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10784  0108C4  C18B  F16C         	movff	printf@prec,??_printf
 10785  0108C8  C18C  F16D         	movff	printf@prec+1,??_printf+1
 10786  0108CC  0101               	movlb	1	; () banked
 10787  0108CE  90D8               	bcf	status,0,c
 10788  0108D0  376C               	rlcf	??_printf& (0+255),f,b
 10789  0108D2  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10790  0108D4  90D8               	bcf	status,0,c
 10791  0108D6  376C               	rlcf	??_printf& (0+255),f,b
 10792  0108D8  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10793  0108DA  0E29               	movlw	low _dpowers
 10794  0108DC  256C               	addwf	??_printf& (0+255),w,b
 10795  0108DE  6EF6               	movwf	tblptrl,c
 10796  0108E0  0EF3               	movlw	high _dpowers
 10797  0108E2  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10798  0108E4  6EF7               	movwf	tblptrh,c
 10799  0108E6                     	if	1	;There are 3 active tblptr bytes
 10800  0108E6  6AF8               	clrf	tblptru,c
 10801  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
 10802  0108EA  22F8               	addwfc	tblptru,f,c
 10803  0108EC                     	endif
 10804  0108EC  0009               	tblrd		*+
 10805  0108EE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10806  0108F2  0009               	tblrd		*+
 10807  0108F4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10808  0108F8  0009               	tblrd		*+
 10809  0108FA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10810  0108FE  000A               	tblrd		*-
 10811  010900  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10812  010904  C184  F117         	movff	printf@val,___lldiv@dividend
 10813  010908  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10814  01090C  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10815  010910  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10816  010914  EC11  F0AA         	call	___lldiv	;wreg free
 10817  010918  C117  F124         	movff	?___lldiv,___llmod@dividend
 10818  01091C  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 10819  010920  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 10820  010924  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 10821  010928  0E0A               	movlw	10
 10822  01092A  0101               	movlb	1	; () banked
 10823  01092C  6F28               	movwf	___llmod@divisor& (0+255),b
 10824  01092E  0E00               	movlw	0
 10825  010930  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10826  010932  0E00               	movlw	0
 10827  010934  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10828  010936  0E00               	movlw	0
 10829  010938  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10830  01093A  EC2E  F0AC         	call	___llmod	;wreg free
 10831  01093E  0101               	movlb	1	; () banked
 10832  010940  5124               	movf	?___llmod& (0+255),w,b
 10833  010942  0F30               	addlw	48
 10834  010944  6F8D               	movwf	printf@c& (0+255),b
 10835                           
 10836                           ;doprnt.c: 1491: break;
 10837  010946  D048               	goto	l1176
 10838  010948                     
 10839                           ; BSR set to: 1
 10840                           ;doprnt.c: 1499: {
 10841                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 10842                           
 10843                           ; BSR set to: 1
 10844  010948  C184  F117         	movff	printf@val,___lldiv@dividend
 10845  01094C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10846  010950  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10847  010954  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10848  010958  C18B  F16C         	movff	printf@prec,??_printf
 10849  01095C  C18C  F16D         	movff	printf@prec+1,??_printf+1
 10850  010960  90D8               	bcf	status,0,c
 10851  010962  376C               	rlcf	??_printf& (0+255),f,b
 10852  010964  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10853  010966  90D8               	bcf	status,0,c
 10854  010968  376C               	rlcf	??_printf& (0+255),f,b
 10855  01096A  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10856  01096C  0E9F               	movlw	low _hexpowers
 10857  01096E  256C               	addwf	??_printf& (0+255),w,b
 10858  010970  6EF6               	movwf	tblptrl,c
 10859  010972  0EF3               	movlw	high _hexpowers
 10860  010974  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10861  010976  6EF7               	movwf	tblptrh,c
 10862  010978                     	if	1	;There are 3 active tblptr bytes
 10863  010978  6AF8               	clrf	tblptru,c
 10864  01097A  0E00               	movlw	low (__mediumconst shr (0+16))
 10865  01097C  22F8               	addwfc	tblptru,f,c
 10866  01097E                     	endif
 10867  01097E  0009               	tblrd		*+
 10868  010980  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10869  010984  0009               	tblrd		*+
 10870  010986  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10871  01098A  0009               	tblrd		*+
 10872  01098C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10873  010990  000A               	tblrd		*-
 10874  010992  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10875  010996  EC11  F0AA         	call	___lldiv	;wreg free
 10876  01099A  0101               	movlb	1	; () banked
 10877  01099C  5117               	movf	?___lldiv& (0+255),w,b
 10878  01099E  0B0F               	andlw	15
 10879  0109A0  6F75               	movwf	printf@idx& (0+255),b
 10880                           
 10881                           ; BSR set to: 1
 10882                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 10883  0109A2  5175               	movf	printf@idx& (0+255),w,b
 10884  0109A4  0D01               	mullw	1
 10885  0109A6  0EF8               	movlw	low STR_91
 10886  0109A8  24F3               	addwf	prodl,w,c
 10887  0109AA  6EF6               	movwf	tblptrl,c
 10888  0109AC  0EFE               	movlw	high STR_91
 10889  0109AE  20F4               	addwfc	prodh,w,c
 10890  0109B0  6EF7               	movwf	tblptrh,c
 10891  0109B2                     	if	1	;There are 3 active tblptr bytes
 10892  0109B2  6AF8               	clrf	tblptru,c
 10893  0109B4  0E00               	movlw	low (__mediumconst shr (0+16))
 10894  0109B6  22F8               	addwfc	tblptru,f,c
 10895  0109B8                     	endif
 10896  0109B8  0008               	tblrd		*
 10897  0109BA  CFF5 F18D          	movff	tablat,printf@c
 10898                           
 10899                           ; BSR set to: 1
 10900                           ;doprnt.c: 1523: }
 10901                           
 10902                           ;doprnt.c: 1508: }
 10903                           ;doprnt.c: 1510: break;
 10904  0109BE  D00C               	goto	l1176
 10905  0109C0                     l9041:
 10906  0109C0  0101               	movlb	1	; () banked
 10907  0109C2  517C               	movf	printf@flag& (0+255),w,b
 10908  0109C4  0BC0               	andlw	192
 10909                           
 10910                           ; Switch size 1, requested type "space"
 10911                           ; Number of cases is 3, Range of values is 0 to 192
 10912                           ; switch strategies available:
 10913                           ; Name         Instructions Cycles
 10914                           ; simple_byte           10     6 (average)
 10915                           ;	Chosen strategy is simple_byte
 10916  0109C6  0A00               	xorlw	0	; case 0
 10917  0109C8  B4D8               	btfsc	status,2,c
 10918  0109CA  D77C               	goto	l1174
 10919  0109CC  0A80               	xorlw	128	; case 128
 10920  0109CE  B4D8               	btfsc	status,2,c
 10921  0109D0  D7BB               	goto	l1177
 10922  0109D2  0A40               	xorlw	64	; case 192
 10923  0109D4  B4D8               	btfsc	status,2,c
 10924  0109D6  D776               	goto	l1174
 10925  0109D8                     l1176:
 10926                           
 10927                           ; BSR set to: 1
 10928                           ;doprnt.c: 1524: (putch(c) );
 10929                           
 10930                           ; BSR set to: 1
 10931  0109D8  518D               	movf	printf@c& (0+255),w,b
 10932  0109DA  EC7E  F0B1         	call	_putch
 10933  0109DE                     l1171:
 10934  0109DE  0101               	movlb	1	; () banked
 10935  0109E0  078B               	decf	printf@prec& (0+255),f,b
 10936  0109E2  A0D8               	btfss	status,0,c
 10937  0109E4  078C               	decf	(printf@prec+1)& (0+255),f,b
 10938  0109E6  298B               	incf	printf@prec& (0+255),w,b
 10939  0109E8  E1EB               	bnz	l9041
 10940  0109EA  298C               	incf	(printf@prec+1)& (0+255),w,b
 10941  0109EC  A4D8               	btfss	status,2,c
 10942  0109EE  D7E8               	goto	l1173
 10943  0109F0                     u10650:
 10944                           
 10945                           ; BSR set to: 1
 10946                           
 10947                           ; BSR set to: 1
 10948  0109F0  0101               	movlb	1	; () banked
 10949  0109F2  5164               	movf	printf@f& (0+255),w,b
 10950  0109F4  6F6C               	movwf	??_printf& (0+255),b
 10951  0109F6  5165               	movf	(printf@f+1)& (0+255),w,b
 10952  0109F8  6F6D               	movwf	(??_printf+1)& (0+255),b
 10953  0109FA  4B64               	infsnz	printf@f& (0+255),f,b
 10954  0109FC  2B65               	incf	(printf@f+1)& (0+255),f,b
 10955  0109FE  C16C  FFF6         	movff	??_printf,tblptrl
 10956  010A02  C16D  FFF7         	movff	??_printf+1,tblptrh
 10957  010A06  0E00               	movlw	low (__mediumconst shr (0+16))
 10958  010A08  6EF8               	movwf	tblptru,c
 10959  010A0A  0E0D               	movlw	(high __ramtop+-1)
 10960  010A0C  64F7               	cpfsgt	tblptrh,c
 10961  010A0E  D003               	bra	u10667
 10962  010A10  0008               	tblrd		*
 10963  010A12  50F5               	movf	tablat,w,c
 10964  010A14  D005               	bra	u10660
 10965  010A16                     u10667:
 10966  010A16  CFF6 FFE1          	movff	tblptrl,fsr1l
 10967  010A1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10968  010A1E  50E7               	movf	indf1,w,c
 10969  010A20                     u10660:
 10970  010A20  0101               	movlb	1	; () banked
 10971  010A22  6F8D               	movwf	printf@c& (0+255),b
 10972  010A24  518D               	movf	printf@c& (0+255),w,b
 10973  010A26  B4D8               	btfsc	status,2,c
 10974  010A28  0012               	return	
 10975  010A2A  EF07  F080         	goto	l1091
 10976  010A2E                     __end_of_printf:
 10977                           	opt stack 0
 10978                           tblptru	equ	0xFF8
 10979                           tblptrh	equ	0xFF7
 10980                           tblptrl	equ	0xFF6
 10981                           tablat	equ	0xFF5
 10982                           prodh	equ	0xFF4
 10983                           prodl	equ	0xFF3
 10984                           intcon	equ	0xFF2
 10985                           postinc0	equ	0xFEE
 10986                           wreg	equ	0xFE8
 10987                           indf1	equ	0xFE7
 10988                           postdec1	equ	0xFE5
 10989                           fsr1h	equ	0xFE2
 10990                           fsr1l	equ	0xFE1
 10991                           indf2	equ	0xFDF
 10992                           postinc2	equ	0xFDE
 10993                           postdec2	equ	0xFDD
 10994                           fsr2h	equ	0xFDA
 10995                           fsr2l	equ	0xFD9
 10996                           status	equ	0xFD8
 10997                           
 10998 ;; *************** function _scale *****************
 10999 ;; Defined at:
 11000 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;  scl             1    wreg     char 
 11003 ;; Auto vars:     Size  Location     Type
 11004 ;;  scl             1   91[BANK1 ] char 
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  3   85[BANK1 ] char 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11014 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11015 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11017 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11018 ;;Total ram usage:        7 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:   16
 11021 ;; This function calls:
 11022 ;;		___awdiv
 11023 ;;		___awmod
 11024 ;;		___ftmul
 11025 ;;		___wmul
 11026 ;; This function is called by:
 11027 ;;		_printf
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text20
 11032  012162                     __ptext20:
 11033                           	opt stack 0
 11034  012162                     _scale:
 11035                           	opt stack 11
 11036                           
 11037                           ; BSR set to: 1
 11038                           ;incstack = 0
 11039                           ;scale@scl stored from wreg
 11040  012162  0101               	movlb	1	; () banked
 11041  012164  6F5B               	movwf	scale@scl& (0+255),b
 11042                           
 11043                           ;doprnt.c: 428: if(scl < 0) {
 11044  012166  0101               	movlb	1	; () banked
 11045  012168  AF5B               	btfss	scale@scl& (0+255),7,b
 11046  01216A  D11E               	goto	l1080
 11047                           
 11048                           ; BSR set to: 1
 11049                           ;doprnt.c: 429: scl = -scl;
 11050  01216C  6D5B               	negf	scale@scl& (0+255),b
 11051                           
 11052                           ;doprnt.c: 430: if(scl>=110)
 11053  01216E  515B               	movf	scale@scl& (0+255),w,b
 11054  012170  0A80               	xorlw	128
 11055  012172  0F12               	addlw	-238
 11056  012174  A0D8               	btfss	status,0,c
 11057  012176  D0A0               	goto	l1081
 11058                           
 11059                           ; BSR set to: 1
 11060                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11061  012178  0E00               	movlw	0
 11062  01217A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11063  01217C  0E03               	movlw	3
 11064  01217E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11065  012180  0E00               	movlw	0
 11066  012182  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11067  012184  0E0A               	movlw	10
 11068  012186  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11069  012188  0E00               	movlw	0
 11070  01218A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11071  01218C  0E64               	movlw	100
 11072  01218E  6F19               	movwf	___awmod@divisor& (0+255),b
 11073  012190  515B               	movf	scale@scl& (0+255),w,b
 11074  012192  6F17               	movwf	___awmod@dividend& (0+255),b
 11075  012194  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11076  012196  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11077  012198  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11078  01219A  EC89  F0AB         	call	___awmod	;wreg free
 11079  01219E  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11080  0121A2  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11081  0121A6  ECCE  F0A9         	call	___awdiv	;wreg free
 11082  0121AA  0E09               	movlw	9
 11083  0121AC  0101               	movlb	1	; () banked
 11084  0121AE  251D               	addwf	?___awdiv& (0+255),w,b
 11085  0121B0  6F25               	movwf	___wmul@multiplier& (0+255),b
 11086  0121B2  0E00               	movlw	0
 11087  0121B4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11088  0121B6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11089  0121B8  EC67  F0B0         	call	___wmul	;wreg free
 11090  0121BC  0E78               	movlw	low __npowers_
 11091  0121BE  0101               	movlb	1	; () banked
 11092  0121C0  2525               	addwf	?___wmul& (0+255),w,b
 11093  0121C2  6EF6               	movwf	tblptrl,c
 11094  0121C4  0EF3               	movlw	high __npowers_
 11095  0121C6  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11096  0121C8  6EF7               	movwf	tblptrh,c
 11097  0121CA                     	if	1	;There are 3 active tblptr bytes
 11098  0121CA  6AF8               	clrf	tblptru,c
 11099  0121CC  0E00               	movlw	low (__mediumconst shr (0+16))
 11100  0121CE  22F8               	addwfc	tblptru,f,c
 11101  0121D0                     	endif
 11102  0121D0  0009               	tblrd		*+
 11103  0121D2  CFF5 F149          	movff	tablat,___ftmul@f2
 11104  0121D6  0009               	tblrd		*+
 11105  0121D8  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11106  0121DC  000A               	tblrd		*-
 11107  0121DE  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11108  0121E2  0E00               	movlw	0
 11109  0121E4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11110  0121E6  0E64               	movlw	100
 11111  0121E8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11112  0121EA  515B               	movf	scale@scl& (0+255),w,b
 11113  0121EC  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11114  0121EE  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11115  0121F0  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11116  0121F2  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11117  0121F4  ECCE  F0A9         	call	___awdiv	;wreg free
 11118  0121F8  0E12               	movlw	18
 11119  0121FA  0101               	movlb	1	; () banked
 11120  0121FC  251D               	addwf	?___awdiv& (0+255),w,b
 11121  0121FE  6F25               	movwf	___wmul@multiplier& (0+255),b
 11122  012200  0E00               	movlw	0
 11123  012202  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11124  012204  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11125  012206  0E00               	movlw	0
 11126  012208  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11127  01220A  0E03               	movlw	3
 11128  01220C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11129  01220E  EC67  F0B0         	call	___wmul	;wreg free
 11130  012212  0E78               	movlw	low __npowers_
 11131  012214  0101               	movlb	1	; () banked
 11132  012216  2525               	addwf	?___wmul& (0+255),w,b
 11133  012218  6EF6               	movwf	tblptrl,c
 11134  01221A  0EF3               	movlw	high __npowers_
 11135  01221C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11136  01221E  6EF7               	movwf	tblptrh,c
 11137  012220                     	if	1	;There are 3 active tblptr bytes
 11138  012220  6AF8               	clrf	tblptru,c
 11139  012222  0E00               	movlw	low (__mediumconst shr (0+16))
 11140  012224  22F8               	addwfc	tblptru,f,c
 11141  012226                     	endif
 11142  012226  0009               	tblrd		*+
 11143  012228  CFF5 F146          	movff	tablat,___ftmul@f1
 11144  01222C  0009               	tblrd		*+
 11145  01222E  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11146  012232  000A               	tblrd		*-
 11147  012234  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11148  012238  EC56  F0A3         	call	___ftmul	;wreg free
 11149  01223C  C146  F158         	movff	?___ftmul,_scale$3141
 11150  012240  C147  F159         	movff	?___ftmul+1,_scale$3141+1
 11151  012244  C148  F15A         	movff	?___ftmul+2,_scale$3141+2
 11152                           
 11153                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 11154  012248  C158  F146         	movff	_scale$3141,___ftmul@f1
 11155  01224C  C159  F147         	movff	_scale$3141+1,___ftmul@f1+1
 11156  012250  C15A  F148         	movff	_scale$3141+2,___ftmul@f1+2
 11157  012254  0E00               	movlw	0
 11158  012256  0101               	movlb	1	; () banked
 11159  012258  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11160  01225A  0E03               	movlw	3
 11161  01225C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11162  01225E  0E00               	movlw	0
 11163  012260  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11164  012262  0E0A               	movlw	10
 11165  012264  6F19               	movwf	___awmod@divisor& (0+255),b
 11166  012266  515B               	movf	scale@scl& (0+255),w,b
 11167  012268  6F17               	movwf	___awmod@dividend& (0+255),b
 11168  01226A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11169  01226C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11170  01226E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11171  012270  EC89  F0AB         	call	___awmod	;wreg free
 11172  012274  C117  F125         	movff	?___awmod,___wmul@multiplier
 11173  012278  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11174  01227C  EC67  F0B0         	call	___wmul	;wreg free
 11175  012280  0E78               	movlw	low __npowers_
 11176  012282  0101               	movlb	1	; () banked
 11177  012284  2525               	addwf	?___wmul& (0+255),w,b
 11178  012286  6EF6               	movwf	tblptrl,c
 11179  012288  0EF3               	movlw	high __npowers_
 11180  01228A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11181  01228C  6EF7               	movwf	tblptrh,c
 11182  01228E                     	if	1	;There are 3 active tblptr bytes
 11183  01228E  6AF8               	clrf	tblptru,c
 11184  012290  0E00               	movlw	low (__mediumconst shr (0+16))
 11185  012292  22F8               	addwfc	tblptru,f,c
 11186  012294                     	endif
 11187  012294  0009               	tblrd		*+
 11188  012296  CFF5 F149          	movff	tablat,___ftmul@f2
 11189  01229A  0009               	tblrd		*+
 11190  01229C  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11191  0122A0  000A               	tblrd		*-
 11192  0122A2  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11193  0122A6  EC56  F0A3         	call	___ftmul	;wreg free
 11194  0122AA  C146  F155         	movff	?___ftmul,?_scale
 11195  0122AE  C147  F156         	movff	?___ftmul+1,?_scale+1
 11196  0122B2  C148  F157         	movff	?___ftmul+2,?_scale+2
 11197  0122B6  0012               	return	
 11198  0122B8                     l1081:
 11199                           
 11200                           ;doprnt.c: 432: else if(scl > 10)
 11201  0122B8  0101               	movlb	1	; () banked
 11202  0122BA  515B               	movf	scale@scl& (0+255),w,b
 11203  0122BC  0A80               	xorlw	128
 11204  0122BE  0F75               	addlw	-139
 11205  0122C0  A0D8               	btfss	status,0,c
 11206  0122C2  D05C               	goto	l1084
 11207                           
 11208                           ; BSR set to: 1
 11209                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 11210  0122C4  0E00               	movlw	0
 11211  0122C6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11212  0122C8  0E0A               	movlw	10
 11213  0122CA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11214  0122CC  515B               	movf	scale@scl& (0+255),w,b
 11215  0122CE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11216  0122D0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11217  0122D2  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11218  0122D4  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11219  0122D6  ECCE  F0A9         	call	___awdiv	;wreg free
 11220  0122DA  0E09               	movlw	9
 11221  0122DC  0101               	movlb	1	; () banked
 11222  0122DE  251D               	addwf	?___awdiv& (0+255),w,b
 11223  0122E0  6F25               	movwf	___wmul@multiplier& (0+255),b
 11224  0122E2  0E00               	movlw	0
 11225  0122E4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11226  0122E6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11227  0122E8  0E00               	movlw	0
 11228  0122EA  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11229  0122EC  0E03               	movlw	3
 11230  0122EE  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11231  0122F0  EC67  F0B0         	call	___wmul	;wreg free
 11232  0122F4  0E78               	movlw	low __npowers_
 11233  0122F6  0101               	movlb	1	; () banked
 11234  0122F8  2525               	addwf	?___wmul& (0+255),w,b
 11235  0122FA  6EF6               	movwf	tblptrl,c
 11236  0122FC  0EF3               	movlw	high __npowers_
 11237  0122FE  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11238  012300  6EF7               	movwf	tblptrh,c
 11239  012302                     	if	1	;There are 3 active tblptr bytes
 11240  012302  6AF8               	clrf	tblptru,c
 11241  012304  0E00               	movlw	low (__mediumconst shr (0+16))
 11242  012306  22F8               	addwfc	tblptru,f,c
 11243  012308                     	endif
 11244  012308  0009               	tblrd		*+
 11245  01230A  CFF5 F146          	movff	tablat,___ftmul@f1
 11246  01230E  0009               	tblrd		*+
 11247  012310  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11248  012314  000A               	tblrd		*-
 11249  012316  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11250  01231A  0E00               	movlw	0
 11251  01231C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11252  01231E  0E03               	movlw	3
 11253  012320  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11254  012322  0E00               	movlw	0
 11255  012324  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11256  012326  0E0A               	movlw	10
 11257  012328  6F19               	movwf	___awmod@divisor& (0+255),b
 11258  01232A  515B               	movf	scale@scl& (0+255),w,b
 11259  01232C  6F17               	movwf	___awmod@dividend& (0+255),b
 11260  01232E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11261  012330  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11262  012332  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11263  012334  EC89  F0AB         	call	___awmod	;wreg free
 11264  012338  C117  F125         	movff	?___awmod,___wmul@multiplier
 11265  01233C  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11266  012340  EC67  F0B0         	call	___wmul	;wreg free
 11267  012344  0E78               	movlw	low __npowers_
 11268  012346  0101               	movlb	1	; () banked
 11269  012348  2525               	addwf	?___wmul& (0+255),w,b
 11270  01234A  6EF6               	movwf	tblptrl,c
 11271  01234C  0EF3               	movlw	high __npowers_
 11272  01234E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11273  012350  6EF7               	movwf	tblptrh,c
 11274  012352                     	if	1	;There are 3 active tblptr bytes
 11275  012352  6AF8               	clrf	tblptru,c
 11276  012354  0E00               	movlw	low (__mediumconst shr (0+16))
 11277  012356  22F8               	addwfc	tblptru,f,c
 11278  012358                     	endif
 11279  012358  0009               	tblrd		*+
 11280  01235A  CFF5 F149          	movff	tablat,___ftmul@f2
 11281  01235E  0009               	tblrd		*+
 11282  012360  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11283  012364  000A               	tblrd		*-
 11284  012366  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11285  01236A  EC56  F0A3         	call	___ftmul	;wreg free
 11286  01236E  C146  F155         	movff	?___ftmul,?_scale
 11287  012372  C147  F156         	movff	?___ftmul+1,?_scale+1
 11288  012376  C148  F157         	movff	?___ftmul+2,?_scale+2
 11289  01237A  0012               	return	
 11290  01237C                     l1084:
 11291                           
 11292                           ;doprnt.c: 434: return _npowers_[scl];
 11293  01237C  0101               	movlb	1	; () banked
 11294  01237E  515B               	movf	scale@scl& (0+255),w,b
 11295  012380  0D03               	mullw	3
 11296  012382  0E78               	movlw	low __npowers_
 11297  012384  24F3               	addwf	prodl,w,c
 11298  012386  6EF6               	movwf	tblptrl,c
 11299  012388  0EF3               	movlw	high __npowers_
 11300  01238A  20F4               	addwfc	prodh,w,c
 11301  01238C  6EF7               	movwf	tblptrh,c
 11302  01238E                     	if	1	;There are 3 active tblptr bytes
 11303  01238E  6AF8               	clrf	tblptru,c
 11304  012390  0E00               	movlw	low (__mediumconst shr (0+16))
 11305  012392  22F8               	addwfc	tblptru,f,c
 11306  012394                     	endif
 11307  012394  0009               	tblrd		*+
 11308  012396  CFF5 F155          	movff	tablat,?_scale
 11309  01239A  0009               	tblrd		*+
 11310  01239C  CFF5 F156          	movff	tablat,?_scale+1
 11311  0123A0  000A               	tblrd		*-
 11312  0123A2  CFF5 F157          	movff	tablat,?_scale+2
 11313                           
 11314                           ; BSR set to: 1
 11315  0123A6  0012               	return	
 11316  0123A8                     l1080:
 11317                           
 11318                           ; BSR set to: 1
 11319                           ;doprnt.c: 435: }
 11320                           ;doprnt.c: 436: if(scl>=110)
 11321                           
 11322                           ; BSR set to: 1
 11323  0123A8  515B               	movf	scale@scl& (0+255),w,b
 11324  0123AA  0A80               	xorlw	128
 11325  0123AC  0F12               	addlw	-238
 11326  0123AE  A0D8               	btfss	status,0,c
 11327  0123B0  D0A0               	goto	l1085
 11328                           
 11329                           ; BSR set to: 1
 11330                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11331  0123B2  0E00               	movlw	0
 11332  0123B4  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11333  0123B6  0E03               	movlw	3
 11334  0123B8  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11335  0123BA  0E00               	movlw	0
 11336  0123BC  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11337  0123BE  0E0A               	movlw	10
 11338  0123C0  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11339  0123C2  0E00               	movlw	0
 11340  0123C4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11341  0123C6  0E64               	movlw	100
 11342  0123C8  6F19               	movwf	___awmod@divisor& (0+255),b
 11343  0123CA  515B               	movf	scale@scl& (0+255),w,b
 11344  0123CC  6F17               	movwf	___awmod@dividend& (0+255),b
 11345  0123CE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11346  0123D0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11347  0123D2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11348  0123D4  EC89  F0AB         	call	___awmod	;wreg free
 11349  0123D8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11350  0123DC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11351  0123E0  ECCE  F0A9         	call	___awdiv	;wreg free
 11352  0123E4  0E09               	movlw	9
 11353  0123E6  0101               	movlb	1	; () banked
 11354  0123E8  251D               	addwf	?___awdiv& (0+255),w,b
 11355  0123EA  6F25               	movwf	___wmul@multiplier& (0+255),b
 11356  0123EC  0E00               	movlw	0
 11357  0123EE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11358  0123F0  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11359  0123F2  EC67  F0B0         	call	___wmul	;wreg free
 11360  0123F6  0E51               	movlw	low __powers_
 11361  0123F8  0101               	movlb	1	; () banked
 11362  0123FA  2525               	addwf	?___wmul& (0+255),w,b
 11363  0123FC  6EF6               	movwf	tblptrl,c
 11364  0123FE  0EF3               	movlw	high __powers_
 11365  012400  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11366  012402  6EF7               	movwf	tblptrh,c
 11367  012404                     	if	1	;There are 3 active tblptr bytes
 11368  012404  6AF8               	clrf	tblptru,c
 11369  012406  0E00               	movlw	low (__mediumconst shr (0+16))
 11370  012408  22F8               	addwfc	tblptru,f,c
 11371  01240A                     	endif
 11372  01240A  0009               	tblrd		*+
 11373  01240C  CFF5 F149          	movff	tablat,___ftmul@f2
 11374  012410  0009               	tblrd		*+
 11375  012412  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11376  012416  000A               	tblrd		*-
 11377  012418  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11378  01241C  0E00               	movlw	0
 11379  01241E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11380  012420  0E64               	movlw	100
 11381  012422  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11382  012424  515B               	movf	scale@scl& (0+255),w,b
 11383  012426  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11384  012428  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11385  01242A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11386  01242C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11387  01242E  ECCE  F0A9         	call	___awdiv	;wreg free
 11388  012432  0E12               	movlw	18
 11389  012434  0101               	movlb	1	; () banked
 11390  012436  251D               	addwf	?___awdiv& (0+255),w,b
 11391  012438  6F25               	movwf	___wmul@multiplier& (0+255),b
 11392  01243A  0E00               	movlw	0
 11393  01243C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11394  01243E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11395  012440  0E00               	movlw	0
 11396  012442  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11397  012444  0E03               	movlw	3
 11398  012446  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11399  012448  EC67  F0B0         	call	___wmul	;wreg free
 11400  01244C  0E51               	movlw	low __powers_
 11401  01244E  0101               	movlb	1	; () banked
 11402  012450  2525               	addwf	?___wmul& (0+255),w,b
 11403  012452  6EF6               	movwf	tblptrl,c
 11404  012454  0EF3               	movlw	high __powers_
 11405  012456  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11406  012458  6EF7               	movwf	tblptrh,c
 11407  01245A                     	if	1	;There are 3 active tblptr bytes
 11408  01245A  6AF8               	clrf	tblptru,c
 11409  01245C  0E00               	movlw	low (__mediumconst shr (0+16))
 11410  01245E  22F8               	addwfc	tblptru,f,c
 11411  012460                     	endif
 11412  012460  0009               	tblrd		*+
 11413  012462  CFF5 F146          	movff	tablat,___ftmul@f1
 11414  012466  0009               	tblrd		*+
 11415  012468  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11416  01246C  000A               	tblrd		*-
 11417  01246E  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11418  012472  EC56  F0A3         	call	___ftmul	;wreg free
 11419  012476  C146  F158         	movff	?___ftmul,_scale$3141
 11420  01247A  C147  F159         	movff	?___ftmul+1,_scale$3141+1
 11421  01247E  C148  F15A         	movff	?___ftmul+2,_scale$3141+2
 11422                           
 11423                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11424  012482  C158  F146         	movff	_scale$3141,___ftmul@f1
 11425  012486  C159  F147         	movff	_scale$3141+1,___ftmul@f1+1
 11426  01248A  C15A  F148         	movff	_scale$3141+2,___ftmul@f1+2
 11427  01248E  0E00               	movlw	0
 11428  012490  0101               	movlb	1	; () banked
 11429  012492  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11430  012494  0E03               	movlw	3
 11431  012496  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11432  012498  0E00               	movlw	0
 11433  01249A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11434  01249C  0E0A               	movlw	10
 11435  01249E  6F19               	movwf	___awmod@divisor& (0+255),b
 11436  0124A0  515B               	movf	scale@scl& (0+255),w,b
 11437  0124A2  6F17               	movwf	___awmod@dividend& (0+255),b
 11438  0124A4  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11439  0124A6  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11440  0124A8  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11441  0124AA  EC89  F0AB         	call	___awmod	;wreg free
 11442  0124AE  C117  F125         	movff	?___awmod,___wmul@multiplier
 11443  0124B2  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11444  0124B6  EC67  F0B0         	call	___wmul	;wreg free
 11445  0124BA  0E51               	movlw	low __powers_
 11446  0124BC  0101               	movlb	1	; () banked
 11447  0124BE  2525               	addwf	?___wmul& (0+255),w,b
 11448  0124C0  6EF6               	movwf	tblptrl,c
 11449  0124C2  0EF3               	movlw	high __powers_
 11450  0124C4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11451  0124C6  6EF7               	movwf	tblptrh,c
 11452  0124C8                     	if	1	;There are 3 active tblptr bytes
 11453  0124C8  6AF8               	clrf	tblptru,c
 11454  0124CA  0E00               	movlw	low (__mediumconst shr (0+16))
 11455  0124CC  22F8               	addwfc	tblptru,f,c
 11456  0124CE                     	endif
 11457  0124CE  0009               	tblrd		*+
 11458  0124D0  CFF5 F149          	movff	tablat,___ftmul@f2
 11459  0124D4  0009               	tblrd		*+
 11460  0124D6  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11461  0124DA  000A               	tblrd		*-
 11462  0124DC  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11463  0124E0  EC56  F0A3         	call	___ftmul	;wreg free
 11464  0124E4  C146  F155         	movff	?___ftmul,?_scale
 11465  0124E8  C147  F156         	movff	?___ftmul+1,?_scale+1
 11466  0124EC  C148  F157         	movff	?___ftmul+2,?_scale+2
 11467  0124F0  0012               	return	
 11468  0124F2                     l1085:
 11469                           
 11470                           ;doprnt.c: 438: else if(scl > 10)
 11471  0124F2  0101               	movlb	1	; () banked
 11472  0124F4  515B               	movf	scale@scl& (0+255),w,b
 11473  0124F6  0A80               	xorlw	128
 11474  0124F8  0F75               	addlw	-139
 11475  0124FA  A0D8               	btfss	status,0,c
 11476  0124FC  D05C               	goto	l1087
 11477                           
 11478                           ; BSR set to: 1
 11479                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11480  0124FE  0E00               	movlw	0
 11481  012500  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11482  012502  0E0A               	movlw	10
 11483  012504  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11484  012506  515B               	movf	scale@scl& (0+255),w,b
 11485  012508  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11486  01250A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11487  01250C  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11488  01250E  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11489  012510  ECCE  F0A9         	call	___awdiv	;wreg free
 11490  012514  0E09               	movlw	9
 11491  012516  0101               	movlb	1	; () banked
 11492  012518  251D               	addwf	?___awdiv& (0+255),w,b
 11493  01251A  6F25               	movwf	___wmul@multiplier& (0+255),b
 11494  01251C  0E00               	movlw	0
 11495  01251E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11496  012520  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11497  012522  0E00               	movlw	0
 11498  012524  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11499  012526  0E03               	movlw	3
 11500  012528  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11501  01252A  EC67  F0B0         	call	___wmul	;wreg free
 11502  01252E  0E51               	movlw	low __powers_
 11503  012530  0101               	movlb	1	; () banked
 11504  012532  2525               	addwf	?___wmul& (0+255),w,b
 11505  012534  6EF6               	movwf	tblptrl,c
 11506  012536  0EF3               	movlw	high __powers_
 11507  012538  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11508  01253A  6EF7               	movwf	tblptrh,c
 11509  01253C                     	if	1	;There are 3 active tblptr bytes
 11510  01253C  6AF8               	clrf	tblptru,c
 11511  01253E  0E00               	movlw	low (__mediumconst shr (0+16))
 11512  012540  22F8               	addwfc	tblptru,f,c
 11513  012542                     	endif
 11514  012542  0009               	tblrd		*+
 11515  012544  CFF5 F146          	movff	tablat,___ftmul@f1
 11516  012548  0009               	tblrd		*+
 11517  01254A  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11518  01254E  000A               	tblrd		*-
 11519  012550  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11520  012554  0E00               	movlw	0
 11521  012556  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11522  012558  0E03               	movlw	3
 11523  01255A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11524  01255C  0E00               	movlw	0
 11525  01255E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11526  012560  0E0A               	movlw	10
 11527  012562  6F19               	movwf	___awmod@divisor& (0+255),b
 11528  012564  515B               	movf	scale@scl& (0+255),w,b
 11529  012566  6F17               	movwf	___awmod@dividend& (0+255),b
 11530  012568  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11531  01256A  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11532  01256C  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11533  01256E  EC89  F0AB         	call	___awmod	;wreg free
 11534  012572  C117  F125         	movff	?___awmod,___wmul@multiplier
 11535  012576  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11536  01257A  EC67  F0B0         	call	___wmul	;wreg free
 11537  01257E  0E51               	movlw	low __powers_
 11538  012580  0101               	movlb	1	; () banked
 11539  012582  2525               	addwf	?___wmul& (0+255),w,b
 11540  012584  6EF6               	movwf	tblptrl,c
 11541  012586  0EF3               	movlw	high __powers_
 11542  012588  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11543  01258A  6EF7               	movwf	tblptrh,c
 11544  01258C                     	if	1	;There are 3 active tblptr bytes
 11545  01258C  6AF8               	clrf	tblptru,c
 11546  01258E  0E00               	movlw	low (__mediumconst shr (0+16))
 11547  012590  22F8               	addwfc	tblptru,f,c
 11548  012592                     	endif
 11549  012592  0009               	tblrd		*+
 11550  012594  CFF5 F149          	movff	tablat,___ftmul@f2
 11551  012598  0009               	tblrd		*+
 11552  01259A  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11553  01259E  000A               	tblrd		*-
 11554  0125A0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11555  0125A4  EC56  F0A3         	call	___ftmul	;wreg free
 11556  0125A8  C146  F155         	movff	?___ftmul,?_scale
 11557  0125AC  C147  F156         	movff	?___ftmul+1,?_scale+1
 11558  0125B0  C148  F157         	movff	?___ftmul+2,?_scale+2
 11559  0125B4  0012               	return	
 11560  0125B6                     l1087:
 11561                           
 11562                           ;doprnt.c: 440: return _powers_[scl];
 11563  0125B6  0101               	movlb	1	; () banked
 11564  0125B8  515B               	movf	scale@scl& (0+255),w,b
 11565  0125BA  0D03               	mullw	3
 11566  0125BC  0E51               	movlw	low __powers_
 11567  0125BE  24F3               	addwf	prodl,w,c
 11568  0125C0  6EF6               	movwf	tblptrl,c
 11569  0125C2  0EF3               	movlw	high __powers_
 11570  0125C4  20F4               	addwfc	prodh,w,c
 11571  0125C6  6EF7               	movwf	tblptrh,c
 11572  0125C8                     	if	1	;There are 3 active tblptr bytes
 11573  0125C8  6AF8               	clrf	tblptru,c
 11574  0125CA  0E00               	movlw	low (__mediumconst shr (0+16))
 11575  0125CC  22F8               	addwfc	tblptru,f,c
 11576  0125CE                     	endif
 11577  0125CE  0009               	tblrd		*+
 11578  0125D0  CFF5 F155          	movff	tablat,?_scale
 11579  0125D4  0009               	tblrd		*+
 11580  0125D6  CFF5 F156          	movff	tablat,?_scale+1
 11581  0125DA  000A               	tblrd		*-
 11582  0125DC  CFF5 F157          	movff	tablat,?_scale+2
 11583  0125E0  0012               	return	
 11584  0125E2                     __end_of_scale:
 11585                           	opt stack 0
 11586                           tblptru	equ	0xFF8
 11587                           tblptrh	equ	0xFF7
 11588                           tblptrl	equ	0xFF6
 11589                           tablat	equ	0xFF5
 11590                           prodh	equ	0xFF4
 11591                           prodl	equ	0xFF3
 11592                           intcon	equ	0xFF2
 11593                           postinc0	equ	0xFEE
 11594                           wreg	equ	0xFE8
 11595                           indf1	equ	0xFE7
 11596                           postdec1	equ	0xFE5
 11597                           fsr1h	equ	0xFE2
 11598                           fsr1l	equ	0xFE1
 11599                           indf2	equ	0xFDF
 11600                           postinc2	equ	0xFDE
 11601                           postdec2	equ	0xFDD
 11602                           fsr2h	equ	0xFDA
 11603                           fsr2l	equ	0xFD9
 11604                           status	equ	0xFD8
 11605                           
 11606 ;; *************** function _putch *****************
 11607 ;; Defined at:
 11608 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 11609 ;; Parameters:    Size  Location     Type
 11610 ;;  txData          1    wreg     unsigned char 
 11611 ;; Auto vars:     Size  Location     Type
 11612 ;;  txData          1   24[BANK1 ] unsigned char 
 11613 ;; Return value:  Size  Location     Type
 11614 ;;                  1    wreg      void 
 11615 ;; Registers used:
 11616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11617 ;; Tracked objects:
 11618 ;;		On entry : 0/0
 11619 ;;		On exit  : 0/0
 11620 ;;		Unchanged: 0/0
 11621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11623 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11625 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11626 ;;Total ram usage:        1 bytes
 11627 ;; Hardware stack levels used:    1
 11628 ;; Hardware stack levels required when called:   15
 11629 ;; This function calls:
 11630 ;;		_EUSART2_Write
 11631 ;; This function is called by:
 11632 ;;		_printf
 11633 ;; This function uses a non-reentrant model
 11634 ;;
 11635                           
 11636                           	psect	text21
 11637  0162FC                     __ptext21:
 11638                           	opt stack 0
 11639  0162FC                     _putch:
 11640                           	opt stack 12
 11641                           
 11642                           ;incstack = 0
 11643                           ;putch@txData stored from wreg
 11644  0162FC  0101               	movlb	1	; () banked
 11645  0162FE  6F18               	movwf	putch@txData& (0+255),b
 11646                           
 11647                           ;eusart2.c: 182: EUSART2_Write(txData);
 11648  016300  0101               	movlb	1	; () banked
 11649  016302  5118               	movf	putch@txData& (0+255),w,b
 11650  016304  ECD7  F0AE         	call	_EUSART2_Write
 11651  016308  0012               	return		;funcret
 11652  01630A                     __end_of_putch:
 11653                           	opt stack 0
 11654                           tblptru	equ	0xFF8
 11655                           tblptrh	equ	0xFF7
 11656                           tblptrl	equ	0xFF6
 11657                           tablat	equ	0xFF5
 11658                           prodh	equ	0xFF4
 11659                           prodl	equ	0xFF3
 11660                           intcon	equ	0xFF2
 11661                           postinc0	equ	0xFEE
 11662                           wreg	equ	0xFE8
 11663                           indf1	equ	0xFE7
 11664                           postdec1	equ	0xFE5
 11665                           fsr1h	equ	0xFE2
 11666                           fsr1l	equ	0xFE1
 11667                           indf2	equ	0xFDF
 11668                           postinc2	equ	0xFDE
 11669                           postdec2	equ	0xFDD
 11670                           fsr2h	equ	0xFDA
 11671                           fsr2l	equ	0xFD9
 11672                           status	equ	0xFD8
 11673                           
 11674 ;; *************** function _EUSART2_Write *****************
 11675 ;; Defined at:
 11676 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 11677 ;; Parameters:    Size  Location     Type
 11678 ;;  txData          1    wreg     unsigned char 
 11679 ;; Auto vars:     Size  Location     Type
 11680 ;;  txData          1   23[BANK1 ] unsigned char 
 11681 ;; Return value:  Size  Location     Type
 11682 ;;                  1    wreg      void 
 11683 ;; Registers used:
 11684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11685 ;; Tracked objects:
 11686 ;;		On entry : 0/0
 11687 ;;		On exit  : 0/0
 11688 ;;		Unchanged: 0/0
 11689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11691 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11693 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;Total ram usage:        1 bytes
 11695 ;; Hardware stack levels used:    1
 11696 ;; Hardware stack levels required when called:   14
 11697 ;; This function calls:
 11698 ;;		Nothing
 11699 ;; This function is called by:
 11700 ;;		_putch
 11701 ;; This function uses a non-reentrant model
 11702 ;;
 11703                           
 11704                           	psect	text22
 11705  015DAE                     __ptext22:
 11706                           	opt stack 0
 11707  015DAE                     _EUSART2_Write:
 11708                           	opt stack 12
 11709                           
 11710                           ;incstack = 0
 11711                           ;EUSART2_Write@txData stored from wreg
 11712  015DAE  0101               	movlb	1	; () banked
 11713  015DB0  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 11714                           
 11715                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 11716  015DB2  D001               	goto	l374
 11717  015DB4                     l375:
 11718                           
 11719                           ; BSR set to: 1
 11720  015DB4  0004               	clrwdt		;# 
 11721  015DB6                     l374:
 11722  015DB6  0101               	movlb	1	; () banked
 11723  015DB8  51DB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 11724  015DBA  B4D8               	btfsc	status,2,c
 11725  015DBC  D7FB               	goto	l375
 11726                           
 11727                           ; BSR set to: 1
 11728                           ;eusart2.c: 156: }
 11729                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 11730  015DBE  010E               	movlb	14	; () banked
 11731  015DC0  BD2C               	btfsc	44,6,b	;volatile
 11732  015DC2  D003               	goto	l377
 11733                           
 11734                           ; BSR set to: 14
 11735                           ;eusart2.c: 159: {
 11736                           ;eusart2.c: 160: TX2REG = txData;
 11737  015DC4  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 11738                           
 11739                           ;eusart2.c: 161: }
 11740  015DC8  D013               	goto	l378
 11741  015DCA                     l377:
 11742                           
 11743                           ; BSR set to: 14
 11744                           ;eusart2.c: 162: else
 11745                           ;eusart2.c: 163: {
 11746                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 11747  015DCA  9D2C               	bcf	44,6,b	;volatile
 11748                           
 11749                           ; BSR set to: 14
 11750                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 11751  015DCC  0101               	movlb	1	; () banked
 11752  015DCE  51DD               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 11753  015DD0  0D01               	mullw	1
 11754  015DD2  0E00               	movlw	low _eusart2TxBuffer
 11755  015DD4  24F3               	addwf	prodl,w,c
 11756  015DD6  6ED9               	movwf	fsr2l,c
 11757  015DD8  0E02               	movlw	high _eusart2TxBuffer
 11758  015DDA  20F4               	addwfc	prodh,w,c
 11759  015DDC  6EDA               	movwf	fsr2h,c
 11760  015DDE  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 11761                           
 11762                           ; BSR set to: 1
 11763  015DE2  2BDD               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 11764                           
 11765                           ; BSR set to: 1
 11766                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 11767  015DE4  0E7F               	movlw	127
 11768  015DE6  65DD               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 11769  015DE8  D002               	goto	l379
 11770                           
 11771                           ; BSR set to: 1
 11772                           ;eusart2.c: 167: {
 11773                           ;eusart2.c: 168: eusart2TxHead = 0;
 11774  015DEA  0E00               	movlw	0
 11775  015DEC  6FDD               	movwf	_eusart2TxHead& (0+255),b	;volatile
 11776  015DEE                     l379:
 11777                           
 11778                           ; BSR set to: 1
 11779                           ;eusart2.c: 169: }
 11780                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 11781                           
 11782                           ; BSR set to: 1
 11783  015DEE  07DB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 11784  015DF0                     l378:
 11785                           
 11786                           ;eusart2.c: 171: }
 11787                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 11788                           
 11789                           ; BSR set to: 1
 11790  015DF0  010E               	movlb	14	; () banked
 11791  015DF2  8D2C               	bsf	44,6,b	;volatile
 11792                           
 11793                           ; BSR set to: 14
 11794  015DF4  0012               	return		;funcret
 11795  015DF6                     __end_of_EUSART2_Write:
 11796                           	opt stack 0
 11797                           tblptru	equ	0xFF8
 11798                           tblptrh	equ	0xFF7
 11799                           tblptrl	equ	0xFF6
 11800                           tablat	equ	0xFF5
 11801                           prodh	equ	0xFF4
 11802                           prodl	equ	0xFF3
 11803                           intcon	equ	0xFF2
 11804                           postinc0	equ	0xFEE
 11805                           wreg	equ	0xFE8
 11806                           indf1	equ	0xFE7
 11807                           postdec1	equ	0xFE5
 11808                           fsr1h	equ	0xFE2
 11809                           fsr1l	equ	0xFE1
 11810                           indf2	equ	0xFDF
 11811                           postinc2	equ	0xFDE
 11812                           postdec2	equ	0xFDD
 11813                           fsr2h	equ	0xFDA
 11814                           fsr2l	equ	0xFD9
 11815                           status	equ	0xFD8
 11816                           
 11817 ;; *************** function _isdigit *****************
 11818 ;; Defined at:
 11819 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11820 ;; Parameters:    Size  Location     Type
 11821 ;;  c               1    wreg     unsigned char 
 11822 ;; Auto vars:     Size  Location     Type
 11823 ;;  c               1   25[BANK1 ] unsigned char 
 11824 ;; Return value:  Size  Location     Type
 11825 ;;		None               void
 11826 ;; Registers used:
 11827 ;;		wreg, status,2, status,0
 11828 ;; Tracked objects:
 11829 ;;		On entry : 0/0
 11830 ;;		On exit  : 0/0
 11831 ;;		Unchanged: 0/0
 11832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11834 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11835 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11836 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11837 ;;Total ram usage:        3 bytes
 11838 ;; Hardware stack levels used:    1
 11839 ;; Hardware stack levels required when called:   14
 11840 ;; This function calls:
 11841 ;;		Nothing
 11842 ;; This function is called by:
 11843 ;;		_printf
 11844 ;;		_atoi
 11845 ;; This function uses a non-reentrant model
 11846 ;;
 11847                           
 11848                           	psect	text23
 11849  016200                     __ptext23:
 11850                           	opt stack 0
 11851  016200                     _isdigit:
 11852                           	opt stack 13
 11853                           
 11854                           ; BSR set to: 14
 11855                           ;incstack = 0
 11856                           ;isdigit@c stored from wreg
 11857  016200  0101               	movlb	1	; () banked
 11858  016202  6F19               	movwf	isdigit@c& (0+255),b
 11859  016204  0E00               	movlw	0
 11860  016206  0101               	movlb	1	; () banked
 11861  016208  6F18               	movwf	_isdigit$2497& (0+255),b
 11862                           
 11863                           ; BSR set to: 1
 11864  01620A  0E3A               	movlw	58
 11865  01620C  6119               	cpfslt	isdigit@c& (0+255),b
 11866  01620E  D005               	goto	l1608
 11867                           
 11868                           ; BSR set to: 1
 11869  016210  0E2F               	movlw	47
 11870  016212  6519               	cpfsgt	isdigit@c& (0+255),b
 11871  016214  D002               	goto	l1608
 11872                           
 11873                           ; BSR set to: 1
 11874  016216  0E01               	movlw	1
 11875  016218  6F18               	movwf	_isdigit$2497& (0+255),b
 11876  01621A                     l1608:
 11877                           
 11878                           ; BSR set to: 1
 11879                           
 11880                           ; BSR set to: 1
 11881  01621A  C118  F117         	movff	_isdigit$2497,??_isdigit
 11882  01621E  3117               	rrcf	??_isdigit& (0+255),w,b
 11883  016220  0012               	return	
 11884  016222                     __end_of_isdigit:
 11885                           	opt stack 0
 11886                           tblptru	equ	0xFF8
 11887                           tblptrh	equ	0xFF7
 11888                           tblptrl	equ	0xFF6
 11889                           tablat	equ	0xFF5
 11890                           prodh	equ	0xFF4
 11891                           prodl	equ	0xFF3
 11892                           intcon	equ	0xFF2
 11893                           postinc0	equ	0xFEE
 11894                           wreg	equ	0xFE8
 11895                           indf1	equ	0xFE7
 11896                           postdec1	equ	0xFE5
 11897                           fsr1h	equ	0xFE2
 11898                           fsr1l	equ	0xFE1
 11899                           indf2	equ	0xFDF
 11900                           postinc2	equ	0xFDE
 11901                           postdec2	equ	0xFDD
 11902                           fsr2h	equ	0xFDA
 11903                           fsr2l	equ	0xFD9
 11904                           status	equ	0xFD8
 11905                           
 11906 ;; *************** function _fround *****************
 11907 ;; Defined at:
 11908 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;  prec            1    wreg     unsigned char 
 11911 ;; Auto vars:     Size  Location     Type
 11912 ;;  prec            1   94[BANK1 ] unsigned char 
 11913 ;; Return value:  Size  Location     Type
 11914 ;;                  3   85[BANK1 ] unsigned char 
 11915 ;; Registers used:
 11916 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/0
 11919 ;;		On exit  : 0/0
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11922 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11923 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11925 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11926 ;;Total ram usage:       10 bytes
 11927 ;; Hardware stack levels used:    1
 11928 ;; Hardware stack levels required when called:   16
 11929 ;; This function calls:
 11930 ;;		___awdiv
 11931 ;;		___awmod
 11932 ;;		___ftmul
 11933 ;;		___wmul
 11934 ;; This function is called by:
 11935 ;;		_printf
 11936 ;; This function uses a non-reentrant model
 11937 ;;
 11938                           
 11939                           	psect	text24
 11940  012D9A                     __ptext24:
 11941                           	opt stack 0
 11942  012D9A                     _fround:
 11943                           	opt stack 11
 11944                           
 11945                           ; BSR set to: 1
 11946                           ;incstack = 0
 11947                           ;fround@prec stored from wreg
 11948  012D9A  0101               	movlb	1	; () banked
 11949  012D9C  6F5E               	movwf	fround@prec& (0+255),b
 11950                           
 11951                           ;doprnt.c: 413: if(prec>=110)
 11952  012D9E  0E6D               	movlw	109
 11953  012DA0  0101               	movlb	1	; () banked
 11954  012DA2  655E               	cpfsgt	fround@prec& (0+255),b
 11955  012DA4  D0AF               	goto	l1074
 11956                           
 11957                           ; BSR set to: 1
 11958                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11959  012DA6  0E00               	movlw	0
 11960  012DA8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11961  012DAA  0E03               	movlw	3
 11962  012DAC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11963  012DAE  0E00               	movlw	0
 11964  012DB0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11965  012DB2  0E0A               	movlw	10
 11966  012DB4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11967  012DB6  0E00               	movlw	0
 11968  012DB8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11969  012DBA  0E64               	movlw	100
 11970  012DBC  6F19               	movwf	___awmod@divisor& (0+255),b
 11971  012DBE  C15E  F117         	movff	fround@prec,___awmod@dividend
 11972  012DC2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11973  012DC4  EC89  F0AB         	call	___awmod	;wreg free
 11974  012DC8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11975  012DCC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11976  012DD0  ECCE  F0A9         	call	___awdiv	;wreg free
 11977  012DD4  0E09               	movlw	9
 11978  012DD6  0101               	movlb	1	; () banked
 11979  012DD8  251D               	addwf	?___awdiv& (0+255),w,b
 11980  012DDA  6F25               	movwf	___wmul@multiplier& (0+255),b
 11981  012DDC  0E00               	movlw	0
 11982  012DDE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11983  012DE0  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11984  012DE2  EC67  F0B0         	call	___wmul	;wreg free
 11985  012DE6  0E78               	movlw	low __npowers_
 11986  012DE8  0101               	movlb	1	; () banked
 11987  012DEA  2525               	addwf	?___wmul& (0+255),w,b
 11988  012DEC  6EF6               	movwf	tblptrl,c
 11989  012DEE  0EF3               	movlw	high __npowers_
 11990  012DF0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11991  012DF2  6EF7               	movwf	tblptrh,c
 11992  012DF4                     	if	1	;There are 3 active tblptr bytes
 11993  012DF4  6AF8               	clrf	tblptru,c
 11994  012DF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11995  012DF8  22F8               	addwfc	tblptru,f,c
 11996  012DFA                     	endif
 11997  012DFA  0009               	tblrd		*+
 11998  012DFC  CFF5 F149          	movff	tablat,___ftmul@f2
 11999  012E00  0009               	tblrd		*+
 12000  012E02  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12001  012E06  000A               	tblrd		*-
 12002  012E08  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12003  012E0C  0E00               	movlw	0
 12004  012E0E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12005  012E10  0E64               	movlw	100
 12006  012E12  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12007  012E14  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 12008  012E18  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12009  012E1A  ECCE  F0A9         	call	___awdiv	;wreg free
 12010  012E1E  0E12               	movlw	18
 12011  012E20  0101               	movlb	1	; () banked
 12012  012E22  251D               	addwf	?___awdiv& (0+255),w,b
 12013  012E24  6F25               	movwf	___wmul@multiplier& (0+255),b
 12014  012E26  0E00               	movlw	0
 12015  012E28  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12016  012E2A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12017  012E2C  0E00               	movlw	0
 12018  012E2E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12019  012E30  0E03               	movlw	3
 12020  012E32  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12021  012E34  EC67  F0B0         	call	___wmul	;wreg free
 12022  012E38  0E78               	movlw	low __npowers_
 12023  012E3A  0101               	movlb	1	; () banked
 12024  012E3C  2525               	addwf	?___wmul& (0+255),w,b
 12025  012E3E  6EF6               	movwf	tblptrl,c
 12026  012E40  0EF3               	movlw	high __npowers_
 12027  012E42  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12028  012E44  6EF7               	movwf	tblptrh,c
 12029  012E46                     	if	1	;There are 3 active tblptr bytes
 12030  012E46  6AF8               	clrf	tblptru,c
 12031  012E48  0E00               	movlw	low (__mediumconst shr (0+16))
 12032  012E4A  22F8               	addwfc	tblptru,f,c
 12033  012E4C                     	endif
 12034  012E4C  0009               	tblrd		*+
 12035  012E4E  CFF5 F146          	movff	tablat,___ftmul@f1
 12036  012E52  0009               	tblrd		*+
 12037  012E54  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12038  012E58  000A               	tblrd		*-
 12039  012E5A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12040  012E5E  EC56  F0A3         	call	___ftmul	;wreg free
 12041  012E62  C146  F15B         	movff	?___ftmul,_fround$3139
 12042  012E66  C147  F15C         	movff	?___ftmul+1,_fround$3139+1
 12043  012E6A  C148  F15D         	movff	?___ftmul+2,_fround$3139+2
 12044                           
 12045                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12046  012E6E  0E00               	movlw	0
 12047  012E70  0101               	movlb	1	; () banked
 12048  012E72  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12049  012E74  0E03               	movlw	3
 12050  012E76  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12051  012E78  0E00               	movlw	0
 12052  012E7A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12053  012E7C  0E0A               	movlw	10
 12054  012E7E  6F19               	movwf	___awmod@divisor& (0+255),b
 12055  012E80  C15E  F117         	movff	fround@prec,___awmod@dividend
 12056  012E84  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12057  012E86  EC89  F0AB         	call	___awmod	;wreg free
 12058  012E8A  C117  F125         	movff	?___awmod,___wmul@multiplier
 12059  012E8E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12060  012E92  EC67  F0B0         	call	___wmul	;wreg free
 12061  012E96  0E78               	movlw	low __npowers_
 12062  012E98  0101               	movlb	1	; () banked
 12063  012E9A  2525               	addwf	?___wmul& (0+255),w,b
 12064  012E9C  6EF6               	movwf	tblptrl,c
 12065  012E9E  0EF3               	movlw	high __npowers_
 12066  012EA0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12067  012EA2  6EF7               	movwf	tblptrh,c
 12068  012EA4                     	if	1	;There are 3 active tblptr bytes
 12069  012EA4  6AF8               	clrf	tblptru,c
 12070  012EA6  0E00               	movlw	low (__mediumconst shr (0+16))
 12071  012EA8  22F8               	addwfc	tblptru,f,c
 12072  012EAA                     	endif
 12073  012EAA  0009               	tblrd		*+
 12074  012EAC  CFF5 F149          	movff	tablat,___ftmul@f2
 12075  012EB0  0009               	tblrd		*+
 12076  012EB2  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12077  012EB6  000A               	tblrd		*-
 12078  012EB8  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12079  012EBC  C15B  F146         	movff	_fround$3139,___ftmul@f1
 12080  012EC0  C15C  F147         	movff	_fround$3139+1,___ftmul@f1+1
 12081  012EC4  C15D  F148         	movff	_fround$3139+2,___ftmul@f1+2
 12082  012EC8  EC56  F0A3         	call	___ftmul	;wreg free
 12083  012ECC  C146  F158         	movff	?___ftmul,_fround$3140
 12084  012ED0  C147  F159         	movff	?___ftmul+1,_fround$3140+1
 12085  012ED4  C148  F15A         	movff	?___ftmul+2,_fround$3140+2
 12086                           
 12087                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 12088  012ED8  C158  F146         	movff	_fround$3140,___ftmul@f1
 12089  012EDC  C159  F147         	movff	_fround$3140+1,___ftmul@f1+1
 12090  012EE0  C15A  F148         	movff	_fround$3140+2,___ftmul@f1+2
 12091  012EE4  0E00               	movlw	0
 12092  012EE6  0101               	movlb	1	; () banked
 12093  012EE8  6F49               	movwf	___ftmul@f2& (0+255),b
 12094  012EEA  0E00               	movlw	0
 12095  012EEC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12096  012EEE  0E3F               	movlw	63
 12097  012EF0  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12098  012EF2  EC56  F0A3         	call	___ftmul	;wreg free
 12099  012EF6  C146  F155         	movff	?___ftmul,?_fround
 12100  012EFA  C147  F156         	movff	?___ftmul+1,?_fround+1
 12101  012EFE  C148  F157         	movff	?___ftmul+2,?_fround+2
 12102  012F02  0012               	return	
 12103  012F04                     l1074:
 12104                           
 12105                           ;doprnt.c: 415: else if(prec > 10)
 12106  012F04  0E0A               	movlw	10
 12107  012F06  0101               	movlb	1	; () banked
 12108  012F08  655E               	cpfsgt	fround@prec& (0+255),b
 12109  012F0A  D06D               	goto	l1077
 12110                           
 12111                           ; BSR set to: 1
 12112                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12113  012F0C  0E00               	movlw	0
 12114  012F0E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12115  012F10  0E03               	movlw	3
 12116  012F12  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12117  012F14  0E00               	movlw	0
 12118  012F16  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 12119  012F18  0E0A               	movlw	10
 12120  012F1A  6F19               	movwf	___awmod@divisor& (0+255),b
 12121  012F1C  C15E  F117         	movff	fround@prec,___awmod@dividend
 12122  012F20  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 12123  012F22  EC89  F0AB         	call	___awmod	;wreg free
 12124  012F26  C117  F125         	movff	?___awmod,___wmul@multiplier
 12125  012F2A  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 12126  012F2E  EC67  F0B0         	call	___wmul	;wreg free
 12127  012F32  0E78               	movlw	low __npowers_
 12128  012F34  0101               	movlb	1	; () banked
 12129  012F36  2525               	addwf	?___wmul& (0+255),w,b
 12130  012F38  6EF6               	movwf	tblptrl,c
 12131  012F3A  0EF3               	movlw	high __npowers_
 12132  012F3C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12133  012F3E  6EF7               	movwf	tblptrh,c
 12134  012F40                     	if	1	;There are 3 active tblptr bytes
 12135  012F40  6AF8               	clrf	tblptru,c
 12136  012F42  0E00               	movlw	low (__mediumconst shr (0+16))
 12137  012F44  22F8               	addwfc	tblptru,f,c
 12138  012F46                     	endif
 12139  012F46  0009               	tblrd		*+
 12140  012F48  CFF5 F149          	movff	tablat,___ftmul@f2
 12141  012F4C  0009               	tblrd		*+
 12142  012F4E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 12143  012F52  000A               	tblrd		*-
 12144  012F54  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 12145  012F58  0E00               	movlw	0
 12146  012F5A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 12147  012F5C  0E0A               	movlw	10
 12148  012F5E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 12149  012F60  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 12150  012F64  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 12151  012F66  ECCE  F0A9         	call	___awdiv	;wreg free
 12152  012F6A  0E09               	movlw	9
 12153  012F6C  0101               	movlb	1	; () banked
 12154  012F6E  251D               	addwf	?___awdiv& (0+255),w,b
 12155  012F70  6F25               	movwf	___wmul@multiplier& (0+255),b
 12156  012F72  0E00               	movlw	0
 12157  012F74  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 12158  012F76  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 12159  012F78  0E00               	movlw	0
 12160  012F7A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12161  012F7C  0E03               	movlw	3
 12162  012F7E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 12163  012F80  EC67  F0B0         	call	___wmul	;wreg free
 12164  012F84  0E78               	movlw	low __npowers_
 12165  012F86  0101               	movlb	1	; () banked
 12166  012F88  2525               	addwf	?___wmul& (0+255),w,b
 12167  012F8A  6EF6               	movwf	tblptrl,c
 12168  012F8C  0EF3               	movlw	high __npowers_
 12169  012F8E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 12170  012F90  6EF7               	movwf	tblptrh,c
 12171  012F92                     	if	1	;There are 3 active tblptr bytes
 12172  012F92  6AF8               	clrf	tblptru,c
 12173  012F94  0E00               	movlw	low (__mediumconst shr (0+16))
 12174  012F96  22F8               	addwfc	tblptru,f,c
 12175  012F98                     	endif
 12176  012F98  0009               	tblrd		*+
 12177  012F9A  CFF5 F146          	movff	tablat,___ftmul@f1
 12178  012F9E  0009               	tblrd		*+
 12179  012FA0  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12180  012FA4  000A               	tblrd		*-
 12181  012FA6  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12182  012FAA  EC56  F0A3         	call	___ftmul	;wreg free
 12183  012FAE  C146  F15B         	movff	?___ftmul,_fround$3139
 12184  012FB2  C147  F15C         	movff	?___ftmul+1,_fround$3139+1
 12185  012FB6  C148  F15D         	movff	?___ftmul+2,_fround$3139+2
 12186                           
 12187                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 12188  012FBA  C15B  F146         	movff	_fround$3139,___ftmul@f1
 12189  012FBE  C15C  F147         	movff	_fround$3139+1,___ftmul@f1+1
 12190  012FC2  C15D  F148         	movff	_fround$3139+2,___ftmul@f1+2
 12191  012FC6  0E00               	movlw	0
 12192  012FC8  0101               	movlb	1	; () banked
 12193  012FCA  6F49               	movwf	___ftmul@f2& (0+255),b
 12194  012FCC  0E00               	movlw	0
 12195  012FCE  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12196  012FD0  0E3F               	movlw	63
 12197  012FD2  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12198  012FD4  EC56  F0A3         	call	___ftmul	;wreg free
 12199  012FD8  C146  F155         	movff	?___ftmul,?_fround
 12200  012FDC  C147  F156         	movff	?___ftmul+1,?_fround+1
 12201  012FE0  C148  F157         	movff	?___ftmul+2,?_fround+2
 12202  012FE4  0012               	return	
 12203  012FE6                     l1077:
 12204                           
 12205                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 12206  012FE6  0101               	movlb	1	; () banked
 12207  012FE8  515E               	movf	fround@prec& (0+255),w,b
 12208  012FEA  0D03               	mullw	3
 12209  012FEC  0E78               	movlw	low __npowers_
 12210  012FEE  24F3               	addwf	prodl,w,c
 12211  012FF0  6EF6               	movwf	tblptrl,c
 12212  012FF2  0EF3               	movlw	high __npowers_
 12213  012FF4  20F4               	addwfc	prodh,w,c
 12214  012FF6  6EF7               	movwf	tblptrh,c
 12215  012FF8                     	if	1	;There are 3 active tblptr bytes
 12216  012FF8  6AF8               	clrf	tblptru,c
 12217  012FFA  0E00               	movlw	low (__mediumconst shr (0+16))
 12218  012FFC  22F8               	addwfc	tblptru,f,c
 12219  012FFE                     	endif
 12220  012FFE  0009               	tblrd		*+
 12221  013000  CFF5 F146          	movff	tablat,___ftmul@f1
 12222  013004  0009               	tblrd		*+
 12223  013006  CFF5 F147          	movff	tablat,___ftmul@f1+1
 12224  01300A  000A               	tblrd		*-
 12225  01300C  CFF5 F148          	movff	tablat,___ftmul@f1+2
 12226  013010  0E00               	movlw	0
 12227  013012  6F49               	movwf	___ftmul@f2& (0+255),b
 12228  013014  0E00               	movlw	0
 12229  013016  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 12230  013018  0E3F               	movlw	63
 12231  01301A  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 12232  01301C  EC56  F0A3         	call	___ftmul	;wreg free
 12233  013020  C146  F155         	movff	?___ftmul,?_fround
 12234  013024  C147  F156         	movff	?___ftmul+1,?_fround+1
 12235  013028  C148  F157         	movff	?___ftmul+2,?_fround+2
 12236  01302C  0012               	return	
 12237  01302E                     __end_of_fround:
 12238                           	opt stack 0
 12239                           tblptru	equ	0xFF8
 12240                           tblptrh	equ	0xFF7
 12241                           tblptrl	equ	0xFF6
 12242                           tablat	equ	0xFF5
 12243                           prodh	equ	0xFF4
 12244                           prodl	equ	0xFF3
 12245                           intcon	equ	0xFF2
 12246                           postinc0	equ	0xFEE
 12247                           wreg	equ	0xFE8
 12248                           indf1	equ	0xFE7
 12249                           postdec1	equ	0xFE5
 12250                           fsr1h	equ	0xFE2
 12251                           fsr1l	equ	0xFE1
 12252                           indf2	equ	0xFDF
 12253                           postinc2	equ	0xFDE
 12254                           postdec2	equ	0xFDD
 12255                           fsr2h	equ	0xFDA
 12256                           fsr2l	equ	0xFD9
 12257                           status	equ	0xFD8
 12258                           
 12259 ;; *************** function ___wmul *****************
 12260 ;; Defined at:
 12261 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 12262 ;; Parameters:    Size  Location     Type
 12263 ;;  multiplier      2   37[BANK1 ] unsigned int 
 12264 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 12265 ;; Auto vars:     Size  Location     Type
 12266 ;;  product         2   41[BANK1 ] unsigned int 
 12267 ;; Return value:  Size  Location     Type
 12268 ;;                  2   37[BANK1 ] unsigned int 
 12269 ;; Registers used:
 12270 ;;		wreg, status,2, status,0, prodl, prodh
 12271 ;; Tracked objects:
 12272 ;;		On entry : 0/0
 12273 ;;		On exit  : 0/0
 12274 ;;		Unchanged: 0/0
 12275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12276 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12277 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12279 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12280 ;;Total ram usage:        6 bytes
 12281 ;; Hardware stack levels used:    1
 12282 ;; Hardware stack levels required when called:   14
 12283 ;; This function calls:
 12284 ;;		Nothing
 12285 ;; This function is called by:
 12286 ;;		_ringBufferLUT
 12287 ;;		_fround
 12288 ;;		_scale
 12289 ;;		_printf
 12290 ;;		_atoi
 12291 ;; This function uses a non-reentrant model
 12292 ;;
 12293                           
 12294                           	psect	text25
 12295  0160CE                     __ptext25:
 12296                           	opt stack 0
 12297  0160CE                     ___wmul:
 12298                           	opt stack 12
 12299                           
 12300                           ;incstack = 0
 12301  0160CE  0101               	movlb	1	; () banked
 12302  0160D0  5125               	movf	___wmul@multiplier& (0+255),w,b
 12303  0160D2  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12304  0160D4  CFF3 F129          	movff	prodl,___wmul@product
 12305  0160D8  CFF4 F12A          	movff	prodh,___wmul@product+1
 12306  0160DC  5125               	movf	___wmul@multiplier& (0+255),w,b
 12307  0160DE  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12308  0160E0  50F3               	movf	prodl,w,c
 12309  0160E2  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12310  0160E4  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12311  0160E6  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12312  0160E8  50F3               	movf	prodl,w,c
 12313  0160EA  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12314                           
 12315                           ; BSR set to: 1
 12316  0160EC  C129  F125         	movff	___wmul@product,?___wmul
 12317  0160F0  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 12318  0160F4  0012               	return	
 12319  0160F6                     __end_of___wmul:
 12320                           	opt stack 0
 12321                           tblptru	equ	0xFF8
 12322                           tblptrh	equ	0xFF7
 12323                           tblptrl	equ	0xFF6
 12324                           tablat	equ	0xFF5
 12325                           prodh	equ	0xFF4
 12326                           prodl	equ	0xFF3
 12327                           intcon	equ	0xFF2
 12328                           postinc0	equ	0xFEE
 12329                           wreg	equ	0xFE8
 12330                           indf1	equ	0xFE7
 12331                           postdec1	equ	0xFE5
 12332                           fsr1h	equ	0xFE2
 12333                           fsr1l	equ	0xFE1
 12334                           indf2	equ	0xFDF
 12335                           postinc2	equ	0xFDE
 12336                           postdec2	equ	0xFDD
 12337                           fsr2h	equ	0xFDA
 12338                           fsr2l	equ	0xFD9
 12339                           status	equ	0xFD8
 12340                           
 12341 ;; *************** function ___ftmul *****************
 12342 ;; Defined at:
 12343 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;  f1              3   70[BANK1 ] float 
 12346 ;;  f2              3   73[BANK1 ] float 
 12347 ;; Auto vars:     Size  Location     Type
 12348 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 12349 ;;  sign            1   84[BANK1 ] unsigned char 
 12350 ;;  cntr            1   83[BANK1 ] unsigned char 
 12351 ;;  exp             1   79[BANK1 ] unsigned char 
 12352 ;; Return value:  Size  Location     Type
 12353 ;;                  3   70[BANK1 ] float 
 12354 ;; Registers used:
 12355 ;;		wreg, status,2, status,0, cstack
 12356 ;; Tracked objects:
 12357 ;;		On entry : 0/0
 12358 ;;		On exit  : 0/0
 12359 ;;		Unchanged: 0/0
 12360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12361 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12362 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12363 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12364 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12365 ;;Total ram usage:       15 bytes
 12366 ;; Hardware stack levels used:    1
 12367 ;; Hardware stack levels required when called:   15
 12368 ;; This function calls:
 12369 ;;		___ftpack
 12370 ;; This function is called by:
 12371 ;;		_ringBufferLUT
 12372 ;;		_fround
 12373 ;;		_scale
 12374 ;;		_printf
 12375 ;; This function uses a non-reentrant model
 12376 ;;
 12377                           
 12378                           	psect	text26
 12379  0146AC                     __ptext26:
 12380                           	opt stack 0
 12381  0146AC                     ___ftmul:
 12382                           	opt stack 11
 12383                           
 12384                           ; BSR set to: 1
 12385                           ;incstack = 0
 12386  0146AC  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 12387  0146B0  0101               	movlb	1	; () banked
 12388  0146B2  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12389  0146B4  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12390  0146B6  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 12391  0146B8  374C               	rlcf	??___ftmul& (0+255),f,b
 12392  0146BA  E301               	bnc	u9261
 12393  0146BC  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12394  0146BE                     u9261:
 12395  0146BE  514C               	movf	??___ftmul& (0+255),w,b
 12396  0146C0  6F4F               	movwf	___ftmul@exp& (0+255),b
 12397  0146C2  514F               	movf	___ftmul@exp& (0+255),w,b
 12398  0146C4  A4D8               	btfss	status,2,c
 12399  0146C6  D007               	goto	l1572
 12400                           
 12401                           ; BSR set to: 1
 12402  0146C8  0E00               	movlw	0
 12403  0146CA  6F46               	movwf	?___ftmul& (0+255),b
 12404  0146CC  0E00               	movlw	0
 12405  0146CE  6F47               	movwf	(?___ftmul+1)& (0+255),b
 12406  0146D0  0E00               	movlw	0
 12407  0146D2  6F48               	movwf	(?___ftmul+2)& (0+255),b
 12408                           
 12409                           ; BSR set to: 1
 12410  0146D4  0012               	return	
 12411  0146D6                     l1572:
 12412                           
 12413                           ; BSR set to: 1
 12414                           
 12415                           ; BSR set to: 1
 12416  0146D6  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 12417  0146DA  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12418  0146DC  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12419  0146DE  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 12420  0146E0  374C               	rlcf	??___ftmul& (0+255),f,b
 12421  0146E2  E301               	bnc	u9281
 12422  0146E4  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12423  0146E6                     u9281:
 12424  0146E6  514C               	movf	??___ftmul& (0+255),w,b
 12425  0146E8  6F54               	movwf	___ftmul@sign& (0+255),b
 12426  0146EA  5154               	movf	___ftmul@sign& (0+255),w,b
 12427  0146EC  A4D8               	btfss	status,2,c
 12428  0146EE  D007               	goto	l1574
 12429                           
 12430                           ; BSR set to: 1
 12431  0146F0  0E00               	movlw	0
 12432  0146F2  6F46               	movwf	?___ftmul& (0+255),b
 12433  0146F4  0E00               	movlw	0
 12434  0146F6  6F47               	movwf	(?___ftmul+1)& (0+255),b
 12435  0146F8  0E00               	movlw	0
 12436  0146FA  6F48               	movwf	(?___ftmul+2)& (0+255),b
 12437                           
 12438                           ; BSR set to: 1
 12439  0146FC  0012               	return	
 12440  0146FE                     l1574:
 12441                           
 12442                           ; BSR set to: 1
 12443                           
 12444                           ; BSR set to: 1
 12445  0146FE  5154               	movf	___ftmul@sign& (0+255),w,b
 12446  014700  0F7B               	addlw	123
 12447  014702  274F               	addwf	___ftmul@exp& (0+255),f,b
 12448                           
 12449                           ; BSR set to: 1
 12450  014704  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 12451  014708  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12452  01470A  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 12453  01470C  0E80               	movlw	128
 12454  01470E  1754               	andwf	___ftmul@sign& (0+255),f,b
 12455                           
 12456                           ; BSR set to: 1
 12457  014710  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 12458                           
 12459                           ; BSR set to: 1
 12460  014712  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 12461                           
 12462                           ; BSR set to: 1
 12463  014714  0EFF               	movlw	255
 12464  014716  1749               	andwf	___ftmul@f2& (0+255),f,b
 12465  014718  0EFF               	movlw	255
 12466  01471A  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 12467  01471C  0E00               	movlw	0
 12468  01471E  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 12469                           
 12470                           ; BSR set to: 1
 12471  014720  0E00               	movlw	0
 12472  014722  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 12473  014724  0E00               	movlw	0
 12474  014726  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 12475  014728  0E00               	movlw	0
 12476  01472A  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 12477                           
 12478                           ; BSR set to: 1
 12479  01472C  0E07               	movlw	7
 12480  01472E  6F53               	movwf	___ftmul@cntr& (0+255),b
 12481  014730                     
 12482                           ; BSR set to: 1
 12483                           
 12484                           ; BSR set to: 1
 12485  014730  A146               	btfss	___ftmul@f1& (0+255),0,b
 12486  014732  D006               	goto	l1576
 12487                           
 12488                           ; BSR set to: 1
 12489  014734  5149               	movf	___ftmul@f2& (0+255),w,b
 12490  014736  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12491  014738  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 12492  01473A  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12493  01473C  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12494  01473E  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12495  014740                     l1576:
 12496                           
 12497                           ; BSR set to: 1
 12498                           
 12499                           ; BSR set to: 1
 12500  014740  90D8               	bcf	status,0,c
 12501  014742  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12502  014744  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12503  014746  3346               	rrcf	___ftmul@f1& (0+255),f,b
 12504  014748  90D8               	bcf	status,0,c
 12505  01474A  3749               	rlcf	___ftmul@f2& (0+255),f,b
 12506  01474C  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 12507  01474E  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 12508                           
 12509                           ; BSR set to: 1
 12510  014750  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 12511  014752  D7EE               	goto	l1575
 12512                           
 12513                           ; BSR set to: 1
 12514                           
 12515                           ; BSR set to: 1
 12516  014754  0E09               	movlw	9
 12517  014756  6F53               	movwf	___ftmul@cntr& (0+255),b
 12518  014758                     
 12519                           ; BSR set to: 1
 12520                           
 12521                           ; BSR set to: 1
 12522  014758  A146               	btfss	___ftmul@f1& (0+255),0,b
 12523  01475A  D006               	goto	l1579
 12524                           
 12525                           ; BSR set to: 1
 12526  01475C  5149               	movf	___ftmul@f2& (0+255),w,b
 12527  01475E  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12528  014760  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 12529  014762  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12530  014764  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12531  014766  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12532  014768                     l1579:
 12533                           
 12534                           ; BSR set to: 1
 12535                           
 12536                           ; BSR set to: 1
 12537  014768  90D8               	bcf	status,0,c
 12538  01476A  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12539  01476C  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12540  01476E  3346               	rrcf	___ftmul@f1& (0+255),f,b
 12541  014770  90D8               	bcf	status,0,c
 12542  014772  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 12543  014774  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 12544  014776  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 12545                           
 12546                           ; BSR set to: 1
 12547  014778  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 12548  01477A  D7EE               	goto	l1578
 12549                           
 12550                           ; BSR set to: 1
 12551                           
 12552                           ; BSR set to: 1
 12553  01477C  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 12554  014780  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 12555  014784  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 12556  014788  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 12557  01478C  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 12558  014790  EC5A  F0A7         	call	___ftpack	;wreg free
 12559  014794  C117  F146         	movff	?___ftpack,?___ftmul
 12560  014798  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 12561  01479C  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 12562  0147A0  0012               	return	
 12563  0147A2                     __end_of___ftmul:
 12564                           	opt stack 0
 12565                           tblptru	equ	0xFF8
 12566                           tblptrh	equ	0xFF7
 12567                           tblptrl	equ	0xFF6
 12568                           tablat	equ	0xFF5
 12569                           prodh	equ	0xFF4
 12570                           prodl	equ	0xFF3
 12571                           intcon	equ	0xFF2
 12572                           postinc0	equ	0xFEE
 12573                           wreg	equ	0xFE8
 12574                           indf1	equ	0xFE7
 12575                           postdec1	equ	0xFE5
 12576                           fsr1h	equ	0xFE2
 12577                           fsr1l	equ	0xFE1
 12578                           indf2	equ	0xFDF
 12579                           postinc2	equ	0xFDE
 12580                           postdec2	equ	0xFDD
 12581                           fsr2h	equ	0xFDA
 12582                           fsr2l	equ	0xFD9
 12583                           status	equ	0xFD8
 12584                           
 12585 ;; *************** function ___awmod *****************
 12586 ;; Defined at:
 12587 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 12588 ;; Parameters:    Size  Location     Type
 12589 ;;  dividend        2   23[BANK1 ] int 
 12590 ;;  divisor         2   25[BANK1 ] int 
 12591 ;; Auto vars:     Size  Location     Type
 12592 ;;  sign            1   28[BANK1 ] unsigned char 
 12593 ;;  counter         1   27[BANK1 ] unsigned char 
 12594 ;; Return value:  Size  Location     Type
 12595 ;;                  2   23[BANK1 ] int 
 12596 ;; Registers used:
 12597 ;;		wreg, status,2, status,0
 12598 ;; Tracked objects:
 12599 ;;		On entry : 0/0
 12600 ;;		On exit  : 0/0
 12601 ;;		Unchanged: 0/0
 12602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12603 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12604 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12606 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12607 ;;Total ram usage:        6 bytes
 12608 ;; Hardware stack levels used:    1
 12609 ;; Hardware stack levels required when called:   14
 12610 ;; This function calls:
 12611 ;;		Nothing
 12612 ;; This function is called by:
 12613 ;;		_fround
 12614 ;;		_scale
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           	psect	text27
 12619  015712                     __ptext27:
 12620                           	opt stack 0
 12621  015712                     ___awmod:
 12622                           	opt stack 12
 12623                           
 12624                           ;incstack = 0
 12625  015712  0E00               	movlw	0
 12626  015714  0101               	movlb	1	; () banked
 12627  015716  6F1C               	movwf	___awmod@sign& (0+255),b
 12628                           
 12629                           ; BSR set to: 1
 12630  015718  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12631  01571A  D006               	goto	l1413
 12632                           
 12633                           ; BSR set to: 1
 12634  01571C  6D17               	negf	___awmod@dividend& (0+255),b
 12635  01571E  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12636  015720  B0D8               	btfsc	status,0,c
 12637  015722  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12638                           
 12639                           ; BSR set to: 1
 12640  015724  0E01               	movlw	1
 12641  015726  6F1C               	movwf	___awmod@sign& (0+255),b
 12642  015728                     l1413:
 12643                           
 12644                           ; BSR set to: 1
 12645                           
 12646                           ; BSR set to: 1
 12647  015728  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12648  01572A  D004               	goto	l1414
 12649                           
 12650                           ; BSR set to: 1
 12651  01572C  6D19               	negf	___awmod@divisor& (0+255),b
 12652  01572E  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 12653  015730  B0D8               	btfsc	status,0,c
 12654  015732  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 12655  015734                     l1414:
 12656                           
 12657                           ; BSR set to: 1
 12658                           
 12659                           ; BSR set to: 1
 12660  015734  5119               	movf	___awmod@divisor& (0+255),w,b
 12661  015736  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12662  015738  B4D8               	btfsc	status,2,c
 12663  01573A  D018               	goto	l1421
 12664                           
 12665                           ; BSR set to: 1
 12666  01573C  0E01               	movlw	1
 12667  01573E  6F1B               	movwf	___awmod@counter& (0+255),b
 12668  015740  D004               	goto	l1416
 12669  015742                     
 12670                           ; BSR set to: 1
 12671                           
 12672                           ; BSR set to: 1
 12673  015742  90D8               	bcf	status,0,c
 12674  015744  3719               	rlcf	___awmod@divisor& (0+255),f,b
 12675  015746  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12676  015748  2B1B               	incf	___awmod@counter& (0+255),f,b
 12677  01574A                     l1416:
 12678                           
 12679                           ; BSR set to: 1
 12680                           
 12681                           ; BSR set to: 1
 12682  01574A  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12683  01574C  D7FA               	goto	l1417
 12684  01574E                     u9430:
 12685                           
 12686                           ; BSR set to: 1
 12687                           
 12688                           ; BSR set to: 1
 12689                           
 12690                           ; BSR set to: 1
 12691  01574E  5119               	movf	___awmod@divisor& (0+255),w,b
 12692  015750  5D17               	subwf	___awmod@dividend& (0+255),w,b
 12693  015752  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 12694  015754  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12695  015756  A0D8               	btfss	status,0,c
 12696  015758  D004               	goto	l1420
 12697                           
 12698                           ; BSR set to: 1
 12699  01575A  5119               	movf	___awmod@divisor& (0+255),w,b
 12700  01575C  5F17               	subwf	___awmod@dividend& (0+255),f,b
 12701  01575E  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 12702  015760  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12703  015762                     l1420:
 12704                           
 12705                           ; BSR set to: 1
 12706                           
 12707                           ; BSR set to: 1
 12708  015762  90D8               	bcf	status,0,c
 12709  015764  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12710  015766  3319               	rrcf	___awmod@divisor& (0+255),f,b
 12711                           
 12712                           ; BSR set to: 1
 12713  015768  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 12714  01576A  D7F1               	goto	u9430
 12715  01576C                     l1421:
 12716                           
 12717                           ; BSR set to: 1
 12718                           
 12719                           ; BSR set to: 1
 12720                           
 12721                           ; BSR set to: 1
 12722  01576C  511C               	movf	___awmod@sign& (0+255),w,b
 12723  01576E  B4D8               	btfsc	status,2,c
 12724  015770  D004               	goto	l1422
 12725                           
 12726                           ; BSR set to: 1
 12727  015772  6D17               	negf	___awmod@dividend& (0+255),b
 12728  015774  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12729  015776  B0D8               	btfsc	status,0,c
 12730  015778  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12731  01577A                     l1422:
 12732                           
 12733                           ; BSR set to: 1
 12734                           
 12735                           ; BSR set to: 1
 12736  01577A  C117  F117         	movff	___awmod@dividend,?___awmod
 12737  01577E  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 12738  015782  0012               	return	
 12739  015784                     __end_of___awmod:
 12740                           	opt stack 0
 12741                           tblptru	equ	0xFF8
 12742                           tblptrh	equ	0xFF7
 12743                           tblptrl	equ	0xFF6
 12744                           tablat	equ	0xFF5
 12745                           prodh	equ	0xFF4
 12746                           prodl	equ	0xFF3
 12747                           intcon	equ	0xFF2
 12748                           postinc0	equ	0xFEE
 12749                           wreg	equ	0xFE8
 12750                           indf1	equ	0xFE7
 12751                           postdec1	equ	0xFE5
 12752                           fsr1h	equ	0xFE2
 12753                           fsr1l	equ	0xFE1
 12754                           indf2	equ	0xFDF
 12755                           postinc2	equ	0xFDE
 12756                           postdec2	equ	0xFDD
 12757                           fsr2h	equ	0xFDA
 12758                           fsr2l	equ	0xFD9
 12759                           status	equ	0xFD8
 12760                           
 12761 ;; *************** function ___awdiv *****************
 12762 ;; Defined at:
 12763 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12764 ;; Parameters:    Size  Location     Type
 12765 ;;  dividend        2   29[BANK1 ] int 
 12766 ;;  divisor         2   31[BANK1 ] int 
 12767 ;; Auto vars:     Size  Location     Type
 12768 ;;  quotient        2   35[BANK1 ] int 
 12769 ;;  sign            1   34[BANK1 ] unsigned char 
 12770 ;;  counter         1   33[BANK1 ] unsigned char 
 12771 ;; Return value:  Size  Location     Type
 12772 ;;                  2   29[BANK1 ] int 
 12773 ;; Registers used:
 12774 ;;		wreg, status,2, status,0
 12775 ;; Tracked objects:
 12776 ;;		On entry : 0/0
 12777 ;;		On exit  : 0/0
 12778 ;;		Unchanged: 0/0
 12779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12780 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12781 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12783 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12784 ;;Total ram usage:        8 bytes
 12785 ;; Hardware stack levels used:    1
 12786 ;; Hardware stack levels required when called:   14
 12787 ;; This function calls:
 12788 ;;		Nothing
 12789 ;; This function is called by:
 12790 ;;		_fround
 12791 ;;		_scale
 12792 ;;		_printf
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796                           	psect	text28
 12797  01539C                     __ptext28:
 12798                           	opt stack 0
 12799  01539C                     ___awdiv:
 12800                           	opt stack 12
 12801                           
 12802                           ; BSR set to: 1
 12803                           ;incstack = 0
 12804  01539C  0E00               	movlw	0
 12805  01539E  0101               	movlb	1	; () banked
 12806  0153A0  6F22               	movwf	___awdiv@sign& (0+255),b
 12807                           
 12808                           ; BSR set to: 1
 12809  0153A2  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12810  0153A4  D006               	goto	l1400
 12811                           
 12812                           ; BSR set to: 1
 12813  0153A6  6D1F               	negf	___awdiv@divisor& (0+255),b
 12814  0153A8  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12815  0153AA  B0D8               	btfsc	status,0,c
 12816  0153AC  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12817                           
 12818                           ; BSR set to: 1
 12819  0153AE  0E01               	movlw	1
 12820  0153B0  6F22               	movwf	___awdiv@sign& (0+255),b
 12821  0153B2                     l1400:
 12822                           
 12823                           ; BSR set to: 1
 12824                           
 12825                           ; BSR set to: 1
 12826  0153B2  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12827  0153B4  D006               	goto	l1401
 12828                           
 12829                           ; BSR set to: 1
 12830  0153B6  6D1D               	negf	___awdiv@dividend& (0+255),b
 12831  0153B8  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12832  0153BA  B0D8               	btfsc	status,0,c
 12833  0153BC  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12834                           
 12835                           ; BSR set to: 1
 12836  0153BE  0E01               	movlw	1
 12837  0153C0  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 12838  0153C2                     l1401:
 12839                           
 12840                           ; BSR set to: 1
 12841                           
 12842                           ; BSR set to: 1
 12843  0153C2  0E00               	movlw	0
 12844  0153C4  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 12845  0153C6  0E00               	movlw	0
 12846  0153C8  6F23               	movwf	___awdiv@quotient& (0+255),b
 12847                           
 12848                           ; BSR set to: 1
 12849  0153CA  511F               	movf	___awdiv@divisor& (0+255),w,b
 12850  0153CC  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12851  0153CE  B4D8               	btfsc	status,2,c
 12852  0153D0  D01C               	goto	l1408
 12853                           
 12854                           ; BSR set to: 1
 12855  0153D2  0E01               	movlw	1
 12856  0153D4  6F21               	movwf	___awdiv@counter& (0+255),b
 12857  0153D6  D004               	goto	l1403
 12858  0153D8                     
 12859                           ; BSR set to: 1
 12860                           
 12861                           ; BSR set to: 1
 12862  0153D8  90D8               	bcf	status,0,c
 12863  0153DA  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 12864  0153DC  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12865  0153DE  2B21               	incf	___awdiv@counter& (0+255),f,b
 12866  0153E0                     l1403:
 12867                           
 12868                           ; BSR set to: 1
 12869                           
 12870                           ; BSR set to: 1
 12871  0153E0  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12872  0153E2  D7FA               	goto	l1404
 12873  0153E4                     u9370:
 12874                           
 12875                           ; BSR set to: 1
 12876                           
 12877                           ; BSR set to: 1
 12878                           
 12879                           ; BSR set to: 1
 12880  0153E4  90D8               	bcf	status,0,c
 12881  0153E6  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 12882  0153E8  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12883                           
 12884                           ; BSR set to: 1
 12885  0153EA  511F               	movf	___awdiv@divisor& (0+255),w,b
 12886  0153EC  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 12887  0153EE  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12888  0153F0  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12889  0153F2  A0D8               	btfss	status,0,c
 12890  0153F4  D005               	goto	l1407
 12891                           
 12892                           ; BSR set to: 1
 12893  0153F6  511F               	movf	___awdiv@divisor& (0+255),w,b
 12894  0153F8  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 12895  0153FA  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12896  0153FC  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12897                           
 12898                           ; BSR set to: 1
 12899  0153FE  8123               	bsf	___awdiv@quotient& (0+255),0,b
 12900  015400                     l1407:
 12901                           
 12902                           ; BSR set to: 1
 12903                           
 12904                           ; BSR set to: 1
 12905  015400  90D8               	bcf	status,0,c
 12906  015402  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12907  015404  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 12908                           
 12909                           ; BSR set to: 1
 12910  015406  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 12911  015408  D7ED               	goto	u9370
 12912  01540A                     l1408:
 12913                           
 12914                           ; BSR set to: 1
 12915                           
 12916                           ; BSR set to: 1
 12917                           
 12918                           ; BSR set to: 1
 12919  01540A  5122               	movf	___awdiv@sign& (0+255),w,b
 12920  01540C  B4D8               	btfsc	status,2,c
 12921  01540E  D004               	goto	l1409
 12922                           
 12923                           ; BSR set to: 1
 12924  015410  6D23               	negf	___awdiv@quotient& (0+255),b
 12925  015412  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12926  015414  B0D8               	btfsc	status,0,c
 12927  015416  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12928  015418                     l1409:
 12929                           
 12930                           ; BSR set to: 1
 12931                           
 12932                           ; BSR set to: 1
 12933  015418  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 12934  01541C  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 12935  015420  0012               	return	
 12936  015422                     __end_of___awdiv:
 12937                           	opt stack 0
 12938                           tblptru	equ	0xFF8
 12939                           tblptrh	equ	0xFF7
 12940                           tblptrl	equ	0xFF6
 12941                           tablat	equ	0xFF5
 12942                           prodh	equ	0xFF4
 12943                           prodl	equ	0xFF3
 12944                           intcon	equ	0xFF2
 12945                           postinc0	equ	0xFEE
 12946                           wreg	equ	0xFE8
 12947                           indf1	equ	0xFE7
 12948                           postdec1	equ	0xFE5
 12949                           fsr1h	equ	0xFE2
 12950                           fsr1l	equ	0xFE1
 12951                           indf2	equ	0xFDF
 12952                           postinc2	equ	0xFDE
 12953                           postdec2	equ	0xFDD
 12954                           fsr2h	equ	0xFDA
 12955                           fsr2l	equ	0xFD9
 12956                           status	equ	0xFD8
 12957                           
 12958 ;; *************** function __tdiv_to_l_ *****************
 12959 ;; Defined at:
 12960 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12961 ;; Parameters:    Size  Location     Type
 12962 ;;  f1              3   23[BANK1 ] float 
 12963 ;;  f2              3   26[BANK1 ] float 
 12964 ;; Auto vars:     Size  Location     Type
 12965 ;;  quot            4   32[BANK1 ] unsigned long 
 12966 ;;  exp1            1   37[BANK1 ] unsigned char 
 12967 ;;  cntr            1   36[BANK1 ] unsigned char 
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  4   23[BANK1 ] unsigned long 
 12970 ;; Registers used:
 12971 ;;		wreg, status,2, status,0
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12977 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12978 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12979 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12980 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12981 ;;Total ram usage:       15 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:   14
 12984 ;; This function calls:
 12985 ;;		Nothing
 12986 ;; This function is called by:
 12987 ;;		_printf
 12988 ;; This function uses a non-reentrant model
 12989 ;;
 12990                           
 12991                           	psect	text29
 12992  013FE0                     __ptext29:
 12993                           	opt stack 0
 12994  013FE0                     __tdiv_to_l_:
 12995                           	opt stack 13
 12996                           
 12997                           ; BSR set to: 1
 12998                           ;incstack = 0
 12999  013FE0  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 13000  013FE4  0101               	movlb	1	; () banked
 13001  013FE6  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13002  013FE8  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13003  013FEA  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13004  013FEC  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13005  013FEE  E301               	bnc	u9661
 13006  013FF0  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13007  013FF2                     u9661:
 13008  013FF2  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 13009  013FF4  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 13010  013FF6  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13011  013FF8  A4D8               	btfss	status,2,c
 13012  013FFA  D009               	goto	l1548
 13013                           
 13014                           ; BSR set to: 1
 13015  013FFC  0E00               	movlw	0
 13016  013FFE  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13017  014000  0E00               	movlw	0
 13018  014002  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13019  014004  0E00               	movlw	0
 13020  014006  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13021  014008  0E00               	movlw	0
 13022  01400A  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13023                           
 13024                           ; BSR set to: 1
 13025  01400C  0012               	return	
 13026  01400E                     l1548:
 13027                           
 13028                           ; BSR set to: 1
 13029                           
 13030                           ; BSR set to: 1
 13031  01400E  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 13032  014012  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 13033  014014  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 13034  014016  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13035  014018  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 13036  01401A  E301               	bnc	u9681
 13037  01401C  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 13038  01401E                     u9681:
 13039  01401E  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 13040  014020  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13041  014022  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13042  014024  A4D8               	btfss	status,2,c
 13043  014026  D009               	goto	l1550
 13044                           
 13045                           ; BSR set to: 1
 13046  014028  0E00               	movlw	0
 13047  01402A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13048  01402C  0E00               	movlw	0
 13049  01402E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13050  014030  0E00               	movlw	0
 13051  014032  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13052  014034  0E00               	movlw	0
 13053  014036  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13054                           
 13055                           ; BSR set to: 1
 13056  014038  0012               	return	
 13057  01403A                     l1550:
 13058                           
 13059                           ; BSR set to: 1
 13060                           
 13061                           ; BSR set to: 1
 13062  01403A  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 13063                           
 13064                           ; BSR set to: 1
 13065  01403C  0EFF               	movlw	255
 13066  01403E  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 13067  014040  0EFF               	movlw	255
 13068  014042  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13069  014044  0E00               	movlw	0
 13070  014046  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13071  014048  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 13072                           
 13073                           ; BSR set to: 1
 13074  01404A  0EFF               	movlw	255
 13075  01404C  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 13076  01404E  0EFF               	movlw	255
 13077  014050  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 13078  014052  0E00               	movlw	0
 13079  014054  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 13080                           
 13081                           ; BSR set to: 1
 13082  014056  0E00               	movlw	0
 13083  014058  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 13084  01405A  0E00               	movlw	0
 13085  01405C  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 13086  01405E  0E00               	movlw	0
 13087  014060  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 13088  014062  0E00               	movlw	0
 13089  014064  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 13090                           
 13091                           ; BSR set to: 1
 13092  014066  0E7F               	movlw	127
 13093  014068  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13094                           
 13095                           ; BSR set to: 1
 13096  01406A  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 13097  01406C  0F98               	addlw	152
 13098  01406E  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 13099                           
 13100                           ; BSR set to: 1
 13101  014070  0E18               	movlw	24
 13102  014072  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 13103  014074                     l1551:
 13104                           
 13105                           ; BSR set to: 1
 13106  014074  90D8               	bcf	status,0,c
 13107  014076  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13108  014078  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13109  01407A  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13110  01407C  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13111                           
 13112                           ; BSR set to: 1
 13113  01407E  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13114  014080  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 13115  014082  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13116  014084  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 13117  014086  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13118  014088  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 13119  01408A  A0D8               	btfss	status,0,c
 13120  01408C  D007               	goto	l1552
 13121                           
 13122                           ; BSR set to: 1
 13123  01408E  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 13124  014090  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 13125  014092  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 13126  014094  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13127  014096  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 13128  014098  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13129                           
 13130                           ; BSR set to: 1
 13131  01409A  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 13132  01409C                     l1552:
 13133                           
 13134                           ; BSR set to: 1
 13135  01409C  90D8               	bcf	status,0,c
 13136  01409E  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 13137  0140A0  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 13138  0140A2  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 13139                           
 13140                           ; BSR set to: 1
 13141  0140A4  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 13142  0140A6  D7E6               	goto	l1551
 13143                           
 13144                           ; BSR set to: 1
 13145                           
 13146                           ; BSR set to: 1
 13147  0140A8  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 13148  0140AA  D016               	goto	l1554
 13149                           
 13150                           ; BSR set to: 1
 13151  0140AC  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13152  0140AE  0A80               	xorlw	128
 13153  0140B0  0F97               	addlw	151
 13154  0140B2  B0D8               	btfsc	status,0,c
 13155  0140B4  D009               	goto	l1555
 13156                           
 13157                           ; BSR set to: 1
 13158  0140B6  0E00               	movlw	0
 13159  0140B8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13160  0140BA  0E00               	movlw	0
 13161  0140BC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13162  0140BE  0E00               	movlw	0
 13163  0140C0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13164  0140C2  0E00               	movlw	0
 13165  0140C4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13166                           
 13167                           ; BSR set to: 1
 13168  0140C6  0012               	return	
 13169  0140C8                     l1555:
 13170                           
 13171                           ; BSR set to: 1
 13172                           
 13173                           ; BSR set to: 1
 13174                           
 13175                           ; BSR set to: 1
 13176  0140C8  90D8               	bcf	status,0,c
 13177  0140CA  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13178  0140CC  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13179  0140CE  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13180  0140D0  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 13181                           
 13182                           ; BSR set to: 1
 13183  0140D2  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 13184  0140D4  D7F9               	goto	l1555
 13185                           
 13186                           ; BSR set to: 1
 13187  0140D6  D015               	goto	u9740
 13188  0140D8                     l1554:
 13189                           
 13190                           ; BSR set to: 1
 13191                           
 13192                           ; BSR set to: 1
 13193  0140D8  0E17               	movlw	23
 13194  0140DA  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 13195  0140DC  D00F               	goto	l1560
 13196                           
 13197                           ; BSR set to: 1
 13198  0140DE  0E00               	movlw	0
 13199  0140E0  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 13200  0140E2  0E00               	movlw	0
 13201  0140E4  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 13202  0140E6  0E00               	movlw	0
 13203  0140E8  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 13204  0140EA  0E00               	movlw	0
 13205  0140EC  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 13206                           
 13207                           ; BSR set to: 1
 13208  0140EE  0012               	return	
 13209  0140F0                     
 13210                           ; BSR set to: 1
 13211                           
 13212                           ; BSR set to: 1
 13213  0140F0  90D8               	bcf	status,0,c
 13214  0140F2  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 13215  0140F4  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 13216  0140F6  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 13217  0140F8  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 13218  0140FA  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 13219  0140FC                     l1560:
 13220                           
 13221                           ; BSR set to: 1
 13222                           
 13223                           ; BSR set to: 1
 13224  0140FC  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 13225  0140FE  A4D8               	btfss	status,2,c
 13226  014100  D7F7               	goto	l1561
 13227  014102                     u9740:
 13228                           
 13229                           ; BSR set to: 1
 13230                           
 13231                           ; BSR set to: 1
 13232  014102  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 13233  014106  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 13234  01410A  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 13235  01410E  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 13236                           
 13237                           ; BSR set to: 1
 13238  014112  0012               	return		;funcret
 13239  014114                     __end_of__tdiv_to_l_:
 13240                           	opt stack 0
 13241                           tblptru	equ	0xFF8
 13242                           tblptrh	equ	0xFF7
 13243                           tblptrl	equ	0xFF6
 13244                           tablat	equ	0xFF5
 13245                           prodh	equ	0xFF4
 13246                           prodl	equ	0xFF3
 13247                           intcon	equ	0xFF2
 13248                           postinc0	equ	0xFEE
 13249                           wreg	equ	0xFE8
 13250                           indf1	equ	0xFE7
 13251                           postdec1	equ	0xFE5
 13252                           fsr1h	equ	0xFE2
 13253                           fsr1l	equ	0xFE1
 13254                           indf2	equ	0xFDF
 13255                           postinc2	equ	0xFDE
 13256                           postdec2	equ	0xFDD
 13257                           fsr2h	equ	0xFDA
 13258                           fsr2l	equ	0xFD9
 13259                           status	equ	0xFD8
 13260                           
 13261 ;; *************** function __div_to_l_ *****************
 13262 ;; Defined at:
 13263 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  f1              3   23[BANK1 ] unsigned long 
 13266 ;;  f2              3   26[BANK1 ] unsigned long 
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;  quot            4   29[BANK1 ] unsigned long 
 13269 ;;  exp1            1   34[BANK1 ] unsigned char 
 13270 ;;  cntr            1   33[BANK1 ] unsigned char 
 13271 ;; Return value:  Size  Location     Type
 13272 ;;                  4   23[BANK1 ] unsigned long 
 13273 ;; Registers used:
 13274 ;;		wreg, status,2, status,0
 13275 ;; Tracked objects:
 13276 ;;		On entry : 0/0
 13277 ;;		On exit  : 0/0
 13278 ;;		Unchanged: 0/0
 13279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13280 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13281 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13283 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13284 ;;Total ram usage:       12 bytes
 13285 ;; Hardware stack levels used:    1
 13286 ;; Hardware stack levels required when called:   14
 13287 ;; This function calls:
 13288 ;;		Nothing
 13289 ;; This function is called by:
 13290 ;;		_printf
 13291 ;; This function uses a non-reentrant model
 13292 ;;
 13293                           
 13294                           	psect	text30
 13295  014246                     __ptext30:
 13296                           	opt stack 0
 13297  014246                     __div_to_l_:
 13298                           	opt stack 13
 13299                           
 13300                           ; BSR set to: 1
 13301                           ;incstack = 0
 13302  014246  0101               	movlb	1	; () banked
 13303  014248  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 13304  01424A  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 13305  01424C  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 13306  01424E  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13307  014250  A4D8               	btfss	status,2,c
 13308  014252  D009               	goto	l1444
 13309                           
 13310                           ; BSR set to: 1
 13311  014254  0E00               	movlw	0
 13312  014256  6F17               	movwf	?__div_to_l_& (0+255),b
 13313  014258  0E00               	movlw	0
 13314  01425A  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13315  01425C  0E00               	movlw	0
 13316  01425E  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13317  014260  0E00               	movlw	0
 13318  014262  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13319                           
 13320                           ; BSR set to: 1
 13321  014264  0012               	return	
 13322  014266                     l1444:
 13323                           
 13324                           ; BSR set to: 1
 13325                           
 13326                           ; BSR set to: 1
 13327  014266  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 13328  014268  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 13329  01426A  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13330  01426C  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13331  01426E  A4D8               	btfss	status,2,c
 13332  014270  D009               	goto	l1446
 13333                           
 13334                           ; BSR set to: 1
 13335  014272  0E00               	movlw	0
 13336  014274  6F17               	movwf	?__div_to_l_& (0+255),b
 13337  014276  0E00               	movlw	0
 13338  014278  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13339  01427A  0E00               	movlw	0
 13340  01427C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13341  01427E  0E00               	movlw	0
 13342  014280  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13343                           
 13344                           ; BSR set to: 1
 13345  014282  0012               	return	
 13346  014284                     l1446:
 13347                           
 13348                           ; BSR set to: 1
 13349                           
 13350                           ; BSR set to: 1
 13351  014284  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 13352                           
 13353                           ; BSR set to: 1
 13354  014286  0EFF               	movlw	255
 13355  014288  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 13356  01428A  0EFF               	movlw	255
 13357  01428C  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 13358  01428E  0EFF               	movlw	255
 13359  014290  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 13360  014292  0E00               	movlw	0
 13361  014294  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 13362                           
 13363                           ; BSR set to: 1
 13364  014296  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 13365  014298  0EFF               	movlw	255
 13366  01429A  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 13367  01429C  0EFF               	movlw	255
 13368  01429E  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 13369  0142A0  0EFF               	movlw	255
 13370  0142A2  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 13371  0142A4  0E00               	movlw	0
 13372  0142A6  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 13373                           
 13374                           ; BSR set to: 1
 13375  0142A8  0E00               	movlw	0
 13376  0142AA  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 13377  0142AC  0E00               	movlw	0
 13378  0142AE  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 13379  0142B0  0E00               	movlw	0
 13380  0142B2  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 13381  0142B4  0E00               	movlw	0
 13382  0142B6  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 13383                           
 13384                           ; BSR set to: 1
 13385  0142B8  0E7F               	movlw	127
 13386  0142BA  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13387                           
 13388                           ; BSR set to: 1
 13389  0142BC  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13390  0142BE  0FA0               	addlw	160
 13391  0142C0  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13392                           
 13393                           ; BSR set to: 1
 13394  0142C2  0E20               	movlw	32
 13395  0142C4  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13396  0142C6                     
 13397                           ; BSR set to: 1
 13398                           
 13399                           ; BSR set to: 1
 13400  0142C6  90D8               	bcf	status,0,c
 13401  0142C8  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 13402  0142CA  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13403  0142CC  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13404  0142CE  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13405                           
 13406                           ; BSR set to: 1
 13407  0142D0  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13408  0142D2  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 13409  0142D4  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13410  0142D6  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 13411  0142D8  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13412  0142DA  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 13413  0142DC  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13414  0142DE  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 13415  0142E0  A0D8               	btfss	status,0,c
 13416  0142E2  D009               	goto	l1448
 13417                           
 13418                           ; BSR set to: 1
 13419  0142E4  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13420  0142E6  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 13421  0142E8  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13422  0142EA  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 13423  0142EC  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13424  0142EE  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 13425  0142F0  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13426  0142F2  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 13427                           
 13428                           ; BSR set to: 1
 13429  0142F4  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 13430  0142F6                     l1448:
 13431                           
 13432                           ; BSR set to: 1
 13433                           
 13434                           ; BSR set to: 1
 13435  0142F6  90D8               	bcf	status,0,c
 13436  0142F8  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 13437  0142FA  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 13438  0142FC  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 13439  0142FE  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 13440                           
 13441                           ; BSR set to: 1
 13442  014300  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 13443  014302  D7E1               	goto	l1447
 13444                           
 13445                           ; BSR set to: 1
 13446                           
 13447                           ; BSR set to: 1
 13448  014304  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 13449  014306  D016               	goto	l1450
 13450                           
 13451                           ; BSR set to: 1
 13452  014308  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13453  01430A  0A80               	xorlw	128
 13454  01430C  0F9F               	addlw	159
 13455  01430E  B0D8               	btfsc	status,0,c
 13456  014310  D009               	goto	l1451
 13457                           
 13458                           ; BSR set to: 1
 13459  014312  0E00               	movlw	0
 13460  014314  6F17               	movwf	?__div_to_l_& (0+255),b
 13461  014316  0E00               	movlw	0
 13462  014318  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13463  01431A  0E00               	movlw	0
 13464  01431C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13465  01431E  0E00               	movlw	0
 13466  014320  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13467                           
 13468                           ; BSR set to: 1
 13469  014322  0012               	return	
 13470  014324                     l1451:
 13471                           
 13472                           ; BSR set to: 1
 13473                           
 13474                           ; BSR set to: 1
 13475                           
 13476                           ; BSR set to: 1
 13477  014324  90D8               	bcf	status,0,c
 13478  014326  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 13479  014328  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 13480  01432A  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 13481  01432C  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 13482                           
 13483                           ; BSR set to: 1
 13484  01432E  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 13485  014330  D7F9               	goto	l1451
 13486                           
 13487                           ; BSR set to: 1
 13488  014332  D015               	goto	u9810
 13489  014334                     l1450:
 13490                           
 13491                           ; BSR set to: 1
 13492                           
 13493                           ; BSR set to: 1
 13494  014334  0E1F               	movlw	31
 13495  014336  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 13496  014338  D00F               	goto	l1456
 13497                           
 13498                           ; BSR set to: 1
 13499  01433A  0E00               	movlw	0
 13500  01433C  6F17               	movwf	?__div_to_l_& (0+255),b
 13501  01433E  0E00               	movlw	0
 13502  014340  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13503  014342  0E00               	movlw	0
 13504  014344  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13505  014346  0E00               	movlw	0
 13506  014348  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13507                           
 13508                           ; BSR set to: 1
 13509  01434A  0012               	return	
 13510  01434C                     
 13511                           ; BSR set to: 1
 13512                           
 13513                           ; BSR set to: 1
 13514  01434C  90D8               	bcf	status,0,c
 13515  01434E  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 13516  014350  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13517  014352  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13518  014354  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13519  014356  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 13520  014358                     l1456:
 13521                           
 13522                           ; BSR set to: 1
 13523                           
 13524                           ; BSR set to: 1
 13525  014358  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13526  01435A  A4D8               	btfss	status,2,c
 13527  01435C  D7F7               	goto	l1457
 13528  01435E                     u9810:
 13529                           
 13530                           ; BSR set to: 1
 13531                           
 13532                           ; BSR set to: 1
 13533  01435E  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 13534  014362  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 13535  014366  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 13536  01436A  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 13537                           
 13538                           ; BSR set to: 1
 13539  01436E  0012               	return		;funcret
 13540  014370                     __end_of__div_to_l_:
 13541                           	opt stack 0
 13542                           tblptru	equ	0xFF8
 13543                           tblptrh	equ	0xFF7
 13544                           tblptrl	equ	0xFF6
 13545                           tablat	equ	0xFF5
 13546                           prodh	equ	0xFF4
 13547                           prodl	equ	0xFF3
 13548                           intcon	equ	0xFF2
 13549                           postinc0	equ	0xFEE
 13550                           wreg	equ	0xFE8
 13551                           indf1	equ	0xFE7
 13552                           postdec1	equ	0xFE5
 13553                           fsr1h	equ	0xFE2
 13554                           fsr1l	equ	0xFE1
 13555                           indf2	equ	0xFDF
 13556                           postinc2	equ	0xFDE
 13557                           postdec2	equ	0xFDD
 13558                           fsr2h	equ	0xFDA
 13559                           fsr2l	equ	0xFD9
 13560                           status	equ	0xFD8
 13561                           
 13562 ;; *************** function ___lltoft *****************
 13563 ;; Defined at:
 13564 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 13565 ;; Parameters:    Size  Location     Type
 13566 ;;  c               4   31[BANK1 ] unsigned long 
 13567 ;; Auto vars:     Size  Location     Type
 13568 ;;  exp             1   39[BANK1 ] unsigned char 
 13569 ;; Return value:  Size  Location     Type
 13570 ;;                  3   31[BANK1 ] float 
 13571 ;; Registers used:
 13572 ;;		wreg, status,2, status,0, cstack
 13573 ;; Tracked objects:
 13574 ;;		On entry : 0/0
 13575 ;;		On exit  : 0/0
 13576 ;;		Unchanged: 0/0
 13577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13578 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13579 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13580 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13581 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13582 ;;Total ram usage:        9 bytes
 13583 ;; Hardware stack levels used:    1
 13584 ;; Hardware stack levels required when called:   15
 13585 ;; This function calls:
 13586 ;;		___ftpack
 13587 ;; This function is called by:
 13588 ;;		_printf
 13589 ;; This function uses a non-reentrant model
 13590 ;;
 13591                           
 13592                           	psect	text31
 13593  015AB6                     __ptext31:
 13594                           	opt stack 0
 13595  015AB6                     ___lltoft:
 13596                           	opt stack 12
 13597                           
 13598                           ; BSR set to: 1
 13599                           ;incstack = 0
 13600  015AB6  0E8E               	movlw	142
 13601  015AB8  0101               	movlb	1	; () banked
 13602  015ABA  6F27               	movwf	___lltoft@exp& (0+255),b
 13603  015ABC  D006               	goto	l1655
 13604  015ABE                     
 13605                           ; BSR set to: 1
 13606                           
 13607                           ; BSR set to: 1
 13608  015ABE  90D8               	bcf	status,0,c
 13609  015AC0  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 13610  015AC2  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 13611  015AC4  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 13612  015AC6  331F               	rrcf	___lltoft@c& (0+255),f,b
 13613  015AC8  2B27               	incf	___lltoft@exp& (0+255),f,b
 13614  015ACA                     l1655:
 13615                           
 13616                           ; BSR set to: 1
 13617                           
 13618                           ; BSR set to: 1
 13619  015ACA  0E00               	movlw	0
 13620  015ACC  151F               	andwf	___lltoft@c& (0+255),w,b
 13621  015ACE  6F23               	movwf	??___lltoft& (0+255),b
 13622  015AD0  0E00               	movlw	0
 13623  015AD2  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 13624  015AD4  6F24               	movwf	(??___lltoft+1)& (0+255),b
 13625  015AD6  0E00               	movlw	0
 13626  015AD8  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 13627  015ADA  6F25               	movwf	(??___lltoft+2)& (0+255),b
 13628  015ADC  0EFF               	movlw	255
 13629  015ADE  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 13630  015AE0  6F26               	movwf	(??___lltoft+3)& (0+255),b
 13631  015AE2  5123               	movf	??___lltoft& (0+255),w,b
 13632  015AE4  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 13633  015AE6  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 13634  015AE8  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 13635  015AEA  A4D8               	btfss	status,2,c
 13636  015AEC  D7E8               	goto	l1656
 13637                           
 13638                           ; BSR set to: 1
 13639                           
 13640                           ; BSR set to: 1
 13641  015AEE  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 13642  015AF2  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 13643  015AF6  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 13644  015AFA  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 13645  015AFE  0E00               	movlw	0
 13646  015B00  6F1B               	movwf	___ftpack@sign& (0+255),b
 13647  015B02  EC5A  F0A7         	call	___ftpack	;wreg free
 13648  015B06  C117  F11F         	movff	?___ftpack,?___lltoft
 13649  015B0A  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 13650  015B0E  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 13651  015B12  0012               	return	
 13652  015B14                     __end_of___lltoft:
 13653                           	opt stack 0
 13654                           tblptru	equ	0xFF8
 13655                           tblptrh	equ	0xFF7
 13656                           tblptrl	equ	0xFF6
 13657                           tablat	equ	0xFF5
 13658                           prodh	equ	0xFF4
 13659                           prodl	equ	0xFF3
 13660                           intcon	equ	0xFF2
 13661                           postinc0	equ	0xFEE
 13662                           wreg	equ	0xFE8
 13663                           indf1	equ	0xFE7
 13664                           postdec1	equ	0xFE5
 13665                           fsr1h	equ	0xFE2
 13666                           fsr1l	equ	0xFE1
 13667                           indf2	equ	0xFDF
 13668                           postinc2	equ	0xFDE
 13669                           postdec2	equ	0xFDD
 13670                           fsr2h	equ	0xFDA
 13671                           fsr2l	equ	0xFD9
 13672                           status	equ	0xFD8
 13673                           
 13674 ;; *************** function ___llmod *****************
 13675 ;; Defined at:
 13676 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13677 ;; Parameters:    Size  Location     Type
 13678 ;;  dividend        4   36[BANK1 ] unsigned long 
 13679 ;;  divisor         4   40[BANK1 ] unsigned long 
 13680 ;; Auto vars:     Size  Location     Type
 13681 ;;  counter         1   44[BANK1 ] unsigned char 
 13682 ;; Return value:  Size  Location     Type
 13683 ;;                  4   36[BANK1 ] unsigned long 
 13684 ;; Registers used:
 13685 ;;		wreg, status,2, status,0
 13686 ;; Tracked objects:
 13687 ;;		On entry : 0/0
 13688 ;;		On exit  : 0/0
 13689 ;;		Unchanged: 0/0
 13690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13691 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13692 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13694 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13695 ;;Total ram usage:        9 bytes
 13696 ;; Hardware stack levels used:    1
 13697 ;; Hardware stack levels required when called:   14
 13698 ;; This function calls:
 13699 ;;		Nothing
 13700 ;; This function is called by:
 13701 ;;		_printf
 13702 ;; This function uses a non-reentrant model
 13703 ;;
 13704                           
 13705                           	psect	text32
 13706  01585C                     __ptext32:
 13707                           	opt stack 0
 13708  01585C                     ___llmod:
 13709                           	opt stack 13
 13710                           
 13711                           ;incstack = 0
 13712  01585C  0101               	movlb	1	; () banked
 13713  01585E  5128               	movf	___llmod@divisor& (0+255),w,b
 13714  015860  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13715  015862  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13716  015864  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13717  015866  B4D8               	btfsc	status,2,c
 13718  015868  D024               	goto	l1649
 13719                           
 13720                           ; BSR set to: 1
 13721  01586A  0E01               	movlw	1
 13722  01586C  6F2C               	movwf	___llmod@counter& (0+255),b
 13723  01586E  D006               	goto	l1644
 13724  015870                     
 13725                           ; BSR set to: 1
 13726                           
 13727                           ; BSR set to: 1
 13728  015870  90D8               	bcf	status,0,c
 13729  015872  3728               	rlcf	___llmod@divisor& (0+255),f,b
 13730  015874  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13731  015876  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13732  015878  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13733  01587A  2B2C               	incf	___llmod@counter& (0+255),f,b
 13734  01587C                     l1644:
 13735                           
 13736                           ; BSR set to: 1
 13737                           
 13738                           ; BSR set to: 1
 13739  01587C  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13740  01587E  D7F8               	goto	l1645
 13741  015880                     u10070:
 13742                           
 13743                           ; BSR set to: 1
 13744                           
 13745                           ; BSR set to: 1
 13746                           
 13747                           ; BSR set to: 1
 13748  015880  5128               	movf	___llmod@divisor& (0+255),w,b
 13749  015882  5D24               	subwf	___llmod@dividend& (0+255),w,b
 13750  015884  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13751  015886  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13752  015888  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13753  01588A  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13754  01588C  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13755  01588E  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13756  015890  A0D8               	btfss	status,0,c
 13757  015892  D008               	goto	l1648
 13758                           
 13759                           ; BSR set to: 1
 13760  015894  5128               	movf	___llmod@divisor& (0+255),w,b
 13761  015896  5F24               	subwf	___llmod@dividend& (0+255),f,b
 13762  015898  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13763  01589A  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13764  01589C  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13765  01589E  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13766  0158A0  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13767  0158A2  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13768  0158A4                     l1648:
 13769                           
 13770                           ; BSR set to: 1
 13771                           
 13772                           ; BSR set to: 1
 13773  0158A4  90D8               	bcf	status,0,c
 13774  0158A6  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13775  0158A8  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13776  0158AA  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13777  0158AC  3328               	rrcf	___llmod@divisor& (0+255),f,b
 13778                           
 13779                           ; BSR set to: 1
 13780  0158AE  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 13781  0158B0  D7E7               	goto	u10070
 13782  0158B2                     l1649:
 13783                           
 13784                           ; BSR set to: 1
 13785                           
 13786                           ; BSR set to: 1
 13787  0158B2  C124  F124         	movff	___llmod@dividend,?___llmod
 13788  0158B6  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 13789  0158BA  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 13790  0158BE  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 13791                           
 13792                           ; BSR set to: 1
 13793  0158C2  0012               	return		;funcret
 13794  0158C4                     __end_of___llmod:
 13795                           	opt stack 0
 13796                           tblptru	equ	0xFF8
 13797                           tblptrh	equ	0xFF7
 13798                           tblptrl	equ	0xFF6
 13799                           tablat	equ	0xFF5
 13800                           prodh	equ	0xFF4
 13801                           prodl	equ	0xFF3
 13802                           intcon	equ	0xFF2
 13803                           postinc0	equ	0xFEE
 13804                           wreg	equ	0xFE8
 13805                           indf1	equ	0xFE7
 13806                           postdec1	equ	0xFE5
 13807                           fsr1h	equ	0xFE2
 13808                           fsr1l	equ	0xFE1
 13809                           indf2	equ	0xFDF
 13810                           postinc2	equ	0xFDE
 13811                           postdec2	equ	0xFDD
 13812                           fsr2h	equ	0xFDA
 13813                           fsr2l	equ	0xFD9
 13814                           status	equ	0xFD8
 13815                           
 13816 ;; *************** function ___lldiv *****************
 13817 ;; Defined at:
 13818 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 13819 ;; Parameters:    Size  Location     Type
 13820 ;;  dividend        4   23[BANK1 ] unsigned long 
 13821 ;;  divisor         4   27[BANK1 ] unsigned long 
 13822 ;; Auto vars:     Size  Location     Type
 13823 ;;  quotient        4   31[BANK1 ] unsigned long 
 13824 ;;  counter         1   35[BANK1 ] unsigned char 
 13825 ;; Return value:  Size  Location     Type
 13826 ;;                  4   23[BANK1 ] unsigned long 
 13827 ;; Registers used:
 13828 ;;		wreg, status,2, status,0
 13829 ;; Tracked objects:
 13830 ;;		On entry : 0/0
 13831 ;;		On exit  : 0/0
 13832 ;;		Unchanged: 0/0
 13833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13834 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13835 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13837 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13838 ;;Total ram usage:       13 bytes
 13839 ;; Hardware stack levels used:    1
 13840 ;; Hardware stack levels required when called:   14
 13841 ;; This function calls:
 13842 ;;		Nothing
 13843 ;; This function is called by:
 13844 ;;		_printf
 13845 ;; This function uses a non-reentrant model
 13846 ;;
 13847                           
 13848                           	psect	text33
 13849  015422                     __ptext33:
 13850                           	opt stack 0
 13851  015422                     ___lldiv:
 13852                           	opt stack 13
 13853                           
 13854                           ; BSR set to: 1
 13855                           ;incstack = 0
 13856  015422  0E00               	movlw	0
 13857  015424  0101               	movlb	1	; () banked
 13858  015426  6F1F               	movwf	___lldiv@quotient& (0+255),b
 13859  015428  0E00               	movlw	0
 13860  01542A  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 13861  01542C  0E00               	movlw	0
 13862  01542E  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 13863  015430  0E00               	movlw	0
 13864  015432  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 13865                           
 13866                           ; BSR set to: 1
 13867  015434  511B               	movf	___lldiv@divisor& (0+255),w,b
 13868  015436  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13869  015438  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13870  01543A  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13871  01543C  B4D8               	btfsc	status,2,c
 13872  01543E  D02A               	goto	l1639
 13873                           
 13874                           ; BSR set to: 1
 13875  015440  0E01               	movlw	1
 13876  015442  6F23               	movwf	___lldiv@counter& (0+255),b
 13877  015444  D006               	goto	l1634
 13878  015446                     
 13879                           ; BSR set to: 1
 13880                           
 13881                           ; BSR set to: 1
 13882  015446  90D8               	bcf	status,0,c
 13883  015448  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 13884  01544A  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13885  01544C  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13886  01544E  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13887  015450  2B23               	incf	___lldiv@counter& (0+255),f,b
 13888  015452                     l1634:
 13889                           
 13890                           ; BSR set to: 1
 13891                           
 13892                           ; BSR set to: 1
 13893  015452  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13894  015454  D7F8               	goto	l1635
 13895  015456                     u10040:
 13896                           
 13897                           ; BSR set to: 1
 13898                           
 13899                           ; BSR set to: 1
 13900                           
 13901                           ; BSR set to: 1
 13902  015456  90D8               	bcf	status,0,c
 13903  015458  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 13904  01545A  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13905  01545C  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13906  01545E  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13907                           
 13908                           ; BSR set to: 1
 13909  015460  511B               	movf	___lldiv@divisor& (0+255),w,b
 13910  015462  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 13911  015464  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13912  015466  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13913  015468  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13914  01546A  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13915  01546C  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13916  01546E  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13917  015470  A0D8               	btfss	status,0,c
 13918  015472  D009               	goto	l1638
 13919                           
 13920                           ; BSR set to: 1
 13921  015474  511B               	movf	___lldiv@divisor& (0+255),w,b
 13922  015476  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 13923  015478  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13924  01547A  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13925  01547C  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13926  01547E  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13927  015480  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13928  015482  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13929                           
 13930                           ; BSR set to: 1
 13931  015484  811F               	bsf	___lldiv@quotient& (0+255),0,b
 13932  015486                     l1638:
 13933                           
 13934                           ; BSR set to: 1
 13935                           
 13936                           ; BSR set to: 1
 13937  015486  90D8               	bcf	status,0,c
 13938  015488  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13939  01548A  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13940  01548C  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13941  01548E  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 13942                           
 13943                           ; BSR set to: 1
 13944  015490  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 13945  015492  D7E1               	goto	u10040
 13946  015494                     l1639:
 13947                           
 13948                           ; BSR set to: 1
 13949                           
 13950                           ; BSR set to: 1
 13951  015494  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 13952  015498  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 13953  01549C  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 13954  0154A0  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 13955                           
 13956                           ; BSR set to: 1
 13957  0154A4  0012               	return		;funcret
 13958  0154A6                     __end_of___lldiv:
 13959                           	opt stack 0
 13960                           tblptru	equ	0xFF8
 13961                           tblptrh	equ	0xFF7
 13962                           tblptrl	equ	0xFF6
 13963                           tablat	equ	0xFF5
 13964                           prodh	equ	0xFF4
 13965                           prodl	equ	0xFF3
 13966                           intcon	equ	0xFF2
 13967                           postinc0	equ	0xFEE
 13968                           wreg	equ	0xFE8
 13969                           indf1	equ	0xFE7
 13970                           postdec1	equ	0xFE5
 13971                           fsr1h	equ	0xFE2
 13972                           fsr1l	equ	0xFE1
 13973                           indf2	equ	0xFDF
 13974                           postinc2	equ	0xFDE
 13975                           postdec2	equ	0xFDD
 13976                           fsr2h	equ	0xFDA
 13977                           fsr2l	equ	0xFD9
 13978                           status	equ	0xFD8
 13979                           
 13980 ;; *************** function ___fttol *****************
 13981 ;; Defined at:
 13982 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13983 ;; Parameters:    Size  Location     Type
 13984 ;;  f1              3   85[BANK1 ] float 
 13985 ;; Auto vars:     Size  Location     Type
 13986 ;;  lval            4   95[BANK1 ] unsigned long 
 13987 ;;  exp1            1   99[BANK1 ] unsigned char 
 13988 ;;  sign1           1   94[BANK1 ] unsigned char 
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  4   85[BANK1 ] long 
 13991 ;; Registers used:
 13992 ;;		wreg, status,2, status,0
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13998 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13999 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14000 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14001 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14002 ;;Total ram usage:       15 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:   14
 14005 ;; This function calls:
 14006 ;;		Nothing
 14007 ;; This function is called by:
 14008 ;;		_printf
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           
 14012                           	psect	text34
 14013  0145B4                     __ptext34:
 14014                           	opt stack 0
 14015  0145B4                     ___fttol:
 14016                           	opt stack 13
 14017                           
 14018                           ; BSR set to: 1
 14019                           ;incstack = 0
 14020  0145B4  C157  F159         	movff	___fttol@f1+2,??___fttol
 14021  0145B8  0101               	movlb	1	; () banked
 14022  0145BA  6B5A               	clrf	(??___fttol+1)& (0+255),b
 14023  0145BC  6B5B               	clrf	(??___fttol+2)& (0+255),b
 14024  0145BE  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 14025  0145C0  3759               	rlcf	??___fttol& (0+255),f,b
 14026  0145C2  E301               	bnc	u9951
 14027  0145C4  815A               	bsf	(??___fttol+1)& (0+255),0,b
 14028  0145C6                     u9951:
 14029  0145C6  5159               	movf	??___fttol& (0+255),w,b
 14030  0145C8  6F63               	movwf	___fttol@exp1& (0+255),b
 14031  0145CA  5163               	movf	___fttol@exp1& (0+255),w,b
 14032  0145CC  A4D8               	btfss	status,2,c
 14033  0145CE  D009               	goto	l1593
 14034                           
 14035                           ; BSR set to: 1
 14036  0145D0  0E00               	movlw	0
 14037  0145D2  6F55               	movwf	?___fttol& (0+255),b
 14038  0145D4  0E00               	movlw	0
 14039  0145D6  6F56               	movwf	(?___fttol+1)& (0+255),b
 14040  0145D8  0E00               	movlw	0
 14041  0145DA  6F57               	movwf	(?___fttol+2)& (0+255),b
 14042  0145DC  0E00               	movlw	0
 14043  0145DE  6F58               	movwf	(?___fttol+3)& (0+255),b
 14044                           
 14045                           ; BSR set to: 1
 14046  0145E0  0012               	return	
 14047  0145E2                     l1593:
 14048                           
 14049                           ; BSR set to: 1
 14050                           
 14051                           ; BSR set to: 1
 14052  0145E2  0E17               	movlw	23
 14053  0145E4  6F59               	movwf	??___fttol& (0+255),b
 14054  0145E6  C155  F15A         	movff	___fttol@f1,??___fttol+1
 14055  0145EA  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 14056  0145EE  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 14057  0145F2  2959               	incf	??___fttol& (0+255),w,b
 14058  0145F4  6F5D               	movwf	(??___fttol+4)& (0+255),b
 14059  0145F6  D004               	goto	u9970
 14060  0145F8                     u9975:
 14061  0145F8  90D8               	bcf	status,0,c
 14062  0145FA  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 14063  0145FC  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 14064  0145FE  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 14065  014600                     u9970:
 14066  014600  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 14067  014602  D7FA               	goto	u9975
 14068  014604  0101               	movlb	1	; () banked
 14069  014606  515A               	movf	(??___fttol+1)& (0+255),w,b
 14070  014608  6F5E               	movwf	___fttol@sign1& (0+255),b
 14071                           
 14072                           ; BSR set to: 1
 14073  01460A  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 14074                           
 14075                           ; BSR set to: 1
 14076  01460C  0EFF               	movlw	255
 14077  01460E  1755               	andwf	___fttol@f1& (0+255),f,b
 14078  014610  0EFF               	movlw	255
 14079  014612  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 14080  014614  0E00               	movlw	0
 14081  014616  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 14082                           
 14083                           ; BSR set to: 1
 14084  014618  5155               	movf	___fttol@f1& (0+255),w,b
 14085  01461A  6F5F               	movwf	___fttol@lval& (0+255),b
 14086  01461C  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 14087  01461E  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 14088  014620  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 14089  014622  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 14090  014624  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 14091                           
 14092                           ; BSR set to: 1
 14093  014626  0E8E               	movlw	142
 14094  014628  5F63               	subwf	___fttol@exp1& (0+255),f,b
 14095                           
 14096                           ; BSR set to: 1
 14097  01462A  AF63               	btfss	___fttol@exp1& (0+255),7,b
 14098  01462C  D016               	goto	l1595
 14099                           
 14100                           ; BSR set to: 1
 14101  01462E  5163               	movf	___fttol@exp1& (0+255),w,b
 14102  014630  0A80               	xorlw	128
 14103  014632  0F8F               	addlw	143
 14104  014634  B0D8               	btfsc	status,0,c
 14105  014636  D009               	goto	l1596
 14106                           
 14107                           ; BSR set to: 1
 14108  014638  0E00               	movlw	0
 14109  01463A  6F55               	movwf	?___fttol& (0+255),b
 14110  01463C  0E00               	movlw	0
 14111  01463E  6F56               	movwf	(?___fttol+1)& (0+255),b
 14112  014640  0E00               	movlw	0
 14113  014642  6F57               	movwf	(?___fttol+2)& (0+255),b
 14114  014644  0E00               	movlw	0
 14115  014646  6F58               	movwf	(?___fttol+3)& (0+255),b
 14116                           
 14117                           ; BSR set to: 1
 14118  014648  0012               	return	
 14119  01464A                     l1596:
 14120                           
 14121                           ; BSR set to: 1
 14122                           
 14123                           ; BSR set to: 1
 14124                           
 14125                           ; BSR set to: 1
 14126  01464A  90D8               	bcf	status,0,c
 14127  01464C  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 14128  01464E  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 14129  014650  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 14130  014652  335F               	rrcf	___fttol@lval& (0+255),f,b
 14131                           
 14132                           ; BSR set to: 1
 14133  014654  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 14134  014656  D7F9               	goto	l1596
 14135                           
 14136                           ; BSR set to: 1
 14137  014658  D015               	goto	u10010
 14138  01465A                     l1595:
 14139                           
 14140                           ; BSR set to: 1
 14141                           
 14142                           ; BSR set to: 1
 14143  01465A  0E17               	movlw	23
 14144  01465C  6563               	cpfsgt	___fttol@exp1& (0+255),b
 14145  01465E  D00F               	goto	l1601
 14146                           
 14147                           ; BSR set to: 1
 14148  014660  0E00               	movlw	0
 14149  014662  6F55               	movwf	?___fttol& (0+255),b
 14150  014664  0E00               	movlw	0
 14151  014666  6F56               	movwf	(?___fttol+1)& (0+255),b
 14152  014668  0E00               	movlw	0
 14153  01466A  6F57               	movwf	(?___fttol+2)& (0+255),b
 14154  01466C  0E00               	movlw	0
 14155  01466E  6F58               	movwf	(?___fttol+3)& (0+255),b
 14156                           
 14157                           ; BSR set to: 1
 14158  014670  0012               	return	
 14159  014672                     
 14160                           ; BSR set to: 1
 14161                           
 14162                           ; BSR set to: 1
 14163  014672  90D8               	bcf	status,0,c
 14164  014674  375F               	rlcf	___fttol@lval& (0+255),f,b
 14165  014676  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 14166  014678  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 14167  01467A  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 14168  01467C  0763               	decf	___fttol@exp1& (0+255),f,b
 14169  01467E                     l1601:
 14170                           
 14171                           ; BSR set to: 1
 14172                           
 14173                           ; BSR set to: 1
 14174  01467E  5163               	movf	___fttol@exp1& (0+255),w,b
 14175  014680  A4D8               	btfss	status,2,c
 14176  014682  D7F7               	goto	l1602
 14177  014684                     u10010:
 14178                           
 14179                           ; BSR set to: 1
 14180                           
 14181                           ; BSR set to: 1
 14182                           
 14183                           ; BSR set to: 1
 14184  014684  515E               	movf	___fttol@sign1& (0+255),w,b
 14185  014686  B4D8               	btfsc	status,2,c
 14186  014688  D008               	goto	l1604
 14187                           
 14188                           ; BSR set to: 1
 14189  01468A  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 14190  01468C  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 14191  01468E  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 14192  014690  6D5F               	negf	___fttol@lval& (0+255),b
 14193  014692  0E00               	movlw	0
 14194  014694  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 14195  014696  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 14196  014698  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 14197  01469A                     l1604:
 14198                           
 14199                           ; BSR set to: 1
 14200                           
 14201                           ; BSR set to: 1
 14202  01469A  C15F  F155         	movff	___fttol@lval,?___fttol
 14203  01469E  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 14204  0146A2  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 14205  0146A6  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 14206  0146AA  0012               	return	
 14207  0146AC                     __end_of___fttol:
 14208                           	opt stack 0
 14209                           tblptru	equ	0xFF8
 14210                           tblptrh	equ	0xFF7
 14211                           tblptrl	equ	0xFF6
 14212                           tablat	equ	0xFF5
 14213                           prodh	equ	0xFF4
 14214                           prodl	equ	0xFF3
 14215                           intcon	equ	0xFF2
 14216                           postinc0	equ	0xFEE
 14217                           wreg	equ	0xFE8
 14218                           indf1	equ	0xFE7
 14219                           postdec1	equ	0xFE5
 14220                           fsr1h	equ	0xFE2
 14221                           fsr1l	equ	0xFE1
 14222                           indf2	equ	0xFDF
 14223                           postinc2	equ	0xFDE
 14224                           postdec2	equ	0xFDD
 14225                           fsr2h	equ	0xFDA
 14226                           fsr2l	equ	0xFD9
 14227                           status	equ	0xFD8
 14228                           
 14229 ;; *************** function ___ftsub *****************
 14230 ;; Defined at:
 14231 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 14232 ;; Parameters:    Size  Location     Type
 14233 ;;  f1              3   55[BANK1 ] float 
 14234 ;;  f2              3   58[BANK1 ] float 
 14235 ;; Auto vars:     Size  Location     Type
 14236 ;;		None
 14237 ;; Return value:  Size  Location     Type
 14238 ;;                  3   55[BANK1 ] float 
 14239 ;; Registers used:
 14240 ;;		wreg, status,2, status,0, cstack
 14241 ;; Tracked objects:
 14242 ;;		On entry : 0/0
 14243 ;;		On exit  : 0/0
 14244 ;;		Unchanged: 0/0
 14245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14246 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14249 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14250 ;;Total ram usage:        6 bytes
 14251 ;; Hardware stack levels used:    1
 14252 ;; Hardware stack levels required when called:   16
 14253 ;; This function calls:
 14254 ;;		___ftadd
 14255 ;; This function is called by:
 14256 ;;		_printf
 14257 ;; This function uses a non-reentrant model
 14258 ;;
 14259                           
 14260                           	psect	text35
 14261  015E80                     __ptext35:
 14262                           	opt stack 0
 14263  015E80                     ___ftsub:
 14264                           	opt stack 11
 14265                           
 14266                           ; BSR set to: 1
 14267                           ;incstack = 0
 14268  015E80  0101               	movlb	1	; () banked
 14269  015E82  513A               	movf	___ftsub@f2& (0+255),w,b
 14270  015E84  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 14271  015E86  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 14272  015E88  B4D8               	btfsc	status,2,c
 14273  015E8A  D006               	goto	l1589
 14274                           
 14275                           ; BSR set to: 1
 14276  015E8C  0E00               	movlw	0
 14277  015E8E  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 14278  015E90  0E00               	movlw	0
 14279  015E92  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 14280  015E94  0E80               	movlw	128
 14281  015E96  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 14282  015E98                     l1589:
 14283                           
 14284                           ; BSR set to: 1
 14285                           
 14286                           ; BSR set to: 1
 14287  015E98  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 14288  015E9C  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 14289  015EA0  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 14290  015EA4  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 14291  015EA8  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 14292  015EAC  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 14293  015EB0  EC7A  F09D         	call	___ftadd	;wreg free
 14294  015EB4  C12B  F137         	movff	?___ftadd,?___ftsub
 14295  015EB8  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 14296  015EBC  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 14297  015EC0  0012               	return	
 14298  015EC2                     __end_of___ftsub:
 14299                           	opt stack 0
 14300                           tblptru	equ	0xFF8
 14301                           tblptrh	equ	0xFF7
 14302                           tblptrl	equ	0xFF6
 14303                           tablat	equ	0xFF5
 14304                           prodh	equ	0xFF4
 14305                           prodl	equ	0xFF3
 14306                           intcon	equ	0xFF2
 14307                           postinc0	equ	0xFEE
 14308                           wreg	equ	0xFE8
 14309                           indf1	equ	0xFE7
 14310                           postdec1	equ	0xFE5
 14311                           fsr1h	equ	0xFE2
 14312                           fsr1l	equ	0xFE1
 14313                           indf2	equ	0xFDF
 14314                           postinc2	equ	0xFDE
 14315                           postdec2	equ	0xFDD
 14316                           fsr2h	equ	0xFDA
 14317                           fsr2l	equ	0xFD9
 14318                           status	equ	0xFD8
 14319                           
 14320 ;; *************** function ___ftadd *****************
 14321 ;; Defined at:
 14322 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 14323 ;; Parameters:    Size  Location     Type
 14324 ;;  f1              3   43[BANK1 ] float 
 14325 ;;  f2              3   46[BANK1 ] float 
 14326 ;; Auto vars:     Size  Location     Type
 14327 ;;  exp1            1   54[BANK1 ] unsigned char 
 14328 ;;  exp2            1   53[BANK1 ] unsigned char 
 14329 ;;  sign            1   52[BANK1 ] unsigned char 
 14330 ;; Return value:  Size  Location     Type
 14331 ;;                  3   43[BANK1 ] float 
 14332 ;; Registers used:
 14333 ;;		wreg, status,2, status,0, cstack
 14334 ;; Tracked objects:
 14335 ;;		On entry : 0/0
 14336 ;;		On exit  : 0/0
 14337 ;;		Unchanged: 0/0
 14338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14339 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14340 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14341 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14342 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14343 ;;Total ram usage:       12 bytes
 14344 ;; Hardware stack levels used:    1
 14345 ;; Hardware stack levels required when called:   15
 14346 ;; This function calls:
 14347 ;;		___ftpack
 14348 ;; This function is called by:
 14349 ;;		_ringBufferLUT
 14350 ;;		_printf
 14351 ;;		___ftsub
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355                           	psect	text36
 14356  013AF4                     __ptext36:
 14357                           	opt stack 0
 14358  013AF4                     ___ftadd:
 14359                           	opt stack 11
 14360                           
 14361                           ;incstack = 0
 14362  013AF4  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 14363  013AF8  0101               	movlb	1	; () banked
 14364  013AFA  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14365  013AFC  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14366  013AFE  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14367  013B00  3731               	rlcf	??___ftadd& (0+255),f,b
 14368  013B02  E301               	bnc	u9051
 14369  013B04  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14370  013B06                     u9051:
 14371  013B06  5131               	movf	??___ftadd& (0+255),w,b
 14372  013B08  6F36               	movwf	___ftadd@exp1& (0+255),b
 14373  013B0A  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 14374  013B0E  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14375  013B10  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14376  013B12  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14377  013B14  3731               	rlcf	??___ftadd& (0+255),f,b
 14378  013B16  E301               	bnc	u9061
 14379  013B18  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14380  013B1A                     u9061:
 14381  013B1A  5131               	movf	??___ftadd& (0+255),w,b
 14382  013B1C  6F35               	movwf	___ftadd@exp2& (0+255),b
 14383                           
 14384                           ; BSR set to: 1
 14385  013B1E  5136               	movf	___ftadd@exp1& (0+255),w,b
 14386  013B20  B4D8               	btfsc	status,2,c
 14387  013B22  D00B               	goto	u9090
 14388                           
 14389                           ; BSR set to: 1
 14390  013B24  5135               	movf	___ftadd@exp2& (0+255),w,b
 14391  013B26  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 14392  013B28  B0D8               	btfsc	status,0,c
 14393  013B2A  D00E               	goto	l1507
 14394                           
 14395                           ; BSR set to: 1
 14396  013B2C  5136               	movf	___ftadd@exp1& (0+255),w,b
 14397  013B2E  0800               	sublw	0
 14398  013B30  2535               	addwf	___ftadd@exp2& (0+255),w,b
 14399  013B32  6F31               	movwf	??___ftadd& (0+255),b
 14400  013B34  0E18               	movlw	24
 14401  013B36  6531               	cpfsgt	??___ftadd& (0+255),b
 14402  013B38  D007               	goto	l1507
 14403  013B3A                     u9090:
 14404                           
 14405                           ; BSR set to: 1
 14406  013B3A  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 14407  013B3E  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 14408  013B42  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 14409  013B46  0012               	return	
 14410  013B48                     l1507:
 14411                           
 14412                           ; BSR set to: 1
 14413                           
 14414                           ; BSR set to: 1
 14415  013B48  5135               	movf	___ftadd@exp2& (0+255),w,b
 14416  013B4A  B4D8               	btfsc	status,2,c
 14417  013B4C  D00B               	goto	u9120
 14418                           
 14419                           ; BSR set to: 1
 14420  013B4E  5136               	movf	___ftadd@exp1& (0+255),w,b
 14421  013B50  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 14422  013B52  B0D8               	btfsc	status,0,c
 14423  013B54  D00E               	goto	l1511
 14424                           
 14425                           ; BSR set to: 1
 14426  013B56  5135               	movf	___ftadd@exp2& (0+255),w,b
 14427  013B58  0800               	sublw	0
 14428  013B5A  2536               	addwf	___ftadd@exp1& (0+255),w,b
 14429  013B5C  6F31               	movwf	??___ftadd& (0+255),b
 14430  013B5E  0E18               	movlw	24
 14431  013B60  6531               	cpfsgt	??___ftadd& (0+255),b
 14432  013B62  D007               	goto	l1511
 14433  013B64                     u9120:
 14434                           
 14435                           ; BSR set to: 1
 14436  013B64  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 14437  013B68  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 14438  013B6C  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 14439  013B70  0012               	return	
 14440  013B72                     l1511:
 14441                           
 14442                           ; BSR set to: 1
 14443                           
 14444                           ; BSR set to: 1
 14445  013B72  0E06               	movlw	6
 14446  013B74  6F34               	movwf	___ftadd@sign& (0+255),b
 14447                           
 14448                           ; BSR set to: 1
 14449  013B76  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14450                           
 14451                           ; BSR set to: 1
 14452  013B78  8F34               	bsf	___ftadd@sign& (0+255),7,b
 14453                           
 14454                           ; BSR set to: 1
 14455                           
 14456                           ; BSR set to: 1
 14457  013B7A  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14458                           
 14459                           ; BSR set to: 1
 14460  013B7C  8D34               	bsf	___ftadd@sign& (0+255),6,b
 14461                           
 14462                           ; BSR set to: 1
 14463  013B7E  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14464                           
 14465                           ; BSR set to: 1
 14466  013B80  0EFF               	movlw	255
 14467  013B82  172B               	andwf	___ftadd@f1& (0+255),f,b
 14468  013B84  0EFF               	movlw	255
 14469  013B86  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14470  013B88  0E00               	movlw	0
 14471  013B8A  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14472  013B8C  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14473                           
 14474                           ; BSR set to: 1
 14475  013B8E  0EFF               	movlw	255
 14476  013B90  172E               	andwf	___ftadd@f2& (0+255),f,b
 14477  013B92  0EFF               	movlw	255
 14478  013B94  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14479  013B96  0E00               	movlw	0
 14480  013B98  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14481                           
 14482                           ; BSR set to: 1
 14483  013B9A  5135               	movf	___ftadd@exp2& (0+255),w,b
 14484  013B9C  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 14485  013B9E  B0D8               	btfsc	status,0,c
 14486  013BA0  D01B               	goto	l1516
 14487  013BA2                     u9150:
 14488                           
 14489                           ; BSR set to: 1
 14490                           
 14491                           ; BSR set to: 1
 14492  013BA2  90D8               	bcf	status,0,c
 14493  013BA4  372E               	rlcf	___ftadd@f2& (0+255),f,b
 14494  013BA6  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14495  013BA8  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14496  013BAA  0735               	decf	___ftadd@exp2& (0+255),f,b
 14497                           
 14498                           ; BSR set to: 1
 14499  013BAC  5136               	movf	___ftadd@exp1& (0+255),w,b
 14500  013BAE  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 14501  013BB0  B4D8               	btfsc	status,2,c
 14502  013BB2  D00D               	goto	l1521
 14503                           
 14504                           ; BSR set to: 1
 14505  013BB4  0734               	decf	___ftadd@sign& (0+255),f,b
 14506  013BB6  C134  F131         	movff	___ftadd@sign,??___ftadd
 14507  013BBA  0E07               	movlw	7
 14508  013BBC  1731               	andwf	??___ftadd& (0+255),f,b
 14509  013BBE  B4D8               	btfsc	status,2,c
 14510  013BC0  D006               	goto	l1521
 14511  013BC2  D7EF               	goto	u9150
 14512  013BC4                     
 14513                           ; BSR set to: 1
 14514                           
 14515                           ; BSR set to: 1
 14516  013BC4  90D8               	bcf	status,0,c
 14517  013BC6  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14518  013BC8  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14519  013BCA  332B               	rrcf	___ftadd@f1& (0+255),f,b
 14520  013BCC  2B36               	incf	___ftadd@exp1& (0+255),f,b
 14521  013BCE                     l1521:
 14522                           
 14523                           ; BSR set to: 1
 14524                           
 14525                           ; BSR set to: 1
 14526  013BCE  5135               	movf	___ftadd@exp2& (0+255),w,b
 14527  013BD0  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 14528  013BD2  B4D8               	btfsc	status,2,c
 14529  013BD4  D01F               	goto	u9220
 14530  013BD6  D7F6               	goto	l1522
 14531  013BD8                     l1516:
 14532                           
 14533                           ; BSR set to: 1
 14534                           
 14535                           ; BSR set to: 1
 14536  013BD8  5136               	movf	___ftadd@exp1& (0+255),w,b
 14537  013BDA  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 14538  013BDC  B0D8               	btfsc	status,0,c
 14539  013BDE  D01A               	goto	u9220
 14540  013BE0                     u9190:
 14541                           
 14542                           ; BSR set to: 1
 14543                           
 14544                           ; BSR set to: 1
 14545  013BE0  90D8               	bcf	status,0,c
 14546  013BE2  372B               	rlcf	___ftadd@f1& (0+255),f,b
 14547  013BE4  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14548  013BE6  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14549  013BE8  0736               	decf	___ftadd@exp1& (0+255),f,b
 14550                           
 14551                           ; BSR set to: 1
 14552  013BEA  5136               	movf	___ftadd@exp1& (0+255),w,b
 14553  013BEC  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 14554  013BEE  B4D8               	btfsc	status,2,c
 14555  013BF0  D00D               	goto	l1530
 14556                           
 14557                           ; BSR set to: 1
 14558  013BF2  0734               	decf	___ftadd@sign& (0+255),f,b
 14559  013BF4  C134  F131         	movff	___ftadd@sign,??___ftadd
 14560  013BF8  0E07               	movlw	7
 14561  013BFA  1731               	andwf	??___ftadd& (0+255),f,b
 14562  013BFC  B4D8               	btfsc	status,2,c
 14563  013BFE  D006               	goto	l1530
 14564  013C00  D7EF               	goto	u9190
 14565  013C02                     
 14566                           ; BSR set to: 1
 14567                           
 14568                           ; BSR set to: 1
 14569  013C02  90D8               	bcf	status,0,c
 14570  013C04  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14571  013C06  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14572  013C08  332E               	rrcf	___ftadd@f2& (0+255),f,b
 14573  013C0A  2B35               	incf	___ftadd@exp2& (0+255),f,b
 14574  013C0C                     l1530:
 14575                           
 14576                           ; BSR set to: 1
 14577                           
 14578                           ; BSR set to: 1
 14579  013C0C  5135               	movf	___ftadd@exp2& (0+255),w,b
 14580  013C0E  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 14581  013C10  A4D8               	btfss	status,2,c
 14582  013C12  D7F7               	goto	l1531
 14583  013C14                     u9220:
 14584                           
 14585                           ; BSR set to: 1
 14586                           
 14587                           ; BSR set to: 1
 14588                           
 14589                           ; BSR set to: 1
 14590  013C14  AF34               	btfss	___ftadd@sign& (0+255),7,b
 14591  013C16  D00C               	goto	l1533
 14592                           
 14593                           ; BSR set to: 1
 14594  013C18  0EFF               	movlw	255
 14595  013C1A  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 14596  013C1C  0EFF               	movlw	255
 14597  013C1E  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14598  013C20  0EFF               	movlw	255
 14599  013C22  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14600  013C24  0E01               	movlw	1
 14601  013C26  272B               	addwf	___ftadd@f1& (0+255),f,b
 14602  013C28  0E00               	movlw	0
 14603  013C2A  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14604  013C2C  0E00               	movlw	0
 14605  013C2E  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14606  013C30                     l1533:
 14607                           
 14608                           ; BSR set to: 1
 14609  013C30  AD34               	btfss	___ftadd@sign& (0+255),6,b
 14610  013C32  D00C               	goto	l1534
 14611                           
 14612                           ; BSR set to: 1
 14613  013C34  0EFF               	movlw	255
 14614  013C36  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14615  013C38  0EFF               	movlw	255
 14616  013C3A  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14617  013C3C  0EFF               	movlw	255
 14618  013C3E  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14619  013C40  0E01               	movlw	1
 14620  013C42  272E               	addwf	___ftadd@f2& (0+255),f,b
 14621  013C44  0E00               	movlw	0
 14622  013C46  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14623  013C48  0E00               	movlw	0
 14624  013C4A  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14625  013C4C                     l1534:
 14626                           
 14627                           ; BSR set to: 1
 14628                           
 14629                           ; BSR set to: 1
 14630  013C4C  0E00               	movlw	0
 14631  013C4E  6F34               	movwf	___ftadd@sign& (0+255),b
 14632                           
 14633                           ; BSR set to: 1
 14634  013C50  512B               	movf	___ftadd@f1& (0+255),w,b
 14635  013C52  272E               	addwf	___ftadd@f2& (0+255),f,b
 14636  013C54  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14637  013C56  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14638  013C58  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14639  013C5A  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14640                           
 14641                           ; BSR set to: 1
 14642  013C5C  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14643  013C5E  D00E               	goto	l1535
 14644                           
 14645                           ; BSR set to: 1
 14646  013C60  0EFF               	movlw	255
 14647  013C62  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14648  013C64  0EFF               	movlw	255
 14649  013C66  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14650  013C68  0EFF               	movlw	255
 14651  013C6A  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14652  013C6C  0E01               	movlw	1
 14653  013C6E  272E               	addwf	___ftadd@f2& (0+255),f,b
 14654  013C70  0E00               	movlw	0
 14655  013C72  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14656  013C74  0E00               	movlw	0
 14657  013C76  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14658                           
 14659                           ; BSR set to: 1
 14660  013C78  0E01               	movlw	1
 14661  013C7A  6F34               	movwf	___ftadd@sign& (0+255),b
 14662  013C7C                     l1535:
 14663                           
 14664                           ; BSR set to: 1
 14665                           
 14666                           ; BSR set to: 1
 14667  013C7C  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 14668  013C80  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 14669  013C84  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 14670  013C88  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 14671  013C8C  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 14672  013C90  EC5A  F0A7         	call	___ftpack	;wreg free
 14673  013C94  C117  F12B         	movff	?___ftpack,?___ftadd
 14674  013C98  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 14675  013C9C  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 14676  013CA0  0012               	return	
 14677  013CA2                     __end_of___ftadd:
 14678                           	opt stack 0
 14679                           tblptru	equ	0xFF8
 14680                           tblptrh	equ	0xFF7
 14681                           tblptrl	equ	0xFF6
 14682                           tablat	equ	0xFF5
 14683                           prodh	equ	0xFF4
 14684                           prodl	equ	0xFF3
 14685                           intcon	equ	0xFF2
 14686                           postinc0	equ	0xFEE
 14687                           wreg	equ	0xFE8
 14688                           indf1	equ	0xFE7
 14689                           postdec1	equ	0xFE5
 14690                           fsr1h	equ	0xFE2
 14691                           fsr1l	equ	0xFE1
 14692                           indf2	equ	0xFDF
 14693                           postinc2	equ	0xFDE
 14694                           postdec2	equ	0xFDD
 14695                           fsr2h	equ	0xFDA
 14696                           fsr2l	equ	0xFD9
 14697                           status	equ	0xFD8
 14698                           
 14699 ;; *************** function ___ftpack *****************
 14700 ;; Defined at:
 14701 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;  arg             3   23[BANK1 ] unsigned um
 14704 ;;  exp             1   26[BANK1 ] unsigned char 
 14705 ;;  sign            1   27[BANK1 ] unsigned char 
 14706 ;; Auto vars:     Size  Location     Type
 14707 ;;		None
 14708 ;; Return value:  Size  Location     Type
 14709 ;;                  3   23[BANK1 ] float 
 14710 ;; Registers used:
 14711 ;;		wreg, status,2, status,0
 14712 ;; Tracked objects:
 14713 ;;		On entry : 0/0
 14714 ;;		On exit  : 0/0
 14715 ;;		Unchanged: 0/0
 14716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14717 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14719 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14720 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14721 ;;Total ram usage:        8 bytes
 14722 ;; Hardware stack levels used:    1
 14723 ;; Hardware stack levels required when called:   14
 14724 ;; This function calls:
 14725 ;;		Nothing
 14726 ;; This function is called by:
 14727 ;;		___awtoft
 14728 ;;		___ftadd
 14729 ;;		___ftdiv
 14730 ;;		___ftmul
 14731 ;;		___lltoft
 14732 ;; This function uses a non-reentrant model
 14733 ;;
 14734                           
 14735                           	psect	text37
 14736  014EB4                     __ptext37:
 14737                           	opt stack 0
 14738  014EB4                     ___ftpack:
 14739                           	opt stack 11
 14740                           
 14741                           ;incstack = 0
 14742  014EB4  0101               	movlb	1	; () banked
 14743  014EB6  511A               	movf	___ftpack@exp& (0+255),w,b
 14744  014EB8  B4D8               	btfsc	status,2,c
 14745  014EBA  D005               	goto	u8670
 14746                           
 14747                           ; BSR set to: 1
 14748  014EBC  5117               	movf	___ftpack@arg& (0+255),w,b
 14749  014EBE  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14750  014EC0  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14751  014EC2  A4D8               	btfss	status,2,c
 14752  014EC4  D00C               	goto	l1476
 14753  014EC6                     u8670:
 14754                           
 14755                           ; BSR set to: 1
 14756                           
 14757                           ; BSR set to: 1
 14758  014EC6  0E00               	movlw	0
 14759  014EC8  6F17               	movwf	?___ftpack& (0+255),b
 14760  014ECA  0E00               	movlw	0
 14761  014ECC  6F18               	movwf	(?___ftpack+1)& (0+255),b
 14762  014ECE  0E00               	movlw	0
 14763  014ED0  6F19               	movwf	(?___ftpack+2)& (0+255),b
 14764                           
 14765                           ; BSR set to: 1
 14766  014ED2  0012               	return	
 14767  014ED4                     
 14768                           ; BSR set to: 1
 14769                           
 14770                           ; BSR set to: 1
 14771  014ED4  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14772  014ED6  90D8               	bcf	status,0,c
 14773  014ED8  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14774  014EDA  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14775  014EDC  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14776  014EDE                     l1476:
 14777                           
 14778                           ; BSR set to: 1
 14779                           
 14780                           ; BSR set to: 1
 14781  014EDE  0E00               	movlw	0
 14782  014EE0  1517               	andwf	___ftpack@arg& (0+255),w,b
 14783  014EE2  6F1C               	movwf	??___ftpack& (0+255),b
 14784  014EE4  0E00               	movlw	0
 14785  014EE6  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14786  014EE8  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14787  014EEA  0EFE               	movlw	254
 14788  014EEC  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14789  014EEE  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14790  014EF0  511C               	movf	??___ftpack& (0+255),w,b
 14791  014EF2  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14792  014EF4  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14793  014EF6  B4D8               	btfsc	status,2,c
 14794  014EF8  D00C               	goto	l1479
 14795  014EFA  D7EC               	goto	l1477
 14796  014EFC                     
 14797                           ; BSR set to: 1
 14798                           
 14799                           ; BSR set to: 1
 14800  014EFC  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14801                           
 14802                           ; BSR set to: 1
 14803  014EFE  0E01               	movlw	1
 14804  014F00  2717               	addwf	___ftpack@arg& (0+255),f,b
 14805  014F02  0E00               	movlw	0
 14806  014F04  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14807  014F06  0E00               	movlw	0
 14808  014F08  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14809  014F0A  90D8               	bcf	status,0,c
 14810  014F0C  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14811  014F0E  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14812  014F10  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14813  014F12                     l1479:
 14814                           
 14815                           ; BSR set to: 1
 14816                           
 14817                           ; BSR set to: 1
 14818  014F12  0E00               	movlw	0
 14819  014F14  1517               	andwf	___ftpack@arg& (0+255),w,b
 14820  014F16  6F1C               	movwf	??___ftpack& (0+255),b
 14821  014F18  0E00               	movlw	0
 14822  014F1A  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14823  014F1C  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14824  014F1E  0EFF               	movlw	255
 14825  014F20  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14826  014F22  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14827  014F24  511C               	movf	??___ftpack& (0+255),w,b
 14828  014F26  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14829  014F28  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14830  014F2A  B4D8               	btfsc	status,2,c
 14831  014F2C  D006               	goto	l1482
 14832  014F2E  D7E6               	goto	l1480
 14833  014F30                     
 14834                           ; BSR set to: 1
 14835                           
 14836                           ; BSR set to: 1
 14837  014F30  071A               	decf	___ftpack@exp& (0+255),f,b
 14838  014F32  90D8               	bcf	status,0,c
 14839  014F34  3717               	rlcf	___ftpack@arg& (0+255),f,b
 14840  014F36  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14841  014F38  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14842  014F3A                     l1482:
 14843                           
 14844                           ; BSR set to: 1
 14845                           
 14846                           ; BSR set to: 1
 14847  014F3A  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14848  014F3C  D003               	goto	u8710
 14849                           
 14850                           ; BSR set to: 1
 14851  014F3E  0E02               	movlw	2
 14852  014F40  611A               	cpfslt	___ftpack@exp& (0+255),b
 14853  014F42  D7F6               	goto	l1483
 14854  014F44                     u8710:
 14855                           
 14856                           ; BSR set to: 1
 14857                           
 14858                           ; BSR set to: 1
 14859  014F44  A11A               	btfss	___ftpack@exp& (0+255),0,b
 14860                           
 14861                           ; BSR set to: 1
 14862  014F46  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14863                           
 14864                           ; BSR set to: 1
 14865                           
 14866                           ; BSR set to: 1
 14867  014F48  90D8               	bcf	status,0,c
 14868  014F4A  331A               	rrcf	___ftpack@exp& (0+255),f,b
 14869  014F4C  511A               	movf	___ftpack@exp& (0+255),w,b
 14870  014F4E  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14871                           
 14872                           ; BSR set to: 1
 14873  014F50  511B               	movf	___ftpack@sign& (0+255),w,b
 14874  014F52  A4D8               	btfss	status,2,c
 14875                           
 14876                           ; BSR set to: 1
 14877  014F54  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14878                           
 14879                           ; BSR set to: 1
 14880                           
 14881                           ; BSR set to: 1
 14882  014F56  C117  F117         	movff	___ftpack@arg,?___ftpack
 14883  014F5A  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 14884  014F5E  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 14885  014F62  0012               	return	
 14886  014F64                     __end_of___ftpack:
 14887                           	opt stack 0
 14888                           tblptru	equ	0xFF8
 14889                           tblptrh	equ	0xFF7
 14890                           tblptrl	equ	0xFF6
 14891                           tablat	equ	0xFF5
 14892                           prodh	equ	0xFF4
 14893                           prodl	equ	0xFF3
 14894                           intcon	equ	0xFF2
 14895                           postinc0	equ	0xFEE
 14896                           wreg	equ	0xFE8
 14897                           indf1	equ	0xFE7
 14898                           postdec1	equ	0xFE5
 14899                           fsr1h	equ	0xFE2
 14900                           fsr1l	equ	0xFE1
 14901                           indf2	equ	0xFDF
 14902                           postinc2	equ	0xFDE
 14903                           postdec2	equ	0xFDD
 14904                           fsr2h	equ	0xFDA
 14905                           fsr2l	equ	0xFD9
 14906                           status	equ	0xFD8
 14907                           
 14908 ;; *************** function ___ftneg *****************
 14909 ;; Defined at:
 14910 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 14911 ;; Parameters:    Size  Location     Type
 14912 ;;  f1              3   35[BANK1 ] float 
 14913 ;; Auto vars:     Size  Location     Type
 14914 ;;		None
 14915 ;; Return value:  Size  Location     Type
 14916 ;;                  3   35[BANK1 ] float 
 14917 ;; Registers used:
 14918 ;;		wreg, status,2, status,0
 14919 ;; Tracked objects:
 14920 ;;		On entry : 0/0
 14921 ;;		On exit  : 0/0
 14922 ;;		Unchanged: 0/0
 14923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14924 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14927 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14928 ;;Total ram usage:        3 bytes
 14929 ;; Hardware stack levels used:    1
 14930 ;; Hardware stack levels required when called:   14
 14931 ;; This function calls:
 14932 ;;		Nothing
 14933 ;; This function is called by:
 14934 ;;		_ringBufferLUT
 14935 ;;		_printf
 14936 ;; This function uses a non-reentrant model
 14937 ;;
 14938                           
 14939                           	psect	text38
 14940  016146                     __ptext38:
 14941                           	opt stack 0
 14942  016146                     ___ftneg:
 14943                           	opt stack 13
 14944                           
 14945                           ; BSR set to: 1
 14946                           ;incstack = 0
 14947  016146  0101               	movlb	1	; () banked
 14948  016148  5123               	movf	___ftneg@f1& (0+255),w,b
 14949  01614A  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 14950  01614C  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 14951  01614E  B4D8               	btfsc	status,2,c
 14952  016150  D006               	goto	l1583
 14953                           
 14954                           ; BSR set to: 1
 14955  016152  0E00               	movlw	0
 14956  016154  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 14957  016156  0E00               	movlw	0
 14958  016158  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 14959  01615A  0E80               	movlw	128
 14960  01615C  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 14961  01615E                     l1583:
 14962                           
 14963                           ; BSR set to: 1
 14964  01615E  C123  F123         	movff	___ftneg@f1,?___ftneg
 14965  016162  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 14966  016166  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 14967                           
 14968                           ; BSR set to: 1
 14969  01616A  0012               	return		;funcret
 14970  01616C                     __end_of___ftneg:
 14971                           	opt stack 0
 14972                           tblptru	equ	0xFF8
 14973                           tblptrh	equ	0xFF7
 14974                           tblptrl	equ	0xFF6
 14975                           tablat	equ	0xFF5
 14976                           prodh	equ	0xFF4
 14977                           prodl	equ	0xFF3
 14978                           intcon	equ	0xFF2
 14979                           postinc0	equ	0xFEE
 14980                           wreg	equ	0xFE8
 14981                           indf1	equ	0xFE7
 14982                           postdec1	equ	0xFE5
 14983                           fsr1h	equ	0xFE2
 14984                           fsr1l	equ	0xFE1
 14985                           indf2	equ	0xFDF
 14986                           postinc2	equ	0xFDE
 14987                           postdec2	equ	0xFDD
 14988                           fsr2h	equ	0xFDA
 14989                           fsr2l	equ	0xFD9
 14990                           status	equ	0xFD8
 14991                           
 14992 ;; *************** function ___ftge *****************
 14993 ;; Defined at:
 14994 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 14995 ;; Parameters:    Size  Location     Type
 14996 ;;  ff1             3   23[BANK1 ] float 
 14997 ;;  ff2             3   26[BANK1 ] float 
 14998 ;; Auto vars:     Size  Location     Type
 14999 ;;		None
 15000 ;; Return value:  Size  Location     Type
 15001 ;;		None               void
 15002 ;; Registers used:
 15003 ;;		wreg, status,2, status,0
 15004 ;; Tracked objects:
 15005 ;;		On entry : 0/0
 15006 ;;		On exit  : 0/0
 15007 ;;		Unchanged: 0/0
 15008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15009 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15011 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15012 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15013 ;;Total ram usage:        9 bytes
 15014 ;; Hardware stack levels used:    1
 15015 ;; Hardware stack levels required when called:   14
 15016 ;; This function calls:
 15017 ;;		Nothing
 15018 ;; This function is called by:
 15019 ;;		_printf
 15020 ;; This function uses a non-reentrant model
 15021 ;;
 15022                           
 15023                           	psect	text39
 15024  01515E                     __ptext39:
 15025                           	opt stack 0
 15026  01515E                     ___ftge:
 15027                           	opt stack 13
 15028                           
 15029                           ; BSR set to: 1
 15030                           ;incstack = 0
 15031  01515E  0101               	movlb	1	; () banked
 15032  015160  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 15033  015162  D016               	goto	l1565
 15034                           
 15035                           ; BSR set to: 1
 15036  015164  C117  F11D         	movff	___ftge@ff1,??___ftge
 15037  015168  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 15038  01516C  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 15039  015170  1F1D               	comf	??___ftge& (0+255),f,b
 15040  015172  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 15041  015174  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 15042  015176  2B1D               	incf	??___ftge& (0+255),f,b
 15043  015178  0E00               	movlw	0
 15044  01517A  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 15045  01517C  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 15046  01517E  0E00               	movlw	0
 15047  015180  251D               	addwf	??___ftge& (0+255),w,b
 15048  015182  6F17               	movwf	___ftge@ff1& (0+255),b
 15049  015184  0E00               	movlw	0
 15050  015186  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 15051  015188  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 15052  01518A  0E80               	movlw	128
 15053  01518C  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 15054  01518E  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 15055  015190                     l1565:
 15056                           
 15057                           ; BSR set to: 1
 15058                           
 15059                           ; BSR set to: 1
 15060  015190  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 15061  015192  D016               	goto	l1566
 15062                           
 15063                           ; BSR set to: 1
 15064  015194  C11A  F11D         	movff	___ftge@ff2,??___ftge
 15065  015198  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 15066  01519C  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 15067  0151A0  1F1D               	comf	??___ftge& (0+255),f,b
 15068  0151A2  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 15069  0151A4  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 15070  0151A6  2B1D               	incf	??___ftge& (0+255),f,b
 15071  0151A8  0E00               	movlw	0
 15072  0151AA  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 15073  0151AC  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 15074  0151AE  0E00               	movlw	0
 15075  0151B0  251D               	addwf	??___ftge& (0+255),w,b
 15076  0151B2  6F1A               	movwf	___ftge@ff2& (0+255),b
 15077  0151B4  0E00               	movlw	0
 15078  0151B6  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 15079  0151B8  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 15080  0151BA  0E80               	movlw	128
 15081  0151BC  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 15082  0151BE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 15083  0151C0                     l1566:
 15084                           
 15085                           ; BSR set to: 1
 15086                           
 15087                           ; BSR set to: 1
 15088  0151C0  0E00               	movlw	0
 15089  0151C2  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 15090  0151C4  0E00               	movlw	0
 15091  0151C6  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 15092  0151C8  0E80               	movlw	128
 15093  0151CA  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 15094                           
 15095                           ; BSR set to: 1
 15096  0151CC  0E00               	movlw	0
 15097  0151CE  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 15098  0151D0  0E00               	movlw	0
 15099  0151D2  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 15100  0151D4  0E80               	movlw	128
 15101  0151D6  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 15102  0151D8  511A               	movf	___ftge@ff2& (0+255),w,b
 15103  0151DA  5D17               	subwf	___ftge@ff1& (0+255),w,b
 15104  0151DC  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 15105  0151DE  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 15106  0151E0  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 15107  0151E2  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 15108  0151E4  B0D8               	btfsc	status,0,c
 15109  0151E6  D002               	goto	l7831
 15110                           
 15111                           ; BSR set to: 1
 15112  0151E8  90D8               	bcf	status,0,c
 15113  0151EA  0012               	return	
 15114  0151EC                     l7831:
 15115                           
 15116                           ; BSR set to: 1
 15117                           
 15118                           ; BSR set to: 1
 15119  0151EC  80D8               	bsf	status,0,c
 15120                           
 15121                           ; BSR set to: 1
 15122  0151EE  0012               	return	
 15123  0151F0                     __end_of___ftge:
 15124                           	opt stack 0
 15125                           tblptru	equ	0xFF8
 15126                           tblptrh	equ	0xFF7
 15127                           tblptrl	equ	0xFF6
 15128                           tablat	equ	0xFF5
 15129                           prodh	equ	0xFF4
 15130                           prodl	equ	0xFF3
 15131                           intcon	equ	0xFF2
 15132                           postinc0	equ	0xFEE
 15133                           wreg	equ	0xFE8
 15134                           indf1	equ	0xFE7
 15135                           postdec1	equ	0xFE5
 15136                           fsr1h	equ	0xFE2
 15137                           fsr1l	equ	0xFE1
 15138                           indf2	equ	0xFDF
 15139                           postinc2	equ	0xFDE
 15140                           postdec2	equ	0xFDD
 15141                           fsr2h	equ	0xFDA
 15142                           fsr2l	equ	0xFD9
 15143                           status	equ	0xFD8
 15144                           
 15145 ;; *************** function _SYSTEM_Initialize *****************
 15146 ;; Defined at:
 15147 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15148 ;; Parameters:    Size  Location     Type
 15149 ;;		None
 15150 ;; Auto vars:     Size  Location     Type
 15151 ;;		None
 15152 ;; Return value:  Size  Location     Type
 15153 ;;                  1    wreg      void 
 15154 ;; Registers used:
 15155 ;;		wreg, status,2, status,0, cstack
 15156 ;; Tracked objects:
 15157 ;;		On entry : 0/0
 15158 ;;		On exit  : 0/0
 15159 ;;		Unchanged: 0/0
 15160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15165 ;;Total ram usage:        0 bytes
 15166 ;; Hardware stack levels used:    1
 15167 ;; Hardware stack levels required when called:   16
 15168 ;; This function calls:
 15169 ;;		_ADCC_Initialize
 15170 ;;		_EUSART2_Initialize
 15171 ;;		_FVR_Initialize
 15172 ;;		_INTERRUPT_Initialize
 15173 ;;		_OSCILLATOR_Initialize
 15174 ;;		_PIN_MANAGER_Initialize
 15175 ;;		_PMD_Initialize
 15176 ;;		_TMR5_Initialize
 15177 ;;		_TMR6_Initialize
 15178 ;;		_TMR7_Initialize
 15179 ;; This function is called by:
 15180 ;;		_main
 15181 ;; This function uses a non-reentrant model
 15182 ;;
 15183                           
 15184                           	psect	text40
 15185  0160A4                     __ptext40:
 15186                           	opt stack 0
 15187  0160A4                     _SYSTEM_Initialize:
 15188                           	opt stack 14
 15189                           
 15190                           ;mcc.c: 52: INTERRUPT_Initialize();
 15191                           
 15192                           ; BSR set to: 1
 15193                           ;incstack = 0
 15194  0160A4  EC5D  F0B1         	call	_INTERRUPT_Initialize	;wreg free
 15195                           
 15196                           ;mcc.c: 53: PMD_Initialize();
 15197  0160A8  EC20  F0B1         	call	_PMD_Initialize	;wreg free
 15198                           
 15199                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 15200  0160AC  EC5E  F0A8         	call	_PIN_MANAGER_Initialize	;wreg free
 15201                           
 15202                           ;mcc.c: 55: OSCILLATOR_Initialize();
 15203  0160B0  EC2E  F0B1         	call	_OSCILLATOR_Initialize	;wreg free
 15204                           
 15205                           ;mcc.c: 56: FVR_Initialize();
 15206  0160B4  ECC1  F0B1         	call	_FVR_Initialize	;wreg free
 15207                           
 15208                           ;mcc.c: 57: TMR7_Initialize();
 15209  0160B8  EC65  F0AE         	call	_TMR7_Initialize	;wreg free
 15210                           
 15211                           ;mcc.c: 58: TMR6_Initialize();
 15212  0160BC  EC0A  F0B0         	call	_TMR6_Initialize	;wreg free
 15213                           
 15214                           ;mcc.c: 59: ADCC_Initialize();
 15215  0160C0  ECC8  F0AC         	call	_ADCC_Initialize	;wreg free
 15216                           
 15217                           ;mcc.c: 60: TMR5_Initialize();
 15218  0160C4  ECB2  F0AE         	call	_TMR5_Initialize	;wreg free
 15219                           
 15220                           ;mcc.c: 61: EUSART2_Initialize();
 15221  0160C8  EC62  F0AC         	call	_EUSART2_Initialize	;wreg free
 15222  0160CC  0012               	return		;funcret
 15223  0160CE                     __end_of_SYSTEM_Initialize:
 15224                           	opt stack 0
 15225                           tblptru	equ	0xFF8
 15226                           tblptrh	equ	0xFF7
 15227                           tblptrl	equ	0xFF6
 15228                           tablat	equ	0xFF5
 15229                           prodh	equ	0xFF4
 15230                           prodl	equ	0xFF3
 15231                           intcon	equ	0xFF2
 15232                           postinc0	equ	0xFEE
 15233                           wreg	equ	0xFE8
 15234                           indf1	equ	0xFE7
 15235                           postdec1	equ	0xFE5
 15236                           fsr1h	equ	0xFE2
 15237                           fsr1l	equ	0xFE1
 15238                           indf2	equ	0xFDF
 15239                           postinc2	equ	0xFDE
 15240                           postdec2	equ	0xFDD
 15241                           fsr2h	equ	0xFDA
 15242                           fsr2l	equ	0xFD9
 15243                           status	equ	0xFD8
 15244                           
 15245 ;; *************** function _TMR7_Initialize *****************
 15246 ;; Defined at:
 15247 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 15248 ;; Parameters:    Size  Location     Type
 15249 ;;		None
 15250 ;; Auto vars:     Size  Location     Type
 15251 ;;		None
 15252 ;; Return value:  Size  Location     Type
 15253 ;;                  1    wreg      void 
 15254 ;; Registers used:
 15255 ;;		wreg, status,2, status,0, cstack
 15256 ;; Tracked objects:
 15257 ;;		On entry : 0/0
 15258 ;;		On exit  : 0/0
 15259 ;;		Unchanged: 0/0
 15260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15263 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15264 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15265 ;;Total ram usage:        2 bytes
 15266 ;; Hardware stack levels used:    1
 15267 ;; Hardware stack levels required when called:   15
 15268 ;; This function calls:
 15269 ;;		_TMR7_SetInterruptHandler
 15270 ;; This function is called by:
 15271 ;;		_SYSTEM_Initialize
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           	psect	text41
 15276  015CCA                     __ptext41:
 15277                           	opt stack 0
 15278  015CCA                     _TMR7_Initialize:
 15279                           	opt stack 14
 15280                           
 15281                           ;tmr7.c: 69: T7GCON = 0x00;
 15282                           
 15283                           ;incstack = 0
 15284  015CCA  0E00               	movlw	0
 15285  015CCC  010F               	movlb	15	; () banked
 15286  015CCE  6F31               	movwf	49,b	;volatile
 15287                           
 15288                           ;tmr7.c: 72: T7GATE = 0x00;
 15289  015CD0  0E00               	movlw	0
 15290  015CD2  6F32               	movwf	50,b	;volatile
 15291                           
 15292                           ;tmr7.c: 75: T7CLK = 0x03;
 15293  015CD4  0E03               	movlw	3
 15294  015CD6  6F33               	movwf	51,b	;volatile
 15295                           
 15296                           ;tmr7.c: 78: TMR7H = 0x3C;
 15297  015CD8  0E3C               	movlw	60
 15298  015CDA  6F2F               	movwf	47,b	;volatile
 15299                           
 15300                           ;tmr7.c: 81: TMR7L = 0xB0;
 15301  015CDC  0EB0               	movlw	176
 15302  015CDE  6F2E               	movwf	46,b	;volatile
 15303                           
 15304                           ; BSR set to: 15
 15305                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 15306  015CE0  512E               	movf	46,w,b	;volatile
 15307  015CE2  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 15308  015CE6  0101               	movlb	1	; () banked
 15309  015CE8  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 15310  015CEA  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 15311  015CEE  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 15312  015CF0  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 15313  015CF2  6FD7               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 15314  015CF4  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 15315  015CF6  6FD8               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 15316                           
 15317                           ; BSR set to: 1
 15318                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 15319  015CF8  010E               	movlb	14	; () banked
 15320  015CFA  9D38               	bcf	56,6,b	;volatile
 15321                           
 15322                           ; BSR set to: 14
 15323                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 15324  015CFC  8D2E               	bsf	46,6,b	;volatile
 15325                           
 15326                           ; BSR set to: 14
 15327                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 15328  015CFE  0E90               	movlw	low _TMR7_DefaultInterruptHandler
 15329  015D00  0101               	movlb	1	; () banked
 15330  015D02  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15331  015D04  0E63               	movlw	high _TMR7_DefaultInterruptHandler
 15332  015D06  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15333  015D08  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 15334  015D0A  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15335  015D0C  EC85  F0B1         	call	_TMR7_SetInterruptHandler	;wreg free
 15336                           
 15337                           ;tmr7.c: 96: T7CON = 0x31;
 15338  015D10  0E31               	movlw	49
 15339  015D12  010F               	movlb	15	; () banked
 15340  015D14  6F30               	movwf	48,b	;volatile
 15341                           
 15342                           ; BSR set to: 15
 15343  015D16  0012               	return		;funcret
 15344  015D18                     __end_of_TMR7_Initialize:
 15345                           	opt stack 0
 15346                           tblptru	equ	0xFF8
 15347                           tblptrh	equ	0xFF7
 15348                           tblptrl	equ	0xFF6
 15349                           tablat	equ	0xFF5
 15350                           prodh	equ	0xFF4
 15351                           prodl	equ	0xFF3
 15352                           intcon	equ	0xFF2
 15353                           postinc0	equ	0xFEE
 15354                           wreg	equ	0xFE8
 15355                           indf1	equ	0xFE7
 15356                           postdec1	equ	0xFE5
 15357                           fsr1h	equ	0xFE2
 15358                           fsr1l	equ	0xFE1
 15359                           indf2	equ	0xFDF
 15360                           postinc2	equ	0xFDE
 15361                           postdec2	equ	0xFDD
 15362                           fsr2h	equ	0xFDA
 15363                           fsr2l	equ	0xFD9
 15364                           status	equ	0xFD8
 15365                           
 15366 ;; *************** function _TMR7_SetInterruptHandler *****************
 15367 ;; Defined at:
 15368 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 15369 ;; Parameters:    Size  Location     Type
 15370 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15371 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 15372 ;; Auto vars:     Size  Location     Type
 15373 ;;		None
 15374 ;; Return value:  Size  Location     Type
 15375 ;;                  1    wreg      void 
 15376 ;; Registers used:
 15377 ;;		wreg, status,2, status,0
 15378 ;; Tracked objects:
 15379 ;;		On entry : 0/0
 15380 ;;		On exit  : 0/0
 15381 ;;		Unchanged: 0/0
 15382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15383 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15386 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15387 ;;Total ram usage:        3 bytes
 15388 ;; Hardware stack levels used:    1
 15389 ;; Hardware stack levels required when called:   14
 15390 ;; This function calls:
 15391 ;;		Nothing
 15392 ;; This function is called by:
 15393 ;;		_TMR7_Initialize
 15394 ;;		_main
 15395 ;; This function uses a non-reentrant model
 15396 ;;
 15397                           
 15398                           	psect	text42
 15399  01630A                     __ptext42:
 15400                           	opt stack 0
 15401  01630A                     _TMR7_SetInterruptHandler:
 15402                           	opt stack 16
 15403                           
 15404                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 15405                           
 15406                           ; BSR set to: 15
 15407                           ;incstack = 0
 15408  01630A  C117  F1CC         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 15409  01630E  C118  F1CD         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 15410  016312  C119  F1CE         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 15411  016316  0012               	return		;funcret
 15412  016318                     __end_of_TMR7_SetInterruptHandler:
 15413                           	opt stack 0
 15414                           tblptru	equ	0xFF8
 15415                           tblptrh	equ	0xFF7
 15416                           tblptrl	equ	0xFF6
 15417                           tablat	equ	0xFF5
 15418                           prodh	equ	0xFF4
 15419                           prodl	equ	0xFF3
 15420                           intcon	equ	0xFF2
 15421                           postinc0	equ	0xFEE
 15422                           wreg	equ	0xFE8
 15423                           indf1	equ	0xFE7
 15424                           postdec1	equ	0xFE5
 15425                           fsr1h	equ	0xFE2
 15426                           fsr1l	equ	0xFE1
 15427                           indf2	equ	0xFDF
 15428                           postinc2	equ	0xFDE
 15429                           postdec2	equ	0xFDD
 15430                           fsr2h	equ	0xFDA
 15431                           fsr2l	equ	0xFD9
 15432                           status	equ	0xFD8
 15433                           
 15434 ;; *************** function _TMR6_Initialize *****************
 15435 ;; Defined at:
 15436 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 15437 ;; Parameters:    Size  Location     Type
 15438 ;;		None
 15439 ;; Auto vars:     Size  Location     Type
 15440 ;;		None
 15441 ;; Return value:  Size  Location     Type
 15442 ;;                  1    wreg      void 
 15443 ;; Registers used:
 15444 ;;		wreg, status,2, status,0, cstack
 15445 ;; Tracked objects:
 15446 ;;		On entry : 0/0
 15447 ;;		On exit  : 0/0
 15448 ;;		Unchanged: 0/0
 15449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15454 ;;Total ram usage:        0 bytes
 15455 ;; Hardware stack levels used:    1
 15456 ;; Hardware stack levels required when called:   15
 15457 ;; This function calls:
 15458 ;;		_TMR6_SetInterruptHandler
 15459 ;; This function is called by:
 15460 ;;		_SYSTEM_Initialize
 15461 ;; This function uses a non-reentrant model
 15462 ;;
 15463                           
 15464                           	psect	text43
 15465  016014                     __ptext43:
 15466                           	opt stack 0
 15467  016014                     _TMR6_Initialize:
 15468                           	opt stack 14
 15469                           
 15470                           ;tmr6.c: 69: T6CLKCON = 0x04;
 15471                           
 15472                           ;incstack = 0
 15473  016014  0E04               	movlw	4
 15474  016016  6EB3               	movwf	4019,c	;volatile
 15475                           
 15476                           ;tmr6.c: 72: T6HLT = 0x20;
 15477  016018  0E20               	movlw	32
 15478  01601A  6EB2               	movwf	4018,c	;volatile
 15479                           
 15480                           ;tmr6.c: 75: T6RST = 0x00;
 15481  01601C  0E00               	movlw	0
 15482  01601E  6EB4               	movwf	4020,c	;volatile
 15483                           
 15484                           ;tmr6.c: 78: T6PR = 0xF1;
 15485  016020  0EF1               	movlw	241
 15486  016022  6EB0               	movwf	4016,c	;volatile
 15487                           
 15488                           ;tmr6.c: 81: T6TMR = 0x00;
 15489  016024  0E00               	movlw	0
 15490  016026  6EAF               	movwf	4015,c	;volatile
 15491                           
 15492                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 15493  016028  010E               	movlb	14	; () banked
 15494  01602A  9B38               	bcf	56,5,b	;volatile
 15495                           
 15496                           ; BSR set to: 14
 15497                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 15498  01602C  8B2E               	bsf	46,5,b	;volatile
 15499                           
 15500                           ; BSR set to: 14
 15501                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 15502  01602E  0E92               	movlw	low _TMR6_DefaultInterruptHandler
 15503  016030  0101               	movlb	1	; () banked
 15504  016032  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15505  016034  0E63               	movlw	high _TMR6_DefaultInterruptHandler
 15506  016036  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15507  016038  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 15508  01603A  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15509  01603C  EC8C  F0B1         	call	_TMR6_SetInterruptHandler	;wreg free
 15510                           
 15511                           ;tmr6.c: 93: T6CON = 0xBF;
 15512  016040  0EBF               	movlw	191
 15513  016042  6EB1               	movwf	4017,c	;volatile
 15514  016044  0012               	return		;funcret
 15515  016046                     __end_of_TMR6_Initialize:
 15516                           	opt stack 0
 15517                           tblptru	equ	0xFF8
 15518                           tblptrh	equ	0xFF7
 15519                           tblptrl	equ	0xFF6
 15520                           tablat	equ	0xFF5
 15521                           prodh	equ	0xFF4
 15522                           prodl	equ	0xFF3
 15523                           intcon	equ	0xFF2
 15524                           postinc0	equ	0xFEE
 15525                           wreg	equ	0xFE8
 15526                           indf1	equ	0xFE7
 15527                           postdec1	equ	0xFE5
 15528                           fsr1h	equ	0xFE2
 15529                           fsr1l	equ	0xFE1
 15530                           indf2	equ	0xFDF
 15531                           postinc2	equ	0xFDE
 15532                           postdec2	equ	0xFDD
 15533                           fsr2h	equ	0xFDA
 15534                           fsr2l	equ	0xFD9
 15535                           status	equ	0xFD8
 15536                           
 15537 ;; *************** function _TMR6_SetInterruptHandler *****************
 15538 ;; Defined at:
 15539 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 15540 ;; Parameters:    Size  Location     Type
 15541 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15542 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;		None
 15545 ;; Return value:  Size  Location     Type
 15546 ;;                  1    wreg      void 
 15547 ;; Registers used:
 15548 ;;		wreg, status,2, status,0
 15549 ;; Tracked objects:
 15550 ;;		On entry : 0/0
 15551 ;;		On exit  : 0/0
 15552 ;;		Unchanged: 0/0
 15553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15554 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15557 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15558 ;;Total ram usage:        3 bytes
 15559 ;; Hardware stack levels used:    1
 15560 ;; Hardware stack levels required when called:   14
 15561 ;; This function calls:
 15562 ;;		Nothing
 15563 ;; This function is called by:
 15564 ;;		_TMR6_Initialize
 15565 ;;		_main
 15566 ;; This function uses a non-reentrant model
 15567 ;;
 15568                           
 15569                           	psect	text44
 15570  016318                     __ptext44:
 15571                           	opt stack 0
 15572  016318                     _TMR6_SetInterruptHandler:
 15573                           	opt stack 16
 15574                           
 15575                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 15576                           
 15577                           ;incstack = 0
 15578  016318  C117  F1CF         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 15579  01631C  C118  F1D0         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 15580  016320  C119  F1D1         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 15581  016324  0012               	return		;funcret
 15582  016326                     __end_of_TMR6_SetInterruptHandler:
 15583                           	opt stack 0
 15584                           tblptru	equ	0xFF8
 15585                           tblptrh	equ	0xFF7
 15586                           tblptrl	equ	0xFF6
 15587                           tablat	equ	0xFF5
 15588                           prodh	equ	0xFF4
 15589                           prodl	equ	0xFF3
 15590                           intcon	equ	0xFF2
 15591                           postinc0	equ	0xFEE
 15592                           wreg	equ	0xFE8
 15593                           indf1	equ	0xFE7
 15594                           postdec1	equ	0xFE5
 15595                           fsr1h	equ	0xFE2
 15596                           fsr1l	equ	0xFE1
 15597                           indf2	equ	0xFDF
 15598                           postinc2	equ	0xFDE
 15599                           postdec2	equ	0xFDD
 15600                           fsr2h	equ	0xFDA
 15601                           fsr2l	equ	0xFD9
 15602                           status	equ	0xFD8
 15603                           
 15604 ;; *************** function _TMR5_Initialize *****************
 15605 ;; Defined at:
 15606 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 15607 ;; Parameters:    Size  Location     Type
 15608 ;;		None
 15609 ;; Auto vars:     Size  Location     Type
 15610 ;;		None
 15611 ;; Return value:  Size  Location     Type
 15612 ;;                  1    wreg      void 
 15613 ;; Registers used:
 15614 ;;		wreg, status,2, status,0, cstack
 15615 ;; Tracked objects:
 15616 ;;		On entry : 0/0
 15617 ;;		On exit  : 0/0
 15618 ;;		Unchanged: 0/0
 15619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15622 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15623 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15624 ;;Total ram usage:        2 bytes
 15625 ;; Hardware stack levels used:    1
 15626 ;; Hardware stack levels required when called:   15
 15627 ;; This function calls:
 15628 ;;		_TMR5_SetInterruptHandler
 15629 ;; This function is called by:
 15630 ;;		_SYSTEM_Initialize
 15631 ;; This function uses a non-reentrant model
 15632 ;;
 15633                           
 15634                           	psect	text45
 15635  015D64                     __ptext45:
 15636                           	opt stack 0
 15637  015D64                     _TMR5_Initialize:
 15638                           	opt stack 14
 15639                           
 15640                           ;tmr5.c: 69: T5GCON = 0x00;
 15641                           
 15642                           ;incstack = 0
 15643  015D64  0E00               	movlw	0
 15644  015D66  6EC4               	movwf	4036,c	;volatile
 15645                           
 15646                           ;tmr5.c: 72: T5GATE = 0x00;
 15647  015D68  0E00               	movlw	0
 15648  015D6A  6EC5               	movwf	4037,c	;volatile
 15649                           
 15650                           ;tmr5.c: 75: T5CLK = 0x01;
 15651  015D6C  0E01               	movlw	1
 15652  015D6E  6EC6               	movwf	4038,c	;volatile
 15653                           
 15654                           ;tmr5.c: 78: TMR5H = 0x00;
 15655  015D70  0E00               	movlw	0
 15656  015D72  6EC2               	movwf	4034,c	;volatile
 15657                           
 15658                           ;tmr5.c: 81: TMR5L = 0x00;
 15659  015D74  0E00               	movlw	0
 15660  015D76  6EC1               	movwf	4033,c	;volatile
 15661                           
 15662                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15663  015D78  50C1               	movf	4033,w,c	;volatile
 15664  015D7A  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 15665  015D7E  0101               	movlb	1	; () banked
 15666  015D80  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 15667  015D82  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15668  015D86  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 15669  015D88  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 15670  015D8A  6FD5               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 15671  015D8C  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 15672  015D8E  6FD6               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 15673                           
 15674                           ; BSR set to: 1
 15675                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 15676  015D90  010E               	movlb	14	; () banked
 15677  015D92  9938               	bcf	56,4,b	;volatile
 15678                           
 15679                           ; BSR set to: 14
 15680                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 15681  015D94  892E               	bsf	46,4,b	;volatile
 15682                           
 15683                           ; BSR set to: 14
 15684                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 15685  015D96  0E94               	movlw	low _TMR5_DefaultInterruptHandler
 15686  015D98  0101               	movlb	1	; () banked
 15687  015D9A  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15688  015D9C  0E63               	movlw	high _TMR5_DefaultInterruptHandler
 15689  015D9E  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15690  015DA0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15691  015DA2  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15692  015DA4  EC93  F0B1         	call	_TMR5_SetInterruptHandler	;wreg free
 15693                           
 15694                           ;tmr5.c: 96: T5CON = 0x13;
 15695  015DA8  0E13               	movlw	19
 15696  015DAA  6EC3               	movwf	4035,c	;volatile
 15697  015DAC  0012               	return		;funcret
 15698  015DAE                     __end_of_TMR5_Initialize:
 15699                           	opt stack 0
 15700                           tblptru	equ	0xFF8
 15701                           tblptrh	equ	0xFF7
 15702                           tblptrl	equ	0xFF6
 15703                           tablat	equ	0xFF5
 15704                           prodh	equ	0xFF4
 15705                           prodl	equ	0xFF3
 15706                           intcon	equ	0xFF2
 15707                           postinc0	equ	0xFEE
 15708                           wreg	equ	0xFE8
 15709                           indf1	equ	0xFE7
 15710                           postdec1	equ	0xFE5
 15711                           fsr1h	equ	0xFE2
 15712                           fsr1l	equ	0xFE1
 15713                           indf2	equ	0xFDF
 15714                           postinc2	equ	0xFDE
 15715                           postdec2	equ	0xFDD
 15716                           fsr2h	equ	0xFDA
 15717                           fsr2l	equ	0xFD9
 15718                           status	equ	0xFD8
 15719                           
 15720 ;; *************** function _TMR5_SetInterruptHandler *****************
 15721 ;; Defined at:
 15722 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 15723 ;; Parameters:    Size  Location     Type
 15724 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15725 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15726 ;; Auto vars:     Size  Location     Type
 15727 ;;		None
 15728 ;; Return value:  Size  Location     Type
 15729 ;;                  1    wreg      void 
 15730 ;; Registers used:
 15731 ;;		wreg, status,2, status,0
 15732 ;; Tracked objects:
 15733 ;;		On entry : 0/0
 15734 ;;		On exit  : 0/0
 15735 ;;		Unchanged: 0/0
 15736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15737 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15740 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15741 ;;Total ram usage:        3 bytes
 15742 ;; Hardware stack levels used:    1
 15743 ;; Hardware stack levels required when called:   14
 15744 ;; This function calls:
 15745 ;;		Nothing
 15746 ;; This function is called by:
 15747 ;;		_TMR5_Initialize
 15748 ;; This function uses a non-reentrant model
 15749 ;;
 15750                           
 15751                           	psect	text46
 15752  016326                     __ptext46:
 15753                           	opt stack 0
 15754  016326                     _TMR5_SetInterruptHandler:
 15755                           	opt stack 14
 15756                           
 15757                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 15758                           
 15759                           ;incstack = 0
 15760  016326  C117  F1C9         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15761  01632A  C118  F1CA         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15762  01632E  C119  F1CB         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 15763  016332  0012               	return		;funcret
 15764  016334                     __end_of_TMR5_SetInterruptHandler:
 15765                           	opt stack 0
 15766                           tblptru	equ	0xFF8
 15767                           tblptrh	equ	0xFF7
 15768                           tblptrl	equ	0xFF6
 15769                           tablat	equ	0xFF5
 15770                           prodh	equ	0xFF4
 15771                           prodl	equ	0xFF3
 15772                           intcon	equ	0xFF2
 15773                           postinc0	equ	0xFEE
 15774                           wreg	equ	0xFE8
 15775                           indf1	equ	0xFE7
 15776                           postdec1	equ	0xFE5
 15777                           fsr1h	equ	0xFE2
 15778                           fsr1l	equ	0xFE1
 15779                           indf2	equ	0xFDF
 15780                           postinc2	equ	0xFDE
 15781                           postdec2	equ	0xFDD
 15782                           fsr2h	equ	0xFDA
 15783                           fsr2l	equ	0xFD9
 15784                           status	equ	0xFD8
 15785                           
 15786 ;; *************** function _PMD_Initialize *****************
 15787 ;; Defined at:
 15788 ;;		line 82 in file "mcc_generated_files/mcc.c"
 15789 ;; Parameters:    Size  Location     Type
 15790 ;;		None
 15791 ;; Auto vars:     Size  Location     Type
 15792 ;;		None
 15793 ;; Return value:  Size  Location     Type
 15794 ;;                  1    wreg      void 
 15795 ;; Registers used:
 15796 ;;		wreg, status,2
 15797 ;; Tracked objects:
 15798 ;;		On entry : 0/0
 15799 ;;		On exit  : 0/0
 15800 ;;		Unchanged: 0/0
 15801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15806 ;;Total ram usage:        0 bytes
 15807 ;; Hardware stack levels used:    1
 15808 ;; Hardware stack levels required when called:   14
 15809 ;; This function calls:
 15810 ;;		Nothing
 15811 ;; This function is called by:
 15812 ;;		_SYSTEM_Initialize
 15813 ;; This function uses a non-reentrant model
 15814 ;;
 15815                           
 15816                           	psect	text47
 15817  016240                     __ptext47:
 15818                           	opt stack 0
 15819  016240                     _PMD_Initialize:
 15820                           	opt stack 15
 15821                           
 15822                           ;mcc.c: 85: PMD0 = 0x00;
 15823                           
 15824                           ;incstack = 0
 15825  016240  0E00               	movlw	0
 15826  016242  010E               	movlb	14	; () banked
 15827  016244  6F4C               	movwf	76,b	;volatile
 15828                           
 15829                           ;mcc.c: 87: PMD1 = 0x00;
 15830  016246  0E00               	movlw	0
 15831  016248  6F4D               	movwf	77,b	;volatile
 15832                           
 15833                           ;mcc.c: 89: PMD2 = 0x00;
 15834  01624A  0E00               	movlw	0
 15835  01624C  6F4E               	movwf	78,b	;volatile
 15836                           
 15837                           ;mcc.c: 91: PMD3 = 0x00;
 15838  01624E  0E00               	movlw	0
 15839  016250  6F4F               	movwf	79,b	;volatile
 15840                           
 15841                           ;mcc.c: 93: PMD4 = 0x00;
 15842  016252  0E00               	movlw	0
 15843  016254  6F50               	movwf	80,b	;volatile
 15844                           
 15845                           ;mcc.c: 95: PMD5 = 0x00;
 15846  016256  0E00               	movlw	0
 15847  016258  6F51               	movwf	81,b	;volatile
 15848                           
 15849                           ; BSR set to: 14
 15850  01625A  0012               	return		;funcret
 15851  01625C                     __end_of_PMD_Initialize:
 15852                           	opt stack 0
 15853                           tblptru	equ	0xFF8
 15854                           tblptrh	equ	0xFF7
 15855                           tblptrl	equ	0xFF6
 15856                           tablat	equ	0xFF5
 15857                           prodh	equ	0xFF4
 15858                           prodl	equ	0xFF3
 15859                           intcon	equ	0xFF2
 15860                           postinc0	equ	0xFEE
 15861                           wreg	equ	0xFE8
 15862                           indf1	equ	0xFE7
 15863                           postdec1	equ	0xFE5
 15864                           fsr1h	equ	0xFE2
 15865                           fsr1l	equ	0xFE1
 15866                           indf2	equ	0xFDF
 15867                           postinc2	equ	0xFDE
 15868                           postdec2	equ	0xFDD
 15869                           fsr2h	equ	0xFDA
 15870                           fsr2l	equ	0xFD9
 15871                           status	equ	0xFD8
 15872                           
 15873 ;; *************** function _PIN_MANAGER_Initialize *****************
 15874 ;; Defined at:
 15875 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15876 ;; Parameters:    Size  Location     Type
 15877 ;;		None
 15878 ;; Auto vars:     Size  Location     Type
 15879 ;;		None
 15880 ;; Return value:  Size  Location     Type
 15881 ;;                  1    wreg      void 
 15882 ;; Registers used:
 15883 ;;		wreg, status,2
 15884 ;; Tracked objects:
 15885 ;;		On entry : 0/0
 15886 ;;		On exit  : 0/0
 15887 ;;		Unchanged: 0/0
 15888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15893 ;;Total ram usage:        0 bytes
 15894 ;; Hardware stack levels used:    1
 15895 ;; Hardware stack levels required when called:   14
 15896 ;; This function calls:
 15897 ;;		Nothing
 15898 ;; This function is called by:
 15899 ;;		_SYSTEM_Initialize
 15900 ;; This function uses a non-reentrant model
 15901 ;;
 15902                           
 15903                           	psect	text48
 15904  0150BC                     __ptext48:
 15905                           	opt stack 0
 15906  0150BC                     _PIN_MANAGER_Initialize:
 15907                           	opt stack 15
 15908                           
 15909                           ;pin_manager.c: 62: LATE = 0x00;
 15910                           
 15911                           ; BSR set to: 14
 15912                           ;incstack = 0
 15913  0150BC  0E00               	movlw	0
 15914  0150BE  6E7D               	movwf	3965,c	;volatile
 15915                           
 15916                           ;pin_manager.c: 63: LATD = 0x00;
 15917  0150C0  0E00               	movlw	0
 15918  0150C2  6E7C               	movwf	3964,c	;volatile
 15919                           
 15920                           ;pin_manager.c: 64: LATA = 0x00;
 15921  0150C4  0E00               	movlw	0
 15922  0150C6  6E79               	movwf	3961,c	;volatile
 15923                           
 15924                           ;pin_manager.c: 65: LATF = 0x00;
 15925  0150C8  0E00               	movlw	0
 15926  0150CA  6E7E               	movwf	3966,c	;volatile
 15927                           
 15928                           ;pin_manager.c: 66: LATB = 0x00;
 15929  0150CC  0E00               	movlw	0
 15930  0150CE  6E7A               	movwf	3962,c	;volatile
 15931                           
 15932                           ;pin_manager.c: 67: LATG = 0x00;
 15933  0150D0  0E00               	movlw	0
 15934  0150D2  6E7F               	movwf	3967,c	;volatile
 15935                           
 15936                           ;pin_manager.c: 68: LATC = 0x00;
 15937  0150D4  0E00               	movlw	0
 15938  0150D6  6E7B               	movwf	3963,c	;volatile
 15939                           
 15940                           ;pin_manager.c: 69: LATH = 0x00;
 15941  0150D8  0E00               	movlw	0
 15942  0150DA  6E80               	movwf	3968,c	;volatile
 15943                           
 15944                           ;pin_manager.c: 74: TRISE = 0xFF;
 15945  0150DC  6885               	setf	3973,c	;volatile
 15946                           
 15947                           ;pin_manager.c: 75: TRISF = 0xF0;
 15948  0150DE  0EF0               	movlw	240
 15949  0150E0  6E86               	movwf	3974,c	;volatile
 15950                           
 15951                           ;pin_manager.c: 76: TRISA = 0xFF;
 15952  0150E2  6881               	setf	3969,c	;volatile
 15953                           
 15954                           ;pin_manager.c: 77: TRISG = 0x5C;
 15955  0150E4  0E5C               	movlw	92
 15956  0150E6  6E87               	movwf	3975,c	;volatile
 15957                           
 15958                           ;pin_manager.c: 78: TRISB = 0xFF;
 15959  0150E8  6882               	setf	3970,c	;volatile
 15960                           
 15961                           ;pin_manager.c: 79: TRISH = 0x0F;
 15962  0150EA  0E0F               	movlw	15
 15963  0150EC  6E88               	movwf	3976,c	;volatile
 15964                           
 15965                           ;pin_manager.c: 80: TRISC = 0xFF;
 15966  0150EE  6883               	setf	3971,c	;volatile
 15967                           
 15968                           ;pin_manager.c: 81: TRISD = 0xFF;
 15969  0150F0  6884               	setf	3972,c	;volatile
 15970                           
 15971                           ;pin_manager.c: 86: ANSELD = 0xFF;
 15972  0150F2  010E               	movlb	14	; () banked
 15973  0150F4  69A7               	setf	167,b	;volatile
 15974                           
 15975                           ; BSR set to: 14
 15976                           ;pin_manager.c: 87: ANSELB = 0xFF;
 15977  0150F6  699A               	setf	154,b	;volatile
 15978                           
 15979                           ; BSR set to: 14
 15980                           ;pin_manager.c: 88: ANSELE = 0xFF;
 15981  0150F8  69AF               	setf	175,b	;volatile
 15982                           
 15983                           ;pin_manager.c: 89: ANSELG = 0x3C;
 15984  0150FA  0E3C               	movlw	60
 15985  0150FC  6FBC               	movwf	188,b	;volatile
 15986                           
 15987                           ;pin_manager.c: 90: ANSELF = 0xF0;
 15988  0150FE  0EF0               	movlw	240
 15989  015100  6FB4               	movwf	180,b	;volatile
 15990                           
 15991                           ; BSR set to: 14
 15992                           ;pin_manager.c: 91: ANSELA = 0xFF;
 15993  015102  6992               	setf	146,b	;volatile
 15994                           
 15995                           ;pin_manager.c: 96: WPUD = 0x00;
 15996  015104  0E00               	movlw	0
 15997  015106  6FA6               	movwf	166,b	;volatile
 15998                           
 15999                           ;pin_manager.c: 97: WPUF = 0x00;
 16000  015108  0E00               	movlw	0
 16001  01510A  6FB3               	movwf	179,b	;volatile
 16002                           
 16003                           ;pin_manager.c: 98: WPUE = 0x00;
 16004  01510C  0E00               	movlw	0
 16005  01510E  6FAE               	movwf	174,b	;volatile
 16006                           
 16007                           ;pin_manager.c: 99: WPUB = 0x00;
 16008  015110  0E00               	movlw	0
 16009  015112  6F99               	movwf	153,b	;volatile
 16010                           
 16011                           ;pin_manager.c: 100: WPUG = 0x00;
 16012  015114  0E00               	movlw	0
 16013  015116  6FBB               	movwf	187,b	;volatile
 16014                           
 16015                           ;pin_manager.c: 101: WPUA = 0x00;
 16016  015118  0E00               	movlw	0
 16017  01511A  6F91               	movwf	145,b	;volatile
 16018                           
 16019                           ;pin_manager.c: 102: WPUC = 0x00;
 16020  01511C  0E00               	movlw	0
 16021  01511E  6FA1               	movwf	161,b	;volatile
 16022                           
 16023                           ;pin_manager.c: 103: WPUH = 0x00;
 16024  015120  0E00               	movlw	0
 16025  015122  6FC0               	movwf	192,b	;volatile
 16026                           
 16027                           ;pin_manager.c: 108: ODCONE = 0x00;
 16028  015124  0E00               	movlw	0
 16029  015126  6FAD               	movwf	173,b	;volatile
 16030                           
 16031                           ;pin_manager.c: 109: ODCONF = 0x01;
 16032  015128  0E01               	movlw	1
 16033  01512A  6FB2               	movwf	178,b	;volatile
 16034                           
 16035                           ;pin_manager.c: 110: ODCONA = 0x00;
 16036  01512C  0E00               	movlw	0
 16037  01512E  6F90               	movwf	144,b	;volatile
 16038                           
 16039                           ;pin_manager.c: 111: ODCONG = 0x00;
 16040  015130  0E00               	movlw	0
 16041  015132  6FBA               	movwf	186,b	;volatile
 16042                           
 16043                           ;pin_manager.c: 112: ODCONB = 0x00;
 16044  015134  0E00               	movlw	0
 16045  015136  6F98               	movwf	152,b	;volatile
 16046                           
 16047                           ;pin_manager.c: 113: ODCONH = 0x00;
 16048  015138  0E00               	movlw	0
 16049  01513A  6FBF               	movwf	191,b	;volatile
 16050                           
 16051                           ;pin_manager.c: 114: ODCONC = 0x00;
 16052  01513C  0E00               	movlw	0
 16053  01513E  6FA0               	movwf	160,b	;volatile
 16054                           
 16055                           ;pin_manager.c: 115: ODCOND = 0x00;
 16056  015140  0E00               	movlw	0
 16057  015142  6FA5               	movwf	165,b	;volatile
 16058                           
 16059                           ; BSR set to: 14
 16060                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 16061  015144  698F               	setf	143,b	;volatile
 16062                           
 16063                           ; BSR set to: 14
 16064                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 16065  015146  6997               	setf	151,b	;volatile
 16066                           
 16067                           ; BSR set to: 14
 16068                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 16069  015148  699F               	setf	159,b	;volatile
 16070                           
 16071                           ; BSR set to: 14
 16072                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 16073  01514A  69A4               	setf	164,b	;volatile
 16074                           
 16075                           ; BSR set to: 14
 16076                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 16077  01514C  69AC               	setf	172,b	;volatile
 16078                           
 16079                           ; BSR set to: 14
 16080                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 16081  01514E  69B1               	setf	177,b	;volatile
 16082                           
 16083                           ; BSR set to: 14
 16084                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 16085  015150  69B9               	setf	185,b	;volatile
 16086                           
 16087                           ; BSR set to: 14
 16088                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 16089  015152  69BE               	setf	190,b	;volatile
 16090                           
 16091                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 16092  015154  0E0E               	movlw	14
 16093  015156  6F89               	movwf	137,b	;volatile
 16094                           
 16095                           ;pin_manager.c: 137: RX2PPS = 0x36;
 16096  015158  0E36               	movlw	54
 16097  01515A  6F11               	movwf	17,b	;volatile
 16098                           
 16099                           ; BSR set to: 14
 16100  01515C  0012               	return		;funcret
 16101  01515E                     __end_of_PIN_MANAGER_Initialize:
 16102                           	opt stack 0
 16103                           tblptru	equ	0xFF8
 16104                           tblptrh	equ	0xFF7
 16105                           tblptrl	equ	0xFF6
 16106                           tablat	equ	0xFF5
 16107                           prodh	equ	0xFF4
 16108                           prodl	equ	0xFF3
 16109                           intcon	equ	0xFF2
 16110                           postinc0	equ	0xFEE
 16111                           wreg	equ	0xFE8
 16112                           indf1	equ	0xFE7
 16113                           postdec1	equ	0xFE5
 16114                           fsr1h	equ	0xFE2
 16115                           fsr1l	equ	0xFE1
 16116                           indf2	equ	0xFDF
 16117                           postinc2	equ	0xFDE
 16118                           postdec2	equ	0xFDD
 16119                           fsr2h	equ	0xFDA
 16120                           fsr2l	equ	0xFD9
 16121                           status	equ	0xFD8
 16122                           
 16123 ;; *************** function _OSCILLATOR_Initialize *****************
 16124 ;; Defined at:
 16125 ;;		line 64 in file "mcc_generated_files/mcc.c"
 16126 ;; Parameters:    Size  Location     Type
 16127 ;;		None
 16128 ;; Auto vars:     Size  Location     Type
 16129 ;;		None
 16130 ;; Return value:  Size  Location     Type
 16131 ;;                  1    wreg      void 
 16132 ;; Registers used:
 16133 ;;		wreg, status,2
 16134 ;; Tracked objects:
 16135 ;;		On entry : 0/0
 16136 ;;		On exit  : 0/0
 16137 ;;		Unchanged: 0/0
 16138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16143 ;;Total ram usage:        0 bytes
 16144 ;; Hardware stack levels used:    1
 16145 ;; Hardware stack levels required when called:   14
 16146 ;; This function calls:
 16147 ;;		Nothing
 16148 ;; This function is called by:
 16149 ;;		_SYSTEM_Initialize
 16150 ;; This function uses a non-reentrant model
 16151 ;;
 16152                           
 16153                           	psect	text49
 16154  01625C                     __ptext49:
 16155                           	opt stack 0
 16156  01625C                     _OSCILLATOR_Initialize:
 16157                           	opt stack 15
 16158                           
 16159                           ;mcc.c: 67: OSCCON1 = 0x20;
 16160                           
 16161                           ; BSR set to: 14
 16162                           ;incstack = 0
 16163  01625C  0E20               	movlw	32
 16164  01625E  010E               	movlb	14	; () banked
 16165  016260  6F43               	movwf	67,b	;volatile
 16166                           
 16167                           ;mcc.c: 69: OSCCON3 = 0x00;
 16168  016262  0E00               	movlw	0
 16169  016264  6F45               	movwf	69,b	;volatile
 16170                           
 16171                           ;mcc.c: 71: OSCEN = 0x00;
 16172  016266  0E00               	movlw	0
 16173  016268  6F47               	movwf	71,b	;volatile
 16174                           
 16175                           ;mcc.c: 73: OSCFRQ = 0x02;
 16176  01626A  0E02               	movlw	2
 16177  01626C  6F49               	movwf	73,b	;volatile
 16178                           
 16179                           ;mcc.c: 75: OSCTUNE = 0x00;
 16180  01626E  0E00               	movlw	0
 16181  016270  6F48               	movwf	72,b	;volatile
 16182  016272                     
 16183                           ; BSR set to: 14
 16184                           
 16185                           ; BSR set to: 14
 16186                           ;mcc.c: 78: {
 16187  016272  B146               	btfsc	70,0,b	;volatile
 16188  016274  0012               	return	
 16189  016276  D7FD               	goto	l55
 16190  016278                     __end_of_OSCILLATOR_Initialize:
 16191                           	opt stack 0
 16192                           tblptru	equ	0xFF8
 16193                           tblptrh	equ	0xFF7
 16194                           tblptrl	equ	0xFF6
 16195                           tablat	equ	0xFF5
 16196                           prodh	equ	0xFF4
 16197                           prodl	equ	0xFF3
 16198                           intcon	equ	0xFF2
 16199                           postinc0	equ	0xFEE
 16200                           wreg	equ	0xFE8
 16201                           indf1	equ	0xFE7
 16202                           postdec1	equ	0xFE5
 16203                           fsr1h	equ	0xFE2
 16204                           fsr1l	equ	0xFE1
 16205                           indf2	equ	0xFDF
 16206                           postinc2	equ	0xFDE
 16207                           postdec2	equ	0xFDD
 16208                           fsr2h	equ	0xFDA
 16209                           fsr2l	equ	0xFD9
 16210                           status	equ	0xFD8
 16211                           
 16212 ;; *************** function _INTERRUPT_Initialize *****************
 16213 ;; Defined at:
 16214 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16215 ;; Parameters:    Size  Location     Type
 16216 ;;		None
 16217 ;; Auto vars:     Size  Location     Type
 16218 ;;		None
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  1    wreg      void 
 16221 ;; Registers used:
 16222 ;;		None
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16232 ;;Total ram usage:        0 bytes
 16233 ;; Hardware stack levels used:    1
 16234 ;; Hardware stack levels required when called:   14
 16235 ;; This function calls:
 16236 ;;		Nothing
 16237 ;; This function is called by:
 16238 ;;		_SYSTEM_Initialize
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242                           	psect	text50
 16243  0162BA                     __ptext50:
 16244                           	opt stack 0
 16245  0162BA                     _INTERRUPT_Initialize:
 16246                           	opt stack 15
 16247                           
 16248                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 16249                           
 16250                           ; BSR set to: 14
 16251                           ;incstack = 0
 16252  0162BA  8AF2               	bsf	intcon,5,c	;volatile
 16253                           
 16254                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 16255  0162BC  010E               	movlb	14	; () banked
 16256  0162BE  8F22               	bsf	34,7,b	;volatile
 16257                           
 16258                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 16259  0162C0  8924               	bsf	36,4,b	;volatile
 16260                           
 16261                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 16262  0162C2  8120               	bsf	32,0,b	;volatile
 16263                           
 16264                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 16265  0162C4  9B24               	bcf	36,5,b	;volatile
 16266                           
 16267                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 16268  0162C6  9D22               	bcf	34,6,b	;volatile
 16269                           
 16270                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 16271  0162C8  9D24               	bcf	36,6,b	;volatile
 16272                           
 16273                           ; BSR set to: 14
 16274  0162CA  0012               	return		;funcret
 16275  0162CC                     __end_of_INTERRUPT_Initialize:
 16276                           	opt stack 0
 16277                           tblptru	equ	0xFF8
 16278                           tblptrh	equ	0xFF7
 16279                           tblptrl	equ	0xFF6
 16280                           tablat	equ	0xFF5
 16281                           prodh	equ	0xFF4
 16282                           prodl	equ	0xFF3
 16283                           intcon	equ	0xFF2
 16284                           postinc0	equ	0xFEE
 16285                           wreg	equ	0xFE8
 16286                           indf1	equ	0xFE7
 16287                           postdec1	equ	0xFE5
 16288                           fsr1h	equ	0xFE2
 16289                           fsr1l	equ	0xFE1
 16290                           indf2	equ	0xFDF
 16291                           postinc2	equ	0xFDE
 16292                           postdec2	equ	0xFDD
 16293                           fsr2h	equ	0xFDA
 16294                           fsr2l	equ	0xFD9
 16295                           status	equ	0xFD8
 16296                           
 16297 ;; *************** function _FVR_Initialize *****************
 16298 ;; Defined at:
 16299 ;;		line 58 in file "mcc_generated_files/fvr.c"
 16300 ;; Parameters:    Size  Location     Type
 16301 ;;		None
 16302 ;; Auto vars:     Size  Location     Type
 16303 ;;		None
 16304 ;; Return value:  Size  Location     Type
 16305 ;;                  1    wreg      void 
 16306 ;; Registers used:
 16307 ;;		wreg, status,2
 16308 ;; Tracked objects:
 16309 ;;		On entry : 0/0
 16310 ;;		On exit  : 0/0
 16311 ;;		Unchanged: 0/0
 16312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16317 ;;Total ram usage:        0 bytes
 16318 ;; Hardware stack levels used:    1
 16319 ;; Hardware stack levels required when called:   14
 16320 ;; This function calls:
 16321 ;;		Nothing
 16322 ;; This function is called by:
 16323 ;;		_SYSTEM_Initialize
 16324 ;; This function uses a non-reentrant model
 16325 ;;
 16326                           
 16327                           	psect	text51
 16328  016382                     __ptext51:
 16329                           	opt stack 0
 16330  016382                     _FVR_Initialize:
 16331                           	opt stack 15
 16332                           
 16333                           ;fvr.c: 61: FVRCON = 0xA6;
 16334                           
 16335                           ; BSR set to: 14
 16336                           ;incstack = 0
 16337  016382  0EA6               	movlw	166
 16338  016384  010E               	movlb	14	; () banked
 16339  016386  6FC4               	movwf	196,b	;volatile
 16340                           
 16341                           ; BSR set to: 14
 16342  016388  0012               	return		;funcret
 16343  01638A                     __end_of_FVR_Initialize:
 16344                           	opt stack 0
 16345                           tblptru	equ	0xFF8
 16346                           tblptrh	equ	0xFF7
 16347                           tblptrl	equ	0xFF6
 16348                           tablat	equ	0xFF5
 16349                           prodh	equ	0xFF4
 16350                           prodl	equ	0xFF3
 16351                           intcon	equ	0xFF2
 16352                           postinc0	equ	0xFEE
 16353                           wreg	equ	0xFE8
 16354                           indf1	equ	0xFE7
 16355                           postdec1	equ	0xFE5
 16356                           fsr1h	equ	0xFE2
 16357                           fsr1l	equ	0xFE1
 16358                           indf2	equ	0xFDF
 16359                           postinc2	equ	0xFDE
 16360                           postdec2	equ	0xFDD
 16361                           fsr2h	equ	0xFDA
 16362                           fsr2l	equ	0xFD9
 16363                           status	equ	0xFD8
 16364                           
 16365 ;; *************** function _EUSART2_Initialize *****************
 16366 ;; Defined at:
 16367 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 16368 ;; Parameters:    Size  Location     Type
 16369 ;;		None
 16370 ;; Auto vars:     Size  Location     Type
 16371 ;;		None
 16372 ;; Return value:  Size  Location     Type
 16373 ;;                  1    wreg      void 
 16374 ;; Registers used:
 16375 ;;		wreg, status,2, status,0, cstack
 16376 ;; Tracked objects:
 16377 ;;		On entry : 0/0
 16378 ;;		On exit  : 0/0
 16379 ;;		Unchanged: 0/0
 16380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16385 ;;Total ram usage:        0 bytes
 16386 ;; Hardware stack levels used:    1
 16387 ;; Hardware stack levels required when called:   15
 16388 ;; This function calls:
 16389 ;;		_EUSART2_SetRxInterruptHandler
 16390 ;;		_EUSART2_SetTxInterruptHandler
 16391 ;; This function is called by:
 16392 ;;		_SYSTEM_Initialize
 16393 ;; This function uses a non-reentrant model
 16394 ;;
 16395                           
 16396                           	psect	text52
 16397  0158C4                     __ptext52:
 16398                           	opt stack 0
 16399  0158C4                     _EUSART2_Initialize:
 16400                           	opt stack 14
 16401                           
 16402                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 16403                           
 16404                           ; BSR set to: 14
 16405                           ;incstack = 0
 16406  0158C4  010E               	movlb	14	; () banked
 16407  0158C6  9F2C               	bcf	44,7,b	;volatile
 16408                           
 16409                           ; BSR set to: 14
 16410                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 16411  0158C8  0E12               	movlw	low _EUSART2_Receive_ISR
 16412  0158CA  0101               	movlb	1	; () banked
 16413  0158CC  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 16414  0158CE  0E50               	movlw	high _EUSART2_Receive_ISR
 16415  0158D0  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 16416  0158D2  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 16417  0158D4  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 16418  0158D6  ECA1  F0B1         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 16419                           
 16420                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 16421  0158DA  010E               	movlb	14	; () banked
 16422  0158DC  9D2C               	bcf	44,6,b	;volatile
 16423                           
 16424                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 16425  0158DE  0E76               	movlw	low _EUSART2_Transmit_ISR
 16426  0158E0  0101               	movlb	1	; () banked
 16427  0158E2  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 16428  0158E4  0E5F               	movlw	high _EUSART2_Transmit_ISR
 16429  0158E6  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 16430  0158E8  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 16431  0158EA  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 16432  0158EC  EC9A  F0B1         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 16433                           
 16434                           ;eusart2.c: 87: BAUD2CON = 0x08;
 16435  0158F0  0E08               	movlw	8
 16436  0158F2  010E               	movlb	14	; () banked
 16437  0158F4  6FF7               	movwf	247,b	;volatile
 16438                           
 16439                           ; BSR set to: 14
 16440                           ;eusart2.c: 90: RC2STA = 0x90;
 16441  0158F6  0E90               	movlw	144
 16442  0158F8  6FF5               	movwf	245,b	;volatile
 16443                           
 16444                           ; BSR set to: 14
 16445                           ;eusart2.c: 93: TX2STA = 0x24;
 16446  0158FA  0E24               	movlw	36
 16447  0158FC  6FF6               	movwf	246,b	;volatile
 16448                           
 16449                           ; BSR set to: 14
 16450                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 16451  0158FE  0E8A               	movlw	138
 16452  015900  6FF3               	movwf	243,b	;volatile
 16453                           
 16454                           ; BSR set to: 14
 16455                           ;eusart2.c: 99: SP2BRGH = 0x00;
 16456  015902  0E00               	movlw	0
 16457  015904  6FF4               	movwf	244,b	;volatile
 16458                           
 16459                           ; BSR set to: 14
 16460                           ;eusart2.c: 103: eusart2TxHead = 0;
 16461  015906  0E00               	movlw	0
 16462  015908  0101               	movlb	1	; () banked
 16463  01590A  6FDD               	movwf	_eusart2TxHead& (0+255),b	;volatile
 16464                           
 16465                           ; BSR set to: 1
 16466                           ;eusart2.c: 104: eusart2TxTail = 0;
 16467  01590C  0E00               	movlw	0
 16468  01590E  6FDC               	movwf	_eusart2TxTail& (0+255),b	;volatile
 16469                           
 16470                           ; BSR set to: 1
 16471                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 16472  015910  0E80               	movlw	128
 16473  015912  6FDB               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 16474                           
 16475                           ; BSR set to: 1
 16476                           ;eusart2.c: 107: eusart2RxHead = 0;
 16477  015914  0E00               	movlw	0
 16478  015916  0100               	movlb	0	; () banked
 16479  015918  6FE4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 16480                           
 16481                           ; BSR set to: 0
 16482                           ;eusart2.c: 108: eusart2RxTail = 0;
 16483  01591A  0E00               	movlw	0
 16484  01591C  0101               	movlb	1	; () banked
 16485  01591E  6FDA               	movwf	_eusart2RxTail& (0+255),b	;volatile
 16486                           
 16487                           ; BSR set to: 1
 16488                           ;eusart2.c: 109: eusart2RxCount = 0;
 16489  015920  0E00               	movlw	0
 16490  015922  6FD9               	movwf	_eusart2RxCount& (0+255),b	;volatile
 16491                           
 16492                           ; BSR set to: 1
 16493                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 16494  015924  010E               	movlb	14	; () banked
 16495  015926  8F2C               	bsf	44,7,b	;volatile
 16496                           
 16497                           ; BSR set to: 14
 16498  015928  0012               	return		;funcret
 16499  01592A                     __end_of_EUSART2_Initialize:
 16500                           	opt stack 0
 16501                           tblptru	equ	0xFF8
 16502                           tblptrh	equ	0xFF7
 16503                           tblptrl	equ	0xFF6
 16504                           tablat	equ	0xFF5
 16505                           prodh	equ	0xFF4
 16506                           prodl	equ	0xFF3
 16507                           intcon	equ	0xFF2
 16508                           postinc0	equ	0xFEE
 16509                           wreg	equ	0xFE8
 16510                           indf1	equ	0xFE7
 16511                           postdec1	equ	0xFE5
 16512                           fsr1h	equ	0xFE2
 16513                           fsr1l	equ	0xFE1
 16514                           indf2	equ	0xFDF
 16515                           postinc2	equ	0xFDE
 16516                           postdec2	equ	0xFDD
 16517                           fsr2h	equ	0xFDA
 16518                           fsr2l	equ	0xFD9
 16519                           status	equ	0xFD8
 16520                           
 16521 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 16522 ;; Defined at:
 16523 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 16524 ;; Parameters:    Size  Location     Type
 16525 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 16526 ;;		 -> EUSART2_Transmit_ISR(1), 
 16527 ;; Auto vars:     Size  Location     Type
 16528 ;;		None
 16529 ;; Return value:  Size  Location     Type
 16530 ;;                  1    wreg      void 
 16531 ;; Registers used:
 16532 ;;		wreg, status,2, status,0
 16533 ;; Tracked objects:
 16534 ;;		On entry : 0/0
 16535 ;;		On exit  : 0/0
 16536 ;;		Unchanged: 0/0
 16537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16538 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16541 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16542 ;;Total ram usage:        3 bytes
 16543 ;; Hardware stack levels used:    1
 16544 ;; Hardware stack levels required when called:   14
 16545 ;; This function calls:
 16546 ;;		Nothing
 16547 ;; This function is called by:
 16548 ;;		_EUSART2_Initialize
 16549 ;; This function uses a non-reentrant model
 16550 ;;
 16551                           
 16552                           	psect	text53
 16553  016334                     __ptext53:
 16554                           	opt stack 0
 16555  016334                     _EUSART2_SetTxInterruptHandler:
 16556                           	opt stack 14
 16557                           
 16558                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 16559                           
 16560                           ; BSR set to: 14
 16561                           ;incstack = 0
 16562  016334  C117  F1D2         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 16563  016338  C118  F1D3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 16564  01633C  C119  F1D4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 16565  016340  0012               	return		;funcret
 16566  016342                     __end_of_EUSART2_SetTxInterruptHandler:
 16567                           	opt stack 0
 16568                           tblptru	equ	0xFF8
 16569                           tblptrh	equ	0xFF7
 16570                           tblptrl	equ	0xFF6
 16571                           tablat	equ	0xFF5
 16572                           prodh	equ	0xFF4
 16573                           prodl	equ	0xFF3
 16574                           intcon	equ	0xFF2
 16575                           postinc0	equ	0xFEE
 16576                           wreg	equ	0xFE8
 16577                           indf1	equ	0xFE7
 16578                           postdec1	equ	0xFE5
 16579                           fsr1h	equ	0xFE2
 16580                           fsr1l	equ	0xFE1
 16581                           indf2	equ	0xFDF
 16582                           postinc2	equ	0xFDE
 16583                           postdec2	equ	0xFDD
 16584                           fsr2h	equ	0xFDA
 16585                           fsr2l	equ	0xFD9
 16586                           status	equ	0xFD8
 16587                           
 16588 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 16589 ;; Defined at:
 16590 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 16593 ;;		 -> EUSART2_Receive_ISR(1), 
 16594 ;; Auto vars:     Size  Location     Type
 16595 ;;		None
 16596 ;; Return value:  Size  Location     Type
 16597 ;;                  1    wreg      void 
 16598 ;; Registers used:
 16599 ;;		wreg, status,2, status,0
 16600 ;; Tracked objects:
 16601 ;;		On entry : 0/0
 16602 ;;		On exit  : 0/0
 16603 ;;		Unchanged: 0/0
 16604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16605 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16608 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16609 ;;Total ram usage:        3 bytes
 16610 ;; Hardware stack levels used:    1
 16611 ;; Hardware stack levels required when called:   14
 16612 ;; This function calls:
 16613 ;;		Nothing
 16614 ;; This function is called by:
 16615 ;;		_EUSART2_Initialize
 16616 ;; This function uses a non-reentrant model
 16617 ;;
 16618                           
 16619                           	psect	text54
 16620  016342                     __ptext54:
 16621                           	opt stack 0
 16622  016342                     _EUSART2_SetRxInterruptHandler:
 16623                           	opt stack 14
 16624                           
 16625                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 16626                           
 16627                           ;incstack = 0
 16628  016342  C117  F0DA         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 16629  016346  C118  F0DB         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 16630  01634A  C119  F0DC         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 16631  01634E  0012               	return		;funcret
 16632  016350                     __end_of_EUSART2_SetRxInterruptHandler:
 16633                           	opt stack 0
 16634                           tblptru	equ	0xFF8
 16635                           tblptrh	equ	0xFF7
 16636                           tblptrl	equ	0xFF6
 16637                           tablat	equ	0xFF5
 16638                           prodh	equ	0xFF4
 16639                           prodl	equ	0xFF3
 16640                           intcon	equ	0xFF2
 16641                           postinc0	equ	0xFEE
 16642                           wreg	equ	0xFE8
 16643                           indf1	equ	0xFE7
 16644                           postdec1	equ	0xFE5
 16645                           fsr1h	equ	0xFE2
 16646                           fsr1l	equ	0xFE1
 16647                           indf2	equ	0xFDF
 16648                           postinc2	equ	0xFDE
 16649                           postdec2	equ	0xFDD
 16650                           fsr2h	equ	0xFDA
 16651                           fsr2l	equ	0xFD9
 16652                           status	equ	0xFD8
 16653                           
 16654 ;; *************** function _ADCC_Initialize *****************
 16655 ;; Defined at:
 16656 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16657 ;; Parameters:    Size  Location     Type
 16658 ;;		None
 16659 ;; Auto vars:     Size  Location     Type
 16660 ;;		None
 16661 ;; Return value:  Size  Location     Type
 16662 ;;                  1    wreg      void 
 16663 ;; Registers used:
 16664 ;;		wreg, status,2, status,0, cstack
 16665 ;; Tracked objects:
 16666 ;;		On entry : 0/0
 16667 ;;		On exit  : 0/0
 16668 ;;		Unchanged: 0/0
 16669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16674 ;;Total ram usage:        0 bytes
 16675 ;; Hardware stack levels used:    1
 16676 ;; Hardware stack levels required when called:   15
 16677 ;; This function calls:
 16678 ;;		_ADCC_SetADIInterruptHandler
 16679 ;; This function is called by:
 16680 ;;		_SYSTEM_Initialize
 16681 ;; This function uses a non-reentrant model
 16682 ;;
 16683                           
 16684                           	psect	text55
 16685  015990                     __ptext55:
 16686                           	opt stack 0
 16687  015990                     _ADCC_Initialize:
 16688                           	opt stack 14
 16689                           
 16690                           ;adcc.c: 67: ADLTHL = 0x00;
 16691                           
 16692                           ;incstack = 0
 16693  015990  0E00               	movlw	0
 16694  015992  6E6A               	movwf	3946,c	;volatile
 16695                           
 16696                           ;adcc.c: 69: ADLTHH = 0x00;
 16697  015994  0E00               	movlw	0
 16698  015996  6E6B               	movwf	3947,c	;volatile
 16699                           
 16700                           ;adcc.c: 71: ADUTHL = 0x00;
 16701  015998  0E00               	movlw	0
 16702  01599A  6E6C               	movwf	3948,c	;volatile
 16703                           
 16704                           ;adcc.c: 73: ADUTHH = 0x00;
 16705  01599C  0E00               	movlw	0
 16706  01599E  6E6D               	movwf	3949,c	;volatile
 16707                           
 16708                           ;adcc.c: 75: ADSTPTL = 0x00;
 16709  0159A0  0E00               	movlw	0
 16710  0159A2  6E68               	movwf	3944,c	;volatile
 16711                           
 16712                           ;adcc.c: 77: ADSTPTH = 0x00;
 16713  0159A4  0E00               	movlw	0
 16714  0159A6  6E69               	movwf	3945,c	;volatile
 16715                           
 16716                           ;adcc.c: 79: ADRPT = 0x00;
 16717  0159A8  0E00               	movlw	0
 16718  0159AA  6E66               	movwf	3942,c	;volatile
 16719                           
 16720                           ;adcc.c: 81: ADPCH = 0x00;
 16721  0159AC  0E00               	movlw	0
 16722  0159AE  010F               	movlb	15	; () banked
 16723  0159B0  6F5F               	movwf	95,b	;volatile
 16724                           
 16725                           ;adcc.c: 83: ADCAP = 0x00;
 16726  0159B2  0E00               	movlw	0
 16727  0159B4  6F5D               	movwf	93,b	;volatile
 16728                           
 16729                           ;adcc.c: 85: ADCON1 = 0x00;
 16730  0159B6  0E00               	movlw	0
 16731  0159B8  6F59               	movwf	89,b	;volatile
 16732                           
 16733                           ;adcc.c: 87: ADCON2 = 0x04;
 16734  0159BA  0E04               	movlw	4
 16735  0159BC  6F5A               	movwf	90,b	;volatile
 16736                           
 16737                           ;adcc.c: 89: ADCON3 = 0x00;
 16738  0159BE  0E00               	movlw	0
 16739  0159C0  6F5B               	movwf	91,b	;volatile
 16740                           
 16741                           ;adcc.c: 91: ADSTAT = 0x00;
 16742  0159C2  0E00               	movlw	0
 16743  0159C4  6E65               	movwf	3941,c	;volatile
 16744                           
 16745                           ;adcc.c: 93: ADREF = 0x12;
 16746  0159C6  0E12               	movlw	18
 16747  0159C8  6F58               	movwf	88,b	;volatile
 16748                           
 16749                           ;adcc.c: 95: ADACT = 0x00;
 16750  0159CA  0E00               	movlw	0
 16751  0159CC  6F56               	movwf	86,b	;volatile
 16752                           
 16753                           ;adcc.c: 97: ADCLK = 0x00;
 16754  0159CE  0E00               	movlw	0
 16755  0159D0  6F57               	movwf	87,b	;volatile
 16756                           
 16757                           ;adcc.c: 99: ADCON0 = 0x94;
 16758  0159D2  0E94               	movlw	148
 16759  0159D4  6E60               	movwf	3936,c	;volatile
 16760                           
 16761                           ;adcc.c: 101: ADACQ = 0x00;
 16762  0159D6  0E00               	movlw	0
 16763  0159D8  6F5C               	movwf	92,b	;volatile
 16764                           
 16765                           ; BSR set to: 15
 16766                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 16767  0159DA  010E               	movlb	14	; () banked
 16768  0159DC  9134               	bcf	52,0,b	;volatile
 16769                           
 16770                           ; BSR set to: 14
 16771                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 16772  0159DE  812A               	bsf	42,0,b	;volatile
 16773                           
 16774                           ; BSR set to: 14
 16775                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 16776  0159E0  0E96               	movlw	low _ADCC_DefaultInterruptHandler
 16777  0159E2  0101               	movlb	1	; () banked
 16778  0159E4  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 16779  0159E6  0E63               	movlw	high _ADCC_DefaultInterruptHandler
 16780  0159E8  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 16781  0159EA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 16782  0159EC  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 16783  0159EE  ECA8  F0B1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 16784  0159F2  0012               	return		;funcret
 16785  0159F4                     __end_of_ADCC_Initialize:
 16786                           	opt stack 0
 16787                           tblptru	equ	0xFF8
 16788                           tblptrh	equ	0xFF7
 16789                           tblptrl	equ	0xFF6
 16790                           tablat	equ	0xFF5
 16791                           prodh	equ	0xFF4
 16792                           prodl	equ	0xFF3
 16793                           intcon	equ	0xFF2
 16794                           postinc0	equ	0xFEE
 16795                           wreg	equ	0xFE8
 16796                           indf1	equ	0xFE7
 16797                           postdec1	equ	0xFE5
 16798                           fsr1h	equ	0xFE2
 16799                           fsr1l	equ	0xFE1
 16800                           indf2	equ	0xFDF
 16801                           postinc2	equ	0xFDE
 16802                           postdec2	equ	0xFDD
 16803                           fsr2h	equ	0xFDA
 16804                           fsr2l	equ	0xFD9
 16805                           status	equ	0xFD8
 16806                           
 16807 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16808 ;; Defined at:
 16809 ;;		line 306 in file "mcc_generated_files/adcc.c"
 16810 ;; Parameters:    Size  Location     Type
 16811 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16812 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 16813 ;; Auto vars:     Size  Location     Type
 16814 ;;		None
 16815 ;; Return value:  Size  Location     Type
 16816 ;;                  1    wreg      void 
 16817 ;; Registers used:
 16818 ;;		wreg, status,2, status,0
 16819 ;; Tracked objects:
 16820 ;;		On entry : 0/0
 16821 ;;		On exit  : 0/0
 16822 ;;		Unchanged: 0/0
 16823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16824 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16827 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16828 ;;Total ram usage:        3 bytes
 16829 ;; Hardware stack levels used:    1
 16830 ;; Hardware stack levels required when called:   14
 16831 ;; This function calls:
 16832 ;;		Nothing
 16833 ;; This function is called by:
 16834 ;;		_ADCC_Initialize
 16835 ;;		_main
 16836 ;; This function uses a non-reentrant model
 16837 ;;
 16838                           
 16839                           	psect	text56
 16840  016350                     __ptext56:
 16841                           	opt stack 0
 16842  016350                     _ADCC_SetADIInterruptHandler:
 16843                           	opt stack 14
 16844                           
 16845                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 16846                           
 16847                           ;incstack = 0
 16848  016350  C117  F0D7         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 16849  016354  C118  F0D8         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 16850  016358  C119  F0D9         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 16851  01635C  0012               	return		;funcret
 16852  01635E                     __end_of_ADCC_SetADIInterruptHandler:
 16853                           	opt stack 0
 16854                           tblptru	equ	0xFF8
 16855                           tblptrh	equ	0xFF7
 16856                           tblptrl	equ	0xFF6
 16857                           tablat	equ	0xFF5
 16858                           prodh	equ	0xFF4
 16859                           prodl	equ	0xFF3
 16860                           intcon	equ	0xFF2
 16861                           postinc0	equ	0xFEE
 16862                           wreg	equ	0xFE8
 16863                           indf1	equ	0xFE7
 16864                           postdec1	equ	0xFE5
 16865                           fsr1h	equ	0xFE2
 16866                           fsr1l	equ	0xFE1
 16867                           indf2	equ	0xFDF
 16868                           postinc2	equ	0xFDE
 16869                           postdec2	equ	0xFDD
 16870                           fsr2h	equ	0xFDA
 16871                           fsr2l	equ	0xFD9
 16872                           status	equ	0xFD8
 16873                           
 16874 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 16875 ;; Defined at:
 16876 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 16877 ;; Parameters:    Size  Location     Type
 16878 ;;		None
 16879 ;; Auto vars:     Size  Location     Type
 16880 ;;		None
 16881 ;; Return value:  Size  Location     Type
 16882 ;;                  1    wreg      void 
 16883 ;; Registers used:
 16884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16885 ;; Tracked objects:
 16886 ;;		On entry : 0/0
 16887 ;;		On exit  : 0/0
 16888 ;;		Unchanged: 0/0
 16889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16892 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16893 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16894 ;;Total ram usage:       21 bytes
 16895 ;; Hardware stack levels used:    1
 16896 ;; Hardware stack levels required when called:   13
 16897 ;; This function calls:
 16898 ;;		Absolute function
 16899 ;;		_EUSART2_Transmit_ISR
 16900 ;;		_TMR6_ISR
 16901 ;;		_TMR7_ISR
 16902 ;; This function is called by:
 16903 ;;		Interrupt level 1
 16904 ;; This function uses a non-reentrant model
 16905 ;;
 16906                           
 16907                           	psect	intcodelo
 16908  000018                     __pintcodelo:
 16909                           	opt stack 0
 16910  000018                     _INTERRUPT_InterruptManagerLow:
 16911                           	opt stack 9
 16912                           
 16913                           ;incstack = 0
 16914  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16915  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 16916  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 16917  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 16918  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 16919  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 16920  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 16921  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 16922  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 16923  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 16924  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 16925  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 16926  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 16927  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 16928  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 16929  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 16930  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 16931  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 16932  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 16933  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 16934  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 16935  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 16936                           
 16937                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 16938  00006E  010E               	movlb	14	; () banked
 16939  000070  BB2E               	btfsc	46,5,b	;volatile
 16940                           
 16941                           ; BSR set to: 14
 16942  000072  AB38               	btfss	56,5,b	;volatile
 16943  000074  D003               	goto	i1l213
 16944                           
 16945                           ; BSR set to: 14
 16946                           ;interrupt_manager.c: 105: {
 16947                           ;interrupt_manager.c: 106: TMR6_ISR();
 16948  000076  EC7B  F0B0         	call	_TMR6_ISR	;wreg free
 16949                           
 16950                           ;interrupt_manager.c: 107: }
 16951  00007A  D015               	goto	i1l217
 16952  00007C                     i1l213:
 16953                           
 16954                           ; BSR set to: 14
 16955                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 16956  00007C  BD2C               	btfsc	44,6,b	;volatile
 16957                           
 16958                           ; BSR set to: 14
 16959  00007E  AD36               	btfss	54,6,b	;volatile
 16960  000080  D00D               	goto	i1l215
 16961                           
 16962                           ; BSR set to: 14
 16963                           ;interrupt_manager.c: 109: {
 16964                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 16965  000082  D801               	call	i1u1628_28
 16966  000084  D010               	goto	i1l217
 16967  000086                     i1u1628_28:
 16968  000086  0005               	push	
 16969  000088  6EFA               	movwf	pclath,c
 16970  00008A  0101               	movlb	1	; () banked
 16971  00008C  51D2               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 16972  00008E  6EFD               	movwf	tosl,c
 16973  000090  51D3               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 16974  000092  6EFE               	movwf	tosh,c
 16975  000094  51D4               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 16976  000096  6EFF               	movwf	tosu,c
 16977  000098  50FA               	movf	pclath,w,c
 16978  00009A  0012               	return		;indir
 16979  00009C                     i1l215:
 16980                           
 16981                           ; BSR set to: 14
 16982                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 16983  00009C  BD2E               	btfsc	46,6,b	;volatile
 16984                           
 16985                           ; BSR set to: 14
 16986  00009E  AD38               	btfss	56,6,b	;volatile
 16987  0000A0  D002               	goto	i1l217
 16988                           
 16989                           ; BSR set to: 14
 16990                           ;interrupt_manager.c: 113: {
 16991                           ;interrupt_manager.c: 114: TMR7_ISR();
 16992  0000A2  ECD6  F0AF         	call	_TMR7_ISR	;wreg free
 16993  0000A6                     i1l217:
 16994                           
 16995                           ;interrupt_manager.c: 116: else
 16996                           ;interrupt_manager.c: 117: {
 16997  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 16998  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 16999  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 17000  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 17001  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 17002  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 17003  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 17004  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 17005  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 17006  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 17007  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 17008  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 17009  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 17010  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 17011  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 17012  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 17013  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 17014  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 17015  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 17016  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 17017  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 17018  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17019  0000FC  0010               	retfie	
 17020  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 17021                           	opt stack 0
 17022                           tosu	equ	0xFFF
 17023                           tosh	equ	0xFFE
 17024                           tosl	equ	0xFFD
 17025                           pclatu	equ	0xFFB
 17026                           pclath	equ	0xFFA
 17027                           tblptru	equ	0xFF8
 17028                           tblptrh	equ	0xFF7
 17029                           tblptrl	equ	0xFF6
 17030                           tablat	equ	0xFF5
 17031                           prodh	equ	0xFF4
 17032                           prodl	equ	0xFF3
 17033                           intcon	equ	0xFF2
 17034                           postinc0	equ	0xFEE
 17035                           fsr0h	equ	0xFEA
 17036                           fsr0l	equ	0xFE9
 17037                           wreg	equ	0xFE8
 17038                           indf1	equ	0xFE7
 17039                           postdec1	equ	0xFE5
 17040                           fsr1h	equ	0xFE2
 17041                           fsr1l	equ	0xFE1
 17042                           bsr	equ	0xFE0
 17043                           indf2	equ	0xFDF
 17044                           postinc2	equ	0xFDE
 17045                           postdec2	equ	0xFDD
 17046                           fsr2h	equ	0xFDA
 17047                           fsr2l	equ	0xFD9
 17048                           status	equ	0xFD8
 17049                           
 17050 ;; *************** function _TMR7_ISR *****************
 17051 ;; Defined at:
 17052 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 17053 ;; Parameters:    Size  Location     Type
 17054 ;;		None
 17055 ;; Auto vars:     Size  Location     Type
 17056 ;;		None
 17057 ;; Return value:  Size  Location     Type
 17058 ;;                  1    wreg      void 
 17059 ;; Registers used:
 17060 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17061 ;; Tracked objects:
 17062 ;;		On entry : 0/0
 17063 ;;		On exit  : 0/0
 17064 ;;		Unchanged: 0/0
 17065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17070 ;;Total ram usage:        0 bytes
 17071 ;; Hardware stack levels used:    1
 17072 ;; Hardware stack levels required when called:   12
 17073 ;; This function calls:
 17074 ;;		Absolute function
 17075 ;;		_TMR7_DefaultInterruptHandler
 17076 ;;		_TMR7_WriteTimer
 17077 ;;		_acquisitionTimerCallback
 17078 ;; This function is called by:
 17079 ;;		_INTERRUPT_InterruptManagerLow
 17080 ;; This function uses a non-reentrant model
 17081 ;;
 17082                           
 17083                           	psect	text58
 17084  015FAC                     __ptext58:
 17085                           	opt stack 0
 17086  015FAC                     _TMR7_ISR:
 17087                           	opt stack 9
 17088                           
 17089                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 17090                           
 17091                           ;incstack = 0
 17092  015FAC  010E               	movlb	14	; () banked
 17093  015FAE  9D38               	bcf	56,6,b	;volatile
 17094                           
 17095                           ; BSR set to: 14
 17096                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 17097  015FB0  C1D7  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 17098  015FB4  C1D8  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 17099  015FB8  ECB6  F0B0         	call	_TMR7_WriteTimer	;wreg free
 17100                           
 17101                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 17102  015FBC  0101               	movlb	1	; () banked
 17103  015FBE  51CC               	movf	_TMR7_InterruptHandler& (0+255),w,b
 17104  015FC0  11CD               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 17105  015FC2  11CE               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 17106  015FC4  B4D8               	btfsc	status,2,c
 17107  015FC6  0012               	return	
 17108                           
 17109                           ; BSR set to: 1
 17110                           ;tmr7.c: 172: {
 17111                           ;tmr7.c: 173: TMR7_InterruptHandler();
 17112  015FC8  D801               	call	i1u1610_28
 17113  015FCA  0012               	return	
 17114  015FCC                     i1u1610_28:
 17115  015FCC  0005               	push	
 17116  015FCE  6EFA               	movwf	pclath,c
 17117  015FD0  51CC               	movf	_TMR7_InterruptHandler& (0+255),w,b
 17118  015FD2  6EFD               	movwf	tosl,c
 17119  015FD4  51CD               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 17120  015FD6  6EFE               	movwf	tosh,c
 17121  015FD8  51CE               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 17122  015FDA  6EFF               	movwf	tosu,c
 17123  015FDC  50FA               	movf	pclath,w,c
 17124  015FDE  0012               	return		;indir
 17125  015FE0                     __end_of_TMR7_ISR:
 17126                           	opt stack 0
 17127                           tosu	equ	0xFFF
 17128                           tosh	equ	0xFFE
 17129                           tosl	equ	0xFFD
 17130                           pclatu	equ	0xFFB
 17131                           pclath	equ	0xFFA
 17132                           tblptru	equ	0xFF8
 17133                           tblptrh	equ	0xFF7
 17134                           tblptrl	equ	0xFF6
 17135                           tablat	equ	0xFF5
 17136                           prodh	equ	0xFF4
 17137                           prodl	equ	0xFF3
 17138                           intcon	equ	0xFF2
 17139                           postinc0	equ	0xFEE
 17140                           fsr0h	equ	0xFEA
 17141                           fsr0l	equ	0xFE9
 17142                           wreg	equ	0xFE8
 17143                           indf1	equ	0xFE7
 17144                           postdec1	equ	0xFE5
 17145                           fsr1h	equ	0xFE2
 17146                           fsr1l	equ	0xFE1
 17147                           bsr	equ	0xFE0
 17148                           indf2	equ	0xFDF
 17149                           postinc2	equ	0xFDE
 17150                           postdec2	equ	0xFDD
 17151                           fsr2h	equ	0xFDA
 17152                           fsr2l	equ	0xFD9
 17153                           status	equ	0xFD8
 17154                           
 17155 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 17156 ;; Defined at:
 17157 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 17158 ;; Parameters:    Size  Location     Type
 17159 ;;		None
 17160 ;; Auto vars:     Size  Location     Type
 17161 ;;		None
 17162 ;; Return value:  Size  Location     Type
 17163 ;;                  1    wreg      void 
 17164 ;; Registers used:
 17165 ;;		None
 17166 ;; Tracked objects:
 17167 ;;		On entry : 0/0
 17168 ;;		On exit  : 0/0
 17169 ;;		Unchanged: 0/0
 17170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17175 ;;Total ram usage:        0 bytes
 17176 ;; Hardware stack levels used:    1
 17177 ;; Hardware stack levels required when called:   10
 17178 ;; This function calls:
 17179 ;;		Nothing
 17180 ;; This function is called by:
 17181 ;;		_TMR7_Initialize
 17182 ;;		_TMR7_ISR
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186                           	psect	text59
 17187  016390                     __ptext59:
 17188                           	opt stack 0
 17189  016390                     _TMR7_DefaultInterruptHandler:
 17190                           	opt stack 10
 17191                           
 17192                           ;incstack = 0
 17193  016390  0012               	return		;funcret
 17194  016392                     __end_of_TMR7_DefaultInterruptHandler:
 17195                           	opt stack 0
 17196                           tosu	equ	0xFFF
 17197                           tosh	equ	0xFFE
 17198                           tosl	equ	0xFFD
 17199                           pclatu	equ	0xFFB
 17200                           pclath	equ	0xFFA
 17201                           tblptru	equ	0xFF8
 17202                           tblptrh	equ	0xFF7
 17203                           tblptrl	equ	0xFF6
 17204                           tablat	equ	0xFF5
 17205                           prodh	equ	0xFF4
 17206                           prodl	equ	0xFF3
 17207                           intcon	equ	0xFF2
 17208                           postinc0	equ	0xFEE
 17209                           fsr0h	equ	0xFEA
 17210                           fsr0l	equ	0xFE9
 17211                           wreg	equ	0xFE8
 17212                           indf1	equ	0xFE7
 17213                           postdec1	equ	0xFE5
 17214                           fsr1h	equ	0xFE2
 17215                           fsr1l	equ	0xFE1
 17216                           bsr	equ	0xFE0
 17217                           indf2	equ	0xFDF
 17218                           postinc2	equ	0xFDE
 17219                           postdec2	equ	0xFDD
 17220                           fsr2h	equ	0xFDA
 17221                           fsr2l	equ	0xFD9
 17222                           status	equ	0xFD8
 17223                           
 17224 ;; *************** function _acquisitionTimerCallback *****************
 17225 ;; Defined at:
 17226 ;;		line 232 in file "main.c"
 17227 ;; Parameters:    Size  Location     Type
 17228 ;;		None
 17229 ;; Auto vars:     Size  Location     Type
 17230 ;;		None
 17231 ;; Return value:  Size  Location     Type
 17232 ;;                  1    wreg      void 
 17233 ;; Registers used:
 17234 ;;		wreg, status,2, cstack
 17235 ;; Tracked objects:
 17236 ;;		On entry : 0/0
 17237 ;;		On exit  : 0/0
 17238 ;;		Unchanged: 0/0
 17239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17244 ;;Total ram usage:        0 bytes
 17245 ;; Hardware stack levels used:    1
 17246 ;; Hardware stack levels required when called:   11
 17247 ;; This function calls:
 17248 ;;		_ADCC_IsConversionDone
 17249 ;;		_ADCC_StartConversion
 17250 ;; This function is called by:
 17251 ;;		_main
 17252 ;;		_TMR7_ISR
 17253 ;; This function uses a non-reentrant model
 17254 ;;
 17255                           
 17256                           	psect	text60
 17257  0159F4                     __ptext60:
 17258                           	opt stack 0
 17259  0159F4                     _acquisitionTimerCallback:
 17260                           	opt stack 9
 17261                           
 17262                           ;main.c: 235: ADCC_StartConversion(channel_VSS);
 17263                           
 17264                           ;incstack = 0
 17265  0159F4  0E3C               	movlw	60
 17266  0159F6  ECAF  F0B1         	call	_ADCC_StartConversion
 17267  0159FA  ECB6  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 17268  0159FE  0900               	iorlw	0
 17269  015A00  B4D8               	btfsc	status,2,c
 17270  015A02  D7FB               	goto	i1l832
 17271                           
 17272                           ;main.c: 242: ADCC_StartConversion(channel_FVR_buf1);
 17273  015A04  0E3F               	movlw	63
 17274  015A06  ECAF  F0B1         	call	_ADCC_StartConversion
 17275  015A0A  ECB6  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 17276  015A0E  0900               	iorlw	0
 17277  015A10  B4D8               	btfsc	status,2,c
 17278  015A12  D7FB               	goto	i1l835
 17279                           
 17280                           ;main.c: 248: ADCC_StartConversion(POS3P3_ADC);
 17281  015A14  0E22               	movlw	34
 17282  015A16  ECAF  F0B1         	call	_ADCC_StartConversion
 17283  015A1A  ECB6  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 17284  015A1E  0900               	iorlw	0
 17285  015A20  B4D8               	btfsc	status,2,c
 17286  015A22  D7FB               	goto	i1l838
 17287                           
 17288                           ;main.c: 254: ADCC_StartConversion(ISNS_ADC);
 17289  015A24  0E00               	movlw	0
 17290  015A26  ECAF  F0B1         	call	_ADCC_StartConversion
 17291  015A2A  ECB6  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 17292  015A2E  0900               	iorlw	0
 17293  015A30  B4D8               	btfsc	status,2,c
 17294  015A32  D7FB               	goto	i1l841
 17295                           
 17296                           ;main.c: 260: ADCC_StartConversion(POS12_ADC);
 17297  015A34  0E04               	movlw	4
 17298  015A36  ECAF  F0B1         	call	_ADCC_StartConversion
 17299  015A3A  ECB6  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 17300  015A3E  0900               	iorlw	0
 17301  015A40  B4D8               	btfsc	status,2,c
 17302  015A42  D7FB               	goto	i1l844
 17303                           
 17304                           ;main.c: 266: ADCC_StartConversion(channel_Temp);
 17305  015A44  0E3D               	movlw	61
 17306  015A46  ECAF  F0B1         	call	_ADCC_StartConversion
 17307  015A4A  ECB6  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 17308  015A4E  0900               	iorlw	0
 17309  015A50  A4D8               	btfss	status,2,c
 17310  015A52  0012               	return	
 17311  015A54  D7FA               	goto	i1l847
 17312  015A56                     __end_of_acquisitionTimerCallback:
 17313                           	opt stack 0
 17314                           tosu	equ	0xFFF
 17315                           tosh	equ	0xFFE
 17316                           tosl	equ	0xFFD
 17317                           pclatu	equ	0xFFB
 17318                           pclath	equ	0xFFA
 17319                           tblptru	equ	0xFF8
 17320                           tblptrh	equ	0xFF7
 17321                           tblptrl	equ	0xFF6
 17322                           tablat	equ	0xFF5
 17323                           prodh	equ	0xFF4
 17324                           prodl	equ	0xFF3
 17325                           intcon	equ	0xFF2
 17326                           postinc0	equ	0xFEE
 17327                           fsr0h	equ	0xFEA
 17328                           fsr0l	equ	0xFE9
 17329                           wreg	equ	0xFE8
 17330                           indf1	equ	0xFE7
 17331                           postdec1	equ	0xFE5
 17332                           fsr1h	equ	0xFE2
 17333                           fsr1l	equ	0xFE1
 17334                           bsr	equ	0xFE0
 17335                           indf2	equ	0xFDF
 17336                           postinc2	equ	0xFDE
 17337                           postdec2	equ	0xFDD
 17338                           fsr2h	equ	0xFDA
 17339                           fsr2l	equ	0xFD9
 17340                           status	equ	0xFD8
 17341                           
 17342 ;; *************** function _ADCC_StartConversion *****************
 17343 ;; Defined at:
 17344 ;;		line 112 in file "mcc_generated_files/adcc.c"
 17345 ;; Parameters:    Size  Location     Type
 17346 ;;  channel         1    wreg     enum E17310
 17347 ;; Auto vars:     Size  Location     Type
 17348 ;;  channel         1    0[BANK1 ] enum E17310
 17349 ;; Return value:  Size  Location     Type
 17350 ;;                  1    wreg      void 
 17351 ;; Registers used:
 17352 ;;		wreg
 17353 ;; Tracked objects:
 17354 ;;		On entry : 0/0
 17355 ;;		On exit  : 0/0
 17356 ;;		Unchanged: 0/0
 17357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17359 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17361 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17362 ;;Total ram usage:        1 bytes
 17363 ;; Hardware stack levels used:    1
 17364 ;; Hardware stack levels required when called:   10
 17365 ;; This function calls:
 17366 ;;		Nothing
 17367 ;; This function is called by:
 17368 ;;		_acquisitionTimerCallback
 17369 ;; This function uses a non-reentrant model
 17370 ;;
 17371                           
 17372                           	psect	text61
 17373  01635E                     __ptext61:
 17374                           	opt stack 0
 17375  01635E                     _ADCC_StartConversion:
 17376                           	opt stack 9
 17377                           
 17378                           ;incstack = 0
 17379                           ;ADCC_StartConversion@channel stored from wreg
 17380  01635E  0101               	movlb	1	; () banked
 17381  016360  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 17382                           
 17383                           ;adcc.c: 115: ADPCH = channel;
 17384  016362  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 17385                           
 17386                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 17387  016366  8E60               	bsf	3936,7,c	;volatile
 17388                           
 17389                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 17390  016368  8060               	bsf	3936,0,c	;volatile
 17391  01636A  0012               	return		;funcret
 17392  01636C                     __end_of_ADCC_StartConversion:
 17393                           	opt stack 0
 17394                           tosu	equ	0xFFF
 17395                           tosh	equ	0xFFE
 17396                           tosl	equ	0xFFD
 17397                           pclatu	equ	0xFFB
 17398                           pclath	equ	0xFFA
 17399                           tblptru	equ	0xFF8
 17400                           tblptrh	equ	0xFF7
 17401                           tblptrl	equ	0xFF6
 17402                           tablat	equ	0xFF5
 17403                           prodh	equ	0xFF4
 17404                           prodl	equ	0xFF3
 17405                           intcon	equ	0xFF2
 17406                           postinc0	equ	0xFEE
 17407                           fsr0h	equ	0xFEA
 17408                           fsr0l	equ	0xFE9
 17409                           wreg	equ	0xFE8
 17410                           indf1	equ	0xFE7
 17411                           postdec1	equ	0xFE5
 17412                           fsr1h	equ	0xFE2
 17413                           fsr1l	equ	0xFE1
 17414                           bsr	equ	0xFE0
 17415                           indf2	equ	0xFDF
 17416                           postinc2	equ	0xFDE
 17417                           postdec2	equ	0xFDD
 17418                           fsr2h	equ	0xFDA
 17419                           fsr2l	equ	0xFD9
 17420                           status	equ	0xFD8
 17421                           
 17422 ;; *************** function _ADCC_IsConversionDone *****************
 17423 ;; Defined at:
 17424 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17425 ;; Parameters:    Size  Location     Type
 17426 ;;		None
 17427 ;; Auto vars:     Size  Location     Type
 17428 ;;		None
 17429 ;; Return value:  Size  Location     Type
 17430 ;;                  1    wreg      unsigned char 
 17431 ;; Registers used:
 17432 ;;		wreg
 17433 ;; Tracked objects:
 17434 ;;		On entry : 0/0
 17435 ;;		On exit  : 0/0
 17436 ;;		Unchanged: 0/0
 17437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17442 ;;Total ram usage:        0 bytes
 17443 ;; Hardware stack levels used:    1
 17444 ;; Hardware stack levels required when called:   10
 17445 ;; This function calls:
 17446 ;;		Nothing
 17447 ;; This function is called by:
 17448 ;;		_acquisitionTimerCallback
 17449 ;; This function uses a non-reentrant model
 17450 ;;
 17451                           
 17452                           	psect	text62
 17453  01636C                     __ptext62:
 17454                           	opt stack 0
 17455  01636C                     _ADCC_IsConversionDone:
 17456                           	opt stack 9
 17457                           
 17458                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 17459                           
 17460                           ;incstack = 0
 17461  01636C  B060               	btfsc	3936,0,c	;volatile
 17462  01636E  D002               	goto	i1u682_20
 17463  016370  0E01               	movlw	1
 17464  016372  0012               	return	
 17465  016374                     i1u682_20:
 17466  016374  0E00               	movlw	0
 17467  016376  0012               	return	
 17468  016378                     __end_of_ADCC_IsConversionDone:
 17469                           	opt stack 0
 17470                           tosu	equ	0xFFF
 17471                           tosh	equ	0xFFE
 17472                           tosl	equ	0xFFD
 17473                           pclatu	equ	0xFFB
 17474                           pclath	equ	0xFFA
 17475                           tblptru	equ	0xFF8
 17476                           tblptrh	equ	0xFF7
 17477                           tblptrl	equ	0xFF6
 17478                           tablat	equ	0xFF5
 17479                           prodh	equ	0xFF4
 17480                           prodl	equ	0xFF3
 17481                           intcon	equ	0xFF2
 17482                           postinc0	equ	0xFEE
 17483                           fsr0h	equ	0xFEA
 17484                           fsr0l	equ	0xFE9
 17485                           wreg	equ	0xFE8
 17486                           indf1	equ	0xFE7
 17487                           postdec1	equ	0xFE5
 17488                           fsr1h	equ	0xFE2
 17489                           fsr1l	equ	0xFE1
 17490                           bsr	equ	0xFE0
 17491                           indf2	equ	0xFDF
 17492                           postinc2	equ	0xFDE
 17493                           postdec2	equ	0xFDD
 17494                           fsr2h	equ	0xFDA
 17495                           fsr2l	equ	0xFD9
 17496                           status	equ	0xFD8
 17497                           
 17498 ;; *************** function _TMR7_WriteTimer *****************
 17499 ;; Defined at:
 17500 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 17501 ;; Parameters:    Size  Location     Type
 17502 ;;  timerVal        2    0[BANK1 ] unsigned int 
 17503 ;; Auto vars:     Size  Location     Type
 17504 ;;		None
 17505 ;; Return value:  Size  Location     Type
 17506 ;;                  1    wreg      void 
 17507 ;; Registers used:
 17508 ;;		wreg, status,2
 17509 ;; Tracked objects:
 17510 ;;		On entry : 0/0
 17511 ;;		On exit  : 0/0
 17512 ;;		Unchanged: 0/0
 17513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17514 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17517 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17518 ;;Total ram usage:        2 bytes
 17519 ;; Hardware stack levels used:    1
 17520 ;; Hardware stack levels required when called:   10
 17521 ;; This function calls:
 17522 ;;		Nothing
 17523 ;; This function is called by:
 17524 ;;		_TMR7_ISR
 17525 ;;		_TMR7_Reload
 17526 ;; This function uses a non-reentrant model
 17527 ;;
 17528                           
 17529                           	psect	text63
 17530  01616C                     __ptext63:
 17531                           	opt stack 0
 17532  01616C                     _TMR7_WriteTimer:
 17533                           	opt stack 10
 17534                           
 17535                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 17536                           
 17537                           ;incstack = 0
 17538  01616C  010F               	movlb	15	; () banked
 17539  01616E  A530               	btfss	48,2,b	;volatile
 17540  016170  D009               	goto	i1l626
 17541                           
 17542                           ; BSR set to: 15
 17543                           ;tmr7.c: 130: {
 17544                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 17545  016172  9130               	bcf	48,0,b	;volatile
 17546                           
 17547                           ; BSR set to: 15
 17548                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 17549  016174  0101               	movlb	1	; () banked
 17550  016176  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 17551  016178  010F               	movlb	15	; () banked
 17552  01617A  6F2F               	movwf	47,b	;volatile
 17553                           
 17554                           ; BSR set to: 15
 17555                           ;tmr7.c: 136: TMR7L = timerVal;
 17556  01617C  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 17557                           
 17558                           ; BSR set to: 15
 17559                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 17560  016180  8130               	bsf	48,0,b	;volatile
 17561                           
 17562                           ;tmr7.c: 140: }
 17563  016182  0012               	return	
 17564  016184                     i1l626:
 17565                           
 17566                           ; BSR set to: 15
 17567                           ;tmr7.c: 141: else
 17568                           ;tmr7.c: 142: {
 17569                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 17570                           
 17571                           ; BSR set to: 15
 17572  016184  0101               	movlb	1	; () banked
 17573  016186  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 17574  016188  010F               	movlb	15	; () banked
 17575  01618A  6F2F               	movwf	47,b	;volatile
 17576                           
 17577                           ; BSR set to: 15
 17578                           ;tmr7.c: 145: TMR7L = timerVal;
 17579  01618C  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 17580  016190  0012               	return	
 17581  016192                     __end_of_TMR7_WriteTimer:
 17582                           	opt stack 0
 17583                           tosu	equ	0xFFF
 17584                           tosh	equ	0xFFE
 17585                           tosl	equ	0xFFD
 17586                           pclatu	equ	0xFFB
 17587                           pclath	equ	0xFFA
 17588                           tblptru	equ	0xFF8
 17589                           tblptrh	equ	0xFF7
 17590                           tblptrl	equ	0xFF6
 17591                           tablat	equ	0xFF5
 17592                           prodh	equ	0xFF4
 17593                           prodl	equ	0xFF3
 17594                           intcon	equ	0xFF2
 17595                           postinc0	equ	0xFEE
 17596                           fsr0h	equ	0xFEA
 17597                           fsr0l	equ	0xFE9
 17598                           wreg	equ	0xFE8
 17599                           indf1	equ	0xFE7
 17600                           postdec1	equ	0xFE5
 17601                           fsr1h	equ	0xFE2
 17602                           fsr1l	equ	0xFE1
 17603                           bsr	equ	0xFE0
 17604                           indf2	equ	0xFDF
 17605                           postinc2	equ	0xFDE
 17606                           postdec2	equ	0xFDD
 17607                           fsr2h	equ	0xFDA
 17608                           fsr2l	equ	0xFD9
 17609                           status	equ	0xFD8
 17610                           
 17611 ;; *************** function _TMR6_ISR *****************
 17612 ;; Defined at:
 17613 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 17614 ;; Parameters:    Size  Location     Type
 17615 ;;		None
 17616 ;; Auto vars:     Size  Location     Type
 17617 ;;		None
 17618 ;; Return value:  Size  Location     Type
 17619 ;;                  1    wreg      void 
 17620 ;; Registers used:
 17621 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17622 ;; Tracked objects:
 17623 ;;		On entry : 0/0
 17624 ;;		On exit  : 0/0
 17625 ;;		Unchanged: 0/0
 17626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17631 ;;Total ram usage:        0 bytes
 17632 ;; Hardware stack levels used:    1
 17633 ;; Hardware stack levels required when called:   11
 17634 ;; This function calls:
 17635 ;;		Absolute function
 17636 ;;		_TMR6_DefaultInterruptHandler
 17637 ;;		_heartbeatTimerCallback
 17638 ;; This function is called by:
 17639 ;;		_INTERRUPT_InterruptManagerLow
 17640 ;; This function uses a non-reentrant model
 17641 ;;
 17642                           
 17643                           	psect	text64
 17644  0160F6                     __ptext64:
 17645                           	opt stack 0
 17646  0160F6                     _TMR6_ISR:
 17647                           	opt stack 10
 17648                           
 17649                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 17650                           
 17651                           ; BSR set to: 15
 17652                           ;incstack = 0
 17653  0160F6  010E               	movlb	14	; () banked
 17654  0160F8  9B38               	bcf	56,5,b	;volatile
 17655                           
 17656                           ; BSR set to: 14
 17657                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 17658  0160FA  0101               	movlb	1	; () banked
 17659  0160FC  51CF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17660  0160FE  11D0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17661  016100  11D1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17662  016102  B4D8               	btfsc	status,2,c
 17663  016104  0012               	return	
 17664                           
 17665                           ; BSR set to: 1
 17666                           ;tmr6.c: 172: {
 17667                           ;tmr6.c: 173: TMR6_InterruptHandler();
 17668  016106  D801               	call	i1u1608_28
 17669  016108  0012               	return	
 17670  01610A                     i1u1608_28:
 17671  01610A  0005               	push	
 17672  01610C  6EFA               	movwf	pclath,c
 17673  01610E  51CF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17674  016110  6EFD               	movwf	tosl,c
 17675  016112  51D0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17676  016114  6EFE               	movwf	tosh,c
 17677  016116  51D1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17678  016118  6EFF               	movwf	tosu,c
 17679  01611A  50FA               	movf	pclath,w,c
 17680  01611C  0012               	return		;indir
 17681  01611E                     __end_of_TMR6_ISR:
 17682                           	opt stack 0
 17683                           tosu	equ	0xFFF
 17684                           tosh	equ	0xFFE
 17685                           tosl	equ	0xFFD
 17686                           pclatu	equ	0xFFB
 17687                           pclath	equ	0xFFA
 17688                           tblptru	equ	0xFF8
 17689                           tblptrh	equ	0xFF7
 17690                           tblptrl	equ	0xFF6
 17691                           tablat	equ	0xFF5
 17692                           prodh	equ	0xFF4
 17693                           prodl	equ	0xFF3
 17694                           intcon	equ	0xFF2
 17695                           postinc0	equ	0xFEE
 17696                           fsr0h	equ	0xFEA
 17697                           fsr0l	equ	0xFE9
 17698                           wreg	equ	0xFE8
 17699                           indf1	equ	0xFE7
 17700                           postdec1	equ	0xFE5
 17701                           fsr1h	equ	0xFE2
 17702                           fsr1l	equ	0xFE1
 17703                           bsr	equ	0xFE0
 17704                           indf2	equ	0xFDF
 17705                           postinc2	equ	0xFDE
 17706                           postdec2	equ	0xFDD
 17707                           fsr2h	equ	0xFDA
 17708                           fsr2l	equ	0xFD9
 17709                           status	equ	0xFD8
 17710                           
 17711 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17712 ;; Defined at:
 17713 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 17714 ;; Parameters:    Size  Location     Type
 17715 ;;		None
 17716 ;; Auto vars:     Size  Location     Type
 17717 ;;		None
 17718 ;; Return value:  Size  Location     Type
 17719 ;;                  1    wreg      void 
 17720 ;; Registers used:
 17721 ;;		None
 17722 ;; Tracked objects:
 17723 ;;		On entry : 0/0
 17724 ;;		On exit  : 0/0
 17725 ;;		Unchanged: 0/0
 17726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17731 ;;Total ram usage:        0 bytes
 17732 ;; Hardware stack levels used:    1
 17733 ;; Hardware stack levels required when called:   10
 17734 ;; This function calls:
 17735 ;;		Nothing
 17736 ;; This function is called by:
 17737 ;;		_TMR6_Initialize
 17738 ;;		_TMR6_ISR
 17739 ;; This function uses a non-reentrant model
 17740 ;;
 17741                           
 17742                           	psect	text65
 17743  016392                     __ptext65:
 17744                           	opt stack 0
 17745  016392                     _TMR6_DefaultInterruptHandler:
 17746                           	opt stack 10
 17747                           
 17748                           ;incstack = 0
 17749  016392  0012               	return		;funcret
 17750  016394                     __end_of_TMR6_DefaultInterruptHandler:
 17751                           	opt stack 0
 17752                           tosu	equ	0xFFF
 17753                           tosh	equ	0xFFE
 17754                           tosl	equ	0xFFD
 17755                           pclatu	equ	0xFFB
 17756                           pclath	equ	0xFFA
 17757                           tblptru	equ	0xFF8
 17758                           tblptrh	equ	0xFF7
 17759                           tblptrl	equ	0xFF6
 17760                           tablat	equ	0xFF5
 17761                           prodh	equ	0xFF4
 17762                           prodl	equ	0xFF3
 17763                           intcon	equ	0xFF2
 17764                           postinc0	equ	0xFEE
 17765                           fsr0h	equ	0xFEA
 17766                           fsr0l	equ	0xFE9
 17767                           wreg	equ	0xFE8
 17768                           indf1	equ	0xFE7
 17769                           postdec1	equ	0xFE5
 17770                           fsr1h	equ	0xFE2
 17771                           fsr1l	equ	0xFE1
 17772                           bsr	equ	0xFE0
 17773                           indf2	equ	0xFDF
 17774                           postinc2	equ	0xFDE
 17775                           postdec2	equ	0xFDD
 17776                           fsr2h	equ	0xFDA
 17777                           fsr2l	equ	0xFD9
 17778                           status	equ	0xFD8
 17779                           
 17780 ;; *************** function _heartbeatTimerCallback *****************
 17781 ;; Defined at:
 17782 ;;		line 125 in file "main.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;		None
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;		None
 17787 ;; Return value:  Size  Location     Type
 17788 ;;                  1    wreg      void 
 17789 ;; Registers used:
 17790 ;;		wreg, status,2, status,0
 17791 ;; Tracked objects:
 17792 ;;		On entry : 0/0
 17793 ;;		On exit  : 0/0
 17794 ;;		Unchanged: 0/0
 17795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17798 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17799 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17800 ;;Total ram usage:        1 bytes
 17801 ;; Hardware stack levels used:    1
 17802 ;; Hardware stack levels required when called:   10
 17803 ;; This function calls:
 17804 ;;		Nothing
 17805 ;; This function is called by:
 17806 ;;		_main
 17807 ;;		_TMR6_ISR
 17808 ;; This function uses a non-reentrant model
 17809 ;;
 17810                           
 17811                           	psect	text66
 17812  016076                     __ptext66:
 17813                           	opt stack 0
 17814  016076                     _heartbeatTimerCallback:
 17815                           	opt stack 10
 17816                           
 17817                           ;main.c: 128: LATFbits.LATF2 = !LATFbits.LATF2;
 17818                           
 17819                           ;incstack = 0
 17820  016076  B47E               	btfsc	3966,2,c	;volatile
 17821  016078  D004               	goto	i1u738_20
 17822  01607A  0101               	movlb	1	; () banked
 17823  01607C  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17824  01607E  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 17825  016080  D002               	goto	i1u739_28
 17826  016082                     i1u738_20:
 17827  016082  0101               	movlb	1	; () banked
 17828  016084  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17829  016086                     i1u739_28:
 17830  016086  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17831  016088  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17832  01608A  507E               	movf	3966,w,c	;volatile
 17833  01608C  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17834  01608E  0BFB               	andlw	-5
 17835  016090  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17836  016092  6E7E               	movwf	3966,c	;volatile
 17837                           
 17838                           ;main.c: 131: on_time++;
 17839  016094  0E01               	movlw	1
 17840  016096  27B9               	addwf	_on_time& (0+255),f,b	;volatile
 17841  016098  0E00               	movlw	0
 17842  01609A  23BA               	addwfc	(_on_time+1)& (0+255),f,b	;volatile
 17843  01609C  23BB               	addwfc	(_on_time+2)& (0+255),f,b	;volatile
 17844  01609E  23BC               	addwfc	(_on_time+3)& (0+255),f,b	;volatile
 17845  0160A0  0004               	clrwdt		;# 
 17846  0160A2  0012               	return		;funcret
 17847  0160A4                     __end_of_heartbeatTimerCallback:
 17848                           	opt stack 0
 17849                           tosu	equ	0xFFF
 17850                           tosh	equ	0xFFE
 17851                           tosl	equ	0xFFD
 17852                           pclatu	equ	0xFFB
 17853                           pclath	equ	0xFFA
 17854                           tblptru	equ	0xFF8
 17855                           tblptrh	equ	0xFF7
 17856                           tblptrl	equ	0xFF6
 17857                           tablat	equ	0xFF5
 17858                           prodh	equ	0xFF4
 17859                           prodl	equ	0xFF3
 17860                           intcon	equ	0xFF2
 17861                           postinc0	equ	0xFEE
 17862                           fsr0h	equ	0xFEA
 17863                           fsr0l	equ	0xFE9
 17864                           wreg	equ	0xFE8
 17865                           indf1	equ	0xFE7
 17866                           postdec1	equ	0xFE5
 17867                           fsr1h	equ	0xFE2
 17868                           fsr1l	equ	0xFE1
 17869                           bsr	equ	0xFE0
 17870                           indf2	equ	0xFDF
 17871                           postinc2	equ	0xFDE
 17872                           postdec2	equ	0xFDD
 17873                           fsr2h	equ	0xFDA
 17874                           fsr2l	equ	0xFD9
 17875                           status	equ	0xFD8
 17876                           
 17877 ;; *************** function _EUSART2_Transmit_ISR *****************
 17878 ;; Defined at:
 17879 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 17880 ;; Parameters:    Size  Location     Type
 17881 ;;		None
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;		None
 17884 ;; Return value:  Size  Location     Type
 17885 ;;                  1    wreg      void 
 17886 ;; Registers used:
 17887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17888 ;; Tracked objects:
 17889 ;;		On entry : 0/0
 17890 ;;		On exit  : 0/0
 17891 ;;		Unchanged: 0/0
 17892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17897 ;;Total ram usage:        0 bytes
 17898 ;; Hardware stack levels used:    1
 17899 ;; Hardware stack levels required when called:   10
 17900 ;; This function calls:
 17901 ;;		Nothing
 17902 ;; This function is called by:
 17903 ;;		_EUSART2_Initialize
 17904 ;;		_INTERRUPT_InterruptManagerLow
 17905 ;; This function uses a non-reentrant model
 17906 ;;
 17907                           
 17908                           	psect	text67
 17909  015F76                     __ptext67:
 17910                           	opt stack 0
 17911  015F76                     _EUSART2_Transmit_ISR:
 17912                           	opt stack 11
 17913                           
 17914                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 17915                           
 17916                           ;incstack = 0
 17917  015F76  0E80               	movlw	128
 17918  015F78  0101               	movlb	1	; () banked
 17919  015F7A  61DB               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17920  015F7C  D014               	goto	i1l389
 17921                           
 17922                           ; BSR set to: 1
 17923                           ;eusart2.c: 190: {
 17924                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 17925  015F7E  51DC               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 17926  015F80  0D01               	mullw	1
 17927  015F82  0E00               	movlw	low _eusart2TxBuffer
 17928  015F84  24F3               	addwf	prodl,w,c
 17929  015F86  6ED9               	movwf	fsr2l,c
 17930  015F88  0E02               	movlw	high _eusart2TxBuffer
 17931  015F8A  20F4               	addwfc	prodh,w,c
 17932  015F8C  6EDA               	movwf	fsr2h,c
 17933  015F8E  50DF               	movf	indf2,w,c
 17934  015F90  010E               	movlb	14	; () banked
 17935  015F92  6FF2               	movwf	242,b	;volatile
 17936                           
 17937                           ; BSR set to: 14
 17938  015F94  0101               	movlb	1	; () banked
 17939  015F96  2BDC               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 17940                           
 17941                           ; BSR set to: 1
 17942                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 17943  015F98  0E7F               	movlw	127
 17944  015F9A  65DC               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 17945  015F9C  D002               	goto	i1l390
 17946                           
 17947                           ; BSR set to: 1
 17948                           ;eusart2.c: 193: {
 17949                           ;eusart2.c: 194: eusart2TxTail = 0;
 17950  015F9E  0E00               	movlw	0
 17951  015FA0  6FDC               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17952  015FA2                     i1l390:
 17953                           
 17954                           ; BSR set to: 1
 17955                           ;eusart2.c: 195: }
 17956                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 17957                           
 17958                           ; BSR set to: 1
 17959  015FA2  2BDB               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 17960                           
 17961                           ;eusart2.c: 197: }
 17962  015FA4  0012               	return	
 17963  015FA6                     i1l389:
 17964                           
 17965                           ; BSR set to: 1
 17966                           ;eusart2.c: 198: else
 17967                           ;eusart2.c: 199: {
 17968                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 17969  015FA6  010E               	movlb	14	; () banked
 17970  015FA8  9D2C               	bcf	44,6,b	;volatile
 17971  015FAA  0012               	return	
 17972  015FAC                     __end_of_EUSART2_Transmit_ISR:
 17973                           	opt stack 0
 17974                           tosu	equ	0xFFF
 17975                           tosh	equ	0xFFE
 17976                           tosl	equ	0xFFD
 17977                           pclatu	equ	0xFFB
 17978                           pclath	equ	0xFFA
 17979                           tblptru	equ	0xFF8
 17980                           tblptrh	equ	0xFF7
 17981                           tblptrl	equ	0xFF6
 17982                           tablat	equ	0xFF5
 17983                           prodh	equ	0xFF4
 17984                           prodl	equ	0xFF3
 17985                           intcon	equ	0xFF2
 17986                           postinc0	equ	0xFEE
 17987                           fsr0h	equ	0xFEA
 17988                           fsr0l	equ	0xFE9
 17989                           wreg	equ	0xFE8
 17990                           indf1	equ	0xFE7
 17991                           postdec1	equ	0xFE5
 17992                           fsr1h	equ	0xFE2
 17993                           fsr1l	equ	0xFE1
 17994                           bsr	equ	0xFE0
 17995                           indf2	equ	0xFDF
 17996                           postinc2	equ	0xFDE
 17997                           postdec2	equ	0xFDD
 17998                           fsr2h	equ	0xFDA
 17999                           fsr2l	equ	0xFD9
 18000                           status	equ	0xFD8
 18001                           
 18002 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 18003 ;; Defined at:
 18004 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 18005 ;; Parameters:    Size  Location     Type
 18006 ;;		None
 18007 ;; Auto vars:     Size  Location     Type
 18008 ;;		None
 18009 ;; Return value:  Size  Location     Type
 18010 ;;                  1    wreg      void 
 18011 ;; Registers used:
 18012 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18013 ;; Tracked objects:
 18014 ;;		On entry : 0/0
 18015 ;;		On exit  : 0/0
 18016 ;;		Unchanged: 0/0
 18017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18020 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18021 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18022 ;;Total ram usage:       18 bytes
 18023 ;; Hardware stack levels used:    1
 18024 ;; Hardware stack levels required when called:    9
 18025 ;; This function calls:
 18026 ;;		Absolute function
 18027 ;;		_ADCC_ISR
 18028 ;;		_EUSART2_Receive_ISR
 18029 ;;		_TMR5_ISR
 18030 ;; This function is called by:
 18031 ;;		Interrupt level 2
 18032 ;; This function uses a non-reentrant model
 18033 ;;
 18034                           
 18035                           	psect	intcode
 18036  000008                     __pintcode:
 18037                           	opt stack 0
 18038  000008                     _INTERRUPT_InterruptManagerHigh:
 18039                           	opt stack 9
 18040                           
 18041                           ;incstack = 0
 18042  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 18043  00000A  EFF4  F0A6         	goto	int_func
 18044                           tosu	equ	0xFFF
 18045                           tosh	equ	0xFFE
 18046                           tosl	equ	0xFFD
 18047                           pclatu	equ	0xFFB
 18048                           pclath	equ	0xFFA
 18049                           tblptru	equ	0xFF8
 18050                           tblptrh	equ	0xFF7
 18051                           tblptrl	equ	0xFF6
 18052                           tablat	equ	0xFF5
 18053                           prodh	equ	0xFF4
 18054                           prodl	equ	0xFF3
 18055                           intcon	equ	0xFF2
 18056                           postinc0	equ	0xFEE
 18057                           fsr0h	equ	0xFEA
 18058                           fsr0l	equ	0xFE9
 18059                           wreg	equ	0xFE8
 18060                           indf1	equ	0xFE7
 18061                           postdec1	equ	0xFE5
 18062                           fsr1h	equ	0xFE2
 18063                           fsr1l	equ	0xFE1
 18064                           bsr	equ	0xFE0
 18065                           indf2	equ	0xFDF
 18066                           postinc2	equ	0xFDE
 18067                           postdec2	equ	0xFDD
 18068                           fsr2h	equ	0xFDA
 18069                           fsr2l	equ	0xFD9
 18070                           status	equ	0xFD8
 18071                           
 18072                           	psect	intcode_body
 18073  014DE8                     __pintcode_body:
 18074                           	opt stack 9
 18075  014DE8                     int_func:
 18076                           	opt stack 9
 18077  014DE8  CFFA F0B3          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 18078  014DEC  CFFB F0B4          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 18079  014DF0  CFE9 F0B5          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 18080  014DF4  CFEA F0B6          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 18081  014DF8  CFE1 F0B7          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 18082  014DFC  CFE2 F0B8          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 18083  014E00  CFD9 F0B9          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 18084  014E04  CFDA F0BA          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 18085  014E08  CFF3 F0BB          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 18086  014E0C  CFF4 F0BC          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 18087  014E10  CFF6 F0BD          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 18088  014E14  CFF7 F0BE          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 18089  014E18  CFF8 F0BF          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 18090  014E1C  CFF5 F0C0          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 18091  014E20  C05F  F0C1         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 18092  014E24  C060  F0C2         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 18093  014E28  C061  F0C3         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 18094  014E2C  C062  F0C4         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 18095                           
 18096                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 18097  014E30  010E               	movlb	14	; () banked
 18098  014E32  BF2C               	btfsc	44,7,b	;volatile
 18099                           
 18100                           ; BSR set to: 14
 18101  014E34  AF36               	btfss	54,7,b	;volatile
 18102  014E36  D00D               	goto	i2l202
 18103                           
 18104                           ; BSR set to: 14
 18105                           ;interrupt_manager.c: 84: {
 18106                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 18107  014E38  D801               	call	i2u1619_48
 18108  014E3A  D016               	goto	i2l206
 18109  014E3C                     i2u1619_48:
 18110  014E3C  0005               	push	
 18111  014E3E  6EFA               	movwf	pclath,c
 18112  014E40  0100               	movlb	0	; () banked
 18113  014E42  51DA               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 18114  014E44  6EFD               	movwf	tosl,c
 18115  014E46  51DB               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 18116  014E48  6EFE               	movwf	tosh,c
 18117  014E4A  51DC               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 18118  014E4C  6EFF               	movwf	tosu,c
 18119  014E4E  50FA               	movf	pclath,w,c
 18120  014E50  0012               	return		;indir
 18121  014E52                     i2l202:
 18122                           
 18123                           ; BSR set to: 14
 18124                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 18125  014E52  B92E               	btfsc	46,4,b	;volatile
 18126                           
 18127                           ; BSR set to: 14
 18128  014E54  A938               	btfss	56,4,b	;volatile
 18129  014E56  D003               	goto	i2l204
 18130                           
 18131                           ; BSR set to: 14
 18132                           ;interrupt_manager.c: 88: {
 18133                           ;interrupt_manager.c: 89: TMR5_ISR();
 18134  014E58  ECF0  F0AF         	call	_TMR5_ISR	;wreg free
 18135                           
 18136                           ;interrupt_manager.c: 90: }
 18137  014E5C  D005               	goto	i2l206
 18138  014E5E                     i2l204:
 18139                           
 18140                           ; BSR set to: 14
 18141                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 18142  014E5E  B12A               	btfsc	42,0,b	;volatile
 18143                           
 18144                           ; BSR set to: 14
 18145  014E60  A134               	btfss	52,0,b	;volatile
 18146  014E62  D002               	goto	i2l206
 18147                           
 18148                           ; BSR set to: 14
 18149                           ;interrupt_manager.c: 92: {
 18150                           ;interrupt_manager.c: 93: ADCC_ISR();
 18151  014E64  EC8F  F0B0         	call	_ADCC_ISR	;wreg free
 18152  014E68                     i2l206:
 18153                           
 18154                           ;interrupt_manager.c: 95: else
 18155                           ;interrupt_manager.c: 96: {
 18156  014E68  C0C4  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 18157  014E6C  C0C3  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 18158  014E70  C0C2  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 18159  014E74  C0C1  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 18160  014E78  C0C0  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 18161  014E7C  C0BF  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 18162  014E80  C0BE  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 18163  014E84  C0BD  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 18164  014E88  C0BC  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 18165  014E8C  C0BB  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 18166  014E90  C0BA  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 18167  014E94  C0B9  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 18168  014E98  C0B8  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 18169  014E9C  C0B7  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 18170  014EA0  C0B6  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 18171  014EA4  C0B5  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 18172  014EA8  C0B4  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 18173  014EAC  C0B3  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 18174  014EB0  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 18175  014EB2  0011               	retfie		f
 18176  014EB4                     __end_of_INTERRUPT_InterruptManagerHigh:
 18177                           	opt stack 0
 18178                           tosu	equ	0xFFF
 18179                           tosh	equ	0xFFE
 18180                           tosl	equ	0xFFD
 18181                           pclatu	equ	0xFFB
 18182                           pclath	equ	0xFFA
 18183                           tblptru	equ	0xFF8
 18184                           tblptrh	equ	0xFF7
 18185                           tblptrl	equ	0xFF6
 18186                           tablat	equ	0xFF5
 18187                           prodh	equ	0xFF4
 18188                           prodl	equ	0xFF3
 18189                           intcon	equ	0xFF2
 18190                           postinc0	equ	0xFEE
 18191                           fsr0h	equ	0xFEA
 18192                           fsr0l	equ	0xFE9
 18193                           wreg	equ	0xFE8
 18194                           indf1	equ	0xFE7
 18195                           postdec1	equ	0xFE5
 18196                           fsr1h	equ	0xFE2
 18197                           fsr1l	equ	0xFE1
 18198                           bsr	equ	0xFE0
 18199                           indf2	equ	0xFDF
 18200                           postinc2	equ	0xFDE
 18201                           postdec2	equ	0xFDD
 18202                           fsr2h	equ	0xFDA
 18203                           fsr2l	equ	0xFD9
 18204                           status	equ	0xFD8
 18205                           
 18206 ;; *************** function _TMR5_ISR *****************
 18207 ;; Defined at:
 18208 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 18209 ;; Parameters:    Size  Location     Type
 18210 ;;		None
 18211 ;; Auto vars:     Size  Location     Type
 18212 ;;		None
 18213 ;; Return value:  Size  Location     Type
 18214 ;;                  1    wreg      void 
 18215 ;; Registers used:
 18216 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 18217 ;; Tracked objects:
 18218 ;;		On entry : 0/0
 18219 ;;		On exit  : 0/0
 18220 ;;		Unchanged: 0/0
 18221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18226 ;;Total ram usage:        0 bytes
 18227 ;; Hardware stack levels used:    1
 18228 ;; Hardware stack levels required when called:    1
 18229 ;; This function calls:
 18230 ;;		Absolute function
 18231 ;;		_TMR5_DefaultInterruptHandler
 18232 ;;		_TMR5_WriteTimer
 18233 ;; This function is called by:
 18234 ;;		_INTERRUPT_InterruptManagerHigh
 18235 ;; This function uses a non-reentrant model
 18236 ;;
 18237                           
 18238                           	psect	text69
 18239  015FE0                     __ptext69:
 18240                           	opt stack 0
 18241  015FE0                     _TMR5_ISR:
 18242                           	opt stack 16
 18243                           
 18244                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 18245                           
 18246                           ;incstack = 0
 18247  015FE0  010E               	movlb	14	; () banked
 18248  015FE2  9938               	bcf	56,4,b	;volatile
 18249                           
 18250                           ; BSR set to: 14
 18251                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 18252  015FE4  C1D5  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 18253  015FE8  C1D6  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 18254  015FEC  EC3C  F0B1         	call	_TMR5_WriteTimer	;wreg free
 18255                           
 18256                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 18257  015FF0  0101               	movlb	1	; () banked
 18258  015FF2  51C9               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18259  015FF4  11CA               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18260  015FF6  11CB               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18261  015FF8  B4D8               	btfsc	status,2,c
 18262  015FFA  0012               	return	
 18263                           
 18264                           ; BSR set to: 1
 18265                           ;tmr5.c: 172: {
 18266                           ;tmr5.c: 173: TMR5_InterruptHandler();
 18267  015FFC  D801               	call	i2u1604_48
 18268  015FFE  0012               	return	
 18269  016000                     i2u1604_48:
 18270  016000  0005               	push	
 18271  016002  6EFA               	movwf	pclath,c
 18272  016004  51C9               	movf	_TMR5_InterruptHandler& (0+255),w,b
 18273  016006  6EFD               	movwf	tosl,c
 18274  016008  51CA               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 18275  01600A  6EFE               	movwf	tosh,c
 18276  01600C  51CB               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 18277  01600E  6EFF               	movwf	tosu,c
 18278  016010  50FA               	movf	pclath,w,c
 18279  016012  0012               	return		;indir
 18280  016014                     __end_of_TMR5_ISR:
 18281                           	opt stack 0
 18282                           tosu	equ	0xFFF
 18283                           tosh	equ	0xFFE
 18284                           tosl	equ	0xFFD
 18285                           pclatu	equ	0xFFB
 18286                           pclath	equ	0xFFA
 18287                           tblptru	equ	0xFF8
 18288                           tblptrh	equ	0xFF7
 18289                           tblptrl	equ	0xFF6
 18290                           tablat	equ	0xFF5
 18291                           prodh	equ	0xFF4
 18292                           prodl	equ	0xFF3
 18293                           intcon	equ	0xFF2
 18294                           postinc0	equ	0xFEE
 18295                           fsr0h	equ	0xFEA
 18296                           fsr0l	equ	0xFE9
 18297                           wreg	equ	0xFE8
 18298                           indf1	equ	0xFE7
 18299                           postdec1	equ	0xFE5
 18300                           fsr1h	equ	0xFE2
 18301                           fsr1l	equ	0xFE1
 18302                           bsr	equ	0xFE0
 18303                           indf2	equ	0xFDF
 18304                           postinc2	equ	0xFDE
 18305                           postdec2	equ	0xFDD
 18306                           fsr2h	equ	0xFDA
 18307                           fsr2l	equ	0xFD9
 18308                           status	equ	0xFD8
 18309                           
 18310 ;; *************** function _TMR5_WriteTimer *****************
 18311 ;; Defined at:
 18312 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 18313 ;; Parameters:    Size  Location     Type
 18314 ;;  timerVal        2    0[COMRAM] unsigned int 
 18315 ;; Auto vars:     Size  Location     Type
 18316 ;;		None
 18317 ;; Return value:  Size  Location     Type
 18318 ;;                  1    wreg      void 
 18319 ;; Registers used:
 18320 ;;		wreg, status,2
 18321 ;; Tracked objects:
 18322 ;;		On entry : 0/0
 18323 ;;		On exit  : 0/0
 18324 ;;		Unchanged: 0/0
 18325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18326 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18329 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18330 ;;Total ram usage:        2 bytes
 18331 ;; Hardware stack levels used:    1
 18332 ;; This function calls:
 18333 ;;		Nothing
 18334 ;; This function is called by:
 18335 ;;		_TMR5_ISR
 18336 ;;		_TMR5_Reload
 18337 ;; This function uses a non-reentrant model
 18338 ;;
 18339                           
 18340                           	psect	text70
 18341  016278                     __ptext70:
 18342                           	opt stack 0
 18343  016278                     _TMR5_WriteTimer:
 18344                           	opt stack 16
 18345                           
 18346                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 18347                           
 18348                           ;incstack = 0
 18349  016278  A4C3               	btfss	4035,2,c	;volatile
 18350  01627A  D007               	goto	i2l700
 18351                           
 18352                           ;tmr5.c: 130: {
 18353                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 18354  01627C  90C3               	bcf	4035,0,c	;volatile
 18355                           
 18356                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 18357  01627E  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18358  016280  6EC2               	movwf	4034,c	;volatile
 18359                           
 18360                           ;tmr5.c: 136: TMR5L = timerVal;
 18361  016282  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18362                           
 18363                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 18364  016286  80C3               	bsf	4035,0,c	;volatile
 18365                           
 18366                           ;tmr5.c: 140: }
 18367  016288  0012               	return	
 18368  01628A                     i2l700:
 18369                           
 18370                           ;tmr5.c: 141: else
 18371                           ;tmr5.c: 142: {
 18372                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 18373  01628A  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18374  01628C  6EC2               	movwf	4034,c	;volatile
 18375                           
 18376                           ;tmr5.c: 145: TMR5L = timerVal;
 18377  01628E  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18378  016292  0012               	return	
 18379  016294                     __end_of_TMR5_WriteTimer:
 18380                           	opt stack 0
 18381                           tosu	equ	0xFFF
 18382                           tosh	equ	0xFFE
 18383                           tosl	equ	0xFFD
 18384                           pclatu	equ	0xFFB
 18385                           pclath	equ	0xFFA
 18386                           tblptru	equ	0xFF8
 18387                           tblptrh	equ	0xFF7
 18388                           tblptrl	equ	0xFF6
 18389                           tablat	equ	0xFF5
 18390                           prodh	equ	0xFF4
 18391                           prodl	equ	0xFF3
 18392                           intcon	equ	0xFF2
 18393                           postinc0	equ	0xFEE
 18394                           fsr0h	equ	0xFEA
 18395                           fsr0l	equ	0xFE9
 18396                           wreg	equ	0xFE8
 18397                           indf1	equ	0xFE7
 18398                           postdec1	equ	0xFE5
 18399                           fsr1h	equ	0xFE2
 18400                           fsr1l	equ	0xFE1
 18401                           bsr	equ	0xFE0
 18402                           indf2	equ	0xFDF
 18403                           postinc2	equ	0xFDE
 18404                           postdec2	equ	0xFDD
 18405                           fsr2h	equ	0xFDA
 18406                           fsr2l	equ	0xFD9
 18407                           status	equ	0xFD8
 18408                           
 18409 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 18410 ;; Defined at:
 18411 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 18412 ;; Parameters:    Size  Location     Type
 18413 ;;		None
 18414 ;; Auto vars:     Size  Location     Type
 18415 ;;		None
 18416 ;; Return value:  Size  Location     Type
 18417 ;;                  1    wreg      void 
 18418 ;; Registers used:
 18419 ;;		None
 18420 ;; Tracked objects:
 18421 ;;		On entry : 0/0
 18422 ;;		On exit  : 0/0
 18423 ;;		Unchanged: 0/0
 18424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18429 ;;Total ram usage:        0 bytes
 18430 ;; Hardware stack levels used:    1
 18431 ;; This function calls:
 18432 ;;		Nothing
 18433 ;; This function is called by:
 18434 ;;		_TMR5_Initialize
 18435 ;;		_TMR5_ISR
 18436 ;; This function uses a non-reentrant model
 18437 ;;
 18438                           
 18439                           	psect	text71
 18440  016394                     __ptext71:
 18441                           	opt stack 0
 18442  016394                     _TMR5_DefaultInterruptHandler:
 18443                           	opt stack 16
 18444                           
 18445                           ;incstack = 0
 18446  016394  0012               	return		;funcret
 18447  016396                     __end_of_TMR5_DefaultInterruptHandler:
 18448                           	opt stack 0
 18449                           tosu	equ	0xFFF
 18450                           tosh	equ	0xFFE
 18451                           tosl	equ	0xFFD
 18452                           pclatu	equ	0xFFB
 18453                           pclath	equ	0xFFA
 18454                           tblptru	equ	0xFF8
 18455                           tblptrh	equ	0xFF7
 18456                           tblptrl	equ	0xFF6
 18457                           tablat	equ	0xFF5
 18458                           prodh	equ	0xFF4
 18459                           prodl	equ	0xFF3
 18460                           intcon	equ	0xFF2
 18461                           postinc0	equ	0xFEE
 18462                           fsr0h	equ	0xFEA
 18463                           fsr0l	equ	0xFE9
 18464                           wreg	equ	0xFE8
 18465                           indf1	equ	0xFE7
 18466                           postdec1	equ	0xFE5
 18467                           fsr1h	equ	0xFE2
 18468                           fsr1l	equ	0xFE1
 18469                           bsr	equ	0xFE0
 18470                           indf2	equ	0xFDF
 18471                           postinc2	equ	0xFDE
 18472                           postdec2	equ	0xFDD
 18473                           fsr2h	equ	0xFDA
 18474                           fsr2l	equ	0xFD9
 18475                           status	equ	0xFD8
 18476                           
 18477 ;; *************** function _EUSART2_Receive_ISR *****************
 18478 ;; Defined at:
 18479 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 18480 ;; Parameters:    Size  Location     Type
 18481 ;;		None
 18482 ;; Auto vars:     Size  Location     Type
 18483 ;;		None
 18484 ;; Return value:  Size  Location     Type
 18485 ;;                  1    wreg      void 
 18486 ;; Registers used:
 18487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18488 ;; Tracked objects:
 18489 ;;		On entry : 0/0
 18490 ;;		On exit  : 0/0
 18491 ;;		Unchanged: 0/0
 18492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18497 ;;Total ram usage:        0 bytes
 18498 ;; Hardware stack levels used:    1
 18499 ;; Hardware stack levels required when called:    4
 18500 ;; This function calls:
 18501 ;;		i2_printf
 18502 ;; This function is called by:
 18503 ;;		_EUSART2_Initialize
 18504 ;;		_INTERRUPT_InterruptManagerHigh
 18505 ;; This function uses a non-reentrant model
 18506 ;;
 18507                           
 18508                           	psect	text72
 18509  015012                     __ptext72:
 18510                           	opt stack 0
 18511  015012                     _EUSART2_Receive_ISR:
 18512                           	opt stack 13
 18513                           
 18514                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 18515                           
 18516                           ;incstack = 0
 18517  015012  010E               	movlb	14	; () banked
 18518  015014  A3F5               	btfss	245,1,b	;volatile
 18519  015016  D002               	goto	i2l395
 18520                           
 18521                           ; BSR set to: 14
 18522                           ;eusart2.c: 208: {
 18523                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 18524  015018  99F5               	bcf	245,4,b	;volatile
 18525                           
 18526                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 18527  01501A  89F5               	bsf	245,4,b	;volatile
 18528  01501C                     i2l395:
 18529                           
 18530                           ; BSR set to: 14
 18531                           ;eusart2.c: 213: }
 18532                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 18533                           
 18534                           ; BSR set to: 14
 18535  01501C  0100               	movlb	0	; () banked
 18536  01501E  51E4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18537  015020  0D01               	mullw	1
 18538  015022  0E80               	movlw	low _eusart2RxBuffer
 18539  015024  24F3               	addwf	prodl,w,c
 18540  015026  6ED9               	movwf	fsr2l,c
 18541  015028  0E02               	movlw	high _eusart2RxBuffer
 18542  01502A  20F4               	addwfc	prodh,w,c
 18543  01502C  6EDA               	movwf	fsr2h,c
 18544  01502E  CEF1 FFDF          	movff	3825,indf2	;volatile
 18545                           
 18546                           ; BSR set to: 0
 18547  015032  2BE4               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 18548                           
 18549                           ; BSR set to: 0
 18550                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 18551  015034  0E3F               	movlw	63
 18552  015036  65E4               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 18553  015038  D002               	goto	i2l396
 18554                           
 18555                           ; BSR set to: 0
 18556                           ;eusart2.c: 218: {
 18557                           ;eusart2.c: 219: eusart2RxHead = 0;
 18558  01503A  0E00               	movlw	0
 18559  01503C  6FE4               	movwf	_eusart2RxHead& (0+255),b	;volatile
 18560  01503E                     i2l396:
 18561                           
 18562                           ; BSR set to: 0
 18563                           ;eusart2.c: 220: }
 18564                           ;eusart2.c: 221: eusart2RxCount++;
 18565                           
 18566                           ; BSR set to: 0
 18567  01503E  0101               	movlb	1	; () banked
 18568  015040  2BD9               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 18569                           
 18570                           ; BSR set to: 1
 18571                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 18572  015042  0E0A               	movlw	10
 18573  015044  010E               	movlb	14	; () banked
 18574  015046  19F1               	xorwf	241,w,b	;volatile
 18575  015048  B4D8               	btfsc	status,2,c
 18576  01504A  D004               	goto	i2u1614_40
 18577                           
 18578                           ; BSR set to: 14
 18579  01504C  0E0D               	movlw	13
 18580  01504E  19F1               	xorwf	241,w,b	;volatile
 18581  015050  A4D8               	btfss	status,2,c
 18582  015052  D006               	goto	i2l397
 18583  015054                     i2u1614_40:
 18584                           
 18585                           ; BSR set to: 14
 18586                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 18587  015054  0100               	movlb	0	; () banked
 18588  015056  81F1               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;eusart2.c: 232: RC2REG = 0;
 18592  015058  0E00               	movlw	0
 18593  01505A  010E               	movlb	14	; () banked
 18594  01505C  6FF1               	movwf	241,b	;volatile
 18595                           
 18596                           ;eusart2.c: 234: }
 18597  01505E  D002               	goto	i2l400
 18598  015060                     i2l397:
 18599                           
 18600                           ; BSR set to: 14
 18601                           ;eusart2.c: 236: else {
 18602                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 18603  015060  0100               	movlb	0	; () banked
 18604  015062  91F1               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 18605  015064                     i2l400:
 18606                           
 18607                           ;eusart2.c: 240: }
 18608                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 18609                           
 18610                           ; BSR set to: 0
 18611  015064  0E08               	movlw	8
 18612  015066  010E               	movlb	14	; () banked
 18613  015068  19F1               	xorwf	241,w,b	;volatile
 18614  01506A  A4D8               	btfss	status,2,c
 18615  01506C  0012               	return	
 18616                           
 18617                           ; BSR set to: 14
 18618                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 18619  01506E  0100               	movlb	0	; () banked
 18620  015070  51E4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18621  015072  0D01               	mullw	1
 18622  015074  0E80               	movlw	low _eusart2RxBuffer
 18623  015076  24F3               	addwf	prodl,w,c
 18624  015078  6ED9               	movwf	fsr2l,c
 18625  01507A  0E02               	movlw	high _eusart2RxBuffer
 18626  01507C  20F4               	addwfc	prodh,w,c
 18627  01507E  6EDA               	movwf	fsr2h,c
 18628  015080  0E00               	movlw	0
 18629  015082  6EDF               	movwf	indf2,c
 18630                           
 18631                           ; BSR set to: 0
 18632                           ;eusart2.c: 246: eusart2RxHead--;
 18633  015084  07E4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18634                           
 18635                           ; BSR set to: 0
 18636                           ;eusart2.c: 249: printf("\033[K");
 18637  015086  0EC1               	movlw	low STR_1
 18638  015088  6F66               	movwf	i2printf@f& (0+255),b
 18639  01508A  0EFF               	movlw	high STR_1
 18640  01508C  6F67               	movwf	(i2printf@f+1)& (0+255),b
 18641  01508E  EC17  F085         	call	i2_printf	;wreg free
 18642                           
 18643                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 18644  015092  0101               	movlb	1	; () banked
 18645  015094  51DA               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 18646  015096  0100               	movlb	0	; () banked
 18647  015098  19E4               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 18648  01509A  B4D8               	btfsc	status,2,c
 18649  01509C  D00B               	goto	i2l402
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 18653  01509E  51E4               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18654  0150A0  0D01               	mullw	1
 18655  0150A2  0E80               	movlw	low _eusart2RxBuffer
 18656  0150A4  24F3               	addwf	prodl,w,c
 18657  0150A6  6ED9               	movwf	fsr2l,c
 18658  0150A8  0E02               	movlw	high _eusart2RxBuffer
 18659  0150AA  20F4               	addwfc	prodh,w,c
 18660  0150AC  6EDA               	movwf	fsr2h,c
 18661  0150AE  0E00               	movlw	0
 18662  0150B0  6EDF               	movwf	indf2,c
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;eusart2.c: 254: eusart2RxHead--;
 18666  0150B2  07E4               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18667  0150B4                     i2l402:
 18668                           
 18669                           ; BSR set to: 0
 18670                           ;eusart2.c: 256: }
 18671                           ;eusart2.c: 258: RC2REG = 0;
 18672                           
 18673                           ; BSR set to: 0
 18674  0150B4  0E00               	movlw	0
 18675  0150B6  010E               	movlb	14	; () banked
 18676  0150B8  6FF1               	movwf	241,b	;volatile
 18677  0150BA  0012               	return	
 18678  0150BC                     __end_of_EUSART2_Receive_ISR:
 18679                           	opt stack 0
 18680                           tosu	equ	0xFFF
 18681                           tosh	equ	0xFFE
 18682                           tosl	equ	0xFFD
 18683                           pclatu	equ	0xFFB
 18684                           pclath	equ	0xFFA
 18685                           tblptru	equ	0xFF8
 18686                           tblptrh	equ	0xFF7
 18687                           tblptrl	equ	0xFF6
 18688                           tablat	equ	0xFF5
 18689                           prodh	equ	0xFF4
 18690                           prodl	equ	0xFF3
 18691                           intcon	equ	0xFF2
 18692                           postinc0	equ	0xFEE
 18693                           fsr0h	equ	0xFEA
 18694                           fsr0l	equ	0xFE9
 18695                           wreg	equ	0xFE8
 18696                           indf1	equ	0xFE7
 18697                           postdec1	equ	0xFE5
 18698                           fsr1h	equ	0xFE2
 18699                           fsr1l	equ	0xFE1
 18700                           bsr	equ	0xFE0
 18701                           indf2	equ	0xFDF
 18702                           postinc2	equ	0xFDE
 18703                           postdec2	equ	0xFDD
 18704                           fsr2h	equ	0xFDA
 18705                           fsr2l	equ	0xFD9
 18706                           status	equ	0xFD8
 18707                           
 18708 ;; *************** function i2_printf *****************
 18709 ;; Defined at:
 18710 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18711 ;; Parameters:    Size  Location     Type
 18712 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 18713 ;;		 -> STR_90(30), STR_89(23), STR_88(40), STR_87(30), 
 18714 ;;		 -> STR_86(33), STR_85(1220), STR_83(58), STR_81(71), 
 18715 ;;		 -> STR_80(63), STR_79(37), STR_78(46), STR_77(102), 
 18716 ;;		 -> STR_76(86), STR_74(25), STR_72(42), STR_70(41), 
 18717 ;;		 -> STR_68(40), STR_66(34), STR_64(34), STR_62(32), 
 18718 ;;		 -> STR_60(37), STR_58(56), STR_56(34), STR_54(34), 
 18719 ;;		 -> STR_52(35), STR_50(47), STR_49(17), STR_46(4), 
 18720 ;;		 -> STR_45(5), STR_43(4), STR_42(5), STR_40(3), 
 18721 ;;		 -> terminal_textAttributes@output_buff(15), STR_10(4), STR_9(4), STR_8(4), 
 18722 ;;		 -> STR_7(4), STR_6(5), STR_5(3), STR_4(372), 
 18723 ;;		 -> STR_3(4), STR_2(5), STR_1(4), 
 18724 ;; Auto vars:     Size  Location     Type
 18725 ;;  printf          4   35[BANK0 ] unsigned long 
 18726 ;;  printf          4   28[BANK0 ] struct .
 18727 ;;  printf          3   32[BANK0 ] struct .
 18728 ;;  printf          2   39[BANK0 ] int 
 18729 ;;  printf          2   26[BANK0 ] int 
 18730 ;;  printf          2   24[BANK0 ] unsigned short 
 18731 ;;  printf          2   22[BANK0 ] PTR void [1]
 18732 ;;		 -> ?i2_printf(2), ?_printf(2), 
 18733 ;;  printf          2   20[BANK0 ] unsigned int 
 18734 ;;  printf          2   18[BANK0 ] PTR const unsigned char 
 18735 ;;		 -> printf@c(1), 
 18736 ;;  printf          2    0        int 
 18737 ;;  printf          1   41[BANK0 ] char 
 18738 ;;  printf          1   17[BANK0 ] unsigned char 
 18739 ;;  printf          1    0        unsigned char 
 18740 ;; Return value:  Size  Location     Type
 18741 ;;                  2    6[BANK0 ] int 
 18742 ;; Registers used:
 18743 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18744 ;; Tracked objects:
 18745 ;;		On entry : 0/0
 18746 ;;		On exit  : 0/0
 18747 ;;		Unchanged: 0/0
 18748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18750 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18751 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18752 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18753 ;;Total ram usage:       36 bytes
 18754 ;; Hardware stack levels used:    1
 18755 ;; Hardware stack levels required when called:    3
 18756 ;; This function calls:
 18757 ;;		i2___awdiv
 18758 ;;		i2___ftadd
 18759 ;;		i2___ftge
 18760 ;;		i2___ftmul
 18761 ;;		i2___ftneg
 18762 ;;		i2___ftsub
 18763 ;;		i2___fttol
 18764 ;;		i2___lldiv
 18765 ;;		i2___llmod
 18766 ;;		i2___lltoft
 18767 ;;		i2___wmul
 18768 ;;		i2__div_to_l_
 18769 ;;		i2__tdiv_to_l_
 18770 ;;		i2_fround
 18771 ;;		i2_isdigit
 18772 ;;		i2_putch
 18773 ;;		i2_scale
 18774 ;; This function is called by:
 18775 ;;		_EUSART2_Receive_ISR
 18776 ;; This function uses a non-reentrant model
 18777 ;;
 18778                           
 18779                           	psect	text73
 18780  010A2E                     __ptext73:
 18781                           	opt stack 0
 18782  010A2E                     i2_printf:
 18783                           	opt stack 13
 18784                           
 18785                           ;doprnt.c: 466: va_list ap;
 18786                           ;doprnt.c: 499: signed char c;
 18787                           ;doprnt.c: 501: int width;
 18788                           ;doprnt.c: 504: int prec;
 18789                           ;doprnt.c: 508: unsigned short flag;
 18790                           ;doprnt.c: 515: char d;
 18791                           ;doprnt.c: 516: double fval;
 18792                           ;doprnt.c: 517: int exp;
 18793                           ;doprnt.c: 523: union {
 18794                           ;doprnt.c: 524: unsigned long vd;
 18795                           ;doprnt.c: 525: double integ;
 18796                           ;doprnt.c: 526: } tmpval;
 18797                           ;doprnt.c: 528: unsigned long val;
 18798                           ;doprnt.c: 529: unsigned len;
 18799                           ;doprnt.c: 530: const char * cp;
 18800                           ;doprnt.c: 533: *ap = __va_start();
 18801                           
 18802                           ; BSR set to: 14
 18803                           ;incstack = 0
 18804  010A2E  0E68               	movlw	low (?i2_printf+2)
 18805  010A30  0100               	movlb	0	; () banked
 18806  010A32  6F76               	movwf	i2printf@ap& (0+255),b
 18807  010A34  0E00               	movlw	high (?i2_printf+2)
 18808  010A36  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 18809                           
 18810                           ;doprnt.c: 536: while(c = *f++) {
 18811  010A38  EF0C  F08A         	goto	i2u1600_40
 18812  010A3C                     
 18813                           ; BSR set to: 0
 18814                           ;doprnt.c: 538: if(c != '%')
 18815                           
 18816                           ; BSR set to: 0
 18817  010A3C  0E25               	movlw	37
 18818  010A3E  1989               	xorwf	i2printf@c& (0+255),w,b
 18819  010A40  B4D8               	btfsc	status,2,c
 18820  010A42  D005               	goto	i2l1092
 18821                           
 18822                           ; BSR set to: 0
 18823                           ;doprnt.c: 540: {
 18824                           ;doprnt.c: 541: (putch(c) );
 18825  010A44  5189               	movf	i2printf@c& (0+255),w,b
 18826  010A46  ECBC  F0B1         	call	i2_putch
 18827                           
 18828                           ;doprnt.c: 542: continue;
 18829  010A4A  EF0C  F08A         	goto	i2u1600_40
 18830  010A4E                     i2l1092:
 18831                           
 18832                           ;doprnt.c: 543: }
 18833                           ;doprnt.c: 548: flag = 0;
 18834  010A4E  0E00               	movlw	0
 18835  010A50  0100               	movlb	0	; () banked
 18836  010A52  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 18837  010A54  0E00               	movlw	0
 18838  010A56  6F78               	movwf	i2printf@flag& (0+255),b
 18839                           
 18840                           ; BSR set to: 0
 18841                           ;doprnt.c: 611: if(*f == '.') {
 18842  010A58  C066  FFF6         	movff	i2printf@f,tblptrl
 18843  010A5C  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18844  010A60  0E00               	movlw	low (__mediumconst shr (0+16))
 18845  010A62  6EF8               	movwf	tblptru,c
 18846  010A64  0E0D               	movlw	(high __ramtop+-1)
 18847  010A66  64F7               	cpfsgt	tblptrh,c
 18848  010A68  D003               	bra	i2u1554_47
 18849  010A6A  0008               	tblrd		*
 18850  010A6C  50F5               	movf	tablat,w,c
 18851  010A6E  D005               	bra	i2u1554_40
 18852  010A70                     i2u1554_47:
 18853  010A70  CFF6 FFE1          	movff	tblptrl,fsr1l
 18854  010A74  CFF7 FFE2          	movff	tblptrh,fsr1h
 18855  010A78  50E7               	movf	indf1,w,c
 18856  010A7A                     i2u1554_40:
 18857  010A7A  0A2E               	xorlw	46
 18858  010A7C  A4D8               	btfss	status,2,c
 18859  010A7E  D048               	goto	i2l1093
 18860                           
 18861                           ;doprnt.c: 612: flag |= 0x4000;
 18862  010A80  0100               	movlb	0	; () banked
 18863  010A82  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 18864                           
 18865                           ;doprnt.c: 613: f++;
 18866  010A84  4B66               	infsnz	i2printf@f& (0+255),f,b
 18867  010A86  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18868                           
 18869                           ; BSR set to: 0
 18870                           ;doprnt.c: 620: {
 18871                           ;doprnt.c: 621: prec = 0;
 18872  010A88  0E00               	movlw	0
 18873  010A8A  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 18874  010A8C  0E00               	movlw	0
 18875  010A8E  6F87               	movwf	i2printf@prec& (0+255),b
 18876                           
 18877                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 18878  010A90  D029               	goto	i2l1094
 18879  010A92                     
 18880                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 18881                           
 18882                           ; BSR set to: 0
 18883  010A92  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 18884  010A96  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 18885  010A9A  0E00               	movlw	0
 18886  010A9C  6E12               	movwf	i2___wmul@multiplicand+1,c
 18887  010A9E  0E0A               	movlw	10
 18888  010AA0  6E11               	movwf	i2___wmul@multiplicand,c
 18889  010AA2  ECC9  F0B0         	call	i2___wmul	;wreg free
 18890  010AA6  C066  FFF6         	movff	i2printf@f,tblptrl
 18891  010AAA  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18892  010AAE  0E00               	movlw	low (__mediumconst shr (0+16))
 18893  010AB0  6EF8               	movwf	tblptru,c
 18894  010AB2  0E0D               	movlw	(high __ramtop+-1)
 18895  010AB4  64F7               	cpfsgt	tblptrh,c
 18896  010AB6  D003               	bra	i2u1556_47
 18897  010AB8  0008               	tblrd		*
 18898  010ABA  50F5               	movf	tablat,w,c
 18899  010ABC  D005               	bra	i2u1556_40
 18900  010ABE                     i2u1556_47:
 18901  010ABE  CFF6 FFE1          	movff	tblptrl,fsr1l
 18902  010AC2  CFF7 FFE2          	movff	tblptrh,fsr1h
 18903  010AC6  50E7               	movf	indf1,w,c
 18904  010AC8                     i2u1556_40:
 18905  010AC8  0100               	movlb	0	; () banked
 18906  010ACA  6F68               	movwf	??i2_printf& (0+255),b
 18907  010ACC  5168               	movf	??i2_printf& (0+255),w,b
 18908  010ACE  260F               	addwf	?i2___wmul,f,c
 18909  010AD0  0E00               	movlw	0
 18910  010AD2  2210               	addwfc	?i2___wmul+1,f,c
 18911  010AD4  0ED0               	movlw	208
 18912  010AD6  240F               	addwf	?i2___wmul,w,c
 18913  010AD8  6F87               	movwf	i2printf@prec& (0+255),b
 18914  010ADA  0EFF               	movlw	255
 18915  010ADC  2010               	addwfc	?i2___wmul+1,w,c
 18916  010ADE  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 18917                           
 18918                           ; BSR set to: 0
 18919  010AE0  4B66               	infsnz	i2printf@f& (0+255),f,b
 18920  010AE2  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18921  010AE4                     i2l1094:
 18922                           
 18923                           ; BSR set to: 0
 18924                           
 18925                           ; BSR set to: 0
 18926  010AE4  C066  FFF6         	movff	i2printf@f,tblptrl
 18927  010AE8  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18928  010AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 18929  010AEE  6EF8               	movwf	tblptru,c
 18930  010AF0  0E0D               	movlw	(high __ramtop+-1)
 18931  010AF2  64F7               	cpfsgt	tblptrh,c
 18932  010AF4  D003               	bra	i2u1557_47
 18933  010AF6  0008               	tblrd		*
 18934  010AF8  50F5               	movf	tablat,w,c
 18935  010AFA  D005               	bra	i2u1557_40
 18936  010AFC                     i2u1557_47:
 18937  010AFC  CFF6 FFE1          	movff	tblptrl,fsr1l
 18938  010B00  CFF7 FFE2          	movff	tblptrh,fsr1h
 18939  010B04  50E7               	movf	indf1,w,c
 18940  010B06                     i2u1557_40:
 18941  010B06  EC11  F0B1         	call	i2_isdigit
 18942  010B0A  A0D8               	btfss	status,0,c
 18943  010B0C  D03B               	goto	i2l1098
 18944  010B0E  D7C1               	goto	i2l1095
 18945  010B10                     i2l1093:
 18946                           
 18947                           ;doprnt.c: 626: prec = 0;
 18948  010B10  0E00               	movlw	0
 18949  010B12  0100               	movlb	0	; () banked
 18950  010B14  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 18951  010B16  0E00               	movlw	0
 18952  010B18  6F87               	movwf	i2printf@prec& (0+255),b
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;doprnt.c: 628: flag |= 0x1000;
 18956  010B1A  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 18957                           
 18958                           ; BSR set to: 0
 18959                           ;doprnt.c: 630: }
 18960                           ;doprnt.c: 635: switch(c = *f++) {
 18961  010B1C  D033               	goto	i2l1098
 18962  010B1E                     
 18963                           ; BSR set to: 0
 18964                           ;doprnt.c: 663: flag |= 0x400;
 18965                           
 18966                           ; BSR set to: 0
 18967  010B1E  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 18968                           
 18969                           ; BSR set to: 0
 18970                           ;doprnt.c: 698: case 'i':
 18971                           ;doprnt.c: 699: break;
 18972                           
 18973                           ; BSR set to: 0
 18974                           
 18975                           ;doprnt.c: 697: case 'd':
 18976                           
 18977                           ;doprnt.c: 664: break;
 18978  010B20  D062               	goto	i2l1102
 18979  010B22                     
 18980                           ; BSR set to: 0
 18981                           ;doprnt.c: 718: case 'x':
 18982                           ;doprnt.c: 721: flag |= 0x80;
 18983                           
 18984                           ; BSR set to: 0
 18985                           
 18986                           ; BSR set to: 0
 18987  010B22  8F78               	bsf	i2printf@flag& (0+255),7,b
 18988                           
 18989                           ;doprnt.c: 723: break;
 18990  010B24  D060               	goto	i2l1102
 18991  010B26                     
 18992                           ; BSR set to: 0
 18993                           ;doprnt.c: 753: if(prec && prec < len)
 18994                           
 18995                           ; BSR set to: 0
 18996  010B26  5187               	movf	i2printf@prec& (0+255),w,b
 18997  010B28  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 18998  010B2A  B4D8               	btfsc	status,2,c
 18999  010B2C  D015               	goto	i2l1109
 19000                           
 19001                           ; BSR set to: 0
 19002  010B2E  5174               	movf	i2printf@len& (0+255),w,b
 19003  010B30  5D87               	subwf	i2printf@prec& (0+255),w,b
 19004  010B32  5175               	movf	(i2printf@len+1)& (0+255),w,b
 19005  010B34  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 19006  010B36  B0D8               	btfsc	status,0,c
 19007  010B38  D00F               	goto	i2l1109
 19008                           
 19009                           ; BSR set to: 0
 19010                           ;doprnt.c: 754: len = prec;
 19011  010B3A  C087  F074         	movff	i2printf@prec,i2printf@len
 19012  010B3E  C088  F075         	movff	i2printf@prec+1,i2printf@len+1
 19013                           
 19014                           ; BSR set to: 0
 19015                           ;doprnt.c: 767: while(len--)
 19016  010B42  D00A               	goto	i2l1109
 19017  010B44                     i2l12391:
 19018                           
 19019                           ; BSR set to: 0
 19020                           ;doprnt.c: 768: (putch(*cp++) );
 19021  010B44  C072  FFD9         	movff	i2printf@cp,fsr2l
 19022  010B48  C073  FFDA         	movff	i2printf@cp+1,fsr2h
 19023  010B4C  50DF               	movf	indf2,w,c
 19024  010B4E  ECBC  F0B1         	call	i2_putch
 19025  010B52  0100               	movlb	0	; () banked
 19026  010B54  4B72               	infsnz	i2printf@cp& (0+255),f,b
 19027  010B56  2B73               	incf	(i2printf@cp+1)& (0+255),f,b
 19028  010B58                     i2l1109:
 19029                           
 19030                           ; BSR set to: 0
 19031                           
 19032                           ; BSR set to: 0
 19033  010B58  0774               	decf	i2printf@len& (0+255),f,b
 19034  010B5A  A0D8               	btfss	status,0,c
 19035  010B5C  0775               	decf	(i2printf@len+1)& (0+255),f,b
 19036  010B5E  2974               	incf	i2printf@len& (0+255),w,b
 19037  010B60  E1F1               	bnz	i2l12391
 19038  010B62  2975               	incf	(i2printf@len+1)& (0+255),w,b
 19039  010B64  B4D8               	btfsc	status,2,c
 19040  010B66  EF0C  F08A         	goto	i2u1600_40
 19041  010B6A  D7EC               	goto	i2l1110
 19042  010B6C                     
 19043                           ; BSR set to: 0
 19044                           ;doprnt.c: 805: cp = (char *)&c;
 19045                           
 19046                           ; BSR set to: 0
 19047  010B6C  0E89               	movlw	low i2printf@c
 19048  010B6E  6F72               	movwf	i2printf@cp& (0+255),b
 19049  010B70  0E00               	movlw	high i2printf@c
 19050  010B72  6F73               	movwf	(i2printf@cp+1)& (0+255),b
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;doprnt.c: 806: len = 1;
 19054  010B74  0E00               	movlw	0
 19055  010B76  6F75               	movwf	(i2printf@len+1)& (0+255),b
 19056  010B78  0E01               	movlw	1
 19057  010B7A  6F74               	movwf	i2printf@len& (0+255),b
 19058                           
 19059                           ;doprnt.c: 807: goto dostring;
 19060  010B7C  D7D4               	goto	i2l1107
 19061  010B7E                     
 19062                           ; BSR set to: 0
 19063                           ;doprnt.c: 818: flag |= 0xC0;
 19064                           
 19065                           ; BSR set to: 0
 19066  010B7E  0EC0               	movlw	192
 19067  010B80  1378               	iorwf	i2printf@flag& (0+255),f,b
 19068                           
 19069                           ; BSR set to: 0
 19070                           ;doprnt.c: 822: }
 19071                           
 19072                           ;doprnt.c: 819: break;
 19073  010B82  D031               	goto	i2l1102
 19074  010B84                     i2l1098:
 19075                           
 19076                           ; BSR set to: 0
 19077  010B84  0100               	movlb	0	; () banked
 19078  010B86  5166               	movf	i2printf@f& (0+255),w,b
 19079  010B88  6F68               	movwf	??i2_printf& (0+255),b
 19080  010B8A  5167               	movf	(i2printf@f+1)& (0+255),w,b
 19081  010B8C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19082  010B8E  4B66               	infsnz	i2printf@f& (0+255),f,b
 19083  010B90  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19084  010B92  C068  FFF6         	movff	??i2_printf,tblptrl
 19085  010B96  C069  FFF7         	movff	??i2_printf+1,tblptrh
 19086  010B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 19087  010B9C  6EF8               	movwf	tblptru,c
 19088  010B9E  0E0D               	movlw	(high __ramtop+-1)
 19089  010BA0  64F7               	cpfsgt	tblptrh,c
 19090  010BA2  D003               	bra	i2u1562_47
 19091  010BA4  0008               	tblrd		*
 19092  010BA6  50F5               	movf	tablat,w,c
 19093  010BA8  D005               	bra	i2u1562_40
 19094  010BAA                     i2u1562_47:
 19095  010BAA  CFF6 FFE1          	movff	tblptrl,fsr1l
 19096  010BAE  CFF7 FFE2          	movff	tblptrh,fsr1h
 19097  010BB2  50E7               	movf	indf1,w,c
 19098  010BB4                     i2u1562_40:
 19099  010BB4  0100               	movlb	0	; () banked
 19100  010BB6  6F89               	movwf	i2printf@c& (0+255),b
 19101  010BB8  5189               	movf	i2printf@c& (0+255),w,b
 19102                           
 19103                           ; Switch size 1, requested type "space"
 19104                           ; Number of cases is 7, Range of values is 0 to 120
 19105                           ; switch strategies available:
 19106                           ; Name         Instructions Cycles
 19107                           ; simple_byte           22    12 (average)
 19108                           ;	Chosen strategy is simple_byte
 19109  010BBA  0A00               	xorlw	0	; case 0
 19110  010BBC  B4D8               	btfsc	status,2,c
 19111  010BBE  0012               	return	
 19112  010BC0  0A58               	xorlw	88	; case 88
 19113  010BC2  B4D8               	btfsc	status,2,c
 19114  010BC4  D7AE               	goto	i2l1105
 19115  010BC6  0A3C               	xorlw	60	; case 100
 19116  010BC8  B4D8               	btfsc	status,2,c
 19117  010BCA  D00D               	goto	i2l1102
 19118  010BCC  0A02               	xorlw	2	; case 102
 19119  010BCE  B4D8               	btfsc	status,2,c
 19120  010BD0  D7A6               	goto	i2l1101
 19121  010BD2  0A0F               	xorlw	15	; case 105
 19122  010BD4  B4D8               	btfsc	status,2,c
 19123  010BD6  D007               	goto	i2l1102
 19124  010BD8  0A1C               	xorlw	28	; case 117
 19125  010BDA  B4D8               	btfsc	status,2,c
 19126  010BDC  D7D0               	goto	i2l1113
 19127  010BDE  0A0D               	xorlw	13	; case 120
 19128  010BE0  B4D8               	btfsc	status,2,c
 19129  010BE2  D79F               	goto	i2l1105
 19130  010BE4  D7C3               	goto	i2l1112
 19131  010BE6                     i2l1102:
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;doprnt.c: 825: if(flag & (0x700)) {
 19135                           
 19136                           ; BSR set to: 0
 19137  010BE6  0E07               	movlw	7
 19138  010BE8  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19139  010BEA  B4D8               	btfsc	status,2,c
 19140  010BEC  D2C0               	goto	i2l1114
 19141                           
 19142                           ; BSR set to: 0
 19143                           ;doprnt.c: 827: if(flag & 0x1000)
 19144  010BEE  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 19145  010BF0  D004               	goto	i2l1115
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;doprnt.c: 829: prec = 6;
 19149  010BF2  0E00               	movlw	0
 19150  010BF4  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 19151  010BF6  0E06               	movlw	6
 19152  010BF8  6F87               	movwf	i2printf@prec& (0+255),b
 19153  010BFA                     i2l1115:
 19154                           
 19155                           ; BSR set to: 0
 19156                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 19157                           
 19158                           ; BSR set to: 0
 19159  010BFA  C076  FFD9         	movff	i2printf@ap,fsr2l
 19160  010BFE  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 19161  010C02  CFDE F080          	movff	postinc2,i2printf@fval
 19162  010C06  CFDE F081          	movff	postinc2,i2printf@fval+1
 19163  010C0A  CFDD F082          	movff	postdec2,i2printf@fval+2
 19164                           
 19165                           ; BSR set to: 0
 19166  010C0E  0E03               	movlw	3
 19167  010C10  2776               	addwf	i2printf@ap& (0+255),f,b
 19168  010C12  0E00               	movlw	0
 19169  010C14  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;doprnt.c: 831: if(fval < 0.0) {
 19173  010C16  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 19174  010C18  D011               	goto	i2l1116
 19175                           
 19176                           ; BSR set to: 0
 19177                           ;doprnt.c: 832: fval = -fval;
 19178  010C1A  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 19179  010C1E  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 19180  010C22  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 19181  010C26  ECDC  F0B0         	call	i2___ftneg	;wreg free
 19182  010C2A  C024  F080         	movff	?i2___ftneg,i2printf@fval
 19183  010C2E  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 19184  010C32  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 19185                           
 19186                           ;doprnt.c: 833: flag |= 0x03;
 19187  010C36  0E03               	movlw	3
 19188  010C38  0100               	movlb	0	; () banked
 19189  010C3A  1378               	iorwf	i2printf@flag& (0+255),f,b
 19190  010C3C                     i2l1116:
 19191                           
 19192                           ; BSR set to: 0
 19193                           ;doprnt.c: 834: }
 19194                           ;doprnt.c: 835: exp = 0;
 19195                           
 19196                           ; BSR set to: 0
 19197  010C3C  0E00               	movlw	0
 19198  010C3E  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19199  010C40  0E00               	movlw	0
 19200  010C42  6F7A               	movwf	i2printf@exp& (0+255),b
 19201                           
 19202                           ; BSR set to: 0
 19203                           ;doprnt.c: 836: if( fval!=0) {
 19204  010C44  5180               	movf	i2printf@fval& (0+255),w,b
 19205  010C46  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 19206  010C48  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 19207  010C4A  B4D8               	btfsc	status,2,c
 19208  010C4C  D086               	goto	i2l1121
 19209                           
 19210                           ; BSR set to: 0
 19211                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 19212  010C4E  0E82               	movlw	130
 19213  010C50  6F68               	movwf	??i2_printf& (0+255),b
 19214  010C52  0EFF               	movlw	255
 19215  010C54  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19216  010C56  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 19217  010C5A  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 19218  010C5E  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 19219  010C62  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 19220  010C66  0E10               	movlw	16
 19221  010C68  D005               	goto	i2u1567_40
 19222  010C6A                     i2u1567_45:
 19223  010C6A  90D8               	bcf	status,0,c
 19224  010C6C  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 19225  010C6E  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 19226  010C70  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 19227  010C72  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 19228  010C74                     i2u1567_40:
 19229  010C74  2EE8               	decfsz	wreg,f,c
 19230  010C76  D7F9               	goto	i2u1567_45
 19231  010C78  516A               	movf	(??i2_printf+2)& (0+255),w,b
 19232  010C7A  2568               	addwf	??i2_printf& (0+255),w,b
 19233  010C7C  6F7A               	movwf	i2printf@exp& (0+255),b
 19234  010C7E  0E00               	movlw	0
 19235  010C80  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 19236  010C82  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19237                           
 19238                           ; BSR set to: 0
 19239                           ;doprnt.c: 838: exp--;
 19240  010C84  077A               	decf	i2printf@exp& (0+255),f,b
 19241  010C86  A0D8               	btfss	status,0,c
 19242  010C88  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19243                           
 19244                           ; BSR set to: 0
 19245                           ;doprnt.c: 839: exp *= 3;
 19246  010C8A  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 19247  010C8E  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 19248  010C92  0E00               	movlw	0
 19249  010C94  6E12               	movwf	i2___wmul@multiplicand+1,c
 19250  010C96  0E03               	movlw	3
 19251  010C98  6E11               	movwf	i2___wmul@multiplicand,c
 19252  010C9A  ECC9  F0B0         	call	i2___wmul	;wreg free
 19253  010C9E  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 19254  010CA2  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 19255                           
 19256                           ;doprnt.c: 840: exp /= 10;
 19257  010CA6  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 19258  010CAA  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 19259  010CAE  0E00               	movlw	0
 19260  010CB0  6E0A               	movwf	i2___awdiv@divisor+1,c
 19261  010CB2  0E0A               	movlw	10
 19262  010CB4  6E09               	movwf	i2___awdiv@divisor,c
 19263  010CB6  EC53  F0AA         	call	i2___awdiv	;wreg free
 19264  010CBA  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 19265  010CBE  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 19266                           
 19267                           ;doprnt.c: 841: if(exp < 0)
 19268  010CC2  0100               	movlb	0	; () banked
 19269  010CC4  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 19270  010CC6  D003               	goto	i2l1118
 19271                           
 19272                           ; BSR set to: 0
 19273                           ;doprnt.c: 842: exp--;
 19274  010CC8  077A               	decf	i2printf@exp& (0+255),f,b
 19275  010CCA  A0D8               	btfss	status,0,c
 19276  010CCC  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19277  010CCE                     i2l1118:
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 19281                           
 19282                           ; BSR set to: 0
 19283  010CCE  517A               	movf	i2printf@exp& (0+255),w,b
 19284  010CD0  0800               	sublw	0
 19285  010CD2  ECF1  F092         	call	i2_scale
 19286  010CD6  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 19287  010CDA  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 19288  010CDE  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 19289                           
 19290                           ;doprnt.c: 847: tmpval.integ *= fval;
 19291  010CE2  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 19292  010CE6  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 19293  010CEA  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 19294  010CEE  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 19295  010CF2  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 19296  010CF6  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 19297  010CFA  EC4B  F0A4         	call	i2___ftmul	;wreg free
 19298  010CFE  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 19299  010D02  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 19300  010D06  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 19301                           
 19302                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 19303  010D0A  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19304  010D0E  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19305  010D12  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19306  010D16  0E00               	movlw	0
 19307  010D18  6E2D               	movwf	i2___ftge@ff2,c
 19308  010D1A  0E80               	movlw	128
 19309  010D1C  6E2E               	movwf	i2___ftge@ff2+1,c
 19310  010D1E  0E3F               	movlw	63
 19311  010D20  6E2F               	movwf	i2___ftge@ff2+2,c
 19312  010D22  EC40  F0A9         	call	i2___ftge	;wreg free
 19313  010D26  B0D8               	btfsc	status,0,c
 19314  010D28  D005               	goto	i2l1119
 19315                           
 19316                           ;doprnt.c: 849: exp--;
 19317  010D2A  0100               	movlb	0	; () banked
 19318  010D2C  077A               	decf	i2printf@exp& (0+255),f,b
 19319  010D2E  A0D8               	btfss	status,0,c
 19320  010D30  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19321  010D32  D013               	goto	i2l1121
 19322  010D34                     i2l1119:
 19323                           
 19324                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 19325                           
 19326                           ; BSR set to: 0
 19327  010D34  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19328  010D38  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19329  010D3C  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19330  010D40  0E00               	movlw	0
 19331  010D42  6E2D               	movwf	i2___ftge@ff2,c
 19332  010D44  0E20               	movlw	32
 19333  010D46  6E2E               	movwf	i2___ftge@ff2+1,c
 19334  010D48  0E41               	movlw	65
 19335  010D4A  6E2F               	movwf	i2___ftge@ff2+2,c
 19336  010D4C  EC40  F0A9         	call	i2___ftge	;wreg free
 19337  010D50  A0D8               	btfss	status,0,c
 19338  010D52  D003               	goto	i2l1121
 19339                           
 19340                           ;doprnt.c: 851: exp++;
 19341  010D54  0100               	movlb	0	; () banked
 19342  010D56  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 19343  010D58  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 19344  010D5A                     i2l1121:
 19345                           
 19346                           ;doprnt.c: 852: }
 19347                           ;doprnt.c: 1112: if(prec <= 12)
 19348                           
 19349                           ; BSR set to: 0
 19350                           
 19351                           ; BSR set to: 0
 19352                           
 19353                           ; BSR set to: 0
 19354  010D5A  0100               	movlb	0	; () banked
 19355  010D5C  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 19356  010D5E  D006               	goto	i2u1571_40
 19357  010D60  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19358  010D62  E11B               	bnz	i2l12455
 19359  010D64  0E0D               	movlw	13
 19360  010D66  5D87               	subwf	i2printf@prec& (0+255),w,b
 19361  010D68  B0D8               	btfsc	status,0,c
 19362  010D6A  D017               	goto	i2l1122
 19363  010D6C                     i2u1571_40:
 19364                           
 19365                           ; BSR set to: 0
 19366                           ;doprnt.c: 1113: fval += fround(prec);
 19367  010D6C  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 19368  010D70  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 19369  010D74  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 19370  010D78  5187               	movf	i2printf@prec& (0+255),w,b
 19371  010D7A  EC17  F098         	call	i2_fround
 19372  010D7E  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 19373  010D82  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 19374  010D86  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 19375  010D8A  EC51  F09E         	call	i2___ftadd	;wreg free
 19376  010D8E  C040  F080         	movff	?i2___ftadd,i2printf@fval
 19377  010D92  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 19378  010D96  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 19379  010D9A                     i2l1122:
 19380  010D9A                     i2l12455:
 19381                           
 19382                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 19383  010D9A  0100               	movlb	0	; () banked
 19384  010D9C  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19385  010D9E  D006               	goto	i2u1572_40
 19386  010DA0  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19387  010DA2  E120               	bnz	i2l12463
 19388  010DA4  0E0A               	movlw	10
 19389  010DA6  5D7A               	subwf	i2printf@exp& (0+255),w,b
 19390  010DA8  B0D8               	btfsc	status,0,c
 19391  010DAA  D01C               	goto	i2u1575_40
 19392  010DAC                     i2u1572_40:
 19393                           
 19394                           ; BSR set to: 0
 19395  010DAC  5180               	movf	i2printf@fval& (0+255),w,b
 19396  010DAE  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 19397  010DB0  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 19398  010DB2  B4D8               	btfsc	status,2,c
 19399  010DB4  D056               	goto	i2l1123
 19400                           
 19401                           ; BSR set to: 0
 19402  010DB6  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 19403  010DBA  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 19404  010DBE  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 19405  010DC2  ECD1  F0A3         	call	i2___fttol	;wreg free
 19406  010DC6  503D               	movf	?i2___fttol,w,c
 19407  010DC8  103E               	iorwf	?i2___fttol+1,w,c
 19408  010DCA  103F               	iorwf	?i2___fttol+2,w,c
 19409  010DCC  1040               	iorwf	?i2___fttol+3,w,c
 19410  010DCE  A4D8               	btfss	status,2,c
 19411  010DD0  D048               	goto	i2l1123
 19412  010DD2  0100               	movlb	0	; () banked
 19413  010DD4  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19414  010DD6  D045               	goto	i2l1123
 19415  010DD8  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19416  010DDA  E104               	bnz	i2l12463
 19417  010DDC  0E02               	movlw	2
 19418  010DDE  5D7A               	subwf	i2printf@exp& (0+255),w,b
 19419  010DE0  A0D8               	btfss	status,0,c
 19420  010DE2  D03F               	goto	i2l1123
 19421  010DE4                     i2u1575_40:
 19422  010DE4                     i2l12463:
 19423                           
 19424                           ; BSR set to: 0
 19425                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 19426  010DE4  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19427  010DE8  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19428  010DEC  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19429  010DF0  0E70               	movlw	112
 19430  010DF2  6E2D               	movwf	i2___ftge@ff2,c
 19431  010DF4  0E89               	movlw	137
 19432  010DF6  6E2E               	movwf	i2___ftge@ff2+1,c
 19433  010DF8  0E40               	movlw	64
 19434  010DFA  6E2F               	movwf	i2___ftge@ff2+2,c
 19435  010DFC  EC40  F0A9         	call	i2___ftge	;wreg free
 19436  010E00  B0D8               	btfsc	status,0,c
 19437  010E02  D003               	goto	i2l1126
 19438                           
 19439                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 19440  010E04  0100               	movlb	0	; () banked
 19441  010E06  0EF7               	movlw	247
 19442  010E08  D002               	goto	L2
 19443  010E0A                     i2l1126:
 19444                           
 19445                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 19446                           
 19447                           ; BSR set to: 0
 19448  010E0A  0100               	movlb	0	; () banked
 19449  010E0C  0EF8               	movlw	248
 19450  010E0E                     L2:
 19451  010E0E  277A               	addwf	i2printf@exp& (0+255),f,b
 19452  010E10  0EFF               	movlw	255
 19453  010E12  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 19454                           
 19455                           ; BSR set to: 0
 19456                           ;doprnt.c: 1124: }
 19457                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 19458                           
 19459                           ; BSR set to: 0
 19460  010E14  517A               	movf	i2printf@exp& (0+255),w,b
 19461  010E16  ECF1  F092         	call	i2_scale
 19462  010E1A  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 19463  010E1E  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 19464  010E22  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 19465                           
 19466                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 19467  010E26  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 19468  010E2A  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 19469  010E2E  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 19470  010E32  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 19471  010E36  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 19472  010E3A  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 19473  010E3E  EC8A  F0A0         	call	i2__tdiv_to_l_	;wreg free
 19474  010E42  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 19475  010E46  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 19476  010E4A  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 19477  010E4E  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 19478                           
 19479                           ;doprnt.c: 1129: fval = 0.0;
 19480  010E52  0E00               	movlw	0
 19481  010E54  0100               	movlb	0	; () banked
 19482  010E56  6F80               	movwf	i2printf@fval& (0+255),b
 19483  010E58  0E00               	movlw	0
 19484  010E5A  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 19485  010E5C  0E00               	movlw	0
 19486  010E5E  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 19487                           
 19488                           ;doprnt.c: 1130: } else {
 19489  010E60  D033               	goto	i2l1132
 19490  010E62                     i2l1123:
 19491                           
 19492                           ;doprnt.c: 1131: val = (unsigned long)fval;
 19493                           
 19494                           ; BSR set to: 0
 19495  010E62  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 19496  010E66  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 19497  010E6A  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 19498  010E6E  ECD1  F0A3         	call	i2___fttol	;wreg free
 19499  010E72  C03D  F083         	movff	?i2___fttol,i2printf@val
 19500  010E76  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 19501  010E7A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 19502  010E7E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 19503                           
 19504                           ;doprnt.c: 1132: fval -= (double)val;
 19505  010E82  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 19506  010E86  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 19507  010E8A  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 19508  010E8E  C083  F009         	movff	i2printf@val,i2___lltoft@c
 19509  010E92  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 19510  010E96  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 19511  010E9A  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 19512  010E9E  ECB8  F0AD         	call	i2___lltoft	;wreg free
 19513  010EA2  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 19514  010EA6  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 19515  010EAA  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 19516  010EAE  EC61  F0AF         	call	i2___ftsub	;wreg free
 19517  010EB2  C060  F080         	movff	?i2___ftsub,i2printf@fval
 19518  010EB6  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 19519  010EBA  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 19520                           
 19521                           ;doprnt.c: 1133: exp = 0;
 19522  010EBE  0E00               	movlw	0
 19523  010EC0  0100               	movlb	0	; () banked
 19524  010EC2  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19525  010EC4  0E00               	movlw	0
 19526  010EC6  6F7A               	movwf	i2printf@exp& (0+255),b
 19527  010EC8                     i2l1132:
 19528                           
 19529                           ; BSR set to: 0
 19530                           ;doprnt.c: 1134: }
 19531                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 19532                           
 19533                           ; BSR set to: 0
 19534  010EC8  0E01               	movlw	1
 19535  010ECA  6F89               	movwf	i2printf@c& (0+255),b
 19536  010ECC                     i2l12483:
 19537                           
 19538                           ; BSR set to: 0
 19539  010ECC  0E0A               	movlw	10
 19540  010ECE  1989               	xorwf	i2printf@c& (0+255),w,b
 19541  010ED0  B4D8               	btfsc	status,2,c
 19542  010ED2  D01B               	goto	i2u1579_40
 19543                           
 19544                           ; BSR set to: 0
 19545                           ;doprnt.c: 1137: if(val < dpowers[c])
 19546                           
 19547                           ; BSR set to: 0
 19548                           
 19549                           ; BSR set to: 0
 19550  010ED4  5189               	movf	i2printf@c& (0+255),w,b
 19551  010ED6  0D04               	mullw	4
 19552  010ED8  0E29               	movlw	low _dpowers
 19553  010EDA  24F3               	addwf	prodl,w,c
 19554  010EDC  6EF6               	movwf	tblptrl,c
 19555  010EDE  0EF3               	movlw	high _dpowers
 19556  010EE0  20F4               	addwfc	prodh,w,c
 19557  010EE2  6EF7               	movwf	tblptrh,c
 19558  010EE4                     	if	1	;There are 3 active tblptr bytes
 19559  010EE4  6AF8               	clrf	tblptru,c
 19560  010EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 19561  010EE8  22F8               	addwfc	tblptru,f,c
 19562  010EEA                     	endif
 19563  010EEA  0009               	tblrd		*+
 19564  010EEC  50F5               	movf	tablat,w,c
 19565  010EEE  5D83               	subwf	i2printf@val& (0+255),w,b
 19566  010EF0  0009               	tblrd		*+
 19567  010EF2  50F5               	movf	tablat,w,c
 19568  010EF4  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 19569  010EF6  0009               	tblrd		*+
 19570  010EF8  50F5               	movf	tablat,w,c
 19571  010EFA  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 19572  010EFC  0009               	tblrd		*+
 19573  010EFE  50F5               	movf	tablat,w,c
 19574  010F00  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 19575  010F02  A0D8               	btfss	status,0,c
 19576  010F04  D002               	goto	i2u1579_40
 19577                           
 19578                           ; BSR set to: 0
 19579                           
 19580                           ; BSR set to: 0
 19581                           
 19582                           ; BSR set to: 0
 19583                           ;doprnt.c: 1138: break;
 19584  010F06  2B89               	incf	i2printf@c& (0+255),f,b
 19585  010F08  D7E1               	goto	i2l12483
 19586  010F0A                     i2u1579_40:
 19587                           
 19588                           ; BSR set to: 0
 19589                           ;doprnt.c: 1175: {
 19590                           ;doprnt.c: 1188: if(flag & 0x03)
 19591                           
 19592                           ; BSR set to: 0
 19593  010F0A  0E03               	movlw	3
 19594  010F0C  1578               	andwf	i2printf@flag& (0+255),w,b
 19595  010F0E  6F68               	movwf	??i2_printf& (0+255),b
 19596  010F10  0E00               	movlw	0
 19597  010F12  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19598  010F14  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19599  010F16  5168               	movf	??i2_printf& (0+255),w,b
 19600  010F18  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19601  010F1A  B4D8               	btfsc	status,2,c
 19602  010F1C  D04D               	goto	i2l1137
 19603                           
 19604                           ; BSR set to: 0
 19605                           ;doprnt.c: 1190: (putch('-') );
 19606  010F1E  0E2D               	movlw	45
 19607  010F20  ECBC  F0B1         	call	i2_putch
 19608                           
 19609                           ;doprnt.c: 1195: }
 19610                           ;doprnt.c: 1196: while(c--) {
 19611  010F24  D049               	goto	i2l1137
 19612  010F26                     
 19613                           ;doprnt.c: 1200: {
 19614                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 19615  010F26  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 19616  010F2A  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19617  010F2E  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19618  010F32  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19619  010F36  0100               	movlb	0	; () banked
 19620  010F38  5189               	movf	i2printf@c& (0+255),w,b
 19621  010F3A  0D04               	mullw	4
 19622  010F3C  0E29               	movlw	low _dpowers
 19623  010F3E  24F3               	addwf	prodl,w,c
 19624  010F40  6EF6               	movwf	tblptrl,c
 19625  010F42  0EF3               	movlw	high _dpowers
 19626  010F44  20F4               	addwfc	prodh,w,c
 19627  010F46  6EF7               	movwf	tblptrh,c
 19628  010F48                     	if	1	;There are 3 active tblptr bytes
 19629  010F48  6AF8               	clrf	tblptru,c
 19630  010F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 19631  010F4C  22F8               	addwfc	tblptru,f,c
 19632  010F4E                     	endif
 19633  010F4E  0009               	tblrd		*+
 19634  010F50  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19635  010F54  0009               	tblrd		*+
 19636  010F56  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19637  010F5A  0009               	tblrd		*+
 19638  010F5C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19639  010F60  000A               	tblrd		*-
 19640  010F62  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19641  010F66  EC95  F0AA         	call	i2___lldiv	;wreg free
 19642  010F6A  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 19643  010F6E  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19644  010F72  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19645  010F76  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19646                           
 19647                           ;doprnt.c: 1202: tmpval.vd %= 10;
 19648  010F7A  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19649  010F7E  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19650  010F82  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19651  010F86  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19652  010F8A  0E0A               	movlw	10
 19653  010F8C  6E12               	movwf	i2___llmod@divisor,c
 19654  010F8E  0E00               	movlw	0
 19655  010F90  6E13               	movwf	i2___llmod@divisor+1,c
 19656  010F92  0E00               	movlw	0
 19657  010F94  6E14               	movwf	i2___llmod@divisor+2,c
 19658  010F96  0E00               	movlw	0
 19659  010F98  6E15               	movwf	i2___llmod@divisor+3,c
 19660  010F9A  EC95  F0AC         	call	i2___llmod	;wreg free
 19661  010F9E  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 19662  010FA2  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 19663  010FA6  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 19664  010FAA  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 19665                           
 19666                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 19667  010FAE  0100               	movlb	0	; () banked
 19668  010FB0  517C               	movf	i2printf@tmpval& (0+255),w,b
 19669  010FB2  0F30               	addlw	48
 19670  010FB4  ECBC  F0B1         	call	i2_putch
 19671  010FB8                     i2l1137:
 19672  010FB8  0100               	movlb	0	; () banked
 19673  010FBA  0789               	decf	i2printf@c& (0+255),f,b
 19674  010FBC  2989               	incf	i2printf@c& (0+255),w,b
 19675  010FBE  B4D8               	btfsc	status,2,c
 19676  010FC0  D008               	goto	i2l1140
 19677  010FC2  D7B1               	goto	i2l1138
 19678  010FC4                     i2l12507:
 19679                           
 19680                           ; BSR set to: 0
 19681                           ;doprnt.c: 1208: (putch('0') );
 19682  010FC4  0E30               	movlw	48
 19683  010FC6  ECBC  F0B1         	call	i2_putch
 19684                           
 19685                           ;doprnt.c: 1209: exp--;
 19686  010FCA  0100               	movlb	0	; () banked
 19687  010FCC  077A               	decf	i2printf@exp& (0+255),f,b
 19688  010FCE  A0D8               	btfss	status,0,c
 19689  010FD0  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19690  010FD2                     i2l1140:
 19691                           
 19692                           ; BSR set to: 0
 19693                           
 19694                           ; BSR set to: 0
 19695  010FD2  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19696  010FD4  D005               	goto	i2u1582_40
 19697  010FD6  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19698  010FD8  E1F5               	bnz	i2l12507
 19699  010FDA  057A               	decf	i2printf@exp& (0+255),w,b
 19700  010FDC  B0D8               	btfsc	status,0,c
 19701  010FDE  D7F2               	goto	i2l1141
 19702  010FE0                     i2u1582_40:
 19703                           
 19704                           ; BSR set to: 0
 19705                           ;doprnt.c: 1210: }
 19706                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 19707                           
 19708                           ; BSR set to: 0
 19709  010FE0  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 19710  010FE2  D009               	goto	i2l1143
 19711  010FE4  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19712  010FE6  E104               	bnz	i2u1583_40
 19713  010FE8  0E09               	movlw	9
 19714  010FEA  5D87               	subwf	i2printf@prec& (0+255),w,b
 19715  010FEC  A0D8               	btfss	status,0,c
 19716  010FEE  D003               	goto	i2l1143
 19717  010FF0                     i2u1583_40:
 19718                           
 19719                           ; BSR set to: 0
 19720                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 19721  010FF0  0E08               	movlw	8
 19722  010FF2  6F89               	movwf	i2printf@c& (0+255),b
 19723  010FF4  D002               	goto	i2l1144
 19724  010FF6                     i2l1143:
 19725                           
 19726                           ; BSR set to: 0
 19727                           ;doprnt.c: 1213: else
 19728                           ;doprnt.c: 1214: c = prec;
 19729  010FF6  C087  F089         	movff	i2printf@prec,i2printf@c
 19730  010FFA                     i2l1144:
 19731                           
 19732                           ; BSR set to: 0
 19733                           ;doprnt.c: 1215: prec -= c;
 19734                           
 19735                           ; BSR set to: 0
 19736  010FFA  5189               	movf	i2printf@c& (0+255),w,b
 19737  010FFC  5F87               	subwf	i2printf@prec& (0+255),f,b
 19738  010FFE  0E00               	movlw	0
 19739  011000  BF89               	btfsc	i2printf@c& (0+255),7,b
 19740  011002  0EFF               	movlw	255
 19741  011004  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 19742                           
 19743                           ; BSR set to: 0
 19744                           ;doprnt.c: 1219: if(c)
 19745  011006  5189               	movf	i2printf@c& (0+255),w,b
 19746  011008  B4D8               	btfsc	status,2,c
 19747  01100A  D003               	goto	i2l1145
 19748                           
 19749                           ; BSR set to: 0
 19750                           ;doprnt.c: 1221: (putch('.') );
 19751  01100C  0E2E               	movlw	46
 19752  01100E  ECBC  F0B1         	call	i2_putch
 19753  011012                     i2l1145:
 19754                           
 19755                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 19756  011012  0100               	movlb	0	; () banked
 19757  011014  5189               	movf	i2printf@c& (0+255),w,b
 19758  011016  ECF1  F092         	call	i2_scale
 19759  01101A  C036  F06E         	movff	?i2_scale,i2_printf$3337
 19760  01101E  C037  F06F         	movff	?i2_scale+1,i2_printf$3337+1
 19761  011022  C038  F070         	movff	?i2_scale+2,i2_printf$3337+2
 19762                           
 19763                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 19764  011026  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 19765  01102A  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 19766  01102E  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 19767  011032  C06E  F027         	movff	i2_printf$3337,i2___ftmul@f1
 19768  011036  C06F  F028         	movff	i2_printf$3337+1,i2___ftmul@f1+1
 19769  01103A  C070  F029         	movff	i2_printf$3337+2,i2___ftmul@f1+2
 19770  01103E  EC4B  F0A4         	call	i2___ftmul	;wreg free
 19771  011042  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 19772  011046  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 19773  01104A  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 19774  01104E  ECD1  F0A3         	call	i2___fttol	;wreg free
 19775  011052  C03D  F083         	movff	?i2___fttol,i2printf@val
 19776  011056  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 19777  01105A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 19778  01105E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 19779                           
 19780                           ;doprnt.c: 1228: while(c--) {
 19781  011062  D073               	goto	i2l1146
 19782  011064                     
 19783                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 19784  011064  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 19785  011068  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19786  01106C  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19787  011070  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19788  011074  0100               	movlb	0	; () banked
 19789  011076  5189               	movf	i2printf@c& (0+255),w,b
 19790  011078  0D04               	mullw	4
 19791  01107A  0E29               	movlw	low _dpowers
 19792  01107C  24F3               	addwf	prodl,w,c
 19793  01107E  6EF6               	movwf	tblptrl,c
 19794  011080  0EF3               	movlw	high _dpowers
 19795  011082  20F4               	addwfc	prodh,w,c
 19796  011084  6EF7               	movwf	tblptrh,c
 19797  011086                     	if	1	;There are 3 active tblptr bytes
 19798  011086  6AF8               	clrf	tblptru,c
 19799  011088  0E00               	movlw	low (__mediumconst shr (0+16))
 19800  01108A  22F8               	addwfc	tblptru,f,c
 19801  01108C                     	endif
 19802  01108C  0009               	tblrd		*+
 19803  01108E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19804  011092  0009               	tblrd		*+
 19805  011094  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19806  011098  0009               	tblrd		*+
 19807  01109A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19808  01109E  000A               	tblrd		*-
 19809  0110A0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19810  0110A4  EC95  F0AA         	call	i2___lldiv	;wreg free
 19811  0110A8  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 19812  0110AC  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19813  0110B0  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19814  0110B4  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19815                           
 19816                           ;doprnt.c: 1230: tmpval.vd %= 10;
 19817  0110B8  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19818  0110BC  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19819  0110C0  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19820  0110C4  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19821  0110C8  0E0A               	movlw	10
 19822  0110CA  6E12               	movwf	i2___llmod@divisor,c
 19823  0110CC  0E00               	movlw	0
 19824  0110CE  6E13               	movwf	i2___llmod@divisor+1,c
 19825  0110D0  0E00               	movlw	0
 19826  0110D2  6E14               	movwf	i2___llmod@divisor+2,c
 19827  0110D4  0E00               	movlw	0
 19828  0110D6  6E15               	movwf	i2___llmod@divisor+3,c
 19829  0110D8  EC95  F0AC         	call	i2___llmod	;wreg free
 19830  0110DC  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 19831  0110E0  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 19832  0110E4  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 19833  0110E8  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 19834                           
 19835                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 19836  0110EC  0100               	movlb	0	; () banked
 19837  0110EE  517C               	movf	i2printf@tmpval& (0+255),w,b
 19838  0110F0  0F30               	addlw	48
 19839  0110F2  ECBC  F0B1         	call	i2_putch
 19840                           
 19841                           ;doprnt.c: 1232: val %= dpowers[c];
 19842  0110F6  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 19843  0110FA  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 19844  0110FE  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 19845  011102  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 19846  011106  0100               	movlb	0	; () banked
 19847  011108  5189               	movf	i2printf@c& (0+255),w,b
 19848  01110A  0D04               	mullw	4
 19849  01110C  0E29               	movlw	low _dpowers
 19850  01110E  24F3               	addwf	prodl,w,c
 19851  011110  6EF6               	movwf	tblptrl,c
 19852  011112  0EF3               	movlw	high _dpowers
 19853  011114  20F4               	addwfc	prodh,w,c
 19854  011116  6EF7               	movwf	tblptrh,c
 19855  011118                     	if	1	;There are 3 active tblptr bytes
 19856  011118  6AF8               	clrf	tblptru,c
 19857  01111A  0E00               	movlw	low (__mediumconst shr (0+16))
 19858  01111C  22F8               	addwfc	tblptru,f,c
 19859  01111E                     	endif
 19860  01111E  0009               	tblrd		*+
 19861  011120  CFF5 F012          	movff	tablat,i2___llmod@divisor
 19862  011124  0009               	tblrd		*+
 19863  011126  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 19864  01112A  0009               	tblrd		*+
 19865  01112C  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 19866  011130  000A               	tblrd		*-
 19867  011132  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 19868  011136  EC95  F0AC         	call	i2___llmod	;wreg free
 19869  01113A  C00E  F083         	movff	?i2___llmod,i2printf@val
 19870  01113E  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 19871  011142  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 19872  011146  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 19873  01114A                     i2l1146:
 19874  01114A  0100               	movlb	0	; () banked
 19875  01114C  0789               	decf	i2printf@c& (0+255),f,b
 19876  01114E  2989               	incf	i2printf@c& (0+255),w,b
 19877  011150  B4D8               	btfsc	status,2,c
 19878  011152  D008               	goto	i2l1149
 19879  011154  D787               	goto	i2l1147
 19880  011156                     
 19881                           ; BSR set to: 0
 19882                           ;doprnt.c: 1236: (putch('0') );
 19883                           
 19884                           ; BSR set to: 0
 19885  011156  0E30               	movlw	48
 19886  011158  ECBC  F0B1         	call	i2_putch
 19887                           
 19888                           ;doprnt.c: 1237: prec--;
 19889  01115C  0100               	movlb	0	; () banked
 19890  01115E  0787               	decf	i2printf@prec& (0+255),f,b
 19891  011160  A0D8               	btfss	status,0,c
 19892  011162  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 19893  011164                     i2l1149:
 19894                           
 19895                           ; BSR set to: 0
 19896                           
 19897                           ; BSR set to: 0
 19898  011164  5187               	movf	i2printf@prec& (0+255),w,b
 19899  011166  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19900  011168  B4D8               	btfsc	status,2,c
 19901  01116A  D156               	goto	i2u1600_40
 19902  01116C  D7F4               	goto	i2l1150
 19903  01116E                     i2l1114:
 19904                           
 19905                           ; BSR set to: 0
 19906                           ;doprnt.c: 1246: }
 19907                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 19908                           
 19909                           ; BSR set to: 0
 19910  01116E  0EC0               	movlw	192
 19911  011170  1578               	andwf	i2printf@flag& (0+255),w,b
 19912  011172  6F68               	movwf	??i2_printf& (0+255),b
 19913  011174  0E00               	movlw	0
 19914  011176  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19915  011178  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19916  01117A  5168               	movf	??i2_printf& (0+255),w,b
 19917  01117C  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19918  01117E  A4D8               	btfss	status,2,c
 19919  011180  D01E               	goto	i2l1152
 19920                           
 19921                           ; BSR set to: 0
 19922                           ;doprnt.c: 1253: {
 19923                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 19924  011182  C076  FFD9         	movff	i2printf@ap,fsr2l
 19925  011186  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 19926  01118A  CFDE F083          	movff	postinc2,i2printf@val
 19927  01118E  CFDD F084          	movff	postdec2,i2printf@val+1
 19928  011192  0E00               	movlw	0
 19929  011194  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 19930  011196  0EFF               	movlw	-1
 19931  011198  6F85               	movwf	(i2printf@val+2)& (0+255),b
 19932  01119A  6F86               	movwf	(i2printf@val+3)& (0+255),b
 19933                           
 19934                           ; BSR set to: 0
 19935  01119C  0E02               	movlw	2
 19936  01119E  2776               	addwf	i2printf@ap& (0+255),f,b
 19937  0111A0  0E00               	movlw	0
 19938  0111A2  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19939                           
 19940                           ; BSR set to: 0
 19941                           ;doprnt.c: 1261: if((long)val < 0) {
 19942  0111A4  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 19943  0111A6  D01D               	goto	i2l1154
 19944                           
 19945                           ; BSR set to: 0
 19946                           ;doprnt.c: 1262: flag |= 0x03;
 19947  0111A8  0E03               	movlw	3
 19948  0111AA  1378               	iorwf	i2printf@flag& (0+255),f,b
 19949                           
 19950                           ; BSR set to: 0
 19951                           ;doprnt.c: 1263: val = -val;
 19952  0111AC  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 19953  0111AE  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 19954  0111B0  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 19955  0111B2  6D83               	negf	i2printf@val& (0+255),b
 19956  0111B4  0E00               	movlw	0
 19957  0111B6  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 19958  0111B8  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 19959  0111BA  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 19960                           
 19961                           ; BSR set to: 0
 19962                           ;doprnt.c: 1264: }
 19963                           ;doprnt.c: 1266: }
 19964  0111BC  D012               	goto	i2l1154
 19965  0111BE                     i2l1152:
 19966                           
 19967                           ; BSR set to: 0
 19968                           ;doprnt.c: 1268: else
 19969                           ;doprnt.c: 1273: {
 19970                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 19971                           
 19972                           ; BSR set to: 0
 19973  0111BE  C076  FFD9         	movff	i2printf@ap,fsr2l
 19974  0111C2  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 19975  0111C6  CFDE F068          	movff	postinc2,??i2_printf
 19976  0111CA  CFDD F069          	movff	postdec2,??i2_printf+1
 19977  0111CE  C068  F083         	movff	??i2_printf,i2printf@val
 19978  0111D2  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 19979  0111D6  6B85               	clrf	(i2printf@val+2)& (0+255),b
 19980  0111D8  6B86               	clrf	(i2printf@val+3)& (0+255),b
 19981                           
 19982                           ; BSR set to: 0
 19983  0111DA  0E02               	movlw	2
 19984  0111DC  2776               	addwf	i2printf@ap& (0+255),f,b
 19985  0111DE  0E00               	movlw	0
 19986  0111E0  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19987  0111E2                     i2l1154:
 19988                           
 19989                           ; BSR set to: 0
 19990                           ;doprnt.c: 1287: }
 19991                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 19992                           
 19993                           ; BSR set to: 0
 19994  0111E2  5187               	movf	i2printf@prec& (0+255),w,b
 19995  0111E4  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19996  0111E6  A4D8               	btfss	status,2,c
 19997  0111E8  D04B               	goto	i2l1156
 19998                           
 19999                           ; BSR set to: 0
 20000  0111EA  5183               	movf	i2printf@val& (0+255),w,b
 20001  0111EC  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 20002  0111EE  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 20003  0111F0  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 20004  0111F2  A4D8               	btfss	status,2,c
 20005  0111F4  D045               	goto	i2l1156
 20006                           
 20007                           ; BSR set to: 0
 20008                           ;doprnt.c: 1291: prec++;
 20009  0111F6  4B87               	infsnz	i2printf@prec& (0+255),f,b
 20010  0111F8  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 20011                           
 20012                           ; BSR set to: 0
 20013                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 20014  0111FA  D042               	goto	i2l1156
 20015  0111FC                     
 20016                           ; BSR set to: 0
 20017                           ;doprnt.c: 1302: case 0xC0:
 20018                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 20019                           
 20020                           ; BSR set to: 0
 20021                           
 20022                           ; BSR set to: 0
 20023  0111FC  0E01               	movlw	1
 20024  0111FE  6F89               	movwf	i2printf@c& (0+255),b
 20025  011200                     i2l12567:
 20026                           
 20027                           ; BSR set to: 0
 20028  011200  0E0A               	movlw	10
 20029  011202  1989               	xorwf	i2printf@c& (0+255),w,b
 20030  011204  B4D8               	btfsc	status,2,c
 20031  011206  D047               	goto	i2l1162
 20032                           
 20033                           ; BSR set to: 0
 20034                           ;doprnt.c: 1306: if(val < dpowers[c])
 20035                           
 20036                           ; BSR set to: 0
 20037                           
 20038                           ; BSR set to: 0
 20039  011208  5189               	movf	i2printf@c& (0+255),w,b
 20040  01120A  0D04               	mullw	4
 20041  01120C  0E29               	movlw	low _dpowers
 20042  01120E  24F3               	addwf	prodl,w,c
 20043  011210  6EF6               	movwf	tblptrl,c
 20044  011212  0EF3               	movlw	high _dpowers
 20045  011214  20F4               	addwfc	prodh,w,c
 20046  011216  6EF7               	movwf	tblptrh,c
 20047  011218                     	if	1	;There are 3 active tblptr bytes
 20048  011218  6AF8               	clrf	tblptru,c
 20049  01121A  0E00               	movlw	low (__mediumconst shr (0+16))
 20050  01121C  22F8               	addwfc	tblptru,f,c
 20051  01121E                     	endif
 20052  01121E  0009               	tblrd		*+
 20053  011220  50F5               	movf	tablat,w,c
 20054  011222  5D83               	subwf	i2printf@val& (0+255),w,b
 20055  011224  0009               	tblrd		*+
 20056  011226  50F5               	movf	tablat,w,c
 20057  011228  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 20058  01122A  0009               	tblrd		*+
 20059  01122C  50F5               	movf	tablat,w,c
 20060  01122E  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 20061  011230  0009               	tblrd		*+
 20062  011232  50F5               	movf	tablat,w,c
 20063  011234  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 20064  011236  A0D8               	btfss	status,0,c
 20065  011238  D02E               	goto	i2l1162
 20066                           
 20067                           ; BSR set to: 0
 20068                           
 20069                           ; BSR set to: 0
 20070                           
 20071                           ; BSR set to: 0
 20072                           ;doprnt.c: 1307: break;
 20073  01123A  2B89               	incf	i2printf@c& (0+255),f,b
 20074  01123C  D7E1               	goto	i2l12567
 20075  01123E                     
 20076                           ; BSR set to: 0
 20077                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 20078                           
 20079                           ; BSR set to: 0
 20080  01123E  0E01               	movlw	1
 20081  011240  6F89               	movwf	i2printf@c& (0+255),b
 20082  011242                     i2l12581:
 20083                           
 20084                           ; BSR set to: 0
 20085  011242  0E08               	movlw	8
 20086  011244  1989               	xorwf	i2printf@c& (0+255),w,b
 20087  011246  B4D8               	btfsc	status,2,c
 20088  011248  D026               	goto	i2l1162
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;doprnt.c: 1317: if(val < hexpowers[c])
 20092                           
 20093                           ; BSR set to: 0
 20094                           
 20095                           ; BSR set to: 0
 20096  01124A  5189               	movf	i2printf@c& (0+255),w,b
 20097  01124C  0D04               	mullw	4
 20098  01124E  0E9F               	movlw	low _hexpowers
 20099  011250  24F3               	addwf	prodl,w,c
 20100  011252  6EF6               	movwf	tblptrl,c
 20101  011254  0EF3               	movlw	high _hexpowers
 20102  011256  20F4               	addwfc	prodh,w,c
 20103  011258  6EF7               	movwf	tblptrh,c
 20104  01125A                     	if	1	;There are 3 active tblptr bytes
 20105  01125A  6AF8               	clrf	tblptru,c
 20106  01125C  0E00               	movlw	low (__mediumconst shr (0+16))
 20107  01125E  22F8               	addwfc	tblptru,f,c
 20108  011260                     	endif
 20109  011260  0009               	tblrd		*+
 20110  011262  50F5               	movf	tablat,w,c
 20111  011264  5D83               	subwf	i2printf@val& (0+255),w,b
 20112  011266  0009               	tblrd		*+
 20113  011268  50F5               	movf	tablat,w,c
 20114  01126A  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 20115  01126C  0009               	tblrd		*+
 20116  01126E  50F5               	movf	tablat,w,c
 20117  011270  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 20118  011272  0009               	tblrd		*+
 20119  011274  50F5               	movf	tablat,w,c
 20120  011276  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 20121  011278  A0D8               	btfss	status,0,c
 20122  01127A  D00D               	goto	i2l1162
 20123                           
 20124                           ; BSR set to: 0
 20125                           
 20126                           ; BSR set to: 0
 20127                           
 20128                           ; BSR set to: 0
 20129                           ;doprnt.c: 1318: break;
 20130  01127C  2B89               	incf	i2printf@c& (0+255),f,b
 20131  01127E  D7E1               	goto	i2l12581
 20132  011280                     i2l1156:
 20133                           
 20134                           ; BSR set to: 0
 20135                           
 20136                           ; BSR set to: 0
 20137  011280  5178               	movf	i2printf@flag& (0+255),w,b
 20138  011282  0BC0               	andlw	192
 20139                           
 20140                           ; Switch size 1, requested type "space"
 20141                           ; Number of cases is 3, Range of values is 0 to 192
 20142                           ; switch strategies available:
 20143                           ; Name         Instructions Cycles
 20144                           ; simple_byte           10     6 (average)
 20145                           ;	Chosen strategy is simple_byte
 20146  011284  0A00               	xorlw	0	; case 0
 20147  011286  B4D8               	btfsc	status,2,c
 20148  011288  D7B9               	goto	i2l1157
 20149  01128A  0A80               	xorlw	128	; case 128
 20150  01128C  B4D8               	btfsc	status,2,c
 20151  01128E  D7D7               	goto	i2l1163
 20152  011290  0A40               	xorlw	64	; case 192
 20153  011292  B4D8               	btfsc	status,2,c
 20154  011294  D7B3               	goto	i2l1157
 20155  011296                     i2l1162:
 20156                           
 20157                           ; BSR set to: 0
 20158                           ;doprnt.c: 1339: if(c < prec)
 20159                           
 20160                           ; BSR set to: 0
 20161  011296  0E80               	movlw	128
 20162  011298  BF89               	btfsc	i2printf@c& (0+255),7,b
 20163  01129A  0E7F               	movlw	127
 20164  01129C  6F68               	movwf	??i2_printf& (0+255),b
 20165  01129E  5187               	movf	i2printf@prec& (0+255),w,b
 20166  0112A0  5D89               	subwf	i2printf@c& (0+255),w,b
 20167  0112A2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20168  0112A4  0A80               	xorlw	128
 20169  0112A6  5968               	subwfb	??i2_printf& (0+255),w,b
 20170  0112A8  B0D8               	btfsc	status,0,c
 20171  0112AA  D003               	goto	i2l1167
 20172                           
 20173                           ; BSR set to: 0
 20174                           ;doprnt.c: 1340: c = prec;
 20175  0112AC  C087  F089         	movff	i2printf@prec,i2printf@c
 20176  0112B0  D010               	goto	i2l1169
 20177  0112B2                     i2l1167:
 20178                           
 20179                           ; BSR set to: 0
 20180                           ;doprnt.c: 1341: else if(prec < c)
 20181                           
 20182                           ; BSR set to: 0
 20183  0112B2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 20184  0112B4  0A80               	xorlw	128
 20185  0112B6  6F68               	movwf	??i2_printf& (0+255),b
 20186  0112B8  5189               	movf	i2printf@c& (0+255),w,b
 20187  0112BA  5D87               	subwf	i2printf@prec& (0+255),w,b
 20188  0112BC  0E80               	movlw	128
 20189  0112BE  BF89               	btfsc	i2printf@c& (0+255),7,b
 20190  0112C0  0E7F               	movlw	127
 20191  0112C2  5968               	subwfb	??i2_printf& (0+255),w,b
 20192  0112C4  B0D8               	btfsc	status,0,c
 20193  0112C6  D005               	goto	i2l1169
 20194                           
 20195                           ; BSR set to: 0
 20196                           ;doprnt.c: 1342: prec = c;
 20197  0112C8  5189               	movf	i2printf@c& (0+255),w,b
 20198  0112CA  6F87               	movwf	i2printf@prec& (0+255),b
 20199  0112CC  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 20200  0112CE  BF87               	btfsc	i2printf@prec& (0+255),7,b
 20201  0112D0  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20202  0112D2                     i2l1169:
 20203                           
 20204                           ; BSR set to: 0
 20205                           ;doprnt.c: 1422: {
 20206                           ;doprnt.c: 1438: if(flag & 0x03)
 20207                           
 20208                           ; BSR set to: 0
 20209                           
 20210                           ; BSR set to: 0
 20211  0112D2  0E03               	movlw	3
 20212  0112D4  1578               	andwf	i2printf@flag& (0+255),w,b
 20213  0112D6  6F68               	movwf	??i2_printf& (0+255),b
 20214  0112D8  0E00               	movlw	0
 20215  0112DA  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 20216  0112DC  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20217  0112DE  5168               	movf	??i2_printf& (0+255),w,b
 20218  0112E0  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 20219  0112E2  B4D8               	btfsc	status,2,c
 20220  0112E4  D090               	goto	i2l1171
 20221                           
 20222                           ; BSR set to: 0
 20223                           ;doprnt.c: 1439: (putch('-') );
 20224  0112E6  0E2D               	movlw	45
 20225  0112E8  ECBC  F0B1         	call	i2_putch
 20226                           
 20227                           ;doprnt.c: 1469: }
 20228                           ;doprnt.c: 1474: while(prec--) {
 20229  0112EC  D08C               	goto	i2l1171
 20230  0112EE                     
 20231                           ;doprnt.c: 1486: case 0xC0:
 20232                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 20233  0112EE  C087  F068         	movff	i2printf@prec,??i2_printf
 20234  0112F2  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 20235  0112F6  0100               	movlb	0	; () banked
 20236  0112F8  90D8               	bcf	status,0,c
 20237  0112FA  3768               	rlcf	??i2_printf& (0+255),f,b
 20238  0112FC  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20239  0112FE  90D8               	bcf	status,0,c
 20240  011300  3768               	rlcf	??i2_printf& (0+255),f,b
 20241  011302  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20242  011304  0E29               	movlw	low _dpowers
 20243  011306  2568               	addwf	??i2_printf& (0+255),w,b
 20244  011308  6EF6               	movwf	tblptrl,c
 20245  01130A  0EF3               	movlw	high _dpowers
 20246  01130C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20247  01130E  6EF7               	movwf	tblptrh,c
 20248  011310                     	if	1	;There are 3 active tblptr bytes
 20249  011310  6AF8               	clrf	tblptru,c
 20250  011312  0E00               	movlw	low (__mediumconst shr (0+16))
 20251  011314  22F8               	addwfc	tblptru,f,c
 20252  011316                     	endif
 20253  011316  0009               	tblrd		*+
 20254  011318  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20255  01131C  0009               	tblrd		*+
 20256  01131E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20257  011322  0009               	tblrd		*+
 20258  011324  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20259  011328  000A               	tblrd		*-
 20260  01132A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20261  01132E  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20262  011332  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20263  011336  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20264  01133A  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20265  01133E  EC95  F0AA         	call	i2___lldiv	;wreg free
 20266  011342  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 20267  011346  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 20268  01134A  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 20269  01134E  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 20270  011352  0E0A               	movlw	10
 20271  011354  6E12               	movwf	i2___llmod@divisor,c
 20272  011356  0E00               	movlw	0
 20273  011358  6E13               	movwf	i2___llmod@divisor+1,c
 20274  01135A  0E00               	movlw	0
 20275  01135C  6E14               	movwf	i2___llmod@divisor+2,c
 20276  01135E  0E00               	movlw	0
 20277  011360  6E15               	movwf	i2___llmod@divisor+3,c
 20278  011362  EC95  F0AC         	call	i2___llmod	;wreg free
 20279  011366  500E               	movf	?i2___llmod,w,c
 20280  011368  0F30               	addlw	48
 20281  01136A  0100               	movlb	0	; () banked
 20282  01136C  6F89               	movwf	i2printf@c& (0+255),b
 20283                           
 20284                           ;doprnt.c: 1491: break;
 20285  01136E  D048               	goto	i2l1176
 20286  011370                     
 20287                           ; BSR set to: 0
 20288                           ;doprnt.c: 1499: {
 20289                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 20290                           
 20291                           ; BSR set to: 0
 20292  011370  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 20293  011374  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 20294  011378  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 20295  01137C  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 20296  011380  C087  F068         	movff	i2printf@prec,??i2_printf
 20297  011384  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 20298  011388  90D8               	bcf	status,0,c
 20299  01138A  3768               	rlcf	??i2_printf& (0+255),f,b
 20300  01138C  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20301  01138E  90D8               	bcf	status,0,c
 20302  011390  3768               	rlcf	??i2_printf& (0+255),f,b
 20303  011392  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20304  011394  0E9F               	movlw	low _hexpowers
 20305  011396  2568               	addwf	??i2_printf& (0+255),w,b
 20306  011398  6EF6               	movwf	tblptrl,c
 20307  01139A  0EF3               	movlw	high _hexpowers
 20308  01139C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20309  01139E  6EF7               	movwf	tblptrh,c
 20310  0113A0                     	if	1	;There are 3 active tblptr bytes
 20311  0113A0  6AF8               	clrf	tblptru,c
 20312  0113A2  0E00               	movlw	low (__mediumconst shr (0+16))
 20313  0113A4  22F8               	addwfc	tblptru,f,c
 20314  0113A6                     	endif
 20315  0113A6  0009               	tblrd		*+
 20316  0113A8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20317  0113AC  0009               	tblrd		*+
 20318  0113AE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20319  0113B2  0009               	tblrd		*+
 20320  0113B4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20321  0113B8  000A               	tblrd		*-
 20322  0113BA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20323  0113BE  EC95  F0AA         	call	i2___lldiv	;wreg free
 20324  0113C2  5001               	movf	?i2___lldiv,w,c
 20325  0113C4  0B0F               	andlw	15
 20326  0113C6  0100               	movlb	0	; () banked
 20327  0113C8  6F71               	movwf	i2printf@idx& (0+255),b
 20328                           
 20329                           ; BSR set to: 0
 20330                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 20331  0113CA  5171               	movf	i2printf@idx& (0+255),w,b
 20332  0113CC  0D01               	mullw	1
 20333  0113CE  0EF8               	movlw	low STR_91
 20334  0113D0  24F3               	addwf	prodl,w,c
 20335  0113D2  6EF6               	movwf	tblptrl,c
 20336  0113D4  0EFE               	movlw	high STR_91
 20337  0113D6  20F4               	addwfc	prodh,w,c
 20338  0113D8  6EF7               	movwf	tblptrh,c
 20339  0113DA                     	if	1	;There are 3 active tblptr bytes
 20340  0113DA  6AF8               	clrf	tblptru,c
 20341  0113DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20342  0113DE  22F8               	addwfc	tblptru,f,c
 20343  0113E0                     	endif
 20344  0113E0  0008               	tblrd		*
 20345  0113E2  CFF5 F089          	movff	tablat,i2printf@c
 20346                           
 20347                           ; BSR set to: 0
 20348                           ;doprnt.c: 1523: }
 20349                           
 20350                           ;doprnt.c: 1508: }
 20351                           ;doprnt.c: 1510: break;
 20352  0113E6  D00C               	goto	i2l1176
 20353  0113E8                     i2l12617:
 20354  0113E8  0100               	movlb	0	; () banked
 20355  0113EA  5178               	movf	i2printf@flag& (0+255),w,b
 20356  0113EC  0BC0               	andlw	192
 20357                           
 20358                           ; Switch size 1, requested type "space"
 20359                           ; Number of cases is 3, Range of values is 0 to 192
 20360                           ; switch strategies available:
 20361                           ; Name         Instructions Cycles
 20362                           ; simple_byte           10     6 (average)
 20363                           ;	Chosen strategy is simple_byte
 20364  0113EE  0A00               	xorlw	0	; case 0
 20365  0113F0  B4D8               	btfsc	status,2,c
 20366  0113F2  D77D               	goto	i2l1174
 20367  0113F4  0A80               	xorlw	128	; case 128
 20368  0113F6  B4D8               	btfsc	status,2,c
 20369  0113F8  D7BB               	goto	i2l1177
 20370  0113FA  0A40               	xorlw	64	; case 192
 20371  0113FC  B4D8               	btfsc	status,2,c
 20372  0113FE  D777               	goto	i2l1174
 20373  011400                     i2l1176:
 20374                           
 20375                           ; BSR set to: 0
 20376                           ;doprnt.c: 1524: (putch(c) );
 20377                           
 20378                           ; BSR set to: 0
 20379  011400  5189               	movf	i2printf@c& (0+255),w,b
 20380  011402  ECBC  F0B1         	call	i2_putch
 20381  011406                     i2l1171:
 20382  011406  0100               	movlb	0	; () banked
 20383  011408  0787               	decf	i2printf@prec& (0+255),f,b
 20384  01140A  A0D8               	btfss	status,0,c
 20385  01140C  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20386  01140E  2987               	incf	i2printf@prec& (0+255),w,b
 20387  011410  E1EB               	bnz	i2l12617
 20388  011412  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 20389  011414  A4D8               	btfss	status,2,c
 20390  011416  D7E8               	goto	i2l1173
 20391  011418                     i2u1600_40:
 20392                           
 20393                           ; BSR set to: 0
 20394                           
 20395                           ; BSR set to: 0
 20396  011418  0100               	movlb	0	; () banked
 20397  01141A  5166               	movf	i2printf@f& (0+255),w,b
 20398  01141C  6F68               	movwf	??i2_printf& (0+255),b
 20399  01141E  5167               	movf	(i2printf@f+1)& (0+255),w,b
 20400  011420  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20401  011422  4B66               	infsnz	i2printf@f& (0+255),f,b
 20402  011424  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 20403  011426  C068  FFF6         	movff	??i2_printf,tblptrl
 20404  01142A  C069  FFF7         	movff	??i2_printf+1,tblptrh
 20405  01142E  0E00               	movlw	low (__mediumconst shr (0+16))
 20406  011430  6EF8               	movwf	tblptru,c
 20407  011432  0E0D               	movlw	(high __ramtop+-1)
 20408  011434  64F7               	cpfsgt	tblptrh,c
 20409  011436  D003               	bra	i2u1601_47
 20410  011438  0008               	tblrd		*
 20411  01143A  50F5               	movf	tablat,w,c
 20412  01143C  D005               	bra	i2u1601_40
 20413  01143E                     i2u1601_47:
 20414  01143E  CFF6 FFE1          	movff	tblptrl,fsr1l
 20415  011442  CFF7 FFE2          	movff	tblptrh,fsr1h
 20416  011446  50E7               	movf	indf1,w,c
 20417  011448                     i2u1601_40:
 20418  011448  0100               	movlb	0	; () banked
 20419  01144A  6F89               	movwf	i2printf@c& (0+255),b
 20420  01144C  5189               	movf	i2printf@c& (0+255),w,b
 20421  01144E  B4D8               	btfsc	status,2,c
 20422  011450  0012               	return	
 20423  011452  EF1E  F085         	goto	i2l1091
 20424  011456                     __end_ofi2_printf:
 20425                           	opt stack 0
 20426                           tosu	equ	0xFFF
 20427                           tosh	equ	0xFFE
 20428                           tosl	equ	0xFFD
 20429                           pclatu	equ	0xFFB
 20430                           pclath	equ	0xFFA
 20431                           tblptru	equ	0xFF8
 20432                           tblptrh	equ	0xFF7
 20433                           tblptrl	equ	0xFF6
 20434                           tablat	equ	0xFF5
 20435                           prodh	equ	0xFF4
 20436                           prodl	equ	0xFF3
 20437                           intcon	equ	0xFF2
 20438                           postinc0	equ	0xFEE
 20439                           fsr0h	equ	0xFEA
 20440                           fsr0l	equ	0xFE9
 20441                           wreg	equ	0xFE8
 20442                           indf1	equ	0xFE7
 20443                           postdec1	equ	0xFE5
 20444                           fsr1h	equ	0xFE2
 20445                           fsr1l	equ	0xFE1
 20446                           bsr	equ	0xFE0
 20447                           indf2	equ	0xFDF
 20448                           postinc2	equ	0xFDE
 20449                           postdec2	equ	0xFDD
 20450                           fsr2h	equ	0xFDA
 20451                           fsr2l	equ	0xFD9
 20452                           status	equ	0xFD8
 20453                           
 20454 ;; *************** function i2_scale *****************
 20455 ;; Defined at:
 20456 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  scl             1    wreg     char 
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;  scl             1   59[COMRAM] char 
 20461 ;; Return value:  Size  Location     Type
 20462 ;;                  3   53[COMRAM] char 
 20463 ;; Registers used:
 20464 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20465 ;; Tracked objects:
 20466 ;;		On entry : 0/0
 20467 ;;		On exit  : 0/0
 20468 ;;		Unchanged: 0/0
 20469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20470 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20471 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20473 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20474 ;;Total ram usage:        7 bytes
 20475 ;; Hardware stack levels used:    1
 20476 ;; Hardware stack levels required when called:    2
 20477 ;; This function calls:
 20478 ;;		i2___awdiv
 20479 ;;		i2___awmod
 20480 ;;		i2___ftmul
 20481 ;;		i2___wmul
 20482 ;; This function is called by:
 20483 ;;		i2_printf
 20484 ;; This function uses a non-reentrant model
 20485 ;;
 20486                           
 20487                           	psect	text74
 20488  0125E2                     __ptext74:
 20489                           	opt stack 0
 20490  0125E2                     i2_scale:
 20491                           	opt stack 13
 20492                           
 20493                           ; BSR set to: 0
 20494                           ;incstack = 0
 20495                           ;i2scale@scl stored from wreg
 20496  0125E2  6E3C               	movwf	i2scale@scl,c
 20497                           
 20498                           ;doprnt.c: 428: if(scl < 0) {
 20499  0125E4  AE3C               	btfss	i2scale@scl,7,c
 20500  0125E6  D113               	goto	i2l1080
 20501                           
 20502                           ;doprnt.c: 429: scl = -scl;
 20503  0125E8  6C3C               	negf	i2scale@scl,c
 20504                           
 20505                           ;doprnt.c: 430: if(scl>=110)
 20506  0125EA  503C               	movf	i2scale@scl,w,c
 20507  0125EC  0A80               	xorlw	128
 20508  0125EE  0F12               	addlw	-238
 20509  0125F0  A0D8               	btfss	status,0,c
 20510  0125F2  D09A               	goto	i2l1081
 20511                           
 20512                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 20513  0125F4  0E00               	movlw	0
 20514  0125F6  6E12               	movwf	i2___wmul@multiplicand+1,c
 20515  0125F8  0E03               	movlw	3
 20516  0125FA  6E11               	movwf	i2___wmul@multiplicand,c
 20517  0125FC  0E00               	movlw	0
 20518  0125FE  6E0A               	movwf	i2___awdiv@divisor+1,c
 20519  012600  0E0A               	movlw	10
 20520  012602  6E09               	movwf	i2___awdiv@divisor,c
 20521  012604  0E00               	movlw	0
 20522  012606  6E04               	movwf	i2___awmod@divisor+1,c
 20523  012608  0E64               	movlw	100
 20524  01260A  6E03               	movwf	i2___awmod@divisor,c
 20525  01260C  503C               	movf	i2scale@scl,w,c
 20526  01260E  6E01               	movwf	i2___awmod@dividend,c
 20527  012610  6A02               	clrf	i2___awmod@dividend+1,c
 20528  012612  BE01               	btfsc	i2___awmod@dividend,7,c
 20529  012614  0602               	decf	i2___awmod@dividend+1,f,c
 20530  012616  ECC2  F0AB         	call	i2___awmod	;wreg free
 20531  01261A  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 20532  01261E  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 20533  012622  EC53  F0AA         	call	i2___awdiv	;wreg free
 20534  012626  0E09               	movlw	9
 20535  012628  2407               	addwf	?i2___awdiv,w,c
 20536  01262A  6E0F               	movwf	i2___wmul@multiplier,c
 20537  01262C  0E00               	movlw	0
 20538  01262E  2008               	addwfc	?i2___awdiv+1,w,c
 20539  012630  6E10               	movwf	i2___wmul@multiplier+1,c
 20540  012632  ECC9  F0B0         	call	i2___wmul	;wreg free
 20541  012636  0E78               	movlw	low __npowers_
 20542  012638  240F               	addwf	?i2___wmul,w,c
 20543  01263A  6EF6               	movwf	tblptrl,c
 20544  01263C  0EF3               	movlw	high __npowers_
 20545  01263E  2010               	addwfc	?i2___wmul+1,w,c
 20546  012640  6EF7               	movwf	tblptrh,c
 20547  012642                     	if	1	;There are 3 active tblptr bytes
 20548  012642  6AF8               	clrf	tblptru,c
 20549  012644  0E00               	movlw	low (__mediumconst shr (0+16))
 20550  012646  22F8               	addwfc	tblptru,f,c
 20551  012648                     	endif
 20552  012648  0009               	tblrd		*+
 20553  01264A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20554  01264E  0009               	tblrd		*+
 20555  012650  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20556  012654  000A               	tblrd		*-
 20557  012656  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20558  01265A  0E00               	movlw	0
 20559  01265C  6E0A               	movwf	i2___awdiv@divisor+1,c
 20560  01265E  0E64               	movlw	100
 20561  012660  6E09               	movwf	i2___awdiv@divisor,c
 20562  012662  503C               	movf	i2scale@scl,w,c
 20563  012664  6E07               	movwf	i2___awdiv@dividend,c
 20564  012666  6A08               	clrf	i2___awdiv@dividend+1,c
 20565  012668  BE07               	btfsc	i2___awdiv@dividend,7,c
 20566  01266A  0608               	decf	i2___awdiv@dividend+1,f,c
 20567  01266C  EC53  F0AA         	call	i2___awdiv	;wreg free
 20568  012670  0E12               	movlw	18
 20569  012672  2407               	addwf	?i2___awdiv,w,c
 20570  012674  6E0F               	movwf	i2___wmul@multiplier,c
 20571  012676  0E00               	movlw	0
 20572  012678  2008               	addwfc	?i2___awdiv+1,w,c
 20573  01267A  6E10               	movwf	i2___wmul@multiplier+1,c
 20574  01267C  0E00               	movlw	0
 20575  01267E  6E12               	movwf	i2___wmul@multiplicand+1,c
 20576  012680  0E03               	movlw	3
 20577  012682  6E11               	movwf	i2___wmul@multiplicand,c
 20578  012684  ECC9  F0B0         	call	i2___wmul	;wreg free
 20579  012688  0E78               	movlw	low __npowers_
 20580  01268A  240F               	addwf	?i2___wmul,w,c
 20581  01268C  6EF6               	movwf	tblptrl,c
 20582  01268E  0EF3               	movlw	high __npowers_
 20583  012690  2010               	addwfc	?i2___wmul+1,w,c
 20584  012692  6EF7               	movwf	tblptrh,c
 20585  012694                     	if	1	;There are 3 active tblptr bytes
 20586  012694  6AF8               	clrf	tblptru,c
 20587  012696  0E00               	movlw	low (__mediumconst shr (0+16))
 20588  012698  22F8               	addwfc	tblptru,f,c
 20589  01269A                     	endif
 20590  01269A  0009               	tblrd		*+
 20591  01269C  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20592  0126A0  0009               	tblrd		*+
 20593  0126A2  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20594  0126A6  000A               	tblrd		*-
 20595  0126A8  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20596  0126AC  EC4B  F0A4         	call	i2___ftmul	;wreg free
 20597  0126B0  C027  F039         	movff	?i2___ftmul,i2_scale$3336
 20598  0126B4  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3336+1
 20599  0126B8  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3336+2
 20600                           
 20601                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 20602  0126BC  C039  F027         	movff	i2_scale$3336,i2___ftmul@f1
 20603  0126C0  C03A  F028         	movff	i2_scale$3336+1,i2___ftmul@f1+1
 20604  0126C4  C03B  F029         	movff	i2_scale$3336+2,i2___ftmul@f1+2
 20605  0126C8  0E00               	movlw	0
 20606  0126CA  6E12               	movwf	i2___wmul@multiplicand+1,c
 20607  0126CC  0E03               	movlw	3
 20608  0126CE  6E11               	movwf	i2___wmul@multiplicand,c
 20609  0126D0  0E00               	movlw	0
 20610  0126D2  6E04               	movwf	i2___awmod@divisor+1,c
 20611  0126D4  0E0A               	movlw	10
 20612  0126D6  6E03               	movwf	i2___awmod@divisor,c
 20613  0126D8  503C               	movf	i2scale@scl,w,c
 20614  0126DA  6E01               	movwf	i2___awmod@dividend,c
 20615  0126DC  6A02               	clrf	i2___awmod@dividend+1,c
 20616  0126DE  BE01               	btfsc	i2___awmod@dividend,7,c
 20617  0126E0  0602               	decf	i2___awmod@dividend+1,f,c
 20618  0126E2  ECC2  F0AB         	call	i2___awmod	;wreg free
 20619  0126E6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20620  0126EA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20621  0126EE  ECC9  F0B0         	call	i2___wmul	;wreg free
 20622  0126F2  0E78               	movlw	low __npowers_
 20623  0126F4  240F               	addwf	?i2___wmul,w,c
 20624  0126F6  6EF6               	movwf	tblptrl,c
 20625  0126F8  0EF3               	movlw	high __npowers_
 20626  0126FA  2010               	addwfc	?i2___wmul+1,w,c
 20627  0126FC  6EF7               	movwf	tblptrh,c
 20628  0126FE                     	if	1	;There are 3 active tblptr bytes
 20629  0126FE  6AF8               	clrf	tblptru,c
 20630  012700  0E00               	movlw	low (__mediumconst shr (0+16))
 20631  012702  22F8               	addwfc	tblptru,f,c
 20632  012704                     	endif
 20633  012704  0009               	tblrd		*+
 20634  012706  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20635  01270A  0009               	tblrd		*+
 20636  01270C  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20637  012710  000A               	tblrd		*-
 20638  012712  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20639  012716  EC4B  F0A4         	call	i2___ftmul	;wreg free
 20640  01271A  C027  F036         	movff	?i2___ftmul,?i2_scale
 20641  01271E  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20642  012722  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20643  012726  0012               	return	
 20644  012728                     i2l1081:
 20645                           
 20646                           ;doprnt.c: 432: else if(scl > 10)
 20647  012728  503C               	movf	i2scale@scl,w,c
 20648  01272A  0A80               	xorlw	128
 20649  01272C  0F75               	addlw	-139
 20650  01272E  A0D8               	btfss	status,0,c
 20651  012730  D059               	goto	i2l1084
 20652                           
 20653                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 20654  012732  0E00               	movlw	0
 20655  012734  6E0A               	movwf	i2___awdiv@divisor+1,c
 20656  012736  0E0A               	movlw	10
 20657  012738  6E09               	movwf	i2___awdiv@divisor,c
 20658  01273A  503C               	movf	i2scale@scl,w,c
 20659  01273C  6E07               	movwf	i2___awdiv@dividend,c
 20660  01273E  6A08               	clrf	i2___awdiv@dividend+1,c
 20661  012740  BE07               	btfsc	i2___awdiv@dividend,7,c
 20662  012742  0608               	decf	i2___awdiv@dividend+1,f,c
 20663  012744  EC53  F0AA         	call	i2___awdiv	;wreg free
 20664  012748  0E09               	movlw	9
 20665  01274A  2407               	addwf	?i2___awdiv,w,c
 20666  01274C  6E0F               	movwf	i2___wmul@multiplier,c
 20667  01274E  0E00               	movlw	0
 20668  012750  2008               	addwfc	?i2___awdiv+1,w,c
 20669  012752  6E10               	movwf	i2___wmul@multiplier+1,c
 20670  012754  0E00               	movlw	0
 20671  012756  6E12               	movwf	i2___wmul@multiplicand+1,c
 20672  012758  0E03               	movlw	3
 20673  01275A  6E11               	movwf	i2___wmul@multiplicand,c
 20674  01275C  ECC9  F0B0         	call	i2___wmul	;wreg free
 20675  012760  0E78               	movlw	low __npowers_
 20676  012762  240F               	addwf	?i2___wmul,w,c
 20677  012764  6EF6               	movwf	tblptrl,c
 20678  012766  0EF3               	movlw	high __npowers_
 20679  012768  2010               	addwfc	?i2___wmul+1,w,c
 20680  01276A  6EF7               	movwf	tblptrh,c
 20681  01276C                     	if	1	;There are 3 active tblptr bytes
 20682  01276C  6AF8               	clrf	tblptru,c
 20683  01276E  0E00               	movlw	low (__mediumconst shr (0+16))
 20684  012770  22F8               	addwfc	tblptru,f,c
 20685  012772                     	endif
 20686  012772  0009               	tblrd		*+
 20687  012774  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20688  012778  0009               	tblrd		*+
 20689  01277A  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20690  01277E  000A               	tblrd		*-
 20691  012780  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20692  012784  0E00               	movlw	0
 20693  012786  6E12               	movwf	i2___wmul@multiplicand+1,c
 20694  012788  0E03               	movlw	3
 20695  01278A  6E11               	movwf	i2___wmul@multiplicand,c
 20696  01278C  0E00               	movlw	0
 20697  01278E  6E04               	movwf	i2___awmod@divisor+1,c
 20698  012790  0E0A               	movlw	10
 20699  012792  6E03               	movwf	i2___awmod@divisor,c
 20700  012794  503C               	movf	i2scale@scl,w,c
 20701  012796  6E01               	movwf	i2___awmod@dividend,c
 20702  012798  6A02               	clrf	i2___awmod@dividend+1,c
 20703  01279A  BE01               	btfsc	i2___awmod@dividend,7,c
 20704  01279C  0602               	decf	i2___awmod@dividend+1,f,c
 20705  01279E  ECC2  F0AB         	call	i2___awmod	;wreg free
 20706  0127A2  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20707  0127A6  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20708  0127AA  ECC9  F0B0         	call	i2___wmul	;wreg free
 20709  0127AE  0E78               	movlw	low __npowers_
 20710  0127B0  240F               	addwf	?i2___wmul,w,c
 20711  0127B2  6EF6               	movwf	tblptrl,c
 20712  0127B4  0EF3               	movlw	high __npowers_
 20713  0127B6  2010               	addwfc	?i2___wmul+1,w,c
 20714  0127B8  6EF7               	movwf	tblptrh,c
 20715  0127BA                     	if	1	;There are 3 active tblptr bytes
 20716  0127BA  6AF8               	clrf	tblptru,c
 20717  0127BC  0E00               	movlw	low (__mediumconst shr (0+16))
 20718  0127BE  22F8               	addwfc	tblptru,f,c
 20719  0127C0                     	endif
 20720  0127C0  0009               	tblrd		*+
 20721  0127C2  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20722  0127C6  0009               	tblrd		*+
 20723  0127C8  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20724  0127CC  000A               	tblrd		*-
 20725  0127CE  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20726  0127D2  EC4B  F0A4         	call	i2___ftmul	;wreg free
 20727  0127D6  C027  F036         	movff	?i2___ftmul,?i2_scale
 20728  0127DA  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20729  0127DE  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20730  0127E2  0012               	return	
 20731  0127E4                     i2l1084:
 20732                           
 20733                           ;doprnt.c: 434: return _npowers_[scl];
 20734  0127E4  503C               	movf	i2scale@scl,w,c
 20735  0127E6  0D03               	mullw	3
 20736  0127E8  0E78               	movlw	low __npowers_
 20737  0127EA  24F3               	addwf	prodl,w,c
 20738  0127EC  6EF6               	movwf	tblptrl,c
 20739  0127EE  0EF3               	movlw	high __npowers_
 20740  0127F0  20F4               	addwfc	prodh,w,c
 20741  0127F2  6EF7               	movwf	tblptrh,c
 20742  0127F4                     	if	1	;There are 3 active tblptr bytes
 20743  0127F4  6AF8               	clrf	tblptru,c
 20744  0127F6  0E00               	movlw	low (__mediumconst shr (0+16))
 20745  0127F8  22F8               	addwfc	tblptru,f,c
 20746  0127FA                     	endif
 20747  0127FA  0009               	tblrd		*+
 20748  0127FC  CFF5 F036          	movff	tablat,?i2_scale
 20749  012800  0009               	tblrd		*+
 20750  012802  CFF5 F037          	movff	tablat,?i2_scale+1
 20751  012806  000A               	tblrd		*-
 20752  012808  CFF5 F038          	movff	tablat,?i2_scale+2
 20753  01280C  0012               	return	
 20754  01280E                     i2l1080:
 20755                           
 20756                           ;doprnt.c: 435: }
 20757                           ;doprnt.c: 436: if(scl>=110)
 20758  01280E  503C               	movf	i2scale@scl,w,c
 20759  012810  0A80               	xorlw	128
 20760  012812  0F12               	addlw	-238
 20761  012814  A0D8               	btfss	status,0,c
 20762  012816  D09A               	goto	i2l1085
 20763                           
 20764                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 20765  012818  0E00               	movlw	0
 20766  01281A  6E12               	movwf	i2___wmul@multiplicand+1,c
 20767  01281C  0E03               	movlw	3
 20768  01281E  6E11               	movwf	i2___wmul@multiplicand,c
 20769  012820  0E00               	movlw	0
 20770  012822  6E0A               	movwf	i2___awdiv@divisor+1,c
 20771  012824  0E0A               	movlw	10
 20772  012826  6E09               	movwf	i2___awdiv@divisor,c
 20773  012828  0E00               	movlw	0
 20774  01282A  6E04               	movwf	i2___awmod@divisor+1,c
 20775  01282C  0E64               	movlw	100
 20776  01282E  6E03               	movwf	i2___awmod@divisor,c
 20777  012830  503C               	movf	i2scale@scl,w,c
 20778  012832  6E01               	movwf	i2___awmod@dividend,c
 20779  012834  6A02               	clrf	i2___awmod@dividend+1,c
 20780  012836  BE01               	btfsc	i2___awmod@dividend,7,c
 20781  012838  0602               	decf	i2___awmod@dividend+1,f,c
 20782  01283A  ECC2  F0AB         	call	i2___awmod	;wreg free
 20783  01283E  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 20784  012842  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 20785  012846  EC53  F0AA         	call	i2___awdiv	;wreg free
 20786  01284A  0E09               	movlw	9
 20787  01284C  2407               	addwf	?i2___awdiv,w,c
 20788  01284E  6E0F               	movwf	i2___wmul@multiplier,c
 20789  012850  0E00               	movlw	0
 20790  012852  2008               	addwfc	?i2___awdiv+1,w,c
 20791  012854  6E10               	movwf	i2___wmul@multiplier+1,c
 20792  012856  ECC9  F0B0         	call	i2___wmul	;wreg free
 20793  01285A  0E51               	movlw	low __powers_
 20794  01285C  240F               	addwf	?i2___wmul,w,c
 20795  01285E  6EF6               	movwf	tblptrl,c
 20796  012860  0EF3               	movlw	high __powers_
 20797  012862  2010               	addwfc	?i2___wmul+1,w,c
 20798  012864  6EF7               	movwf	tblptrh,c
 20799  012866                     	if	1	;There are 3 active tblptr bytes
 20800  012866  6AF8               	clrf	tblptru,c
 20801  012868  0E00               	movlw	low (__mediumconst shr (0+16))
 20802  01286A  22F8               	addwfc	tblptru,f,c
 20803  01286C                     	endif
 20804  01286C  0009               	tblrd		*+
 20805  01286E  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20806  012872  0009               	tblrd		*+
 20807  012874  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20808  012878  000A               	tblrd		*-
 20809  01287A  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20810  01287E  0E00               	movlw	0
 20811  012880  6E0A               	movwf	i2___awdiv@divisor+1,c
 20812  012882  0E64               	movlw	100
 20813  012884  6E09               	movwf	i2___awdiv@divisor,c
 20814  012886  503C               	movf	i2scale@scl,w,c
 20815  012888  6E07               	movwf	i2___awdiv@dividend,c
 20816  01288A  6A08               	clrf	i2___awdiv@dividend+1,c
 20817  01288C  BE07               	btfsc	i2___awdiv@dividend,7,c
 20818  01288E  0608               	decf	i2___awdiv@dividend+1,f,c
 20819  012890  EC53  F0AA         	call	i2___awdiv	;wreg free
 20820  012894  0E12               	movlw	18
 20821  012896  2407               	addwf	?i2___awdiv,w,c
 20822  012898  6E0F               	movwf	i2___wmul@multiplier,c
 20823  01289A  0E00               	movlw	0
 20824  01289C  2008               	addwfc	?i2___awdiv+1,w,c
 20825  01289E  6E10               	movwf	i2___wmul@multiplier+1,c
 20826  0128A0  0E00               	movlw	0
 20827  0128A2  6E12               	movwf	i2___wmul@multiplicand+1,c
 20828  0128A4  0E03               	movlw	3
 20829  0128A6  6E11               	movwf	i2___wmul@multiplicand,c
 20830  0128A8  ECC9  F0B0         	call	i2___wmul	;wreg free
 20831  0128AC  0E51               	movlw	low __powers_
 20832  0128AE  240F               	addwf	?i2___wmul,w,c
 20833  0128B0  6EF6               	movwf	tblptrl,c
 20834  0128B2  0EF3               	movlw	high __powers_
 20835  0128B4  2010               	addwfc	?i2___wmul+1,w,c
 20836  0128B6  6EF7               	movwf	tblptrh,c
 20837  0128B8                     	if	1	;There are 3 active tblptr bytes
 20838  0128B8  6AF8               	clrf	tblptru,c
 20839  0128BA  0E00               	movlw	low (__mediumconst shr (0+16))
 20840  0128BC  22F8               	addwfc	tblptru,f,c
 20841  0128BE                     	endif
 20842  0128BE  0009               	tblrd		*+
 20843  0128C0  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20844  0128C4  0009               	tblrd		*+
 20845  0128C6  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20846  0128CA  000A               	tblrd		*-
 20847  0128CC  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20848  0128D0  EC4B  F0A4         	call	i2___ftmul	;wreg free
 20849  0128D4  C027  F039         	movff	?i2___ftmul,i2_scale$3336
 20850  0128D8  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3336+1
 20851  0128DC  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3336+2
 20852                           
 20853                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 20854  0128E0  C039  F027         	movff	i2_scale$3336,i2___ftmul@f1
 20855  0128E4  C03A  F028         	movff	i2_scale$3336+1,i2___ftmul@f1+1
 20856  0128E8  C03B  F029         	movff	i2_scale$3336+2,i2___ftmul@f1+2
 20857  0128EC  0E00               	movlw	0
 20858  0128EE  6E12               	movwf	i2___wmul@multiplicand+1,c
 20859  0128F0  0E03               	movlw	3
 20860  0128F2  6E11               	movwf	i2___wmul@multiplicand,c
 20861  0128F4  0E00               	movlw	0
 20862  0128F6  6E04               	movwf	i2___awmod@divisor+1,c
 20863  0128F8  0E0A               	movlw	10
 20864  0128FA  6E03               	movwf	i2___awmod@divisor,c
 20865  0128FC  503C               	movf	i2scale@scl,w,c
 20866  0128FE  6E01               	movwf	i2___awmod@dividend,c
 20867  012900  6A02               	clrf	i2___awmod@dividend+1,c
 20868  012902  BE01               	btfsc	i2___awmod@dividend,7,c
 20869  012904  0602               	decf	i2___awmod@dividend+1,f,c
 20870  012906  ECC2  F0AB         	call	i2___awmod	;wreg free
 20871  01290A  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20872  01290E  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20873  012912  ECC9  F0B0         	call	i2___wmul	;wreg free
 20874  012916  0E51               	movlw	low __powers_
 20875  012918  240F               	addwf	?i2___wmul,w,c
 20876  01291A  6EF6               	movwf	tblptrl,c
 20877  01291C  0EF3               	movlw	high __powers_
 20878  01291E  2010               	addwfc	?i2___wmul+1,w,c
 20879  012920  6EF7               	movwf	tblptrh,c
 20880  012922                     	if	1	;There are 3 active tblptr bytes
 20881  012922  6AF8               	clrf	tblptru,c
 20882  012924  0E00               	movlw	low (__mediumconst shr (0+16))
 20883  012926  22F8               	addwfc	tblptru,f,c
 20884  012928                     	endif
 20885  012928  0009               	tblrd		*+
 20886  01292A  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20887  01292E  0009               	tblrd		*+
 20888  012930  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20889  012934  000A               	tblrd		*-
 20890  012936  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20891  01293A  EC4B  F0A4         	call	i2___ftmul	;wreg free
 20892  01293E  C027  F036         	movff	?i2___ftmul,?i2_scale
 20893  012942  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20894  012946  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20895  01294A  0012               	return	
 20896  01294C                     i2l1085:
 20897                           
 20898                           ;doprnt.c: 438: else if(scl > 10)
 20899  01294C  503C               	movf	i2scale@scl,w,c
 20900  01294E  0A80               	xorlw	128
 20901  012950  0F75               	addlw	-139
 20902  012952  A0D8               	btfss	status,0,c
 20903  012954  D059               	goto	i2l1087
 20904                           
 20905                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 20906  012956  0E00               	movlw	0
 20907  012958  6E0A               	movwf	i2___awdiv@divisor+1,c
 20908  01295A  0E0A               	movlw	10
 20909  01295C  6E09               	movwf	i2___awdiv@divisor,c
 20910  01295E  503C               	movf	i2scale@scl,w,c
 20911  012960  6E07               	movwf	i2___awdiv@dividend,c
 20912  012962  6A08               	clrf	i2___awdiv@dividend+1,c
 20913  012964  BE07               	btfsc	i2___awdiv@dividend,7,c
 20914  012966  0608               	decf	i2___awdiv@dividend+1,f,c
 20915  012968  EC53  F0AA         	call	i2___awdiv	;wreg free
 20916  01296C  0E09               	movlw	9
 20917  01296E  2407               	addwf	?i2___awdiv,w,c
 20918  012970  6E0F               	movwf	i2___wmul@multiplier,c
 20919  012972  0E00               	movlw	0
 20920  012974  2008               	addwfc	?i2___awdiv+1,w,c
 20921  012976  6E10               	movwf	i2___wmul@multiplier+1,c
 20922  012978  0E00               	movlw	0
 20923  01297A  6E12               	movwf	i2___wmul@multiplicand+1,c
 20924  01297C  0E03               	movlw	3
 20925  01297E  6E11               	movwf	i2___wmul@multiplicand,c
 20926  012980  ECC9  F0B0         	call	i2___wmul	;wreg free
 20927  012984  0E51               	movlw	low __powers_
 20928  012986  240F               	addwf	?i2___wmul,w,c
 20929  012988  6EF6               	movwf	tblptrl,c
 20930  01298A  0EF3               	movlw	high __powers_
 20931  01298C  2010               	addwfc	?i2___wmul+1,w,c
 20932  01298E  6EF7               	movwf	tblptrh,c
 20933  012990                     	if	1	;There are 3 active tblptr bytes
 20934  012990  6AF8               	clrf	tblptru,c
 20935  012992  0E00               	movlw	low (__mediumconst shr (0+16))
 20936  012994  22F8               	addwfc	tblptru,f,c
 20937  012996                     	endif
 20938  012996  0009               	tblrd		*+
 20939  012998  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20940  01299C  0009               	tblrd		*+
 20941  01299E  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20942  0129A2  000A               	tblrd		*-
 20943  0129A4  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20944  0129A8  0E00               	movlw	0
 20945  0129AA  6E12               	movwf	i2___wmul@multiplicand+1,c
 20946  0129AC  0E03               	movlw	3
 20947  0129AE  6E11               	movwf	i2___wmul@multiplicand,c
 20948  0129B0  0E00               	movlw	0
 20949  0129B2  6E04               	movwf	i2___awmod@divisor+1,c
 20950  0129B4  0E0A               	movlw	10
 20951  0129B6  6E03               	movwf	i2___awmod@divisor,c
 20952  0129B8  503C               	movf	i2scale@scl,w,c
 20953  0129BA  6E01               	movwf	i2___awmod@dividend,c
 20954  0129BC  6A02               	clrf	i2___awmod@dividend+1,c
 20955  0129BE  BE01               	btfsc	i2___awmod@dividend,7,c
 20956  0129C0  0602               	decf	i2___awmod@dividend+1,f,c
 20957  0129C2  ECC2  F0AB         	call	i2___awmod	;wreg free
 20958  0129C6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20959  0129CA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20960  0129CE  ECC9  F0B0         	call	i2___wmul	;wreg free
 20961  0129D2  0E51               	movlw	low __powers_
 20962  0129D4  240F               	addwf	?i2___wmul,w,c
 20963  0129D6  6EF6               	movwf	tblptrl,c
 20964  0129D8  0EF3               	movlw	high __powers_
 20965  0129DA  2010               	addwfc	?i2___wmul+1,w,c
 20966  0129DC  6EF7               	movwf	tblptrh,c
 20967  0129DE                     	if	1	;There are 3 active tblptr bytes
 20968  0129DE  6AF8               	clrf	tblptru,c
 20969  0129E0  0E00               	movlw	low (__mediumconst shr (0+16))
 20970  0129E2  22F8               	addwfc	tblptru,f,c
 20971  0129E4                     	endif
 20972  0129E4  0009               	tblrd		*+
 20973  0129E6  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20974  0129EA  0009               	tblrd		*+
 20975  0129EC  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20976  0129F0  000A               	tblrd		*-
 20977  0129F2  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20978  0129F6  EC4B  F0A4         	call	i2___ftmul	;wreg free
 20979  0129FA  C027  F036         	movff	?i2___ftmul,?i2_scale
 20980  0129FE  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20981  012A02  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20982  012A06  0012               	return	
 20983  012A08                     i2l1087:
 20984                           
 20985                           ;doprnt.c: 440: return _powers_[scl];
 20986  012A08  503C               	movf	i2scale@scl,w,c
 20987  012A0A  0D03               	mullw	3
 20988  012A0C  0E51               	movlw	low __powers_
 20989  012A0E  24F3               	addwf	prodl,w,c
 20990  012A10  6EF6               	movwf	tblptrl,c
 20991  012A12  0EF3               	movlw	high __powers_
 20992  012A14  20F4               	addwfc	prodh,w,c
 20993  012A16  6EF7               	movwf	tblptrh,c
 20994  012A18                     	if	1	;There are 3 active tblptr bytes
 20995  012A18  6AF8               	clrf	tblptru,c
 20996  012A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 20997  012A1C  22F8               	addwfc	tblptru,f,c
 20998  012A1E                     	endif
 20999  012A1E  0009               	tblrd		*+
 21000  012A20  CFF5 F036          	movff	tablat,?i2_scale
 21001  012A24  0009               	tblrd		*+
 21002  012A26  CFF5 F037          	movff	tablat,?i2_scale+1
 21003  012A2A  000A               	tblrd		*-
 21004  012A2C  CFF5 F038          	movff	tablat,?i2_scale+2
 21005  012A30  0012               	return	
 21006  012A32                     __end_ofi2_scale:
 21007                           	opt stack 0
 21008                           tosu	equ	0xFFF
 21009                           tosh	equ	0xFFE
 21010                           tosl	equ	0xFFD
 21011                           pclatu	equ	0xFFB
 21012                           pclath	equ	0xFFA
 21013                           tblptru	equ	0xFF8
 21014                           tblptrh	equ	0xFF7
 21015                           tblptrl	equ	0xFF6
 21016                           tablat	equ	0xFF5
 21017                           prodh	equ	0xFF4
 21018                           prodl	equ	0xFF3
 21019                           intcon	equ	0xFF2
 21020                           postinc0	equ	0xFEE
 21021                           fsr0h	equ	0xFEA
 21022                           fsr0l	equ	0xFE9
 21023                           wreg	equ	0xFE8
 21024                           indf1	equ	0xFE7
 21025                           postdec1	equ	0xFE5
 21026                           fsr1h	equ	0xFE2
 21027                           fsr1l	equ	0xFE1
 21028                           bsr	equ	0xFE0
 21029                           indf2	equ	0xFDF
 21030                           postinc2	equ	0xFDE
 21031                           postdec2	equ	0xFDD
 21032                           fsr2h	equ	0xFDA
 21033                           fsr2l	equ	0xFD9
 21034                           status	equ	0xFD8
 21035                           
 21036 ;; *************** function i2_putch *****************
 21037 ;; Defined at:
 21038 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 21039 ;; Parameters:    Size  Location     Type
 21040 ;;  txData          1    wreg     unsigned char 
 21041 ;; Auto vars:     Size  Location     Type
 21042 ;;  txData          1    1[COMRAM] unsigned char 
 21043 ;; Return value:  Size  Location     Type
 21044 ;;                  1    wreg      void 
 21045 ;; Registers used:
 21046 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21047 ;; Tracked objects:
 21048 ;;		On entry : 0/0
 21049 ;;		On exit  : 0/0
 21050 ;;		Unchanged: 0/0
 21051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21056 ;;Total ram usage:        1 bytes
 21057 ;; Hardware stack levels used:    1
 21058 ;; Hardware stack levels required when called:    1
 21059 ;; This function calls:
 21060 ;;		i2_EUSART2_Write
 21061 ;; This function is called by:
 21062 ;;		i2_printf
 21063 ;; This function uses a non-reentrant model
 21064 ;;
 21065                           
 21066                           	psect	text75
 21067  016378                     __ptext75:
 21068                           	opt stack 0
 21069  016378                     i2_putch:
 21070                           	opt stack 14
 21071                           
 21072                           ;incstack = 0
 21073                           ;i2putch@txData stored from wreg
 21074  016378  6E02               	movwf	i2putch@txData,c
 21075                           
 21076                           ;eusart2.c: 182: EUSART2_Write(txData);
 21077  01637A  5002               	movf	i2putch@txData,w,c
 21078  01637C  ECFB  F0AE         	call	i2_EUSART2_Write
 21079  016380  0012               	return		;funcret
 21080  016382                     __end_ofi2_putch:
 21081                           	opt stack 0
 21082                           tosu	equ	0xFFF
 21083                           tosh	equ	0xFFE
 21084                           tosl	equ	0xFFD
 21085                           pclatu	equ	0xFFB
 21086                           pclath	equ	0xFFA
 21087                           tblptru	equ	0xFF8
 21088                           tblptrh	equ	0xFF7
 21089                           tblptrl	equ	0xFF6
 21090                           tablat	equ	0xFF5
 21091                           prodh	equ	0xFF4
 21092                           prodl	equ	0xFF3
 21093                           intcon	equ	0xFF2
 21094                           postinc0	equ	0xFEE
 21095                           fsr0h	equ	0xFEA
 21096                           fsr0l	equ	0xFE9
 21097                           wreg	equ	0xFE8
 21098                           indf1	equ	0xFE7
 21099                           postdec1	equ	0xFE5
 21100                           fsr1h	equ	0xFE2
 21101                           fsr1l	equ	0xFE1
 21102                           bsr	equ	0xFE0
 21103                           indf2	equ	0xFDF
 21104                           postinc2	equ	0xFDE
 21105                           postdec2	equ	0xFDD
 21106                           fsr2h	equ	0xFDA
 21107                           fsr2l	equ	0xFD9
 21108                           status	equ	0xFD8
 21109                           
 21110 ;; *************** function i2_EUSART2_Write *****************
 21111 ;; Defined at:
 21112 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 21113 ;; Parameters:    Size  Location     Type
 21114 ;;  txData          1    wreg     unsigned char 
 21115 ;; Auto vars:     Size  Location     Type
 21116 ;;  txData          1    0[COMRAM] unsigned char 
 21117 ;; Return value:  Size  Location     Type
 21118 ;;                  1    wreg      void 
 21119 ;; Registers used:
 21120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21121 ;; Tracked objects:
 21122 ;;		On entry : 0/0
 21123 ;;		On exit  : 0/0
 21124 ;;		Unchanged: 0/0
 21125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21129 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21130 ;;Total ram usage:        1 bytes
 21131 ;; Hardware stack levels used:    1
 21132 ;; This function calls:
 21133 ;;		Nothing
 21134 ;; This function is called by:
 21135 ;;		i2_putch
 21136 ;; This function uses a non-reentrant model
 21137 ;;
 21138                           
 21139                           	psect	text76
 21140  015DF6                     __ptext76:
 21141                           	opt stack 0
 21142  015DF6                     i2_EUSART2_Write:
 21143                           	opt stack 14
 21144                           
 21145                           ;incstack = 0
 21146                           ;i2EUSART2_Write@txData stored from wreg
 21147  015DF6  6E01               	movwf	i2EUSART2_Write@txData,c
 21148                           
 21149                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 21150  015DF8  D001               	goto	i2l374
 21151  015DFA                     i2l375:
 21152                           
 21153                           ; BSR set to: 1
 21154  015DFA  0004               	clrwdt		;# 
 21155  015DFC                     i2l374:
 21156  015DFC  0101               	movlb	1	; () banked
 21157  015DFE  51DB               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 21158  015E00  B4D8               	btfsc	status,2,c
 21159  015E02  D7FB               	goto	i2l375
 21160                           
 21161                           ; BSR set to: 1
 21162                           ;eusart2.c: 156: }
 21163                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 21164  015E04  010E               	movlb	14	; () banked
 21165  015E06  BD2C               	btfsc	44,6,b	;volatile
 21166  015E08  D003               	goto	i2l377
 21167                           
 21168                           ; BSR set to: 14
 21169                           ;eusart2.c: 159: {
 21170                           ;eusart2.c: 160: TX2REG = txData;
 21171  015E0A  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 21172                           
 21173                           ;eusart2.c: 161: }
 21174  015E0E  D013               	goto	i2l378
 21175  015E10                     i2l377:
 21176                           
 21177                           ; BSR set to: 14
 21178                           ;eusart2.c: 162: else
 21179                           ;eusart2.c: 163: {
 21180                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 21181  015E10  9D2C               	bcf	44,6,b	;volatile
 21182                           
 21183                           ; BSR set to: 14
 21184                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 21185  015E12  0101               	movlb	1	; () banked
 21186  015E14  51DD               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 21187  015E16  0D01               	mullw	1
 21188  015E18  0E00               	movlw	low _eusart2TxBuffer
 21189  015E1A  24F3               	addwf	prodl,w,c
 21190  015E1C  6ED9               	movwf	fsr2l,c
 21191  015E1E  0E02               	movlw	high _eusart2TxBuffer
 21192  015E20  20F4               	addwfc	prodh,w,c
 21193  015E22  6EDA               	movwf	fsr2h,c
 21194  015E24  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 21195                           
 21196                           ; BSR set to: 1
 21197  015E28  2BDD               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 21198                           
 21199                           ; BSR set to: 1
 21200                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 21201  015E2A  0E7F               	movlw	127
 21202  015E2C  65DD               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 21203  015E2E  D002               	goto	i2l379
 21204                           
 21205                           ; BSR set to: 1
 21206                           ;eusart2.c: 167: {
 21207                           ;eusart2.c: 168: eusart2TxHead = 0;
 21208  015E30  0E00               	movlw	0
 21209  015E32  6FDD               	movwf	_eusart2TxHead& (0+255),b	;volatile
 21210  015E34                     i2l379:
 21211                           
 21212                           ; BSR set to: 1
 21213                           ;eusart2.c: 169: }
 21214                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 21215                           
 21216                           ; BSR set to: 1
 21217  015E34  07DB               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 21218  015E36                     i2l378:
 21219                           
 21220                           ;eusart2.c: 171: }
 21221                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 21222                           
 21223                           ; BSR set to: 1
 21224  015E36  010E               	movlb	14	; () banked
 21225  015E38  8D2C               	bsf	44,6,b	;volatile
 21226                           
 21227                           ; BSR set to: 14
 21228  015E3A  0012               	return		;funcret
 21229  015E3C                     __end_ofi2_EUSART2_Write:
 21230                           	opt stack 0
 21231                           tosu	equ	0xFFF
 21232                           tosh	equ	0xFFE
 21233                           tosl	equ	0xFFD
 21234                           pclatu	equ	0xFFB
 21235                           pclath	equ	0xFFA
 21236                           tblptru	equ	0xFF8
 21237                           tblptrh	equ	0xFF7
 21238                           tblptrl	equ	0xFF6
 21239                           tablat	equ	0xFF5
 21240                           prodh	equ	0xFF4
 21241                           prodl	equ	0xFF3
 21242                           intcon	equ	0xFF2
 21243                           postinc0	equ	0xFEE
 21244                           fsr0h	equ	0xFEA
 21245                           fsr0l	equ	0xFE9
 21246                           wreg	equ	0xFE8
 21247                           indf1	equ	0xFE7
 21248                           postdec1	equ	0xFE5
 21249                           fsr1h	equ	0xFE2
 21250                           fsr1l	equ	0xFE1
 21251                           bsr	equ	0xFE0
 21252                           indf2	equ	0xFDF
 21253                           postinc2	equ	0xFDE
 21254                           postdec2	equ	0xFDD
 21255                           fsr2h	equ	0xFDA
 21256                           fsr2l	equ	0xFD9
 21257                           status	equ	0xFD8
 21258                           
 21259 ;; *************** function i2_isdigit *****************
 21260 ;; Defined at:
 21261 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 21262 ;; Parameters:    Size  Location     Type
 21263 ;;  c               1    wreg     unsigned char 
 21264 ;; Auto vars:     Size  Location     Type
 21265 ;;  c               1    2[COMRAM] unsigned char 
 21266 ;; Return value:  Size  Location     Type
 21267 ;;		None               void
 21268 ;; Registers used:
 21269 ;;		wreg, status,2, status,0
 21270 ;; Tracked objects:
 21271 ;;		On entry : 0/0
 21272 ;;		On exit  : 0/0
 21273 ;;		Unchanged: 0/0
 21274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21276 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21277 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21278 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21279 ;;Total ram usage:        3 bytes
 21280 ;; Hardware stack levels used:    1
 21281 ;; This function calls:
 21282 ;;		Nothing
 21283 ;; This function is called by:
 21284 ;;		i2_printf
 21285 ;; This function uses a non-reentrant model
 21286 ;;
 21287                           
 21288                           	psect	text77
 21289  016222                     __ptext77:
 21290                           	opt stack 0
 21291  016222                     i2_isdigit:
 21292                           	opt stack 15
 21293                           
 21294                           ; BSR set to: 14
 21295                           ;incstack = 0
 21296                           ;i2isdigit@c stored from wreg
 21297  016222  6E03               	movwf	i2isdigit@c,c
 21298  016224  0E00               	movlw	0
 21299  016226  6E02               	movwf	i2_isdigit$2497,c
 21300  016228  0E3A               	movlw	58
 21301  01622A  6003               	cpfslt	i2isdigit@c,c
 21302  01622C  D005               	goto	i2l1608
 21303  01622E  0E2F               	movlw	47
 21304  016230  6403               	cpfsgt	i2isdigit@c,c
 21305  016232  D002               	goto	i2l1608
 21306  016234  0E01               	movlw	1
 21307  016236  6E02               	movwf	i2_isdigit$2497,c
 21308  016238                     i2l1608:
 21309  016238  C002  F001         	movff	i2_isdigit$2497,??i2_isdigit
 21310  01623C  3001               	rrcf	??i2_isdigit,w,c
 21311  01623E  0012               	return	
 21312  016240                     __end_ofi2_isdigit:
 21313                           	opt stack 0
 21314                           tosu	equ	0xFFF
 21315                           tosh	equ	0xFFE
 21316                           tosl	equ	0xFFD
 21317                           pclatu	equ	0xFFB
 21318                           pclath	equ	0xFFA
 21319                           tblptru	equ	0xFF8
 21320                           tblptrh	equ	0xFF7
 21321                           tblptrl	equ	0xFF6
 21322                           tablat	equ	0xFF5
 21323                           prodh	equ	0xFF4
 21324                           prodl	equ	0xFF3
 21325                           intcon	equ	0xFF2
 21326                           postinc0	equ	0xFEE
 21327                           fsr0h	equ	0xFEA
 21328                           fsr0l	equ	0xFE9
 21329                           wreg	equ	0xFE8
 21330                           indf1	equ	0xFE7
 21331                           postdec1	equ	0xFE5
 21332                           fsr1h	equ	0xFE2
 21333                           fsr1l	equ	0xFE1
 21334                           bsr	equ	0xFE0
 21335                           indf2	equ	0xFDF
 21336                           postinc2	equ	0xFDE
 21337                           postdec2	equ	0xFDD
 21338                           fsr2h	equ	0xFDA
 21339                           fsr2l	equ	0xFD9
 21340                           status	equ	0xFD8
 21341                           
 21342 ;; *************** function i2_fround *****************
 21343 ;; Defined at:
 21344 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 21345 ;; Parameters:    Size  Location     Type
 21346 ;;  prec            1    wreg     unsigned char 
 21347 ;; Auto vars:     Size  Location     Type
 21348 ;;  prec            1   62[COMRAM] unsigned char 
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  3   53[COMRAM] unsigned char 
 21351 ;; Registers used:
 21352 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21353 ;; Tracked objects:
 21354 ;;		On entry : 0/0
 21355 ;;		On exit  : 0/0
 21356 ;;		Unchanged: 0/0
 21357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21358 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21359 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21361 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21362 ;;Total ram usage:       10 bytes
 21363 ;; Hardware stack levels used:    1
 21364 ;; Hardware stack levels required when called:    2
 21365 ;; This function calls:
 21366 ;;		i2___awdiv
 21367 ;;		i2___awmod
 21368 ;;		i2___ftmul
 21369 ;;		i2___wmul
 21370 ;; This function is called by:
 21371 ;;		i2_printf
 21372 ;; This function uses a non-reentrant model
 21373 ;;
 21374                           
 21375                           	psect	text78
 21376  01302E                     __ptext78:
 21377                           	opt stack 0
 21378  01302E                     i2_fround:
 21379                           	opt stack 13
 21380                           
 21381                           ;incstack = 0
 21382                           ;i2fround@prec stored from wreg
 21383  01302E  6E3F               	movwf	i2fround@prec,c
 21384                           
 21385                           ;doprnt.c: 413: if(prec>=110)
 21386  013030  0E6D               	movlw	109
 21387  013032  643F               	cpfsgt	i2fround@prec,c
 21388  013034  D0A8               	goto	i2l1074
 21389                           
 21390                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21391  013036  0E00               	movlw	0
 21392  013038  6E12               	movwf	i2___wmul@multiplicand+1,c
 21393  01303A  0E03               	movlw	3
 21394  01303C  6E11               	movwf	i2___wmul@multiplicand,c
 21395  01303E  0E00               	movlw	0
 21396  013040  6E0A               	movwf	i2___awdiv@divisor+1,c
 21397  013042  0E0A               	movlw	10
 21398  013044  6E09               	movwf	i2___awdiv@divisor,c
 21399  013046  0E00               	movlw	0
 21400  013048  6E04               	movwf	i2___awmod@divisor+1,c
 21401  01304A  0E64               	movlw	100
 21402  01304C  6E03               	movwf	i2___awmod@divisor,c
 21403  01304E  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21404  013052  6A02               	clrf	i2___awmod@dividend+1,c
 21405  013054  ECC2  F0AB         	call	i2___awmod	;wreg free
 21406  013058  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 21407  01305C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 21408  013060  EC53  F0AA         	call	i2___awdiv	;wreg free
 21409  013064  0E09               	movlw	9
 21410  013066  2407               	addwf	?i2___awdiv,w,c
 21411  013068  6E0F               	movwf	i2___wmul@multiplier,c
 21412  01306A  0E00               	movlw	0
 21413  01306C  2008               	addwfc	?i2___awdiv+1,w,c
 21414  01306E  6E10               	movwf	i2___wmul@multiplier+1,c
 21415  013070  ECC9  F0B0         	call	i2___wmul	;wreg free
 21416  013074  0E78               	movlw	low __npowers_
 21417  013076  240F               	addwf	?i2___wmul,w,c
 21418  013078  6EF6               	movwf	tblptrl,c
 21419  01307A  0EF3               	movlw	high __npowers_
 21420  01307C  2010               	addwfc	?i2___wmul+1,w,c
 21421  01307E  6EF7               	movwf	tblptrh,c
 21422  013080                     	if	1	;There are 3 active tblptr bytes
 21423  013080  6AF8               	clrf	tblptru,c
 21424  013082  0E00               	movlw	low (__mediumconst shr (0+16))
 21425  013084  22F8               	addwfc	tblptru,f,c
 21426  013086                     	endif
 21427  013086  0009               	tblrd		*+
 21428  013088  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21429  01308C  0009               	tblrd		*+
 21430  01308E  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21431  013092  000A               	tblrd		*-
 21432  013094  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21433  013098  0E00               	movlw	0
 21434  01309A  6E0A               	movwf	i2___awdiv@divisor+1,c
 21435  01309C  0E64               	movlw	100
 21436  01309E  6E09               	movwf	i2___awdiv@divisor,c
 21437  0130A0  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 21438  0130A4  6A08               	clrf	i2___awdiv@dividend+1,c
 21439  0130A6  EC53  F0AA         	call	i2___awdiv	;wreg free
 21440  0130AA  0E12               	movlw	18
 21441  0130AC  2407               	addwf	?i2___awdiv,w,c
 21442  0130AE  6E0F               	movwf	i2___wmul@multiplier,c
 21443  0130B0  0E00               	movlw	0
 21444  0130B2  2008               	addwfc	?i2___awdiv+1,w,c
 21445  0130B4  6E10               	movwf	i2___wmul@multiplier+1,c
 21446  0130B6  0E00               	movlw	0
 21447  0130B8  6E12               	movwf	i2___wmul@multiplicand+1,c
 21448  0130BA  0E03               	movlw	3
 21449  0130BC  6E11               	movwf	i2___wmul@multiplicand,c
 21450  0130BE  ECC9  F0B0         	call	i2___wmul	;wreg free
 21451  0130C2  0E78               	movlw	low __npowers_
 21452  0130C4  240F               	addwf	?i2___wmul,w,c
 21453  0130C6  6EF6               	movwf	tblptrl,c
 21454  0130C8  0EF3               	movlw	high __npowers_
 21455  0130CA  2010               	addwfc	?i2___wmul+1,w,c
 21456  0130CC  6EF7               	movwf	tblptrh,c
 21457  0130CE                     	if	1	;There are 3 active tblptr bytes
 21458  0130CE  6AF8               	clrf	tblptru,c
 21459  0130D0  0E00               	movlw	low (__mediumconst shr (0+16))
 21460  0130D2  22F8               	addwfc	tblptru,f,c
 21461  0130D4                     	endif
 21462  0130D4  0009               	tblrd		*+
 21463  0130D6  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21464  0130DA  0009               	tblrd		*+
 21465  0130DC  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21466  0130E0  000A               	tblrd		*-
 21467  0130E2  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21468  0130E6  EC4B  F0A4         	call	i2___ftmul	;wreg free
 21469  0130EA  C027  F03C         	movff	?i2___ftmul,i2_fround$3334
 21470  0130EE  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3334+1
 21471  0130F2  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3334+2
 21472                           
 21473                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21474  0130F6  0E00               	movlw	0
 21475  0130F8  6E12               	movwf	i2___wmul@multiplicand+1,c
 21476  0130FA  0E03               	movlw	3
 21477  0130FC  6E11               	movwf	i2___wmul@multiplicand,c
 21478  0130FE  0E00               	movlw	0
 21479  013100  6E04               	movwf	i2___awmod@divisor+1,c
 21480  013102  0E0A               	movlw	10
 21481  013104  6E03               	movwf	i2___awmod@divisor,c
 21482  013106  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21483  01310A  6A02               	clrf	i2___awmod@dividend+1,c
 21484  01310C  ECC2  F0AB         	call	i2___awmod	;wreg free
 21485  013110  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21486  013114  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21487  013118  ECC9  F0B0         	call	i2___wmul	;wreg free
 21488  01311C  0E78               	movlw	low __npowers_
 21489  01311E  240F               	addwf	?i2___wmul,w,c
 21490  013120  6EF6               	movwf	tblptrl,c
 21491  013122  0EF3               	movlw	high __npowers_
 21492  013124  2010               	addwfc	?i2___wmul+1,w,c
 21493  013126  6EF7               	movwf	tblptrh,c
 21494  013128                     	if	1	;There are 3 active tblptr bytes
 21495  013128  6AF8               	clrf	tblptru,c
 21496  01312A  0E00               	movlw	low (__mediumconst shr (0+16))
 21497  01312C  22F8               	addwfc	tblptru,f,c
 21498  01312E                     	endif
 21499  01312E  0009               	tblrd		*+
 21500  013130  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21501  013134  0009               	tblrd		*+
 21502  013136  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21503  01313A  000A               	tblrd		*-
 21504  01313C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21505  013140  C03C  F027         	movff	i2_fround$3334,i2___ftmul@f1
 21506  013144  C03D  F028         	movff	i2_fround$3334+1,i2___ftmul@f1+1
 21507  013148  C03E  F029         	movff	i2_fround$3334+2,i2___ftmul@f1+2
 21508  01314C  EC4B  F0A4         	call	i2___ftmul	;wreg free
 21509  013150  C027  F039         	movff	?i2___ftmul,i2_fround$3335
 21510  013154  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3335+1
 21511  013158  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3335+2
 21512                           
 21513                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21514  01315C  C039  F027         	movff	i2_fround$3335,i2___ftmul@f1
 21515  013160  C03A  F028         	movff	i2_fround$3335+1,i2___ftmul@f1+1
 21516  013164  C03B  F029         	movff	i2_fround$3335+2,i2___ftmul@f1+2
 21517  013168  0E00               	movlw	0
 21518  01316A  6E2A               	movwf	i2___ftmul@f2,c
 21519  01316C  0E00               	movlw	0
 21520  01316E  6E2B               	movwf	i2___ftmul@f2+1,c
 21521  013170  0E3F               	movlw	63
 21522  013172  6E2C               	movwf	i2___ftmul@f2+2,c
 21523  013174  EC4B  F0A4         	call	i2___ftmul	;wreg free
 21524  013178  C027  F036         	movff	?i2___ftmul,?i2_fround
 21525  01317C  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21526  013180  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21527  013184  0012               	return	
 21528  013186                     i2l1074:
 21529                           
 21530                           ;doprnt.c: 415: else if(prec > 10)
 21531  013186  0E0A               	movlw	10
 21532  013188  643F               	cpfsgt	i2fround@prec,c
 21533  01318A  D069               	goto	i2l1077
 21534                           
 21535                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 21536  01318C  0E00               	movlw	0
 21537  01318E  6E12               	movwf	i2___wmul@multiplicand+1,c
 21538  013190  0E03               	movlw	3
 21539  013192  6E11               	movwf	i2___wmul@multiplicand,c
 21540  013194  0E00               	movlw	0
 21541  013196  6E04               	movwf	i2___awmod@divisor+1,c
 21542  013198  0E0A               	movlw	10
 21543  01319A  6E03               	movwf	i2___awmod@divisor,c
 21544  01319C  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21545  0131A0  6A02               	clrf	i2___awmod@dividend+1,c
 21546  0131A2  ECC2  F0AB         	call	i2___awmod	;wreg free
 21547  0131A6  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21548  0131AA  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21549  0131AE  ECC9  F0B0         	call	i2___wmul	;wreg free
 21550  0131B2  0E78               	movlw	low __npowers_
 21551  0131B4  240F               	addwf	?i2___wmul,w,c
 21552  0131B6  6EF6               	movwf	tblptrl,c
 21553  0131B8  0EF3               	movlw	high __npowers_
 21554  0131BA  2010               	addwfc	?i2___wmul+1,w,c
 21555  0131BC  6EF7               	movwf	tblptrh,c
 21556  0131BE                     	if	1	;There are 3 active tblptr bytes
 21557  0131BE  6AF8               	clrf	tblptru,c
 21558  0131C0  0E00               	movlw	low (__mediumconst shr (0+16))
 21559  0131C2  22F8               	addwfc	tblptru,f,c
 21560  0131C4                     	endif
 21561  0131C4  0009               	tblrd		*+
 21562  0131C6  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21563  0131CA  0009               	tblrd		*+
 21564  0131CC  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21565  0131D0  000A               	tblrd		*-
 21566  0131D2  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21567  0131D6  0E00               	movlw	0
 21568  0131D8  6E0A               	movwf	i2___awdiv@divisor+1,c
 21569  0131DA  0E0A               	movlw	10
 21570  0131DC  6E09               	movwf	i2___awdiv@divisor,c
 21571  0131DE  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 21572  0131E2  6A08               	clrf	i2___awdiv@dividend+1,c
 21573  0131E4  EC53  F0AA         	call	i2___awdiv	;wreg free
 21574  0131E8  0E09               	movlw	9
 21575  0131EA  2407               	addwf	?i2___awdiv,w,c
 21576  0131EC  6E0F               	movwf	i2___wmul@multiplier,c
 21577  0131EE  0E00               	movlw	0
 21578  0131F0  2008               	addwfc	?i2___awdiv+1,w,c
 21579  0131F2  6E10               	movwf	i2___wmul@multiplier+1,c
 21580  0131F4  0E00               	movlw	0
 21581  0131F6  6E12               	movwf	i2___wmul@multiplicand+1,c
 21582  0131F8  0E03               	movlw	3
 21583  0131FA  6E11               	movwf	i2___wmul@multiplicand,c
 21584  0131FC  ECC9  F0B0         	call	i2___wmul	;wreg free
 21585  013200  0E78               	movlw	low __npowers_
 21586  013202  240F               	addwf	?i2___wmul,w,c
 21587  013204  6EF6               	movwf	tblptrl,c
 21588  013206  0EF3               	movlw	high __npowers_
 21589  013208  2010               	addwfc	?i2___wmul+1,w,c
 21590  01320A  6EF7               	movwf	tblptrh,c
 21591  01320C                     	if	1	;There are 3 active tblptr bytes
 21592  01320C  6AF8               	clrf	tblptru,c
 21593  01320E  0E00               	movlw	low (__mediumconst shr (0+16))
 21594  013210  22F8               	addwfc	tblptru,f,c
 21595  013212                     	endif
 21596  013212  0009               	tblrd		*+
 21597  013214  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21598  013218  0009               	tblrd		*+
 21599  01321A  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21600  01321E  000A               	tblrd		*-
 21601  013220  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21602  013224  EC4B  F0A4         	call	i2___ftmul	;wreg free
 21603  013228  C027  F03C         	movff	?i2___ftmul,i2_fround$3334
 21604  01322C  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3334+1
 21605  013230  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3334+2
 21606                           
 21607                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 21608  013234  C03C  F027         	movff	i2_fround$3334,i2___ftmul@f1
 21609  013238  C03D  F028         	movff	i2_fround$3334+1,i2___ftmul@f1+1
 21610  01323C  C03E  F029         	movff	i2_fround$3334+2,i2___ftmul@f1+2
 21611  013240  0E00               	movlw	0
 21612  013242  6E2A               	movwf	i2___ftmul@f2,c
 21613  013244  0E00               	movlw	0
 21614  013246  6E2B               	movwf	i2___ftmul@f2+1,c
 21615  013248  0E3F               	movlw	63
 21616  01324A  6E2C               	movwf	i2___ftmul@f2+2,c
 21617  01324C  EC4B  F0A4         	call	i2___ftmul	;wreg free
 21618  013250  C027  F036         	movff	?i2___ftmul,?i2_fround
 21619  013254  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21620  013258  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21621  01325C  0012               	return	
 21622  01325E                     i2l1077:
 21623                           
 21624                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 21625  01325E  503F               	movf	i2fround@prec,w,c
 21626  013260  0D03               	mullw	3
 21627  013262  0E78               	movlw	low __npowers_
 21628  013264  24F3               	addwf	prodl,w,c
 21629  013266  6EF6               	movwf	tblptrl,c
 21630  013268  0EF3               	movlw	high __npowers_
 21631  01326A  20F4               	addwfc	prodh,w,c
 21632  01326C  6EF7               	movwf	tblptrh,c
 21633  01326E                     	if	1	;There are 3 active tblptr bytes
 21634  01326E  6AF8               	clrf	tblptru,c
 21635  013270  0E00               	movlw	low (__mediumconst shr (0+16))
 21636  013272  22F8               	addwfc	tblptru,f,c
 21637  013274                     	endif
 21638  013274  0009               	tblrd		*+
 21639  013276  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21640  01327A  0009               	tblrd		*+
 21641  01327C  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21642  013280  000A               	tblrd		*-
 21643  013282  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21644  013286  0E00               	movlw	0
 21645  013288  6E2A               	movwf	i2___ftmul@f2,c
 21646  01328A  0E00               	movlw	0
 21647  01328C  6E2B               	movwf	i2___ftmul@f2+1,c
 21648  01328E  0E3F               	movlw	63
 21649  013290  6E2C               	movwf	i2___ftmul@f2+2,c
 21650  013292  EC4B  F0A4         	call	i2___ftmul	;wreg free
 21651  013296  C027  F036         	movff	?i2___ftmul,?i2_fround
 21652  01329A  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21653  01329E  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21654  0132A2  0012               	return	
 21655  0132A4                     __end_ofi2_fround:
 21656                           	opt stack 0
 21657                           tosu	equ	0xFFF
 21658                           tosh	equ	0xFFE
 21659                           tosl	equ	0xFFD
 21660                           pclatu	equ	0xFFB
 21661                           pclath	equ	0xFFA
 21662                           tblptru	equ	0xFF8
 21663                           tblptrh	equ	0xFF7
 21664                           tblptrl	equ	0xFF6
 21665                           tablat	equ	0xFF5
 21666                           prodh	equ	0xFF4
 21667                           prodl	equ	0xFF3
 21668                           intcon	equ	0xFF2
 21669                           postinc0	equ	0xFEE
 21670                           fsr0h	equ	0xFEA
 21671                           fsr0l	equ	0xFE9
 21672                           wreg	equ	0xFE8
 21673                           indf1	equ	0xFE7
 21674                           postdec1	equ	0xFE5
 21675                           fsr1h	equ	0xFE2
 21676                           fsr1l	equ	0xFE1
 21677                           bsr	equ	0xFE0
 21678                           indf2	equ	0xFDF
 21679                           postinc2	equ	0xFDE
 21680                           postdec2	equ	0xFDD
 21681                           fsr2h	equ	0xFDA
 21682                           fsr2l	equ	0xFD9
 21683                           status	equ	0xFD8
 21684                           
 21685 ;; *************** function i2___awmod *****************
 21686 ;; Defined at:
 21687 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 21688 ;; Parameters:    Size  Location     Type
 21689 ;;  dividend        2    0[COMRAM] int 
 21690 ;;  divisor         2    2[COMRAM] int 
 21691 ;; Auto vars:     Size  Location     Type
 21692 ;;  __awmod         1    5[COMRAM] unsigned char 
 21693 ;;  __awmod         1    4[COMRAM] unsigned char 
 21694 ;; Return value:  Size  Location     Type
 21695 ;;                  2    0[COMRAM] int 
 21696 ;; Registers used:
 21697 ;;		wreg, status,2, status,0
 21698 ;; Tracked objects:
 21699 ;;		On entry : 0/0
 21700 ;;		On exit  : 0/0
 21701 ;;		Unchanged: 0/0
 21702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21703 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21704 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21706 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21707 ;;Total ram usage:        6 bytes
 21708 ;; Hardware stack levels used:    1
 21709 ;; This function calls:
 21710 ;;		Nothing
 21711 ;; This function is called by:
 21712 ;;		i2_fround
 21713 ;;		i2_scale
 21714 ;; This function uses a non-reentrant model
 21715 ;;
 21716                           
 21717                           	psect	text79
 21718  015784                     __ptext79:
 21719                           	opt stack 0
 21720  015784                     i2___awmod:
 21721                           	opt stack 14
 21722                           
 21723                           ;incstack = 0
 21724  015784  0E00               	movlw	0
 21725  015786  6E06               	movwf	i2___awmod@sign,c
 21726  015788  AE02               	btfss	i2___awmod@dividend+1,7,c
 21727  01578A  D006               	goto	i2l1413
 21728  01578C  6C01               	negf	i2___awmod@dividend,c
 21729  01578E  1E02               	comf	i2___awmod@dividend+1,f,c
 21730  015790  B0D8               	btfsc	status,0,c
 21731  015792  2A02               	incf	i2___awmod@dividend+1,f,c
 21732  015794  0E01               	movlw	1
 21733  015796  6E06               	movwf	i2___awmod@sign,c
 21734  015798                     i2l1413:
 21735  015798  AE04               	btfss	i2___awmod@divisor+1,7,c
 21736  01579A  D004               	goto	i2l1414
 21737  01579C  6C03               	negf	i2___awmod@divisor,c
 21738  01579E  1E04               	comf	i2___awmod@divisor+1,f,c
 21739  0157A0  B0D8               	btfsc	status,0,c
 21740  0157A2  2A04               	incf	i2___awmod@divisor+1,f,c
 21741  0157A4                     i2l1414:
 21742  0157A4  5003               	movf	i2___awmod@divisor,w,c
 21743  0157A6  1004               	iorwf	i2___awmod@divisor+1,w,c
 21744  0157A8  B4D8               	btfsc	status,2,c
 21745  0157AA  D018               	goto	i2l1421
 21746  0157AC  0E01               	movlw	1
 21747  0157AE  6E05               	movwf	i2___awmod@counter,c
 21748  0157B0  D004               	goto	i2l1416
 21749  0157B2  90D8               	bcf	status,0,c
 21750  0157B4  3603               	rlcf	i2___awmod@divisor,f,c
 21751  0157B6  3604               	rlcf	i2___awmod@divisor+1,f,c
 21752  0157B8  2A05               	incf	i2___awmod@counter,f,c
 21753  0157BA                     i2l1416:
 21754  0157BA  AE04               	btfss	i2___awmod@divisor+1,7,c
 21755  0157BC  D7FA               	goto	i2l1417
 21756  0157BE                     i2u1105_40:
 21757  0157BE  5003               	movf	i2___awmod@divisor,w,c
 21758  0157C0  5C01               	subwf	i2___awmod@dividend,w,c
 21759  0157C2  5004               	movf	i2___awmod@divisor+1,w,c
 21760  0157C4  5802               	subwfb	i2___awmod@dividend+1,w,c
 21761  0157C6  A0D8               	btfss	status,0,c
 21762  0157C8  D004               	goto	i2l1420
 21763  0157CA  5003               	movf	i2___awmod@divisor,w,c
 21764  0157CC  5E01               	subwf	i2___awmod@dividend,f,c
 21765  0157CE  5004               	movf	i2___awmod@divisor+1,w,c
 21766  0157D0  5A02               	subwfb	i2___awmod@dividend+1,f,c
 21767  0157D2                     i2l1420:
 21768  0157D2  90D8               	bcf	status,0,c
 21769  0157D4  3204               	rrcf	i2___awmod@divisor+1,f,c
 21770  0157D6  3203               	rrcf	i2___awmod@divisor,f,c
 21771  0157D8  2E05               	decfsz	i2___awmod@counter,f,c
 21772  0157DA  D7F1               	goto	i2u1105_40
 21773  0157DC                     i2l1421:
 21774  0157DC  5006               	movf	i2___awmod@sign,w,c
 21775  0157DE  B4D8               	btfsc	status,2,c
 21776  0157E0  D004               	goto	i2l1422
 21777  0157E2  6C01               	negf	i2___awmod@dividend,c
 21778  0157E4  1E02               	comf	i2___awmod@dividend+1,f,c
 21779  0157E6  B0D8               	btfsc	status,0,c
 21780  0157E8  2A02               	incf	i2___awmod@dividend+1,f,c
 21781  0157EA                     i2l1422:
 21782  0157EA  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 21783  0157EE  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 21784  0157F2  0012               	return	
 21785  0157F4                     __end_ofi2___awmod:
 21786                           	opt stack 0
 21787                           tosu	equ	0xFFF
 21788                           tosh	equ	0xFFE
 21789                           tosl	equ	0xFFD
 21790                           pclatu	equ	0xFFB
 21791                           pclath	equ	0xFFA
 21792                           tblptru	equ	0xFF8
 21793                           tblptrh	equ	0xFF7
 21794                           tblptrl	equ	0xFF6
 21795                           tablat	equ	0xFF5
 21796                           prodh	equ	0xFF4
 21797                           prodl	equ	0xFF3
 21798                           intcon	equ	0xFF2
 21799                           postinc0	equ	0xFEE
 21800                           fsr0h	equ	0xFEA
 21801                           fsr0l	equ	0xFE9
 21802                           wreg	equ	0xFE8
 21803                           indf1	equ	0xFE7
 21804                           postdec1	equ	0xFE5
 21805                           fsr1h	equ	0xFE2
 21806                           fsr1l	equ	0xFE1
 21807                           bsr	equ	0xFE0
 21808                           indf2	equ	0xFDF
 21809                           postinc2	equ	0xFDE
 21810                           postdec2	equ	0xFDD
 21811                           fsr2h	equ	0xFDA
 21812                           fsr2l	equ	0xFD9
 21813                           status	equ	0xFD8
 21814                           
 21815 ;; *************** function i2___awdiv *****************
 21816 ;; Defined at:
 21817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21818 ;; Parameters:    Size  Location     Type
 21819 ;;  dividend        2    6[COMRAM] int 
 21820 ;;  divisor         2    8[COMRAM] int 
 21821 ;; Auto vars:     Size  Location     Type
 21822 ;;  __awdiv         2   12[COMRAM] int 
 21823 ;;  __awdiv         1   11[COMRAM] unsigned char 
 21824 ;;  __awdiv         1   10[COMRAM] unsigned char 
 21825 ;; Return value:  Size  Location     Type
 21826 ;;                  2    6[COMRAM] int 
 21827 ;; Registers used:
 21828 ;;		wreg, status,2, status,0
 21829 ;; Tracked objects:
 21830 ;;		On entry : 0/0
 21831 ;;		On exit  : 0/0
 21832 ;;		Unchanged: 0/0
 21833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21834 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21835 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21837 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21838 ;;Total ram usage:        8 bytes
 21839 ;; Hardware stack levels used:    1
 21840 ;; This function calls:
 21841 ;;		Nothing
 21842 ;; This function is called by:
 21843 ;;		i2_fround
 21844 ;;		i2_scale
 21845 ;;		i2_printf
 21846 ;; This function uses a non-reentrant model
 21847 ;;
 21848                           
 21849                           	psect	text80
 21850  0154A6                     __ptext80:
 21851                           	opt stack 0
 21852  0154A6                     i2___awdiv:
 21853                           	opt stack 14
 21854                           
 21855                           ;incstack = 0
 21856  0154A6  0E00               	movlw	0
 21857  0154A8  6E0C               	movwf	i2___awdiv@sign,c
 21858  0154AA  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 21859  0154AC  D006               	goto	i2l1400
 21860  0154AE  6C09               	negf	i2___awdiv@divisor,c
 21861  0154B0  1E0A               	comf	i2___awdiv@divisor+1,f,c
 21862  0154B2  B0D8               	btfsc	status,0,c
 21863  0154B4  2A0A               	incf	i2___awdiv@divisor+1,f,c
 21864  0154B6  0E01               	movlw	1
 21865  0154B8  6E0C               	movwf	i2___awdiv@sign,c
 21866  0154BA                     i2l1400:
 21867  0154BA  AE08               	btfss	i2___awdiv@dividend+1,7,c
 21868  0154BC  D006               	goto	i2l1401
 21869  0154BE  6C07               	negf	i2___awdiv@dividend,c
 21870  0154C0  1E08               	comf	i2___awdiv@dividend+1,f,c
 21871  0154C2  B0D8               	btfsc	status,0,c
 21872  0154C4  2A08               	incf	i2___awdiv@dividend+1,f,c
 21873  0154C6  0E01               	movlw	1
 21874  0154C8  1A0C               	xorwf	i2___awdiv@sign,f,c
 21875  0154CA                     i2l1401:
 21876  0154CA  0E00               	movlw	0
 21877  0154CC  6E0E               	movwf	i2___awdiv@quotient+1,c
 21878  0154CE  0E00               	movlw	0
 21879  0154D0  6E0D               	movwf	i2___awdiv@quotient,c
 21880  0154D2  5009               	movf	i2___awdiv@divisor,w,c
 21881  0154D4  100A               	iorwf	i2___awdiv@divisor+1,w,c
 21882  0154D6  B4D8               	btfsc	status,2,c
 21883  0154D8  D01C               	goto	i2l1408
 21884  0154DA  0E01               	movlw	1
 21885  0154DC  6E0B               	movwf	i2___awdiv@counter,c
 21886  0154DE  D004               	goto	i2l1403
 21887  0154E0  90D8               	bcf	status,0,c
 21888  0154E2  3609               	rlcf	i2___awdiv@divisor,f,c
 21889  0154E4  360A               	rlcf	i2___awdiv@divisor+1,f,c
 21890  0154E6  2A0B               	incf	i2___awdiv@counter,f,c
 21891  0154E8                     i2l1403:
 21892  0154E8  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 21893  0154EA  D7FA               	goto	i2l1404
 21894  0154EC                     i2u1099_40:
 21895  0154EC  90D8               	bcf	status,0,c
 21896  0154EE  360D               	rlcf	i2___awdiv@quotient,f,c
 21897  0154F0  360E               	rlcf	i2___awdiv@quotient+1,f,c
 21898  0154F2  5009               	movf	i2___awdiv@divisor,w,c
 21899  0154F4  5C07               	subwf	i2___awdiv@dividend,w,c
 21900  0154F6  500A               	movf	i2___awdiv@divisor+1,w,c
 21901  0154F8  5808               	subwfb	i2___awdiv@dividend+1,w,c
 21902  0154FA  A0D8               	btfss	status,0,c
 21903  0154FC  D005               	goto	i2l1407
 21904  0154FE  5009               	movf	i2___awdiv@divisor,w,c
 21905  015500  5E07               	subwf	i2___awdiv@dividend,f,c
 21906  015502  500A               	movf	i2___awdiv@divisor+1,w,c
 21907  015504  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 21908  015506  800D               	bsf	i2___awdiv@quotient,0,c
 21909  015508                     i2l1407:
 21910  015508  90D8               	bcf	status,0,c
 21911  01550A  320A               	rrcf	i2___awdiv@divisor+1,f,c
 21912  01550C  3209               	rrcf	i2___awdiv@divisor,f,c
 21913  01550E  2E0B               	decfsz	i2___awdiv@counter,f,c
 21914  015510  D7ED               	goto	i2u1099_40
 21915  015512                     i2l1408:
 21916  015512  500C               	movf	i2___awdiv@sign,w,c
 21917  015514  B4D8               	btfsc	status,2,c
 21918  015516  D004               	goto	i2l1409
 21919  015518  6C0D               	negf	i2___awdiv@quotient,c
 21920  01551A  1E0E               	comf	i2___awdiv@quotient+1,f,c
 21921  01551C  B0D8               	btfsc	status,0,c
 21922  01551E  2A0E               	incf	i2___awdiv@quotient+1,f,c
 21923  015520                     i2l1409:
 21924  015520  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 21925  015524  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 21926  015528  0012               	return	
 21927  01552A                     __end_ofi2___awdiv:
 21928                           	opt stack 0
 21929                           tosu	equ	0xFFF
 21930                           tosh	equ	0xFFE
 21931                           tosl	equ	0xFFD
 21932                           pclatu	equ	0xFFB
 21933                           pclath	equ	0xFFA
 21934                           tblptru	equ	0xFF8
 21935                           tblptrh	equ	0xFF7
 21936                           tblptrl	equ	0xFF6
 21937                           tablat	equ	0xFF5
 21938                           prodh	equ	0xFF4
 21939                           prodl	equ	0xFF3
 21940                           intcon	equ	0xFF2
 21941                           postinc0	equ	0xFEE
 21942                           fsr0h	equ	0xFEA
 21943                           fsr0l	equ	0xFE9
 21944                           wreg	equ	0xFE8
 21945                           indf1	equ	0xFE7
 21946                           postdec1	equ	0xFE5
 21947                           fsr1h	equ	0xFE2
 21948                           fsr1l	equ	0xFE1
 21949                           bsr	equ	0xFE0
 21950                           indf2	equ	0xFDF
 21951                           postinc2	equ	0xFDE
 21952                           postdec2	equ	0xFDD
 21953                           fsr2h	equ	0xFDA
 21954                           fsr2l	equ	0xFD9
 21955                           status	equ	0xFD8
 21956                           
 21957 ;; *************** function i2__tdiv_to_l_ *****************
 21958 ;; Defined at:
 21959 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 21960 ;; Parameters:    Size  Location     Type
 21961 ;;  f1              3    0[COMRAM] float 
 21962 ;;  f2              3    3[COMRAM] float 
 21963 ;; Auto vars:     Size  Location     Type
 21964 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 21965 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 21966 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 21967 ;; Return value:  Size  Location     Type
 21968 ;;                  4    0[COMRAM] unsigned long 
 21969 ;; Registers used:
 21970 ;;		wreg, status,2, status,0
 21971 ;; Tracked objects:
 21972 ;;		On entry : 0/0
 21973 ;;		On exit  : 0/0
 21974 ;;		Unchanged: 0/0
 21975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21976 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21977 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21978 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21979 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21980 ;;Total ram usage:       15 bytes
 21981 ;; Hardware stack levels used:    1
 21982 ;; This function calls:
 21983 ;;		Nothing
 21984 ;; This function is called by:
 21985 ;;		i2_printf
 21986 ;; This function uses a non-reentrant model
 21987 ;;
 21988                           
 21989                           	psect	text81
 21990  014114                     __ptext81:
 21991                           	opt stack 0
 21992  014114                     i2__tdiv_to_l_:
 21993                           	opt stack 15
 21994                           
 21995                           ;incstack = 0
 21996  014114  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 21997  014118  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 21998  01411A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 21999  01411C  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 22000  01411E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 22001  014120  E301               	bnc	u1139_41
 22002  014122  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 22003  014124                     u1139_41:
 22004  014124  5007               	movf	??i2__tdiv_to_l_,w,c
 22005  014126  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 22006  014128  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22007  01412A  A4D8               	btfss	status,2,c
 22008  01412C  D009               	goto	i2l1548
 22009  01412E  0E00               	movlw	0
 22010  014130  6E01               	movwf	?i2__tdiv_to_l_,c
 22011  014132  0E00               	movlw	0
 22012  014134  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22013  014136  0E00               	movlw	0
 22014  014138  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22015  01413A  0E00               	movlw	0
 22016  01413C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22017  01413E  0012               	return	
 22018  014140                     i2l1548:
 22019  014140  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 22020  014144  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 22021  014146  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 22022  014148  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 22023  01414A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 22024  01414C  E301               	bnc	u1141_41
 22025  01414E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 22026  014150                     u1141_41:
 22027  014150  5007               	movf	??i2__tdiv_to_l_,w,c
 22028  014152  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 22029  014154  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 22030  014156  A4D8               	btfss	status,2,c
 22031  014158  D009               	goto	i2l1550
 22032  01415A  0E00               	movlw	0
 22033  01415C  6E01               	movwf	?i2__tdiv_to_l_,c
 22034  01415E  0E00               	movlw	0
 22035  014160  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22036  014162  0E00               	movlw	0
 22037  014164  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22038  014166  0E00               	movlw	0
 22039  014168  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22040  01416A  0012               	return	
 22041  01416C                     i2l1550:
 22042  01416C  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 22043  01416E  0EFF               	movlw	255
 22044  014170  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 22045  014172  0EFF               	movlw	255
 22046  014174  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 22047  014176  0E00               	movlw	0
 22048  014178  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 22049  01417A  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 22050  01417C  0EFF               	movlw	255
 22051  01417E  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 22052  014180  0EFF               	movlw	255
 22053  014182  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 22054  014184  0E00               	movlw	0
 22055  014186  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 22056  014188  0E00               	movlw	0
 22057  01418A  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 22058  01418C  0E00               	movlw	0
 22059  01418E  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 22060  014190  0E00               	movlw	0
 22061  014192  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 22062  014194  0E00               	movlw	0
 22063  014196  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 22064  014198  0E7F               	movlw	127
 22065  01419A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 22066  01419C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 22067  01419E  0F98               	addlw	152
 22068  0141A0  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 22069  0141A2  0E18               	movlw	24
 22070  0141A4  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 22071  0141A6                     i2l1551:
 22072  0141A6  90D8               	bcf	status,0,c
 22073  0141A8  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 22074  0141AA  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 22075  0141AC  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 22076  0141AE  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 22077  0141B0  5004               	movf	i2__tdiv_to_l_@f2,w,c
 22078  0141B2  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 22079  0141B4  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 22080  0141B6  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 22081  0141B8  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 22082  0141BA  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 22083  0141BC  A0D8               	btfss	status,0,c
 22084  0141BE  D007               	goto	i2l1552
 22085  0141C0  5004               	movf	i2__tdiv_to_l_@f2,w,c
 22086  0141C2  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 22087  0141C4  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 22088  0141C6  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 22089  0141C8  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 22090  0141CA  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 22091  0141CC  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 22092  0141CE                     i2l1552:
 22093  0141CE  90D8               	bcf	status,0,c
 22094  0141D0  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 22095  0141D2  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 22096  0141D4  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 22097  0141D6  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 22098  0141D8  D7E6               	goto	i2l1551
 22099  0141DA  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 22100  0141DC  D016               	goto	i2l1554
 22101  0141DE  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22102  0141E0  0A80               	xorlw	128
 22103  0141E2  0F97               	addlw	151
 22104  0141E4  B0D8               	btfsc	status,0,c
 22105  0141E6  D009               	goto	i2l1555
 22106  0141E8  0E00               	movlw	0
 22107  0141EA  6E01               	movwf	?i2__tdiv_to_l_,c
 22108  0141EC  0E00               	movlw	0
 22109  0141EE  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22110  0141F0  0E00               	movlw	0
 22111  0141F2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22112  0141F4  0E00               	movlw	0
 22113  0141F6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22114  0141F8  0012               	return	
 22115  0141FA                     i2l1555:
 22116  0141FA  90D8               	bcf	status,0,c
 22117  0141FC  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 22118  0141FE  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 22119  014200  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 22120  014202  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 22121  014204  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 22122  014206  D7F9               	goto	i2l1555
 22123  014208  D015               	goto	i2u1147_40
 22124  01420A                     i2l1554:
 22125  01420A  0E17               	movlw	23
 22126  01420C  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 22127  01420E  D00F               	goto	i2l1560
 22128  014210  0E00               	movlw	0
 22129  014212  6E01               	movwf	?i2__tdiv_to_l_,c
 22130  014214  0E00               	movlw	0
 22131  014216  6E02               	movwf	?i2__tdiv_to_l_+1,c
 22132  014218  0E00               	movlw	0
 22133  01421A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 22134  01421C  0E00               	movlw	0
 22135  01421E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 22136  014220  0012               	return	
 22137  014222  90D8               	bcf	status,0,c
 22138  014224  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 22139  014226  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 22140  014228  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 22141  01422A  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 22142  01422C  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 22143  01422E                     i2l1560:
 22144  01422E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 22145  014230  A4D8               	btfss	status,2,c
 22146  014232  D7F7               	goto	i2l1561
 22147  014234                     i2u1147_40:
 22148  014234  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 22149  014238  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 22150  01423C  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 22151  014240  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 22152  014244  0012               	return		;funcret
 22153  014246                     __end_ofi2__tdiv_to_l_:
 22154                           	opt stack 0
 22155                           tosu	equ	0xFFF
 22156                           tosh	equ	0xFFE
 22157                           tosl	equ	0xFFD
 22158                           pclatu	equ	0xFFB
 22159                           pclath	equ	0xFFA
 22160                           tblptru	equ	0xFF8
 22161                           tblptrh	equ	0xFF7
 22162                           tblptrl	equ	0xFF6
 22163                           tablat	equ	0xFF5
 22164                           prodh	equ	0xFF4
 22165                           prodl	equ	0xFF3
 22166                           intcon	equ	0xFF2
 22167                           postinc0	equ	0xFEE
 22168                           fsr0h	equ	0xFEA
 22169                           fsr0l	equ	0xFE9
 22170                           wreg	equ	0xFE8
 22171                           indf1	equ	0xFE7
 22172                           postdec1	equ	0xFE5
 22173                           fsr1h	equ	0xFE2
 22174                           fsr1l	equ	0xFE1
 22175                           bsr	equ	0xFE0
 22176                           indf2	equ	0xFDF
 22177                           postinc2	equ	0xFDE
 22178                           postdec2	equ	0xFDD
 22179                           fsr2h	equ	0xFDA
 22180                           fsr2l	equ	0xFD9
 22181                           status	equ	0xFD8
 22182                           
 22183 ;; *************** function i2__div_to_l_ *****************
 22184 ;; Defined at:
 22185 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 22186 ;; Parameters:    Size  Location     Type
 22187 ;;  f1              3    0[COMRAM] unsigned long 
 22188 ;;  f2              3    3[COMRAM] unsigned long 
 22189 ;; Auto vars:     Size  Location     Type
 22190 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 22191 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 22192 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 22193 ;; Return value:  Size  Location     Type
 22194 ;;                  4    0[COMRAM] unsigned long 
 22195 ;; Registers used:
 22196 ;;		wreg, status,2, status,0
 22197 ;; Tracked objects:
 22198 ;;		On entry : 0/0
 22199 ;;		On exit  : 0/0
 22200 ;;		Unchanged: 0/0
 22201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22202 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22203 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22205 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22206 ;;Total ram usage:       12 bytes
 22207 ;; Hardware stack levels used:    1
 22208 ;; This function calls:
 22209 ;;		Nothing
 22210 ;; This function is called by:
 22211 ;;		i2_printf
 22212 ;; This function uses a non-reentrant model
 22213 ;;
 22214                           
 22215                           	psect	text82
 22216  014370                     __ptext82:
 22217                           	opt stack 0
 22218  014370                     i2__div_to_l_:
 22219                           	opt stack 15
 22220                           
 22221                           ;incstack = 0
 22222  014370  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 22223  014372  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 22224  014374  6E0C               	movwf	i2__div_to_l_@exp1,c
 22225  014376  500C               	movf	i2__div_to_l_@exp1,w,c
 22226  014378  A4D8               	btfss	status,2,c
 22227  01437A  D009               	goto	i2l1444
 22228  01437C  0E00               	movlw	0
 22229  01437E  6E01               	movwf	?i2__div_to_l_,c
 22230  014380  0E00               	movlw	0
 22231  014382  6E02               	movwf	?i2__div_to_l_+1,c
 22232  014384  0E00               	movlw	0
 22233  014386  6E03               	movwf	?i2__div_to_l_+2,c
 22234  014388  0E00               	movlw	0
 22235  01438A  6E04               	movwf	?i2__div_to_l_+3,c
 22236  01438C  0012               	return	
 22237  01438E                     i2l1444:
 22238  01438E  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 22239  014390  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 22240  014392  6E0B               	movwf	i2__div_to_l_@cntr,c
 22241  014394  500B               	movf	i2__div_to_l_@cntr,w,c
 22242  014396  A4D8               	btfss	status,2,c
 22243  014398  D009               	goto	i2l1446
 22244  01439A  0E00               	movlw	0
 22245  01439C  6E01               	movwf	?i2__div_to_l_,c
 22246  01439E  0E00               	movlw	0
 22247  0143A0  6E02               	movwf	?i2__div_to_l_+1,c
 22248  0143A2  0E00               	movlw	0
 22249  0143A4  6E03               	movwf	?i2__div_to_l_+2,c
 22250  0143A6  0E00               	movlw	0
 22251  0143A8  6E04               	movwf	?i2__div_to_l_+3,c
 22252  0143AA  0012               	return	
 22253  0143AC                     i2l1446:
 22254  0143AC  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 22255  0143AE  0EFF               	movlw	255
 22256  0143B0  1601               	andwf	i2__div_to_l_@f1,f,c
 22257  0143B2  0EFF               	movlw	255
 22258  0143B4  1602               	andwf	i2__div_to_l_@f1+1,f,c
 22259  0143B6  0EFF               	movlw	255
 22260  0143B8  1603               	andwf	i2__div_to_l_@f1+2,f,c
 22261  0143BA  0E00               	movlw	0
 22262  0143BC  1604               	andwf	i2__div_to_l_@f1+3,f,c
 22263  0143BE  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 22264  0143C0  0EFF               	movlw	255
 22265  0143C2  1604               	andwf	i2__div_to_l_@f2,f,c
 22266  0143C4  0EFF               	movlw	255
 22267  0143C6  1605               	andwf	i2__div_to_l_@f2+1,f,c
 22268  0143C8  0EFF               	movlw	255
 22269  0143CA  1606               	andwf	i2__div_to_l_@f2+2,f,c
 22270  0143CC  0E00               	movlw	0
 22271  0143CE  1607               	andwf	i2__div_to_l_@f2+3,f,c
 22272  0143D0  0E00               	movlw	0
 22273  0143D2  6E07               	movwf	i2__div_to_l_@quot,c
 22274  0143D4  0E00               	movlw	0
 22275  0143D6  6E08               	movwf	i2__div_to_l_@quot+1,c
 22276  0143D8  0E00               	movlw	0
 22277  0143DA  6E09               	movwf	i2__div_to_l_@quot+2,c
 22278  0143DC  0E00               	movlw	0
 22279  0143DE  6E0A               	movwf	i2__div_to_l_@quot+3,c
 22280  0143E0  0E7F               	movlw	127
 22281  0143E2  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 22282  0143E4  500B               	movf	i2__div_to_l_@cntr,w,c
 22283  0143E6  0FA0               	addlw	160
 22284  0143E8  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 22285  0143EA  0E20               	movlw	32
 22286  0143EC  6E0B               	movwf	i2__div_to_l_@cntr,c
 22287  0143EE  90D8               	bcf	status,0,c
 22288  0143F0  3607               	rlcf	i2__div_to_l_@quot,f,c
 22289  0143F2  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 22290  0143F4  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 22291  0143F6  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 22292  0143F8  5004               	movf	i2__div_to_l_@f2,w,c
 22293  0143FA  5C01               	subwf	i2__div_to_l_@f1,w,c
 22294  0143FC  5005               	movf	i2__div_to_l_@f2+1,w,c
 22295  0143FE  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 22296  014400  5006               	movf	i2__div_to_l_@f2+2,w,c
 22297  014402  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 22298  014404  5007               	movf	i2__div_to_l_@f2+3,w,c
 22299  014406  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 22300  014408  A0D8               	btfss	status,0,c
 22301  01440A  D009               	goto	i2l1448
 22302  01440C  5004               	movf	i2__div_to_l_@f2,w,c
 22303  01440E  5E01               	subwf	i2__div_to_l_@f1,f,c
 22304  014410  5005               	movf	i2__div_to_l_@f2+1,w,c
 22305  014412  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 22306  014414  5006               	movf	i2__div_to_l_@f2+2,w,c
 22307  014416  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 22308  014418  5007               	movf	i2__div_to_l_@f2+3,w,c
 22309  01441A  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 22310  01441C  8007               	bsf	i2__div_to_l_@quot,0,c
 22311  01441E                     i2l1448:
 22312  01441E  90D8               	bcf	status,0,c
 22313  014420  3601               	rlcf	i2__div_to_l_@f1,f,c
 22314  014422  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 22315  014424  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 22316  014426  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 22317  014428  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 22318  01442A  D7E1               	goto	i2l1447
 22319  01442C  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 22320  01442E  D016               	goto	i2l1450
 22321  014430  500C               	movf	i2__div_to_l_@exp1,w,c
 22322  014432  0A80               	xorlw	128
 22323  014434  0F9F               	addlw	159
 22324  014436  B0D8               	btfsc	status,0,c
 22325  014438  D009               	goto	i2l1451
 22326  01443A  0E00               	movlw	0
 22327  01443C  6E01               	movwf	?i2__div_to_l_,c
 22328  01443E  0E00               	movlw	0
 22329  014440  6E02               	movwf	?i2__div_to_l_+1,c
 22330  014442  0E00               	movlw	0
 22331  014444  6E03               	movwf	?i2__div_to_l_+2,c
 22332  014446  0E00               	movlw	0
 22333  014448  6E04               	movwf	?i2__div_to_l_+3,c
 22334  01444A  0012               	return	
 22335  01444C                     i2l1451:
 22336  01444C  90D8               	bcf	status,0,c
 22337  01444E  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 22338  014450  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 22339  014452  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 22340  014454  3207               	rrcf	i2__div_to_l_@quot,f,c
 22341  014456  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 22342  014458  D7F9               	goto	i2l1451
 22343  01445A  D015               	goto	i2u1138_40
 22344  01445C                     i2l1450:
 22345  01445C  0E1F               	movlw	31
 22346  01445E  640C               	cpfsgt	i2__div_to_l_@exp1,c
 22347  014460  D00F               	goto	i2l1456
 22348  014462  0E00               	movlw	0
 22349  014464  6E01               	movwf	?i2__div_to_l_,c
 22350  014466  0E00               	movlw	0
 22351  014468  6E02               	movwf	?i2__div_to_l_+1,c
 22352  01446A  0E00               	movlw	0
 22353  01446C  6E03               	movwf	?i2__div_to_l_+2,c
 22354  01446E  0E00               	movlw	0
 22355  014470  6E04               	movwf	?i2__div_to_l_+3,c
 22356  014472  0012               	return	
 22357  014474  90D8               	bcf	status,0,c
 22358  014476  3607               	rlcf	i2__div_to_l_@quot,f,c
 22359  014478  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 22360  01447A  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 22361  01447C  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 22362  01447E  060C               	decf	i2__div_to_l_@exp1,f,c
 22363  014480                     i2l1456:
 22364  014480  500C               	movf	i2__div_to_l_@exp1,w,c
 22365  014482  A4D8               	btfss	status,2,c
 22366  014484  D7F7               	goto	i2l1457
 22367  014486                     i2u1138_40:
 22368  014486  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 22369  01448A  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 22370  01448E  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 22371  014492  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 22372  014496  0012               	return		;funcret
 22373  014498                     __end_ofi2__div_to_l_:
 22374                           	opt stack 0
 22375                           tosu	equ	0xFFF
 22376                           tosh	equ	0xFFE
 22377                           tosl	equ	0xFFD
 22378                           pclatu	equ	0xFFB
 22379                           pclath	equ	0xFFA
 22380                           tblptru	equ	0xFF8
 22381                           tblptrh	equ	0xFF7
 22382                           tblptrl	equ	0xFF6
 22383                           tablat	equ	0xFF5
 22384                           prodh	equ	0xFF4
 22385                           prodl	equ	0xFF3
 22386                           intcon	equ	0xFF2
 22387                           postinc0	equ	0xFEE
 22388                           fsr0h	equ	0xFEA
 22389                           fsr0l	equ	0xFE9
 22390                           wreg	equ	0xFE8
 22391                           indf1	equ	0xFE7
 22392                           postdec1	equ	0xFE5
 22393                           fsr1h	equ	0xFE2
 22394                           fsr1l	equ	0xFE1
 22395                           bsr	equ	0xFE0
 22396                           indf2	equ	0xFDF
 22397                           postinc2	equ	0xFDE
 22398                           postdec2	equ	0xFDD
 22399                           fsr2h	equ	0xFDA
 22400                           fsr2l	equ	0xFD9
 22401                           status	equ	0xFD8
 22402                           
 22403 ;; *************** function i2___lltoft *****************
 22404 ;; Defined at:
 22405 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 22406 ;; Parameters:    Size  Location     Type
 22407 ;;  c               4    8[COMRAM] unsigned long 
 22408 ;; Auto vars:     Size  Location     Type
 22409 ;;  __lltoft        1   16[COMRAM] unsigned char 
 22410 ;; Return value:  Size  Location     Type
 22411 ;;                  3    8[COMRAM] float 
 22412 ;; Registers used:
 22413 ;;		wreg, status,2, status,0, cstack
 22414 ;; Tracked objects:
 22415 ;;		On entry : 0/0
 22416 ;;		On exit  : 0/0
 22417 ;;		Unchanged: 0/0
 22418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22421 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22422 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22423 ;;Total ram usage:        9 bytes
 22424 ;; Hardware stack levels used:    1
 22425 ;; Hardware stack levels required when called:    1
 22426 ;; This function calls:
 22427 ;;		i2___ftpack
 22428 ;; This function is called by:
 22429 ;;		i2_printf
 22430 ;; This function uses a non-reentrant model
 22431 ;;
 22432                           
 22433                           	psect	text83
 22434  015B70                     __ptext83:
 22435                           	opt stack 0
 22436  015B70                     i2___lltoft:
 22437                           	opt stack 14
 22438                           
 22439                           ;incstack = 0
 22440  015B70  0E8E               	movlw	142
 22441  015B72  6E11               	movwf	i2___lltoft@exp,c
 22442  015B74  D006               	goto	i2l1655
 22443  015B76  90D8               	bcf	status,0,c
 22444  015B78  320C               	rrcf	i2___lltoft@c+3,f,c
 22445  015B7A  320B               	rrcf	i2___lltoft@c+2,f,c
 22446  015B7C  320A               	rrcf	i2___lltoft@c+1,f,c
 22447  015B7E  3209               	rrcf	i2___lltoft@c,f,c
 22448  015B80  2A11               	incf	i2___lltoft@exp,f,c
 22449  015B82                     i2l1655:
 22450  015B82  0E00               	movlw	0
 22451  015B84  1409               	andwf	i2___lltoft@c,w,c
 22452  015B86  6E0D               	movwf	??i2___lltoft& (0+255),c
 22453  015B88  0E00               	movlw	0
 22454  015B8A  140A               	andwf	i2___lltoft@c+1,w,c
 22455  015B8C  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 22456  015B8E  0E00               	movlw	0
 22457  015B90  140B               	andwf	i2___lltoft@c+2,w,c
 22458  015B92  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 22459  015B94  0EFF               	movlw	255
 22460  015B96  140C               	andwf	i2___lltoft@c+3,w,c
 22461  015B98  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 22462  015B9A  500D               	movf	??i2___lltoft,w,c
 22463  015B9C  100E               	iorwf	??i2___lltoft+1,w,c
 22464  015B9E  100F               	iorwf	??i2___lltoft+2,w,c
 22465  015BA0  1010               	iorwf	??i2___lltoft+3,w,c
 22466  015BA2  A4D8               	btfss	status,2,c
 22467  015BA4  D7E8               	goto	i2l1656
 22468  015BA6  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 22469  015BAA  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 22470  015BAE  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 22471  015BB2  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 22472  015BB6  0E00               	movlw	0
 22473  015BB8  6E05               	movwf	i2___ftpack@sign,c
 22474  015BBA  ECB2  F0A7         	call	i2___ftpack	;wreg free
 22475  015BBE  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 22476  015BC2  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 22477  015BC6  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 22478  015BCA  0012               	return	
 22479  015BCC                     __end_ofi2___lltoft:
 22480                           	opt stack 0
 22481                           tosu	equ	0xFFF
 22482                           tosh	equ	0xFFE
 22483                           tosl	equ	0xFFD
 22484                           pclatu	equ	0xFFB
 22485                           pclath	equ	0xFFA
 22486                           tblptru	equ	0xFF8
 22487                           tblptrh	equ	0xFF7
 22488                           tblptrl	equ	0xFF6
 22489                           tablat	equ	0xFF5
 22490                           prodh	equ	0xFF4
 22491                           prodl	equ	0xFF3
 22492                           intcon	equ	0xFF2
 22493                           postinc0	equ	0xFEE
 22494                           fsr0h	equ	0xFEA
 22495                           fsr0l	equ	0xFE9
 22496                           wreg	equ	0xFE8
 22497                           indf1	equ	0xFE7
 22498                           postdec1	equ	0xFE5
 22499                           fsr1h	equ	0xFE2
 22500                           fsr1l	equ	0xFE1
 22501                           bsr	equ	0xFE0
 22502                           indf2	equ	0xFDF
 22503                           postinc2	equ	0xFDE
 22504                           postdec2	equ	0xFDD
 22505                           fsr2h	equ	0xFDA
 22506                           fsr2l	equ	0xFD9
 22507                           status	equ	0xFD8
 22508                           
 22509 ;; *************** function i2___llmod *****************
 22510 ;; Defined at:
 22511 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 22512 ;; Parameters:    Size  Location     Type
 22513 ;;  dividend        4   13[COMRAM] unsigned long 
 22514 ;;  divisor         4   17[COMRAM] unsigned long 
 22515 ;; Auto vars:     Size  Location     Type
 22516 ;;  __llmod         1   21[COMRAM] unsigned char 
 22517 ;; Return value:  Size  Location     Type
 22518 ;;                  4   13[COMRAM] unsigned long 
 22519 ;; Registers used:
 22520 ;;		wreg, status,2, status,0
 22521 ;; Tracked objects:
 22522 ;;		On entry : 0/0
 22523 ;;		On exit  : 0/0
 22524 ;;		Unchanged: 0/0
 22525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22526 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22527 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22529 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22530 ;;Total ram usage:        9 bytes
 22531 ;; Hardware stack levels used:    1
 22532 ;; This function calls:
 22533 ;;		Nothing
 22534 ;; This function is called by:
 22535 ;;		i2_printf
 22536 ;; This function uses a non-reentrant model
 22537 ;;
 22538                           
 22539                           	psect	text84
 22540  01592A                     __ptext84:
 22541                           	opt stack 0
 22542  01592A                     i2___llmod:
 22543                           	opt stack 15
 22544                           
 22545                           ;incstack = 0
 22546  01592A  5012               	movf	i2___llmod@divisor,w,c
 22547  01592C  1013               	iorwf	i2___llmod@divisor+1,w,c
 22548  01592E  1014               	iorwf	i2___llmod@divisor+2,w,c
 22549  015930  1015               	iorwf	i2___llmod@divisor+3,w,c
 22550  015932  B4D8               	btfsc	status,2,c
 22551  015934  D024               	goto	i2l1649
 22552  015936  0E01               	movlw	1
 22553  015938  6E16               	movwf	i2___llmod@counter,c
 22554  01593A  D006               	goto	i2l1644
 22555  01593C  90D8               	bcf	status,0,c
 22556  01593E  3612               	rlcf	i2___llmod@divisor,f,c
 22557  015940  3613               	rlcf	i2___llmod@divisor+1,f,c
 22558  015942  3614               	rlcf	i2___llmod@divisor+2,f,c
 22559  015944  3615               	rlcf	i2___llmod@divisor+3,f,c
 22560  015946  2A16               	incf	i2___llmod@counter,f,c
 22561  015948                     i2l1644:
 22562  015948  AE15               	btfss	i2___llmod@divisor+3,7,c
 22563  01594A  D7F8               	goto	i2l1645
 22564  01594C                     i2u1154_40:
 22565  01594C  5012               	movf	i2___llmod@divisor,w,c
 22566  01594E  5C0E               	subwf	i2___llmod@dividend,w,c
 22567  015950  5013               	movf	i2___llmod@divisor+1,w,c
 22568  015952  580F               	subwfb	i2___llmod@dividend+1,w,c
 22569  015954  5014               	movf	i2___llmod@divisor+2,w,c
 22570  015956  5810               	subwfb	i2___llmod@dividend+2,w,c
 22571  015958  5015               	movf	i2___llmod@divisor+3,w,c
 22572  01595A  5811               	subwfb	i2___llmod@dividend+3,w,c
 22573  01595C  A0D8               	btfss	status,0,c
 22574  01595E  D008               	goto	i2l1648
 22575  015960  5012               	movf	i2___llmod@divisor,w,c
 22576  015962  5E0E               	subwf	i2___llmod@dividend,f,c
 22577  015964  5013               	movf	i2___llmod@divisor+1,w,c
 22578  015966  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 22579  015968  5014               	movf	i2___llmod@divisor+2,w,c
 22580  01596A  5A10               	subwfb	i2___llmod@dividend+2,f,c
 22581  01596C  5015               	movf	i2___llmod@divisor+3,w,c
 22582  01596E  5A11               	subwfb	i2___llmod@dividend+3,f,c
 22583  015970                     i2l1648:
 22584  015970  90D8               	bcf	status,0,c
 22585  015972  3215               	rrcf	i2___llmod@divisor+3,f,c
 22586  015974  3214               	rrcf	i2___llmod@divisor+2,f,c
 22587  015976  3213               	rrcf	i2___llmod@divisor+1,f,c
 22588  015978  3212               	rrcf	i2___llmod@divisor,f,c
 22589  01597A  2E16               	decfsz	i2___llmod@counter,f,c
 22590  01597C  D7E7               	goto	i2u1154_40
 22591  01597E                     i2l1649:
 22592  01597E  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 22593  015982  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 22594  015986  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 22595  01598A  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 22596  01598E  0012               	return		;funcret
 22597  015990                     __end_ofi2___llmod:
 22598                           	opt stack 0
 22599                           tosu	equ	0xFFF
 22600                           tosh	equ	0xFFE
 22601                           tosl	equ	0xFFD
 22602                           pclatu	equ	0xFFB
 22603                           pclath	equ	0xFFA
 22604                           tblptru	equ	0xFF8
 22605                           tblptrh	equ	0xFF7
 22606                           tblptrl	equ	0xFF6
 22607                           tablat	equ	0xFF5
 22608                           prodh	equ	0xFF4
 22609                           prodl	equ	0xFF3
 22610                           intcon	equ	0xFF2
 22611                           postinc0	equ	0xFEE
 22612                           fsr0h	equ	0xFEA
 22613                           fsr0l	equ	0xFE9
 22614                           wreg	equ	0xFE8
 22615                           indf1	equ	0xFE7
 22616                           postdec1	equ	0xFE5
 22617                           fsr1h	equ	0xFE2
 22618                           fsr1l	equ	0xFE1
 22619                           bsr	equ	0xFE0
 22620                           indf2	equ	0xFDF
 22621                           postinc2	equ	0xFDE
 22622                           postdec2	equ	0xFDD
 22623                           fsr2h	equ	0xFDA
 22624                           fsr2l	equ	0xFD9
 22625                           status	equ	0xFD8
 22626                           
 22627 ;; *************** function i2___lldiv *****************
 22628 ;; Defined at:
 22629 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 22630 ;; Parameters:    Size  Location     Type
 22631 ;;  dividend        4    0[COMRAM] unsigned long 
 22632 ;;  divisor         4    4[COMRAM] unsigned long 
 22633 ;; Auto vars:     Size  Location     Type
 22634 ;;  __lldiv         4    8[COMRAM] unsigned long 
 22635 ;;  __lldiv         1   12[COMRAM] unsigned char 
 22636 ;; Return value:  Size  Location     Type
 22637 ;;                  4    0[COMRAM] unsigned long 
 22638 ;; Registers used:
 22639 ;;		wreg, status,2, status,0
 22640 ;; Tracked objects:
 22641 ;;		On entry : 0/0
 22642 ;;		On exit  : 0/0
 22643 ;;		Unchanged: 0/0
 22644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22645 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22646 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22648 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22649 ;;Total ram usage:       13 bytes
 22650 ;; Hardware stack levels used:    1
 22651 ;; This function calls:
 22652 ;;		Nothing
 22653 ;; This function is called by:
 22654 ;;		i2_printf
 22655 ;; This function uses a non-reentrant model
 22656 ;;
 22657                           
 22658                           	psect	text85
 22659  01552A                     __ptext85:
 22660                           	opt stack 0
 22661  01552A                     i2___lldiv:
 22662                           	opt stack 15
 22663                           
 22664                           ;incstack = 0
 22665  01552A  0E00               	movlw	0
 22666  01552C  6E09               	movwf	i2___lldiv@quotient,c
 22667  01552E  0E00               	movlw	0
 22668  015530  6E0A               	movwf	i2___lldiv@quotient+1,c
 22669  015532  0E00               	movlw	0
 22670  015534  6E0B               	movwf	i2___lldiv@quotient+2,c
 22671  015536  0E00               	movlw	0
 22672  015538  6E0C               	movwf	i2___lldiv@quotient+3,c
 22673  01553A  5005               	movf	i2___lldiv@divisor,w,c
 22674  01553C  1006               	iorwf	i2___lldiv@divisor+1,w,c
 22675  01553E  1007               	iorwf	i2___lldiv@divisor+2,w,c
 22676  015540  1008               	iorwf	i2___lldiv@divisor+3,w,c
 22677  015542  B4D8               	btfsc	status,2,c
 22678  015544  D02A               	goto	i2l1639
 22679  015546  0E01               	movlw	1
 22680  015548  6E0D               	movwf	i2___lldiv@counter,c
 22681  01554A  D006               	goto	i2l1634
 22682  01554C  90D8               	bcf	status,0,c
 22683  01554E  3605               	rlcf	i2___lldiv@divisor,f,c
 22684  015550  3606               	rlcf	i2___lldiv@divisor+1,f,c
 22685  015552  3607               	rlcf	i2___lldiv@divisor+2,f,c
 22686  015554  3608               	rlcf	i2___lldiv@divisor+3,f,c
 22687  015556  2A0D               	incf	i2___lldiv@counter,f,c
 22688  015558                     i2l1634:
 22689  015558  AE08               	btfss	i2___lldiv@divisor+3,7,c
 22690  01555A  D7F8               	goto	i2l1635
 22691  01555C                     i2u1151_40:
 22692  01555C  90D8               	bcf	status,0,c
 22693  01555E  3609               	rlcf	i2___lldiv@quotient,f,c
 22694  015560  360A               	rlcf	i2___lldiv@quotient+1,f,c
 22695  015562  360B               	rlcf	i2___lldiv@quotient+2,f,c
 22696  015564  360C               	rlcf	i2___lldiv@quotient+3,f,c
 22697  015566  5005               	movf	i2___lldiv@divisor,w,c
 22698  015568  5C01               	subwf	i2___lldiv@dividend,w,c
 22699  01556A  5006               	movf	i2___lldiv@divisor+1,w,c
 22700  01556C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 22701  01556E  5007               	movf	i2___lldiv@divisor+2,w,c
 22702  015570  5803               	subwfb	i2___lldiv@dividend+2,w,c
 22703  015572  5008               	movf	i2___lldiv@divisor+3,w,c
 22704  015574  5804               	subwfb	i2___lldiv@dividend+3,w,c
 22705  015576  A0D8               	btfss	status,0,c
 22706  015578  D009               	goto	i2l1638
 22707  01557A  5005               	movf	i2___lldiv@divisor,w,c
 22708  01557C  5E01               	subwf	i2___lldiv@dividend,f,c
 22709  01557E  5006               	movf	i2___lldiv@divisor+1,w,c
 22710  015580  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 22711  015582  5007               	movf	i2___lldiv@divisor+2,w,c
 22712  015584  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 22713  015586  5008               	movf	i2___lldiv@divisor+3,w,c
 22714  015588  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 22715  01558A  8009               	bsf	i2___lldiv@quotient,0,c
 22716  01558C                     i2l1638:
 22717  01558C  90D8               	bcf	status,0,c
 22718  01558E  3208               	rrcf	i2___lldiv@divisor+3,f,c
 22719  015590  3207               	rrcf	i2___lldiv@divisor+2,f,c
 22720  015592  3206               	rrcf	i2___lldiv@divisor+1,f,c
 22721  015594  3205               	rrcf	i2___lldiv@divisor,f,c
 22722  015596  2E0D               	decfsz	i2___lldiv@counter,f,c
 22723  015598  D7E1               	goto	i2u1151_40
 22724  01559A                     i2l1639:
 22725  01559A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 22726  01559E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 22727  0155A2  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 22728  0155A6  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 22729  0155AA  0012               	return		;funcret
 22730  0155AC                     __end_ofi2___lldiv:
 22731                           	opt stack 0
 22732                           tosu	equ	0xFFF
 22733                           tosh	equ	0xFFE
 22734                           tosl	equ	0xFFD
 22735                           pclatu	equ	0xFFB
 22736                           pclath	equ	0xFFA
 22737                           tblptru	equ	0xFF8
 22738                           tblptrh	equ	0xFF7
 22739                           tblptrl	equ	0xFF6
 22740                           tablat	equ	0xFF5
 22741                           prodh	equ	0xFF4
 22742                           prodl	equ	0xFF3
 22743                           intcon	equ	0xFF2
 22744                           postinc0	equ	0xFEE
 22745                           fsr0h	equ	0xFEA
 22746                           fsr0l	equ	0xFE9
 22747                           wreg	equ	0xFE8
 22748                           indf1	equ	0xFE7
 22749                           postdec1	equ	0xFE5
 22750                           fsr1h	equ	0xFE2
 22751                           fsr1l	equ	0xFE1
 22752                           bsr	equ	0xFE0
 22753                           indf2	equ	0xFDF
 22754                           postinc2	equ	0xFDE
 22755                           postdec2	equ	0xFDD
 22756                           fsr2h	equ	0xFDA
 22757                           fsr2l	equ	0xFD9
 22758                           status	equ	0xFD8
 22759                           
 22760 ;; *************** function _ADCC_ISR *****************
 22761 ;; Defined at:
 22762 ;;		line 297 in file "mcc_generated_files/adcc.c"
 22763 ;; Parameters:    Size  Location     Type
 22764 ;;		None
 22765 ;; Auto vars:     Size  Location     Type
 22766 ;;		None
 22767 ;; Return value:  Size  Location     Type
 22768 ;;                  1    wreg      void 
 22769 ;; Registers used:
 22770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22771 ;; Tracked objects:
 22772 ;;		On entry : 0/0
 22773 ;;		On exit  : 0/0
 22774 ;;		Unchanged: 0/0
 22775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22780 ;;Total ram usage:        0 bytes
 22781 ;; Hardware stack levels used:    1
 22782 ;; Hardware stack levels required when called:    8
 22783 ;; This function calls:
 22784 ;;		Absolute function
 22785 ;;		_ADCC_DefaultInterruptHandler
 22786 ;;		_ADC_postProcessingCallback
 22787 ;; This function is called by:
 22788 ;;		_INTERRUPT_InterruptManagerHigh
 22789 ;; This function uses a non-reentrant model
 22790 ;;
 22791                           
 22792                           	psect	text86
 22793  01611E                     __ptext86:
 22794                           	opt stack 0
 22795  01611E                     _ADCC_ISR:
 22796                           	opt stack 9
 22797                           
 22798                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 22799                           
 22800                           ;incstack = 0
 22801  01611E  010E               	movlb	14	; () banked
 22802  016120  9134               	bcf	52,0,b	;volatile
 22803                           
 22804                           ; BSR set to: 14
 22805                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 22806  016122  0100               	movlb	0	; () banked
 22807  016124  51D7               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 22808  016126  11D8               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 22809  016128  11D9               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 22810  01612A  B4D8               	btfsc	status,2,c
 22811  01612C  0012               	return	
 22812                           
 22813                           ; BSR set to: 0
 22814                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 22815  01612E  D801               	call	i2u1606_48
 22816  016130  0012               	return	
 22817  016132                     i2u1606_48:
 22818  016132  0005               	push	
 22819  016134  6EFA               	movwf	pclath,c
 22820  016136  51D7               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 22821  016138  6EFD               	movwf	tosl,c
 22822  01613A  51D8               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 22823  01613C  6EFE               	movwf	tosh,c
 22824  01613E  51D9               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 22825  016140  6EFF               	movwf	tosu,c
 22826  016142  50FA               	movf	pclath,w,c
 22827  016144  0012               	return		;indir
 22828  016146                     __end_of_ADCC_ISR:
 22829                           	opt stack 0
 22830                           tosu	equ	0xFFF
 22831                           tosh	equ	0xFFE
 22832                           tosl	equ	0xFFD
 22833                           pclatu	equ	0xFFB
 22834                           pclath	equ	0xFFA
 22835                           tblptru	equ	0xFF8
 22836                           tblptrh	equ	0xFF7
 22837                           tblptrl	equ	0xFF6
 22838                           tablat	equ	0xFF5
 22839                           prodh	equ	0xFF4
 22840                           prodl	equ	0xFF3
 22841                           intcon	equ	0xFF2
 22842                           postinc0	equ	0xFEE
 22843                           fsr0h	equ	0xFEA
 22844                           fsr0l	equ	0xFE9
 22845                           wreg	equ	0xFE8
 22846                           indf1	equ	0xFE7
 22847                           postdec1	equ	0xFE5
 22848                           fsr1h	equ	0xFE2
 22849                           fsr1l	equ	0xFE1
 22850                           bsr	equ	0xFE0
 22851                           indf2	equ	0xFDF
 22852                           postinc2	equ	0xFDE
 22853                           postdec2	equ	0xFDD
 22854                           fsr2h	equ	0xFDA
 22855                           fsr2l	equ	0xFD9
 22856                           status	equ	0xFD8
 22857                           
 22858 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 22859 ;; Defined at:
 22860 ;;		line 310 in file "mcc_generated_files/adcc.c"
 22861 ;; Parameters:    Size  Location     Type
 22862 ;;		None
 22863 ;; Auto vars:     Size  Location     Type
 22864 ;;		None
 22865 ;; Return value:  Size  Location     Type
 22866 ;;                  1    wreg      void 
 22867 ;; Registers used:
 22868 ;;		None
 22869 ;; Tracked objects:
 22870 ;;		On entry : 0/0
 22871 ;;		On exit  : 0/0
 22872 ;;		Unchanged: 0/0
 22873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22878 ;;Total ram usage:        0 bytes
 22879 ;; Hardware stack levels used:    1
 22880 ;; This function calls:
 22881 ;;		Nothing
 22882 ;; This function is called by:
 22883 ;;		_ADCC_Initialize
 22884 ;;		_ADCC_ISR
 22885 ;; This function uses a non-reentrant model
 22886 ;;
 22887                           
 22888                           	psect	text87
 22889  016396                     __ptext87:
 22890                           	opt stack 0
 22891  016396                     _ADCC_DefaultInterruptHandler:
 22892                           	opt stack 16
 22893                           
 22894                           ;incstack = 0
 22895  016396  0012               	return		;funcret
 22896  016398                     __end_of_ADCC_DefaultInterruptHandler:
 22897                           	opt stack 0
 22898                           tosu	equ	0xFFF
 22899                           tosh	equ	0xFFE
 22900                           tosl	equ	0xFFD
 22901                           pclatu	equ	0xFFB
 22902                           pclath	equ	0xFFA
 22903                           tblptru	equ	0xFF8
 22904                           tblptrh	equ	0xFF7
 22905                           tblptrl	equ	0xFF6
 22906                           tablat	equ	0xFF5
 22907                           prodh	equ	0xFF4
 22908                           prodl	equ	0xFF3
 22909                           intcon	equ	0xFF2
 22910                           postinc0	equ	0xFEE
 22911                           fsr0h	equ	0xFEA
 22912                           fsr0l	equ	0xFE9
 22913                           wreg	equ	0xFE8
 22914                           indf1	equ	0xFE7
 22915                           postdec1	equ	0xFE5
 22916                           fsr1h	equ	0xFE2
 22917                           fsr1l	equ	0xFE1
 22918                           bsr	equ	0xFE0
 22919                           indf2	equ	0xFDF
 22920                           postinc2	equ	0xFDE
 22921                           postdec2	equ	0xFDD
 22922                           fsr2h	equ	0xFDA
 22923                           fsr2l	equ	0xFD9
 22924                           status	equ	0xFD8
 22925                           
 22926 ;; *************** function _ADC_postProcessingCallback *****************
 22927 ;; Defined at:
 22928 ;;		line 139 in file "main.c"
 22929 ;; Parameters:    Size  Location     Type
 22930 ;;		None
 22931 ;; Auto vars:     Size  Location     Type
 22932 ;;  currentADCCh    1   79[BANK0 ] enum E17343
 22933 ;; Return value:  Size  Location     Type
 22934 ;;                  1    wreg      void 
 22935 ;; Registers used:
 22936 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22937 ;; Tracked objects:
 22938 ;;		On entry : 0/0
 22939 ;;		On exit  : 0/0
 22940 ;;		Unchanged: 0/0
 22941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22943 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22945 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22946 ;;Total ram usage:       13 bytes
 22947 ;; Hardware stack levels used:    1
 22948 ;; Hardware stack levels required when called:    7
 22949 ;; This function calls:
 22950 ;;		_ADCC_GetConversionResult
 22951 ;;		___lwtoft
 22952 ;;		_currentMeasuredToPeak
 22953 ;;		_peakToRMS
 22954 ;;		i2___ftadd
 22955 ;;		i2___ftdiv
 22956 ;;		i2___ftmul
 22957 ;;		i2___ftneg
 22958 ;; This function is called by:
 22959 ;;		_main
 22960 ;;		_ADCC_ISR
 22961 ;; This function uses a non-reentrant model
 22962 ;;
 22963                           
 22964                           	psect	text88
 22965  011CB0                     __ptext88:
 22966                           	opt stack 0
 22967  011CB0                     _ADC_postProcessingCallback:
 22968                           	opt stack 9
 22969                           
 22970                           ;main.c: 141: adcc_channel_t currentADCChannel = ADPCH;
 22971                           
 22972                           ;incstack = 0
 22973  011CB0  CF5F F0AF          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 22974                           
 22975                           ;main.c: 143: switch (currentADCChannel) {
 22976  011CB4  D241               	goto	i2l813
 22977  011CB6                     
 22978                           ;main.c: 146: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 22979  011CB6  EC4A  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 22980  011CBA  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22981  011CBE  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22982  011CC2  ECEE  F0B0         	call	___lwtoft	;wreg free
 22983  011CC6  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22984  011CCA  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22985  011CCE  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22986  011CD2  0E68               	movlw	104
 22987  011CD4  6E2A               	movwf	i2___ftmul@f2,c
 22988  011CD6  0E53               	movlw	83
 22989  011CD8  6E2B               	movwf	i2___ftmul@f2+1,c
 22990  011CDA  0E3B               	movlw	59
 22991  011CDC  6E2C               	movwf	i2___ftmul@f2+2,c
 22992  011CDE  EC4B  F0A4         	call	i2___ftmul	;wreg free
 22993  011CE2  C027  F0D4         	movff	?i2___ftmul,_AVSS_ADC_Result	;volatile
 22994  011CE6  C028  F0D5         	movff	?i2___ftmul+1,_AVSS_ADC_Result+1	;volatile
 22995  011CEA  C029  F0D6         	movff	?i2___ftmul+2,_AVSS_ADC_Result+2	;volatile
 22996                           
 22997                           ;main.c: 147: break;
 22998  011CEE  0012               	return	
 22999  011CF0                     
 23000                           ;main.c: 151: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 23001  011CF0  0E68               	movlw	104
 23002  011CF2  6E2A               	movwf	i2___ftmul@f2,c
 23003  011CF4  0E53               	movlw	83
 23004  011CF6  6E2B               	movwf	i2___ftmul@f2+1,c
 23005  011CF8  0E3B               	movlw	59
 23006  011CFA  6E2C               	movwf	i2___ftmul@f2+2,c
 23007  011CFC  EC4A  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23008  011D00  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23009  011D04  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23010  011D08  ECEE  F0B0         	call	___lwtoft	;wreg free
 23011  011D0C  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23012  011D10  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23013  011D14  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23014  011D18  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23015  011D1C  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 23016  011D20  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 23017  011D24  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 23018  011D28  C0D4  F043         	movff	_AVSS_ADC_Result,i2___ftadd@f2	;volatile
 23019  011D2C  C0D5  F044         	movff	_AVSS_ADC_Result+1,i2___ftadd@f2+1	;volatile
 23020  011D30  C0D6  F045         	movff	_AVSS_ADC_Result+2,i2___ftadd@f2+2	;volatile
 23021  011D34  EC51  F09E         	call	i2___ftadd	;wreg free
 23022  011D38  C040  F0E8         	movff	?i2___ftadd,_FVR_ADC_Result	;volatile
 23023  011D3C  C041  F0E9         	movff	?i2___ftadd+1,_FVR_ADC_Result+1	;volatile
 23024  011D40  C042  F0EA         	movff	?i2___ftadd+2,_FVR_ADC_Result+2	;volatile
 23025                           
 23026                           ;main.c: 152: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 23027  011D44  0E12               	movlw	18
 23028  011D46  6E15               	movwf	i2___ftdiv@f1,c
 23029  011D48  0E03               	movlw	3
 23030  011D4A  6E16               	movwf	i2___ftdiv@f1+1,c
 23031  011D4C  0E40               	movlw	64
 23032  011D4E  6E17               	movwf	i2___ftdiv@f1+2,c
 23033  011D50  C0E8  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2	;volatile
 23034  011D54  C0E9  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1	;volatile
 23035  011D58  C0EA  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2	;volatile
 23036  011D5C  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23037  011D60  C015  F0D1         	movff	?i2___ftdiv,_ADC_Result_Scaling	;volatile
 23038  011D64  C016  F0D2         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1	;volatile
 23039  011D68  C017  F0D3         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2	;volatile
 23040                           
 23041                           ;main.c: 153: break;
 23042  011D6C  0012               	return	
 23043  011D6E                     
 23044                           ;main.c: 157: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 23045  011D6E  C0D1  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2	;volatile
 23046  011D72  C0D2  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1	;volatile
 23047  011D76  C0D3  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2	;volatile
 23048  011D7A  EC4A  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23049  011D7E  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23050  011D82  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23051  011D86  ECEE  F0B0         	call	___lwtoft	;wreg free
 23052  011D8A  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23053  011D8E  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23054  011D92  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23055  011D96  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23056  011D9A  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3324
 23057  011D9E  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3324+1
 23058  011DA2  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3324+2
 23059                           
 23060                           ;main.c: 157: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 23061  011DA6  C0B0  F027         	movff	_ADC_postProcessingCallback$3324,i2___ftmul@f1
 23062  011DAA  C0B1  F028         	movff	_ADC_postProcessingCallback$3324+1,i2___ftmul@f1+1
 23063  011DAE  C0B2  F029         	movff	_ADC_postProcessingCallback$3324+2,i2___ftmul@f1+2
 23064  011DB2  0E68               	movlw	104
 23065  011DB4  6E2A               	movwf	i2___ftmul@f2,c
 23066  011DB6  0ED3               	movlw	211
 23067  011DB8  6E2B               	movwf	i2___ftmul@f2+1,c
 23068  011DBA  0E3B               	movlw	59
 23069  011DBC  6E2C               	movwf	i2___ftmul@f2+2,c
 23070  011DBE  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23071  011DC2  C027  F0CE         	movff	?i2___ftmul,_POS3P3_ADC_Result	;volatile
 23072  011DC6  C028  F0CF         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1	;volatile
 23073  011DCA  C029  F0D0         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2	;volatile
 23074                           
 23075                           ;main.c: 158: break;
 23076  011DCE  0012               	return	
 23077  011DD0                     
 23078                           ;main.c: 161: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 23079  011DD0  0EC0               	movlw	192
 23080  011DD2  6E18               	movwf	i2___ftdiv@f2,c
 23081  011DD4  0E7F               	movlw	127
 23082  011DD6  6E19               	movwf	i2___ftdiv@f2+1,c
 23083  011DD8  0E44               	movlw	68
 23084  011DDA  6E1A               	movwf	i2___ftdiv@f2+2,c
 23085  011DDC  C0CE  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23086  011DE0  C0CF  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23087  011DE4  C0D0  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23088  011DE8  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23089  011DEC  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23090  011DF0  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23091  011DF4  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23092  011DF8  EC4A  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23093  011DFC  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23094  011E00  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23095  011E04  ECEE  F0B0         	call	___lwtoft	;wreg free
 23096  011E08  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23097  011E0C  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23098  011E10  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23099  011E14  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23100  011E18  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3324
 23101  011E1C  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3324+1
 23102  011E20  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3324+2
 23103                           
 23104                           ;main.c: 161: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 23105  011E24  C0B0  F027         	movff	_ADC_postProcessingCallback$3324,i2___ftmul@f1
 23106  011E28  C0B1  F028         	movff	_ADC_postProcessingCallback$3324+1,i2___ftmul@f1+1
 23107  011E2C  C0B2  F029         	movff	_ADC_postProcessingCallback$3324+2,i2___ftmul@f1+2
 23108  011E30  0E5E               	movlw	94
 23109  011E32  6E2A               	movwf	i2___ftmul@f2,c
 23110  011E34  0EF2               	movlw	242
 23111  011E36  6E2B               	movwf	i2___ftmul@f2+1,c
 23112  011E38  0E3F               	movlw	63
 23113  011E3A  6E2C               	movwf	i2___ftmul@f2+2,c
 23114  011E3C  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23115  011E40  C027  F0C5         	movff	?i2___ftmul,_Imeas	;volatile
 23116  011E44  C028  F0C6         	movff	?i2___ftmul+1,_Imeas+1	;volatile
 23117  011E48  C029  F0C7         	movff	?i2___ftmul+2,_Imeas+2	;volatile
 23118                           
 23119                           ;main.c: 165: if (LATGbits.LATG0 != 1) {
 23120  011E4C  B07F               	btfsc	3967,0,c	;volatile
 23121  011E4E  D061               	goto	i2l819
 23122                           
 23123                           ;main.c: 170: if (load_enable) {
 23124  011E50  A05E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 23125  011E52  D029               	goto	i2l820
 23126                           
 23127                           ;main.c: 173: if (dimming_period < 0x7FEE) {
 23128  011E54  0EEE               	movlw	238
 23129  011E56  0100               	movlb	0	; () banked
 23130  011E58  5DDF               	subwf	_dimming_period& (0+255),w,b	;volatile
 23131  011E5A  0E7F               	movlw	127
 23132  011E5C  59E0               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 23133  011E5E  B0D8               	btfsc	status,0,c
 23134  011E60  D007               	goto	i2l821
 23135                           
 23136                           ; BSR set to: 0
 23137                           ;main.c: 175: Ipk = Imeas;
 23138  011E62  C0C5  F0C8         	movff	_Imeas,_Ipk	;volatile
 23139  011E66  C0C6  F0C9         	movff	_Imeas+1,_Ipk+1	;volatile
 23140  011E6A  C0C7  F0CA         	movff	_Imeas+2,_Ipk+2	;volatile
 23141                           
 23142                           ;main.c: 177: }
 23143  011E6E  D014               	goto	i2l822
 23144  011E70                     i2l821:
 23145                           
 23146                           ; BSR set to: 0
 23147                           ;main.c: 180: else {
 23148                           ;main.c: 182: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 23149                           
 23150                           ; BSR set to: 0
 23151  011E70  C0C5  F073         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 23152  011E74  C0C6  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 23153  011E78  C0C7  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 23154  011E7C  C0E5  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 23155  011E80  C0E6  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 23156  011E84  C0E7  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 23157  011E88  EC2B  F0AD         	call	_currentMeasuredToPeak	;wreg free
 23158  011E8C  C073  F0C8         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 23159  011E90  C074  F0C9         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 23160  011E94  C075  F0CA         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 23161  011E98                     i2l822:
 23162                           
 23163                           ;main.c: 184: }
 23164                           ;main.c: 186: Vpk = Vpk_const;
 23165  011E98  C0EB  F0CB         	movff	_Vpk_const,_Vpk	;volatile
 23166  011E9C  C0EC  F0CC         	movff	_Vpk_const+1,_Vpk+1	;volatile
 23167  011EA0  C0ED  F0CD         	movff	_Vpk_const+2,_Vpk+2	;volatile
 23168                           
 23169                           ;main.c: 188: }
 23170  011EA4  D00D               	goto	i2l823
 23171  011EA6                     i2l820:
 23172                           
 23173                           ;main.c: 190: else {
 23174                           ;main.c: 192: Ipk = 0.0;
 23175  011EA6  0E00               	movlw	0
 23176  011EA8  0100               	movlb	0	; () banked
 23177  011EAA  6FC8               	movwf	_Ipk& (0+255),b	;volatile
 23178  011EAC  0E00               	movlw	0
 23179  011EAE  6FC9               	movwf	(_Ipk+1)& (0+255),b	;volatile
 23180  011EB0  0E00               	movlw	0
 23181  011EB2  6FCA               	movwf	(_Ipk+2)& (0+255),b	;volatile
 23182                           
 23183                           ;main.c: 193: Vpk = 0.0;
 23184  011EB4  0E00               	movlw	0
 23185  011EB6  6FCB               	movwf	_Vpk& (0+255),b	;volatile
 23186  011EB8  0E00               	movlw	0
 23187  011EBA  6FCC               	movwf	(_Vpk+1)& (0+255),b	;volatile
 23188  011EBC  0E00               	movlw	0
 23189  011EBE  6FCD               	movwf	(_Vpk+2)& (0+255),b	;volatile
 23190  011EC0                     i2l823:
 23191                           
 23192                           ;main.c: 195: }
 23193                           ;main.c: 197: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 23194                           
 23195                           ; BSR set to: 0
 23196  011EC0  C0C8  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 23197  011EC4  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 23198  011EC8  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 23199  011ECC  C0E5  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 23200  011ED0  C0E6  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 23201  011ED4  C0E7  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 23202  011ED8  ECB6  F09B         	call	_peakToRMS	;wreg free
 23203  011EDC  C094  F1C0         	movff	?_peakToRMS,_Irms	;volatile
 23204  011EE0  C095  F1C1         	movff	?_peakToRMS+1,_Irms+1	;volatile
 23205  011EE4  C096  F1C2         	movff	?_peakToRMS+2,_Irms+2	;volatile
 23206                           
 23207                           ;main.c: 198: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 23208  011EE8  C0CB  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 23209  011EEC  C0CC  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 23210  011EF0  C0CD  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 23211  011EF4  C0E5  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 23212  011EF8  C0E6  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 23213  011EFC  C0E7  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 23214  011F00  ECB6  F09B         	call	_peakToRMS	;wreg free
 23215  011F04  C094  F1BD         	movff	?_peakToRMS,_Vrms	;volatile
 23216  011F08  C095  F1BE         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 23217  011F0C  C096  F1BF         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 23218                           
 23219                           ;main.c: 200: }
 23220  011F10  0012               	return	
 23221  011F12                     i2l819:
 23222                           
 23223                           ;main.c: 203: else {
 23224                           ;main.c: 205: Ipk = Imeas;
 23225  011F12  C0C5  F0C8         	movff	_Imeas,_Ipk	;volatile
 23226  011F16  C0C6  F0C9         	movff	_Imeas+1,_Ipk+1	;volatile
 23227  011F1A  C0C7  F0CA         	movff	_Imeas+2,_Ipk+2	;volatile
 23228                           
 23229                           ;main.c: 206: Irms = peakToRMS(Ipk, 0.0);
 23230  011F1E  C0C8  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 23231  011F22  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 23232  011F26  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 23233  011F2A  0E00               	movlw	0
 23234  011F2C  0100               	movlb	0	; () banked
 23235  011F2E  6F97               	movwf	peakToRMS@Angle& (0+255),b
 23236  011F30  0E00               	movlw	0
 23237  011F32  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 23238  011F34  0E00               	movlw	0
 23239  011F36  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 23240  011F38  ECB6  F09B         	call	_peakToRMS	;wreg free
 23241  011F3C  C094  F1C0         	movff	?_peakToRMS,_Irms	;volatile
 23242  011F40  C095  F1C1         	movff	?_peakToRMS+1,_Irms+1	;volatile
 23243  011F44  C096  F1C2         	movff	?_peakToRMS+2,_Irms+2	;volatile
 23244                           
 23245                           ;main.c: 207: Vrms = peakToRMS(Vpk, 0.0);
 23246  011F48  C0CB  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 23247  011F4C  C0CC  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 23248  011F50  C0CD  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 23249  011F54  0E00               	movlw	0
 23250  011F56  0100               	movlb	0	; () banked
 23251  011F58  6F97               	movwf	peakToRMS@Angle& (0+255),b
 23252  011F5A  0E00               	movlw	0
 23253  011F5C  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 23254  011F5E  0E00               	movlw	0
 23255  011F60  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 23256  011F62  ECB6  F09B         	call	_peakToRMS	;wreg free
 23257  011F66  C094  F1BD         	movff	?_peakToRMS,_Vrms	;volatile
 23258  011F6A  C095  F1BE         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 23259  011F6E  C096  F1BF         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 23260                           
 23261                           ;main.c: 209: }
 23262                           ;main.c: 210: break;
 23263  011F72  0012               	return	
 23264  011F74                     
 23265                           ;main.c: 214: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 23266  011F74  0EC0               	movlw	192
 23267  011F76  6E18               	movwf	i2___ftdiv@f2,c
 23268  011F78  0E7F               	movlw	127
 23269  011F7A  6E19               	movwf	i2___ftdiv@f2+1,c
 23270  011F7C  0E44               	movlw	68
 23271  011F7E  6E1A               	movwf	i2___ftdiv@f2+2,c
 23272  011F80  C0CE  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23273  011F84  C0CF  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23274  011F88  C0D0  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23275  011F8C  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23276  011F90  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23277  011F94  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23278  011F98  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23279  011F9C  EC4A  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23280  011FA0  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23281  011FA4  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23282  011FA8  ECEE  F0B0         	call	___lwtoft	;wreg free
 23283  011FAC  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 23284  011FB0  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 23285  011FB4  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 23286  011FB8  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23287  011FBC  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3324
 23288  011FC0  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3324+1
 23289  011FC4  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3324+2
 23290                           
 23291                           ;main.c: 214: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 23292  011FC8  C0B0  F027         	movff	_ADC_postProcessingCallback$3324,i2___ftmul@f1
 23293  011FCC  C0B1  F028         	movff	_ADC_postProcessingCallback$3324+1,i2___ftmul@f1+1
 23294  011FD0  C0B2  F029         	movff	_ADC_postProcessingCallback$3324+2,i2___ftmul@f1+2
 23295  011FD4  0EF8               	movlw	248
 23296  011FD6  6E2A               	movwf	i2___ftmul@f2,c
 23297  011FD8  0E80               	movlw	128
 23298  011FDA  6E2B               	movwf	i2___ftmul@f2+1,c
 23299  011FDC  0E40               	movlw	64
 23300  011FDE  6E2C               	movwf	i2___ftmul@f2+2,c
 23301  011FE0  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23302  011FE4  C027  F1C6         	movff	?i2___ftmul,_POS12_ADC_Result	;volatile
 23303  011FE8  C028  F1C7         	movff	?i2___ftmul+1,_POS12_ADC_Result+1	;volatile
 23304  011FEC  C029  F1C8         	movff	?i2___ftmul+2,_POS12_ADC_Result+2	;volatile
 23305                           
 23306                           ;main.c: 215: break;
 23307  011FF0  0012               	return	
 23308  011FF2                     
 23309                           ;main.c: 219: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23310  011FF2  0E00               	movlw	0
 23311  011FF4  6E18               	movwf	i2___ftdiv@f2,c
 23312  011FF6  0E00               	movlw	0
 23313  011FF8  6E19               	movwf	i2___ftdiv@f2+1,c
 23314  011FFA  0E40               	movlw	64
 23315  011FFC  6E1A               	movwf	i2___ftdiv@f2+2,c
 23316  011FFE  C0CE  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 23317  012002  C0CF  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 23318  012006  C0D0  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 23319  01200A  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23320  01200E  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23321  012012  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23322  012016  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23323  01201A  0E00               	movlw	0
 23324  01201C  6E43               	movwf	i2___ftadd@f2,c
 23325  01201E  0E80               	movlw	128
 23326  012020  6E44               	movwf	i2___ftadd@f2+1,c
 23327  012022  0E3F               	movlw	63
 23328  012024  6E45               	movwf	i2___ftadd@f2+2,c
 23329  012026  0EC0               	movlw	192
 23330  012028  6E18               	movwf	i2___ftdiv@f2,c
 23331  01202A  0E7F               	movlw	127
 23332  01202C  6E19               	movwf	i2___ftdiv@f2+1,c
 23333  01202E  0E44               	movlw	68
 23334  012030  6E1A               	movwf	i2___ftdiv@f2+2,c
 23335  012032  EC4A  F0B1         	call	_ADCC_GetConversionResult	;wreg free
 23336  012036  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 23337  01203A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 23338  01203E  ECEE  F0B0         	call	___lwtoft	;wreg free
 23339  012042  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 23340  012046  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 23341  01204A  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 23342  01204E  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23343  012052  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 23344  012056  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 23345  01205A  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 23346  01205E  ECDC  F0B0         	call	i2___ftneg	;wreg free
 23347  012062  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23348  012066  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23349  01206A  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23350  01206E  EC51  F09E         	call	i2___ftadd	;wreg free
 23351  012072  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 23352  012076  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 23353  01207A  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 23354  01207E  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23355  012082  C027  F0A6         	movff	?i2___ftmul,_ADC_postProcessingCallback$3325
 23356  012086  C028  F0A7         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3325+1
 23357  01208A  C029  F0A8         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3325+2
 23358                           
 23359                           ;main.c: 219: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23360  01208E  0E04               	movlw	4
 23361  012090  6E18               	movwf	i2___ftdiv@f2,c
 23362  012092  0EAD               	movlw	173
 23363  012094  6E19               	movwf	i2___ftdiv@f2+1,c
 23364  012096  0E3A               	movlw	58
 23365  012098  6E1A               	movwf	i2___ftdiv@f2+2,c
 23366  01209A  0EB4               	movlw	180
 23367  01209C  6E43               	movwf	i2___ftadd@f2,c
 23368  01209E  0E28               	movlw	40
 23369  0120A0  6E44               	movwf	i2___ftadd@f2+1,c
 23370  0120A2  0E3F               	movlw	63
 23371  0120A4  6E45               	movwf	i2___ftadd@f2+2,c
 23372  0120A6  C0A6  F024         	movff	_ADC_postProcessingCallback$3325,i2___ftneg@f1
 23373  0120AA  C0A7  F025         	movff	_ADC_postProcessingCallback$3325+1,i2___ftneg@f1+1
 23374  0120AE  C0A8  F026         	movff	_ADC_postProcessingCallback$3325+2,i2___ftneg@f1+2
 23375  0120B2  ECDC  F0B0         	call	i2___ftneg	;wreg free
 23376  0120B6  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23377  0120BA  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23378  0120BE  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23379  0120C2  EC51  F09E         	call	i2___ftadd	;wreg free
 23380  0120C6  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 23381  0120CA  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 23382  0120CE  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 23383  0120D2  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23384  0120D6  C015  F0A9         	movff	?i2___ftdiv,_ADC_postProcessingCallback$3326
 23385  0120DA  C016  F0AA         	movff	?i2___ftdiv+1,_ADC_postProcessingCallback$3326+1
 23386  0120DE  C017  F0AB         	movff	?i2___ftdiv+2,_ADC_postProcessingCallback$3326+2
 23387                           
 23388                           ;main.c: 219: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23389  0120E2  C0EE  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2	;volatile
 23390  0120E6  C0EF  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1	;volatile
 23391  0120EA  C0F0  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2	;volatile
 23392  0120EE  C0A9  F040         	movff	_ADC_postProcessingCallback$3326,i2___ftadd@f1
 23393  0120F2  C0AA  F041         	movff	_ADC_postProcessingCallback$3326+1,i2___ftadd@f1+1
 23394  0120F6  C0AB  F042         	movff	_ADC_postProcessingCallback$3326+2,i2___ftadd@f1+2
 23395  0120FA  EC51  F09E         	call	i2___ftadd	;wreg free
 23396  0120FE  C040  F0AC         	movff	?i2___ftadd,_ADC_postProcessingCallback$3327
 23397  012102  C041  F0AD         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$3327+1
 23398  012106  C042  F0AE         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$3327+2
 23399                           
 23400                           ;main.c: 219: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23401  01210A  C0AC  F040         	movff	_ADC_postProcessingCallback$3327,i2___ftadd@f1
 23402  01210E  C0AD  F041         	movff	_ADC_postProcessingCallback$3327+1,i2___ftadd@f1+1
 23403  012112  C0AE  F042         	movff	_ADC_postProcessingCallback$3327+2,i2___ftadd@f1+2
 23404  012116  0E00               	movlw	0
 23405  012118  6E43               	movwf	i2___ftadd@f2,c
 23406  01211A  0E20               	movlw	32
 23407  01211C  6E44               	movwf	i2___ftadd@f2+1,c
 23408  01211E  0EC2               	movlw	194
 23409  012120  6E45               	movwf	i2___ftadd@f2+2,c
 23410  012122  EC51  F09E         	call	i2___ftadd	;wreg free
 23411  012126  C040  F1C3         	movff	?i2___ftadd,_Temp_ADC_Result	;volatile
 23412  01212A  C041  F1C4         	movff	?i2___ftadd+1,_Temp_ADC_Result+1	;volatile
 23413  01212E  C042  F1C5         	movff	?i2___ftadd+2,_Temp_ADC_Result+2	;volatile
 23414                           
 23415                           ;main.c: 220: break;
 23416  012132  0012               	return	
 23417  012134                     i2l827:
 23418                           
 23419                           ; BSR set to: 0
 23420                           ;main.c: 224: LATFbits.LATF3 = 1;
 23421  012134  867E               	bsf	3966,3,c	;volatile
 23422                           
 23423                           ; BSR set to: 0
 23424                           ;main.c: 227: }
 23425                           
 23426                           ;main.c: 225: break;
 23427  012136  0012               	return	
 23428  012138                     i2l813:
 23429                           
 23430                           ; BSR set to: 0
 23431  012138  0100               	movlb	0	; () banked
 23432  01213A  51AF               	movf	ADC_postProcessingCallback@currentADCChannel& (0+255),w,b
 23433                           
 23434                           ; Switch size 1, requested type "space"
 23435                           ; Number of cases is 6, Range of values is 0 to 63
 23436                           ; switch strategies available:
 23437                           ; Name         Instructions Cycles
 23438                           ; simple_byte           19    10 (average)
 23439                           ;	Chosen strategy is simple_byte
 23440  01213C  0A00               	xorlw	0	; case 0
 23441  01213E  B4D8               	btfsc	status,2,c
 23442  012140  D647               	goto	i2l818
 23443  012142  0A04               	xorlw	4	; case 4
 23444  012144  B4D8               	btfsc	status,2,c
 23445  012146  D716               	goto	i2l825
 23446  012148  0A26               	xorlw	38	; case 34
 23447  01214A  B4D8               	btfsc	status,2,c
 23448  01214C  D610               	goto	i2l817
 23449  01214E  0A1E               	xorlw	30	; case 60
 23450  012150  B4D8               	btfsc	status,2,c
 23451  012152  D5B1               	goto	i2l814
 23452  012154  0A01               	xorlw	1	; case 61
 23453  012156  B4D8               	btfsc	status,2,c
 23454  012158  D74C               	goto	i2l826
 23455  01215A  0A02               	xorlw	2	; case 63
 23456  01215C  B4D8               	btfsc	status,2,c
 23457  01215E  D5C8               	goto	i2l816
 23458  012160  D7E9               	goto	i2l827
 23459  012162                     __end_of_ADC_postProcessingCallback:
 23460                           	opt stack 0
 23461                           tosu	equ	0xFFF
 23462                           tosh	equ	0xFFE
 23463                           tosl	equ	0xFFD
 23464                           pclatu	equ	0xFFB
 23465                           pclath	equ	0xFFA
 23466                           tblptru	equ	0xFF8
 23467                           tblptrh	equ	0xFF7
 23468                           tblptrl	equ	0xFF6
 23469                           tablat	equ	0xFF5
 23470                           prodh	equ	0xFF4
 23471                           prodl	equ	0xFF3
 23472                           intcon	equ	0xFF2
 23473                           postinc0	equ	0xFEE
 23474                           fsr0h	equ	0xFEA
 23475                           fsr0l	equ	0xFE9
 23476                           wreg	equ	0xFE8
 23477                           indf1	equ	0xFE7
 23478                           postdec1	equ	0xFE5
 23479                           fsr1h	equ	0xFE2
 23480                           fsr1l	equ	0xFE1
 23481                           bsr	equ	0xFE0
 23482                           indf2	equ	0xFDF
 23483                           postinc2	equ	0xFDE
 23484                           postdec2	equ	0xFDD
 23485                           fsr2h	equ	0xFDA
 23486                           fsr2l	equ	0xFD9
 23487                           status	equ	0xFD8
 23488                           
 23489 ;; *************** function _peakToRMS *****************
 23490 ;; Defined at:
 23491 ;;		line 89 in file "main.c"
 23492 ;; Parameters:    Size  Location     Type
 23493 ;;  Peak            3   52[BANK0 ] void 
 23494 ;;  Angle           3   55[BANK0 ] void 
 23495 ;; Auto vars:     Size  Location     Type
 23496 ;;  RMS             3   67[BANK0 ] void 
 23497 ;; Return value:  Size  Location     Type
 23498 ;;                  3   52[BANK0 ] void 
 23499 ;; Registers used:
 23500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23501 ;; Tracked objects:
 23502 ;;		On entry : 0/0
 23503 ;;		On exit  : 0/0
 23504 ;;		Unchanged: 0/0
 23505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23506 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23507 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23509 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23510 ;;Total ram usage:       18 bytes
 23511 ;; Hardware stack levels used:    1
 23512 ;; Hardware stack levels required when called:    6
 23513 ;; This function calls:
 23514 ;;		_acos
 23515 ;;		_sin
 23516 ;;		_sqrt
 23517 ;;		i2___ftadd
 23518 ;;		i2___ftdiv
 23519 ;;		i2___ftmul
 23520 ;;		i2___ftneg
 23521 ;; This function is called by:
 23522 ;;		_ADC_postProcessingCallback
 23523 ;; This function uses a non-reentrant model
 23524 ;;
 23525                           
 23526                           	psect	text89
 23527  01376C                     __ptext89:
 23528                           	opt stack 0
 23529  01376C                     _peakToRMS:
 23530                           	opt stack 9
 23531                           
 23532                           ;main.c: 92: double RMS = 0.0;
 23533                           
 23534                           ;incstack = 0
 23535  01376C  0E00               	movlw	0
 23536  01376E  0100               	movlb	0	; () banked
 23537  013770  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 23538  013772  0E00               	movlw	0
 23539  013774  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 23540  013776  0E00               	movlw	0
 23541  013778  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 23542                           
 23543                           ; BSR set to: 0
 23544                           ;main.c: 95: RMS = 2.0 * acos(-1.0);
 23545  01377A  0E00               	movlw	0
 23546  01377C  6F8E               	movwf	acos@x& (0+255),b
 23547  01377E  0E80               	movlw	128
 23548  013780  6F8F               	movwf	(acos@x+1)& (0+255),b
 23549  013782  0EBF               	movlw	191
 23550  013784  6F90               	movwf	(acos@x+2)& (0+255),b
 23551  013786  EC12  F0AE         	call	_acos	;wreg free
 23552  01378A  C08E  F0A0         	movff	?_acos,_peakToRMS$3321
 23553  01378E  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3321+1
 23554  013792  C090  F0A2         	movff	?_acos+2,_peakToRMS$3321+2
 23555                           
 23556                           ;main.c: 95: RMS = 2.0 * acos(-1.0);
 23557  013796  C0A0  F027         	movff	_peakToRMS$3321,i2___ftmul@f1
 23558  01379A  C0A1  F028         	movff	_peakToRMS$3321+1,i2___ftmul@f1+1
 23559  01379E  C0A2  F029         	movff	_peakToRMS$3321+2,i2___ftmul@f1+2
 23560  0137A2  0E00               	movlw	0
 23561  0137A4  6E2A               	movwf	i2___ftmul@f2,c
 23562  0137A6  0E00               	movlw	0
 23563  0137A8  6E2B               	movwf	i2___ftmul@f2+1,c
 23564  0137AA  0E40               	movlw	64
 23565  0137AC  6E2C               	movwf	i2___ftmul@f2+2,c
 23566  0137AE  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23567  0137B2  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 23568  0137B6  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 23569  0137BA  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 23570                           
 23571                           ;main.c: 96: RMS = RMS - (2.0 * Angle);
 23572  0137BE  0E00               	movlw	0
 23573  0137C0  6E2A               	movwf	i2___ftmul@f2,c
 23574  0137C2  0E00               	movlw	0
 23575  0137C4  6E2B               	movwf	i2___ftmul@f2+1,c
 23576  0137C6  0E40               	movlw	64
 23577  0137C8  6E2C               	movwf	i2___ftmul@f2+2,c
 23578  0137CA  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 23579  0137CE  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 23580  0137D2  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 23581  0137D6  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23582  0137DA  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 23583  0137DE  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 23584  0137E2  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 23585  0137E6  ECDC  F0B0         	call	i2___ftneg	;wreg free
 23586  0137EA  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23587  0137EE  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23588  0137F2  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23589  0137F6  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 23590  0137FA  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 23591  0137FE  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 23592  013802  EC51  F09E         	call	i2___ftadd	;wreg free
 23593  013806  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 23594  01380A  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 23595  01380E  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 23596                           
 23597                           ;main.c: 97: RMS = RMS + sin(2.0 * Angle);
 23598  013812  0E00               	movlw	0
 23599  013814  6E2A               	movwf	i2___ftmul@f2,c
 23600  013816  0E00               	movlw	0
 23601  013818  6E2B               	movwf	i2___ftmul@f2+1,c
 23602  01381A  0E40               	movlw	64
 23603  01381C  6E2C               	movwf	i2___ftmul@f2+2,c
 23604  01381E  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 23605  013822  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 23606  013826  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 23607  01382A  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23608  01382E  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3322
 23609  013832  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3322+1
 23610  013836  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3322+2
 23611                           
 23612                           ;main.c: 97: RMS = RMS + sin(2.0 * Angle);
 23613  01383A  C09A  F066         	movff	_peakToRMS$3322,sin@f
 23614  01383E  C09B  F067         	movff	_peakToRMS$3322+1,sin@f+1
 23615  013842  C09C  F068         	movff	_peakToRMS$3322+2,sin@f+2
 23616  013846  EC87  F09A         	call	_sin	;wreg free
 23617  01384A  C066  F09D         	movff	?_sin,_peakToRMS$3323
 23618  01384E  C067  F09E         	movff	?_sin+1,_peakToRMS$3323+1
 23619  013852  C068  F09F         	movff	?_sin+2,_peakToRMS$3323+2
 23620                           
 23621                           ;main.c: 97: RMS = RMS + sin(2.0 * Angle);
 23622  013856  C09D  F040         	movff	_peakToRMS$3323,i2___ftadd@f1
 23623  01385A  C09E  F041         	movff	_peakToRMS$3323+1,i2___ftadd@f1+1
 23624  01385E  C09F  F042         	movff	_peakToRMS$3323+2,i2___ftadd@f1+2
 23625  013862  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 23626  013866  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 23627  01386A  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 23628  01386E  EC51  F09E         	call	i2___ftadd	;wreg free
 23629  013872  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 23630  013876  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 23631  01387A  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 23632                           
 23633                           ;main.c: 98: RMS = RMS / (4.0 * acos(-1.0));
 23634  01387E  0E00               	movlw	0
 23635  013880  0100               	movlb	0	; () banked
 23636  013882  6F8E               	movwf	acos@x& (0+255),b
 23637  013884  0E80               	movlw	128
 23638  013886  6F8F               	movwf	(acos@x+1)& (0+255),b
 23639  013888  0EBF               	movlw	191
 23640  01388A  6F90               	movwf	(acos@x+2)& (0+255),b
 23641  01388C  EC12  F0AE         	call	_acos	;wreg free
 23642  013890  C08E  F0A0         	movff	?_acos,_peakToRMS$3321
 23643  013894  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3321+1
 23644  013898  C090  F0A2         	movff	?_acos+2,_peakToRMS$3321+2
 23645                           
 23646                           ;main.c: 98: RMS = RMS / (4.0 * acos(-1.0));
 23647  01389C  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 23648  0138A0  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 23649  0138A4  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 23650  0138A8  0E00               	movlw	0
 23651  0138AA  6E2A               	movwf	i2___ftmul@f2,c
 23652  0138AC  0E80               	movlw	128
 23653  0138AE  6E2B               	movwf	i2___ftmul@f2+1,c
 23654  0138B0  0E40               	movlw	64
 23655  0138B2  6E2C               	movwf	i2___ftmul@f2+2,c
 23656  0138B4  C0A0  F027         	movff	_peakToRMS$3321,i2___ftmul@f1
 23657  0138B8  C0A1  F028         	movff	_peakToRMS$3321+1,i2___ftmul@f1+1
 23658  0138BC  C0A2  F029         	movff	_peakToRMS$3321+2,i2___ftmul@f1+2
 23659  0138C0  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23660  0138C4  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 23661  0138C8  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 23662  0138CC  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 23663  0138D0  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23664  0138D4  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 23665  0138D8  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 23666  0138DC  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 23667                           
 23668                           ;main.c: 99: RMS = sqrt(RMS);
 23669  0138E0  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 23670  0138E4  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 23671  0138E8  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 23672  0138EC  EC27  F09F         	call	_sqrt	;wreg free
 23673  0138F0  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 23674  0138F4  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 23675  0138F8  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 23676                           
 23677                           ;main.c: 100: RMS = Peak * RMS;
 23678  0138FC  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 23679  013900  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 23680  013904  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 23681  013908  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 23682  01390C  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 23683  013910  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 23684  013914  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23685  013918  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 23686  01391C  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 23687  013920  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 23688                           
 23689                           ;main.c: 101: return RMS;
 23690  013924  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 23691  013928  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 23692  01392C  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 23693  013930  0012               	return	
 23694  013932                     __end_of_peakToRMS:
 23695                           	opt stack 0
 23696                           tosu	equ	0xFFF
 23697                           tosh	equ	0xFFE
 23698                           tosl	equ	0xFFD
 23699                           pclatu	equ	0xFFB
 23700                           pclath	equ	0xFFA
 23701                           tblptru	equ	0xFF8
 23702                           tblptrh	equ	0xFF7
 23703                           tblptrl	equ	0xFF6
 23704                           tablat	equ	0xFF5
 23705                           prodh	equ	0xFF4
 23706                           prodl	equ	0xFF3
 23707                           intcon	equ	0xFF2
 23708                           postinc0	equ	0xFEE
 23709                           fsr0h	equ	0xFEA
 23710                           fsr0l	equ	0xFE9
 23711                           wreg	equ	0xFE8
 23712                           indf1	equ	0xFE7
 23713                           postdec1	equ	0xFE5
 23714                           fsr1h	equ	0xFE2
 23715                           fsr1l	equ	0xFE1
 23716                           bsr	equ	0xFE0
 23717                           indf2	equ	0xFDF
 23718                           postinc2	equ	0xFDE
 23719                           postdec2	equ	0xFDD
 23720                           fsr2h	equ	0xFDA
 23721                           fsr2l	equ	0xFD9
 23722                           status	equ	0xFD8
 23723                           
 23724 ;; *************** function _acos *****************
 23725 ;; Defined at:
 23726 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 23727 ;; Parameters:    Size  Location     Type
 23728 ;;  x               3   46[BANK0 ] void 
 23729 ;; Auto vars:     Size  Location     Type
 23730 ;;		None
 23731 ;; Return value:  Size  Location     Type
 23732 ;;                  3   46[BANK0 ] void 
 23733 ;; Registers used:
 23734 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23735 ;; Tracked objects:
 23736 ;;		On entry : 0/0
 23737 ;;		On exit  : 0/0
 23738 ;;		Unchanged: 0/0
 23739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23740 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23741 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23743 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23744 ;;Total ram usage:        6 bytes
 23745 ;; Hardware stack levels used:    1
 23746 ;; Hardware stack levels required when called:    5
 23747 ;; This function calls:
 23748 ;;		_asin
 23749 ;;		i2___ftadd
 23750 ;;		i2___ftneg
 23751 ;; This function is called by:
 23752 ;;		_peakToRMS
 23753 ;; This function uses a non-reentrant model
 23754 ;;
 23755                           
 23756                           	psect	text90
 23757  015C24                     __ptext90:
 23758                           	opt stack 0
 23759  015C24                     _acos:
 23760                           	opt stack 9
 23761                           
 23762                           ;incstack = 0
 23763  015C24  C08E  F079         	movff	acos@x,asin@x
 23764  015C28  C08F  F07A         	movff	acos@x+1,asin@x+1
 23765  015C2C  C090  F07B         	movff	acos@x+2,asin@x+2
 23766  015C30  EC52  F099         	call	_asin	;wreg free
 23767  015C34  C079  F091         	movff	?_asin,_acos$3328
 23768  015C38  C07A  F092         	movff	?_asin+1,_acos$3328+1
 23769  015C3C  C07B  F093         	movff	?_asin+2,_acos$3328+2
 23770  015C40  C091  F024         	movff	_acos$3328,i2___ftneg@f1
 23771  015C44  C092  F025         	movff	_acos$3328+1,i2___ftneg@f1+1
 23772  015C48  C093  F026         	movff	_acos$3328+2,i2___ftneg@f1+2
 23773  015C4C  ECDC  F0B0         	call	i2___ftneg	;wreg free
 23774  015C50  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23775  015C54  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23776  015C58  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23777  015C5C  0E10               	movlw	16
 23778  015C5E  6E43               	movwf	i2___ftadd@f2,c
 23779  015C60  0EC9               	movlw	201
 23780  015C62  6E44               	movwf	i2___ftadd@f2+1,c
 23781  015C64  0E3F               	movlw	63
 23782  015C66  6E45               	movwf	i2___ftadd@f2+2,c
 23783  015C68  EC51  F09E         	call	i2___ftadd	;wreg free
 23784  015C6C  C040  F08E         	movff	?i2___ftadd,?_acos
 23785  015C70  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 23786  015C74  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 23787  015C78  0012               	return	
 23788  015C7A                     __end_of_acos:
 23789                           	opt stack 0
 23790                           tosu	equ	0xFFF
 23791                           tosh	equ	0xFFE
 23792                           tosl	equ	0xFFD
 23793                           pclatu	equ	0xFFB
 23794                           pclath	equ	0xFFA
 23795                           tblptru	equ	0xFF8
 23796                           tblptrh	equ	0xFF7
 23797                           tblptrl	equ	0xFF6
 23798                           tablat	equ	0xFF5
 23799                           prodh	equ	0xFF4
 23800                           prodl	equ	0xFF3
 23801                           intcon	equ	0xFF2
 23802                           postinc0	equ	0xFEE
 23803                           fsr0h	equ	0xFEA
 23804                           fsr0l	equ	0xFE9
 23805                           wreg	equ	0xFE8
 23806                           indf1	equ	0xFE7
 23807                           postdec1	equ	0xFE5
 23808                           fsr1h	equ	0xFE2
 23809                           fsr1l	equ	0xFE1
 23810                           bsr	equ	0xFE0
 23811                           indf2	equ	0xFDF
 23812                           postinc2	equ	0xFDE
 23813                           postdec2	equ	0xFDD
 23814                           fsr2h	equ	0xFDA
 23815                           fsr2l	equ	0xFD9
 23816                           status	equ	0xFD8
 23817                           
 23818 ;; *************** function _asin *****************
 23819 ;; Defined at:
 23820 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 23821 ;; Parameters:    Size  Location     Type
 23822 ;;  x               3   25[BANK0 ] void 
 23823 ;; Auto vars:     Size  Location     Type
 23824 ;;  y               3   40[BANK0 ] void 
 23825 ;;  sgn             3   28[BANK0 ] void 
 23826 ;; Return value:  Size  Location     Type
 23827 ;;                  3   25[BANK0 ] void 
 23828 ;; Registers used:
 23829 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23830 ;; Tracked objects:
 23831 ;;		On entry : 0/0
 23832 ;;		On exit  : 0/0
 23833 ;;		Unchanged: 0/0
 23834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23835 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23836 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23838 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23839 ;;Total ram usage:       21 bytes
 23840 ;; Hardware stack levels used:    1
 23841 ;; Hardware stack levels required when called:    4
 23842 ;; This function calls:
 23843 ;;		_atan
 23844 ;;		_fabs
 23845 ;;		_sqrt
 23846 ;;		i2___ftadd
 23847 ;;		i2___ftdiv
 23848 ;;		i2___ftge
 23849 ;;		i2___ftmul
 23850 ;;		i2___ftneg
 23851 ;; This function is called by:
 23852 ;;		_acos
 23853 ;; This function uses a non-reentrant model
 23854 ;;
 23855                           
 23856                           	psect	text91
 23857  0132A4                     __ptext91:
 23858                           	opt stack 0
 23859  0132A4                     _asin:
 23860                           	opt stack 9
 23861                           
 23862                           ;incstack = 0
 23863  0132A4  0E00               	movlw	0
 23864  0132A6  6E2A               	movwf	i2___ftge@ff1,c
 23865  0132A8  0E80               	movlw	128
 23866  0132AA  6E2B               	movwf	i2___ftge@ff1+1,c
 23867  0132AC  0E3F               	movlw	63
 23868  0132AE  6E2C               	movwf	i2___ftge@ff1+2,c
 23869  0132B0  C079  F027         	movff	asin@x,fabs@d
 23870  0132B4  C07A  F028         	movff	asin@x+1,fabs@d+1
 23871  0132B8  C07B  F029         	movff	asin@x+2,fabs@d+2
 23872  0132BC  EC23  F0B0         	call	_fabs	;wreg free
 23873  0132C0  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 23874  0132C4  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 23875  0132C8  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 23876  0132CC  EC40  F0A9         	call	i2___ftge	;wreg free
 23877  0132D0  B0D8               	btfsc	status,0,c
 23878  0132D2  D00C               	goto	i2l1324
 23879  0132D4  0E00               	movlw	0
 23880  0132D6  0100               	movlb	0	; () banked
 23881  0132D8  6FDE               	movwf	(_errno+1)& (0+255),b
 23882  0132DA  0E21               	movlw	33
 23883  0132DC  6FDD               	movwf	_errno& (0+255),b
 23884  0132DE  0E00               	movlw	0
 23885  0132E0  6F79               	movwf	?_asin& (0+255),b
 23886  0132E2  0E00               	movlw	0
 23887  0132E4  6F7A               	movwf	(?_asin+1)& (0+255),b
 23888  0132E6  0E00               	movlw	0
 23889  0132E8  6F7B               	movwf	(?_asin+2)& (0+255),b
 23890                           
 23891                           ; BSR set to: 0
 23892  0132EA  0012               	return	
 23893  0132EC                     i2l1324:
 23894                           
 23895                           ; BSR set to: 0
 23896  0132EC  0E00               	movlw	0
 23897  0132EE  0100               	movlb	0	; () banked
 23898  0132F0  6F7C               	movwf	asin@sgn& (0+255),b
 23899  0132F2  0E80               	movlw	128
 23900  0132F4  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 23901  0132F6  0E3F               	movlw	63
 23902  0132F8  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 23903                           
 23904                           ; BSR set to: 0
 23905  0132FA  C079  F02A         	movff	asin@x,i2___ftmul@f2
 23906  0132FE  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 23907  013302  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 23908  013306  C079  F027         	movff	asin@x,i2___ftmul@f1
 23909  01330A  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 23910  01330E  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 23911  013312  EC4B  F0A4         	call	i2___ftmul	;wreg free
 23912  013316  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 23913  01331A  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 23914  01331E  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 23915  013322  ECDC  F0B0         	call	i2___ftneg	;wreg free
 23916  013326  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23917  01332A  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23918  01332E  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23919  013332  0E00               	movlw	0
 23920  013334  6E43               	movwf	i2___ftadd@f2,c
 23921  013336  0E80               	movlw	128
 23922  013338  6E44               	movwf	i2___ftadd@f2+1,c
 23923  01333A  0E3F               	movlw	63
 23924  01333C  6E45               	movwf	i2___ftadd@f2+2,c
 23925  01333E  EC51  F09E         	call	i2___ftadd	;wreg free
 23926  013342  C040  F07F         	movff	?i2___ftadd,_asin$3329
 23927  013346  C041  F080         	movff	?i2___ftadd+1,_asin$3329+1
 23928  01334A  C042  F081         	movff	?i2___ftadd+2,_asin$3329+2
 23929  01334E  C07F  F066         	movff	_asin$3329,sqrt@a
 23930  013352  C080  F067         	movff	_asin$3329+1,sqrt@a+1
 23931  013356  C081  F068         	movff	_asin$3329+2,sqrt@a+2
 23932  01335A  EC27  F09F         	call	_sqrt	;wreg free
 23933  01335E  C066  F088         	movff	?_sqrt,asin@y
 23934  013362  C067  F089         	movff	?_sqrt+1,asin@y+1
 23935  013366  C068  F08A         	movff	?_sqrt+2,asin@y+2
 23936  01336A  C079  F027         	movff	asin@x,fabs@d
 23937  01336E  C07A  F028         	movff	asin@x+1,fabs@d+1
 23938  013372  C07B  F029         	movff	asin@x+2,fabs@d+2
 23939  013376  EC23  F0B0         	call	_fabs	;wreg free
 23940  01337A  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 23941  01337E  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 23942  013382  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 23943  013386  0EC3               	movlw	195
 23944  013388  6E2D               	movwf	i2___ftge@ff2,c
 23945  01338A  0E35               	movlw	53
 23946  01338C  6E2E               	movwf	i2___ftge@ff2+1,c
 23947  01338E  0E3F               	movlw	63
 23948  013390  6E2F               	movwf	i2___ftge@ff2+2,c
 23949  013392  EC40  F0A9         	call	i2___ftge	;wreg free
 23950  013396  B0D8               	btfsc	status,0,c
 23951  013398  D023               	goto	i2l1326
 23952  01339A  C079  F015         	movff	asin@x,i2___ftdiv@f1
 23953  01339E  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 23954  0133A2  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 23955  0133A6  C088  F018         	movff	asin@y,i2___ftdiv@f2
 23956  0133AA  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 23957  0133AE  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 23958  0133B2  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23959  0133B6  C015  F08B         	movff	?i2___ftdiv,_asin$3330
 23960  0133BA  C016  F08C         	movff	?i2___ftdiv+1,_asin$3330+1
 23961  0133BE  C017  F08D         	movff	?i2___ftdiv+2,_asin$3330+2
 23962  0133C2  C08B  F058         	movff	_asin$3330,atan@f
 23963  0133C6  C08C  F059         	movff	_asin$3330+1,atan@f+1
 23964  0133CA  C08D  F05A         	movff	_asin$3330+2,atan@f+2
 23965  0133CE  EC99  F09C         	call	_atan	;wreg free
 23966  0133D2  C058  F079         	movff	?_atan,?_asin
 23967  0133D6  C059  F07A         	movff	?_atan+1,?_asin+1
 23968  0133DA  C05A  F07B         	movff	?_atan+2,?_asin+2
 23969  0133DE  0012               	return	
 23970  0133E0                     i2l1326:
 23971  0133E0  0100               	movlb	0	; () banked
 23972  0133E2  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 23973  0133E4  D055               	goto	i2l1327
 23974                           
 23975                           ; BSR set to: 0
 23976  0133E6  C079  F018         	movff	asin@x,i2___ftdiv@f2
 23977  0133EA  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 23978  0133EE  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 23979  0133F2  C088  F024         	movff	asin@y,i2___ftneg@f1
 23980  0133F6  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 23981  0133FA  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 23982  0133FE  ECDC  F0B0         	call	i2___ftneg	;wreg free
 23983  013402  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 23984  013406  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 23985  01340A  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 23986  01340E  EC39  F0A5         	call	i2___ftdiv	;wreg free
 23987  013412  C015  F08B         	movff	?i2___ftdiv,_asin$3330
 23988  013416  C016  F08C         	movff	?i2___ftdiv+1,_asin$3330+1
 23989  01341A  C017  F08D         	movff	?i2___ftdiv+2,_asin$3330+2
 23990  01341E  C08B  F058         	movff	_asin$3330,atan@f
 23991  013422  C08C  F059         	movff	_asin$3330+1,atan@f+1
 23992  013426  C08D  F05A         	movff	_asin$3330+2,atan@f+2
 23993  01342A  EC99  F09C         	call	_atan	;wreg free
 23994  01342E  C058  F085         	movff	?_atan,_asin$3331
 23995  013432  C059  F086         	movff	?_atan+1,_asin$3331+1
 23996  013436  C05A  F087         	movff	?_atan+2,_asin$3331+2
 23997  01343A  0E10               	movlw	16
 23998  01343C  6E43               	movwf	i2___ftadd@f2,c
 23999  01343E  0EC9               	movlw	201
 24000  013440  6E44               	movwf	i2___ftadd@f2+1,c
 24001  013442  0E3F               	movlw	63
 24002  013444  6E45               	movwf	i2___ftadd@f2+2,c
 24003  013446  C085  F024         	movff	_asin$3331,i2___ftneg@f1
 24004  01344A  C086  F025         	movff	_asin$3331+1,i2___ftneg@f1+1
 24005  01344E  C087  F026         	movff	_asin$3331+2,i2___ftneg@f1+2
 24006  013452  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24007  013456  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24008  01345A  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24009  01345E  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24010  013462  EC51  F09E         	call	i2___ftadd	;wreg free
 24011  013466  C040  F082         	movff	?i2___ftadd,_asin$3332
 24012  01346A  C041  F083         	movff	?i2___ftadd+1,_asin$3332+1
 24013  01346E  C042  F084         	movff	?i2___ftadd+2,_asin$3332+2
 24014  013472  C082  F024         	movff	_asin$3332,i2___ftneg@f1
 24015  013476  C083  F025         	movff	_asin$3332+1,i2___ftneg@f1+1
 24016  01347A  C084  F026         	movff	_asin$3332+2,i2___ftneg@f1+2
 24017  01347E  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24018  013482  C024  F079         	movff	?i2___ftneg,?_asin
 24019  013486  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 24020  01348A  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 24021  01348E  0012               	return	
 24022  013490                     i2l1327:
 24023  013490  C079  F018         	movff	asin@x,i2___ftdiv@f2
 24024  013494  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 24025  013498  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 24026  01349C  C088  F015         	movff	asin@y,i2___ftdiv@f1
 24027  0134A0  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 24028  0134A4  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 24029  0134A8  EC39  F0A5         	call	i2___ftdiv	;wreg free
 24030  0134AC  C015  F08B         	movff	?i2___ftdiv,_asin$3330
 24031  0134B0  C016  F08C         	movff	?i2___ftdiv+1,_asin$3330+1
 24032  0134B4  C017  F08D         	movff	?i2___ftdiv+2,_asin$3330+2
 24033  0134B8  C08B  F058         	movff	_asin$3330,atan@f
 24034  0134BC  C08C  F059         	movff	_asin$3330+1,atan@f+1
 24035  0134C0  C08D  F05A         	movff	_asin$3330+2,atan@f+2
 24036  0134C4  EC99  F09C         	call	_atan	;wreg free
 24037  0134C8  C058  F085         	movff	?_atan,_asin$3331
 24038  0134CC  C059  F086         	movff	?_atan+1,_asin$3331+1
 24039  0134D0  C05A  F087         	movff	?_atan+2,_asin$3331+2
 24040  0134D4  C085  F024         	movff	_asin$3331,i2___ftneg@f1
 24041  0134D8  C086  F025         	movff	_asin$3331+1,i2___ftneg@f1+1
 24042  0134DC  C087  F026         	movff	_asin$3331+2,i2___ftneg@f1+2
 24043  0134E0  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24044  0134E4  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24045  0134E8  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24046  0134EC  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24047  0134F0  0E10               	movlw	16
 24048  0134F2  6E43               	movwf	i2___ftadd@f2,c
 24049  0134F4  0EC9               	movlw	201
 24050  0134F6  6E44               	movwf	i2___ftadd@f2+1,c
 24051  0134F8  0E3F               	movlw	63
 24052  0134FA  6E45               	movwf	i2___ftadd@f2+2,c
 24053  0134FC  EC51  F09E         	call	i2___ftadd	;wreg free
 24054  013500  C040  F079         	movff	?i2___ftadd,?_asin
 24055  013504  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 24056  013508  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 24057  01350C  0012               	return	
 24058  01350E                     __end_of_asin:
 24059                           	opt stack 0
 24060                           tosu	equ	0xFFF
 24061                           tosh	equ	0xFFE
 24062                           tosl	equ	0xFFD
 24063                           pclatu	equ	0xFFB
 24064                           pclath	equ	0xFFA
 24065                           tblptru	equ	0xFF8
 24066                           tblptrh	equ	0xFF7
 24067                           tblptrl	equ	0xFF6
 24068                           tablat	equ	0xFF5
 24069                           prodh	equ	0xFF4
 24070                           prodl	equ	0xFF3
 24071                           intcon	equ	0xFF2
 24072                           postinc0	equ	0xFEE
 24073                           fsr0h	equ	0xFEA
 24074                           fsr0l	equ	0xFE9
 24075                           wreg	equ	0xFE8
 24076                           indf1	equ	0xFE7
 24077                           postdec1	equ	0xFE5
 24078                           fsr1h	equ	0xFE2
 24079                           fsr1l	equ	0xFE1
 24080                           bsr	equ	0xFE0
 24081                           indf2	equ	0xFDF
 24082                           postinc2	equ	0xFDE
 24083                           postdec2	equ	0xFDD
 24084                           fsr2h	equ	0xFDA
 24085                           fsr2l	equ	0xFD9
 24086                           status	equ	0xFD8
 24087                           
 24088 ;; *************** function _sqrt *****************
 24089 ;; Defined at:
 24090 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 24091 ;; Parameters:    Size  Location     Type
 24092 ;;  a               3    6[BANK0 ] void 
 24093 ;; Auto vars:     Size  Location     Type
 24094 ;;  x               3   22[BANK0 ] void 
 24095 ;;  q               3   19[BANK0 ] void 
 24096 ;;  z               3   16[BANK0 ] void 
 24097 ;;  og              3   12[BANK0 ] void 
 24098 ;;  i               1   15[BANK0 ] unsigned char 
 24099 ;; Return value:  Size  Location     Type
 24100 ;;                  3    6[BANK0 ] unsigned char 
 24101 ;; Registers used:
 24102 ;;		wreg, status,2, status,0, cstack
 24103 ;; Tracked objects:
 24104 ;;		On entry : 0/0
 24105 ;;		On exit  : 0/0
 24106 ;;		Unchanged: 0/0
 24107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24108 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24109 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24110 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24111 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24112 ;;Total ram usage:       19 bytes
 24113 ;; Hardware stack levels used:    1
 24114 ;; Hardware stack levels required when called:    3
 24115 ;; This function calls:
 24116 ;;		i2___ftge
 24117 ;;		i2___ftmul
 24118 ;;		i2___ftsub
 24119 ;; This function is called by:
 24120 ;;		_peakToRMS
 24121 ;;		_asin
 24122 ;; This function uses a non-reentrant model
 24123 ;;
 24124                           
 24125                           	psect	text92
 24126  013E4E                     __ptext92:
 24127                           	opt stack 0
 24128  013E4E                     _sqrt:
 24129                           	opt stack 11
 24130                           
 24131                           ;incstack = 0
 24132  013E4E  0E00               	movlw	0
 24133  013E50  6E2A               	movwf	i2___ftge@ff1,c
 24134  013E52  0E00               	movlw	0
 24135  013E54  6E2B               	movwf	i2___ftge@ff1+1,c
 24136  013E56  0E00               	movlw	0
 24137  013E58  6E2C               	movwf	i2___ftge@ff1+2,c
 24138  013E5A  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 24139  013E5E  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 24140  013E62  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 24141  013E66  EC40  F0A9         	call	i2___ftge	;wreg free
 24142  013E6A  A0D8               	btfss	status,0,c
 24143  013E6C  D00E               	goto	i2l1852
 24144  013E6E  0100               	movlb	0	; () banked
 24145  013E70  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 24146  013E72  D004               	goto	i2l1853
 24147                           
 24148                           ; BSR set to: 0
 24149  013E74  0E00               	movlw	0
 24150  013E76  6FDE               	movwf	(_errno+1)& (0+255),b
 24151  013E78  0E21               	movlw	33
 24152  013E7A  6FDD               	movwf	_errno& (0+255),b
 24153  013E7C                     i2l1853:
 24154                           
 24155                           ; BSR set to: 0
 24156  013E7C  0E00               	movlw	0
 24157  013E7E  6F66               	movwf	?_sqrt& (0+255),b
 24158  013E80  0E00               	movlw	0
 24159  013E82  6F67               	movwf	(?_sqrt+1)& (0+255),b
 24160  013E84  0E00               	movlw	0
 24161  013E86  6F68               	movwf	(?_sqrt+2)& (0+255),b
 24162                           
 24163                           ; BSR set to: 0
 24164  013E88  0012               	return	
 24165  013E8A                     i2l1852:
 24166  013E8A  C066  F070         	movff	sqrt@a,sqrt@z
 24167  013E8E  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 24168  013E92  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 24169  013E96  C066  F069         	movff	sqrt@a,??_sqrt
 24170  013E9A  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 24171  013E9E  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 24172  013EA2  0100               	movlb	0	; () banked
 24173  013EA4  1F69               	comf	??_sqrt& (0+255),f,b
 24174  013EA6  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 24175  013EA8  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 24176  013EAA  2B69               	incf	??_sqrt& (0+255),f,b
 24177  013EAC  0E00               	movlw	0
 24178  013EAE  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 24179  013EB0  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 24180  013EB2  0EC8               	movlw	200
 24181  013EB4  2569               	addwf	??_sqrt& (0+255),w,b
 24182  013EB6  6F76               	movwf	sqrt@x& (0+255),b
 24183  013EB8  0E6E               	movlw	110
 24184  013EBA  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 24185  013EBC  6F77               	movwf	(sqrt@x+1)& (0+255),b
 24186  013EBE  0EBE               	movlw	190
 24187  013EC0  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 24188  013EC2  6F78               	movwf	(sqrt@x+2)& (0+255),b
 24189                           
 24190                           ; BSR set to: 0
 24191  013EC4  90D8               	bcf	status,0,c
 24192  013EC6  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 24193  013EC8  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 24194  013ECA  3376               	rrcf	sqrt@x& (0+255),f,b
 24195                           
 24196                           ; BSR set to: 0
 24197  013ECC  0E00               	movlw	0
 24198  013ECE  5F70               	subwf	sqrt@z& (0+255),f,b
 24199  013ED0  0E80               	movlw	128
 24200  013ED2  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 24201  013ED4  0E00               	movlw	0
 24202  013ED6  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 24203                           
 24204                           ; BSR set to: 0
 24205  013ED8  0E04               	movlw	4
 24206  013EDA  6F6F               	movwf	sqrt@i& (0+255),b
 24207  013EDC                     
 24208                           ; BSR set to: 0
 24209                           
 24210                           ; BSR set to: 0
 24211  013EDC  C076  F06C         	movff	sqrt@x,sqrt@og
 24212  013EE0  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 24213  013EE4  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 24214                           
 24215                           ; BSR set to: 0
 24216  013EE8  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24217  013EEC  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24218  013EF0  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24219  013EF4  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 24220  013EF8  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 24221  013EFC  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 24222  013F00  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24223  013F04  C027  F073         	movff	?i2___ftmul,sqrt@q
 24224  013F08  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24225  013F0C  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24226  013F10  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 24227  013F14  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 24228  013F18  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 24229  013F1C  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 24230  013F20  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 24231  013F24  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 24232  013F28  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24233  013F2C  C027  F073         	movff	?i2___ftmul,sqrt@q
 24234  013F30  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24235  013F34  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24236  013F38  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 24237  013F3C  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 24238  013F40  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 24239  013F44  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 24240  013F48  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 24241  013F4C  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 24242  013F50  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24243  013F54  C027  F073         	movff	?i2___ftmul,sqrt@q
 24244  013F58  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 24245  013F5C  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 24246  013F60  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24247  013F64  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24248  013F68  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24249  013F6C  0E00               	movlw	0
 24250  013F6E  6E2A               	movwf	i2___ftmul@f2,c
 24251  013F70  0EC0               	movlw	192
 24252  013F72  6E2B               	movwf	i2___ftmul@f2+1,c
 24253  013F74  0E3F               	movlw	63
 24254  013F76  6E2C               	movwf	i2___ftmul@f2+2,c
 24255  013F78  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24256  013F7C  C027  F076         	movff	?i2___ftmul,sqrt@x
 24257  013F80  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 24258  013F84  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 24259  013F88  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 24260  013F8C  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 24261  013F90  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 24262  013F94  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 24263  013F98  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 24264  013F9C  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 24265  013FA0  EC61  F0AF         	call	i2___ftsub	;wreg free
 24266  013FA4  C060  F076         	movff	?i2___ftsub,sqrt@x
 24267  013FA8  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 24268  013FAC  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 24269  013FB0  0100               	movlb	0	; () banked
 24270  013FB2  2F6F               	decfsz	sqrt@i& (0+255),f,b
 24271  013FB4  D793               	goto	i2l1855
 24272                           
 24273                           ; BSR set to: 0
 24274                           
 24275                           ; BSR set to: 0
 24276  013FB6  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 24277  013FBA  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 24278  013FBE  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 24279  013FC2  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 24280  013FC6  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 24281  013FCA  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 24282  013FCE  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24283  013FD2  C027  F066         	movff	?i2___ftmul,?_sqrt
 24284  013FD6  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 24285  013FDA  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 24286  013FDE  0012               	return	
 24287  013FE0                     __end_of_sqrt:
 24288                           	opt stack 0
 24289                           tosu	equ	0xFFF
 24290                           tosh	equ	0xFFE
 24291                           tosl	equ	0xFFD
 24292                           pclatu	equ	0xFFB
 24293                           pclath	equ	0xFFA
 24294                           tblptru	equ	0xFF8
 24295                           tblptrh	equ	0xFF7
 24296                           tblptrl	equ	0xFF6
 24297                           tablat	equ	0xFF5
 24298                           prodh	equ	0xFF4
 24299                           prodl	equ	0xFF3
 24300                           intcon	equ	0xFF2
 24301                           postinc0	equ	0xFEE
 24302                           fsr0h	equ	0xFEA
 24303                           fsr0l	equ	0xFE9
 24304                           wreg	equ	0xFE8
 24305                           indf1	equ	0xFE7
 24306                           postdec1	equ	0xFE5
 24307                           fsr1h	equ	0xFE2
 24308                           fsr1l	equ	0xFE1
 24309                           bsr	equ	0xFE0
 24310                           indf2	equ	0xFDF
 24311                           postinc2	equ	0xFDE
 24312                           postdec2	equ	0xFDD
 24313                           fsr2h	equ	0xFDA
 24314                           fsr2l	equ	0xFD9
 24315                           status	equ	0xFD8
 24316                           
 24317 ;; *************** function _atan *****************
 24318 ;; Defined at:
 24319 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 24320 ;; Parameters:    Size  Location     Type
 24321 ;;  f               3   87[COMRAM] unsigned char 
 24322 ;; Auto vars:     Size  Location     Type
 24323 ;;  val             3   10[BANK0 ] unsigned char 
 24324 ;;  val_squared     3    7[BANK0 ] unsigned char 
 24325 ;;  x               3    3[BANK0 ] unsigned char 
 24326 ;;  y               3    0[BANK0 ] unsigned char 
 24327 ;;  recip           1    6[BANK0 ] unsigned char 
 24328 ;; Return value:  Size  Location     Type
 24329 ;;                  3   87[COMRAM] unsigned char 
 24330 ;; Registers used:
 24331 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24332 ;; Tracked objects:
 24333 ;;		On entry : 0/0
 24334 ;;		On exit  : 0/0
 24335 ;;		Unchanged: 0/0
 24336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24337 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24338 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24340 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24341 ;;Total ram usage:       16 bytes
 24342 ;; Hardware stack levels used:    1
 24343 ;; Hardware stack levels required when called:    3
 24344 ;; This function calls:
 24345 ;;		_eval_poly
 24346 ;;		_fabs
 24347 ;;		i2___ftadd
 24348 ;;		i2___ftdiv
 24349 ;;		i2___ftge
 24350 ;;		i2___ftmul
 24351 ;;		i2___ftneg
 24352 ;; This function is called by:
 24353 ;;		_asin
 24354 ;; This function uses a non-reentrant model
 24355 ;;
 24356                           
 24357                           	psect	text93
 24358  013932                     __ptext93:
 24359                           	opt stack 0
 24360  013932                     _atan:
 24361                           	opt stack 9
 24362                           
 24363                           ;incstack = 0
 24364  013932  C058  F027         	movff	atan@f,fabs@d
 24365  013936  C059  F028         	movff	atan@f+1,fabs@d+1
 24366  01393A  C05A  F029         	movff	atan@f+2,fabs@d+2
 24367  01393E  EC23  F0B0         	call	_fabs	;wreg free
 24368  013942  C027  F06A         	movff	?_fabs,atan@val
 24369  013946  C028  F06B         	movff	?_fabs+1,atan@val+1
 24370  01394A  C029  F06C         	movff	?_fabs+2,atan@val+2
 24371  01394E  0100               	movlb	0	; () banked
 24372  013950  516A               	movf	atan@val& (0+255),w,b
 24373  013952  116B               	iorwf	(atan@val+1)& (0+255),w,b
 24374  013954  116C               	iorwf	(atan@val+2)& (0+255),w,b
 24375  013956  A4D8               	btfss	status,2,c
 24376  013958  D007               	goto	i2l1343
 24377                           
 24378                           ; BSR set to: 0
 24379  01395A  0E00               	movlw	0
 24380  01395C  6E58               	movwf	?_atan,c
 24381  01395E  0E00               	movlw	0
 24382  013960  6E59               	movwf	?_atan+1,c
 24383  013962  0E00               	movlw	0
 24384  013964  6E5A               	movwf	?_atan+2,c
 24385                           
 24386                           ; BSR set to: 0
 24387  013966  0012               	return	
 24388  013968                     i2l1343:
 24389                           
 24390                           ; BSR set to: 0
 24391                           
 24392                           ; BSR set to: 0
 24393  013968  0E00               	movlw	0
 24394  01396A  6E2A               	movwf	i2___ftge@ff1,c
 24395  01396C  0E80               	movlw	128
 24396  01396E  6E2B               	movwf	i2___ftge@ff1+1,c
 24397  013970  0E3F               	movlw	63
 24398  013972  6E2C               	movwf	i2___ftge@ff1+2,c
 24399  013974  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 24400  013978  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 24401  01397C  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 24402  013980  EC40  F0A9         	call	i2___ftge	;wreg free
 24403  013984  B0D8               	btfsc	status,0,c
 24404  013986  D002               	goto	i2u1514_40
 24405  013988  0E01               	movlw	1
 24406  01398A  D001               	goto	i2u1515_40
 24407  01398C                     i2u1514_40:
 24408  01398C  0E00               	movlw	0
 24409  01398E                     i2u1515_40:
 24410  01398E  0100               	movlb	0	; () banked
 24411  013990  6F66               	movwf	atan@recip& (0+255),b
 24412  013992  5166               	movf	atan@recip& (0+255),w,b
 24413  013994  B4D8               	btfsc	status,2,c
 24414  013996  D014               	goto	i2l1345
 24415                           
 24416                           ; BSR set to: 0
 24417  013998  0E00               	movlw	0
 24418  01399A  6E15               	movwf	i2___ftdiv@f1,c
 24419  01399C  0E80               	movlw	128
 24420  01399E  6E16               	movwf	i2___ftdiv@f1+1,c
 24421  0139A0  0E3F               	movlw	63
 24422  0139A2  6E17               	movwf	i2___ftdiv@f1+2,c
 24423  0139A4  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 24424  0139A8  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 24425  0139AC  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 24426  0139B0  EC39  F0A5         	call	i2___ftdiv	;wreg free
 24427  0139B4  C015  F06A         	movff	?i2___ftdiv,atan@val
 24428  0139B8  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 24429  0139BC  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 24430  0139C0                     i2l1345:
 24431  0139C0  C06A  F027         	movff	atan@val,i2___ftmul@f1
 24432  0139C4  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 24433  0139C8  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 24434  0139CC  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 24435  0139D0  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 24436  0139D4  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 24437  0139D8  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24438  0139DC  C027  F067         	movff	?i2___ftmul,atan@val_squared
 24439  0139E0  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 24440  0139E4  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 24441  0139E8  C067  F04C         	movff	atan@val_squared,eval_poly@x
 24442  0139EC  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 24443  0139F0  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 24444  0139F4  0EE0               	movlw	low atan@coeff_b
 24445  0139F6  6E4F               	movwf	eval_poly@d,c
 24446  0139F8  0EF3               	movlw	high atan@coeff_b
 24447  0139FA  6E50               	movwf	eval_poly@d+1,c
 24448  0139FC  0E00               	movlw	0
 24449  0139FE  6E52               	movwf	eval_poly@n+1,c
 24450  013A00  0E04               	movlw	4
 24451  013A02  6E51               	movwf	eval_poly@n,c
 24452  013A04  EC1B  F0A6         	call	_eval_poly	;wreg free
 24453  013A08  C04C  F060         	movff	?_eval_poly,atan@y
 24454  013A0C  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 24455  013A10  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 24456  013A14  C067  F04C         	movff	atan@val_squared,eval_poly@x
 24457  013A18  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 24458  013A1C  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 24459  013A20  0EBF               	movlw	low atan@coeff_a
 24460  013A22  6E4F               	movwf	eval_poly@d,c
 24461  013A24  0EF3               	movlw	high atan@coeff_a
 24462  013A26  6E50               	movwf	eval_poly@d+1,c
 24463  013A28  0E00               	movlw	0
 24464  013A2A  6E52               	movwf	eval_poly@n+1,c
 24465  013A2C  0E05               	movlw	5
 24466  013A2E  6E51               	movwf	eval_poly@n,c
 24467  013A30  EC1B  F0A6         	call	_eval_poly	;wreg free
 24468  013A34  C04C  F063         	movff	?_eval_poly,atan@x
 24469  013A38  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 24470  013A3C  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 24471  013A40  C06A  F027         	movff	atan@val,i2___ftmul@f1
 24472  013A44  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 24473  013A48  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 24474  013A4C  C060  F018         	movff	atan@y,i2___ftdiv@f2
 24475  013A50  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 24476  013A54  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 24477  013A58  C063  F015         	movff	atan@x,i2___ftdiv@f1
 24478  013A5C  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 24479  013A60  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 24480  013A64  EC39  F0A5         	call	i2___ftdiv	;wreg free
 24481  013A68  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 24482  013A6C  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 24483  013A70  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 24484  013A74  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24485  013A78  C027  F06A         	movff	?i2___ftmul,atan@val
 24486  013A7C  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 24487  013A80  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 24488  013A84  0100               	movlb	0	; () banked
 24489  013A86  5166               	movf	atan@recip& (0+255),w,b
 24490  013A88  B4D8               	btfsc	status,2,c
 24491  013A8A  D01C               	goto	i2l1346
 24492                           
 24493                           ; BSR set to: 0
 24494  013A8C  C06A  F024         	movff	atan@val,i2___ftneg@f1
 24495  013A90  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 24496  013A94  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 24497  013A98  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24498  013A9C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24499  013AA0  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24500  013AA4  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24501  013AA8  0E10               	movlw	16
 24502  013AAA  6E43               	movwf	i2___ftadd@f2,c
 24503  013AAC  0EC9               	movlw	201
 24504  013AAE  6E44               	movwf	i2___ftadd@f2+1,c
 24505  013AB0  0E3F               	movlw	63
 24506  013AB2  6E45               	movwf	i2___ftadd@f2+2,c
 24507  013AB4  EC51  F09E         	call	i2___ftadd	;wreg free
 24508  013AB8  C040  F06A         	movff	?i2___ftadd,atan@val
 24509  013ABC  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 24510  013AC0  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 24511  013AC4                     i2l1346:
 24512  013AC4  BE5A               	btfsc	atan@f+2,7,c
 24513  013AC6  D007               	goto	i2l1348
 24514  013AC8  C06A  F058         	movff	atan@val,?_atan
 24515  013ACC  C06B  F059         	movff	atan@val+1,?_atan+1
 24516  013AD0  C06C  F05A         	movff	atan@val+2,?_atan+2
 24517  013AD4  0012               	return	
 24518  013AD6                     i2l1348:
 24519  013AD6  C06A  F024         	movff	atan@val,i2___ftneg@f1
 24520  013ADA  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 24521  013ADE  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 24522  013AE2  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24523  013AE6  C024  F058         	movff	?i2___ftneg,?_atan
 24524  013AEA  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 24525  013AEE  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 24526  013AF2  0012               	return	
 24527  013AF4                     __end_of_atan:
 24528                           	opt stack 0
 24529                           tosu	equ	0xFFF
 24530                           tosh	equ	0xFFE
 24531                           tosl	equ	0xFFD
 24532                           pclatu	equ	0xFFB
 24533                           pclath	equ	0xFFA
 24534                           tblptru	equ	0xFF8
 24535                           tblptrh	equ	0xFF7
 24536                           tblptrl	equ	0xFF6
 24537                           tablat	equ	0xFF5
 24538                           prodh	equ	0xFF4
 24539                           prodl	equ	0xFF3
 24540                           intcon	equ	0xFF2
 24541                           postinc0	equ	0xFEE
 24542                           fsr0h	equ	0xFEA
 24543                           fsr0l	equ	0xFE9
 24544                           wreg	equ	0xFE8
 24545                           indf1	equ	0xFE7
 24546                           postdec1	equ	0xFE5
 24547                           fsr1h	equ	0xFE2
 24548                           fsr1l	equ	0xFE1
 24549                           bsr	equ	0xFE0
 24550                           indf2	equ	0xFDF
 24551                           postinc2	equ	0xFDE
 24552                           postdec2	equ	0xFDD
 24553                           fsr2h	equ	0xFDA
 24554                           fsr2l	equ	0xFD9
 24555                           status	equ	0xFD8
 24556                           
 24557 ;; *************** function _fabs *****************
 24558 ;; Defined at:
 24559 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 24560 ;; Parameters:    Size  Location     Type
 24561 ;;  d               3   38[COMRAM] unsigned char 
 24562 ;; Auto vars:     Size  Location     Type
 24563 ;;		None
 24564 ;; Return value:  Size  Location     Type
 24565 ;;                  3   38[COMRAM] unsigned char 
 24566 ;; Registers used:
 24567 ;;		wreg, status,2, status,0, cstack
 24568 ;; Tracked objects:
 24569 ;;		On entry : 0/0
 24570 ;;		On exit  : 0/0
 24571 ;;		Unchanged: 0/0
 24572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24573 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24576 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24577 ;;Total ram usage:        3 bytes
 24578 ;; Hardware stack levels used:    1
 24579 ;; Hardware stack levels required when called:    1
 24580 ;; This function calls:
 24581 ;;		i2___ftneg
 24582 ;; This function is called by:
 24583 ;;		_asin
 24584 ;;		_atan
 24585 ;; This function uses a non-reentrant model
 24586 ;;
 24587                           
 24588                           	psect	text94
 24589  016046                     __ptext94:
 24590                           	opt stack 0
 24591  016046                     _fabs:
 24592                           	opt stack 11
 24593                           
 24594                           ;incstack = 0
 24595  016046  AE29               	btfss	fabs@d+2,7,c
 24596  016048  D00F               	goto	i2l1440
 24597  01604A  C027  F024         	movff	fabs@d,i2___ftneg@f1
 24598  01604E  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 24599  016052  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 24600  016056  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24601  01605A  C024  F027         	movff	?i2___ftneg,?_fabs
 24602  01605E  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 24603  016062  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 24604  016066  0012               	return	
 24605  016068                     i2l1440:
 24606  016068  C027  F027         	movff	fabs@d,?_fabs
 24607  01606C  C028  F028         	movff	fabs@d+1,?_fabs+1
 24608  016070  C029  F029         	movff	fabs@d+2,?_fabs+2
 24609  016074  0012               	return		;funcret
 24610  016076                     __end_of_fabs:
 24611                           	opt stack 0
 24612                           tosu	equ	0xFFF
 24613                           tosh	equ	0xFFE
 24614                           tosl	equ	0xFFD
 24615                           pclatu	equ	0xFFB
 24616                           pclath	equ	0xFFA
 24617                           tblptru	equ	0xFF8
 24618                           tblptrh	equ	0xFF7
 24619                           tblptrl	equ	0xFF6
 24620                           tablat	equ	0xFF5
 24621                           prodh	equ	0xFF4
 24622                           prodl	equ	0xFF3
 24623                           intcon	equ	0xFF2
 24624                           postinc0	equ	0xFEE
 24625                           fsr0h	equ	0xFEA
 24626                           fsr0l	equ	0xFE9
 24627                           wreg	equ	0xFE8
 24628                           indf1	equ	0xFE7
 24629                           postdec1	equ	0xFE5
 24630                           fsr1h	equ	0xFE2
 24631                           fsr1l	equ	0xFE1
 24632                           bsr	equ	0xFE0
 24633                           indf2	equ	0xFDF
 24634                           postinc2	equ	0xFDE
 24635                           postdec2	equ	0xFDD
 24636                           fsr2h	equ	0xFDA
 24637                           fsr2l	equ	0xFD9
 24638                           status	equ	0xFD8
 24639                           
 24640 ;; *************** function _currentMeasuredToPeak *****************
 24641 ;; Defined at:
 24642 ;;		line 106 in file "main.c"
 24643 ;; Parameters:    Size  Location     Type
 24644 ;;  Measured        3   19[BANK0 ] unsigned char 
 24645 ;;  Angle           3   22[BANK0 ] unsigned char 
 24646 ;; Auto vars:     Size  Location     Type
 24647 ;;  Peak            3   25[BANK0 ] unsigned char 
 24648 ;; Return value:  Size  Location     Type
 24649 ;;                  3   19[BANK0 ] unsigned char 
 24650 ;; Registers used:
 24651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24652 ;; Tracked objects:
 24653 ;;		On entry : 0/0
 24654 ;;		On exit  : 0/0
 24655 ;;		Unchanged: 0/0
 24656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24657 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24658 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24660 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24661 ;;Total ram usage:        9 bytes
 24662 ;; Hardware stack levels used:    1
 24663 ;; Hardware stack levels required when called:    4
 24664 ;; This function calls:
 24665 ;;		_sin
 24666 ;;		i2___ftdiv
 24667 ;; This function is called by:
 24668 ;;		_ADC_postProcessingCallback
 24669 ;; This function uses a non-reentrant model
 24670 ;;
 24671                           
 24672                           	psect	text95
 24673  015A56                     __ptext95:
 24674                           	opt stack 0
 24675  015A56                     _currentMeasuredToPeak:
 24676                           	opt stack 11
 24677                           
 24678                           ;main.c: 109: double Peak = 0.0;
 24679                           
 24680                           ;incstack = 0
 24681  015A56  0E00               	movlw	0
 24682  015A58  0100               	movlb	0	; () banked
 24683  015A5A  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 24684  015A5C  0E00               	movlw	0
 24685  015A5E  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 24686  015A60  0E00               	movlw	0
 24687  015A62  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 24688                           
 24689                           ; BSR set to: 0
 24690                           ;main.c: 112: Peak = sin(Angle);
 24691  015A64  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 24692  015A68  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 24693  015A6C  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 24694  015A70  EC87  F09A         	call	_sin	;wreg free
 24695  015A74  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 24696  015A78  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 24697  015A7C  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 24698                           
 24699                           ;main.c: 113: Peak = Measured / Peak;
 24700  015A80  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 24701  015A84  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 24702  015A88  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 24703  015A8C  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 24704  015A90  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 24705  015A94  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 24706  015A98  EC39  F0A5         	call	i2___ftdiv	;wreg free
 24707  015A9C  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 24708  015AA0  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 24709  015AA4  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 24710                           
 24711                           ;main.c: 114: return Peak;
 24712  015AA8  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 24713  015AAC  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 24714  015AB0  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 24715  015AB4  0012               	return	
 24716  015AB6                     __end_of_currentMeasuredToPeak:
 24717                           	opt stack 0
 24718                           tosu	equ	0xFFF
 24719                           tosh	equ	0xFFE
 24720                           tosl	equ	0xFFD
 24721                           pclatu	equ	0xFFB
 24722                           pclath	equ	0xFFA
 24723                           tblptru	equ	0xFF8
 24724                           tblptrh	equ	0xFF7
 24725                           tblptrl	equ	0xFF6
 24726                           tablat	equ	0xFF5
 24727                           prodh	equ	0xFF4
 24728                           prodl	equ	0xFF3
 24729                           intcon	equ	0xFF2
 24730                           postinc0	equ	0xFEE
 24731                           fsr0h	equ	0xFEA
 24732                           fsr0l	equ	0xFE9
 24733                           wreg	equ	0xFE8
 24734                           indf1	equ	0xFE7
 24735                           postdec1	equ	0xFE5
 24736                           fsr1h	equ	0xFE2
 24737                           fsr1l	equ	0xFE1
 24738                           bsr	equ	0xFE0
 24739                           indf2	equ	0xFDF
 24740                           postinc2	equ	0xFDE
 24741                           postdec2	equ	0xFDD
 24742                           fsr2h	equ	0xFDA
 24743                           fsr2l	equ	0xFD9
 24744                           status	equ	0xFD8
 24745                           
 24746 ;; *************** function _sin *****************
 24747 ;; Defined at:
 24748 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 24749 ;; Parameters:    Size  Location     Type
 24750 ;;  f               3    6[BANK0 ] unsigned char 
 24751 ;; Auto vars:     Size  Location     Type
 24752 ;;  x2              3   15[BANK0 ] unsigned char 
 24753 ;;  y               3    9[BANK0 ] unsigned char 
 24754 ;;  sgn             1   18[BANK0 ] unsigned char 
 24755 ;; Return value:  Size  Location     Type
 24756 ;;                  3    6[BANK0 ] unsigned char 
 24757 ;; Registers used:
 24758 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24759 ;; Tracked objects:
 24760 ;;		On entry : 0/0
 24761 ;;		On exit  : 0/0
 24762 ;;		Unchanged: 0/0
 24763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24764 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24765 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24767 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24768 ;;Total ram usage:       13 bytes
 24769 ;; Hardware stack levels used:    1
 24770 ;; Hardware stack levels required when called:    3
 24771 ;; This function calls:
 24772 ;;		_eval_poly
 24773 ;;		_floor
 24774 ;;		i2___ftadd
 24775 ;;		i2___ftdiv
 24776 ;;		i2___ftge
 24777 ;;		i2___ftmul
 24778 ;;		i2___ftneg
 24779 ;;		i2___ftsub
 24780 ;; This function is called by:
 24781 ;;		_peakToRMS
 24782 ;;		_currentMeasuredToPeak
 24783 ;; This function uses a non-reentrant model
 24784 ;;
 24785                           
 24786                           	psect	text96
 24787  01350E                     __ptext96:
 24788                           	opt stack 0
 24789  01350E                     _sin:
 24790                           	opt stack 11
 24791                           
 24792                           ;incstack = 0
 24793  01350E  0E00               	movlw	0
 24794  013510  0100               	movlb	0	; () banked
 24795  013512  6F72               	movwf	sin@sgn& (0+255),b
 24796                           
 24797                           ; BSR set to: 0
 24798  013514  AF68               	btfss	(sin@f+2)& (0+255),7,b
 24799  013516  D011               	goto	i2l1723
 24800                           
 24801                           ; BSR set to: 0
 24802  013518  C066  F024         	movff	sin@f,i2___ftneg@f1
 24803  01351C  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 24804  013520  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 24805  013524  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24806  013528  C024  F066         	movff	?i2___ftneg,sin@f
 24807  01352C  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 24808  013530  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 24809  013534  0E01               	movlw	1
 24810  013536  0100               	movlb	0	; () banked
 24811  013538  6F72               	movwf	sin@sgn& (0+255),b
 24812  01353A                     i2l1723:
 24813                           
 24814                           ; BSR set to: 0
 24815                           
 24816                           ; BSR set to: 0
 24817  01353A  C066  F027         	movff	sin@f,i2___ftmul@f1
 24818  01353E  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24819  013542  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24820  013546  0EFA               	movlw	250
 24821  013548  6E2A               	movwf	i2___ftmul@f2,c
 24822  01354A  0E22               	movlw	34
 24823  01354C  6E2B               	movwf	i2___ftmul@f2+1,c
 24824  01354E  0E3E               	movlw	62
 24825  013550  6E2C               	movwf	i2___ftmul@f2+2,c
 24826  013552  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24827  013556  C027  F066         	movff	?i2___ftmul,sin@f
 24828  01355A  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 24829  01355E  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 24830  013562  C066  F060         	movff	sin@f,i2___ftsub@f1
 24831  013566  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 24832  01356A  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 24833  01356E  C066  F056         	movff	sin@f,floor@x
 24834  013572  C067  F057         	movff	sin@f+1,floor@x+1
 24835  013576  C068  F058         	movff	sin@f+2,floor@x+2
 24836  01357A  ECAC  F0A5         	call	_floor	;wreg free
 24837  01357E  C056  F063         	movff	?_floor,i2___ftsub@f2
 24838  013582  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 24839  013586  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 24840  01358A  EC61  F0AF         	call	i2___ftsub	;wreg free
 24841  01358E  C060  F066         	movff	?i2___ftsub,sin@f
 24842  013592  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 24843  013596  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 24844  01359A  C066  F027         	movff	sin@f,i2___ftmul@f1
 24845  01359E  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24846  0135A2  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24847  0135A6  0E00               	movlw	0
 24848  0135A8  6E2A               	movwf	i2___ftmul@f2,c
 24849  0135AA  0E80               	movlw	128
 24850  0135AC  6E2B               	movwf	i2___ftmul@f2+1,c
 24851  0135AE  0E40               	movlw	64
 24852  0135B0  6E2C               	movwf	i2___ftmul@f2+2,c
 24853  0135B2  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24854  0135B6  C027  F066         	movff	?i2___ftmul,sin@f
 24855  0135BA  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 24856  0135BE  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 24857  0135C2  0E00               	movlw	0
 24858  0135C4  6E2A               	movwf	i2___ftge@ff1,c
 24859  0135C6  0E00               	movlw	0
 24860  0135C8  6E2B               	movwf	i2___ftge@ff1+1,c
 24861  0135CA  0E40               	movlw	64
 24862  0135CC  6E2C               	movwf	i2___ftge@ff1+2,c
 24863  0135CE  C066  F02D         	movff	sin@f,i2___ftge@ff2
 24864  0135D2  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 24865  0135D6  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 24866  0135DA  EC40  F0A9         	call	i2___ftge	;wreg free
 24867  0135DE  B0D8               	btfsc	status,0,c
 24868  0135E0  D01D               	goto	i2l1724
 24869  0135E2  C066  F060         	movff	sin@f,i2___ftsub@f1
 24870  0135E6  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 24871  0135EA  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 24872  0135EE  0E00               	movlw	0
 24873  0135F0  0100               	movlb	0	; () banked
 24874  0135F2  6F63               	movwf	i2___ftsub@f2& (0+255),b
 24875  0135F4  0E00               	movlw	0
 24876  0135F6  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 24877  0135F8  0E40               	movlw	64
 24878  0135FA  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 24879  0135FC  EC61  F0AF         	call	i2___ftsub	;wreg free
 24880  013600  C060  F066         	movff	?i2___ftsub,sin@f
 24881  013604  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 24882  013608  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 24883  01360C  0100               	movlb	0	; () banked
 24884  01360E  5172               	movf	sin@sgn& (0+255),w,b
 24885  013610  A4D8               	btfss	status,2,c
 24886  013612  D002               	goto	i2u1538_40
 24887  013614  0E01               	movlw	1
 24888  013616  D001               	goto	i2u1539_40
 24889  013618                     i2u1538_40:
 24890  013618  0E00               	movlw	0
 24891  01361A                     i2u1539_40:
 24892  01361A  6F72               	movwf	sin@sgn& (0+255),b
 24893  01361C                     i2l1724:
 24894                           
 24895                           ; BSR set to: 0
 24896  01361C  0E00               	movlw	0
 24897  01361E  6E2A               	movwf	i2___ftge@ff1,c
 24898  013620  0E80               	movlw	128
 24899  013622  6E2B               	movwf	i2___ftge@ff1+1,c
 24900  013624  0E3F               	movlw	63
 24901  013626  6E2C               	movwf	i2___ftge@ff1+2,c
 24902  013628  C066  F02D         	movff	sin@f,i2___ftge@ff2
 24903  01362C  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 24904  013630  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 24905  013634  EC40  F0A9         	call	i2___ftge	;wreg free
 24906  013638  B0D8               	btfsc	status,0,c
 24907  01363A  D01C               	goto	i2l1725
 24908  01363C  C066  F024         	movff	sin@f,i2___ftneg@f1
 24909  013640  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 24910  013644  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 24911  013648  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24912  01364C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24913  013650  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24914  013654  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24915  013658  0E00               	movlw	0
 24916  01365A  6E43               	movwf	i2___ftadd@f2,c
 24917  01365C  0E00               	movlw	0
 24918  01365E  6E44               	movwf	i2___ftadd@f2+1,c
 24919  013660  0E40               	movlw	64
 24920  013662  6E45               	movwf	i2___ftadd@f2+2,c
 24921  013664  EC51  F09E         	call	i2___ftadd	;wreg free
 24922  013668  C040  F066         	movff	?i2___ftadd,sin@f
 24923  01366C  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 24924  013670  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 24925  013674                     i2l1725:
 24926  013674  C066  F027         	movff	sin@f,i2___ftmul@f1
 24927  013678  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24928  01367C  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24929  013680  C066  F02A         	movff	sin@f,i2___ftmul@f2
 24930  013684  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 24931  013688  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 24932  01368C  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24933  013690  C027  F06F         	movff	?i2___ftmul,sin@x2
 24934  013694  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 24935  013698  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 24936  01369C  C06F  F04C         	movff	sin@x2,eval_poly@x
 24937  0136A0  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 24938  0136A4  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 24939  0136A8  0EEF               	movlw	low sin@coeff_b
 24940  0136AA  6E4F               	movwf	eval_poly@d,c
 24941  0136AC  0EF3               	movlw	high sin@coeff_b
 24942  0136AE  6E50               	movwf	eval_poly@d+1,c
 24943  0136B0  0E00               	movlw	0
 24944  0136B2  6E52               	movwf	eval_poly@n+1,c
 24945  0136B4  0E03               	movlw	3
 24946  0136B6  6E51               	movwf	eval_poly@n,c
 24947  0136B8  EC1B  F0A6         	call	_eval_poly	;wreg free
 24948  0136BC  C04C  F069         	movff	?_eval_poly,sin@y
 24949  0136C0  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 24950  0136C4  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 24951  0136C8  C069  F018         	movff	sin@y,i2___ftdiv@f2
 24952  0136CC  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 24953  0136D0  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 24954  0136D4  0E00               	movlw	0
 24955  0136D6  6E52               	movwf	eval_poly@n+1,c
 24956  0136D8  0E04               	movlw	4
 24957  0136DA  6E51               	movwf	eval_poly@n,c
 24958  0136DC  0ED1               	movlw	low sin@coeff_a
 24959  0136DE  6E4F               	movwf	eval_poly@d,c
 24960  0136E0  0EF3               	movlw	high sin@coeff_a
 24961  0136E2  6E50               	movwf	eval_poly@d+1,c
 24962  0136E4  C06F  F04C         	movff	sin@x2,eval_poly@x
 24963  0136E8  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 24964  0136EC  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 24965  0136F0  EC1B  F0A6         	call	_eval_poly	;wreg free
 24966  0136F4  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 24967  0136F8  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 24968  0136FC  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 24969  013700  EC39  F0A5         	call	i2___ftdiv	;wreg free
 24970  013704  C015  F06C         	movff	?i2___ftdiv,_sin$3333
 24971  013708  C016  F06D         	movff	?i2___ftdiv+1,_sin$3333+1
 24972  01370C  C017  F06E         	movff	?i2___ftdiv+2,_sin$3333+2
 24973  013710  C066  F027         	movff	sin@f,i2___ftmul@f1
 24974  013714  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24975  013718  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24976  01371C  C06C  F02A         	movff	_sin$3333,i2___ftmul@f2
 24977  013720  C06D  F02B         	movff	_sin$3333+1,i2___ftmul@f2+1
 24978  013724  C06E  F02C         	movff	_sin$3333+2,i2___ftmul@f2+2
 24979  013728  EC4B  F0A4         	call	i2___ftmul	;wreg free
 24980  01372C  C027  F066         	movff	?i2___ftmul,sin@f
 24981  013730  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 24982  013734  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 24983  013738  0100               	movlb	0	; () banked
 24984  01373A  5172               	movf	sin@sgn& (0+255),w,b
 24985  01373C  B4D8               	btfsc	status,2,c
 24986  01373E  D00F               	goto	i2l1726
 24987                           
 24988                           ; BSR set to: 0
 24989  013740  C066  F024         	movff	sin@f,i2___ftneg@f1
 24990  013744  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 24991  013748  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 24992  01374C  ECDC  F0B0         	call	i2___ftneg	;wreg free
 24993  013750  C024  F066         	movff	?i2___ftneg,?_sin
 24994  013754  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 24995  013758  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 24996  01375C  0012               	return	
 24997  01375E                     i2l1726:
 24998                           
 24999                           ; BSR set to: 0
 25000  01375E  C066  F066         	movff	sin@f,?_sin
 25001  013762  C067  F067         	movff	sin@f+1,?_sin+1
 25002  013766  C068  F068         	movff	sin@f+2,?_sin+2
 25003  01376A  0012               	return		;funcret
 25004  01376C                     __end_of_sin:
 25005                           	opt stack 0
 25006                           tosu	equ	0xFFF
 25007                           tosh	equ	0xFFE
 25008                           tosl	equ	0xFFD
 25009                           pclatu	equ	0xFFB
 25010                           pclath	equ	0xFFA
 25011                           tblptru	equ	0xFF8
 25012                           tblptrh	equ	0xFF7
 25013                           tblptrl	equ	0xFF6
 25014                           tablat	equ	0xFF5
 25015                           prodh	equ	0xFF4
 25016                           prodl	equ	0xFF3
 25017                           intcon	equ	0xFF2
 25018                           postinc0	equ	0xFEE
 25019                           fsr0h	equ	0xFEA
 25020                           fsr0l	equ	0xFE9
 25021                           wreg	equ	0xFE8
 25022                           indf1	equ	0xFE7
 25023                           postdec1	equ	0xFE5
 25024                           fsr1h	equ	0xFE2
 25025                           fsr1l	equ	0xFE1
 25026                           bsr	equ	0xFE0
 25027                           indf2	equ	0xFDF
 25028                           postinc2	equ	0xFDE
 25029                           postdec2	equ	0xFDD
 25030                           fsr2h	equ	0xFDA
 25031                           fsr2l	equ	0xFD9
 25032                           status	equ	0xFD8
 25033                           
 25034 ;; *************** function i2___ftsub *****************
 25035 ;; Defined at:
 25036 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 25037 ;; Parameters:    Size  Location     Type
 25038 ;;  f1              3    0[BANK0 ] float 
 25039 ;;  f2              3    3[BANK0 ] float 
 25040 ;; Auto vars:     Size  Location     Type
 25041 ;;		None
 25042 ;; Return value:  Size  Location     Type
 25043 ;;                  3    0[BANK0 ] float 
 25044 ;; Registers used:
 25045 ;;		wreg, status,2, status,0, cstack
 25046 ;; Tracked objects:
 25047 ;;		On entry : 0/0
 25048 ;;		On exit  : 0/0
 25049 ;;		Unchanged: 0/0
 25050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25051 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25054 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25055 ;;Total ram usage:        6 bytes
 25056 ;; Hardware stack levels used:    1
 25057 ;; Hardware stack levels required when called:    2
 25058 ;; This function calls:
 25059 ;;		i2___ftadd
 25060 ;; This function is called by:
 25061 ;;		_sin
 25062 ;;		_sqrt
 25063 ;;		i2_printf
 25064 ;; This function uses a non-reentrant model
 25065 ;;
 25066                           
 25067                           	psect	text97
 25068  015EC2                     __ptext97:
 25069                           	opt stack 0
 25070  015EC2                     i2___ftsub:
 25071                           	opt stack 13
 25072                           
 25073                           ;incstack = 0
 25074  015EC2  0100               	movlb	0	; () banked
 25075  015EC4  5163               	movf	i2___ftsub@f2& (0+255),w,b
 25076  015EC6  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 25077  015EC8  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 25078  015ECA  B4D8               	btfsc	status,2,c
 25079  015ECC  D006               	goto	i2l1589
 25080                           
 25081                           ; BSR set to: 0
 25082  015ECE  0E00               	movlw	0
 25083  015ED0  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 25084  015ED2  0E00               	movlw	0
 25085  015ED4  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 25086  015ED6  0E80               	movlw	128
 25087  015ED8  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 25088  015EDA                     i2l1589:
 25089                           
 25090                           ; BSR set to: 0
 25091                           
 25092                           ; BSR set to: 0
 25093  015EDA  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 25094  015EDE  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 25095  015EE2  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 25096  015EE6  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 25097  015EEA  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 25098  015EEE  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 25099  015EF2  EC51  F09E         	call	i2___ftadd	;wreg free
 25100  015EF6  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 25101  015EFA  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 25102  015EFE  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 25103  015F02  0012               	return	
 25104  015F04                     __end_ofi2___ftsub:
 25105                           	opt stack 0
 25106                           tosu	equ	0xFFF
 25107                           tosh	equ	0xFFE
 25108                           tosl	equ	0xFFD
 25109                           pclatu	equ	0xFFB
 25110                           pclath	equ	0xFFA
 25111                           tblptru	equ	0xFF8
 25112                           tblptrh	equ	0xFF7
 25113                           tblptrl	equ	0xFF6
 25114                           tablat	equ	0xFF5
 25115                           prodh	equ	0xFF4
 25116                           prodl	equ	0xFF3
 25117                           intcon	equ	0xFF2
 25118                           postinc0	equ	0xFEE
 25119                           fsr0h	equ	0xFEA
 25120                           fsr0l	equ	0xFE9
 25121                           wreg	equ	0xFE8
 25122                           indf1	equ	0xFE7
 25123                           postdec1	equ	0xFE5
 25124                           fsr1h	equ	0xFE2
 25125                           fsr1l	equ	0xFE1
 25126                           bsr	equ	0xFE0
 25127                           indf2	equ	0xFDF
 25128                           postinc2	equ	0xFDE
 25129                           postdec2	equ	0xFDD
 25130                           fsr2h	equ	0xFDA
 25131                           fsr2l	equ	0xFD9
 25132                           status	equ	0xFD8
 25133                           
 25134 ;; *************** function i2___ftneg *****************
 25135 ;; Defined at:
 25136 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 25137 ;; Parameters:    Size  Location     Type
 25138 ;;  f1              3   35[COMRAM] float 
 25139 ;; Auto vars:     Size  Location     Type
 25140 ;;		None
 25141 ;; Return value:  Size  Location     Type
 25142 ;;                  3   35[COMRAM] float 
 25143 ;; Registers used:
 25144 ;;		wreg, status,2, status,0
 25145 ;; Tracked objects:
 25146 ;;		On entry : 0/0
 25147 ;;		On exit  : 0/0
 25148 ;;		Unchanged: 0/0
 25149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25150 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25153 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25154 ;;Total ram usage:        3 bytes
 25155 ;; Hardware stack levels used:    1
 25156 ;; This function calls:
 25157 ;;		Nothing
 25158 ;; This function is called by:
 25159 ;;		_peakToRMS
 25160 ;;		_ADC_postProcessingCallback
 25161 ;;		_acos
 25162 ;;		_asin
 25163 ;;		_atan
 25164 ;;		_fabs
 25165 ;;		_sin
 25166 ;;		i2_printf
 25167 ;; This function uses a non-reentrant model
 25168 ;;
 25169                           
 25170                           	psect	text98
 25171  0161B8                     __ptext98:
 25172                           	opt stack 0
 25173  0161B8                     i2___ftneg:
 25174                           	opt stack 15
 25175                           
 25176                           ;incstack = 0
 25177  0161B8  5024               	movf	i2___ftneg@f1,w,c
 25178  0161BA  1025               	iorwf	i2___ftneg@f1+1,w,c
 25179  0161BC  1026               	iorwf	i2___ftneg@f1+2,w,c
 25180  0161BE  B4D8               	btfsc	status,2,c
 25181  0161C0  D006               	goto	i2l1583
 25182  0161C2  0E00               	movlw	0
 25183  0161C4  1A24               	xorwf	i2___ftneg@f1,f,c
 25184  0161C6  0E00               	movlw	0
 25185  0161C8  1A25               	xorwf	i2___ftneg@f1+1,f,c
 25186  0161CA  0E80               	movlw	128
 25187  0161CC  1A26               	xorwf	i2___ftneg@f1+2,f,c
 25188  0161CE                     i2l1583:
 25189  0161CE  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 25190  0161D2  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 25191  0161D6  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 25192  0161DA  0012               	return		;funcret
 25193  0161DC                     __end_ofi2___ftneg:
 25194                           	opt stack 0
 25195                           tosu	equ	0xFFF
 25196                           tosh	equ	0xFFE
 25197                           tosl	equ	0xFFD
 25198                           pclatu	equ	0xFFB
 25199                           pclath	equ	0xFFA
 25200                           tblptru	equ	0xFF8
 25201                           tblptrh	equ	0xFF7
 25202                           tblptrl	equ	0xFF6
 25203                           tablat	equ	0xFF5
 25204                           prodh	equ	0xFF4
 25205                           prodl	equ	0xFF3
 25206                           intcon	equ	0xFF2
 25207                           postinc0	equ	0xFEE
 25208                           fsr0h	equ	0xFEA
 25209                           fsr0l	equ	0xFE9
 25210                           wreg	equ	0xFE8
 25211                           indf1	equ	0xFE7
 25212                           postdec1	equ	0xFE5
 25213                           fsr1h	equ	0xFE2
 25214                           fsr1l	equ	0xFE1
 25215                           bsr	equ	0xFE0
 25216                           indf2	equ	0xFDF
 25217                           postinc2	equ	0xFDE
 25218                           postdec2	equ	0xFDD
 25219                           fsr2h	equ	0xFDA
 25220                           fsr2l	equ	0xFD9
 25221                           status	equ	0xFD8
 25222                           
 25223 ;; *************** function i2___ftdiv *****************
 25224 ;; Defined at:
 25225 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 25226 ;; Parameters:    Size  Location     Type
 25227 ;;  f1              3   20[COMRAM] float 
 25228 ;;  f2              3   23[COMRAM] float 
 25229 ;; Auto vars:     Size  Location     Type
 25230 ;;  __ftdiv         3   31[COMRAM] float 
 25231 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 25232 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 25233 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 25234 ;; Return value:  Size  Location     Type
 25235 ;;                  3   20[COMRAM] float 
 25236 ;; Registers used:
 25237 ;;		wreg, status,2, status,0, cstack
 25238 ;; Tracked objects:
 25239 ;;		On entry : 0/0
 25240 ;;		On exit  : 0/0
 25241 ;;		Unchanged: 0/0
 25242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25243 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25244 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25245 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25246 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25247 ;;Total ram usage:       15 bytes
 25248 ;; Hardware stack levels used:    1
 25249 ;; Hardware stack levels required when called:    1
 25250 ;; This function calls:
 25251 ;;		i2___ftpack
 25252 ;; This function is called by:
 25253 ;;		_peakToRMS
 25254 ;;		_currentMeasuredToPeak
 25255 ;;		_ADC_postProcessingCallback
 25256 ;;		_asin
 25257 ;;		_atan
 25258 ;;		_sin
 25259 ;; This function uses a non-reentrant model
 25260 ;;
 25261                           
 25262                           	psect	text99
 25263  014A72                     __ptext99:
 25264                           	opt stack 0
 25265  014A72                     i2___ftdiv:
 25266                           	opt stack 14
 25267                           
 25268                           ;incstack = 0
 25269  014A72  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 25270  014A76  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 25271  014A78  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 25272  014A7A  3416               	rlcf	i2___ftdiv@f1+1,w,c
 25273  014A7C  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 25274  014A7E  E301               	bnc	u1500_41
 25275  014A80  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 25276  014A82                     u1500_41:
 25277  014A82  501B               	movf	??i2___ftdiv,w,c
 25278  014A84  6E1F               	movwf	i2___ftdiv@exp,c
 25279  014A86  501F               	movf	i2___ftdiv@exp,w,c
 25280  014A88  A4D8               	btfss	status,2,c
 25281  014A8A  D007               	goto	i2l1540
 25282  014A8C  0E00               	movlw	0
 25283  014A8E  6E15               	movwf	?i2___ftdiv,c
 25284  014A90  0E00               	movlw	0
 25285  014A92  6E16               	movwf	?i2___ftdiv+1,c
 25286  014A94  0E00               	movlw	0
 25287  014A96  6E17               	movwf	?i2___ftdiv+2,c
 25288  014A98  0012               	return	
 25289  014A9A                     i2l1540:
 25290  014A9A  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 25291  014A9E  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 25292  014AA0  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 25293  014AA2  3419               	rlcf	i2___ftdiv@f2+1,w,c
 25294  014AA4  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 25295  014AA6  E301               	bnc	u1502_41
 25296  014AA8  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 25297  014AAA                     u1502_41:
 25298  014AAA  501B               	movf	??i2___ftdiv,w,c
 25299  014AAC  6E23               	movwf	i2___ftdiv@sign,c
 25300  014AAE  5023               	movf	i2___ftdiv@sign,w,c
 25301  014AB0  A4D8               	btfss	status,2,c
 25302  014AB2  D007               	goto	i2l1542
 25303  014AB4  0E00               	movlw	0
 25304  014AB6  6E15               	movwf	?i2___ftdiv,c
 25305  014AB8  0E00               	movlw	0
 25306  014ABA  6E16               	movwf	?i2___ftdiv+1,c
 25307  014ABC  0E00               	movlw	0
 25308  014ABE  6E17               	movwf	?i2___ftdiv+2,c
 25309  014AC0  0012               	return	
 25310  014AC2                     i2l1542:
 25311  014AC2  0E00               	movlw	0
 25312  014AC4  6E20               	movwf	i2___ftdiv@f3,c
 25313  014AC6  0E00               	movlw	0
 25314  014AC8  6E21               	movwf	i2___ftdiv@f3+1,c
 25315  014ACA  0E00               	movlw	0
 25316  014ACC  6E22               	movwf	i2___ftdiv@f3+2,c
 25317  014ACE  5023               	movf	i2___ftdiv@sign,w,c
 25318  014AD0  0F89               	addlw	137
 25319  014AD2  5E1F               	subwf	i2___ftdiv@exp,f,c
 25320  014AD4  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 25321  014AD8  501A               	movf	i2___ftdiv@f2+2,w,c
 25322  014ADA  1A23               	xorwf	i2___ftdiv@sign,f,c
 25323  014ADC  0E80               	movlw	128
 25324  014ADE  1623               	andwf	i2___ftdiv@sign,f,c
 25325  014AE0  8E16               	bsf	i2___ftdiv@f1+1,7,c
 25326  014AE2  0EFF               	movlw	255
 25327  014AE4  1615               	andwf	i2___ftdiv@f1,f,c
 25328  014AE6  0EFF               	movlw	255
 25329  014AE8  1616               	andwf	i2___ftdiv@f1+1,f,c
 25330  014AEA  0E00               	movlw	0
 25331  014AEC  1617               	andwf	i2___ftdiv@f1+2,f,c
 25332  014AEE  8E19               	bsf	i2___ftdiv@f2+1,7,c
 25333  014AF0  0EFF               	movlw	255
 25334  014AF2  1618               	andwf	i2___ftdiv@f2,f,c
 25335  014AF4  0EFF               	movlw	255
 25336  014AF6  1619               	andwf	i2___ftdiv@f2+1,f,c
 25337  014AF8  0E00               	movlw	0
 25338  014AFA  161A               	andwf	i2___ftdiv@f2+2,f,c
 25339  014AFC  0E18               	movlw	24
 25340  014AFE  6E1E               	movwf	i2___ftdiv@cntr,c
 25341  014B00  90D8               	bcf	status,0,c
 25342  014B02  3620               	rlcf	i2___ftdiv@f3,f,c
 25343  014B04  3621               	rlcf	i2___ftdiv@f3+1,f,c
 25344  014B06  3622               	rlcf	i2___ftdiv@f3+2,f,c
 25345  014B08  5018               	movf	i2___ftdiv@f2,w,c
 25346  014B0A  5C15               	subwf	i2___ftdiv@f1,w,c
 25347  014B0C  5019               	movf	i2___ftdiv@f2+1,w,c
 25348  014B0E  5816               	subwfb	i2___ftdiv@f1+1,w,c
 25349  014B10  501A               	movf	i2___ftdiv@f2+2,w,c
 25350  014B12  5817               	subwfb	i2___ftdiv@f1+2,w,c
 25351  014B14  A0D8               	btfss	status,0,c
 25352  014B16  D007               	goto	i2l1544
 25353  014B18  5018               	movf	i2___ftdiv@f2,w,c
 25354  014B1A  5E15               	subwf	i2___ftdiv@f1,f,c
 25355  014B1C  5019               	movf	i2___ftdiv@f2+1,w,c
 25356  014B1E  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 25357  014B20  501A               	movf	i2___ftdiv@f2+2,w,c
 25358  014B22  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 25359  014B24  8020               	bsf	i2___ftdiv@f3,0,c
 25360  014B26                     i2l1544:
 25361  014B26  90D8               	bcf	status,0,c
 25362  014B28  3615               	rlcf	i2___ftdiv@f1,f,c
 25363  014B2A  3616               	rlcf	i2___ftdiv@f1+1,f,c
 25364  014B2C  3617               	rlcf	i2___ftdiv@f1+2,f,c
 25365  014B2E  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 25366  014B30  D7E7               	goto	i2l1543
 25367  014B32  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 25368  014B36  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 25369  014B3A  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 25370  014B3E  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 25371  014B42  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 25372  014B46  ECB2  F0A7         	call	i2___ftpack	;wreg free
 25373  014B4A  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 25374  014B4E  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 25375  014B52  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 25376  014B56  0012               	return	
 25377  014B58                     __end_ofi2___ftdiv:
 25378                           	opt stack 0
 25379                           tosu	equ	0xFFF
 25380                           tosh	equ	0xFFE
 25381                           tosl	equ	0xFFD
 25382                           pclatu	equ	0xFFB
 25383                           pclath	equ	0xFFA
 25384                           tblptru	equ	0xFF8
 25385                           tblptrh	equ	0xFF7
 25386                           tblptrl	equ	0xFF6
 25387                           tablat	equ	0xFF5
 25388                           prodh	equ	0xFF4
 25389                           prodl	equ	0xFF3
 25390                           intcon	equ	0xFF2
 25391                           postinc0	equ	0xFEE
 25392                           fsr0h	equ	0xFEA
 25393                           fsr0l	equ	0xFE9
 25394                           wreg	equ	0xFE8
 25395                           indf1	equ	0xFE7
 25396                           postdec1	equ	0xFE5
 25397                           fsr1h	equ	0xFE2
 25398                           fsr1l	equ	0xFE1
 25399                           bsr	equ	0xFE0
 25400                           indf2	equ	0xFDF
 25401                           postinc2	equ	0xFDE
 25402                           postdec2	equ	0xFDD
 25403                           fsr2h	equ	0xFDA
 25404                           fsr2l	equ	0xFD9
 25405                           status	equ	0xFD8
 25406                           
 25407 ;; *************** function _floor *****************
 25408 ;; Defined at:
 25409 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 25410 ;; Parameters:    Size  Location     Type
 25411 ;;  x               3   85[COMRAM] float 
 25412 ;; Auto vars:     Size  Location     Type
 25413 ;;  i               3   88[COMRAM] float 
 25414 ;;  expon           2   91[COMRAM] int 
 25415 ;; Return value:  Size  Location     Type
 25416 ;;                  3   85[COMRAM] int 
 25417 ;; Registers used:
 25418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25419 ;; Tracked objects:
 25420 ;;		On entry : 0/0
 25421 ;;		On exit  : 0/0
 25422 ;;		Unchanged: 0/0
 25423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25424 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25425 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25427 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25428 ;;Total ram usage:        8 bytes
 25429 ;; Hardware stack levels used:    1
 25430 ;; Hardware stack levels required when called:    2
 25431 ;; This function calls:
 25432 ;;		___altoft
 25433 ;;		_frexp
 25434 ;;		i2___ftadd
 25435 ;;		i2___ftge
 25436 ;;		i2___fttol
 25437 ;; This function is called by:
 25438 ;;		_sin
 25439 ;; This function uses a non-reentrant model
 25440 ;;
 25441                           
 25442                           	psect	text100
 25443  014B58                     __ptext100:
 25444                           	opt stack 0
 25445  014B58                     _floor:
 25446                           	opt stack 11
 25447                           
 25448                           ;incstack = 0
 25449  014B58  C056  F001         	movff	floor@x,frexp@value
 25450  014B5C  C057  F002         	movff	floor@x+1,frexp@value+1
 25451  014B60  C058  F003         	movff	floor@x+2,frexp@value+2
 25452  014B64  0E5C               	movlw	low floor@expon
 25453  014B66  6E04               	movwf	frexp@eptr,c
 25454  014B68  0E00               	movlw	high floor@expon
 25455  014B6A  6E05               	movwf	frexp@eptr+1,c
 25456  014B6C  ECD6  F0AA         	call	_frexp	;wreg free
 25457  014B70  AE5D               	btfss	floor@expon+1,7,c
 25458  014B72  D010               	goto	i2l1928
 25459  014B74  AE58               	btfss	floor@x+2,7,c
 25460  014B76  D007               	goto	i2l1929
 25461  014B78  0E00               	movlw	0
 25462  014B7A  6E56               	movwf	?_floor,c
 25463  014B7C  0E80               	movlw	128
 25464  014B7E  6E57               	movwf	?_floor+1,c
 25465  014B80  0EBF               	movlw	191
 25466  014B82  6E58               	movwf	?_floor+2,c
 25467  014B84  0012               	return	
 25468  014B86                     i2l1929:
 25469  014B86  0E00               	movlw	0
 25470  014B88  6E56               	movwf	?_floor,c
 25471  014B8A  0E00               	movlw	0
 25472  014B8C  6E57               	movwf	?_floor+1,c
 25473  014B8E  0E00               	movlw	0
 25474  014B90  6E58               	movwf	?_floor+2,c
 25475  014B92  0012               	return	
 25476  014B94                     i2l1928:
 25477  014B94  505D               	movf	floor@expon+1,w,c
 25478  014B96  E104               	bnz	i2u1534_40
 25479  014B98  0E15               	movlw	21
 25480  014B9A  5C5C               	subwf	floor@expon,w,c
 25481  014B9C  A0D8               	btfss	status,0,c
 25482  014B9E  D007               	goto	i2l1931
 25483  014BA0                     i2u1534_40:
 25484  014BA0  C056  F056         	movff	floor@x,?_floor
 25485  014BA4  C057  F057         	movff	floor@x+1,?_floor+1
 25486  014BA8  C058  F058         	movff	floor@x+2,?_floor+2
 25487  014BAC  0012               	return	
 25488  014BAE                     i2l1931:
 25489  014BAE  C056  F03D         	movff	floor@x,i2___fttol@f1
 25490  014BB2  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 25491  014BB6  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 25492  014BBA  ECD1  F0A3         	call	i2___fttol	;wreg free
 25493  014BBE  C03D  F04C         	movff	?i2___fttol,___altoft@c
 25494  014BC2  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 25495  014BC6  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 25496  014BCA  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 25497  014BCE  EC12  F0AB         	call	___altoft	;wreg free
 25498  014BD2  C04C  F059         	movff	?___altoft,floor@i
 25499  014BD6  C04D  F05A         	movff	?___altoft+1,floor@i+1
 25500  014BDA  C04E  F05B         	movff	?___altoft+2,floor@i+2
 25501  014BDE  C056  F02A         	movff	floor@x,i2___ftge@ff1
 25502  014BE2  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 25503  014BE6  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 25504  014BEA  C059  F02D         	movff	floor@i,i2___ftge@ff2
 25505  014BEE  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 25506  014BF2  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 25507  014BF6  EC40  F0A9         	call	i2___ftge	;wreg free
 25508  014BFA  B0D8               	btfsc	status,0,c
 25509  014BFC  D015               	goto	i2l1932
 25510  014BFE  C059  F040         	movff	floor@i,i2___ftadd@f1
 25511  014C02  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 25512  014C06  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 25513  014C0A  0E00               	movlw	0
 25514  014C0C  6E43               	movwf	i2___ftadd@f2,c
 25515  014C0E  0E80               	movlw	128
 25516  014C10  6E44               	movwf	i2___ftadd@f2+1,c
 25517  014C12  0EBF               	movlw	191
 25518  014C14  6E45               	movwf	i2___ftadd@f2+2,c
 25519  014C16  EC51  F09E         	call	i2___ftadd	;wreg free
 25520  014C1A  C040  F056         	movff	?i2___ftadd,?_floor
 25521  014C1E  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 25522  014C22  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 25523  014C26  0012               	return	
 25524  014C28                     i2l1932:
 25525  014C28  C059  F056         	movff	floor@i,?_floor
 25526  014C2C  C05A  F057         	movff	floor@i+1,?_floor+1
 25527  014C30  C05B  F058         	movff	floor@i+2,?_floor+2
 25528  014C34  0012               	return		;funcret
 25529  014C36                     __end_of_floor:
 25530                           	opt stack 0
 25531                           tosu	equ	0xFFF
 25532                           tosh	equ	0xFFE
 25533                           tosl	equ	0xFFD
 25534                           pclatu	equ	0xFFB
 25535                           pclath	equ	0xFFA
 25536                           tblptru	equ	0xFF8
 25537                           tblptrh	equ	0xFF7
 25538                           tblptrl	equ	0xFF6
 25539                           tablat	equ	0xFF5
 25540                           prodh	equ	0xFF4
 25541                           prodl	equ	0xFF3
 25542                           intcon	equ	0xFF2
 25543                           postinc0	equ	0xFEE
 25544                           fsr0h	equ	0xFEA
 25545                           fsr0l	equ	0xFE9
 25546                           wreg	equ	0xFE8
 25547                           indf1	equ	0xFE7
 25548                           postdec1	equ	0xFE5
 25549                           fsr1h	equ	0xFE2
 25550                           fsr1l	equ	0xFE1
 25551                           bsr	equ	0xFE0
 25552                           indf2	equ	0xFDF
 25553                           postinc2	equ	0xFDE
 25554                           postdec2	equ	0xFDD
 25555                           fsr2h	equ	0xFDA
 25556                           fsr2l	equ	0xFD9
 25557                           status	equ	0xFD8
 25558                           
 25559 ;; *************** function i2___fttol *****************
 25560 ;; Defined at:
 25561 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 25562 ;; Parameters:    Size  Location     Type
 25563 ;;  f1              3   60[COMRAM] float 
 25564 ;; Auto vars:     Size  Location     Type
 25565 ;;  __fttol         4   70[COMRAM] unsigned long 
 25566 ;;  __fttol         1   74[COMRAM] unsigned char 
 25567 ;;  __fttol         1   69[COMRAM] unsigned char 
 25568 ;; Return value:  Size  Location     Type
 25569 ;;                  4   60[COMRAM] long 
 25570 ;; Registers used:
 25571 ;;		wreg, status,2, status,0
 25572 ;; Tracked objects:
 25573 ;;		On entry : 0/0
 25574 ;;		On exit  : 0/0
 25575 ;;		Unchanged: 0/0
 25576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25578 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25579 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25580 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25581 ;;Total ram usage:       15 bytes
 25582 ;; Hardware stack levels used:    1
 25583 ;; This function calls:
 25584 ;;		Nothing
 25585 ;; This function is called by:
 25586 ;;		_floor
 25587 ;;		i2_printf
 25588 ;; This function uses a non-reentrant model
 25589 ;;
 25590                           
 25591                           	psect	text101
 25592  0147A2                     __ptext101:
 25593                           	opt stack 0
 25594  0147A2                     i2___fttol:
 25595                           	opt stack 15
 25596                           
 25597                           ;incstack = 0
 25598  0147A2  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 25599  0147A6  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 25600  0147A8  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 25601  0147AA  343E               	rlcf	i2___fttol@f1+1,w,c
 25602  0147AC  3641               	rlcf	??i2___fttol& (0+255),f,c
 25603  0147AE  E301               	bnc	u1521_41
 25604  0147B0  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 25605  0147B2                     u1521_41:
 25606  0147B2  5041               	movf	??i2___fttol,w,c
 25607  0147B4  6E4B               	movwf	i2___fttol@exp1,c
 25608  0147B6  504B               	movf	i2___fttol@exp1,w,c
 25609  0147B8  A4D8               	btfss	status,2,c
 25610  0147BA  D009               	goto	i2l1593
 25611  0147BC  0E00               	movlw	0
 25612  0147BE  6E3D               	movwf	?i2___fttol,c
 25613  0147C0  0E00               	movlw	0
 25614  0147C2  6E3E               	movwf	?i2___fttol+1,c
 25615  0147C4  0E00               	movlw	0
 25616  0147C6  6E3F               	movwf	?i2___fttol+2,c
 25617  0147C8  0E00               	movlw	0
 25618  0147CA  6E40               	movwf	?i2___fttol+3,c
 25619  0147CC  0012               	return	
 25620  0147CE                     i2l1593:
 25621  0147CE  0E17               	movlw	23
 25622  0147D0  6E41               	movwf	??i2___fttol& (0+255),c
 25623  0147D2  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 25624  0147D6  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 25625  0147DA  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 25626  0147DE  2841               	incf	??i2___fttol,w,c
 25627  0147E0  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 25628  0147E2  D004               	goto	i2u1523_40
 25629  0147E4                     i2u1523_45:
 25630  0147E4  90D8               	bcf	status,0,c
 25631  0147E6  3244               	rrcf	??i2___fttol+3,f,c
 25632  0147E8  3243               	rrcf	??i2___fttol+2,f,c
 25633  0147EA  3242               	rrcf	??i2___fttol+1,f,c
 25634  0147EC                     i2u1523_40:
 25635  0147EC  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 25636  0147EE  D7FA               	goto	i2u1523_45
 25637  0147F0  5042               	movf	??i2___fttol+1,w,c
 25638  0147F2  6E46               	movwf	i2___fttol@sign1,c
 25639  0147F4  8E3E               	bsf	i2___fttol@f1+1,7,c
 25640  0147F6  0EFF               	movlw	255
 25641  0147F8  163D               	andwf	i2___fttol@f1,f,c
 25642  0147FA  0EFF               	movlw	255
 25643  0147FC  163E               	andwf	i2___fttol@f1+1,f,c
 25644  0147FE  0E00               	movlw	0
 25645  014800  163F               	andwf	i2___fttol@f1+2,f,c
 25646  014802  503D               	movf	i2___fttol@f1,w,c
 25647  014804  6E47               	movwf	i2___fttol@lval,c
 25648  014806  503E               	movf	i2___fttol@f1+1,w,c
 25649  014808  6E48               	movwf	i2___fttol@lval+1,c
 25650  01480A  503F               	movf	i2___fttol@f1+2,w,c
 25651  01480C  6E49               	movwf	i2___fttol@lval+2,c
 25652  01480E  6A4A               	clrf	i2___fttol@lval+3,c
 25653  014810  0E8E               	movlw	142
 25654  014812  5E4B               	subwf	i2___fttol@exp1,f,c
 25655  014814  AE4B               	btfss	i2___fttol@exp1,7,c
 25656  014816  D016               	goto	i2l1595
 25657  014818  504B               	movf	i2___fttol@exp1,w,c
 25658  01481A  0A80               	xorlw	128
 25659  01481C  0F8F               	addlw	143
 25660  01481E  B0D8               	btfsc	status,0,c
 25661  014820  D009               	goto	i2l1596
 25662  014822  0E00               	movlw	0
 25663  014824  6E3D               	movwf	?i2___fttol,c
 25664  014826  0E00               	movlw	0
 25665  014828  6E3E               	movwf	?i2___fttol+1,c
 25666  01482A  0E00               	movlw	0
 25667  01482C  6E3F               	movwf	?i2___fttol+2,c
 25668  01482E  0E00               	movlw	0
 25669  014830  6E40               	movwf	?i2___fttol+3,c
 25670  014832  0012               	return	
 25671  014834                     i2l1596:
 25672  014834  90D8               	bcf	status,0,c
 25673  014836  324A               	rrcf	i2___fttol@lval+3,f,c
 25674  014838  3249               	rrcf	i2___fttol@lval+2,f,c
 25675  01483A  3248               	rrcf	i2___fttol@lval+1,f,c
 25676  01483C  3247               	rrcf	i2___fttol@lval,f,c
 25677  01483E  3E4B               	incfsz	i2___fttol@exp1,f,c
 25678  014840  D7F9               	goto	i2l1596
 25679  014842  D015               	goto	i2u1527_40
 25680  014844                     i2l1595:
 25681  014844  0E17               	movlw	23
 25682  014846  644B               	cpfsgt	i2___fttol@exp1,c
 25683  014848  D00F               	goto	i2l1601
 25684  01484A  0E00               	movlw	0
 25685  01484C  6E3D               	movwf	?i2___fttol,c
 25686  01484E  0E00               	movlw	0
 25687  014850  6E3E               	movwf	?i2___fttol+1,c
 25688  014852  0E00               	movlw	0
 25689  014854  6E3F               	movwf	?i2___fttol+2,c
 25690  014856  0E00               	movlw	0
 25691  014858  6E40               	movwf	?i2___fttol+3,c
 25692  01485A  0012               	return	
 25693  01485C  90D8               	bcf	status,0,c
 25694  01485E  3647               	rlcf	i2___fttol@lval,f,c
 25695  014860  3648               	rlcf	i2___fttol@lval+1,f,c
 25696  014862  3649               	rlcf	i2___fttol@lval+2,f,c
 25697  014864  364A               	rlcf	i2___fttol@lval+3,f,c
 25698  014866  064B               	decf	i2___fttol@exp1,f,c
 25699  014868                     i2l1601:
 25700  014868  504B               	movf	i2___fttol@exp1,w,c
 25701  01486A  A4D8               	btfss	status,2,c
 25702  01486C  D7F7               	goto	i2l1602
 25703  01486E                     i2u1527_40:
 25704  01486E  5046               	movf	i2___fttol@sign1,w,c
 25705  014870  B4D8               	btfsc	status,2,c
 25706  014872  D008               	goto	i2l1604
 25707  014874  1E4A               	comf	i2___fttol@lval+3,f,c
 25708  014876  1E49               	comf	i2___fttol@lval+2,f,c
 25709  014878  1E48               	comf	i2___fttol@lval+1,f,c
 25710  01487A  6C47               	negf	i2___fttol@lval,c
 25711  01487C  0E00               	movlw	0
 25712  01487E  2248               	addwfc	i2___fttol@lval+1,f,c
 25713  014880  2249               	addwfc	i2___fttol@lval+2,f,c
 25714  014882  224A               	addwfc	i2___fttol@lval+3,f,c
 25715  014884                     i2l1604:
 25716  014884  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 25717  014888  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 25718  01488C  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 25719  014890  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 25720  014894  0012               	return	
 25721  014896                     __end_ofi2___fttol:
 25722                           	opt stack 0
 25723                           tosu	equ	0xFFF
 25724                           tosh	equ	0xFFE
 25725                           tosl	equ	0xFFD
 25726                           pclatu	equ	0xFFB
 25727                           pclath	equ	0xFFA
 25728                           tblptru	equ	0xFF8
 25729                           tblptrh	equ	0xFF7
 25730                           tblptrl	equ	0xFF6
 25731                           tablat	equ	0xFF5
 25732                           prodh	equ	0xFF4
 25733                           prodl	equ	0xFF3
 25734                           intcon	equ	0xFF2
 25735                           postinc0	equ	0xFEE
 25736                           fsr0h	equ	0xFEA
 25737                           fsr0l	equ	0xFE9
 25738                           wreg	equ	0xFE8
 25739                           indf1	equ	0xFE7
 25740                           postdec1	equ	0xFE5
 25741                           fsr1h	equ	0xFE2
 25742                           fsr1l	equ	0xFE1
 25743                           bsr	equ	0xFE0
 25744                           indf2	equ	0xFDF
 25745                           postinc2	equ	0xFDE
 25746                           postdec2	equ	0xFDD
 25747                           fsr2h	equ	0xFDA
 25748                           fsr2l	equ	0xFD9
 25749                           status	equ	0xFD8
 25750                           
 25751 ;; *************** function i2___ftge *****************
 25752 ;; Defined at:
 25753 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 25754 ;; Parameters:    Size  Location     Type
 25755 ;;  ff1             3   41[COMRAM] float 
 25756 ;;  ff2             3   44[COMRAM] float 
 25757 ;; Auto vars:     Size  Location     Type
 25758 ;;		None
 25759 ;; Return value:  Size  Location     Type
 25760 ;;		None               void
 25761 ;; Registers used:
 25762 ;;		wreg, status,2, status,0
 25763 ;; Tracked objects:
 25764 ;;		On entry : 0/0
 25765 ;;		On exit  : 0/0
 25766 ;;		Unchanged: 0/0
 25767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25768 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25770 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25771 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25772 ;;Total ram usage:        9 bytes
 25773 ;; Hardware stack levels used:    1
 25774 ;; This function calls:
 25775 ;;		Nothing
 25776 ;; This function is called by:
 25777 ;;		_asin
 25778 ;;		_atan
 25779 ;;		_sin
 25780 ;;		_sqrt
 25781 ;;		_floor
 25782 ;;		i2_printf
 25783 ;; This function uses a non-reentrant model
 25784 ;;
 25785                           
 25786                           	psect	text102
 25787  015280                     __ptext102:
 25788                           	opt stack 0
 25789  015280                     i2___ftge:
 25790                           	opt stack 15
 25791                           
 25792                           ;incstack = 0
 25793  015280  AE2C               	btfss	i2___ftge@ff1+2,7,c
 25794  015282  D016               	goto	i2l1565
 25795  015284  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 25796  015288  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 25797  01528C  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 25798  015290  1E30               	comf	??i2___ftge,f,c
 25799  015292  1E31               	comf	??i2___ftge+1,f,c
 25800  015294  1E32               	comf	??i2___ftge+2,f,c
 25801  015296  2A30               	incf	??i2___ftge,f,c
 25802  015298  0E00               	movlw	0
 25803  01529A  2231               	addwfc	??i2___ftge+1,f,c
 25804  01529C  2232               	addwfc	??i2___ftge+2,f,c
 25805  01529E  0E00               	movlw	0
 25806  0152A0  2430               	addwf	??i2___ftge,w,c
 25807  0152A2  6E2A               	movwf	i2___ftge@ff1,c
 25808  0152A4  0E00               	movlw	0
 25809  0152A6  2031               	addwfc	??i2___ftge+1,w,c
 25810  0152A8  6E2B               	movwf	i2___ftge@ff1+1,c
 25811  0152AA  0E80               	movlw	128
 25812  0152AC  2032               	addwfc	??i2___ftge+2,w,c
 25813  0152AE  6E2C               	movwf	i2___ftge@ff1+2,c
 25814  0152B0                     i2l1565:
 25815  0152B0  AE2F               	btfss	i2___ftge@ff2+2,7,c
 25816  0152B2  D016               	goto	i2l1566
 25817  0152B4  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 25818  0152B8  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 25819  0152BC  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 25820  0152C0  1E30               	comf	??i2___ftge,f,c
 25821  0152C2  1E31               	comf	??i2___ftge+1,f,c
 25822  0152C4  1E32               	comf	??i2___ftge+2,f,c
 25823  0152C6  2A30               	incf	??i2___ftge,f,c
 25824  0152C8  0E00               	movlw	0
 25825  0152CA  2231               	addwfc	??i2___ftge+1,f,c
 25826  0152CC  2232               	addwfc	??i2___ftge+2,f,c
 25827  0152CE  0E00               	movlw	0
 25828  0152D0  2430               	addwf	??i2___ftge,w,c
 25829  0152D2  6E2D               	movwf	i2___ftge@ff2,c
 25830  0152D4  0E00               	movlw	0
 25831  0152D6  2031               	addwfc	??i2___ftge+1,w,c
 25832  0152D8  6E2E               	movwf	i2___ftge@ff2+1,c
 25833  0152DA  0E80               	movlw	128
 25834  0152DC  2032               	addwfc	??i2___ftge+2,w,c
 25835  0152DE  6E2F               	movwf	i2___ftge@ff2+2,c
 25836  0152E0                     i2l1566:
 25837  0152E0  0E00               	movlw	0
 25838  0152E2  1A2A               	xorwf	i2___ftge@ff1,f,c
 25839  0152E4  0E00               	movlw	0
 25840  0152E6  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 25841  0152E8  0E80               	movlw	128
 25842  0152EA  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 25843  0152EC  0E00               	movlw	0
 25844  0152EE  1A2D               	xorwf	i2___ftge@ff2,f,c
 25845  0152F0  0E00               	movlw	0
 25846  0152F2  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 25847  0152F4  0E80               	movlw	128
 25848  0152F6  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 25849  0152F8  502D               	movf	i2___ftge@ff2,w,c
 25850  0152FA  5C2A               	subwf	i2___ftge@ff1,w,c
 25851  0152FC  502E               	movf	i2___ftge@ff2+1,w,c
 25852  0152FE  582B               	subwfb	i2___ftge@ff1+1,w,c
 25853  015300  502F               	movf	i2___ftge@ff2+2,w,c
 25854  015302  582C               	subwfb	i2___ftge@ff1+2,w,c
 25855  015304  B0D8               	btfsc	status,0,c
 25856  015306  D002               	goto	i2l11685
 25857  015308  90D8               	bcf	status,0,c
 25858  01530A  0012               	return	
 25859  01530C                     i2l11685:
 25860  01530C  80D8               	bsf	status,0,c
 25861  01530E  0012               	return	
 25862  015310                     __end_ofi2___ftge:
 25863                           	opt stack 0
 25864                           tosu	equ	0xFFF
 25865                           tosh	equ	0xFFE
 25866                           tosl	equ	0xFFD
 25867                           pclatu	equ	0xFFB
 25868                           pclath	equ	0xFFA
 25869                           tblptru	equ	0xFF8
 25870                           tblptrh	equ	0xFF7
 25871                           tblptrl	equ	0xFF6
 25872                           tablat	equ	0xFF5
 25873                           prodh	equ	0xFF4
 25874                           prodl	equ	0xFF3
 25875                           intcon	equ	0xFF2
 25876                           postinc0	equ	0xFEE
 25877                           fsr0h	equ	0xFEA
 25878                           fsr0l	equ	0xFE9
 25879                           wreg	equ	0xFE8
 25880                           indf1	equ	0xFE7
 25881                           postdec1	equ	0xFE5
 25882                           fsr1h	equ	0xFE2
 25883                           fsr1l	equ	0xFE1
 25884                           bsr	equ	0xFE0
 25885                           indf2	equ	0xFDF
 25886                           postinc2	equ	0xFDE
 25887                           postdec2	equ	0xFDD
 25888                           fsr2h	equ	0xFDA
 25889                           fsr2l	equ	0xFD9
 25890                           status	equ	0xFD8
 25891                           
 25892 ;; *************** function _frexp *****************
 25893 ;; Defined at:
 25894 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 25895 ;; Parameters:    Size  Location     Type
 25896 ;;  value           3    0[COMRAM] float 
 25897 ;;  eptr            2    3[COMRAM] PTR int 
 25898 ;;		 -> floor@expon(2), 
 25899 ;; Auto vars:     Size  Location     Type
 25900 ;;		None
 25901 ;; Return value:  Size  Location     Type
 25902 ;;                  3    0[COMRAM] PTR int 
 25903 ;; Registers used:
 25904 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25905 ;; Tracked objects:
 25906 ;;		On entry : 0/0
 25907 ;;		On exit  : 0/0
 25908 ;;		Unchanged: 0/0
 25909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25910 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25911 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25912 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25913 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25914 ;;Total ram usage:        7 bytes
 25915 ;; Hardware stack levels used:    1
 25916 ;; This function calls:
 25917 ;;		Nothing
 25918 ;; This function is called by:
 25919 ;;		_floor
 25920 ;; This function uses a non-reentrant model
 25921 ;;
 25922                           
 25923                           	psect	text103
 25924  0155AC                     __ptext103:
 25925                           	opt stack 0
 25926  0155AC                     _frexp:
 25927                           	opt stack 12
 25928                           
 25929                           ;incstack = 0
 25930  0155AC  5001               	movf	frexp@value,w,c
 25931  0155AE  1002               	iorwf	frexp@value+1,w,c
 25932  0155B0  1003               	iorwf	frexp@value+2,w,c
 25933  0155B2  A4D8               	btfss	status,2,c
 25934  0155B4  D009               	goto	i2l1937
 25935  0155B6  C004  FFD9         	movff	frexp@eptr,fsr2l
 25936  0155BA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25937  0155BE  0E00               	movlw	0
 25938  0155C0  6EDE               	movwf	postinc2,c
 25939  0155C2  0E00               	movlw	0
 25940  0155C4  6EDD               	movwf	postdec2,c
 25941                           
 25942                           ;	Return value of _frexp is never used
 25943  0155C6  0012               	return	
 25944  0155C8                     i2l1937:
 25945  0155C8  5003               	movf	frexp@value+2,w,c
 25946  0155CA  0B7F               	andlw	127
 25947  0155CC  6E06               	movwf	??_frexp& (0+255),c
 25948  0155CE  6A07               	clrf	(??_frexp+1)& (0+255),c
 25949  0155D0  90D8               	bcf	status,0,c
 25950  0155D2  3606               	rlcf	??_frexp,f,c
 25951  0155D4  3607               	rlcf	??_frexp+1,f,c
 25952  0155D6  C004  FFD9         	movff	frexp@eptr,fsr2l
 25953  0155DA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25954  0155DE  C006  FFDE         	movff	??_frexp,postinc2
 25955  0155E2  C007  FFDD         	movff	??_frexp+1,postdec2
 25956  0155E6  AE02               	btfss	frexp@value+1,7,c
 25957  0155E8  D003               	goto	i2u1520_40
 25958  0155EA  6A06               	clrf	??_frexp& (0+255),c
 25959  0155EC  2A06               	incf	??_frexp& (0+255),f,c
 25960  0155EE  D001               	goto	i2u1520_48
 25961  0155F0                     i2u1520_40:
 25962  0155F0  6A06               	clrf	??_frexp& (0+255),c
 25963  0155F2                     i2u1520_48:
 25964  0155F2  5006               	movf	??_frexp,w,c
 25965  0155F4  C004  FFD9         	movff	frexp@eptr,fsr2l
 25966  0155F8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25967  0155FC  12DE               	iorwf	postinc2,f,c
 25968  0155FE  0E00               	movlw	0
 25969  015600  12DD               	iorwf	postdec2,f,c
 25970  015602  C004  FFD9         	movff	frexp@eptr,fsr2l
 25971  015606  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25972  01560A  0E82               	movlw	130
 25973  01560C  26DE               	addwf	postinc2,f,c
 25974  01560E  0EFF               	movlw	255
 25975  015610  22DD               	addwfc	postdec2,f,c
 25976  015612  8003               	bsf	frexp@value+2,0,c
 25977  015614  8203               	bsf	frexp@value+2,1,c
 25978  015616  8403               	bsf	frexp@value+2,2,c
 25979  015618  8603               	bsf	frexp@value+2,3,c
 25980  01561A  8803               	bsf	frexp@value+2,4,c
 25981  01561C  8A03               	bsf	frexp@value+2,5,c
 25982  01561E  9C03               	bcf	frexp@value+2,6,c
 25983  015620  9E02               	bcf	frexp@value+1,7,c
 25984  015622  0012               	return	
 25985  015624                     __end_of_frexp:
 25986                           	opt stack 0
 25987                           tosu	equ	0xFFF
 25988                           tosh	equ	0xFFE
 25989                           tosl	equ	0xFFD
 25990                           pclatu	equ	0xFFB
 25991                           pclath	equ	0xFFA
 25992                           tblptru	equ	0xFF8
 25993                           tblptrh	equ	0xFF7
 25994                           tblptrl	equ	0xFF6
 25995                           tablat	equ	0xFF5
 25996                           prodh	equ	0xFF4
 25997                           prodl	equ	0xFF3
 25998                           intcon	equ	0xFF2
 25999                           postinc0	equ	0xFEE
 26000                           fsr0h	equ	0xFEA
 26001                           fsr0l	equ	0xFE9
 26002                           wreg	equ	0xFE8
 26003                           indf1	equ	0xFE7
 26004                           postdec1	equ	0xFE5
 26005                           fsr1h	equ	0xFE2
 26006                           fsr1l	equ	0xFE1
 26007                           bsr	equ	0xFE0
 26008                           indf2	equ	0xFDF
 26009                           postinc2	equ	0xFDE
 26010                           postdec2	equ	0xFDD
 26011                           fsr2h	equ	0xFDA
 26012                           fsr2l	equ	0xFD9
 26013                           status	equ	0xFD8
 26014                           
 26015 ;; *************** function ___altoft *****************
 26016 ;; Defined at:
 26017 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 26018 ;; Parameters:    Size  Location     Type
 26019 ;;  c               4   75[COMRAM] long 
 26020 ;; Auto vars:     Size  Location     Type
 26021 ;;  sign            1   84[COMRAM] unsigned char 
 26022 ;;  exp             1   83[COMRAM] unsigned char 
 26023 ;; Return value:  Size  Location     Type
 26024 ;;                  3   75[COMRAM] float 
 26025 ;; Registers used:
 26026 ;;		wreg, status,2, status,0, cstack
 26027 ;; Tracked objects:
 26028 ;;		On entry : 0/0
 26029 ;;		On exit  : 0/0
 26030 ;;		Unchanged: 0/0
 26031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26032 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26033 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26034 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26035 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26036 ;;Total ram usage:       10 bytes
 26037 ;; Hardware stack levels used:    1
 26038 ;; Hardware stack levels required when called:    1
 26039 ;; This function calls:
 26040 ;;		i2___ftpack
 26041 ;; This function is called by:
 26042 ;;		_floor
 26043 ;; This function uses a non-reentrant model
 26044 ;;
 26045                           
 26046                           	psect	text104
 26047  015624                     __ptext104:
 26048                           	opt stack 0
 26049  015624                     ___altoft:
 26050                           	opt stack 11
 26051                           
 26052                           ;incstack = 0
 26053  015624  0E00               	movlw	0
 26054  015626  6E55               	movwf	___altoft@sign,c
 26055  015628  0E8E               	movlw	142
 26056  01562A  6E54               	movwf	___altoft@exp,c
 26057  01562C  AE4F               	btfss	___altoft@c+3,7,c
 26058  01562E  D011               	goto	i2l1270
 26059  015630  1E4F               	comf	___altoft@c+3,f,c
 26060  015632  1E4E               	comf	___altoft@c+2,f,c
 26061  015634  1E4D               	comf	___altoft@c+1,f,c
 26062  015636  6C4C               	negf	___altoft@c,c
 26063  015638  0E00               	movlw	0
 26064  01563A  224D               	addwfc	___altoft@c+1,f,c
 26065  01563C  224E               	addwfc	___altoft@c+2,f,c
 26066  01563E  224F               	addwfc	___altoft@c+3,f,c
 26067  015640  0E01               	movlw	1
 26068  015642  6E55               	movwf	___altoft@sign,c
 26069  015644  D006               	goto	i2l1270
 26070  015646  90D8               	bcf	status,0,c
 26071  015648  324F               	rrcf	___altoft@c+3,f,c
 26072  01564A  324E               	rrcf	___altoft@c+2,f,c
 26073  01564C  324D               	rrcf	___altoft@c+1,f,c
 26074  01564E  324C               	rrcf	___altoft@c,f,c
 26075  015650  2A54               	incf	___altoft@exp,f,c
 26076  015652                     i2l1270:
 26077  015652  0E00               	movlw	0
 26078  015654  144C               	andwf	___altoft@c,w,c
 26079  015656  6E50               	movwf	??___altoft& (0+255),c
 26080  015658  0E00               	movlw	0
 26081  01565A  144D               	andwf	___altoft@c+1,w,c
 26082  01565C  6E51               	movwf	(??___altoft+1)& (0+255),c
 26083  01565E  0E00               	movlw	0
 26084  015660  144E               	andwf	___altoft@c+2,w,c
 26085  015662  6E52               	movwf	(??___altoft+2)& (0+255),c
 26086  015664  0EFF               	movlw	255
 26087  015666  144F               	andwf	___altoft@c+3,w,c
 26088  015668  6E53               	movwf	(??___altoft+3)& (0+255),c
 26089  01566A  5050               	movf	??___altoft,w,c
 26090  01566C  1051               	iorwf	??___altoft+1,w,c
 26091  01566E  1052               	iorwf	??___altoft+2,w,c
 26092  015670  1053               	iorwf	??___altoft+3,w,c
 26093  015672  A4D8               	btfss	status,2,c
 26094  015674  D7E8               	goto	i2l1271
 26095  015676  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 26096  01567A  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 26097  01567E  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 26098  015682  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 26099  015686  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 26100  01568A  ECB2  F0A7         	call	i2___ftpack	;wreg free
 26101  01568E  C001  F04C         	movff	?i2___ftpack,?___altoft
 26102  015692  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 26103  015696  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 26104  01569A  0012               	return	
 26105  01569C                     __end_of___altoft:
 26106                           	opt stack 0
 26107                           tosu	equ	0xFFF
 26108                           tosh	equ	0xFFE
 26109                           tosl	equ	0xFFD
 26110                           pclatu	equ	0xFFB
 26111                           pclath	equ	0xFFA
 26112                           tblptru	equ	0xFF8
 26113                           tblptrh	equ	0xFF7
 26114                           tblptrl	equ	0xFF6
 26115                           tablat	equ	0xFF5
 26116                           prodh	equ	0xFF4
 26117                           prodl	equ	0xFF3
 26118                           intcon	equ	0xFF2
 26119                           postinc0	equ	0xFEE
 26120                           fsr0h	equ	0xFEA
 26121                           fsr0l	equ	0xFE9
 26122                           wreg	equ	0xFE8
 26123                           indf1	equ	0xFE7
 26124                           postdec1	equ	0xFE5
 26125                           fsr1h	equ	0xFE2
 26126                           fsr1l	equ	0xFE1
 26127                           bsr	equ	0xFE0
 26128                           indf2	equ	0xFDF
 26129                           postinc2	equ	0xFDE
 26130                           postdec2	equ	0xFDD
 26131                           fsr2h	equ	0xFDA
 26132                           fsr2l	equ	0xFD9
 26133                           status	equ	0xFD8
 26134                           
 26135 ;; *************** function _eval_poly *****************
 26136 ;; Defined at:
 26137 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 26138 ;; Parameters:    Size  Location     Type
 26139 ;;  x               3   75[COMRAM] float 
 26140 ;;  d               2   78[COMRAM] PTR const 
 26141 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 26142 ;;  n               2   80[COMRAM] int 
 26143 ;; Auto vars:     Size  Location     Type
 26144 ;;  res             3   84[COMRAM] int 
 26145 ;; Return value:  Size  Location     Type
 26146 ;;                  3   75[COMRAM] int 
 26147 ;; Registers used:
 26148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26149 ;; Tracked objects:
 26150 ;;		On entry : 0/0
 26151 ;;		On exit  : 0/0
 26152 ;;		Unchanged: 0/0
 26153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26154 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26155 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26157 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26158 ;;Total ram usage:       12 bytes
 26159 ;; Hardware stack levels used:    1
 26160 ;; Hardware stack levels required when called:    2
 26161 ;; This function calls:
 26162 ;;		i2___ftadd
 26163 ;;		i2___ftmul
 26164 ;;		i2___wmul
 26165 ;; This function is called by:
 26166 ;;		_atan
 26167 ;;		_sin
 26168 ;; This function uses a non-reentrant model
 26169 ;;
 26170                           
 26171                           	psect	text105
 26172  014C36                     __ptext105:
 26173                           	opt stack 0
 26174  014C36                     _eval_poly:
 26175                           	opt stack 11
 26176                           
 26177                           ;incstack = 0
 26178  014C36  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 26179  014C3A  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 26180  014C3E  0E00               	movlw	0
 26181  014C40  6E12               	movwf	i2___wmul@multiplicand+1,c
 26182  014C42  0E03               	movlw	3
 26183  014C44  6E11               	movwf	i2___wmul@multiplicand,c
 26184  014C46  ECC9  F0B0         	call	i2___wmul	;wreg free
 26185  014C4A  C04F  F053         	movff	eval_poly@d,??_eval_poly
 26186  014C4E  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 26187  014C52  500F               	movf	?i2___wmul,w,c
 26188  014C54  2653               	addwf	??_eval_poly,f,c
 26189  014C56  5010               	movf	?i2___wmul+1,w,c
 26190  014C58  2254               	addwfc	??_eval_poly+1,f,c
 26191  014C5A  C053  FFF6         	movff	??_eval_poly,tblptrl
 26192  014C5E  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 26193  014C62                     	if	0	;tblptru may be non-zero
 26194  014C62                     	endif
 26195  014C62                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26196  014C62  0E00               	movlw	low (__mediumconst shr (0+16))
 26197  014C64  6EF8               	movwf	tblptru,c
 26198  014C66                     	endif
 26199  014C66  0009               	tblrd		*+
 26200  014C68  CFF5 F055          	movff	tablat,eval_poly@res
 26201  014C6C  0009               	tblrd		*+
 26202  014C6E  CFF5 F056          	movff	tablat,eval_poly@res+1
 26203  014C72  000A               	tblrd		*-
 26204  014C74  CFF5 F057          	movff	tablat,eval_poly@res+2
 26205  014C78  D040               	goto	i2l1434
 26206  014C7A  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 26207  014C7E  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 26208  014C82  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 26209  014C86  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 26210  014C8A  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 26211  014C8E  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 26212  014C92  EC4B  F0A4         	call	i2___ftmul	;wreg free
 26213  014C96  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 26214  014C9A  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 26215  014C9E  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 26216  014CA2  0E00               	movlw	0
 26217  014CA4  6E12               	movwf	i2___wmul@multiplicand+1,c
 26218  014CA6  0E03               	movlw	3
 26219  014CA8  6E11               	movwf	i2___wmul@multiplicand,c
 26220  014CAA  0651               	decf	eval_poly@n,f,c
 26221  014CAC  A0D8               	btfss	status,0,c
 26222  014CAE  0652               	decf	eval_poly@n+1,f,c
 26223  014CB0  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 26224  014CB4  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 26225  014CB8  ECC9  F0B0         	call	i2___wmul	;wreg free
 26226  014CBC  C04F  F053         	movff	eval_poly@d,??_eval_poly
 26227  014CC0  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 26228  014CC4  500F               	movf	?i2___wmul,w,c
 26229  014CC6  2653               	addwf	??_eval_poly,f,c
 26230  014CC8  5010               	movf	?i2___wmul+1,w,c
 26231  014CCA  2254               	addwfc	??_eval_poly+1,f,c
 26232  014CCC  C053  FFF6         	movff	??_eval_poly,tblptrl
 26233  014CD0  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 26234  014CD4                     	if	0	;tblptru may be non-zero
 26235  014CD4                     	endif
 26236  014CD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 26237  014CD4  0E00               	movlw	low (__mediumconst shr (0+16))
 26238  014CD6  6EF8               	movwf	tblptru,c
 26239  014CD8                     	endif
 26240  014CD8  0009               	tblrd		*+
 26241  014CDA  CFF5 F043          	movff	tablat,i2___ftadd@f2
 26242  014CDE  0009               	tblrd		*+
 26243  014CE0  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 26244  014CE4  000A               	tblrd		*-
 26245  014CE6  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 26246  014CEA  EC51  F09E         	call	i2___ftadd	;wreg free
 26247  014CEE  C040  F055         	movff	?i2___ftadd,eval_poly@res
 26248  014CF2  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 26249  014CF6  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 26250  014CFA                     i2l1434:
 26251  014CFA  5051               	movf	eval_poly@n,w,c
 26252  014CFC  1052               	iorwf	eval_poly@n+1,w,c
 26253  014CFE  A4D8               	btfss	status,2,c
 26254  014D00  D7BC               	goto	i2l1435
 26255  014D02  C055  F04C         	movff	eval_poly@res,?_eval_poly
 26256  014D06  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 26257  014D0A  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 26258  014D0E  0012               	return		;funcret
 26259  014D10                     __end_of_eval_poly:
 26260                           	opt stack 0
 26261                           tosu	equ	0xFFF
 26262                           tosh	equ	0xFFE
 26263                           tosl	equ	0xFFD
 26264                           pclatu	equ	0xFFB
 26265                           pclath	equ	0xFFA
 26266                           tblptru	equ	0xFF8
 26267                           tblptrh	equ	0xFF7
 26268                           tblptrl	equ	0xFF6
 26269                           tablat	equ	0xFF5
 26270                           prodh	equ	0xFF4
 26271                           prodl	equ	0xFF3
 26272                           intcon	equ	0xFF2
 26273                           postinc0	equ	0xFEE
 26274                           fsr0h	equ	0xFEA
 26275                           fsr0l	equ	0xFE9
 26276                           wreg	equ	0xFE8
 26277                           indf1	equ	0xFE7
 26278                           postdec1	equ	0xFE5
 26279                           fsr1h	equ	0xFE2
 26280                           fsr1l	equ	0xFE1
 26281                           bsr	equ	0xFE0
 26282                           indf2	equ	0xFDF
 26283                           postinc2	equ	0xFDE
 26284                           postdec2	equ	0xFDD
 26285                           fsr2h	equ	0xFDA
 26286                           fsr2l	equ	0xFD9
 26287                           status	equ	0xFD8
 26288                           
 26289 ;; *************** function i2___wmul *****************
 26290 ;; Defined at:
 26291 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 26292 ;; Parameters:    Size  Location     Type
 26293 ;;  multiplier      2   14[COMRAM] unsigned int 
 26294 ;;  multiplicand    2   16[COMRAM] unsigned int 
 26295 ;; Auto vars:     Size  Location     Type
 26296 ;;  __wmul          2   18[COMRAM] unsigned int 
 26297 ;; Return value:  Size  Location     Type
 26298 ;;                  2   14[COMRAM] unsigned int 
 26299 ;; Registers used:
 26300 ;;		wreg, status,2, status,0, prodl, prodh
 26301 ;; Tracked objects:
 26302 ;;		On entry : 0/0
 26303 ;;		On exit  : 0/0
 26304 ;;		Unchanged: 0/0
 26305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26306 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26307 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26309 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26310 ;;Total ram usage:        6 bytes
 26311 ;; Hardware stack levels used:    1
 26312 ;; This function calls:
 26313 ;;		Nothing
 26314 ;; This function is called by:
 26315 ;;		_eval_poly
 26316 ;;		i2_fround
 26317 ;;		i2_scale
 26318 ;;		i2_printf
 26319 ;; This function uses a non-reentrant model
 26320 ;;
 26321                           
 26322                           	psect	text106
 26323  016192                     __ptext106:
 26324                           	opt stack 0
 26325  016192                     i2___wmul:
 26326                           	opt stack 14
 26327                           
 26328                           ;incstack = 0
 26329  016192  500F               	movf	i2___wmul@multiplier,w,c
 26330  016194  0211               	mulwf	i2___wmul@multiplicand,c
 26331  016196  CFF3 F013          	movff	prodl,i2___wmul@product
 26332  01619A  CFF4 F014          	movff	prodh,i2___wmul@product+1
 26333  01619E  500F               	movf	i2___wmul@multiplier,w,c
 26334  0161A0  0212               	mulwf	i2___wmul@multiplicand+1,c
 26335  0161A2  50F3               	movf	prodl,w,c
 26336  0161A4  2614               	addwf	i2___wmul@product+1,f,c
 26337  0161A6  5010               	movf	i2___wmul@multiplier+1,w,c
 26338  0161A8  0211               	mulwf	i2___wmul@multiplicand,c
 26339  0161AA  50F3               	movf	prodl,w,c
 26340  0161AC  2614               	addwf	i2___wmul@product+1,f,c
 26341  0161AE  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 26342  0161B2  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 26343  0161B6  0012               	return	
 26344  0161B8                     __end_ofi2___wmul:
 26345                           	opt stack 0
 26346                           tosu	equ	0xFFF
 26347                           tosh	equ	0xFFE
 26348                           tosl	equ	0xFFD
 26349                           pclatu	equ	0xFFB
 26350                           pclath	equ	0xFFA
 26351                           tblptru	equ	0xFF8
 26352                           tblptrh	equ	0xFF7
 26353                           tblptrl	equ	0xFF6
 26354                           tablat	equ	0xFF5
 26355                           prodh	equ	0xFF4
 26356                           prodl	equ	0xFF3
 26357                           intcon	equ	0xFF2
 26358                           postinc0	equ	0xFEE
 26359                           fsr0h	equ	0xFEA
 26360                           fsr0l	equ	0xFE9
 26361                           wreg	equ	0xFE8
 26362                           indf1	equ	0xFE7
 26363                           postdec1	equ	0xFE5
 26364                           fsr1h	equ	0xFE2
 26365                           fsr1l	equ	0xFE1
 26366                           bsr	equ	0xFE0
 26367                           indf2	equ	0xFDF
 26368                           postinc2	equ	0xFDE
 26369                           postdec2	equ	0xFDD
 26370                           fsr2h	equ	0xFDA
 26371                           fsr2l	equ	0xFD9
 26372                           status	equ	0xFD8
 26373                           
 26374 ;; *************** function i2___ftmul *****************
 26375 ;; Defined at:
 26376 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 26377 ;; Parameters:    Size  Location     Type
 26378 ;;  f1              3   38[COMRAM] float 
 26379 ;;  f2              3   41[COMRAM] float 
 26380 ;; Auto vars:     Size  Location     Type
 26381 ;;  __ftmul         3   48[COMRAM] unsigned um
 26382 ;;  __ftmul         1   52[COMRAM] unsigned char 
 26383 ;;  __ftmul         1   51[COMRAM] unsigned char 
 26384 ;;  __ftmul         1   47[COMRAM] unsigned char 
 26385 ;; Return value:  Size  Location     Type
 26386 ;;                  3   38[COMRAM] float 
 26387 ;; Registers used:
 26388 ;;		wreg, status,2, status,0, cstack
 26389 ;; Tracked objects:
 26390 ;;		On entry : 0/0
 26391 ;;		On exit  : 0/0
 26392 ;;		Unchanged: 0/0
 26393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26394 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26395 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26396 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26397 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26398 ;;Total ram usage:       15 bytes
 26399 ;; Hardware stack levels used:    1
 26400 ;; Hardware stack levels required when called:    1
 26401 ;; This function calls:
 26402 ;;		i2___ftpack
 26403 ;; This function is called by:
 26404 ;;		_peakToRMS
 26405 ;;		_ADC_postProcessingCallback
 26406 ;;		_asin
 26407 ;;		_atan
 26408 ;;		_eval_poly
 26409 ;;		_sin
 26410 ;;		_sqrt
 26411 ;;		i2_fround
 26412 ;;		i2_scale
 26413 ;;		i2_printf
 26414 ;; This function uses a non-reentrant model
 26415 ;;
 26416                           
 26417                           	psect	text107
 26418  014896                     __ptext107:
 26419                           	opt stack 0
 26420  014896                     i2___ftmul:
 26421                           	opt stack 13
 26422                           
 26423                           ;incstack = 0
 26424  014896  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 26425  01489A  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 26426  01489C  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 26427  01489E  3428               	rlcf	i2___ftmul@f1+1,w,c
 26428  0148A0  362D               	rlcf	??i2___ftmul& (0+255),f,c
 26429  0148A2  E301               	bnc	u1491_41
 26430  0148A4  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 26431  0148A6                     u1491_41:
 26432  0148A6  502D               	movf	??i2___ftmul,w,c
 26433  0148A8  6E30               	movwf	i2___ftmul@exp,c
 26434  0148AA  5030               	movf	i2___ftmul@exp,w,c
 26435  0148AC  A4D8               	btfss	status,2,c
 26436  0148AE  D007               	goto	i2l1572
 26437  0148B0  0E00               	movlw	0
 26438  0148B2  6E27               	movwf	?i2___ftmul,c
 26439  0148B4  0E00               	movlw	0
 26440  0148B6  6E28               	movwf	?i2___ftmul+1,c
 26441  0148B8  0E00               	movlw	0
 26442  0148BA  6E29               	movwf	?i2___ftmul+2,c
 26443  0148BC  0012               	return	
 26444  0148BE                     i2l1572:
 26445  0148BE  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 26446  0148C2  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 26447  0148C4  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 26448  0148C6  342B               	rlcf	i2___ftmul@f2+1,w,c
 26449  0148C8  362D               	rlcf	??i2___ftmul& (0+255),f,c
 26450  0148CA  E301               	bnc	u1493_41
 26451  0148CC  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 26452  0148CE                     u1493_41:
 26453  0148CE  502D               	movf	??i2___ftmul,w,c
 26454  0148D0  6E35               	movwf	i2___ftmul@sign,c
 26455  0148D2  5035               	movf	i2___ftmul@sign,w,c
 26456  0148D4  A4D8               	btfss	status,2,c
 26457  0148D6  D007               	goto	i2l1574
 26458  0148D8  0E00               	movlw	0
 26459  0148DA  6E27               	movwf	?i2___ftmul,c
 26460  0148DC  0E00               	movlw	0
 26461  0148DE  6E28               	movwf	?i2___ftmul+1,c
 26462  0148E0  0E00               	movlw	0
 26463  0148E2  6E29               	movwf	?i2___ftmul+2,c
 26464  0148E4  0012               	return	
 26465  0148E6                     i2l1574:
 26466  0148E6  5035               	movf	i2___ftmul@sign,w,c
 26467  0148E8  0F7B               	addlw	123
 26468  0148EA  2630               	addwf	i2___ftmul@exp,f,c
 26469  0148EC  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 26470  0148F0  502C               	movf	i2___ftmul@f2+2,w,c
 26471  0148F2  1A35               	xorwf	i2___ftmul@sign,f,c
 26472  0148F4  0E80               	movlw	128
 26473  0148F6  1635               	andwf	i2___ftmul@sign,f,c
 26474  0148F8  8E28               	bsf	i2___ftmul@f1+1,7,c
 26475  0148FA  8E2B               	bsf	i2___ftmul@f2+1,7,c
 26476  0148FC  0EFF               	movlw	255
 26477  0148FE  162A               	andwf	i2___ftmul@f2,f,c
 26478  014900  0EFF               	movlw	255
 26479  014902  162B               	andwf	i2___ftmul@f2+1,f,c
 26480  014904  0E00               	movlw	0
 26481  014906  162C               	andwf	i2___ftmul@f2+2,f,c
 26482  014908  0E00               	movlw	0
 26483  01490A  6E31               	movwf	i2___ftmul@f3_as_product,c
 26484  01490C  0E00               	movlw	0
 26485  01490E  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 26486  014910  0E00               	movlw	0
 26487  014912  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 26488  014914  0E07               	movlw	7
 26489  014916  6E34               	movwf	i2___ftmul@cntr,c
 26490  014918  A027               	btfss	i2___ftmul@f1,0,c
 26491  01491A  D006               	goto	i2l1576
 26492  01491C  502A               	movf	i2___ftmul@f2,w,c
 26493  01491E  2631               	addwf	i2___ftmul@f3_as_product,f,c
 26494  014920  502B               	movf	i2___ftmul@f2+1,w,c
 26495  014922  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 26496  014924  502C               	movf	i2___ftmul@f2+2,w,c
 26497  014926  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 26498  014928                     i2l1576:
 26499  014928  90D8               	bcf	status,0,c
 26500  01492A  3229               	rrcf	i2___ftmul@f1+2,f,c
 26501  01492C  3228               	rrcf	i2___ftmul@f1+1,f,c
 26502  01492E  3227               	rrcf	i2___ftmul@f1,f,c
 26503  014930  90D8               	bcf	status,0,c
 26504  014932  362A               	rlcf	i2___ftmul@f2,f,c
 26505  014934  362B               	rlcf	i2___ftmul@f2+1,f,c
 26506  014936  362C               	rlcf	i2___ftmul@f2+2,f,c
 26507  014938  2E34               	decfsz	i2___ftmul@cntr,f,c
 26508  01493A  D7EE               	goto	i2l1575
 26509  01493C  0E09               	movlw	9
 26510  01493E  6E34               	movwf	i2___ftmul@cntr,c
 26511  014940  A027               	btfss	i2___ftmul@f1,0,c
 26512  014942  D006               	goto	i2l1579
 26513  014944  502A               	movf	i2___ftmul@f2,w,c
 26514  014946  2631               	addwf	i2___ftmul@f3_as_product,f,c
 26515  014948  502B               	movf	i2___ftmul@f2+1,w,c
 26516  01494A  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 26517  01494C  502C               	movf	i2___ftmul@f2+2,w,c
 26518  01494E  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 26519  014950                     i2l1579:
 26520  014950  90D8               	bcf	status,0,c
 26521  014952  3229               	rrcf	i2___ftmul@f1+2,f,c
 26522  014954  3228               	rrcf	i2___ftmul@f1+1,f,c
 26523  014956  3227               	rrcf	i2___ftmul@f1,f,c
 26524  014958  90D8               	bcf	status,0,c
 26525  01495A  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 26526  01495C  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 26527  01495E  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 26528  014960  2E34               	decfsz	i2___ftmul@cntr,f,c
 26529  014962  D7EE               	goto	i2l1578
 26530  014964  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 26531  014968  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 26532  01496C  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 26533  014970  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 26534  014974  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 26535  014978  ECB2  F0A7         	call	i2___ftpack	;wreg free
 26536  01497C  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 26537  014980  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 26538  014984  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 26539  014988  0012               	return	
 26540  01498A                     __end_ofi2___ftmul:
 26541                           	opt stack 0
 26542                           tosu	equ	0xFFF
 26543                           tosh	equ	0xFFE
 26544                           tosl	equ	0xFFD
 26545                           pclatu	equ	0xFFB
 26546                           pclath	equ	0xFFA
 26547                           tblptru	equ	0xFF8
 26548                           tblptrh	equ	0xFF7
 26549                           tblptrl	equ	0xFF6
 26550                           tablat	equ	0xFF5
 26551                           prodh	equ	0xFF4
 26552                           prodl	equ	0xFF3
 26553                           intcon	equ	0xFF2
 26554                           postinc0	equ	0xFEE
 26555                           fsr0h	equ	0xFEA
 26556                           fsr0l	equ	0xFE9
 26557                           wreg	equ	0xFE8
 26558                           indf1	equ	0xFE7
 26559                           postdec1	equ	0xFE5
 26560                           fsr1h	equ	0xFE2
 26561                           fsr1l	equ	0xFE1
 26562                           bsr	equ	0xFE0
 26563                           indf2	equ	0xFDF
 26564                           postinc2	equ	0xFDE
 26565                           postdec2	equ	0xFDD
 26566                           fsr2h	equ	0xFDA
 26567                           fsr2l	equ	0xFD9
 26568                           status	equ	0xFD8
 26569                           
 26570 ;; *************** function i2___ftadd *****************
 26571 ;; Defined at:
 26572 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 26573 ;; Parameters:    Size  Location     Type
 26574 ;;  f1              3   63[COMRAM] float 
 26575 ;;  f2              3   66[COMRAM] float 
 26576 ;; Auto vars:     Size  Location     Type
 26577 ;;  __ftadd         1   74[COMRAM] unsigned char 
 26578 ;;  __ftadd         1   73[COMRAM] unsigned char 
 26579 ;;  __ftadd         1   72[COMRAM] unsigned char 
 26580 ;; Return value:  Size  Location     Type
 26581 ;;                  3   63[COMRAM] float 
 26582 ;; Registers used:
 26583 ;;		wreg, status,2, status,0, cstack
 26584 ;; Tracked objects:
 26585 ;;		On entry : 0/0
 26586 ;;		On exit  : 0/0
 26587 ;;		Unchanged: 0/0
 26588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26589 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26590 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26591 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26592 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26593 ;;Total ram usage:       12 bytes
 26594 ;; Hardware stack levels used:    1
 26595 ;; Hardware stack levels required when called:    1
 26596 ;; This function calls:
 26597 ;;		i2___ftpack
 26598 ;; This function is called by:
 26599 ;;		_peakToRMS
 26600 ;;		_ADC_postProcessingCallback
 26601 ;;		_acos
 26602 ;;		_asin
 26603 ;;		_atan
 26604 ;;		_eval_poly
 26605 ;;		_sin
 26606 ;;		_floor
 26607 ;;		i2_printf
 26608 ;;		i2___ftsub
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text108
 26613  013CA2                     __ptext108:
 26614                           	opt stack 0
 26615  013CA2                     i2___ftadd:
 26616                           	opt stack 13
 26617                           
 26618                           ;incstack = 0
 26619  013CA2  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 26620  013CA6  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 26621  013CA8  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 26622  013CAA  3441               	rlcf	i2___ftadd@f1+1,w,c
 26623  013CAC  3646               	rlcf	??i2___ftadd& (0+255),f,c
 26624  013CAE  E301               	bnc	u1470_41
 26625  013CB0  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 26626  013CB2                     u1470_41:
 26627  013CB2  5046               	movf	??i2___ftadd,w,c
 26628  013CB4  6E4B               	movwf	i2___ftadd@exp1,c
 26629  013CB6  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 26630  013CBA  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 26631  013CBC  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 26632  013CBE  3444               	rlcf	i2___ftadd@f2+1,w,c
 26633  013CC0  3646               	rlcf	??i2___ftadd& (0+255),f,c
 26634  013CC2  E301               	bnc	u1471_41
 26635  013CC4  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 26636  013CC6                     u1471_41:
 26637  013CC6  5046               	movf	??i2___ftadd,w,c
 26638  013CC8  6E4A               	movwf	i2___ftadd@exp2,c
 26639  013CCA  504B               	movf	i2___ftadd@exp1,w,c
 26640  013CCC  B4D8               	btfsc	status,2,c
 26641  013CCE  D00B               	goto	i2u1474_40
 26642  013CD0  504A               	movf	i2___ftadd@exp2,w,c
 26643  013CD2  5C4B               	subwf	i2___ftadd@exp1,w,c
 26644  013CD4  B0D8               	btfsc	status,0,c
 26645  013CD6  D00E               	goto	i2l1507
 26646  013CD8  504B               	movf	i2___ftadd@exp1,w,c
 26647  013CDA  0800               	sublw	0
 26648  013CDC  244A               	addwf	i2___ftadd@exp2,w,c
 26649  013CDE  6E46               	movwf	??i2___ftadd& (0+255),c
 26650  013CE0  0E18               	movlw	24
 26651  013CE2  6446               	cpfsgt	??i2___ftadd,c
 26652  013CE4  D007               	goto	i2l1507
 26653  013CE6                     i2u1474_40:
 26654  013CE6  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 26655  013CEA  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 26656  013CEE  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 26657  013CF2  0012               	return	
 26658  013CF4                     i2l1507:
 26659  013CF4  504A               	movf	i2___ftadd@exp2,w,c
 26660  013CF6  B4D8               	btfsc	status,2,c
 26661  013CF8  D00B               	goto	i2u1477_40
 26662  013CFA  504B               	movf	i2___ftadd@exp1,w,c
 26663  013CFC  5C4A               	subwf	i2___ftadd@exp2,w,c
 26664  013CFE  B0D8               	btfsc	status,0,c
 26665  013D00  D00E               	goto	i2l1511
 26666  013D02  504A               	movf	i2___ftadd@exp2,w,c
 26667  013D04  0800               	sublw	0
 26668  013D06  244B               	addwf	i2___ftadd@exp1,w,c
 26669  013D08  6E46               	movwf	??i2___ftadd& (0+255),c
 26670  013D0A  0E18               	movlw	24
 26671  013D0C  6446               	cpfsgt	??i2___ftadd,c
 26672  013D0E  D007               	goto	i2l1511
 26673  013D10                     i2u1477_40:
 26674  013D10  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 26675  013D14  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 26676  013D18  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 26677  013D1C  0012               	return	
 26678  013D1E                     i2l1511:
 26679  013D1E  0E06               	movlw	6
 26680  013D20  6E49               	movwf	i2___ftadd@sign,c
 26681  013D22  BE42               	btfsc	i2___ftadd@f1+2,7,c
 26682  013D24  8E49               	bsf	i2___ftadd@sign,7,c
 26683  013D26  BE45               	btfsc	i2___ftadd@f2+2,7,c
 26684  013D28  8C49               	bsf	i2___ftadd@sign,6,c
 26685  013D2A  8E41               	bsf	i2___ftadd@f1+1,7,c
 26686  013D2C  0EFF               	movlw	255
 26687  013D2E  1640               	andwf	i2___ftadd@f1,f,c
 26688  013D30  0EFF               	movlw	255
 26689  013D32  1641               	andwf	i2___ftadd@f1+1,f,c
 26690  013D34  0E00               	movlw	0
 26691  013D36  1642               	andwf	i2___ftadd@f1+2,f,c
 26692  013D38  8E44               	bsf	i2___ftadd@f2+1,7,c
 26693  013D3A  0EFF               	movlw	255
 26694  013D3C  1643               	andwf	i2___ftadd@f2,f,c
 26695  013D3E  0EFF               	movlw	255
 26696  013D40  1644               	andwf	i2___ftadd@f2+1,f,c
 26697  013D42  0E00               	movlw	0
 26698  013D44  1645               	andwf	i2___ftadd@f2+2,f,c
 26699  013D46  504A               	movf	i2___ftadd@exp2,w,c
 26700  013D48  5C4B               	subwf	i2___ftadd@exp1,w,c
 26701  013D4A  B0D8               	btfsc	status,0,c
 26702  013D4C  D01B               	goto	i2l1516
 26703  013D4E                     i2u1480_40:
 26704  013D4E  90D8               	bcf	status,0,c
 26705  013D50  3643               	rlcf	i2___ftadd@f2,f,c
 26706  013D52  3644               	rlcf	i2___ftadd@f2+1,f,c
 26707  013D54  3645               	rlcf	i2___ftadd@f2+2,f,c
 26708  013D56  064A               	decf	i2___ftadd@exp2,f,c
 26709  013D58  504B               	movf	i2___ftadd@exp1,w,c
 26710  013D5A  184A               	xorwf	i2___ftadd@exp2,w,c
 26711  013D5C  B4D8               	btfsc	status,2,c
 26712  013D5E  D00D               	goto	i2l1521
 26713  013D60  0649               	decf	i2___ftadd@sign,f,c
 26714  013D62  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 26715  013D66  0E07               	movlw	7
 26716  013D68  1646               	andwf	??i2___ftadd,f,c
 26717  013D6A  B4D8               	btfsc	status,2,c
 26718  013D6C  D006               	goto	i2l1521
 26719  013D6E  D7EF               	goto	i2u1480_40
 26720  013D70  90D8               	bcf	status,0,c
 26721  013D72  3242               	rrcf	i2___ftadd@f1+2,f,c
 26722  013D74  3241               	rrcf	i2___ftadd@f1+1,f,c
 26723  013D76  3240               	rrcf	i2___ftadd@f1,f,c
 26724  013D78  2A4B               	incf	i2___ftadd@exp1,f,c
 26725  013D7A                     i2l1521:
 26726  013D7A  504A               	movf	i2___ftadd@exp2,w,c
 26727  013D7C  184B               	xorwf	i2___ftadd@exp1,w,c
 26728  013D7E  B4D8               	btfsc	status,2,c
 26729  013D80  D01F               	goto	i2u1487_40
 26730  013D82  D7F6               	goto	i2l1522
 26731  013D84                     i2l1516:
 26732  013D84  504B               	movf	i2___ftadd@exp1,w,c
 26733  013D86  5C4A               	subwf	i2___ftadd@exp2,w,c
 26734  013D88  B0D8               	btfsc	status,0,c
 26735  013D8A  D01A               	goto	i2u1487_40
 26736  013D8C                     i2u1484_40:
 26737  013D8C  90D8               	bcf	status,0,c
 26738  013D8E  3640               	rlcf	i2___ftadd@f1,f,c
 26739  013D90  3641               	rlcf	i2___ftadd@f1+1,f,c
 26740  013D92  3642               	rlcf	i2___ftadd@f1+2,f,c
 26741  013D94  064B               	decf	i2___ftadd@exp1,f,c
 26742  013D96  504B               	movf	i2___ftadd@exp1,w,c
 26743  013D98  184A               	xorwf	i2___ftadd@exp2,w,c
 26744  013D9A  B4D8               	btfsc	status,2,c
 26745  013D9C  D00D               	goto	i2l1530
 26746  013D9E  0649               	decf	i2___ftadd@sign,f,c
 26747  013DA0  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 26748  013DA4  0E07               	movlw	7
 26749  013DA6  1646               	andwf	??i2___ftadd,f,c
 26750  013DA8  B4D8               	btfsc	status,2,c
 26751  013DAA  D006               	goto	i2l1530
 26752  013DAC  D7EF               	goto	i2u1484_40
 26753  013DAE  90D8               	bcf	status,0,c
 26754  013DB0  3245               	rrcf	i2___ftadd@f2+2,f,c
 26755  013DB2  3244               	rrcf	i2___ftadd@f2+1,f,c
 26756  013DB4  3243               	rrcf	i2___ftadd@f2,f,c
 26757  013DB6  2A4A               	incf	i2___ftadd@exp2,f,c
 26758  013DB8                     i2l1530:
 26759  013DB8  504A               	movf	i2___ftadd@exp2,w,c
 26760  013DBA  184B               	xorwf	i2___ftadd@exp1,w,c
 26761  013DBC  A4D8               	btfss	status,2,c
 26762  013DBE  D7F7               	goto	i2l1531
 26763  013DC0                     i2u1487_40:
 26764  013DC0  AE49               	btfss	i2___ftadd@sign,7,c
 26765  013DC2  D00C               	goto	i2l1533
 26766  013DC4  0EFF               	movlw	255
 26767  013DC6  1A40               	xorwf	i2___ftadd@f1,f,c
 26768  013DC8  0EFF               	movlw	255
 26769  013DCA  1A41               	xorwf	i2___ftadd@f1+1,f,c
 26770  013DCC  0EFF               	movlw	255
 26771  013DCE  1A42               	xorwf	i2___ftadd@f1+2,f,c
 26772  013DD0  0E01               	movlw	1
 26773  013DD2  2640               	addwf	i2___ftadd@f1,f,c
 26774  013DD4  0E00               	movlw	0
 26775  013DD6  2241               	addwfc	i2___ftadd@f1+1,f,c
 26776  013DD8  0E00               	movlw	0
 26777  013DDA  2242               	addwfc	i2___ftadd@f1+2,f,c
 26778  013DDC                     i2l1533:
 26779  013DDC  AC49               	btfss	i2___ftadd@sign,6,c
 26780  013DDE  D00C               	goto	i2l1534
 26781  013DE0  0EFF               	movlw	255
 26782  013DE2  1A43               	xorwf	i2___ftadd@f2,f,c
 26783  013DE4  0EFF               	movlw	255
 26784  013DE6  1A44               	xorwf	i2___ftadd@f2+1,f,c
 26785  013DE8  0EFF               	movlw	255
 26786  013DEA  1A45               	xorwf	i2___ftadd@f2+2,f,c
 26787  013DEC  0E01               	movlw	1
 26788  013DEE  2643               	addwf	i2___ftadd@f2,f,c
 26789  013DF0  0E00               	movlw	0
 26790  013DF2  2244               	addwfc	i2___ftadd@f2+1,f,c
 26791  013DF4  0E00               	movlw	0
 26792  013DF6  2245               	addwfc	i2___ftadd@f2+2,f,c
 26793  013DF8                     i2l1534:
 26794  013DF8  0E00               	movlw	0
 26795  013DFA  6E49               	movwf	i2___ftadd@sign,c
 26796  013DFC  5040               	movf	i2___ftadd@f1,w,c
 26797  013DFE  2643               	addwf	i2___ftadd@f2,f,c
 26798  013E00  5041               	movf	i2___ftadd@f1+1,w,c
 26799  013E02  2244               	addwfc	i2___ftadd@f2+1,f,c
 26800  013E04  5042               	movf	i2___ftadd@f1+2,w,c
 26801  013E06  2245               	addwfc	i2___ftadd@f2+2,f,c
 26802  013E08  AE45               	btfss	i2___ftadd@f2+2,7,c
 26803  013E0A  D00E               	goto	i2l1535
 26804  013E0C  0EFF               	movlw	255
 26805  013E0E  1A43               	xorwf	i2___ftadd@f2,f,c
 26806  013E10  0EFF               	movlw	255
 26807  013E12  1A44               	xorwf	i2___ftadd@f2+1,f,c
 26808  013E14  0EFF               	movlw	255
 26809  013E16  1A45               	xorwf	i2___ftadd@f2+2,f,c
 26810  013E18  0E01               	movlw	1
 26811  013E1A  2643               	addwf	i2___ftadd@f2,f,c
 26812  013E1C  0E00               	movlw	0
 26813  013E1E  2244               	addwfc	i2___ftadd@f2+1,f,c
 26814  013E20  0E00               	movlw	0
 26815  013E22  2245               	addwfc	i2___ftadd@f2+2,f,c
 26816  013E24  0E01               	movlw	1
 26817  013E26  6E49               	movwf	i2___ftadd@sign,c
 26818  013E28                     i2l1535:
 26819  013E28  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 26820  013E2C  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 26821  013E30  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 26822  013E34  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 26823  013E38  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 26824  013E3C  ECB2  F0A7         	call	i2___ftpack	;wreg free
 26825  013E40  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 26826  013E44  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 26827  013E48  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 26828  013E4C  0012               	return	
 26829  013E4E                     __end_ofi2___ftadd:
 26830                           	opt stack 0
 26831                           tosu	equ	0xFFF
 26832                           tosh	equ	0xFFE
 26833                           tosl	equ	0xFFD
 26834                           pclatu	equ	0xFFB
 26835                           pclath	equ	0xFFA
 26836                           tblptru	equ	0xFF8
 26837                           tblptrh	equ	0xFF7
 26838                           tblptrl	equ	0xFF6
 26839                           tablat	equ	0xFF5
 26840                           prodh	equ	0xFF4
 26841                           prodl	equ	0xFF3
 26842                           intcon	equ	0xFF2
 26843                           postinc0	equ	0xFEE
 26844                           fsr0h	equ	0xFEA
 26845                           fsr0l	equ	0xFE9
 26846                           wreg	equ	0xFE8
 26847                           indf1	equ	0xFE7
 26848                           postdec1	equ	0xFE5
 26849                           fsr1h	equ	0xFE2
 26850                           fsr1l	equ	0xFE1
 26851                           bsr	equ	0xFE0
 26852                           indf2	equ	0xFDF
 26853                           postinc2	equ	0xFDE
 26854                           postdec2	equ	0xFDD
 26855                           fsr2h	equ	0xFDA
 26856                           fsr2l	equ	0xFD9
 26857                           status	equ	0xFD8
 26858                           
 26859 ;; *************** function ___lwtoft *****************
 26860 ;; Defined at:
 26861 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 26862 ;; Parameters:    Size  Location     Type
 26863 ;;  c               2    8[COMRAM] unsigned int 
 26864 ;; Auto vars:     Size  Location     Type
 26865 ;;		None
 26866 ;; Return value:  Size  Location     Type
 26867 ;;                  3    8[COMRAM] float 
 26868 ;; Registers used:
 26869 ;;		wreg, status,2, status,0, cstack
 26870 ;; Tracked objects:
 26871 ;;		On entry : 0/0
 26872 ;;		On exit  : 0/0
 26873 ;;		Unchanged: 0/0
 26874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26875 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26878 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26879 ;;Total ram usage:        3 bytes
 26880 ;; Hardware stack levels used:    1
 26881 ;; Hardware stack levels required when called:    1
 26882 ;; This function calls:
 26883 ;;		i2___ftpack
 26884 ;; This function is called by:
 26885 ;;		_ADC_postProcessingCallback
 26886 ;; This function uses a non-reentrant model
 26887 ;;
 26888                           
 26889                           	psect	text109
 26890  0161DC                     __ptext109:
 26891                           	opt stack 0
 26892  0161DC                     ___lwtoft:
 26893                           	opt stack 14
 26894                           
 26895                           ;incstack = 0
 26896  0161DC  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 26897  0161E0  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 26898  0161E4  6A03               	clrf	i2___ftpack@arg+2,c
 26899  0161E6  0E8E               	movlw	142
 26900  0161E8  6E04               	movwf	i2___ftpack@exp,c
 26901  0161EA  0E00               	movlw	0
 26902  0161EC  6E05               	movwf	i2___ftpack@sign,c
 26903  0161EE  ECB2  F0A7         	call	i2___ftpack	;wreg free
 26904  0161F2  C001  F009         	movff	?i2___ftpack,?___lwtoft
 26905  0161F6  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 26906  0161FA  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 26907  0161FE  0012               	return	
 26908  016200                     __end_of___lwtoft:
 26909                           	opt stack 0
 26910                           tosu	equ	0xFFF
 26911                           tosh	equ	0xFFE
 26912                           tosl	equ	0xFFD
 26913                           pclatu	equ	0xFFB
 26914                           pclath	equ	0xFFA
 26915                           tblptru	equ	0xFF8
 26916                           tblptrh	equ	0xFF7
 26917                           tblptrl	equ	0xFF6
 26918                           tablat	equ	0xFF5
 26919                           prodh	equ	0xFF4
 26920                           prodl	equ	0xFF3
 26921                           intcon	equ	0xFF2
 26922                           postinc0	equ	0xFEE
 26923                           fsr0h	equ	0xFEA
 26924                           fsr0l	equ	0xFE9
 26925                           wreg	equ	0xFE8
 26926                           indf1	equ	0xFE7
 26927                           postdec1	equ	0xFE5
 26928                           fsr1h	equ	0xFE2
 26929                           fsr1l	equ	0xFE1
 26930                           bsr	equ	0xFE0
 26931                           indf2	equ	0xFDF
 26932                           postinc2	equ	0xFDE
 26933                           postdec2	equ	0xFDD
 26934                           fsr2h	equ	0xFDA
 26935                           fsr2l	equ	0xFD9
 26936                           status	equ	0xFD8
 26937                           
 26938 ;; *************** function i2___ftpack *****************
 26939 ;; Defined at:
 26940 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 26941 ;; Parameters:    Size  Location     Type
 26942 ;;  arg             3    0[COMRAM] unsigned um
 26943 ;;  exp             1    3[COMRAM] unsigned char 
 26944 ;;  sign            1    4[COMRAM] unsigned char 
 26945 ;; Auto vars:     Size  Location     Type
 26946 ;;		None
 26947 ;; Return value:  Size  Location     Type
 26948 ;;                  3    0[COMRAM] float 
 26949 ;; Registers used:
 26950 ;;		wreg, status,2, status,0
 26951 ;; Tracked objects:
 26952 ;;		On entry : 0/0
 26953 ;;		On exit  : 0/0
 26954 ;;		Unchanged: 0/0
 26955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26956 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26958 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26959 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26960 ;;Total ram usage:        8 bytes
 26961 ;; Hardware stack levels used:    1
 26962 ;; This function calls:
 26963 ;;		Nothing
 26964 ;; This function is called by:
 26965 ;;		___altoft
 26966 ;;		___lwtoft
 26967 ;;		i2___ftadd
 26968 ;;		i2___ftdiv
 26969 ;;		i2___ftmul
 26970 ;;		i2___lltoft
 26971 ;; This function uses a non-reentrant model
 26972 ;;
 26973                           
 26974                           	psect	text110
 26975  014F64                     __ptext110:
 26976                           	opt stack 0
 26977  014F64                     i2___ftpack:
 26978                           	opt stack 13
 26979                           
 26980                           ;incstack = 0
 26981  014F64  5004               	movf	i2___ftpack@exp,w,c
 26982  014F66  B4D8               	btfsc	status,2,c
 26983  014F68  D005               	goto	i2u1463_40
 26984  014F6A  5001               	movf	i2___ftpack@arg,w,c
 26985  014F6C  1002               	iorwf	i2___ftpack@arg+1,w,c
 26986  014F6E  1003               	iorwf	i2___ftpack@arg+2,w,c
 26987  014F70  A4D8               	btfss	status,2,c
 26988  014F72  D00C               	goto	i2l1476
 26989  014F74                     i2u1463_40:
 26990  014F74  0E00               	movlw	0
 26991  014F76  6E01               	movwf	?i2___ftpack,c
 26992  014F78  0E00               	movlw	0
 26993  014F7A  6E02               	movwf	?i2___ftpack+1,c
 26994  014F7C  0E00               	movlw	0
 26995  014F7E  6E03               	movwf	?i2___ftpack+2,c
 26996  014F80  0012               	return	
 26997  014F82  2A04               	incf	i2___ftpack@exp,f,c
 26998  014F84  90D8               	bcf	status,0,c
 26999  014F86  3203               	rrcf	i2___ftpack@arg+2,f,c
 27000  014F88  3202               	rrcf	i2___ftpack@arg+1,f,c
 27001  014F8A  3201               	rrcf	i2___ftpack@arg,f,c
 27002  014F8C                     i2l1476:
 27003  014F8C  0E00               	movlw	0
 27004  014F8E  1401               	andwf	i2___ftpack@arg,w,c
 27005  014F90  6E06               	movwf	??i2___ftpack& (0+255),c
 27006  014F92  0E00               	movlw	0
 27007  014F94  1402               	andwf	i2___ftpack@arg+1,w,c
 27008  014F96  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 27009  014F98  0EFE               	movlw	254
 27010  014F9A  1403               	andwf	i2___ftpack@arg+2,w,c
 27011  014F9C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 27012  014F9E  5006               	movf	??i2___ftpack,w,c
 27013  014FA0  1007               	iorwf	??i2___ftpack+1,w,c
 27014  014FA2  1008               	iorwf	??i2___ftpack+2,w,c
 27015  014FA4  B4D8               	btfsc	status,2,c
 27016  014FA6  D00C               	goto	i2l1479
 27017  014FA8  D7EC               	goto	i2l1477
 27018  014FAA  2A04               	incf	i2___ftpack@exp,f,c
 27019  014FAC  0E01               	movlw	1
 27020  014FAE  2601               	addwf	i2___ftpack@arg,f,c
 27021  014FB0  0E00               	movlw	0
 27022  014FB2  2202               	addwfc	i2___ftpack@arg+1,f,c
 27023  014FB4  0E00               	movlw	0
 27024  014FB6  2203               	addwfc	i2___ftpack@arg+2,f,c
 27025  014FB8  90D8               	bcf	status,0,c
 27026  014FBA  3203               	rrcf	i2___ftpack@arg+2,f,c
 27027  014FBC  3202               	rrcf	i2___ftpack@arg+1,f,c
 27028  014FBE  3201               	rrcf	i2___ftpack@arg,f,c
 27029  014FC0                     i2l1479:
 27030  014FC0  0E00               	movlw	0
 27031  014FC2  1401               	andwf	i2___ftpack@arg,w,c
 27032  014FC4  6E06               	movwf	??i2___ftpack& (0+255),c
 27033  014FC6  0E00               	movlw	0
 27034  014FC8  1402               	andwf	i2___ftpack@arg+1,w,c
 27035  014FCA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 27036  014FCC  0EFF               	movlw	255
 27037  014FCE  1403               	andwf	i2___ftpack@arg+2,w,c
 27038  014FD0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 27039  014FD2  5006               	movf	??i2___ftpack,w,c
 27040  014FD4  1007               	iorwf	??i2___ftpack+1,w,c
 27041  014FD6  1008               	iorwf	??i2___ftpack+2,w,c
 27042  014FD8  B4D8               	btfsc	status,2,c
 27043  014FDA  D006               	goto	i2l1482
 27044  014FDC  D7E6               	goto	i2l1480
 27045  014FDE  0604               	decf	i2___ftpack@exp,f,c
 27046  014FE0  90D8               	bcf	status,0,c
 27047  014FE2  3601               	rlcf	i2___ftpack@arg,f,c
 27048  014FE4  3602               	rlcf	i2___ftpack@arg+1,f,c
 27049  014FE6  3603               	rlcf	i2___ftpack@arg+2,f,c
 27050  014FE8                     i2l1482:
 27051  014FE8  BE02               	btfsc	i2___ftpack@arg+1,7,c
 27052  014FEA  D003               	goto	i2u1467_40
 27053  014FEC  0E02               	movlw	2
 27054  014FEE  6004               	cpfslt	i2___ftpack@exp,c
 27055  014FF0  D7F6               	goto	i2l1483
 27056  014FF2                     i2u1467_40:
 27057  014FF2  A004               	btfss	i2___ftpack@exp,0,c
 27058  014FF4  9E02               	bcf	i2___ftpack@arg+1,7,c
 27059  014FF6  90D8               	bcf	status,0,c
 27060  014FF8  3204               	rrcf	i2___ftpack@exp,f,c
 27061  014FFA  5004               	movf	i2___ftpack@exp,w,c
 27062  014FFC  1203               	iorwf	i2___ftpack@arg+2,f,c
 27063  014FFE  5005               	movf	i2___ftpack@sign,w,c
 27064  015000  A4D8               	btfss	status,2,c
 27065  015002  8E03               	bsf	i2___ftpack@arg+2,7,c
 27066  015004  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 27067  015008  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 27068  01500C  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 27069  015010  0012               	return	
 27070  015012                     __end_ofi2___ftpack:
 27071                           	opt stack 0
 27072                           tosu	equ	0xFFF
 27073                           tosh	equ	0xFFE
 27074                           tosl	equ	0xFFD
 27075                           pclatu	equ	0xFFB
 27076                           pclath	equ	0xFFA
 27077                           tblptru	equ	0xFF8
 27078                           tblptrh	equ	0xFF7
 27079                           tblptrl	equ	0xFF6
 27080                           tablat	equ	0xFF5
 27081                           prodh	equ	0xFF4
 27082                           prodl	equ	0xFF3
 27083                           intcon	equ	0xFF2
 27084                           postinc0	equ	0xFEE
 27085                           fsr0h	equ	0xFEA
 27086                           fsr0l	equ	0xFE9
 27087                           wreg	equ	0xFE8
 27088                           indf1	equ	0xFE7
 27089                           postdec1	equ	0xFE5
 27090                           fsr1h	equ	0xFE2
 27091                           fsr1l	equ	0xFE1
 27092                           bsr	equ	0xFE0
 27093                           indf2	equ	0xFDF
 27094                           postinc2	equ	0xFDE
 27095                           postdec2	equ	0xFDD
 27096                           fsr2h	equ	0xFDA
 27097                           fsr2l	equ	0xFD9
 27098                           status	equ	0xFD8
 27099                           
 27100 ;; *************** function _ADCC_GetConversionResult *****************
 27101 ;; Defined at:
 27102 ;;		line 130 in file "mcc_generated_files/adcc.c"
 27103 ;; Parameters:    Size  Location     Type
 27104 ;;		None
 27105 ;; Auto vars:     Size  Location     Type
 27106 ;;		None
 27107 ;; Return value:  Size  Location     Type
 27108 ;;                  2    0[COMRAM] unsigned int 
 27109 ;; Registers used:
 27110 ;;		wreg, status,2, status,0
 27111 ;; Tracked objects:
 27112 ;;		On entry : 0/0
 27113 ;;		On exit  : 0/0
 27114 ;;		Unchanged: 0/0
 27115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27116 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27118 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27119 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27120 ;;Total ram usage:        4 bytes
 27121 ;; Hardware stack levels used:    1
 27122 ;; This function calls:
 27123 ;;		Nothing
 27124 ;; This function is called by:
 27125 ;;		_ADC_postProcessingCallback
 27126 ;; This function uses a non-reentrant model
 27127 ;;
 27128                           
 27129                           	psect	text111
 27130  016294                     __ptext111:
 27131                           	opt stack 0
 27132  016294                     _ADCC_GetConversionResult:
 27133                           	opt stack 15
 27134                           
 27135                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 27136                           
 27137                           ;incstack = 0
 27138  016294  5064               	movf	3940,w,c	;volatile
 27139  016296  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 27140  016298  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 27141  01629A  5063               	movf	3939,w,c	;volatile
 27142  01629C  2403               	addwf	??_ADCC_GetConversionResult,w,c
 27143  01629E  6E01               	movwf	?_ADCC_GetConversionResult,c
 27144  0162A0  0E00               	movlw	0
 27145  0162A2  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 27146  0162A4  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 27147  0162A6  0012               	return	
 27148  0162A8                     __end_of_ADCC_GetConversionResult:
 27149                           	opt stack 0
 27150                           tosu	equ	0xFFF
 27151                           tosh	equ	0xFFE
 27152                           tosl	equ	0xFFD
 27153                           pclatu	equ	0xFFB
 27154                           pclath	equ	0xFFA
 27155                           tblptru	equ	0xFF8
 27156                           tblptrh	equ	0xFF7
 27157                           tblptrl	equ	0xFF6
 27158                           tablat	equ	0xFF5
 27159                           prodh	equ	0xFF4
 27160                           prodl	equ	0xFF3
 27161                           intcon	equ	0xFF2
 27162                           postinc0	equ	0xFEE
 27163                           fsr0h	equ	0xFEA
 27164                           fsr0l	equ	0xFE9
 27165                           wreg	equ	0xFE8
 27166                           indf1	equ	0xFE7
 27167                           postdec1	equ	0xFE5
 27168                           fsr1h	equ	0xFE2
 27169                           fsr1l	equ	0xFE1
 27170                           bsr	equ	0xFE0
 27171                           indf2	equ	0xFDF
 27172                           postinc2	equ	0xFDE
 27173                           postdec2	equ	0xFDD
 27174                           fsr2h	equ	0xFDA
 27175                           fsr2l	equ	0xFD9
 27176                           status	equ	0xFD8
 27177                           tosu	equ	0xFFF
 27178                           tosh	equ	0xFFE
 27179                           tosl	equ	0xFFD
 27180                           pclatu	equ	0xFFB
 27181                           pclath	equ	0xFFA
 27182                           tblptru	equ	0xFF8
 27183                           tblptrh	equ	0xFF7
 27184                           tblptrl	equ	0xFF6
 27185                           tablat	equ	0xFF5
 27186                           prodh	equ	0xFF4
 27187                           prodl	equ	0xFF3
 27188                           intcon	equ	0xFF2
 27189                           postinc0	equ	0xFEE
 27190                           fsr0h	equ	0xFEA
 27191                           fsr0l	equ	0xFE9
 27192                           wreg	equ	0xFE8
 27193                           indf1	equ	0xFE7
 27194                           postdec1	equ	0xFE5
 27195                           fsr1h	equ	0xFE2
 27196                           fsr1l	equ	0xFE1
 27197                           bsr	equ	0xFE0
 27198                           indf2	equ	0xFDF
 27199                           postinc2	equ	0xFDE
 27200                           postdec2	equ	0xFDD
 27201                           fsr2h	equ	0xFDA
 27202                           fsr2l	equ	0xFD9
 27203                           status	equ	0xFD8
 27204                           
 27205                           	psect	text112
 27206  000000                     __ptext112:
 27207                           	opt stack 0
 27208                           tosu	equ	0xFFF
 27209                           tosh	equ	0xFFE
 27210                           tosl	equ	0xFFD
 27211                           pclatu	equ	0xFFB
 27212                           pclath	equ	0xFFA
 27213                           tblptru	equ	0xFF8
 27214                           tblptrh	equ	0xFF7
 27215                           tblptrl	equ	0xFF6
 27216                           tablat	equ	0xFF5
 27217                           prodh	equ	0xFF4
 27218                           prodl	equ	0xFF3
 27219                           intcon	equ	0xFF2
 27220                           postinc0	equ	0xFEE
 27221                           fsr0h	equ	0xFEA
 27222                           fsr0l	equ	0xFE9
 27223                           wreg	equ	0xFE8
 27224                           indf1	equ	0xFE7
 27225                           postdec1	equ	0xFE5
 27226                           fsr1h	equ	0xFE2
 27227                           fsr1l	equ	0xFE1
 27228                           bsr	equ	0xFE0
 27229                           indf2	equ	0xFDF
 27230                           postinc2	equ	0xFDE
 27231                           postdec2	equ	0xFDD
 27232                           fsr2h	equ	0xFDA
 27233                           fsr2l	equ	0xFD9
 27234                           status	equ	0xFD8
 27235                           
 27236                           	psect	rparam
 27237  0000                     tosu	equ	0xFFF
 27238                           tosh	equ	0xFFE
 27239                           tosl	equ	0xFFD
 27240                           pclatu	equ	0xFFB
 27241                           pclath	equ	0xFFA
 27242                           tblptru	equ	0xFF8
 27243                           tblptrh	equ	0xFF7
 27244                           tblptrl	equ	0xFF6
 27245                           tablat	equ	0xFF5
 27246                           prodh	equ	0xFF4
 27247                           prodl	equ	0xFF3
 27248                           intcon	equ	0xFF2
 27249                           postinc0	equ	0xFEE
 27250                           fsr0h	equ	0xFEA
 27251                           fsr0l	equ	0xFE9
 27252                           wreg	equ	0xFE8
 27253                           indf1	equ	0xFE7
 27254                           postdec1	equ	0xFE5
 27255                           fsr1h	equ	0xFE2
 27256                           fsr1l	equ	0xFE1
 27257                           bsr	equ	0xFE0
 27258                           indf2	equ	0xFDF
 27259                           postinc2	equ	0xFDE
 27260                           postdec2	equ	0xFDD
 27261                           fsr2h	equ	0xFDA
 27262                           fsr2l	equ	0xFD9
 27263                           status	equ	0xFD8
 27264                           
 27265                           	psect	temp
 27266  00005F                     btemp:
 27267                           	opt stack 0
 27268  00005F                     	ds	1
 27269  0000                     int$flags	set	btemp
 27270  0000                     wtemp6	set	btemp+1
 27271                           tosu	equ	0xFFF
 27272                           tosh	equ	0xFFE
 27273                           tosl	equ	0xFFD
 27274                           pclatu	equ	0xFFB
 27275                           pclath	equ	0xFFA
 27276                           tblptru	equ	0xFF8
 27277                           tblptrh	equ	0xFF7
 27278                           tblptrl	equ	0xFF6
 27279                           tablat	equ	0xFF5
 27280                           prodh	equ	0xFF4
 27281                           prodl	equ	0xFF3
 27282                           intcon	equ	0xFF2
 27283                           postinc0	equ	0xFEE
 27284                           fsr0h	equ	0xFEA
 27285                           fsr0l	equ	0xFE9
 27286                           wreg	equ	0xFE8
 27287                           indf1	equ	0xFE7
 27288                           postdec1	equ	0xFE5
 27289                           fsr1h	equ	0xFE2
 27290                           fsr1l	equ	0xFE1
 27291                           bsr	equ	0xFE0
 27292                           indf2	equ	0xFDF
 27293                           postinc2	equ	0xFDE
 27294                           postdec2	equ	0xFDD
 27295                           fsr2h	equ	0xFDA
 27296                           fsr2l	equ	0xFD9
 27297                           status	equ	0xFD8


Data Sizes:
    Strings     3075
    Constant    210
    Data        6
    BSS         331
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    101     146
    BANK1           256    185     222
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_75(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_75(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_75(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_75(CODE[25]), line(BANK2[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_84(CODE[5]), STR_82(CODE[9]), STR_73(CODE[13]), STR_71(CODE[12]), 
		 -> STR_69(CODE[16]), STR_67(CODE[15]), STR_65(CODE[21]), STR_63(CODE[21]), 
		 -> STR_61(CODE[26]), STR_59(CODE[14]), STR_57(CODE[13]), STR_55(CODE[18]), 
		 -> STR_53(CODE[15]), STR_51(CODE[16]), STR_48(CODE[4]), STR_47(CODE[6]), 
		 -> STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK1[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1220
		 -> STR_90(CODE[30]), STR_89(CODE[23]), STR_88(CODE[40]), STR_87(CODE[30]), 
		 -> STR_86(CODE[33]), STR_85(CODE[1220]), STR_83(CODE[58]), STR_81(CODE[71]), 
		 -> STR_80(CODE[63]), STR_79(CODE[37]), STR_78(CODE[46]), STR_77(CODE[102]), 
		 -> STR_76(CODE[86]), STR_74(CODE[25]), STR_72(CODE[42]), STR_70(CODE[41]), 
		 -> STR_68(CODE[40]), STR_66(CODE[34]), STR_64(CODE[34]), STR_62(CODE[32]), 
		 -> STR_60(CODE[37]), STR_58(CODE[56]), STR_56(CODE[34]), STR_54(CODE[34]), 
		 -> STR_52(CODE[35]), STR_50(CODE[47]), STR_49(CODE[17]), STR_46(CODE[4]), 
		 -> STR_45(CODE[5]), STR_43(CODE[4]), STR_42(CODE[5]), STR_40(CODE[3]), 
		 -> terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), STR_9(CODE[4]), STR_8(CODE[4]), 
		 -> STR_7(CODE[4]), STR_6(CODE[5]), STR_5(CODE[3]), STR_4(CODE[372]), 
		 -> STR_3(CODE[4]), STR_2(CODE[5]), STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  649969
                                            183 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   82290
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  390781
                                            174 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       14    12      2  390053
                                            160 BANK1     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                             _printf
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   92979
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   92979
                                            142 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   82290
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    3373
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4401
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   82290
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              45    37      8   82290
                                            100 BANK1     42    34      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18146
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   17867
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3878
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9341
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7164
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6418
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1508
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  335987
                                             83 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   64946
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   64946
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13505
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   13010
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  270801
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         13    13      0  270801
                                             70 BANK0     13    13      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  185477
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   88981
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   81526
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   17023
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   41357
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   63557
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   58865
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6670
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   12183
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    1550
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   18138
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7510
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    6023
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2521
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B9      DE       7       86.7%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     65      92       5       91.3%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2CE       8        0.0%
DATA                 0      0     2CE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 01 21:35:01 2018

                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 6334  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 6272                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 638A                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 4F64  
               __end_of_heartbeatTimerCallback 60A4                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 5B70  
                                 ___ftadd@sign 0134                                            l370 5E6E  
                                          l374 5DB6                                            l375 5DB4  
                                          l367 5E46                                            l368 5E44  
                                          l377 5DCA                                            l378 5DF0  
                                          l379 5DEE                                            l922 2AFE  
                                          l930 2AE6                                            l931 2C18  
                                          l923 2A56                                            l940 2BE8  
                                          l932 2B40                                            l924 2B28  
                                          l933 2C4E                                            l941 2C00  
                                          l925 2A6E                                            l942 2D3E  
                                          l950 2CF6                                            l934 2B58  
                                          l926 2A86                                            l854 5706  
                                          l951 2D0E                                            l943 2C66  
                                          l935 2B70                                            l927 2A9E  
                                          l944 2D74                                            l952 2D26  
                                          l936 2B88                                            l928 2AB6  
                                          l945 2C7E                                            l937 2BA0  
                                          l929 2ACE                                            l946 2C96  
                                          l938 2BB8                                            l947 2CAE  
                                          l939 2BD0                                            l948 2CC6  
                                          l949 2CDE                                            l893 44B8  
                                          l895 44F4                                            l896 44D8  
                                          l898 453C                                            l899 450E  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00C8                                            _Vpk 00CB  
                                          _sin 350E                     currentMeasuredToPeak@Angle 0076  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000            __size_of_ADC_postProcessingCallback 04B2  
                                 __CFG_ZCD$OFF 000000                                   ___ftdiv@cntr 0140  
                                 ___ftdiv@sign 0145                                           l1010 14D0  
                                         l1020 1650                                           l1012 1548  
                                         l1101 00F2                                           l1102 01BA  
                                         l1110 0118                                           l1030 1808  
                                         l1022 16A8                                           l1112 0140  
                                         l1040 1B8E                                           l1032 1856  
                                         l1024 1700                                           l1016 15A0  
                                         l1008 1494                                           l1121 0332  
                                         l1113 0152                                           l1105 00F6  
                                         l1041 1980                                           l1114 0744  
                                         l1122 0370                                           l1034 18A4  
                                         l1026 1758                                           l1018 15F8  
                                         l1123 0434                                           l1115 01CE  
                                         l1107 00FA                                           l1043 1A3A  
                                         l1140 05A6                                           l1132 049A  
                                         l1116 0210                                           l1036 18F6  
                                         l1028 17B0                                           l1141 0598  
                                         l1109 012C                                           l1150 072C  
                                         l1126 03DE                                           l1118 02A4  
                                         l1038 1948                                           l1143 05CA  
                                         l1119 030C                                           l1400 53B2  
                                         l1080 23A8                                           l1152 0794  
                                         l1144 05CE                                           l1048 1BEA  
                                         l1401 53C2                                           l1081 22B8  
                                         l1145 05E6                                           l1137 058C  
                                         l1074 2F04                                           l1162 086C  
                                         l1154 07B8                                           l1146 0720  
                                         l1138 04F8                                           l1403 53E0  
                                         l1171 09DE                                           l1163 0814  
                                         l1147 0638                                           l1091 000E  
                                         l1404 53D8                                           l1420 5762  
                                         l1084 237C                                           l1156 0856  
                                         l1092 0020                                           l1421 576C  
                                         l1413 5728                                           l1077 2FE6  
                                         l1085 24F2                                           l1173 09C0  
                                         l1157 07D2                                           l1149 073A  
                                         l1093 00E4                                           l1422 577A  
                                         l1414 5734                                           l1174 08C4  
                                         l1094 00B8                                           l1511 3B72  
                                         l1407 5400                                           l1087 25B6  
                                         l1167 0888                                           l1095 0064  
                                         l1408 540A                                           l1416 574A  
                                         l1176 09D8                                           l1521 3BCE  
                                         l1601 467E                                           l1409 5418  
                                         l1417 5742                                           l1177 0948  
                                         l1169 08A8                                           l1530 3C0C  
                                         l1522 3BC4                                           l1602 4672  
                                         l1450 4334                                           l1098 0158  
                                         l1531 3C02                                           l1507 3B48  
                                         l1451 4324                                           l1516 3BD8  
                                         l1604 469A                                           l1444 4266  
                                         l1428 5F1A                                           l1540 49B4  
                                         l1533 3C30                                           l1381 4D18  
                                         l1534 3C4C                                           l1446 4284  
                                         l1550 403A                                           l1542 49DC  
                                         l1390 4DDE                                           l1382 4D12  
                                         l1535 3C7C                                           l1447 42C6  
                                         l1551 4074                                           l1543 4A1A  
                                         l1480 4EFC                                           l1456 4358  
                                         l1448 42F6                                           l1560 40FC  
                                         l1552 409C                                           l1608 621A  
                                         l1544 4A40                                           l1384 4D5A  
                                         l1457 434C                                           l1561 40F0  
                                         l1482 4F3A                                           l1634 5452  
                                         l1554 40D8                                           l1483 4F30  
                                         l1635 5446                                           l1555 40C8  
                                         l1387 4DAA                                           l1476 4EDE  
                                         l1644 587C                                           l1548 400E  
                                         l1572 46D6                                           l1388 4D6C  
                                         l1900 534E                                           l1565 5190  
                                         l1477 4ED4                                           l1645 5870  
                                         l1566 51C0                                           l1638 5486  
                                         l1574 46FE                                           l1583 615E  
                                         l1479 4F12                                           l1639 5494  
                                         l1655 5ACA                                           l1575 4730  
                                         l1648 58A4                                           l1656 5ABE  
                                         l1576 4740                                           l1593 45E2  
                                         l1649 58B2                                           l1578 4758  
                                         l1595 465A                                           l1579 4768  
                                         l1596 464A                                           l1860 5D22  
                                         l1589 5E98                                           l1862 5D42  
                         _ADCC_StartConversion 635E                                           l1863 5D38  
                                         l1952 5F5A                                           l1859 5D28  
                                         l1883 57FE                                           l1868 5C86  
                                         l1876 5BDC                                           l1884 582E  
                                         l1869 5C7C                                           l1877 5BD6  
                                         l1957 5264                                           l1958 51F2  
                                         l1886 584A                                           l1959 525C  
                                         l1887 583A                                           l1898 537A  
                                         l1899 5312                                           l9005 0818  
                                         l9041 09C0                                           l9059 583A  
                                         l7831 51EC                                           l9263 51F2  
                                         ?_sin 0066                                           l8815 0118  
                                         l8931 0598                                           l8907 049E  
                                         l9491 4DA6                          __size_ofi2__div_to_l_ 0128  
                                         l8991 07D6                                           l8887 03B8  
                                         l8879 0370                                           STR_1 FFC1  
                                         STR_2 FFAC                                           STR_3 FFB5  
                                         STR_4 F8BF                                           STR_6 FFAC  
                                         STR_7 FFB5                                           STR_9 FFB9  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 0180                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         u9120 3B64                                           u9051 3B06  
                                         u9220 3C14                                           u9061 3B1A  
                                         u9150 3BA2                                           u9090 3B3A  
                                         u9261 46BE                                           u8710 4F44  
                                         u9190 3BE0                                           u9430 574E  
                                         u9281 46E6                                           u9370 53E4  
                                         u8670 4EC6                                           u9810 435E  
                                         _PLLR 007230                                           u9740 4102  
                                         u9661 3FF2                                           u9681 401E  
                                         u9951 45C6                                           u9970 4600  
                                         _TMR6 000FAF                                           u9975 45F8  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                               __end_of_ADCC_ISR 6146  
                                         _Irms 01C0                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 5DAE                                           _Vrms 01BD  
                                         _acos 5C24                                           _fabs 6046  
                                         _atan 3932                                           _asin 32A4  
                                         _atoi 4D10                                           _main 569C  
                                         _line 02C0                                   ___ftpack@arg 0117  
                                 ___ftpack@exp 011A                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                                           _sqrt 3E4E  
                                 i2___ftadd@f1 0040                                   i2___ftadd@f2 0043  
                                         sin@f 0066                                   i2___ftge@ff1 002A  
                                         sin@y 0069                                   i2___ftge@ff2 002D  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 01D5  
                                 i2___ftdiv@f1 0015                                   i2___ftdiv@f2 0018  
                                 i2___ftdiv@f3 0020                                __end_ofi2_scale 2A32  
                 __end_of_EUSART2_Transmit_ISR 5FAC                                   i2___ftneg@f1 0024  
                              __end_ofi2_putch 6382                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 0153                                   i2___ftmul@f1 0027  
                                 i2___ftmul@f2 002A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                                   ___ftmul@sign 0154  
                                 i2___ftsub@f1 0060                                   i2___ftsub@f2 0063  
                                 i2___fttol@f1 003D                       __size_ofi2_EUSART2_Write 0046  
                                 ___fttol@exp1 0163                                _timer7ReloadVal 01D7  
                                 i2___lltoft@c 0009                                   ___fttol@lval 015F  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 6278  
                     ?_terminal_textAttributes 018E                              ??_TMR7_WriteTimer 0102  
                                        l10065 19E2                                          l10049 1970  
                                        l10067 1A3A                                          l10059 19AE  
                                        l10453 44A8                                          l10463 44CE  
                                        ?_acos 008E                                          ?_fabs 0027  
                                        ?_atan 0058                                          ?_asin 0079  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 012B  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                __end_of___awdiv 5422  
                                        _ADPRE 000F5E                                __end_of___ftadd 3CA2  
                                        STR_10 FFBD                                          STR_11 FFF5  
                                        STR_12 FFC6                                          STR_20 FFC5  
                                        STR_13 FFCC                                          STR_21 FFCB  
                                        STR_14 FFDE                                          STR_22 FFD1  
                                        STR_30 FFC8                                          STR_15 FFE4  
                                        STR_23 FFD7                                          STR_31 FFCE  
                                        STR_40 FB33                                          STR_16 FFF0  
                                        STR_24 FFDD                                          STR_32 FFD4  
                                        STR_17 FFF8                                          STR_25 FFE3  
                                        STR_33 FFDA                                          STR_41 FFA1  
                                        STR_18 FFC6                                          STR_42 FFAC  
                                        STR_26 FFE9                                          STR_34 FFE0  
                                        STR_50 FBE7                                          STR_43 FFB5  
                                        STR_19 FFFA                                          STR_27 FFEF  
                                        STR_35 FFE6                                          STR_51 FF1A  
                                        STR_28 FFEF                                          STR_36 FFEC  
                                        STR_44 FF9B                                          STR_52 FD31  
                                        STR_60 FCE7                                __end_of___awmod 5784  
                                        STR_29 FFFA                                          STR_45 FFAC  
                                        STR_37 FFF2                                          STR_53 FF3A  
                                        STR_61 FE59                                          STR_38 FFF2  
                                        STR_46 FFB5                                          STR_62 FDFD  
                                        STR_54 FDBA                                          STR_70 FC6E  
                                        STR_39 FFFC                                          STR_47 FF95  
                                        STR_71 FF80                                          STR_55 FEE6  
                                        STR_63 FED1                                          STR_48 FFB1  
                                        STR_64 FD76                                          STR_56 FD54  
                                        STR_72 FC44                                          STR_80 FB36  
                                        _ADRPT 000F66                                          STR_73 FF73  
                                        STR_57 FF66                                          STR_49 FF09  
                                        STR_65 FEBC                                          STR_81 FAEF  
                                        STR_82 FF8C                                          STR_74 FE73  
                                        STR_90 FE1D                                          STR_66 FD98  
                                        STR_58 FBAF                                          STR_59 FF58  
                                        STR_67 FF49                                          STR_91 FEF8  
                                        STR_75 FE8C                                          STR_83 FB75  
                                        STR_84 FFA7                                          STR_68 FC97  
                                        STR_76 FA99                                          STR_69 FF2A  
                                        STR_77 FA33                                          STR_85 F3FB  
                                        STR_86 FDDC                                          STR_78 FC16  
                                        STR_87 FE3B                                          STR_79 FD0C  
                                        STR_88 FCBF                                          STR_89 FEA5  
                              __end_of___ftdiv 4A72                                __end_of___ftneg 616C  
                                        u10010 4684                                __end_of___lldiv 54A6  
                                        ?_sqrt 0066                                          u10040 5456  
                                        u10210 009C                                          u10220 00DA  
                                        u10070 5880                                          u10400 03B8  
                                        u10320 0248                                          u11120 5392  
                                        u10217 0092                                          u10227 00D0  
                                        u11211 49C4                                __end_of___ftmul 47A2  
                                        u10325 023E                                          u10270 0188  
                                        u10190 004C                                          u10440 04DC  
                                        u10360 0342                                          u10370 0382  
                                        u11090 5CBE                                ___awdiv@divisor 011F  
                                        u10277 017E                                          u10197 0042  
                                        u10470 05B4                                          u11191 499C  
                                        u10480 05C4                                __end_of___llmod 58C4  
                                        u10650 09F0                                __end_of___ftsub 5EC2  
                                        u10660 0A20                                __end_of___fttol 46AC  
                                        u12510 44CE                                          u11810 19AE  
                                        u10667 0A16                                          u10860 5BFE  
                                        u11820 19D4                                          u11660 150E  
                                        u11830 19E2                                          u10890 5224  
                                        u10867 5BF4                                          _T5CLK 000FC6  
                                        _T5CON 000FC3                                          u16327 56A8  
                                        _T7CLK 000F33                                          _T6CON 000FB1  
                               __CFG_DEBUG$OFF 000000                                          _T7CON 000F30  
                                        _T6HLT 000FB2                                          i1l213 007C  
                                        i1l215 009C                                          i1l217 00A6  
                                        i2l202 4E52                                          i2l204 4E5E  
                                        i2l206 4E68                                          i1l390 5FA2  
                                        i2l400 5064                                          i2l402 50B4  
                                        i1l626 6184                                          i1l389 5FA6  
                                        i1l832 59FA                                          i1l841 5A2A  
                                        i1l835 5A0A                                          i2l700 628A  
                                        i1l844 5A3A                                          _T6TMR 000FAF  
                                        i2l374 5DFC                                          i1l838 5A1A  
                                        i2l375 5DFA                                          i1l847 5A4A  
                                        i2l377 5E10                                          i2l378 5E36  
                                        _T6RST 000FB4                                          i2l379 5E34  
                                        i2l395 501C                                          i2l820 1EA6  
                                        i2l396 503E                                          i2l813 2138  
                                        i2l821 1E70                                          i2l397 5060  
                                        i2l822 1E98                                          i2l814 1CB6  
                                        i2l823 1EC0                                          i2l816 1CF0  
                                        i2l825 1F74                                          i2l817 1D6E  
                                        i2l826 1FF2                                          i2l818 1DD0  
                                        i2l827 2134                                          i2l819 1F12  
                              ___awdiv@counter 0121                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 4370                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a F3E0  
                           __end_ofsin@coeff_b F3FB                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                        _Imeas 00C5                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                __CFG_WRT5$OFF 000000                                   ___lltoft@exp 0127  
                                __CFG_WRT6$OFF 000000                        ??_ADCC_IsConversionDone 0100  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 6014                               __end_of_TMR6_ISR 611E  
                             __end_of_TMR7_ISR 5FE0                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                                  ___awtoft@sign 0122  
                    ??_terminal_ringBufferPull 01AE                                __end_of_dpowers F351  
                                        acos@x 008E                                          fabs@d 0027  
                                   i2scale@scl 003C                                          _floor 4B58  
                                        _frexp 55AC                                          _errno 00DD  
                        ?_ADCC_StartConversion 0001                                          _scale 2162  
                              __end_of_isdigit 6222                                          atan@f 0058  
                                        atan@x 0063                                          atan@y 0060  
                           __CFG_MCLRE$EXTMCLR 000000                                  ___ftpack@sign 011B  
                                        asin@x 0079                                          asin@y 0088  
                                        atoi@a 0130                                          atoi@s 012B  
                                        _putch 62FC                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        sin@x2 006F                                          tablat 000FF5  
                             __end_ofi2___ftge 5310                               __end_ofi2___wmul 61B8  
                               ??_EUSART2_Read 0117                                          sqrt@a 0066  
                                        sqrt@i 006F                                          sqrt@q 0073  
                                        sqrt@x 0076                                          sqrt@z 0070  
                                        status 000FD8                                          wtemp6 0060  
                              __end_of_strncmp 5280                                __end_of_strncpy 585C  
                             __end_ofi2_fround 32A4                 ?_INTERRUPT_InterruptManagerLow 0001  
                                i2___ftdiv@exp 001F                             __size_ofi2___awdiv 0084  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___awmod 0070  
                           __size_ofi2___ftdiv 00E6                             __size_ofi2___ftneg 0024  
                           __size_ofi2___lldiv 0082                             __size_ofi2___ftmul 00F4  
                           __size_ofi2___llmod 0066                             __size_ofi2___ftsub 0042  
                           __size_ofi2___fttol 00F4                               __end_ofi2_printf 1456  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 6342  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 6334  
                              _TMR5_Initialize 5D64                                __initialization 5B14  
                            i2___lldiv@divisor 0005                                   __end_of_acos 5C7A  
                                 __end_of_fabs 6076                                   __end_of_atan 3AF4  
                                 __end_of_asin 350E                                   __end_of_atoi 4DE8  
                                 __end_of_main 5712                              i2___lldiv@counter 000D  
                                i2___ftmul@exp 0030                                   __end_of_sqrt 3FE0  
                                   i2printf@ap 0076                                     i2printf@cp 0072  
                        __end_of_ringBufferLUT 1CB0                                 __CFG_SCANE$OFF 000000  
                           __size_ofi2_isdigit 001E                                    ?i2___ftpack 0001  
                                       ??_acos 005E                                         ??_fabs 002A  
                                       ??_atan 005B                                    ?i2___lltoft 0009  
                                       ??_asin 005E                                         ??_atoi 012D  
                                       ??_main 01B7                                  ___fttol@sign1 015E  
                     _TMR5_SetInterruptHandler 6326                                         ??_sqrt 0069  
                                __activetblptr 000003                           __size_of__tdiv_to_l_ 0134  
                              _TMR6_Initialize 6014                             _TRIAC_Firing_Angle 00E5  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 592A                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01DB  
                                       ?_floor 0056                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             __end_of___altoft 569C                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 0155  
                                       _ADLTHL 000F6A                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                               __end_of___awtoft 5F3E  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                             __end_of___ftpack 4F64                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                               __end_of___lltoft 5B14  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1101 0B1E  
                                       i2l1102 0BE6                                         i2l1110 0B44  
                                       i2l1112 0B6C                                         i2l1121 0D5A  
                                       i2l1113 0B7E                                         i2l1105 0B22  
                                       i2l1114 116E                                         i2l1122 0D9A  
                                       i2l1123 0E62                                         i2l1115 0BFA  
                                       i2l1107 0B26                                         i2l1140 0FD2  
                                       i2l1132 0EC8                                         i2l1116 0C3C  
                                       i2l1141 0FC4                                         i2l1109 0B58  
                                       i2l1150 1156                                         i2l1126 0E0A  
                                       i2l1118 0CCE                                         i2l1143 0FF6  
                                       i2l1119 0D34                                         i2l1400 54BA  
                                       i2l1080 280E                                         i2l1152 11BE  
                                       i2l1144 0FFA                                         i2l1401 54CA  
                                       i2l1081 2728                                         i2l1145 1012  
                                       i2l1137 0FB8                                         i2l1074 3186  
                                       i2l1162 1296                                         i2l1154 11E2  
                                       i2l1146 114A                                         i2l1138 0F26  
                                       i2l1403 54E8                                         i2l1171 1406  
                                       i2l1163 123E                                         i2l1147 1064  
                                       i2l1091 0A3C                                         i2l1324 32EC  
                                       i2l1404 54E0                                         i2l1420 57D2  
                                       i2l1084 27E4                                         i2l1156 1280  
                                       i2l1092 0A4E                                         i2l1421 57DC  
                                       i2l1413 5798                                         i2l1077 325E  
                                       i2l1085 294C                                         i2l1173 13E8  
                                       i2l1157 11FC                                         i2l1149 1164  
                                       i2l1093 0B10                                         i2l1270 5652  
                                       i2l1326 33E0                                         i2l1422 57EA  
                                       i2l1414 57A4                                         i2l1174 12EE  
                                       i2l1094 0AE4                                         i2l1511 3D1E  
                                       i2l1271 5646                                         i2l1343 3968  
                                       i2l1327 3490                                         i2l1407 5508  
                                       i2l1087 2A08                                         i2l1167 12B2  
                                       i2l1095 0A92                                         i2l1440 6068  
                                       i2l1408 5512                                         i2l1416 57BA  
                                       i2l1176 1400                                         i2l1521 3D7A  
                                       i2l1601 4868                                         i2l1345 39C0  
                                       i2l1409 5520                                         i2l1417 57B2  
                                       i2l1177 1370                                         i2l1169 12D2  
                                       i2l1530 3DB8                                         i2l1522 3D70  
                                       i2l1434 4CFA                                         i2l1602 485C  
                                       i2l1346 3AC4                                         i2l1450 445C  
                                       i2l1098 0B84                                         i2l1531 3DAE  
                                       i2l1507 3CF4                                         i2l1435 4C7A  
                                       i2l1451 444C                                         i2l1516 3D84  
                                       i2l1604 4884                                         i2l1540 4A9A  
                                       i2l1348 3AD6                                         i2l1444 438E  
                                       i2l1533 3DDC                                         i2l1534 3DF8  
                                       i2l1542 4AC2                                         i2l1446 43AC  
                                       i2l1550 416C                                         i2l1535 3E28  
                                       i2l1543 4B00                                         i2l1447 43EE  
                                       i2l1551 41A6                                         i2l1480 4FAA  
                                       i2l1544 4B26                                         i2l1456 4480  
                                       i2l1448 441E                                         i2l1560 422E  
                                       i2l1552 41CE                                         i2l1608 6238  
                                       i2l1457 4474                                         i2l1561 4222  
                                       i2l1482 4FE8                                         i2l1634 5558  
                                       i2l1554 420A                                         i2l1483 4FDE  
                                       i2l1723 353A                                         i2l1635 554C  
                                       i2l1555 41FA                                         i2l1476 4F8C  
                                       i2l1572 48BE                                         i2l1724 361C  
                                       i2l1644 5948                                         i2l1548 4140  
                                       i2l1477 4F82                                         i2l1565 52B0  
                                       i2l1725 3674                                         i2l1645 593C  
                                       i2l1574 48E6                                         i2l1566 52E0  
                                       i2l1726 375E                                         i2l1638 558C  
                                       i2l1479 4FC0                                         i2l1575 4918  
                                       i2l1583 61CE                                         i2l1639 559A  
                                       i2l1655 5B82                                         i2l1576 4928  
                                       i2l1648 5970                                         i2l1656 5B76  
                                       i2l1593 47CE                                         i2l1649 597E  
                                       i2l1578 4940                                         i2l1579 4950  
                                       i2l1595 4844                                         i2l1931 4BAE  
                                       i2l1596 4834                                         i2l1932 4C28  
                                       i2l1852 3E8A                                         i2l1589 5EDA  
                                       i2l1853 3E7C                                         i2l1855 3EDC  
                                       i2l1928 4B94                                         i2l1937 55C8  
                                       i2l1929 4B86                                         _RG7PPS 000E89  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 0039                               __end_of___lwtoft 6200  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
           __end_of_ADC_postProcessingCallback 2162                     _ADC_postProcessingCallback 1CB0  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 5CCA  
                                 i2_scale$3336 0039                               __end_of__powers_ F378  
         __size_of_ADCC_SetADIInterruptHandler 000E                __end_of_terminal_ringBufferPull 45B4  
                                       ___ftge 515E                                         ___wmul 60CE  
                                    ??___awdiv 0121                                      ??___ftadd 0131  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___ftdiv 013D                                      ??___ftneg 0126  
                                    ??___lldiv 011F                                      ??___ftmul 014C  
                                    ??___llmod 012C                                      ??___ftsub 013D  
                                    ??___fttol 0159                       ??_terminal_setCursorHome 018E  
                                       _fround 2D9A                                         clear_0 5B3C  
                                       clear_1 5B4E                                         clear_2 5B5E  
                         _eusart2RxStringReady 0788                               ___awdiv@quotient 0123  
                              ___awmod@divisor 0119                                ___awmod@counter 011B  
                                       _printf 0000                                         _strcat 5D18  
                                       _strchr 5F3E                                         _strcmp 5C7A  
                                    ?_ADCC_ISR 0001                                         _strlen 5BCC  
                               i2___awdiv@sign 000C                                         _strstr 5310  
                                       floor@i 0059                                         floor@x 0056  
                        ___ftmul@f3_as_product 0150                               _background_color 00E1  
                              _ADCC_Initialize 5990                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize 6240                                      ??_isdigit 0117  
                            __end_ofi2___awdiv 552A                              __end_ofi2___ftadd 3E4E  
                            __end_ofi2___awmod 57F4                              __end_ofi2___ftdiv 4B58  
                               i2___ftadd@exp1 004B                                 i2___ftadd@exp2 004A  
                            __end_ofi2___ftneg 61DC                              __end_ofi2___lldiv 55AC  
                                       sin@sgn 0072                              __end_ofi2___ftmul 498A  
                            __end_ofi2___llmod 5990                              __end_ofi2___ftsub 5F04  
                            __end_ofi2___fttol 4896                                 i2___ftadd@sign 0049  
                                 __mediumconst F328                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 5F76                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                         sqrt@og 006C  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117    ADCC_SetADIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 0097  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 018E                  __size_of_INTERRUPT_Initialize 0012  
                              _eusart2RxBuffer 0280                        __end_of_TMR5_Initialize 5DAE  
                            __end_ofi2_isdigit 6240                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00B3                              _SYSTEM_Initialize 60A4  
         __end_of_TMR7_DefaultInterruptHandler 6392          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 6390                                 i2___ftdiv@cntr 001E  
                              _eusart2TxBuffer 0200                                     __accesstop 0060  
                      __end_of__initialization 5B66                                     ___altoft@c 004C  
                               i2___ftdiv@sign 0023                                     ___ftadd@f1 012B  
                                   ___ftadd@f2 012E                            __size_ofi2___ftpack 00AE  
                               i2printf@tmpval 007C                                     ___ftge@ff1 0117  
                                   ___ftge@ff2 011A                             ?_SYSTEM_Initialize 0001  
                          __size_ofi2___lltoft 005C                                   eval_poly@res 0055  
                                ___rparam_used 000001                                     ___ftdiv@f1 0137  
                                   ___ftdiv@f2 013A                                     ___ftdiv@f3 0141  
                              _TMR5_WriteTimer 6278                                     ___ftneg@f1 0123  
                                   ___awtoft@c 011F                                 i2___ftpack@arg 0001  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                               i2___ftpack@exp 0004                             i2__tdiv_to_l_@cntr 000E  
                            i2___llmod@counter 0016                             i2__tdiv_to_l_@quot 000A  
                                   ___ftmul@f1 0146                                     ___ftmul@f2 0149  
            terminal_ringBufferPull@charNumber 01B1                                     ___ftsub@f1 0137  
                                   ___ftsub@f2 013A                                     ___fttol@f1 0155  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 018E                                   __pidataBANK0 638A  
                          ??_SYSTEM_Initialize 011C                                     ___lltoft@c 011F  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                                  __end_of_floor 4C36  
                                __end_of_frexp 5624                                 i2___ftmul@cntr 0034  
                                __end_of_scale 25E2                                 i2___ftmul@sign 0035  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 630A  
                                  i2printf@idx 0071                       ??_terminal_clearTerminal 018E  
                                  i2printf@len 0074                                    i2printf@exp 007A  
                                  i2printf@val 0083                        __end_of_TMR6_Initialize 6046  
                       __end_of_PMD_Initialize 625C                                 i2___fttol@exp1 004B  
                                   ___lwtoft@c 0009                                 i2___fttol@lval 0047  
                                    ?i2___ftge 002A                                     ??_ADCC_ISR 005E  
                         __end_of_EUSART2_Read 5E80                                      ?i2___wmul 000F  
                                i2__tdiv_to_l_ 4114                                     __div_to_l_ 4246  
                                    ?i2_fround 0036                          ?_EUSART2_Transmit_ISR 0001  
                                    ?i2_printf 0066                    ADCC_StartConversion@channel 0100  
                              __div_to_l_@exp1 0122                                        ??_floor 0059  
                              __div_to_l_@cntr 0121                                        ??_frexp 0006  
                                      ??_scale 0158                      __end_of_SYSTEM_Initialize 60CE  
                               i2___lltoft@exp 0011                                __div_to_l_@quot 011D  
                                      ??_putch 0118                                   peakToRMS@RMS 00A3  
                           i2___lldiv@quotient 0009                                  _eusart2RxHead 00E4  
                                _eusart2TxHead 01DD                                     __pbssBANK0 00C5  
                                   __pbssBANK1 01B9                                     __pbssBANK2 0200  
                                _eusart2RxTail 01DA                                  _eusart2TxTail 01DC  
                           __size_of_eval_poly 00DA                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 5D18  
                           __size_of_peakToRMS 01C6                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011A  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 616C  
                             ??_FVR_Initialize 0117                                 _peakToRMS$3321 00A0  
                               _peakToRMS$3322 009A                                 _peakToRMS$3323 009D  
                        ringBufferLUT@arg_buff 01A7                                        ?___ftge 0117  
            terminal_ringBufferPull@index_1975 01B3                                        ?___wmul 0125  
                        _currentMeasuredToPeak 5A56                                __CFG_PPS1WAY$ON 000000  
             __end_of_TMR6_SetInterruptHandler 6326                        __end_of_ADCC_Initialize 59F4  
                                   ??_TMR5_ISR 0003                                     ??_TMR6_ISR 0101  
                                   ??_TMR7_ISR 0102                                        _ADFLTRH 000F73  
                                      _ADFLTRL 000F72                                      ?___altoft 004C  
                                      ?_fround 0155                                        _ADPREVH 000F62  
                                      _ADPREVL 000F61                                      ?___awtoft 011F  
                                    ?___ftpack 0117                                        _ADSTPTH 000F69  
                                      _ADSTPTL 000F68                __size_of_terminal_setCursorHome 0010  
                                      ?_printf 0164                                ?_PMD_Initialize 0001  
                                    ?___lltoft 011F                                 ?i2__tdiv_to_l_ 0001  
                                   ??i2___ftge 0030                                        ?_strcat 0117  
                                      ?_strchr 0117                                        ?_strcmp 0117  
                                      ?_strlen 0117                                      ?___lwtoft 0009  
                                      ?_strstr 0126                                     ??i2___wmul 0013  
                                      u1141_41 4150                                        u1139_41 4124  
                                      u1500_41 4A82                                        u1502_41 4AAA  
                                      u1521_41 47B2                                        u1470_41 3CB2  
                                      u1471_41 3CC6                                        u1491_41 48A6  
                                      u1493_41 48CE                                        i2l12507 0FC4  
                                      i2l12463 0DE4                                        i2l12455 0D9A  
                                      i2l12391 0B44                                        i2l12617 13E8  
                                      i2l12483 0ECC                                        i2l11685 530C  
                                      i2l12581 1242                                        i2l12567 1200  
                                      _SP2BRGH 000EF4                                     ??i2_fround 0039  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 50BC  
                                   ??i2_printf 0068                                        _OSCTUNE 000E48  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
               __size_of_ADCC_IsConversionDone 000C                  __end_of_ADCC_IsConversionDone 6378  
                     _acquisitionTimerCallback 59F4                        __end_of_TMR5_WriteTimer 6294  
             __size_of_terminal_textAttributes 0368                                        i2_scale 25E2  
                             ?_TMR5_Initialize 0001                                        i2_putch 6378  
         __end_of_terminal_textAttributesReset 62BA          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 62A8                              __end_of__npowers_ F39F  
                                      __Hparam 0000                                     _scale$3141 0158  
                                      __Lparam 0000                     ??_TMR5_SetInterruptHandler 011A  
                              __size_of___ftge 0092                                        ___awdiv 539C  
                                      ___ftadd 3AF4                                        ___awmod 5712  
                                      ___ftdiv 498A                                        ___ftneg 6146  
                                      ___lldiv 5422                                __size_of___wmul 0028  
                                      ___ftmul 46AC                                        ___llmod 585C  
                                      ___ftsub 5E80                                        ___fttol 45B4  
                                   ??___altoft 0050                                        __pcinit 5B14  
                                 ??i2___ftpack 0006                                     ??___awtoft 0122  
                                   ??___ftpack 011C                              __end_of_eval_poly 4D10  
                              __size_of_fround 0294                               ?_TMR6_Initialize 0001  
                      i2___ftmul@f3_as_product 0031                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                   ??i2___lltoft 000D  
                                   ??___lltoft 0123                                        __ptext0 569C  
                                      __ptext1 62CC                                        __ptext2 4498  
                                      __ptext3 1456                                        __ptext4 62A8  
                                      __ptext5 2A32                                        __ptext6 57F4  
                                      __ptext7 5D18                                        __ptext8 62DC  
                                      __ptext9 5310                              __end_of_peakToRMS 3932  
                              __size_of_printf 0A2E                  currentMeasuredToPeak@Measured 0073  
                                   ??___lwtoft 000C                     ringBufferLUT@angle_degrees 01A4  
                              __size_of_strcat 004C                                  i2_fround$3334 003C  
                                i2_fround$3335 0039                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                __size_of_strlen 0058  
                            __end_of_hexpowers F3BF                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers F329  
                        _OSCILLATOR_Initialize 625C                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 003F                                        _isdigit 6200  
                              atan@val_squared 0067                                   __size_of_sin 025E  
                             ___awmod@dividend 0117    ADC_postProcessingCallback@currentADCChannel 00AF  
                                      _on_time 01B9                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 006A                                      _T5CONbits 000FC3  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 007C  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 01AC  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 002A  
                        i2EUSART2_Write@txData 0001                                        _strncmp 51F0  
                               __pintcode_body 4DE8                                        _strncpy 57F4  
                         end_of_initialization 5B66                        __end_of_TMR7_WriteTimer 6192  
                       _terminal_setCursorHome 62CC                               ?_TMR7_Initialize 0001  
                                      int_func 4DE8                            i2___wmul@multiplier 000F  
                                    i1u1610_28 5FCC                                      _T6RSTbits 000FB4  
                                    i1u1608_28 610A                                      i1u1628_28 0086  
                  ?_ADC_postProcessingCallback 0001                                      i2u1105_40 57BE  
                                    i2u1151_40 555C                                      i2u1154_40 594C  
                                    i2u1138_40 4486                                      i2u1147_40 4234  
                                    i2u1520_40 55F0                                      i2u1600_40 1418  
                           __end_ofi2___ftpack 5012                                      i2u1520_48 55F2  
                                    i2u1601_40 1448                                      i2u1601_47 143E  
                                    i2u1514_40 398C                                      i2u1523_40 47EC  
                                    i2u1515_40 398E                                      i2u1099_40 54EC  
                                    i2u1523_45 47E4                                      i2u1604_48 6000  
                                    i2u1534_40 4BA0                                      i2u1614_40 5054  
                                    i2u1463_40 4F74                                      i2u1527_40 486E  
                                    i2u1606_48 6132                                      i2u1480_40 3D4E  
                                    i2u1474_40 3CE6                                      i2u1538_40 3618  
                                    i2u1562_40 0BB4                                      i2u1554_40 0A7A  
                                    i2u1562_47 0BAA                                      i2u1554_47 0A70  
                                    i2u1467_40 4FF2                                      i2u1539_40 361A  
                                    i2u1571_40 0D6C                                      i2u1484_40 3D8C  
                                    i2u1572_40 0DAC                                      i2u1556_40 0AC8  
                                    i2u1619_48 4E3C                                      i2u1556_47 0ABE  
                                    i2u1477_40 3D10                                      i2u1557_40 0B06  
                                    i2u1557_47 0AFC                                      i2u1582_40 0FE0  
                                    i2u1487_40 3DC0                                      i2u1583_40 0FF0  
                                    i2u1575_40 0DE4                                      i2u1567_40 0C74  
                                    i2u1567_45 0C6A                                      i2u1579_40 0F0A  
                           __end_ofi2___lltoft 5BCC                                ___lldiv@divisor 011B  
                              ___lldiv@counter 0123                             _EUSART2_Initialize 58C4  
                ?_terminal_textAttributesReset 0001                         ?_currentMeasuredToPeak 0073  
                              i2_EUSART2_Write 5DF6                                        printf@c 018D  
                                      printf@f 0164                       ??_heartbeatTimerCallback 0100  
               ??_TMR7_DefaultInterruptHandler 0100                                        postdec1 000FE5  
                                      postdec2 000FDD                                        postinc0 000FEE  
                                      postinc2 000FDE                          __size_of_EUSART2_Read 0044  
                             ?_ADCC_Initialize 0001                                 __tdiv_to_l_@f1 0117  
                               __tdiv_to_l_@f2 011A                                ??i2__tdiv_to_l_ 0007  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                          ?_EUSART2_Initialize 0001                                        strlen@s 0117  
                 terminal_ringBufferPull@index 01B5                                  ??__tdiv_to_l_ 011D  
                     _TMR6_SetInterruptHandler 6318                          _TMR5_InterruptHandler 01C9  
                     ?_terminal_ringBufferPull 0001                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0028            __end_of_ADCC_SetADIInterruptHandler 635E  
                  _ADCC_SetADIInterruptHandler 6350                                      i2___awdiv 54A6  
                                    i2___ftadd 3CA2                                      i2___awmod 5784  
                             __CFG_FEXTOSC$ECH 000000                                      i2___ftdiv 4A72  
                                    i2___ftneg 61B8                                      i2___lldiv 552A  
                                    i2___ftmul 4896                                      i2___llmod 592A  
                                    i2___ftsub 5EC2                                      i2___fttol 47A2  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                       _terminal_clearTerminal 62EC                        TMR5_WriteTimer@timerVal 0001  
                       __size_of_ringBufferLUT 085A                  ??_ADCC_SetADIInterruptHandler 011A  
                                  ___ftdiv@exp 0144                                   _EUSART2_Read 5E3C  
                           i2___llmod@dividend 000E                             i2___awdiv@dividend 0007  
                              i2___ftpack@sign 0005                                      i2_isdigit 6222  
                          __size_of__div_to_l_ 012A                                    ___ftmul@exp 014F  
                 __end_of_INTERRUPT_Initialize 62CC                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                                 __end_of___ftge 51F0  
                __end_of_terminal_printNewline 62EC                                 __end_of___wmul 60F6  
                            __size_of_TMR5_ISR 0034                              __size_of_TMR6_ISR 0028  
                            __size_of_TMR7_ISR 0034                         ?_OSCILLATOR_Initialize 0001  
                                __pbitbssBANK0 0788                                 __end_of_fround 302E  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 005C                               i2___wmul@product 0013  
                               __end_of_printf 0A2E                                  i2_printf$3337 006E  
                               __end_of_strcat 5D64                                 __end_of_strchr 5F76  
                               __end_of_strcmp 5CCA                                   i2printf@flag 0078  
                               __end_of_strlen 5C24                                   i2printf@fval 0080  
                               __end_of_strstr 539C                                   i2printf@prec 0087  
                          start_initialization 5B14                              __size_ofi2___ftge 0090  
                                   eval_poly@d 004F                                     eval_poly@n 0051  
                                   eval_poly@x 004C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 6396  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 6394  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 4114  
                                  __end_of_sin 376C                                      i2printf@c 0089  
                                    i2printf@f 0066                _ADC_postProcessingCallback$3324 00B0  
              _ADC_postProcessingCallback$3325 00A6                _ADC_postProcessingCallback$3326 00A9  
              _ADC_postProcessingCallback$3327 00AC                                i2___fttol@sign1 0046  
                      _terminal_textAttributes 2A32  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                              __size_ofi2_fround 0276  
                                   ?i2___awdiv 0007                                     ?i2___ftadd 0040  
                                   ?i2___awmod 0001                                     ?i2___ftdiv 0015  
                                   ?i2___ftneg 0024                                     ?i2___lldiv 0001  
                                   ?i2___ftmul 0027                                     ?i2___llmod 000E  
                                   ?i2___ftsub 0060                                     ?i2___fttol 003D  
                __size_of_ADCC_StartConversion 000E                                    putch@txData 0118  
                            __size_ofi2_printf 0A28                          __end_of_EUSART2_Write 5DF6  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0191                        __end_ofi2_EUSART2_Write 5E3C  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 00E8  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0117  
                                     ??___ftge 011D                                       ??___wmul 0129  
              __size_of_heartbeatTimerCallback 002E                                    __pdataBANK0 00EB  
                                     ??_fround 0158                                  _ringBufferLUT 1456  
               ??_terminal_textAttributesReset 01A0                                       ??_printf 016C  
                            _POS3P3_ADC_Result 00CE                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strlen 0119  
                                peakToRMS@Peak 0094                                       ??_strstr 012A  
                            __size_of___altoft 0078                                      _Vpk_const 00EB  
                                   fround@prec 015E                                 _eusart2RxCount 01D9  
                                ?i2__div_to_l_ 0001                              __size_of___awtoft 003A  
                            __size_of___ftpack 00B0                                      _acos$3328 0091  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                 _isdigit$2497 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                          EUSART2_Write@txData 0117                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$3330 008B  
                                    _asin$3331 0085                                      _asin$3332 0082  
                                    _asin$3329 007F                                       ?i2_putch 0001  
                                   sin@coeff_a F3D1                                     sin@coeff_b F3EF  
                        _TMR6_InterruptHandler 01CF                         _PIN_MANAGER_Initialize 50BC  
                                    __pintcode 0008                                  __pmediumconst F328  
                                     ?___awdiv 011D                                      __ptext100 4B58  
                                    __ptext101 47A2                                      __ptext110 4F64  
                                    __ptext102 5280                                      __ptext111 6294  
                                    __ptext103 55AC                                      __ptext112 0000  
                                    __ptext104 5624                                      __ptext105 4C36  
                                    __ptext106 6192                                      __ptext107 4896  
                                    __ptext108 3CA2                                      __ptext109 61DC  
                                     ?___ftadd 012B                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 6318  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ F378  
                                     ?___fttol 0155                                 ?_ringBufferLUT 01A0  
            _EUSART2_TxDefaultInterruptHandler 01D2                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 3FE0                                       _ADCC_ISR 611E  
                               ??i2__div_to_l_ 0007                                   ??__div_to_l_ 011D  
                             _POS12_ADC_Result 01C6                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                      _eval_poly 4C36  
                    ??_terminal_textAttributes 0190                                      _attribute 00E3  
                                    _peakToRMS 376C                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers F39F  
                       _heartbeatTimerCallback 6076                                 _dimming_period 00DF  
                                  ??i2___awdiv 000B                                    ??i2___ftadd 0046  
                                  ??i2___awmod 0005                                 __size_of_floor 00DE  
                                  ??i2___ftdiv 001B                                 __size_of_frexp 0078  
                                  ??i2___ftneg 0027                                    ??i2___lldiv 0009  
                                  ??i2___ftmul 002D                                 __size_of_scale 0480  
                                  ??i2___llmod 0016                                    ??i2___ftsub 005E  
                                  ??i2___fttol 0041                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 62BA                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 636C         terminal_textAttributes@input_attribute 018F  
                 __size_of_EUSART2_Receive_ISR 00AA                                 ___wmul@product 0129  
                    currentMeasuredToPeak@Peak 0079                               ?i2_EUSART2_Write 0001  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0066                                       _IPR1bits 000E20  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       _PIR1bits 000E34  
                                     i1u738_20 6082                                       i1u682_20 6374  
                           __end_of__div_to_l_ 4370                                       i1u739_28 6086  
                                     _PIR3bits 000E36                                       _PIR5bits 000E38  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 004A  
                                     _TMR5_ISR 5FE0                                       _TMR6_ISR 60F6  
                                     _TMR7_ISR 5FAC                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0004                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0125  
                                     i2___ftge 5280                                       i2___wmul 6192  
                      __size_of_FVR_Initialize 0008                                     printf@flag 017C  
                                   printf@fval 0188                                     printf@prec 018B  
                                   ?_eval_poly 004C                 __end_of_terminal_setCursorHome 62DC  
                            i2___awdiv@divisor 0009                                       i2_fround 302E  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 0094  
                            i2___awdiv@counter 000B                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 0A2E  
                          __end_ofatan@coeff_a F3D1                            __end_ofatan@coeff_b F3EF  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                                    copy_data0 5B28                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001               __size_of_terminal_ringBufferPull 011C  
                             __size_ofi2_scale 0450                 ??_TMR5_DefaultInterruptHandler 0001  
                             __size_ofi2_putch 000A                                      frexp@eptr 0004  
              __end_of_terminal_textAttributes 2D9A                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 62A8  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 6350  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 6342  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01A2                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 00E2                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___awdiv 0086                               __size_of___ftadd 01AE  
                             __size_of___awmod 0072                               __size_of___ftdiv 00E8  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0011  
                             __size_of___lldiv 0084                                       ___altoft 5624  
                             __size_of___ftmul 00F6                               __size_of___llmod 0068  
                             __size_of___ftsub 0042                               __size_of___fttol 00F8  
                                  _load_enable 02F0                                       ___awtoft 5F04  
                                     ___ftpack 4EB4               __end_of_acquisitionTimerCallback 5A56  
                                  _fround$3140 0158                                    _fround$3139 015B  
                                     ___lltoft 5AB6                          __end_ofi2__tdiv_to_l_ 4246  
                                     ___lwtoft 61DC                       _TMR7_SetInterruptHandler 630A  
                        _TMR7_InterruptHandler 01CC                             _ADC_Result_Scaling 00D1  
      terminal_textAttributes@foreground_color 0190                       __size_of_ADCC_Initialize 0064  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 62FC                               __size_of_isdigit 0022  
                                     __ptext10 51F0                                       __ptext11 5BCC  
                                     __ptext20 2162                                       __ptext12 5F3E  
                                     __ptext21 62FC                                       __ptext13 5C7A  
                                     __ptext30 4246                                       __ptext22 5DAE  
                                     __ptext14 4D10                                       __ptext31 5AB6  
                                     __ptext23 6200                                       __ptext15 498A  
                                     __ptext40 60A4                                       __ptext32 585C  
                                     __ptext24 2D9A                                       __ptext16 5F04  
                                     __ptext41 5CCA                                       __ptext33 5422  
                                     __ptext25 60CE                                       __ptext17 5E3C  
                                     __ptext50 62BA                                       __ptext42 630A  
                                     __ptext34 45B4                                       __ptext26 46AC  
                                     __ptext18 62EC                                       __ptext51 6382  
                                     __ptext43 6014                                       __ptext35 5E80  
                                     __ptext27 5712                                       __ptext19 0000  
                                     __ptext60 59F4                                       __ptext52 58C4  
                                     __ptext44 6318                                       __ptext36 3AF4  
                                     __ptext28 539C                                       __ptext61 635E  
                                     __ptext53 6334                                       __ptext45 5D64  
                                     __ptext37 4EB4                                       __ptext29 3FE0  
                                     __ptext70 6278                                       __ptext62 636C  
                                     __ptext54 6342                                       __ptext46 6326  
                                     __ptext38 6146                                       __ptext71 6394  
                                     __ptext63 616C                                       __ptext55 5990  
                                     __ptext47 6240                                       __ptext39 515E  
                                     __ptext80 54A6                                       __ptext72 5012  
                                     __ptext64 60F6                                       __ptext56 6350  
                                     __ptext48 50BC                                       __ptext81 4114  
                                     __ptext73 0A2E                                       __ptext65 6392  
                                     __ptext49 625C                                       __ptext90 5C24  
                                     __ptext82 4370                                       __ptext74 25E2  
                                     __ptext66 6076                                       __ptext58 5FAC  
                                     __ptext91 32A4                                       __ptext83 5B70  
                                     __ptext75 6378                                       __ptext67 5F76  
                                     __ptext59 6390                                       __ptext92 3E4E  
                                     __ptext84 592A                                       __ptext76 5DF6  
                                     __ptext93 3932                                       __ptext85 552A  
                                     __ptext77 6222                                       __ptext69 5FE0  
                                     __ptext94 6046                                       __ptext86 611E  
                                     __ptext78 302E                                       __ptext95 5A56  
                                     __ptext87 6396                                       __ptext79 5784  
                                     __ptext96 350E                                       __ptext88 1CB0  
                                     __ptext97 5EC2                                       __ptext89 376C  
                                     __ptext98 61B8                                       __ptext99 4A72  
                                     _sin$3333 006C                                       __powers_ F351  
                       ?_ADCC_IsConversionDone 0001                                _Temp_ADC_Offset 00EE  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 0066                                 i2_isdigit$2497 0002  
                              _Temp_ADC_Result 01C3                                  __size_of_acos 0056  
                                __size_of_fabs 0030                                  __size_of_atan 01C2  
                                __size_of_asin 026A                                  __size_of_atoi 00D8  
                                __size_of_main 0076                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 0192                           __end_ofi2__div_to_l_ 4498  
                                   strncmp@len 0121                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      _ADCC_ADI_InterruptHandler 00D7  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 636C  
                                     int$flags 005F                                       atoi@sign 012F  
                                    printf@idx 0175                                      printf@len 0178  
                                    printf@exp 017E                                      printf@val 0184  
                                  atan@coeff_a F3BF                                    atan@coeff_b F3E0  
                            ??_TMR5_Initialize 011A                          _terminal_printNewline 62DC  
                            i2___awmod@divisor 0003                              i2___awmod@counter 0005  
                                   _INTCONbits 000FF2                                    ??_eval_poly 0053  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                                     scale@scl 015B           __end_of_TMR6_DefaultInterruptHandler 6394  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 6392  
         __end_of_ADCC_DefaultInterruptHandler 6398          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 6396                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                               __tdiv_to_l_@quot 0120  
                                    strchr@chr 0119                                      strchr@ptr 0117  
                           ringBufferLUT@index 01AA                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                            __CFG_CLKOUTEN$OFF 000000                                      strncmp@s1 011D  
                                    strncmp@s2 011F                                _AVSS_ADC_Result 00D4  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                       printf@ap 017A  
                                     printf@cp 0176                       _ADCC_GetConversionResult 6294  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 5012  
       __end_of_INTERRUPT_InterruptManagerHigh 4EB4        __size_of_INTERRUPT_InterruptManagerHigh 4EAC  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 011A  
                                  _printf$3142 0172                                 _FVR_Initialize 6382  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01A0  
                             ___lldiv@quotient 011F                                       strlen@cp 011B  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 515E                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 4498                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0062  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                 ??_ADC_postProcessingCallback 005E              _EUSART2_RxDefaultInterruptHandler 00DA  
               __size_of_currentMeasuredToPeak 0060                  __end_of_currentMeasuredToPeak 5AB6  
