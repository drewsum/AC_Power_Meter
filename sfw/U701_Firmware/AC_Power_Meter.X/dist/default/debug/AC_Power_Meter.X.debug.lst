

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 01 18:01:06 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133  0000                     
   134                           ; Version 1.45 (B)
   135                           ; Generated 30/01/2018 GMT
   136                           ; 
   137                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18LF67K40 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     
   169                           	psect	idataBANK0
   170  015FD0                     __pidataBANK0:
   171                           	opt stack 0
   172                           
   173                           ;initializer for _Vpk
   174                           ;main.c: 58: volatile bit eusart2RxStringReady = 0;
   175                           ;main.c: 61: unsigned long on_time = 0;
   176                           ;main.c: 64: double FVR_ADC_Result;
   177                           ;main.c: 65: double ADC_Result_Scaling;
   178                           ;main.c: 66: double POS3P3_ADC_Result;
   179                           ;main.c: 67: double POS12_ADC_Result;
   180                           ;main.c: 68: double Temp_ADC_Result;
   181                           ;main.c: 69: double Temp_ADC_Offset = -267.409;
   182  015FD0  B5                 	db	181
   183  015FD1  29                 	db	41
   184  015FD2  43                 	db	67
   185                           
   186                           ;initializer for _Temp_ADC_Offset
   187  015FD3  B4                 	db	180
   188  015FD4  85                 	db	133
   189  015FD5  C3                 	db	195
   190                           
   191                           	psect	mediumconst
   192  00F410                     __pmediumconst:
   193                           	opt stack 0
   194  00F410  00                 	db	0
   195  00F411                     _dpowers:
   196                           	opt stack 0
   197  00F411  0001               	dw	1
   198  00F413  0000               	dw	0
   199  00F415  000A               	dw	10
   200  00F417  0000               	dw	0
   201  00F419  0064               	dw	100
   202  00F41B  0000               	dw	0
   203  00F41D  03E8               	dw	1000
   204  00F41F  0000               	dw	0
   205  00F421  2710               	dw	10000
   206  00F423  0000               	dw	0
   207  00F425  86A0               	dw	34464
   208  00F427  0001               	dw	1
   209  00F429  4240               	dw	16960
   210  00F42B  000F               	dw	15
   211  00F42D  9680               	dw	38528
   212  00F42F  0098               	dw	152
   213  00F431  E100               	dw	57600
   214  00F433  05F5               	dw	1525
   215  00F435  CA00               	dw	51712
   216  00F437  3B9A               	dw	15258
   217  00F439                     __end_of_dpowers:
   218                           	opt stack 0
   219  00F439                     __powers_:
   220                           	opt stack 0
   221  00F439  00                 	db	0
   222  00F43A  80                 	db	128
   223  00F43B  3F                 	db	63
   224  00F43C  00                 	db	0
   225  00F43D  20                 	db	32
   226  00F43E  41                 	db	65
   227  00F43F  00                 	db	0
   228  00F440  C8                 	db	200
   229  00F441  42                 	db	66
   230  00F442  00                 	db	0
   231  00F443  7A                 	db	122
   232  00F444  44                 	db	68
   233  00F445  40                 	db	64
   234  00F446  1C                 	db	28
   235  00F447  46                 	db	70
   236  00F448  50                 	db	80
   237  00F449  C3                 	db	195
   238  00F44A  47                 	db	71
   239  00F44B  24                 	db	36
   240  00F44C  74                 	db	116
   241  00F44D  49                 	db	73
   242  00F44E  97                 	db	151
   243  00F44F  18                 	db	24
   244  00F450  4B                 	db	75
   245  00F451  BC                 	db	188
   246  00F452  BE                 	db	190
   247  00F453  4C                 	db	76
   248  00F454  6B                 	db	107
   249  00F455  6E                 	db	110
   250  00F456  4E                 	db	78
   251  00F457  03                 	db	3
   252  00F458  15                 	db	21
   253  00F459  50                 	db	80
   254  00F45A  79                 	db	121
   255  00F45B  AD                 	db	173
   256  00F45C  60                 	db	96
   257  00F45D  F3                 	db	243
   258  00F45E  49                 	db	73
   259  00F45F  71                 	db	113
   260  00F460                     __end_of__powers_:
   261                           	opt stack 0
   262  00F460                     __npowers_:
   263                           	opt stack 0
   264  00F460  00                 	db	0
   265  00F461  80                 	db	128
   266  00F462  3F                 	db	63
   267  00F463  CD                 	db	205
   268  00F464  CC                 	db	204
   269  00F465  3D                 	db	61
   270  00F466  D7                 	db	215
   271  00F467  23                 	db	35
   272  00F468  3C                 	db	60
   273  00F469  12                 	db	18
   274  00F46A  83                 	db	131
   275  00F46B  3A                 	db	58
   276  00F46C  B7                 	db	183
   277  00F46D  D1                 	db	209
   278  00F46E  38                 	db	56
   279  00F46F  C6                 	db	198
   280  00F470  27                 	db	39
   281  00F471  37                 	db	55
   282  00F472  38                 	db	56
   283  00F473  86                 	db	134
   284  00F474  35                 	db	53
   285  00F475  C0                 	db	192
   286  00F476  D6                 	db	214
   287  00F477  33                 	db	51
   288  00F478  CC                 	db	204
   289  00F479  2B                 	db	43
   290  00F47A  32                 	db	50
   291  00F47B  70                 	db	112
   292  00F47C  89                 	db	137
   293  00F47D  30                 	db	48
   294  00F47E  E7                 	db	231
   295  00F47F  DB                 	db	219
   296  00F480  2E                 	db	46
   297  00F481  E5                 	db	229
   298  00F482  3C                 	db	60
   299  00F483  1E                 	db	30
   300  00F484  42                 	db	66
   301  00F485  A2                 	db	162
   302  00F486  0D                 	db	13
   303  00F487                     __end_of__npowers_:
   304                           	opt stack 0
   305  00F487                     atan@coeff_a:
   306                           	opt stack 0
   307  00F487  3C                 	db	60
   308  00F488  04                 	db	4
   309  00F489  42                 	db	66
   310  00F48A  9F                 	db	159
   311  00F48B  6A                 	db	106
   312  00F48C  42                 	db	66
   313  00F48D  90                 	db	144
   314  00F48E  01                 	db	1
   315  00F48F  42                 	db	66
   316  00F490  4D                 	db	77
   317  00F491  BB                 	db	187
   318  00F492  40                 	db	64
   319  00F493  EC                 	db	236
   320  00F494  47                 	db	71
   321  00F495  3E                 	db	62
   322  00F496  8E                 	db	142
   323  00F497  1F                 	db	31
   324  00F498  BB                 	db	187
   325  00F499                     __end_ofatan@coeff_a:
   326                           	opt stack 0
   327  00F499                     sin@coeff_a:
   328                           	opt stack 0
   329  00F499  F4                 	db	244
   330  00F49A  4A                 	db	74
   331  00F49B  48                 	db	72
   332  00F49C  95                 	db	149
   333  00F49D  95                 	db	149
   334  00F49E  C7                 	db	199
   335  00F49F  C1                 	db	193
   336  00F4A0  DC                 	db	220
   337  00F4A1  45                 	db	69
   338  00F4A2  DC                 	db	220
   339  00F4A3  6D                 	db	109
   340  00F4A4  C3                 	db	195
   341  00F4A5  B3                 	db	179
   342  00F4A6  33                 	db	51
   343  00F4A7  40                 	db	64
   344  00F4A8                     __end_ofsin@coeff_a:
   345                           	opt stack 0
   346  00F4A8                     atan@coeff_b:
   347                           	opt stack 0
   348  00F4A8  3C                 	db	60
   349  00F4A9  04                 	db	4
   350  00F4AA  42                 	db	66
   351  00F4AB  5A                 	db	90
   352  00F4AC  8B                 	db	139
   353  00F4AD  42                 	db	66
   354  00F4AE  04                 	db	4
   355  00F4AF  44                 	db	68
   356  00F4B0  42                 	db	66
   357  00F4B1  9C                 	db	156
   358  00F4B2  4F                 	db	79
   359  00F4B3  41                 	db	65
   360  00F4B4  00                 	db	0
   361  00F4B5  80                 	db	128
   362  00F4B6  3F                 	db	63
   363  00F4B7                     __end_ofatan@coeff_b:
   364                           	opt stack 0
   365  00F4B7                     sin@coeff_b:
   366                           	opt stack 0
   367  00F4B7  34                 	db	52
   368  00F4B8  01                 	db	1
   369  00F4B9  48                 	db	72
   370  00F4BA  9D                 	db	157
   371  00F4BB  B0                 	db	176
   372  00F4BC  45                 	db	69
   373  00F4BD  00                 	db	0
   374  00F4BE  DA                 	db	218
   375  00F4BF  42                 	db	66
   376  00F4C0  00                 	db	0
   377  00F4C1  80                 	db	128
   378  00F4C2  3F                 	db	63
   379  00F4C3                     __end_ofsin@coeff_b:
   380                           	opt stack 0
   381  0000                     _FVRCONbits	set	3780
   382  0000                     _FVRCON	set	3780
   383  0000                     _RC2REG	set	3825
   384  0000                     _RC2STAbits	set	3829
   385  0000                     _TX2REG	set	3826
   386  0000                     _TX2STAbits	set	3830
   387  0000                     _SP2BRGH	set	3828
   388  0000                     _SP2BRGL	set	3827
   389  0000                     _TX2STA	set	3830
   390  0000                     _RC2STA	set	3829
   391  0000                     _BAUD2CON	set	3831
   392  0000                     _PIR1bits	set	3636
   393  0000                     _PIE1bits	set	3626
   394  0000                     _PIR5bits	set	3640
   395  0000                     _PIE5bits	set	3630
   396  0000                     _PIR3bits	set	3638
   397  0000                     _PIE3bits	set	3628
   398  0000                     _IPR1bits	set	3616
   399  0000                     _IPR5bits	set	3620
   400  0000                     _IPR3bits	set	3618
   401  0000                     _RX2PPS	set	3601
   402  0000                     _RG7PPS	set	3721
   403  0000                     _SLRCONH	set	3774
   404  0000                     _SLRCONG	set	3769
   405  0000                     _SLRCONF	set	3761
   406  0000                     _SLRCONE	set	3756
   407  0000                     _SLRCOND	set	3748
   408  0000                     _SLRCONC	set	3743
   409  0000                     _SLRCONB	set	3735
   410  0000                     _SLRCONA	set	3727
   411  0000                     _ODCOND	set	3749
   412  0000                     _ODCONC	set	3744
   413  0000                     _ODCONH	set	3775
   414  0000                     _ODCONB	set	3736
   415  0000                     _ODCONG	set	3770
   416  0000                     _ODCONA	set	3728
   417  0000                     _ODCONF	set	3762
   418  0000                     _ODCONE	set	3757
   419  0000                     _WPUH	set	3776
   420  0000                     _WPUC	set	3745
   421  0000                     _WPUA	set	3729
   422  0000                     _WPUG	set	3771
   423  0000                     _WPUB	set	3737
   424  0000                     _WPUE	set	3758
   425  0000                     _WPUF	set	3763
   426  0000                     _WPUD	set	3750
   427  0000                     _ANSELA	set	3730
   428  0000                     _ANSELF	set	3764
   429  0000                     _ANSELG	set	3772
   430  0000                     _ANSELE	set	3759
   431  0000                     _ANSELB	set	3738
   432  0000                     _ANSELD	set	3751
   433  0000                     _PMD5	set	3665
   434  0000                     _PMD4	set	3664
   435  0000                     _PMD3	set	3663
   436  0000                     _PMD2	set	3662
   437  0000                     _PMD1	set	3661
   438  0000                     _PMD0	set	3660
   439  0000                     _OSCTUNE	set	3656
   440  0000                     _OSCFRQ	set	3657
   441  0000                     _OSCEN	set	3655
   442  0000                     _OSCCON3	set	3653
   443  0000                     _OSCCON1	set	3651
   444  0000                     _PLLR	set	29232
   445  0000                     _T7GCONbits	set	3889
   446  0000                     _T7CONbits	set	3888
   447  0000                     _T7CON	set	3888
   448  0000                     _TMR7L	set	3886
   449  0000                     _TMR7H	set	3887
   450  0000                     _T7CLK	set	3891
   451  0000                     _T7GATE	set	3890
   452  0000                     _T7GCON	set	3889
   453  0000                     _ADCON1bits	set	3929
   454  0000                     _ADCON2bits	set	3930
   455  0000                     _ADPRE	set	3934
   456  0000                     _ADCON3bits	set	3931
   457  0000                     _ADACQ	set	3932
   458  0000                     _ADCLK	set	3927
   459  0000                     _ADACT	set	3926
   460  0000                     _ADREF	set	3928
   461  0000                     _ADCON3	set	3931
   462  0000                     _ADCON2	set	3930
   463  0000                     _ADCON1	set	3929
   464  0000                     _ADCAP	set	3933
   465  0000                     _ADPCH	set	3935
   466  0000                     _T5GCONbits	set	4036
   467  0000                     _T5CONbits	set	4035
   468  0000                     _T5CON	set	4035
   469  0000                     _TMR5L	set	4033
   470  0000                     _TMR5H	set	4034
   471  0000                     _T5CLK	set	4038
   472  0000                     _T5GATE	set	4037
   473  0000                     _T5GCON	set	4036
   474  0000                     _LATGbits	set	3967
   475  0000                     _LATFbits	set	3966
   476  0000                     _ADERRL	set	3950
   477  0000                     _ADERRH	set	3951
   478  0000                     _ADPREVL	set	3937
   479  0000                     _ADPREVH	set	3938
   480  0000                     _ADFLTRL	set	3954
   481  0000                     _ADFLTRH	set	3955
   482  0000                     _ADSTATbits	set	3941
   483  0000                     _ADACCL	set	3952
   484  0000                     _ADACCH	set	3953
   485  0000                     _ADCNT	set	3943
   486  0000                     _ADRESL	set	3939
   487  0000                     _ADRESH	set	3940
   488  0000                     _ADCON0bits	set	3936
   489  0000                     _ADCON0	set	3936
   490  0000                     _ADSTAT	set	3941
   491  0000                     _ADRPT	set	3942
   492  0000                     _ADSTPTH	set	3945
   493  0000                     _ADSTPTL	set	3944
   494  0000                     _ADUTHH	set	3949
   495  0000                     _ADUTHL	set	3948
   496  0000                     _ADLTHH	set	3947
   497  0000                     _ADLTHL	set	3946
   498  0000                     _PR6	set	4016
   499  0000                     _TMR6	set	4015
   500  0000                     _T6CONbits	set	4017
   501  0000                     _T6RSTbits	set	4020
   502  0000                     _T6HLTbits	set	4018
   503  0000                     _T6CON	set	4017
   504  0000                     _T6TMR	set	4015
   505  0000                     _T6PR	set	4016
   506  0000                     _T6RST	set	4020
   507  0000                     _T6HLT	set	4018
   508  0000                     _T6CLKCON	set	4019
   509  0000                     _INTCONbits	set	4082
   510  0000                     _TRISD	set	3972
   511  0000                     _TRISC	set	3971
   512  0000                     _TRISH	set	3976
   513  0000                     _TRISB	set	3970
   514  0000                     _TRISG	set	3975
   515  0000                     _TRISA	set	3969
   516  0000                     _TRISF	set	3974
   517  0000                     _TRISE	set	3973
   518  0000                     _LATH	set	3968
   519  0000                     _LATC	set	3963
   520  0000                     _LATG	set	3967
   521  0000                     _LATB	set	3962
   522  0000                     _LATF	set	3966
   523  0000                     _LATA	set	3961
   524  0000                     _LATD	set	3964
   525  0000                     _LATE	set	3965
   526  00F4C3                     STR_82:
   527  00F4C3  4C                 	db	76	;'L'
   528  00F4C4  69                 	db	105	;'i'
   529  00F4C5  73                 	db	115	;'s'
   530  00F4C6  74                 	db	116	;'t'
   531  00F4C7  20                 	db	32
   532  00F4C8  6F                 	db	111	;'o'
   533  00F4C9  66                 	db	102	;'f'
   534  00F4CA  20                 	db	32
   535  00F4CB  73                 	db	115	;'s'
   536  00F4CC  75                 	db	117	;'u'
   537  00F4CD  70                 	db	112	;'p'
   538  00F4CE  70                 	db	112	;'p'
   539  00F4CF  6F                 	db	111	;'o'
   540  00F4D0  72                 	db	114	;'r'
   541  00F4D1  74                 	db	116	;'t'
   542  00F4D2  65                 	db	101	;'e'
   543  00F4D3  64                 	db	100	;'d'
   544  00F4D4  20                 	db	32
   545  00F4D5  63                 	db	99	;'c'
   546  00F4D6  6F                 	db	111	;'o'
   547  00F4D7  6D                 	db	109	;'m'
   548  00F4D8  6D                 	db	109	;'m'
   549  00F4D9  61                 	db	97	;'a'
   550  00F4DA  6E                 	db	110	;'n'
   551  00F4DB  64                 	db	100	;'d'
   552  00F4DC  73                 	db	115	;'s'
   553  00F4DD  3A                 	db	58	;':'
   554  00F4DE  0A                 	db	10
   555  00F4DF  0D                 	db	13
   556  00F4E0  20                 	db	32
   557  00F4E1  20                 	db	32
   558  00F4E2  20                 	db	32
   559  00F4E3  52                 	db	82	;'R'
   560  00F4E4  65                 	db	101	;'e'
   561  00F4E5  73                 	db	115	;'s'
   562  00F4E6  65                 	db	101	;'e'
   563  00F4E7  74                 	db	116	;'t'
   564  00F4E8  3A                 	db	58	;':'
   565  00F4E9  20                 	db	32
   566  00F4EA  43                 	db	67	;'C'
   567  00F4EB  6C                 	db	108	;'l'
   568  00F4EC  65                 	db	101	;'e'
   569  00F4ED  61                 	db	97	;'a'
   570  00F4EE  72                 	db	114	;'r'
   571  00F4EF  73                 	db	115	;'s'
   572  00F4F0  20                 	db	32
   573  00F4F1  74                 	db	116	;'t'
   574  00F4F2  68                 	db	104	;'h'
   575  00F4F3  65                 	db	101	;'e'
   576  00F4F4  20                 	db	32
   577  00F4F5  74                 	db	116	;'t'
   578  00F4F6  65                 	db	101	;'e'
   579  00F4F7  72                 	db	114	;'r'
   580  00F4F8  6D                 	db	109	;'m'
   581  00F4F9  69                 	db	105	;'i'
   582  00F4FA  6E                 	db	110	;'n'
   583  00F4FB  61                 	db	97	;'a'
   584  00F4FC  6C                 	db	108	;'l'
   585  00F4FD  20                 	db	32
   586  00F4FE  61                 	db	97	;'a'
   587  00F4FF  6E                 	db	110	;'n'
   588  00F500  64                 	db	100	;'d'
   589  00F501  20                 	db	32
   590  00F502  72                 	db	114	;'r'
   591  00F503  65                 	db	101	;'e'
   592  00F504  73                 	db	115	;'s'
   593  00F505  65                 	db	101	;'e'
   594  00F506  74                 	db	116	;'t'
   595  00F507  73                 	db	115	;'s'
   596  00F508  20                 	db	32
   597  00F509  74                 	db	116	;'t'
   598  00F50A  68                 	db	104	;'h'
   599  00F50B  65                 	db	101	;'e'
   600  00F50C  20                 	db	32
   601  00F50D  6D                 	db	109	;'m'
   602  00F50E  69                 	db	105	;'i'
   603  00F50F  63                 	db	99	;'c'
   604  00F510  72                 	db	114	;'r'
   605  00F511  6F                 	db	111	;'o'
   606  00F512  0A                 	db	10
   607  00F513  0D                 	db	13
   608  00F514  20                 	db	32
   609  00F515  20                 	db	32
   610  00F516  20                 	db	32
   611  00F517  43                 	db	67	;'C'
   612  00F518  6C                 	db	108	;'l'
   613  00F519  65                 	db	101	;'e'
   614  00F51A  61                 	db	97	;'a'
   615  00F51B  72                 	db	114	;'r'
   616  00F51C  3A                 	db	58	;':'
   617  00F51D  20                 	db	32
   618  00F51E  43                 	db	67	;'C'
   619  00F51F  6C                 	db	108	;'l'
   620  00F520  65                 	db	101	;'e'
   621  00F521  61                 	db	97	;'a'
   622  00F522  72                 	db	114	;'r'
   623  00F523  73                 	db	115	;'s'
   624  00F524  20                 	db	32
   625  00F525  74                 	db	116	;'t'
   626  00F526  68                 	db	104	;'h'
   627  00F527  65                 	db	101	;'e'
   628  00F528  20                 	db	32
   629  00F529  74                 	db	116	;'t'
   630  00F52A  65                 	db	101	;'e'
   631  00F52B  72                 	db	114	;'r'
   632  00F52C  6D                 	db	109	;'m'
   633  00F52D  69                 	db	105	;'i'
   634  00F52E  6E                 	db	110	;'n'
   635  00F52F  61                 	db	97	;'a'
   636  00F530  6C                 	db	108	;'l'
   637  00F531  20                 	db	32
   638  00F532  62                 	db	98	;'b'
   639  00F533  75                 	db	117	;'u'
   640  00F534  74                 	db	116	;'t'
   641  00F535  20                 	db	32
   642  00F536  64                 	db	100	;'d'
   643  00F537  6F                 	db	111	;'o'
   644  00F538  65                 	db	101	;'e'
   645  00F539  73                 	db	115	;'s'
   646  00F53A  6E                 	db	110	;'n'
   647  00F53B  27                 	db	39
   648  00F53C  74                 	db	116	;'t'
   649  00F53D  20                 	db	32
   650  00F53E  72                 	db	114	;'r'
   651  00F53F  65                 	db	101	;'e'
   652  00F540  73                 	db	115	;'s'
   653  00F541  65                 	db	101	;'e'
   654  00F542  74                 	db	116	;'t'
   655  00F543  20                 	db	32
   656  00F544  74                 	db	116	;'t'
   657  00F545  68                 	db	104	;'h'
   658  00F546  65                 	db	101	;'e'
   659  00F547  20                 	db	32
   660  00F548  6D                 	db	109	;'m'
   661  00F549  69                 	db	105	;'i'
   662  00F54A  63                 	db	99	;'c'
   663  00F54B  72                 	db	114	;'r'
   664  00F54C  6F                 	db	111	;'o'
   665  00F54D  0A                 	db	10
   666  00F54E  0D                 	db	13
   667  00F54F  20                 	db	32
   668  00F550  20                 	db	32
   669  00F551  20                 	db	32
   670  00F552  2A                 	db	42
   671  00F553  49                 	db	73	;'I'
   672  00F554  44                 	db	68	;'D'
   673  00F555  4E                 	db	78	;'N'
   674  00F556  3F                 	db	63	;'?'
   675  00F557  3A                 	db	58	;':'
   676  00F558  20                 	db	32
   677  00F559  52                 	db	82	;'R'
   678  00F55A  65                 	db	101	;'e'
   679  00F55B  74                 	db	116	;'t'
   680  00F55C  75                 	db	117	;'u'
   681  00F55D  72                 	db	114	;'r'
   682  00F55E  6E                 	db	110	;'n'
   683  00F55F  73                 	db	115	;'s'
   684  00F560  20                 	db	32
   685  00F561  64                 	db	100	;'d'
   686  00F562  65                 	db	101	;'e'
   687  00F563  76                 	db	118	;'v'
   688  00F564  69                 	db	105	;'i'
   689  00F565  63                 	db	99	;'c'
   690  00F566  65                 	db	101	;'e'
   691  00F567  20                 	db	32
   692  00F568  69                 	db	105	;'i'
   693  00F569  64                 	db	100	;'d'
   694  00F56A  65                 	db	101	;'e'
   695  00F56B  6E                 	db	110	;'n'
   696  00F56C  74                 	db	116	;'t'
   697  00F56D  69                 	db	105	;'i'
   698  00F56E  66                 	db	102	;'f'
   699  00F56F  69                 	db	105	;'i'
   700  00F570  63                 	db	99	;'c'
   701  00F571  61                 	db	97	;'a'
   702  00F572  74                 	db	116	;'t'
   703  00F573  69                 	db	105	;'i'
   704  00F574  6F                 	db	111	;'o'
   705  00F575  6E                 	db	110	;'n'
   706  00F576  0A                 	db	10
   707  00F577  0D                 	db	13
   708  00F578  20                 	db	32
   709  00F579  20                 	db	32
   710  00F57A  20                 	db	32
   711  00F57B  4D                 	db	77	;'M'
   712  00F57C  65                 	db	101	;'e'
   713  00F57D  61                 	db	97	;'a'
   714  00F57E  73                 	db	115	;'s'
   715  00F57F  75                 	db	117	;'u'
   716  00F580  72                 	db	114	;'r'
   717  00F581  65                 	db	101	;'e'
   718  00F582  20                 	db	32
   719  00F583  50                 	db	80	;'P'
   720  00F584  4F                 	db	79	;'O'
   721  00F585  53                 	db	83	;'S'
   722  00F586  33                 	db	51	;'3'
   723  00F587  50                 	db	80	;'P'
   724  00F588  33                 	db	51	;'3'
   725  00F589  3F                 	db	63	;'?'
   726  00F58A  3A                 	db	58	;':'
   727  00F58B  20                 	db	32
   728  00F58C  52                 	db	82	;'R'
   729  00F58D  65                 	db	101	;'e'
   730  00F58E  74                 	db	116	;'t'
   731  00F58F  75                 	db	117	;'u'
   732  00F590  72                 	db	114	;'r'
   733  00F591  6E                 	db	110	;'n'
   734  00F592  73                 	db	115	;'s'
   735  00F593  20                 	db	32
   736  00F594  2B                 	db	43
   737  00F595  33                 	db	51	;'3'
   738  00F596  2E                 	db	46
   739  00F597  33                 	db	51	;'3'
   740  00F598  56                 	db	86	;'V'
   741  00F599  20                 	db	32
   742  00F59A  41                 	db	65	;'A'
   743  00F59B  44                 	db	68	;'D'
   744  00F59C  43                 	db	67	;'C'
   745  00F59D  20                 	db	32
   746  00F59E  43                 	db	67	;'C'
   747  00F59F  6F                 	db	111	;'o'
   748  00F5A0  6E                 	db	110	;'n'
   749  00F5A1  76                 	db	118	;'v'
   750  00F5A2  65                 	db	101	;'e'
   751  00F5A3  72                 	db	114	;'r'
   752  00F5A4  73                 	db	115	;'s'
   753  00F5A5  69                 	db	105	;'i'
   754  00F5A6  6F                 	db	111	;'o'
   755  00F5A7  6E                 	db	110	;'n'
   756  00F5A8  20                 	db	32
   757  00F5A9  69                 	db	105	;'i'
   758  00F5AA  6E                 	db	110	;'n'
   759  00F5AB  20                 	db	32
   760  00F5AC  76                 	db	118	;'v'
   761  00F5AD  6F                 	db	111	;'o'
   762  00F5AE  6C                 	db	108	;'l'
   763  00F5AF  74                 	db	116	;'t'
   764  00F5B0  73                 	db	115	;'s'
   765  00F5B1  0A                 	db	10
   766  00F5B2  0D                 	db	13
   767  00F5B3  20                 	db	32
   768  00F5B4  20                 	db	32
   769  00F5B5  20                 	db	32
   770  00F5B6  4D                 	db	77	;'M'
   771  00F5B7  65                 	db	101	;'e'
   772  00F5B8  61                 	db	97	;'a'
   773  00F5B9  73                 	db	115	;'s'
   774  00F5BA  75                 	db	117	;'u'
   775  00F5BB  72                 	db	114	;'r'
   776  00F5BC  65                 	db	101	;'e'
   777  00F5BD  20                 	db	32
   778  00F5BE  50                 	db	80	;'P'
   779  00F5BF  4F                 	db	79	;'O'
   780  00F5C0  53                 	db	83	;'S'
   781  00F5C1  31                 	db	49	;'1'
   782  00F5C2  32                 	db	50	;'2'
   783  00F5C3  3F                 	db	63	;'?'
   784  00F5C4  3A                 	db	58	;':'
   785  00F5C5  20                 	db	32
   786  00F5C6  52                 	db	82	;'R'
   787  00F5C7  65                 	db	101	;'e'
   788  00F5C8  74                 	db	116	;'t'
   789  00F5C9  75                 	db	117	;'u'
   790  00F5CA  72                 	db	114	;'r'
   791  00F5CB  6E                 	db	110	;'n'
   792  00F5CC  73                 	db	115	;'s'
   793  00F5CD  20                 	db	32
   794  00F5CE  2B                 	db	43
   795  00F5CF  31                 	db	49	;'1'
   796  00F5D0  32                 	db	50	;'2'
   797  00F5D1  56                 	db	86	;'V'
   798  00F5D2  20                 	db	32
   799  00F5D3  41                 	db	65	;'A'
   800  00F5D4  44                 	db	68	;'D'
   801  00F5D5  43                 	db	67	;'C'
   802  00F5D6  20                 	db	32
   803  00F5D7  43                 	db	67	;'C'
   804  00F5D8  6F                 	db	111	;'o'
   805  00F5D9  6E                 	db	110	;'n'
   806  00F5DA  76                 	db	118	;'v'
   807  00F5DB  65                 	db	101	;'e'
   808  00F5DC  72                 	db	114	;'r'
   809  00F5DD  73                 	db	115	;'s'
   810  00F5DE  69                 	db	105	;'i'
   811  00F5DF  6F                 	db	111	;'o'
   812  00F5E0  6E                 	db	110	;'n'
   813  00F5E1  20                 	db	32
   814  00F5E2  69                 	db	105	;'i'
   815  00F5E3  6E                 	db	110	;'n'
   816  00F5E4  20                 	db	32
   817  00F5E5  76                 	db	118	;'v'
   818  00F5E6  6F                 	db	111	;'o'
   819  00F5E7  6C                 	db	108	;'l'
   820  00F5E8  74                 	db	116	;'t'
   821  00F5E9  73                 	db	115	;'s'
   822  00F5EA  0A                 	db	10
   823  00F5EB  0D                 	db	13
   824  00F5EC  20                 	db	32
   825  00F5ED  20                 	db	32
   826  00F5EE  20                 	db	32
   827  00F5EF  4D                 	db	77	;'M'
   828  00F5F0  65                 	db	101	;'e'
   829  00F5F1  61                 	db	97	;'a'
   830  00F5F2  73                 	db	115	;'s'
   831  00F5F3  75                 	db	117	;'u'
   832  00F5F4  72                 	db	114	;'r'
   833  00F5F5  65                 	db	101	;'e'
   834  00F5F6  20                 	db	32
   835  00F5F7  44                 	db	68	;'D'
   836  00F5F8  69                 	db	105	;'i'
   837  00F5F9  65                 	db	101	;'e'
   838  00F5FA  20                 	db	32
   839  00F5FB  54                 	db	84	;'T'
   840  00F5FC  65                 	db	101	;'e'
   841  00F5FD  6D                 	db	109	;'m'
   842  00F5FE  70                 	db	112	;'p'
   843  00F5FF  3F                 	db	63	;'?'
   844  00F600  3A                 	db	58	;':'
   845  00F601  20                 	db	32
   846  00F602  52                 	db	82	;'R'
   847  00F603  65                 	db	101	;'e'
   848  00F604  74                 	db	116	;'t'
   849  00F605  75                 	db	117	;'u'
   850  00F606  72                 	db	114	;'r'
   851  00F607  6E                 	db	110	;'n'
   852  00F608  73                 	db	115	;'s'
   853  00F609  20                 	db	32
   854  00F60A  74                 	db	116	;'t'
   855  00F60B  68                 	db	104	;'h'
   856  00F60C  65                 	db	101	;'e'
   857  00F60D  20                 	db	32
   858  00F60E  6D                 	db	109	;'m'
   859  00F60F  69                 	db	105	;'i'
   860  00F610  63                 	db	99	;'c'
   861  00F611  72                 	db	114	;'r'
   862  00F612  6F                 	db	111	;'o'
   863  00F613  63                 	db	99	;'c'
   864  00F614  6F                 	db	111	;'o'
   865  00F615  6E                 	db	110	;'n'
   866  00F616  74                 	db	116	;'t'
   867  00F617  72                 	db	114	;'r'
   868  00F618  6F                 	db	111	;'o'
   869  00F619  6C                 	db	108	;'l'
   870  00F61A  6C                 	db	108	;'l'
   871  00F61B  65                 	db	101	;'e'
   872  00F61C  72                 	db	114	;'r'
   873  00F61D  20                 	db	32
   874  00F61E  64                 	db	100	;'d'
   875  00F61F  69                 	db	105	;'i'
   876  00F620  65                 	db	101	;'e'
   877  00F621  20                 	db	32
   878  00F622  74                 	db	116	;'t'
   879  00F623  65                 	db	101	;'e'
   880  00F624  6D                 	db	109	;'m'
   881  00F625  70                 	db	112	;'p'
   882  00F626  65                 	db	101	;'e'
   883  00F627  72                 	db	114	;'r'
   884  00F628  61                 	db	97	;'a'
   885  00F629  74                 	db	116	;'t'
   886  00F62A  75                 	db	117	;'u'
   887  00F62B  72                 	db	114	;'r'
   888  00F62C  65                 	db	101	;'e'
   889  00F62D  20                 	db	32
   890  00F62E  69                 	db	105	;'i'
   891  00F62F  6E                 	db	110	;'n'
   892  00F630  20                 	db	32
   893  00F631  64                 	db	100	;'d'
   894  00F632  65                 	db	101	;'e'
   895  00F633  67                 	db	103	;'g'
   896  00F634  72                 	db	114	;'r'
   897  00F635  65                 	db	101	;'e'
   898  00F636  65                 	db	101	;'e'
   899  00F637  73                 	db	115	;'s'
   900  00F638  20                 	db	32
   901  00F639  43                 	db	67	;'C'
   902  00F63A  0A                 	db	10
   903  00F63B  0D                 	db	13
   904  00F63C  20                 	db	32
   905  00F63D  20                 	db	32
   906  00F63E  20                 	db	32
   907  00F63F  4D                 	db	77	;'M'
   908  00F640  65                 	db	101	;'e'
   909  00F641  61                 	db	97	;'a'
   910  00F642  73                 	db	115	;'s'
   911  00F643  75                 	db	117	;'u'
   912  00F644  72                 	db	114	;'r'
   913  00F645  65                 	db	101	;'e'
   914  00F646  20                 	db	32
   915  00F647  44                 	db	68	;'D'
   916  00F648  65                 	db	101	;'e'
   917  00F649  74                 	db	116	;'t'
   918  00F64A  65                 	db	101	;'e'
   919  00F64B  63                 	db	99	;'c'
   920  00F64C  74                 	db	116	;'t'
   921  00F64D  65                 	db	101	;'e'
   922  00F64E  64                 	db	100	;'d'
   923  00F64F  20                 	db	32
   924  00F650  43                 	db	67	;'C'
   925  00F651  75                 	db	117	;'u'
   926  00F652  72                 	db	114	;'r'
   927  00F653  72                 	db	114	;'r'
   928  00F654  65                 	db	101	;'e'
   929  00F655  6E                 	db	110	;'n'
   930  00F656  74                 	db	116	;'t'
   931  00F657  3F                 	db	63	;'?'
   932  00F658  3A                 	db	58	;':'
   933  00F659  20                 	db	32
   934  00F65A  52                 	db	82	;'R'
   935  00F65B  65                 	db	101	;'e'
   936  00F65C  74                 	db	116	;'t'
   937  00F65D  75                 	db	117	;'u'
   938  00F65E  72                 	db	114	;'r'
   939  00F65F  6E                 	db	110	;'n'
   940  00F660  73                 	db	115	;'s'
   941  00F661  20                 	db	32
   942  00F662  6D                 	db	109	;'m'
   943  00F663  65                 	db	101	;'e'
   944  00F664  61                 	db	97	;'a'
   945  00F665  73                 	db	115	;'s'
   946  00F666  75                 	db	117	;'u'
   947  00F667  72                 	db	114	;'r'
   948  00F668  65                 	db	101	;'e'
   949  00F669  64                 	db	100	;'d'
   950  00F66A  20                 	db	32
   951  00F66B  6F                 	db	111	;'o'
   952  00F66C  75                 	db	117	;'u'
   953  00F66D  74                 	db	116	;'t'
   954  00F66E  70                 	db	112	;'p'
   955  00F66F  75                 	db	117	;'u'
   956  00F670  74                 	db	116	;'t'
   957  00F671  20                 	db	32
   958  00F672  63                 	db	99	;'c'
   959  00F673  75                 	db	117	;'u'
   960  00F674  72                 	db	114	;'r'
   961  00F675  72                 	db	114	;'r'
   962  00F676  65                 	db	101	;'e'
   963  00F677  6E                 	db	110	;'n'
   964  00F678  74                 	db	116	;'t'
   965  00F679  20                 	db	32
   966  00F67A  69                 	db	105	;'i'
   967  00F67B  6E                 	db	110	;'n'
   968  00F67C  20                 	db	32
   969  00F67D  61                 	db	97	;'a'
   970  00F67E  6D                 	db	109	;'m'
   971  00F67F  70                 	db	112	;'p'
   972  00F680  73                 	db	115	;'s'
   973  00F681  20                 	db	32
   974  00F682  61                 	db	97	;'a'
   975  00F683  73                 	db	115	;'s'
   976  00F684  20                 	db	32
   977  00F685  73                 	db	115	;'s'
   978  00F686  65                 	db	101	;'e'
   979  00F687  65                 	db	101	;'e'
   980  00F688  6E                 	db	110	;'n'
   981  00F689  20                 	db	32
   982  00F68A  62                 	db	98	;'b'
   983  00F68B  79                 	db	121	;'y'
   984  00F68C  20                 	db	32
   985  00F68D  41                 	db	65	;'A'
   986  00F68E  44                 	db	68	;'D'
   987  00F68F  43                 	db	67	;'C'
   988  00F690  0A                 	db	10
   989  00F691  0D                 	db	13
   990  00F692  20                 	db	32
   991  00F693  20                 	db	32
   992  00F694  20                 	db	32
   993  00F695  4D                 	db	77	;'M'
   994  00F696  65                 	db	101	;'e'
   995  00F697  61                 	db	97	;'a'
   996  00F698  73                 	db	115	;'s'
   997  00F699  75                 	db	117	;'u'
   998  00F69A  72                 	db	114	;'r'
   999  00F69B  65                 	db	101	;'e'
  1000  00F69C  20                 	db	32
  1001  00F69D  52                 	db	82	;'R'
  1002  00F69E  4D                 	db	77	;'M'
  1003  00F69F  53                 	db	83	;'S'
  1004  00F6A0  20                 	db	32
  1005  00F6A1  43                 	db	67	;'C'
  1006  00F6A2  75                 	db	117	;'u'
  1007  00F6A3  72                 	db	114	;'r'
  1008  00F6A4  72                 	db	114	;'r'
  1009  00F6A5  65                 	db	101	;'e'
  1010  00F6A6  6E                 	db	110	;'n'
  1011  00F6A7  74                 	db	116	;'t'
  1012  00F6A8  3F                 	db	63	;'?'
  1013  00F6A9  3A                 	db	58	;':'
  1014  00F6AA  20                 	db	32
  1015  00F6AB  52                 	db	82	;'R'
  1016  00F6AC  65                 	db	101	;'e'
  1017  00F6AD  74                 	db	116	;'t'
  1018  00F6AE  75                 	db	117	;'u'
  1019  00F6AF  72                 	db	114	;'r'
  1020  00F6B0  6E                 	db	110	;'n'
  1021  00F6B1  73                 	db	115	;'s'
  1022  00F6B2  20                 	db	32
  1023  00F6B3  74                 	db	116	;'t'
  1024  00F6B4  68                 	db	104	;'h'
  1025  00F6B5  65                 	db	101	;'e'
  1026  00F6B6  20                 	db	32
  1027  00F6B7  63                 	db	99	;'c'
  1028  00F6B8  61                 	db	97	;'a'
  1029  00F6B9  6C                 	db	108	;'l'
  1030  00F6BA  63                 	db	99	;'c'
  1031  00F6BB  75                 	db	117	;'u'
  1032  00F6BC  6C                 	db	108	;'l'
  1033  00F6BD  61                 	db	97	;'a'
  1034  00F6BE  74                 	db	116	;'t'
  1035  00F6BF  65                 	db	101	;'e'
  1036  00F6C0  64                 	db	100	;'d'
  1037  00F6C1  20                 	db	32
  1038  00F6C2  52                 	db	82	;'R'
  1039  00F6C3  4D                 	db	77	;'M'
  1040  00F6C4  53                 	db	83	;'S'
  1041  00F6C5  20                 	db	32
  1042  00F6C6  6F                 	db	111	;'o'
  1043  00F6C7  75                 	db	117	;'u'
  1044  00F6C8  74                 	db	116	;'t'
  1045  00F6C9  70                 	db	112	;'p'
  1046  00F6CA  75                 	db	117	;'u'
  1047  00F6CB  74                 	db	116	;'t'
  1048  00F6CC  20                 	db	32
  1049  00F6CD  63                 	db	99	;'c'
  1050  00F6CE  75                 	db	117	;'u'
  1051  00F6CF  72                 	db	114	;'r'
  1052  00F6D0  72                 	db	114	;'r'
  1053  00F6D1  65                 	db	101	;'e'
  1054  00F6D2  6E                 	db	110	;'n'
  1055  00F6D3  74                 	db	116	;'t'
  1056  00F6D4  20                 	db	32
  1057  00F6D5  66                 	db	102	;'f'
  1058  00F6D6  72                 	db	114	;'r'
  1059  00F6D7  6F                 	db	111	;'o'
  1060  00F6D8  6D                 	db	109	;'m'
  1061  00F6D9  20                 	db	32
  1062  00F6DA  6D                 	db	109	;'m'
  1063  00F6DB  65                 	db	101	;'e'
  1064  00F6DC  61                 	db	97	;'a'
  1065  00F6DD  73                 	db	115	;'s'
  1066  00F6DE  75                 	db	117	;'u'
  1067  00F6DF  72                 	db	114	;'r'
  1068  00F6E0  65                 	db	101	;'e'
  1069  00F6E1  6D                 	db	109	;'m'
  1070  00F6E2  65                 	db	101	;'e'
  1071  00F6E3  6E                 	db	110	;'n'
  1072  00F6E4  74                 	db	116	;'t'
  1073  00F6E5  73                 	db	115	;'s'
  1074  00F6E6  20                 	db	32
  1075  00F6E7  61                 	db	97	;'a'
  1076  00F6E8  6E                 	db	110	;'n'
  1077  00F6E9  64                 	db	100	;'d'
  1078  00F6EA  20                 	db	32
  1079  00F6EB  54                 	db	84	;'T'
  1080  00F6EC  52                 	db	82	;'R'
  1081  00F6ED  49                 	db	73	;'I'
  1082  00F6EE  41                 	db	65	;'A'
  1083  00F6EF  43                 	db	67	;'C'
  1084  00F6F0  20                 	db	32
  1085  00F6F1  66                 	db	102	;'f'
  1086  00F6F2  69                 	db	105	;'i'
  1087  00F6F3  72                 	db	114	;'r'
  1088  00F6F4  69                 	db	105	;'i'
  1089  00F6F5  6E                 	db	110	;'n'
  1090  00F6F6  67                 	db	103	;'g'
  1091  00F6F7  20                 	db	32
  1092  00F6F8  61                 	db	97	;'a'
  1093  00F6F9  6E                 	db	110	;'n'
  1094  00F6FA  67                 	db	103	;'g'
  1095  00F6FB  6C                 	db	108	;'l'
  1096  00F6FC  65                 	db	101	;'e'
  1097  00F6FD  0A                 	db	10
  1098  00F6FE  0D                 	db	13
  1099  00F6FF  20                 	db	32
  1100  00F700  20                 	db	32
  1101  00F701  20                 	db	32
  1102  00F702  4D                 	db	77	;'M'
  1103  00F703  65                 	db	101	;'e'
  1104  00F704  61                 	db	97	;'a'
  1105  00F705  73                 	db	115	;'s'
  1106  00F706  75                 	db	117	;'u'
  1107  00F707  72                 	db	114	;'r'
  1108  00F708  65                 	db	101	;'e'
  1109  00F709  20                 	db	32
  1110  00F70A  52                 	db	82	;'R'
  1111  00F70B  4D                 	db	77	;'M'
  1112  00F70C  53                 	db	83	;'S'
  1113  00F70D  20                 	db	32
  1114  00F70E  56                 	db	86	;'V'
  1115  00F70F  6F                 	db	111	;'o'
  1116  00F710  6C                 	db	108	;'l'
  1117  00F711  74                 	db	116	;'t'
  1118  00F712  61                 	db	97	;'a'
  1119  00F713  67                 	db	103	;'g'
  1120  00F714  65                 	db	101	;'e'
  1121  00F715  3F                 	db	63	;'?'
  1122  00F716  3A                 	db	58	;':'
  1123  00F717  20                 	db	32
  1124  00F718  52                 	db	82	;'R'
  1125  00F719  65                 	db	101	;'e'
  1126  00F71A  74                 	db	116	;'t'
  1127  00F71B  75                 	db	117	;'u'
  1128  00F71C  72                 	db	114	;'r'
  1129  00F71D  6E                 	db	110	;'n'
  1130  00F71E  73                 	db	115	;'s'
  1131  00F71F  20                 	db	32
  1132  00F720  74                 	db	116	;'t'
  1133  00F721  68                 	db	104	;'h'
  1134  00F722  65                 	db	101	;'e'
  1135  00F723  20                 	db	32
  1136  00F724  63                 	db	99	;'c'
  1137  00F725  61                 	db	97	;'a'
  1138  00F726  6C                 	db	108	;'l'
  1139  00F727  63                 	db	99	;'c'
  1140  00F728  75                 	db	117	;'u'
  1141  00F729  6C                 	db	108	;'l'
  1142  00F72A  61                 	db	97	;'a'
  1143  00F72B  74                 	db	116	;'t'
  1144  00F72C  65                 	db	101	;'e'
  1145  00F72D  64                 	db	100	;'d'
  1146  00F72E  20                 	db	32
  1147  00F72F  52                 	db	82	;'R'
  1148  00F730  4D                 	db	77	;'M'
  1149  00F731  53                 	db	83	;'S'
  1150  00F732  20                 	db	32
  1151  00F733  6F                 	db	111	;'o'
  1152  00F734  75                 	db	117	;'u'
  1153  00F735  74                 	db	116	;'t'
  1154  00F736  70                 	db	112	;'p'
  1155  00F737  75                 	db	117	;'u'
  1156  00F738  74                 	db	116	;'t'
  1157  00F739  20                 	db	32
  1158  00F73A  76                 	db	118	;'v'
  1159  00F73B  6F                 	db	111	;'o'
  1160  00F73C  6C                 	db	108	;'l'
  1161  00F73D  74                 	db	116	;'t'
  1162  00F73E  61                 	db	97	;'a'
  1163  00F73F  67                 	db	103	;'g'
  1164  00F740  65                 	db	101	;'e'
  1165  00F741  20                 	db	32
  1166  00F742  66                 	db	102	;'f'
  1167  00F743  72                 	db	114	;'r'
  1168  00F744  6F                 	db	111	;'o'
  1169  00F745  6D                 	db	109	;'m'
  1170  00F746  20                 	db	32
  1171  00F747  54                 	db	84	;'T'
  1172  00F748  52                 	db	82	;'R'
  1173  00F749  49                 	db	73	;'I'
  1174  00F74A  41                 	db	65	;'A'
  1175  00F74B  43                 	db	67	;'C'
  1176  00F74C  20                 	db	32
  1177  00F74D  66                 	db	102	;'f'
  1178  00F74E  69                 	db	105	;'i'
  1179  00F74F  72                 	db	114	;'r'
  1180  00F750  69                 	db	105	;'i'
  1181  00F751  6E                 	db	110	;'n'
  1182  00F752  67                 	db	103	;'g'
  1183  00F753  20                 	db	32
  1184  00F754  61                 	db	97	;'a'
  1185  00F755  6E                 	db	110	;'n'
  1186  00F756  67                 	db	103	;'g'
  1187  00F757  6C                 	db	108	;'l'
  1188  00F758  65                 	db	101	;'e'
  1189  00F759  0A                 	db	10
  1190  00F75A  0D                 	db	13
  1191  00F75B  20                 	db	32
  1192  00F75C  20                 	db	32
  1193  00F75D  20                 	db	32
  1194  00F75E  4D                 	db	77	;'M'
  1195  00F75F  65                 	db	101	;'e'
  1196  00F760  61                 	db	97	;'a'
  1197  00F761  73                 	db	115	;'s'
  1198  00F762  75                 	db	117	;'u'
  1199  00F763  72                 	db	114	;'r'
  1200  00F764  65                 	db	101	;'e'
  1201  00F765  20                 	db	32
  1202  00F766  46                 	db	70	;'F'
  1203  00F767  56                 	db	86	;'V'
  1204  00F768  52                 	db	82	;'R'
  1205  00F769  3F                 	db	63	;'?'
  1206  00F76A  3A                 	db	58	;':'
  1207  00F76B  20                 	db	32
  1208  00F76C  52                 	db	82	;'R'
  1209  00F76D  65                 	db	101	;'e'
  1210  00F76E  74                 	db	116	;'t'
  1211  00F76F  75                 	db	117	;'u'
  1212  00F770  72                 	db	114	;'r'
  1213  00F771  6E                 	db	110	;'n'
  1214  00F772  73                 	db	115	;'s'
  1215  00F773  20                 	db	32
  1216  00F774  74                 	db	116	;'t'
  1217  00F775  68                 	db	104	;'h'
  1218  00F776  65                 	db	101	;'e'
  1219  00F777  20                 	db	32
  1220  00F778  69                 	db	105	;'i'
  1221  00F779  6E                 	db	110	;'n'
  1222  00F77A  74                 	db	116	;'t'
  1223  00F77B  65                 	db	101	;'e'
  1224  00F77C  72                 	db	114	;'r'
  1225  00F77D  6E                 	db	110	;'n'
  1226  00F77E  61                 	db	97	;'a'
  1227  00F77F  6C                 	db	108	;'l'
  1228  00F780  20                 	db	32
  1229  00F781  66                 	db	102	;'f'
  1230  00F782  69                 	db	105	;'i'
  1231  00F783  78                 	db	120	;'x'
  1232  00F784  65                 	db	101	;'e'
  1233  00F785  64                 	db	100	;'d'
  1234  00F786  20                 	db	32
  1235  00F787  76                 	db	118	;'v'
  1236  00F788  6F                 	db	111	;'o'
  1237  00F789  6C                 	db	108	;'l'
  1238  00F78A  74                 	db	116	;'t'
  1239  00F78B  61                 	db	97	;'a'
  1240  00F78C  67                 	db	103	;'g'
  1241  00F78D  65                 	db	101	;'e'
  1242  00F78E  20                 	db	32
  1243  00F78F  72                 	db	114	;'r'
  1244  00F790  65                 	db	101	;'e'
  1245  00F791  66                 	db	102	;'f'
  1246  00F792  65                 	db	101	;'e'
  1247  00F793  72                 	db	114	;'r'
  1248  00F794  65                 	db	101	;'e'
  1249  00F795  6E                 	db	110	;'n'
  1250  00F796  63                 	db	99	;'c'
  1251  00F797  65                 	db	101	;'e'
  1252  00F798  20                 	db	32
  1253  00F799  62                 	db	98	;'b'
  1254  00F79A  75                 	db	117	;'u'
  1255  00F79B  66                 	db	102	;'f'
  1256  00F79C  66                 	db	102	;'f'
  1257  00F79D  65                 	db	101	;'e'
  1258  00F79E  72                 	db	114	;'r'
  1259  00F79F  20                 	db	32
  1260  00F7A0  31                 	db	49	;'1'
  1261  00F7A1  20                 	db	32
  1262  00F7A2  6F                 	db	111	;'o'
  1263  00F7A3  75                 	db	117	;'u'
  1264  00F7A4  74                 	db	116	;'t'
  1265  00F7A5  70                 	db	112	;'p'
  1266  00F7A6  75                 	db	117	;'u'
  1267  00F7A7  74                 	db	116	;'t'
  1268  00F7A8  20                 	db	32
  1269  00F7A9  69                 	db	105	;'i'
  1270  00F7AA  6E                 	db	110	;'n'
  1271  00F7AB  20                 	db	32
  1272  00F7AC  76                 	db	118	;'v'
  1273  00F7AD  6F                 	db	111	;'o'
  1274  00F7AE  6C                 	db	108	;'l'
  1275  00F7AF  74                 	db	116	;'t'
  1276  00F7B0  73                 	db	115	;'s'
  1277  00F7B1  0A                 	db	10
  1278  00F7B2  0D                 	db	13
  1279  00F7B3  20                 	db	32
  1280  00F7B4  20                 	db	32
  1281  00F7B5  20                 	db	32
  1282  00F7B6  4F                 	db	79	;'O'
  1283  00F7B7  6E                 	db	110	;'n'
  1284  00F7B8  20                 	db	32
  1285  00F7B9  54                 	db	84	;'T'
  1286  00F7BA  69                 	db	105	;'i'
  1287  00F7BB  6D                 	db	109	;'m'
  1288  00F7BC  65                 	db	101	;'e'
  1289  00F7BD  3F                 	db	63	;'?'
  1290  00F7BE  3A                 	db	58	;':'
  1291  00F7BF  20                 	db	32
  1292  00F7C0  52                 	db	82	;'R'
  1293  00F7C1  65                 	db	101	;'e'
  1294  00F7C2  74                 	db	116	;'t'
  1295  00F7C3  75                 	db	117	;'u'
  1296  00F7C4  72                 	db	114	;'r'
  1297  00F7C5  6E                 	db	110	;'n'
  1298  00F7C6  73                 	db	115	;'s'
  1299  00F7C7  20                 	db	32
  1300  00F7C8  64                 	db	100	;'d'
  1301  00F7C9  65                 	db	101	;'e'
  1302  00F7CA  76                 	db	118	;'v'
  1303  00F7CB  69                 	db	105	;'i'
  1304  00F7CC  63                 	db	99	;'c'
  1305  00F7CD  65                 	db	101	;'e'
  1306  00F7CE  20                 	db	32
  1307  00F7CF  6F                 	db	111	;'o'
  1308  00F7D0  6E                 	db	110	;'n'
  1309  00F7D1  20                 	db	32
  1310  00F7D2  74                 	db	116	;'t'
  1311  00F7D3  69                 	db	105	;'i'
  1312  00F7D4  6D                 	db	109	;'m'
  1313  00F7D5  65                 	db	101	;'e'
  1314  00F7D6  20                 	db	32
  1315  00F7D7  73                 	db	115	;'s'
  1316  00F7D8  69                 	db	105	;'i'
  1317  00F7D9  6E                 	db	110	;'n'
  1318  00F7DA  63                 	db	99	;'c'
  1319  00F7DB  65                 	db	101	;'e'
  1320  00F7DC  20                 	db	32
  1321  00F7DD  6C                 	db	108	;'l'
  1322  00F7DE  61                 	db	97	;'a'
  1323  00F7DF  73                 	db	115	;'s'
  1324  00F7E0  74                 	db	116	;'t'
  1325  00F7E1  20                 	db	32
  1326  00F7E2  64                 	db	100	;'d'
  1327  00F7E3  65                 	db	101	;'e'
  1328  00F7E4  76                 	db	118	;'v'
  1329  00F7E5  69                 	db	105	;'i'
  1330  00F7E6  63                 	db	99	;'c'
  1331  00F7E7  65                 	db	101	;'e'
  1332  00F7E8  20                 	db	32
  1333  00F7E9  72                 	db	114	;'r'
  1334  00F7EA  65                 	db	101	;'e'
  1335  00F7EB  73                 	db	115	;'s'
  1336  00F7EC  65                 	db	101	;'e'
  1337  00F7ED  74                 	db	116	;'t'
  1338  00F7EE  0A                 	db	10
  1339  00F7EF  0D                 	db	13
  1340  00F7F0  20                 	db	32
  1341  00F7F1  20                 	db	32
  1342  00F7F2  20                 	db	32
  1343  00F7F3  45                 	db	69	;'E'
  1344  00F7F4  6E                 	db	110	;'n'
  1345  00F7F5  61                 	db	97	;'a'
  1346  00F7F6  62                 	db	98	;'b'
  1347  00F7F7  6C                 	db	108	;'l'
  1348  00F7F8  65                 	db	101	;'e'
  1349  00F7F9  20                 	db	32
  1350  00F7FA  44                 	db	68	;'D'
  1351  00F7FB  69                 	db	105	;'i'
  1352  00F7FC  6D                 	db	109	;'m'
  1353  00F7FD  6D                 	db	109	;'m'
  1354  00F7FE  69                 	db	105	;'i'
  1355  00F7FF  6E                 	db	110	;'n'
  1356  00F800  67                 	db	103	;'g'
  1357  00F801  3A                 	db	58	;':'
  1358  00F802  20                 	db	32
  1359  00F803  45                 	db	69	;'E'
  1360  00F804  6E                 	db	110	;'n'
  1361  00F805  61                 	db	97	;'a'
  1362  00F806  62                 	db	98	;'b'
  1363  00F807  6C                 	db	108	;'l'
  1364  00F808  65                 	db	101	;'e'
  1365  00F809  20                 	db	32
  1366  00F80A  54                 	db	84	;'T'
  1367  00F80B  52                 	db	82	;'R'
  1368  00F80C  49                 	db	73	;'I'
  1369  00F80D  41                 	db	65	;'A'
  1370  00F80E  43                 	db	67	;'C'
  1371  00F80F  20                 	db	32
  1372  00F810  6F                 	db	111	;'o'
  1373  00F811  75                 	db	117	;'u'
  1374  00F812  74                 	db	116	;'t'
  1375  00F813  70                 	db	112	;'p'
  1376  00F814  75                 	db	117	;'u'
  1377  00F815  74                 	db	116	;'t'
  1378  00F816  20                 	db	32
  1379  00F817  64                 	db	100	;'d'
  1380  00F818  69                 	db	105	;'i'
  1381  00F819  6D                 	db	109	;'m'
  1382  00F81A  6D                 	db	109	;'m'
  1383  00F81B  69                 	db	105	;'i'
  1384  00F81C  6E                 	db	110	;'n'
  1385  00F81D  67                 	db	103	;'g'
  1386  00F81E  0A                 	db	10
  1387  00F81F  0D                 	db	13
  1388  00F820  20                 	db	32
  1389  00F821  20                 	db	32
  1390  00F822  20                 	db	32
  1391  00F823  44                 	db	68	;'D'
  1392  00F824  69                 	db	105	;'i'
  1393  00F825  73                 	db	115	;'s'
  1394  00F826  61                 	db	97	;'a'
  1395  00F827  62                 	db	98	;'b'
  1396  00F828  6C                 	db	108	;'l'
  1397  00F829  65                 	db	101	;'e'
  1398  00F82A  20                 	db	32
  1399  00F82B  44                 	db	68	;'D'
  1400  00F82C  69                 	db	105	;'i'
  1401  00F82D  6D                 	db	109	;'m'
  1402  00F82E  6D                 	db	109	;'m'
  1403  00F82F  69                 	db	105	;'i'
  1404  00F830  6E                 	db	110	;'n'
  1405  00F831  67                 	db	103	;'g'
  1406  00F832  3A                 	db	58	;':'
  1407  00F833  20                 	db	32
  1408  00F834  44                 	db	68	;'D'
  1409  00F835  69                 	db	105	;'i'
  1410  00F836  73                 	db	115	;'s'
  1411  00F837  61                 	db	97	;'a'
  1412  00F838  62                 	db	98	;'b'
  1413  00F839  6C                 	db	108	;'l'
  1414  00F83A  65                 	db	101	;'e'
  1415  00F83B  20                 	db	32
  1416  00F83C  54                 	db	84	;'T'
  1417  00F83D  52                 	db	82	;'R'
  1418  00F83E  49                 	db	73	;'I'
  1419  00F83F  41                 	db	65	;'A'
  1420  00F840  43                 	db	67	;'C'
  1421  00F841  20                 	db	32
  1422  00F842  6F                 	db	111	;'o'
  1423  00F843  75                 	db	117	;'u'
  1424  00F844  74                 	db	116	;'t'
  1425  00F845  70                 	db	112	;'p'
  1426  00F846  75                 	db	117	;'u'
  1427  00F847  74                 	db	116	;'t'
  1428  00F848  20                 	db	32
  1429  00F849  64                 	db	100	;'d'
  1430  00F84A  69                 	db	105	;'i'
  1431  00F84B  6D                 	db	109	;'m'
  1432  00F84C  6D                 	db	109	;'m'
  1433  00F84D  69                 	db	105	;'i'
  1434  00F84E  6E                 	db	110	;'n'
  1435  00F84F  67                 	db	103	;'g'
  1436  00F850  0A                 	db	10
  1437  00F851  0D                 	db	13
  1438  00F852  20                 	db	32
  1439  00F853  20                 	db	32
  1440  00F854  20                 	db	32
  1441  00F855  45                 	db	69	;'E'
  1442  00F856  6E                 	db	110	;'n'
  1443  00F857  61                 	db	97	;'a'
  1444  00F858  62                 	db	98	;'b'
  1445  00F859  6C                 	db	108	;'l'
  1446  00F85A  65                 	db	101	;'e'
  1447  00F85B  20                 	db	32
  1448  00F85C  4C                 	db	76	;'L'
  1449  00F85D  6F                 	db	111	;'o'
  1450  00F85E  61                 	db	97	;'a'
  1451  00F85F  64                 	db	100	;'d'
  1452  00F860  3A                 	db	58	;':'
  1453  00F861  20                 	db	32
  1454  00F862  45                 	db	69	;'E'
  1455  00F863  6E                 	db	110	;'n'
  1456  00F864  61                 	db	97	;'a'
  1457  00F865  62                 	db	98	;'b'
  1458  00F866  6C                 	db	108	;'l'
  1459  00F867  65                 	db	101	;'e'
  1460  00F868  73                 	db	115	;'s'
  1461  00F869  20                 	db	32
  1462  00F86A  74                 	db	116	;'t'
  1463  00F86B  68                 	db	104	;'h'
  1464  00F86C  65                 	db	101	;'e'
  1465  00F86D  20                 	db	32
  1466  00F86E  6F                 	db	111	;'o'
  1467  00F86F  75                 	db	117	;'u'
  1468  00F870  74                 	db	116	;'t'
  1469  00F871  70                 	db	112	;'p'
  1470  00F872  75                 	db	117	;'u'
  1471  00F873  74                 	db	116	;'t'
  1472  00F874  20                 	db	32
  1473  00F875  54                 	db	84	;'T'
  1474  00F876  52                 	db	82	;'R'
  1475  00F877  49                 	db	73	;'I'
  1476  00F878  41                 	db	65	;'A'
  1477  00F879  43                 	db	67	;'C'
  1478  00F87A  20                 	db	32
  1479  00F87B  77                 	db	119	;'w'
  1480  00F87C  69                 	db	105	;'i'
  1481  00F87D  74                 	db	116	;'t'
  1482  00F87E  68                 	db	104	;'h'
  1483  00F87F  20                 	db	32
  1484  00F880  6F                 	db	111	;'o'
  1485  00F881  72                 	db	114	;'r'
  1486  00F882  20                 	db	32
  1487  00F883  77                 	db	119	;'w'
  1488  00F884  69                 	db	105	;'i'
  1489  00F885  74                 	db	116	;'t'
  1490  00F886  68                 	db	104	;'h'
  1491  00F887  6F                 	db	111	;'o'
  1492  00F888  75                 	db	117	;'u'
  1493  00F889  74                 	db	116	;'t'
  1494  00F88A  20                 	db	32
  1495  00F88B  64                 	db	100	;'d'
  1496  00F88C  69                 	db	105	;'i'
  1497  00F88D  6D                 	db	109	;'m'
  1498  00F88E  6D                 	db	109	;'m'
  1499  00F88F  69                 	db	105	;'i'
  1500  00F890  6E                 	db	110	;'n'
  1501  00F891  67                 	db	103	;'g'
  1502  00F892  0A                 	db	10
  1503  00F893  0D                 	db	13
  1504  00F894  20                 	db	32
  1505  00F895  20                 	db	32
  1506  00F896  20                 	db	32
  1507  00F897  44                 	db	68	;'D'
  1508  00F898  69                 	db	105	;'i'
  1509  00F899  73                 	db	115	;'s'
  1510  00F89A  61                 	db	97	;'a'
  1511  00F89B  62                 	db	98	;'b'
  1512  00F89C  6C                 	db	108	;'l'
  1513  00F89D  65                 	db	101	;'e'
  1514  00F89E  20                 	db	32
  1515  00F89F  4C                 	db	76	;'L'
  1516  00F8A0  6F                 	db	111	;'o'
  1517  00F8A1  61                 	db	97	;'a'
  1518  00F8A2  64                 	db	100	;'d'
  1519  00F8A3  3A                 	db	58	;':'
  1520  00F8A4  20                 	db	32
  1521  00F8A5  44                 	db	68	;'D'
  1522  00F8A6  69                 	db	105	;'i'
  1523  00F8A7  73                 	db	115	;'s'
  1524  00F8A8  61                 	db	97	;'a'
  1525  00F8A9  62                 	db	98	;'b'
  1526  00F8AA  6C                 	db	108	;'l'
  1527  00F8AB  65                 	db	101	;'e'
  1528  00F8AC  73                 	db	115	;'s'
  1529  00F8AD  20                 	db	32
  1530  00F8AE  74                 	db	116	;'t'
  1531  00F8AF  68                 	db	104	;'h'
  1532  00F8B0  65                 	db	101	;'e'
  1533  00F8B1  20                 	db	32
  1534  00F8B2  6F                 	db	111	;'o'
  1535  00F8B3  75                 	db	117	;'u'
  1536  00F8B4  74                 	db	116	;'t'
  1537  00F8B5  70                 	db	112	;'p'
  1538  00F8B6  75                 	db	117	;'u'
  1539  00F8B7  74                 	db	116	;'t'
  1540  00F8B8  20                 	db	32
  1541  00F8B9  54                 	db	84	;'T'
  1542  00F8BA  52                 	db	82	;'R'
  1543  00F8BB  49                 	db	73	;'I'
  1544  00F8BC  41                 	db	65	;'A'
  1545  00F8BD  43                 	db	67	;'C'
  1546  00F8BE  20                 	db	32
  1547  00F8BF  63                 	db	99	;'c'
  1548  00F8C0  6F                 	db	111	;'o'
  1549  00F8C1  6D                 	db	109	;'m'
  1550  00F8C2  70                 	db	112	;'p'
  1551  00F8C3  6C                 	db	108	;'l'
  1552  00F8C4  65                 	db	101	;'e'
  1553  00F8C5  74                 	db	116	;'t'
  1554  00F8C6  65                 	db	101	;'e'
  1555  00F8C7  6C                 	db	108	;'l'
  1556  00F8C8  79                 	db	121	;'y'
  1557  00F8C9  0A                 	db	10
  1558  00F8CA  0D                 	db	13
  1559  00F8CB  20                 	db	32
  1560  00F8CC  20                 	db	32
  1561  00F8CD  20                 	db	32
  1562  00F8CE  53                 	db	83	;'S'
  1563  00F8CF  65                 	db	101	;'e'
  1564  00F8D0  74                 	db	116	;'t'
  1565  00F8D1  20                 	db	32
  1566  00F8D2  44                 	db	68	;'D'
  1567  00F8D3  69                 	db	105	;'i'
  1568  00F8D4  6D                 	db	109	;'m'
  1569  00F8D5  6D                 	db	109	;'m'
  1570  00F8D6  69                 	db	105	;'i'
  1571  00F8D7  6E                 	db	110	;'n'
  1572  00F8D8  67                 	db	103	;'g'
  1573  00F8D9  20                 	db	32
  1574  00F8DA  50                 	db	80	;'P'
  1575  00F8DB  65                 	db	101	;'e'
  1576  00F8DC  72                 	db	114	;'r'
  1577  00F8DD  63                 	db	99	;'c'
  1578  00F8DE  65                 	db	101	;'e'
  1579  00F8DF  6E                 	db	110	;'n'
  1580  00F8E0  74                 	db	116	;'t'
  1581  00F8E1  61                 	db	97	;'a'
  1582  00F8E2  67                 	db	103	;'g'
  1583  00F8E3  65                 	db	101	;'e'
  1584  00F8E4  20                 	db	32
  1585  00F8E5  3C                 	db	60	;'<'
  1586  00F8E6  78                 	db	120	;'x'
  1587  00F8E7  3E                 	db	62	;'>'
  1588  00F8E8  3A                 	db	58	;':'
  1589  00F8E9  20                 	db	32
  1590  00F8EA  53                 	db	83	;'S'
  1591  00F8EB  65                 	db	101	;'e'
  1592  00F8EC  74                 	db	116	;'t'
  1593  00F8ED  73                 	db	115	;'s'
  1594  00F8EE  20                 	db	32
  1595  00F8EF  74                 	db	116	;'t'
  1596  00F8F0  68                 	db	104	;'h'
  1597  00F8F1  65                 	db	101	;'e'
  1598  00F8F2  20                 	db	32
  1599  00F8F3  6F                 	db	111	;'o'
  1600  00F8F4  75                 	db	117	;'u'
  1601  00F8F5  74                 	db	116	;'t'
  1602  00F8F6  70                 	db	112	;'p'
  1603  00F8F7  75                 	db	117	;'u'
  1604  00F8F8  74                 	db	116	;'t'
  1605  00F8F9  20                 	db	32
  1606  00F8FA  64                 	db	100	;'d'
  1607  00F8FB  69                 	db	105	;'i'
  1608  00F8FC  6D                 	db	109	;'m'
  1609  00F8FD  6D                 	db	109	;'m'
  1610  00F8FE  69                 	db	105	;'i'
  1611  00F8FF  6E                 	db	110	;'n'
  1612  00F900  67                 	db	103	;'g'
  1613  00F901  20                 	db	32
  1614  00F902  70                 	db	112	;'p'
  1615  00F903  65                 	db	101	;'e'
  1616  00F904  72                 	db	114	;'r'
  1617  00F905  63                 	db	99	;'c'
  1618  00F906  65                 	db	101	;'e'
  1619  00F907  6E                 	db	110	;'n'
  1620  00F908  74                 	db	116	;'t'
  1621  00F909  61                 	db	97	;'a'
  1622  00F90A  67                 	db	103	;'g'
  1623  00F90B  65                 	db	101	;'e'
  1624  00F90C  20                 	db	32
  1625  00F90D  61                 	db	97	;'a'
  1626  00F90E  73                 	db	115	;'s'
  1627  00F90F  20                 	db	32
  1628  00F910  78                 	db	120	;'x'
  1629  00F911  20                 	db	32
  1630  00F912  70                 	db	112	;'p'
  1631  00F913  65                 	db	101	;'e'
  1632  00F914  72                 	db	114	;'r'
  1633  00F915  63                 	db	99	;'c'
  1634  00F916  65                 	db	101	;'e'
  1635  00F917  6E                 	db	110	;'n'
  1636  00F918  74                 	db	116	;'t'
  1637  00F919  0A                 	db	10
  1638  00F91A  0D                 	db	13
  1639  00F91B  20                 	db	32
  1640  00F91C  20                 	db	32
  1641  00F91D  20                 	db	32
  1642  00F91E  48                 	db	72	;'H'
  1643  00F91F  65                 	db	101	;'e'
  1644  00F920  6C                 	db	108	;'l'
  1645  00F921  70                 	db	112	;'p'
  1646  00F922  3A                 	db	58	;':'
  1647  00F923  20                 	db	32
  1648  00F924  54                 	db	84	;'T'
  1649  00F925  68                 	db	104	;'h'
  1650  00F926  69                 	db	105	;'i'
  1651  00F927  73                 	db	115	;'s'
  1652  00F928  20                 	db	32
  1653  00F929  6D                 	db	109	;'m'
  1654  00F92A  65                 	db	101	;'e'
  1655  00F92B  73                 	db	115	;'s'
  1656  00F92C  73                 	db	115	;'s'
  1657  00F92D  61                 	db	97	;'a'
  1658  00F92E  67                 	db	103	;'g'
  1659  00F92F  65                 	db	101	;'e'
  1660  00F930  2C                 	db	44
  1661  00F931  20                 	db	32
  1662  00F932  6C                 	db	108	;'l'
  1663  00F933  69                 	db	105	;'i'
  1664  00F934  73                 	db	115	;'s'
  1665  00F935  74                 	db	116	;'t'
  1666  00F936  73                 	db	115	;'s'
  1667  00F937  20                 	db	32
  1668  00F938  63                 	db	99	;'c'
  1669  00F939  6F                 	db	111	;'o'
  1670  00F93A  6D                 	db	109	;'m'
  1671  00F93B  6D                 	db	109	;'m'
  1672  00F93C  61                 	db	97	;'a'
  1673  00F93D  6E                 	db	110	;'n'
  1674  00F93E  64                 	db	100	;'d'
  1675  00F93F  73                 	db	115	;'s'
  1676  00F940  0A                 	db	10
  1677  00F941  0D                 	db	13
  1678  00F942  00                 	db	0
  1679  00F943  20                 	db	32
  1680  00F944  20                 	db	32
  1681  00F945  20                 	db	32
  1682  00F946  20                 	db	32
  1683  00F947  42                 	db	66	;'B'
  1684  00F948  6F                 	db	111	;'o'
  1685  00F949  6F                 	db	111	;'o'
  1686  00F94A  74                 	db	116	;'t'
  1687  00F94B  20                 	db	32
  1688  00F94C  63                 	db	99	;'c'
  1689  00F94D  6F                 	db	111	;'o'
  1690  00F94E  6D                 	db	109	;'m'
  1691  00F94F  70                 	db	112	;'p'
  1692  00F950  6C                 	db	108	;'l'
  1693  00F951  65                 	db	101	;'e'
  1694  00F952  74                 	db	116	;'t'
  1695  00F953  65                 	db	101	;'e'
  1696  00F954  0A                 	db	10
  1697  00F955  0D                 	db	13
  1698  00F956  20                 	db	32
  1699  00F957  20                 	db	32
  1700  00F958  20                 	db	32
  1701  00F959  20                 	db	32
  1702  00F95A  50                 	db	80	;'P'
  1703  00F95B  49                 	db	73	;'I'
  1704  00F95C  43                 	db	67	;'C'
  1705  00F95D  31                 	db	49	;'1'
  1706  00F95E  38                 	db	56	;'8'
  1707  00F95F  46                 	db	70	;'F'
  1708  00F960  36                 	db	54	;'6'
  1709  00F961  37                 	db	55	;'7'
  1710  00F962  4B                 	db	75	;'K'
  1711  00F963  34                 	db	52	;'4'
  1712  00F964  30                 	db	48	;'0'
  1713  00F965  20                 	db	32
  1714  00F966  6D                 	db	109	;'m'
  1715  00F967  54                 	db	84	;'T'
  1716  00F968  6F                 	db	111	;'o'
  1717  00F969  75                 	db	117	;'u'
  1718  00F96A  63                 	db	99	;'c'
  1719  00F96B  68                 	db	104	;'h'
  1720  00F96C  20                 	db	32
  1721  00F96D  54                 	db	84	;'T'
  1722  00F96E  65                 	db	101	;'e'
  1723  00F96F  73                 	db	115	;'s'
  1724  00F970  74                 	db	116	;'t'
  1725  00F971  20                 	db	32
  1726  00F972  42                 	db	66	;'B'
  1727  00F973  6F                 	db	111	;'o'
  1728  00F974  61                 	db	97	;'a'
  1729  00F975  72                 	db	114	;'r'
  1730  00F976  64                 	db	100	;'d'
  1731  00F977  0A                 	db	10
  1732  00F978  0D                 	db	13
  1733  00F979  20                 	db	32
  1734  00F97A  20                 	db	32
  1735  00F97B  20                 	db	32
  1736  00F97C  20                 	db	32
  1737  00F97D  45                 	db	69	;'E'
  1738  00F97E  76                 	db	118	;'v'
  1739  00F97F  61                 	db	97	;'a'
  1740  00F980  6C                 	db	108	;'l'
  1741  00F981  75                 	db	117	;'u'
  1742  00F982  61                 	db	97	;'a'
  1743  00F983  74                 	db	116	;'t'
  1744  00F984  65                 	db	101	;'e'
  1745  00F985  73                 	db	115	;'s'
  1746  00F986  20                 	db	32
  1747  00F987  74                 	db	116	;'t'
  1748  00F988  68                 	db	104	;'h'
  1749  00F989  65                 	db	101	;'e'
  1750  00F98A  20                 	db	32
  1751  00F98B  6D                 	db	109	;'m'
  1752  00F98C  54                 	db	84	;'T'
  1753  00F98D  6F                 	db	111	;'o'
  1754  00F98E  75                 	db	117	;'u'
  1755  00F98F  63                 	db	99	;'c'
  1756  00F990  68                 	db	104	;'h'
  1757  00F991  20                 	db	32
  1758  00F992  63                 	db	99	;'c'
  1759  00F993  61                 	db	97	;'a'
  1760  00F994  70                 	db	112	;'p'
  1761  00F995  61                 	db	97	;'a'
  1762  00F996  63                 	db	99	;'c'
  1763  00F997  69                 	db	105	;'i'
  1764  00F998  74                 	db	116	;'t'
  1765  00F999  69                 	db	105	;'i'
  1766  00F99A  76                 	db	118	;'v'
  1767  00F99B  65                 	db	101	;'e'
  1768  00F99C  20                 	db	32
  1769  00F99D  74                 	db	116	;'t'
  1770  00F99E  6F                 	db	111	;'o'
  1771  00F99F  75                 	db	117	;'u'
  1772  00F9A0  63                 	db	99	;'c'
  1773  00F9A1  68                 	db	104	;'h'
  1774  00F9A2  20                 	db	32
  1775  00F9A3  6C                 	db	108	;'l'
  1776  00F9A4  69                 	db	105	;'i'
  1777  00F9A5  62                 	db	98	;'b'
  1778  00F9A6  72                 	db	114	;'r'
  1779  00F9A7  61                 	db	97	;'a'
  1780  00F9A8  72                 	db	114	;'r'
  1781  00F9A9  79                 	db	121	;'y'
  1782  00F9AA  20                 	db	32
  1783  00F9AB  64                 	db	100	;'d'
  1784  00F9AC  69                 	db	105	;'i'
  1785  00F9AD  73                 	db	115	;'s'
  1786  00F9AE  74                 	db	116	;'t'
  1787  00F9AF  72                 	db	114	;'r'
  1788  00F9B0  69                 	db	105	;'i'
  1789  00F9B1  62                 	db	98	;'b'
  1790  00F9B2  75                 	db	117	;'u'
  1791  00F9B3  74                 	db	116	;'t'
  1792  00F9B4  65                 	db	101	;'e'
  1793  00F9B5  64                 	db	100	;'d'
  1794  00F9B6  20                 	db	32
  1795  00F9B7  62                 	db	98	;'b'
  1796  00F9B8  79                 	db	121	;'y'
  1797  00F9B9  20                 	db	32
  1798  00F9BA  4D                 	db	77	;'M'
  1799  00F9BB  69                 	db	105	;'i'
  1800  00F9BC  63                 	db	99	;'c'
  1801  00F9BD  72                 	db	114	;'r'
  1802  00F9BE  6F                 	db	111	;'o'
  1803  00F9BF  63                 	db	99	;'c'
  1804  00F9C0  68                 	db	104	;'h'
  1805  00F9C1  69                 	db	105	;'i'
  1806  00F9C2  70                 	db	112	;'p'
  1807  00F9C3  0A                 	db	10
  1808  00F9C4  0D                 	db	13
  1809  00F9C5  20                 	db	32
  1810  00F9C6  20                 	db	32
  1811  00F9C7  20                 	db	32
  1812  00F9C8  20                 	db	32
  1813  00F9C9  53                 	db	83	;'S'
  1814  00F9CA  65                 	db	101	;'e'
  1815  00F9CB  74                 	db	116	;'t'
  1816  00F9CC  73                 	db	115	;'s'
  1817  00F9CD  20                 	db	32
  1818  00F9CE  74                 	db	116	;'t'
  1819  00F9CF  68                 	db	104	;'h'
  1820  00F9D0  65                 	db	101	;'e'
  1821  00F9D1  20                 	db	32
  1822  00F9D2  73                 	db	115	;'s'
  1823  00F9D3  74                 	db	116	;'t'
  1824  00F9D4  61                 	db	97	;'a'
  1825  00F9D5  74                 	db	116	;'t'
  1826  00F9D6  65                 	db	101	;'e'
  1827  00F9D7  20                 	db	32
  1828  00F9D8  6F                 	db	111	;'o'
  1829  00F9D9  66                 	db	102	;'f'
  1830  00F9DA  20                 	db	32
  1831  00F9DB  66                 	db	102	;'f'
  1832  00F9DC  69                 	db	105	;'i'
  1833  00F9DD  76                 	db	118	;'v'
  1834  00F9DE  65                 	db	101	;'e'
  1835  00F9DF  20                 	db	32
  1836  00F9E0  4C                 	db	76	;'L'
  1837  00F9E1  45                 	db	69	;'E'
  1838  00F9E2  44                 	db	68	;'D'
  1839  00F9E3  73                 	db	115	;'s'
  1840  00F9E4  20                 	db	32
  1841  00F9E5  62                 	db	98	;'b'
  1842  00F9E6  61                 	db	97	;'a'
  1843  00F9E7  73                 	db	115	;'s'
  1844  00F9E8  65                 	db	101	;'e'
  1845  00F9E9  64                 	db	100	;'d'
  1846  00F9EA  20                 	db	32
  1847  00F9EB  6F                 	db	111	;'o'
  1848  00F9EC  6E                 	db	110	;'n'
  1849  00F9ED  20                 	db	32
  1850  00F9EE  6D                 	db	109	;'m'
  1851  00F9EF  54                 	db	84	;'T'
  1852  00F9F0  6F                 	db	111	;'o'
  1853  00F9F1  75                 	db	117	;'u'
  1854  00F9F2  63                 	db	99	;'c'
  1855  00F9F3  68                 	db	104	;'h'
  1856  00F9F4  20                 	db	32
  1857  00F9F5  63                 	db	99	;'c'
  1858  00F9F6  61                 	db	97	;'a'
  1859  00F9F7  70                 	db	112	;'p'
  1860  00F9F8  61                 	db	97	;'a'
  1861  00F9F9  63                 	db	99	;'c'
  1862  00F9FA  69                 	db	105	;'i'
  1863  00F9FB  74                 	db	116	;'t'
  1864  00F9FC  69                 	db	105	;'i'
  1865  00F9FD  76                 	db	118	;'v'
  1866  00F9FE  65                 	db	101	;'e'
  1867  00F9FF  20                 	db	32
  1868  00FA00  70                 	db	112	;'p'
  1869  00FA01  75                 	db	117	;'u'
  1870  00FA02  73                 	db	115	;'s'
  1871  00FA03  68                 	db	104	;'h'
  1872  00FA04  62                 	db	98	;'b'
  1873  00FA05  75                 	db	117	;'u'
  1874  00FA06  74                 	db	116	;'t'
  1875  00FA07  74                 	db	116	;'t'
  1876  00FA08  6F                 	db	111	;'o'
  1877  00FA09  6E                 	db	110	;'n'
  1878  00FA0A  73                 	db	115	;'s'
  1879  00FA0B  0A                 	db	10
  1880  00FA0C  0D                 	db	13
  1881  00FA0D  20                 	db	32
  1882  00FA0E  20                 	db	32
  1883  00FA0F  20                 	db	32
  1884  00FA10  20                 	db	32
  1885  00FA11  42                 	db	66	;'B'
  1886  00FA12  61                 	db	97	;'a'
  1887  00FA13  75                 	db	117	;'u'
  1888  00FA14  64                 	db	100	;'d'
  1889  00FA15  20                 	db	32
  1890  00FA16  72                 	db	114	;'r'
  1891  00FA17  61                 	db	97	;'a'
  1892  00FA18  74                 	db	116	;'t'
  1893  00FA19  65                 	db	101	;'e'
  1894  00FA1A  3A                 	db	58	;':'
  1895  00FA1B  20                 	db	32
  1896  00FA1C  31                 	db	49	;'1'
  1897  00FA1D  31                 	db	49	;'1'
  1898  00FA1E  35                 	db	53	;'5'
  1899  00FA1F  32                 	db	50	;'2'
  1900  00FA20  30                 	db	48	;'0'
  1901  00FA21  30                 	db	48	;'0'
  1902  00FA22  20                 	db	32
  1903  00FA23  62                 	db	98	;'b'
  1904  00FA24  70                 	db	112	;'p'
  1905  00FA25  73                 	db	115	;'s'
  1906  00FA26  0A                 	db	10
  1907  00FA27  0D                 	db	13
  1908  00FA28  20                 	db	32
  1909  00FA29  20                 	db	32
  1910  00FA2A  20                 	db	32
  1911  00FA2B  20                 	db	32
  1912  00FA2C  4E                 	db	78	;'N'
  1913  00FA2D  6F                 	db	111	;'o'
  1914  00FA2E  20                 	db	32
  1915  00FA2F  70                 	db	112	;'p'
  1916  00FA30  61                 	db	97	;'a'
  1917  00FA31  72                 	db	114	;'r'
  1918  00FA32  69                 	db	105	;'i'
  1919  00FA33  74                 	db	116	;'t'
  1920  00FA34  79                 	db	121	;'y'
  1921  00FA35  2C                 	db	44
  1922  00FA36  20                 	db	32
  1923  00FA37  38                 	db	56	;'8'
  1924  00FA38  20                 	db	32
  1925  00FA39  62                 	db	98	;'b'
  1926  00FA3A  69                 	db	105	;'i'
  1927  00FA3B  74                 	db	116	;'t'
  1928  00FA3C  73                 	db	115	;'s'
  1929  00FA3D  2C                 	db	44
  1930  00FA3E  20                 	db	32
  1931  00FA3F  6E                 	db	110	;'n'
  1932  00FA40  6F                 	db	111	;'o'
  1933  00FA41  20                 	db	32
  1934  00FA42  66                 	db	102	;'f'
  1935  00FA43  6C                 	db	108	;'l'
  1936  00FA44  6F                 	db	111	;'o'
  1937  00FA45  77                 	db	119	;'w'
  1938  00FA46  20                 	db	32
  1939  00FA47  63                 	db	99	;'c'
  1940  00FA48  6F                 	db	111	;'o'
  1941  00FA49  6E                 	db	110	;'n'
  1942  00FA4A  74                 	db	116	;'t'
  1943  00FA4B  72                 	db	114	;'r'
  1944  00FA4C  6F                 	db	111	;'o'
  1945  00FA4D  6C                 	db	108	;'l'
  1946  00FA4E  2C                 	db	44
  1947  00FA4F  20                 	db	32
  1948  00FA50  31                 	db	49	;'1'
  1949  00FA51  20                 	db	32
  1950  00FA52  73                 	db	115	;'s'
  1951  00FA53  74                 	db	116	;'t'
  1952  00FA54  6F                 	db	111	;'o'
  1953  00FA55  70                 	db	112	;'p'
  1954  00FA56  20                 	db	32
  1955  00FA57  62                 	db	98	;'b'
  1956  00FA58  69                 	db	105	;'i'
  1957  00FA59  74                 	db	116	;'t'
  1958  00FA5A  0A                 	db	10
  1959  00FA5B  0D                 	db	13
  1960  00FA5C  20                 	db	32
  1961  00FA5D  20                 	db	32
  1962  00FA5E  20                 	db	32
  1963  00FA5F  20                 	db	32
  1964  00FA60  43                 	db	67	;'C'
  1965  00FA61  6F                 	db	111	;'o'
  1966  00FA62  6D                 	db	109	;'m'
  1967  00FA63  6D                 	db	109	;'m'
  1968  00FA64  61                 	db	97	;'a'
  1969  00FA65  6E                 	db	110	;'n'
  1970  00FA66  64                 	db	100	;'d'
  1971  00FA67  73                 	db	115	;'s'
  1972  00FA68  20                 	db	32
  1973  00FA69  61                 	db	97	;'a'
  1974  00FA6A  72                 	db	114	;'r'
  1975  00FA6B  65                 	db	101	;'e'
  1976  00FA6C  20                 	db	32
  1977  00FA6D  63                 	db	99	;'c'
  1978  00FA6E  61                 	db	97	;'a'
  1979  00FA6F  73                 	db	115	;'s'
  1980  00FA70  65                 	db	101	;'e'
  1981  00FA71  20                 	db	32
  1982  00FA72  73                 	db	115	;'s'
  1983  00FA73  65                 	db	101	;'e'
  1984  00FA74  6E                 	db	110	;'n'
  1985  00FA75  73                 	db	115	;'s'
  1986  00FA76  69                 	db	105	;'i'
  1987  00FA77  74                 	db	116	;'t'
  1988  00FA78  69                 	db	105	;'i'
  1989  00FA79  76                 	db	118	;'v'
  1990  00FA7A  65                 	db	101	;'e'
  1991  00FA7B  0A                 	db	10
  1992  00FA7C  0D                 	db	13
  1993  00FA7D  20                 	db	32
  1994  00FA7E  20                 	db	32
  1995  00FA7F  20                 	db	32
  1996  00FA80  20                 	db	32
  1997  00FA81  45                 	db	69	;'E'
  1998  00FA82  6E                 	db	110	;'n'
  1999  00FA83  74                 	db	116	;'t'
  2000  00FA84  65                 	db	101	;'e'
  2001  00FA85  72                 	db	114	;'r'
  2002  00FA86  20                 	db	32
  2003  00FA87  61                 	db	97	;'a'
  2004  00FA88  20                 	db	32
  2005  00FA89  63                 	db	99	;'c'
  2006  00FA8A  6F                 	db	111	;'o'
  2007  00FA8B  6D                 	db	109	;'m'
  2008  00FA8C  6D                 	db	109	;'m'
  2009  00FA8D  61                 	db	97	;'a'
  2010  00FA8E  6E                 	db	110	;'n'
  2011  00FA8F  64                 	db	100	;'d'
  2012  00FA90  2C                 	db	44
  2013  00FA91  20                 	db	32
  2014  00FA92  6F                 	db	111	;'o'
  2015  00FA93  72                 	db	114	;'r'
  2016  00FA94  20                 	db	32
  2017  00FA95  65                 	db	101	;'e'
  2018  00FA96  6E                 	db	110	;'n'
  2019  00FA97  74                 	db	116	;'t'
  2020  00FA98  65                 	db	101	;'e'
  2021  00FA99  72                 	db	114	;'r'
  2022  00FA9A  20                 	db	32
  2023  00FA9B  48                 	db	72	;'H'
  2024  00FA9C  65                 	db	101	;'e'
  2025  00FA9D  6C                 	db	108	;'l'
  2026  00FA9E  70                 	db	112	;'p'
  2027  00FA9F  20                 	db	32
  2028  00FAA0  66                 	db	102	;'f'
  2029  00FAA1  6F                 	db	111	;'o'
  2030  00FAA2  72                 	db	114	;'r'
  2031  00FAA3  20                 	db	32
  2032  00FAA4  6C                 	db	108	;'l'
  2033  00FAA5  69                 	db	105	;'i'
  2034  00FAA6  73                 	db	115	;'s'
  2035  00FAA7  74                 	db	116	;'t'
  2036  00FAA8  20                 	db	32
  2037  00FAA9  6F                 	db	111	;'o'
  2038  00FAAA  66                 	db	102	;'f'
  2039  00FAAB  20                 	db	32
  2040  00FAAC  63                 	db	99	;'c'
  2041  00FAAD  6F                 	db	111	;'o'
  2042  00FAAE  6D                 	db	109	;'m'
  2043  00FAAF  6D                 	db	109	;'m'
  2044  00FAB0  61                 	db	97	;'a'
  2045  00FAB1  6E                 	db	110	;'n'
  2046  00FAB2  64                 	db	100	;'d'
  2047  00FAB3  73                 	db	115	;'s'
  2048  00FAB4  0A                 	db	10
  2049  00FAB5  0D                 	db	13
  2050  00FAB6  00                 	db	0
  2051  00FAB7                     STR_75:
  2052  00FAB7  49                 	db	73	;'I'
  2053  00FAB8  66                 	db	102	;'f'
  2054  00FAB9  20                 	db	32
  2055  00FABA  79                 	db	121	;'y'
  2056  00FABB  6F                 	db	111	;'o'
  2057  00FABC  75                 	db	117	;'u'
  2058  00FABD  27                 	db	39
  2059  00FABE  64                 	db	100	;'d'
  2060  00FABF  20                 	db	32
  2061  00FAC0  6C                 	db	108	;'l'
  2062  00FAC1  69                 	db	105	;'i'
  2063  00FAC2  6B                 	db	107	;'k'
  2064  00FAC3  65                 	db	101	;'e'
  2065  00FAC4  20                 	db	32
  2066  00FAC5  74                 	db	116	;'t'
  2067  00FAC6  6F                 	db	111	;'o'
  2068  00FAC7  20                 	db	32
  2069  00FAC8  63                 	db	99	;'c'
  2070  00FAC9  6F                 	db	111	;'o'
  2071  00FACA  6D                 	db	109	;'m'
  2072  00FACB  70                 	db	112	;'p'
  2073  00FACC  6C                 	db	108	;'l'
  2074  00FACD  65                 	db	101	;'e'
  2075  00FACE  74                 	db	116	;'t'
  2076  00FACF  65                 	db	101	;'e'
  2077  00FAD0  6C                 	db	108	;'l'
  2078  00FAD1  79                 	db	121	;'y'
  2079  00FAD2  20                 	db	32
  2080  00FAD3  65                 	db	101	;'e'
  2081  00FAD4  6E                 	db	110	;'n'
  2082  00FAD5  61                 	db	97	;'a'
  2083  00FAD6  62                 	db	98	;'b'
  2084  00FAD7  6C                 	db	108	;'l'
  2085  00FAD8  65                 	db	101	;'e'
  2086  00FAD9  20                 	db	32
  2087  00FADA  6F                 	db	111	;'o'
  2088  00FADB  72                 	db	114	;'r'
  2089  00FADC  20                 	db	32
  2090  00FADD  64                 	db	100	;'d'
  2091  00FADE  69                 	db	105	;'i'
  2092  00FADF  73                 	db	115	;'s'
  2093  00FAE0  61                 	db	97	;'a'
  2094  00FAE1  62                 	db	98	;'b'
  2095  00FAE2  6C                 	db	108	;'l'
  2096  00FAE3  65                 	db	101	;'e'
  2097  00FAE4  20                 	db	32
  2098  00FAE5  74                 	db	116	;'t'
  2099  00FAE6  68                 	db	104	;'h'
  2100  00FAE7  65                 	db	101	;'e'
  2101  00FAE8  20                 	db	32
  2102  00FAE9  6C                 	db	108	;'l'
  2103  00FAEA  6F                 	db	111	;'o'
  2104  00FAEB  61                 	db	97	;'a'
  2105  00FAEC  64                 	db	100	;'d'
  2106  00FAED  2C                 	db	44
  2107  00FAEE  20                 	db	32
  2108  00FAEF  64                 	db	100	;'d'
  2109  00FAF0  69                 	db	105	;'i'
  2110  00FAF1  73                 	db	115	;'s'
  2111  00FAF2  61                 	db	97	;'a'
  2112  00FAF3  62                 	db	98	;'b'
  2113  00FAF4  6C                 	db	108	;'l'
  2114  00FAF5  65                 	db	101	;'e'
  2115  00FAF6  20                 	db	32
  2116  00FAF7  64                 	db	100	;'d'
  2117  00FAF8  69                 	db	105	;'i'
  2118  00FAF9  6D                 	db	109	;'m'
  2119  00FAFA  6D                 	db	109	;'m'
  2120  00FAFB  69                 	db	105	;'i'
  2121  00FAFC  6E                 	db	110	;'n'
  2122  00FAFD  67                 	db	103	;'g'
  2123  00FAFE  20                 	db	32
  2124  00FAFF  61                 	db	97	;'a'
  2125  00FB00  6E                 	db	110	;'n'
  2126  00FB01  64                 	db	100	;'d'
  2127  00FB02  20                 	db	32
  2128  00FB03  75                 	db	117	;'u'
  2129  00FB04  73                 	db	115	;'s'
  2130  00FB05  65                 	db	101	;'e'
  2131  00FB06  20                 	db	32
  2132  00FB07  72                 	db	114	;'r'
  2133  00FB08  65                 	db	101	;'e'
  2134  00FB09  73                 	db	115	;'s'
  2135  00FB0A  70                 	db	112	;'p'
  2136  00FB0B  65                 	db	101	;'e'
  2137  00FB0C  63                 	db	99	;'c'
  2138  00FB0D  74                 	db	116	;'t'
  2139  00FB0E  69                 	db	105	;'i'
  2140  00FB0F  76                 	db	118	;'v'
  2141  00FB10  65                 	db	101	;'e'
  2142  00FB11  20                 	db	32
  2143  00FB12  63                 	db	99	;'c'
  2144  00FB13  6F                 	db	111	;'o'
  2145  00FB14  6D                 	db	109	;'m'
  2146  00FB15  6D                 	db	109	;'m'
  2147  00FB16  61                 	db	97	;'a'
  2148  00FB17  6E                 	db	110	;'n'
  2149  00FB18  64                 	db	100	;'d'
  2150  00FB19  73                 	db	115	;'s'
  2151  00FB1A  0A                 	db	10
  2152  00FB1B  0D                 	db	13
  2153  00FB1C  00                 	db	0
  2154  00FB1D                     STR_74:
  2155  00FB1D  45                 	db	69	;'E'
  2156  00FB1E  52                 	db	82	;'R'
  2157  00FB1F  52                 	db	82	;'R'
  2158  00FB20  4F                 	db	79	;'O'
  2159  00FB21  52                 	db	82	;'R'
  2160  00FB22  3A                 	db	58	;':'
  2161  00FB23  20                 	db	32
  2162  00FB24  50                 	db	80	;'P'
  2163  00FB25  6C                 	db	108	;'l'
  2164  00FB26  65                 	db	101	;'e'
  2165  00FB27  61                 	db	97	;'a'
  2166  00FB28  73                 	db	115	;'s'
  2167  00FB29  65                 	db	101	;'e'
  2168  00FB2A  20                 	db	32
  2169  00FB2B  73                 	db	115	;'s'
  2170  00FB2C  65                 	db	101	;'e'
  2171  00FB2D  74                 	db	116	;'t'
  2172  00FB2E  20                 	db	32
  2173  00FB2F  64                 	db	100	;'d'
  2174  00FB30  69                 	db	105	;'i'
  2175  00FB31  6D                 	db	109	;'m'
  2176  00FB32  6D                 	db	109	;'m'
  2177  00FB33  69                 	db	105	;'i'
  2178  00FB34  6E                 	db	110	;'n'
  2179  00FB35  67                 	db	103	;'g'
  2180  00FB36  20                 	db	32
  2181  00FB37  70                 	db	112	;'p'
  2182  00FB38  65                 	db	101	;'e'
  2183  00FB39  72                 	db	114	;'r'
  2184  00FB3A  63                 	db	99	;'c'
  2185  00FB3B  65                 	db	101	;'e'
  2186  00FB3C  6E                 	db	110	;'n'
  2187  00FB3D  74                 	db	116	;'t'
  2188  00FB3E  61                 	db	97	;'a'
  2189  00FB3F  67                 	db	103	;'g'
  2190  00FB40  65                 	db	101	;'e'
  2191  00FB41  20                 	db	32
  2192  00FB42  74                 	db	116	;'t'
  2193  00FB43  6F                 	db	111	;'o'
  2194  00FB44  20                 	db	32
  2195  00FB45  61                 	db	97	;'a'
  2196  00FB46  6E                 	db	110	;'n'
  2197  00FB47  20                 	db	32
  2198  00FB48  69                 	db	105	;'i'
  2199  00FB49  6E                 	db	110	;'n'
  2200  00FB4A  74                 	db	116	;'t'
  2201  00FB4B  65                 	db	101	;'e'
  2202  00FB4C  67                 	db	103	;'g'
  2203  00FB4D  65                 	db	101	;'e'
  2204  00FB4E  72                 	db	114	;'r'
  2205  00FB4F  20                 	db	32
  2206  00FB50  67                 	db	103	;'g'
  2207  00FB51  72                 	db	114	;'r'
  2208  00FB52  65                 	db	101	;'e'
  2209  00FB53  61                 	db	97	;'a'
  2210  00FB54  74                 	db	116	;'t'
  2211  00FB55  65                 	db	101	;'e'
  2212  00FB56  72                 	db	114	;'r'
  2213  00FB57  20                 	db	32
  2214  00FB58  74                 	db	116	;'t'
  2215  00FB59  68                 	db	104	;'h'
  2216  00FB5A  61                 	db	97	;'a'
  2217  00FB5B  6E                 	db	110	;'n'
  2218  00FB5C  20                 	db	32
  2219  00FB5D  30                 	db	48	;'0'
  2220  00FB5E  20                 	db	32
  2221  00FB5F  61                 	db	97	;'a'
  2222  00FB60  6E                 	db	110	;'n'
  2223  00FB61  64                 	db	100	;'d'
  2224  00FB62  20                 	db	32
  2225  00FB63  6C                 	db	108	;'l'
  2226  00FB64  65                 	db	101	;'e'
  2227  00FB65  73                 	db	115	;'s'
  2228  00FB66  73                 	db	115	;'s'
  2229  00FB67  20                 	db	32
  2230  00FB68  74                 	db	116	;'t'
  2231  00FB69  68                 	db	104	;'h'
  2232  00FB6A  61                 	db	97	;'a'
  2233  00FB6B  6E                 	db	110	;'n'
  2234  00FB6C  20                 	db	32
  2235  00FB6D  31                 	db	49	;'1'
  2236  00FB6E  30                 	db	48	;'0'
  2237  00FB6F  30                 	db	48	;'0'
  2238  00FB70  0A                 	db	10
  2239  00FB71  0D                 	db	13
  2240  00FB72  00                 	db	0
  2241  00FB73                     STR_78:
  2242  00FB73  54                 	db	84	;'T'
  2243  00FB74  68                 	db	104	;'h'
  2244  00FB75  69                 	db	105	;'i'
  2245  00FB76  73                 	db	115	;'s'
  2246  00FB77  20                 	db	32
  2247  00FB78  63                 	db	99	;'c'
  2248  00FB79  6F                 	db	111	;'o'
  2249  00FB7A  72                 	db	114	;'r'
  2250  00FB7B  72                 	db	114	;'r'
  2251  00FB7C  65                 	db	101	;'e'
  2252  00FB7D  73                 	db	115	;'s'
  2253  00FB7E  70                 	db	112	;'p'
  2254  00FB7F  6F                 	db	111	;'o'
  2255  00FB80  6E                 	db	110	;'n'
  2256  00FB81  64                 	db	100	;'d'
  2257  00FB82  73                 	db	115	;'s'
  2258  00FB83  20                 	db	32
  2259  00FB84  74                 	db	116	;'t'
  2260  00FB85  6F                 	db	111	;'o'
  2261  00FB86  20                 	db	32
  2262  00FB87  61                 	db	97	;'a'
  2263  00FB88  20                 	db	32
  2264  00FB89  31                 	db	49	;'1'
  2265  00FB8A  36                 	db	54	;'6'
  2266  00FB8B  20                 	db	32
  2267  00FB8C  62                 	db	98	;'b'
  2268  00FB8D  69                 	db	105	;'i'
  2269  00FB8E  74                 	db	116	;'t'
  2270  00FB8F  20                 	db	32
  2271  00FB90  70                 	db	112	;'p'
  2272  00FB91  65                 	db	101	;'e'
  2273  00FB92  72                 	db	114	;'r'
  2274  00FB93  69                 	db	105	;'i'
  2275  00FB94  6F                 	db	111	;'o'
  2276  00FB95  64                 	db	100	;'d'
  2277  00FB96  20                 	db	32
  2278  00FB97  76                 	db	118	;'v'
  2279  00FB98  61                 	db	97	;'a'
  2280  00FB99  6C                 	db	108	;'l'
  2281  00FB9A  75                 	db	117	;'u'
  2282  00FB9B  65                 	db	101	;'e'
  2283  00FB9C  20                 	db	32
  2284  00FB9D  6F                 	db	111	;'o'
  2285  00FB9E  66                 	db	102	;'f'
  2286  00FB9F  20                 	db	32
  2287  00FBA0  25                 	db	37
  2288  00FBA1  64                 	db	100	;'d'
  2289  00FBA2  20                 	db	32
  2290  00FBA3  6C                 	db	108	;'l'
  2291  00FBA4  65                 	db	101	;'e'
  2292  00FBA5  61                 	db	97	;'a'
  2293  00FBA6  73                 	db	115	;'s'
  2294  00FBA7  74                 	db	116	;'t'
  2295  00FBA8  20                 	db	32
  2296  00FBA9  73                 	db	115	;'s'
  2297  00FBAA  69                 	db	105	;'i'
  2298  00FBAB  67                 	db	103	;'g'
  2299  00FBAC  6E                 	db	110	;'n'
  2300  00FBAD  69                 	db	105	;'i'
  2301  00FBAE  66                 	db	102	;'f'
  2302  00FBAF  69                 	db	105	;'i'
  2303  00FBB0  63                 	db	99	;'c'
  2304  00FBB1  61                 	db	97	;'a'
  2305  00FBB2  6E                 	db	110	;'n'
  2306  00FBB3  74                 	db	116	;'t'
  2307  00FBB4  20                 	db	32
  2308  00FBB5  62                 	db	98	;'b'
  2309  00FBB6  69                 	db	105	;'i'
  2310  00FBB7  74                 	db	116	;'t'
  2311  00FBB8  73                 	db	115	;'s'
  2312  00FBB9  0A                 	db	10
  2313  00FBBA  0D                 	db	13
  2314  00FBBB  00                 	db	0
  2315  00FBBC                     STR_77:
  2316  00FBBC  43                 	db	67	;'C'
  2317  00FBBD  61                 	db	97	;'a'
  2318  00FBBE  6C                 	db	108	;'l'
  2319  00FBBF  63                 	db	99	;'c'
  2320  00FBC0  75                 	db	117	;'u'
  2321  00FBC1  6C                 	db	108	;'l'
  2322  00FBC2  61                 	db	97	;'a'
  2323  00FBC3  74                 	db	116	;'t'
  2324  00FBC4  65                 	db	101	;'e'
  2325  00FBC5  64                 	db	100	;'d'
  2326  00FBC6  20                 	db	32
  2327  00FBC7  54                 	db	84	;'T'
  2328  00FBC8  52                 	db	82	;'R'
  2329  00FBC9  49                 	db	73	;'I'
  2330  00FBCA  41                 	db	65	;'A'
  2331  00FBCB  43                 	db	67	;'C'
  2332  00FBCC  20                 	db	32
  2333  00FBCD  66                 	db	102	;'f'
  2334  00FBCE  69                 	db	105	;'i'
  2335  00FBCF  72                 	db	114	;'r'
  2336  00FBD0  69                 	db	105	;'i'
  2337  00FBD1  6E                 	db	110	;'n'
  2338  00FBD2  67                 	db	103	;'g'
  2339  00FBD3  20                 	db	32
  2340  00FBD4  61                 	db	97	;'a'
  2341  00FBD5  6E                 	db	110	;'n'
  2342  00FBD6  67                 	db	103	;'g'
  2343  00FBD7  6C                 	db	108	;'l'
  2344  00FBD8  65                 	db	101	;'e'
  2345  00FBD9  20                 	db	32
  2346  00FBDA  69                 	db	105	;'i'
  2347  00FBDB  73                 	db	115	;'s'
  2348  00FBDC  20                 	db	32
  2349  00FBDD  25                 	db	37
  2350  00FBDE  2E                 	db	46
  2351  00FBDF  33                 	db	51	;'3'
  2352  00FBE0  66                 	db	102	;'f'
  2353  00FBE1  20                 	db	32
  2354  00FBE2  72                 	db	114	;'r'
  2355  00FBE3  61                 	db	97	;'a'
  2356  00FBE4  64                 	db	100	;'d'
  2357  00FBE5  69                 	db	105	;'i'
  2358  00FBE6  61                 	db	97	;'a'
  2359  00FBE7  6E                 	db	110	;'n'
  2360  00FBE8  73                 	db	115	;'s'
  2361  00FBE9  20                 	db	32
  2362  00FBEA  28                 	db	40
  2363  00FBEB  25                 	db	37
  2364  00FBEC  2E                 	db	46
  2365  00FBED  33                 	db	51	;'3'
  2366  00FBEE  66                 	db	102	;'f'
  2367  00FBEF  20                 	db	32
  2368  00FBF0  64                 	db	100	;'d'
  2369  00FBF1  65                 	db	101	;'e'
  2370  00FBF2  67                 	db	103	;'g'
  2371  00FBF3  72                 	db	114	;'r'
  2372  00FBF4  65                 	db	101	;'e'
  2373  00FBF5  65                 	db	101	;'e'
  2374  00FBF6  73                 	db	115	;'s'
  2375  00FBF7  29                 	db	41
  2376  00FBF8  0A                 	db	10
  2377  00FBF9  0D                 	db	13
  2378  00FBFA  00                 	db	0
  2379  00FBFB                     STR_80:
  2380  00FBFB  44                 	db	68	;'D'
  2381  00FBFC  65                 	db	101	;'e'
  2382  00FBFD  76                 	db	118	;'v'
  2383  00FBFE  69                 	db	105	;'i'
  2384  00FBFF  63                 	db	99	;'c'
  2385  00FC00  65                 	db	101	;'e'
  2386  00FC01  20                 	db	32
  2387  00FC02  6F                 	db	111	;'o'
  2388  00FC03  6E                 	db	110	;'n'
  2389  00FC04  20                 	db	32
  2390  00FC05  74                 	db	116	;'t'
  2391  00FC06  69                 	db	105	;'i'
  2392  00FC07  6D                 	db	109	;'m'
  2393  00FC08  65                 	db	101	;'e'
  2394  00FC09  20                 	db	32
  2395  00FC0A  73                 	db	115	;'s'
  2396  00FC0B  69                 	db	105	;'i'
  2397  00FC0C  6E                 	db	110	;'n'
  2398  00FC0D  63                 	db	99	;'c'
  2399  00FC0E  65                 	db	101	;'e'
  2400  00FC0F  20                 	db	32
  2401  00FC10  6C                 	db	108	;'l'
  2402  00FC11  61                 	db	97	;'a'
  2403  00FC12  73                 	db	115	;'s'
  2404  00FC13  74                 	db	116	;'t'
  2405  00FC14  20                 	db	32
  2406  00FC15  72                 	db	114	;'r'
  2407  00FC16  65                 	db	101	;'e'
  2408  00FC17  73                 	db	115	;'s'
  2409  00FC18  65                 	db	101	;'e'
  2410  00FC19  74                 	db	116	;'t'
  2411  00FC1A  20                 	db	32
  2412  00FC1B  63                 	db	99	;'c'
  2413  00FC1C  6F                 	db	111	;'o'
  2414  00FC1D  6E                 	db	110	;'n'
  2415  00FC1E  64                 	db	100	;'d'
  2416  00FC1F  69                 	db	105	;'i'
  2417  00FC20  74                 	db	116	;'t'
  2418  00FC21  69                 	db	105	;'i'
  2419  00FC22  6F                 	db	111	;'o'
  2420  00FC23  6E                 	db	110	;'n'
  2421  00FC24  20                 	db	32
  2422  00FC25  69                 	db	105	;'i'
  2423  00FC26  73                 	db	115	;'s'
  2424  00FC27  20                 	db	32
  2425  00FC28  25                 	db	37
  2426  00FC29  64                 	db	100	;'d'
  2427  00FC2A  20                 	db	32
  2428  00FC2B  73                 	db	115	;'s'
  2429  00FC2C  65                 	db	101	;'e'
  2430  00FC2D  63                 	db	99	;'c'
  2431  00FC2E  6F                 	db	111	;'o'
  2432  00FC2F  6E                 	db	110	;'n'
  2433  00FC30  64                 	db	100	;'d'
  2434  00FC31  73                 	db	115	;'s'
  2435  00FC32  0A                 	db	10
  2436  00FC33  0D                 	db	13
  2437  00FC34  00                 	db	0
  2438  00FC35                     STR_58:
  2439  00FC35  46                 	db	70	;'F'
  2440  00FC36  69                 	db	105	;'i'
  2441  00FC37  78                 	db	120	;'x'
  2442  00FC38  65                 	db	101	;'e'
  2443  00FC39  64                 	db	100	;'d'
  2444  00FC3A  20                 	db	32
  2445  00FC3B  56                 	db	86	;'V'
  2446  00FC3C  6F                 	db	111	;'o'
  2447  00FC3D  6C                 	db	108	;'l'
  2448  00FC3E  74                 	db	116	;'t'
  2449  00FC3F  61                 	db	97	;'a'
  2450  00FC40  67                 	db	103	;'g'
  2451  00FC41  65                 	db	101	;'e'
  2452  00FC42  20                 	db	32
  2453  00FC43  52                 	db	82	;'R'
  2454  00FC44  65                 	db	101	;'e'
  2455  00FC45  66                 	db	102	;'f'
  2456  00FC46  65                 	db	101	;'e'
  2457  00FC47  72                 	db	114	;'r'
  2458  00FC48  65                 	db	101	;'e'
  2459  00FC49  6E                 	db	110	;'n'
  2460  00FC4A  63                 	db	99	;'c'
  2461  00FC4B  65                 	db	101	;'e'
  2462  00FC4C  20                 	db	32
  2463  00FC4D  42                 	db	66	;'B'
  2464  00FC4E  75                 	db	117	;'u'
  2465  00FC4F  66                 	db	102	;'f'
  2466  00FC50  66                 	db	102	;'f'
  2467  00FC51  65                 	db	101	;'e'
  2468  00FC52  72                 	db	114	;'r'
  2469  00FC53  20                 	db	32
  2470  00FC54  31                 	db	49	;'1'
  2471  00FC55  20                 	db	32
  2472  00FC56  6D                 	db	109	;'m'
  2473  00FC57  65                 	db	101	;'e'
  2474  00FC58  61                 	db	97	;'a'
  2475  00FC59  73                 	db	115	;'s'
  2476  00FC5A  75                 	db	117	;'u'
  2477  00FC5B  72                 	db	114	;'r'
  2478  00FC5C  65                 	db	101	;'e'
  2479  00FC5D  64                 	db	100	;'d'
  2480  00FC5E  20                 	db	32
  2481  00FC5F  61                 	db	97	;'a'
  2482  00FC60  73                 	db	115	;'s'
  2483  00FC61  20                 	db	32
  2484  00FC62  25                 	db	37
  2485  00FC63  66                 	db	102	;'f'
  2486  00FC64  20                 	db	32
  2487  00FC65  56                 	db	86	;'V'
  2488  00FC66  6F                 	db	111	;'o'
  2489  00FC67  6C                 	db	108	;'l'
  2490  00FC68  74                 	db	116	;'t'
  2491  00FC69  73                 	db	115	;'s'
  2492  00FC6A  0A                 	db	10
  2493  00FC6B  0D                 	db	13
  2494  00FC6C  00                 	db	0
  2495  00FC6D                     STR_50:
  2496  00FC6D  4D                 	db	77	;'M'
  2497  00FC6E  61                 	db	97	;'a'
  2498  00FC6F  72                 	db	114	;'r'
  2499  00FC70  71                 	db	113	;'q'
  2500  00FC71  75                 	db	117	;'u'
  2501  00FC72  65                 	db	101	;'e'
  2502  00FC73  74                 	db	116	;'t'
  2503  00FC74  74                 	db	116	;'t'
  2504  00FC75  65                 	db	101	;'e'
  2505  00FC76  20                 	db	32
  2506  00FC77  55                 	db	85	;'U'
  2507  00FC78  6E                 	db	110	;'n'
  2508  00FC79  69                 	db	105	;'i'
  2509  00FC7A  76                 	db	118	;'v'
  2510  00FC7B  65                 	db	101	;'e'
  2511  00FC7C  72                 	db	114	;'r'
  2512  00FC7D  73                 	db	115	;'s'
  2513  00FC7E  69                 	db	105	;'i'
  2514  00FC7F  74                 	db	116	;'t'
  2515  00FC80  79                 	db	121	;'y'
  2516  00FC81  20                 	db	32
  2517  00FC82  45                 	db	69	;'E'
  2518  00FC83  4C                 	db	76	;'L'
  2519  00FC84  45                 	db	69	;'E'
  2520  00FC85  4E                 	db	78	;'N'
  2521  00FC86  20                 	db	32
  2522  00FC87  33                 	db	51	;'3'
  2523  00FC88  30                 	db	48	;'0'
  2524  00FC89  33                 	db	51	;'3'
  2525  00FC8A  35                 	db	53	;'5'
  2526  00FC8B  20                 	db	32
  2527  00FC8C  46                 	db	70	;'F'
  2528  00FC8D  69                 	db	105	;'i'
  2529  00FC8E  6E                 	db	110	;'n'
  2530  00FC8F  61                 	db	97	;'a'
  2531  00FC90  6C                 	db	108	;'l'
  2532  00FC91  20                 	db	32
  2533  00FC92  50                 	db	80	;'P'
  2534  00FC93  72                 	db	114	;'r'
  2535  00FC94  6F                 	db	111	;'o'
  2536  00FC95  6A                 	db	106	;'j'
  2537  00FC96  65                 	db	101	;'e'
  2538  00FC97  63                 	db	99	;'c'
  2539  00FC98  74                 	db	116	;'t'
  2540  00FC99  0A                 	db	10
  2541  00FC9A  0D                 	db	13
  2542  00FC9B  00                 	db	0
  2543  00FC9C                     STR_68:
  2544  00FC9C  54                 	db	84	;'T'
  2545  00FC9D  52                 	db	82	;'R'
  2546  00FC9E  49                 	db	73	;'I'
  2547  00FC9F  41                 	db	65	;'A'
  2548  00FCA0  43                 	db	67	;'C'
  2549  00FCA1  20                 	db	32
  2550  00FCA2  6F                 	db	111	;'o'
  2551  00FCA3  75                 	db	117	;'u'
  2552  00FCA4  74                 	db	116	;'t'
  2553  00FCA5  70                 	db	112	;'p'
  2554  00FCA6  75                 	db	117	;'u'
  2555  00FCA7  74                 	db	116	;'t'
  2556  00FCA8  20                 	db	32
  2557  00FCA9  64                 	db	100	;'d'
  2558  00FCAA  69                 	db	105	;'i'
  2559  00FCAB  6D                 	db	109	;'m'
  2560  00FCAC  6D                 	db	109	;'m'
  2561  00FCAD  69                 	db	105	;'i'
  2562  00FCAE  6E                 	db	110	;'n'
  2563  00FCAF  67                 	db	103	;'g'
  2564  00FCB0  20                 	db	32
  2565  00FCB1  68                 	db	104	;'h'
  2566  00FCB2  61                 	db	97	;'a'
  2567  00FCB3  73                 	db	115	;'s'
  2568  00FCB4  20                 	db	32
  2569  00FCB5  62                 	db	98	;'b'
  2570  00FCB6  65                 	db	101	;'e'
  2571  00FCB7  65                 	db	101	;'e'
  2572  00FCB8  6E                 	db	110	;'n'
  2573  00FCB9  20                 	db	32
  2574  00FCBA  64                 	db	100	;'d'
  2575  00FCBB  69                 	db	105	;'i'
  2576  00FCBC  73                 	db	115	;'s'
  2577  00FCBD  61                 	db	97	;'a'
  2578  00FCBE  62                 	db	98	;'b'
  2579  00FCBF  6C                 	db	108	;'l'
  2580  00FCC0  65                 	db	101	;'e'
  2581  00FCC1  64                 	db	100	;'d'
  2582  00FCC2  0A                 	db	10
  2583  00FCC3  0D                 	db	13
  2584  00FCC4  00                 	db	0
  2585  00FCC5                     STR_66:
  2586  00FCC5  54                 	db	84	;'T'
  2587  00FCC6  52                 	db	82	;'R'
  2588  00FCC7  49                 	db	73	;'I'
  2589  00FCC8  41                 	db	65	;'A'
  2590  00FCC9  43                 	db	67	;'C'
  2591  00FCCA  20                 	db	32
  2592  00FCCB  6F                 	db	111	;'o'
  2593  00FCCC  75                 	db	117	;'u'
  2594  00FCCD  74                 	db	116	;'t'
  2595  00FCCE  70                 	db	112	;'p'
  2596  00FCCF  75                 	db	117	;'u'
  2597  00FCD0  74                 	db	116	;'t'
  2598  00FCD1  20                 	db	32
  2599  00FCD2  64                 	db	100	;'d'
  2600  00FCD3  69                 	db	105	;'i'
  2601  00FCD4  6D                 	db	109	;'m'
  2602  00FCD5  6D                 	db	109	;'m'
  2603  00FCD6  69                 	db	105	;'i'
  2604  00FCD7  6E                 	db	110	;'n'
  2605  00FCD8  67                 	db	103	;'g'
  2606  00FCD9  20                 	db	32
  2607  00FCDA  68                 	db	104	;'h'
  2608  00FCDB  61                 	db	97	;'a'
  2609  00FCDC  73                 	db	115	;'s'
  2610  00FCDD  20                 	db	32
  2611  00FCDE  62                 	db	98	;'b'
  2612  00FCDF  65                 	db	101	;'e'
  2613  00FCE0  65                 	db	101	;'e'
  2614  00FCE1  6E                 	db	110	;'n'
  2615  00FCE2  20                 	db	32
  2616  00FCE3  65                 	db	101	;'e'
  2617  00FCE4  6E                 	db	110	;'n'
  2618  00FCE5  61                 	db	97	;'a'
  2619  00FCE6  62                 	db	98	;'b'
  2620  00FCE7  6C                 	db	108	;'l'
  2621  00FCE8  65                 	db	101	;'e'
  2622  00FCE9  64                 	db	100	;'d'
  2623  00FCEA  0A                 	db	10
  2624  00FCEB  0D                 	db	13
  2625  00FCEC  00                 	db	0
  2626  00FCED                     STR_85:
  2627  00FCED  4D                 	db	77	;'M'
  2628  00FCEE  65                 	db	101	;'e'
  2629  00FCEF  61                 	db	97	;'a'
  2630  00FCF0  73                 	db	115	;'s'
  2631  00FCF1  75                 	db	117	;'u'
  2632  00FCF2  72                 	db	114	;'r'
  2633  00FCF3  65                 	db	101	;'e'
  2634  00FCF4  6D                 	db	109	;'m'
  2635  00FCF5  65                 	db	101	;'e'
  2636  00FCF6  6E                 	db	110	;'n'
  2637  00FCF7  74                 	db	116	;'t'
  2638  00FCF8  73                 	db	115	;'s'
  2639  00FCF9  20                 	db	32
  2640  00FCFA  72                 	db	114	;'r'
  2641  00FCFB  65                 	db	101	;'e'
  2642  00FCFC  73                 	db	115	;'s'
  2643  00FCFD  70                 	db	112	;'p'
  2644  00FCFE  6F                 	db	111	;'o'
  2645  00FCFF  6E                 	db	110	;'n'
  2646  00FD00  73                 	db	115	;'s'
  2647  00FD01  65                 	db	101	;'e'
  2648  00FD02  73                 	db	115	;'s'
  2649  00FD03  20                 	db	32
  2650  00FD04  61                 	db	97	;'a'
  2651  00FD05  70                 	db	112	;'p'
  2652  00FD06  70                 	db	112	;'p'
  2653  00FD07  65                 	db	101	;'e'
  2654  00FD08  61                 	db	97	;'a'
  2655  00FD09  72                 	db	114	;'r'
  2656  00FD0A  20                 	db	32
  2657  00FD0B  69                 	db	105	;'i'
  2658  00FD0C  6E                 	db	110	;'n'
  2659  00FD0D  20                 	db	32
  2660  00FD0E  63                 	db	99	;'c'
  2661  00FD0F  79                 	db	121	;'y'
  2662  00FD10  61                 	db	97	;'a'
  2663  00FD11  6E                 	db	110	;'n'
  2664  00FD12  0A                 	db	10
  2665  00FD13  0D                 	db	13
  2666  00FD14  00                 	db	0
  2667  00FD15                     STR_76:
  2668  00FD15  44                 	db	68	;'D'
  2669  00FD16  69                 	db	105	;'i'
  2670  00FD17  6D                 	db	109	;'m'
  2671  00FD18  6D                 	db	109	;'m'
  2672  00FD19  69                 	db	105	;'i'
  2673  00FD1A  6E                 	db	110	;'n'
  2674  00FD1B  67                 	db	103	;'g'
  2675  00FD1C  20                 	db	32
  2676  00FD1D  68                 	db	104	;'h'
  2677  00FD1E  61                 	db	97	;'a'
  2678  00FD1F  73                 	db	115	;'s'
  2679  00FD20  20                 	db	32
  2680  00FD21  62                 	db	98	;'b'
  2681  00FD22  65                 	db	101	;'e'
  2682  00FD23  65                 	db	101	;'e'
  2683  00FD24  6E                 	db	110	;'n'
  2684  00FD25  20                 	db	32
  2685  00FD26  73                 	db	115	;'s'
  2686  00FD27  65                 	db	101	;'e'
  2687  00FD28  74                 	db	116	;'t'
  2688  00FD29  20                 	db	32
  2689  00FD2A  74                 	db	116	;'t'
  2690  00FD2B  6F                 	db	111	;'o'
  2691  00FD2C  20                 	db	32
  2692  00FD2D  25                 	db	37
  2693  00FD2E  64                 	db	100	;'d'
  2694  00FD2F  20                 	db	32
  2695  00FD30  70                 	db	112	;'p'
  2696  00FD31  65                 	db	101	;'e'
  2697  00FD32  72                 	db	114	;'r'
  2698  00FD33  63                 	db	99	;'c'
  2699  00FD34  65                 	db	101	;'e'
  2700  00FD35  6E                 	db	110	;'n'
  2701  00FD36  74                 	db	116	;'t'
  2702  00FD37  0A                 	db	10
  2703  00FD38  0D                 	db	13
  2704  00FD39  00                 	db	0
  2705  00FD3A                     STR_52:
  2706  00FD3A  2B                 	db	43
  2707  00FD3B  33                 	db	51	;'3'
  2708  00FD3C  2E                 	db	46
  2709  00FD3D  33                 	db	51	;'3'
  2710  00FD3E  56                 	db	86	;'V'
  2711  00FD3F  20                 	db	32
  2712  00FD40  72                 	db	114	;'r'
  2713  00FD41  61                 	db	97	;'a'
  2714  00FD42  69                 	db	105	;'i'
  2715  00FD43  6C                 	db	108	;'l'
  2716  00FD44  20                 	db	32
  2717  00FD45  6D                 	db	109	;'m'
  2718  00FD46  65                 	db	101	;'e'
  2719  00FD47  61                 	db	97	;'a'
  2720  00FD48  73                 	db	115	;'s'
  2721  00FD49  75                 	db	117	;'u'
  2722  00FD4A  72                 	db	114	;'r'
  2723  00FD4B  65                 	db	101	;'e'
  2724  00FD4C  64                 	db	100	;'d'
  2725  00FD4D  20                 	db	32
  2726  00FD4E  61                 	db	97	;'a'
  2727  00FD4F  73                 	db	115	;'s'
  2728  00FD50  20                 	db	32
  2729  00FD51  2B                 	db	43
  2730  00FD52  25                 	db	37
  2731  00FD53  66                 	db	102	;'f'
  2732  00FD54  20                 	db	32
  2733  00FD55  56                 	db	86	;'V'
  2734  00FD56  6F                 	db	111	;'o'
  2735  00FD57  6C                 	db	108	;'l'
  2736  00FD58  74                 	db	116	;'t'
  2737  00FD59  73                 	db	115	;'s'
  2738  00FD5A  0A                 	db	10
  2739  00FD5B  0D                 	db	13
  2740  00FD5C  00                 	db	0
  2741  00FD5D                     STR_56:
  2742  00FD5D  44                 	db	68	;'D'
  2743  00FD5E  69                 	db	105	;'i'
  2744  00FD5F  65                 	db	101	;'e'
  2745  00FD60  20                 	db	32
  2746  00FD61  54                 	db	84	;'T'
  2747  00FD62  65                 	db	101	;'e'
  2748  00FD63  6D                 	db	109	;'m'
  2749  00FD64  70                 	db	112	;'p'
  2750  00FD65  65                 	db	101	;'e'
  2751  00FD66  72                 	db	114	;'r'
  2752  00FD67  61                 	db	97	;'a'
  2753  00FD68  74                 	db	116	;'t'
  2754  00FD69  75                 	db	117	;'u'
  2755  00FD6A  72                 	db	114	;'r'
  2756  00FD6B  65                 	db	101	;'e'
  2757  00FD6C  20                 	db	32
  2758  00FD6D  6D                 	db	109	;'m'
  2759  00FD6E  65                 	db	101	;'e'
  2760  00FD6F  61                 	db	97	;'a'
  2761  00FD70  73                 	db	115	;'s'
  2762  00FD71  75                 	db	117	;'u'
  2763  00FD72  72                 	db	114	;'r'
  2764  00FD73  65                 	db	101	;'e'
  2765  00FD74  64                 	db	100	;'d'
  2766  00FD75  20                 	db	32
  2767  00FD76  61                 	db	97	;'a'
  2768  00FD77  73                 	db	115	;'s'
  2769  00FD78  20                 	db	32
  2770  00FD79  25                 	db	37
  2771  00FD7A  66                 	db	102	;'f'
  2772  00FD7B  43                 	db	67	;'C'
  2773  00FD7C  0A                 	db	10
  2774  00FD7D  0D                 	db	13
  2775  00FD7E  00                 	db	0
  2776  00FD7F                     STR_62:
  2777  00FD7F  52                 	db	82	;'R'
  2778  00FD80  4D                 	db	77	;'M'
  2779  00FD81  53                 	db	83	;'S'
  2780  00FD82  20                 	db	32
  2781  00FD83  4F                 	db	79	;'O'
  2782  00FD84  75                 	db	117	;'u'
  2783  00FD85  74                 	db	116	;'t'
  2784  00FD86  70                 	db	112	;'p'
  2785  00FD87  75                 	db	117	;'u'
  2786  00FD88  74                 	db	116	;'t'
  2787  00FD89  20                 	db	32
  2788  00FD8A  43                 	db	67	;'C'
  2789  00FD8B  75                 	db	117	;'u'
  2790  00FD8C  72                 	db	114	;'r'
  2791  00FD8D  72                 	db	114	;'r'
  2792  00FD8E  65                 	db	101	;'e'
  2793  00FD8F  6E                 	db	110	;'n'
  2794  00FD90  74                 	db	116	;'t'
  2795  00FD91  20                 	db	32
  2796  00FD92  69                 	db	105	;'i'
  2797  00FD93  73                 	db	115	;'s'
  2798  00FD94  20                 	db	32
  2799  00FD95  25                 	db	37
  2800  00FD96  2E                 	db	46
  2801  00FD97  33                 	db	51	;'3'
  2802  00FD98  66                 	db	102	;'f'
  2803  00FD99  20                 	db	32
  2804  00FD9A  41                 	db	65	;'A'
  2805  00FD9B  72                 	db	114	;'r'
  2806  00FD9C  6D                 	db	109	;'m'
  2807  00FD9D  73                 	db	115	;'s'
  2808  00FD9E  0A                 	db	10
  2809  00FD9F  0D                 	db	13
  2810  00FDA0  00                 	db	0
  2811  00FDA1                     STR_64:
  2812  00FDA1  52                 	db	82	;'R'
  2813  00FDA2  4D                 	db	77	;'M'
  2814  00FDA3  53                 	db	83	;'S'
  2815  00FDA4  20                 	db	32
  2816  00FDA5  4F                 	db	79	;'O'
  2817  00FDA6  75                 	db	117	;'u'
  2818  00FDA7  74                 	db	116	;'t'
  2819  00FDA8  70                 	db	112	;'p'
  2820  00FDA9  75                 	db	117	;'u'
  2821  00FDAA  74                 	db	116	;'t'
  2822  00FDAB  20                 	db	32
  2823  00FDAC  56                 	db	86	;'V'
  2824  00FDAD  6F                 	db	111	;'o'
  2825  00FDAE  6C                 	db	108	;'l'
  2826  00FDAF  74                 	db	116	;'t'
  2827  00FDB0  61                 	db	97	;'a'
  2828  00FDB1  67                 	db	103	;'g'
  2829  00FDB2  65                 	db	101	;'e'
  2830  00FDB3  20                 	db	32
  2831  00FDB4  69                 	db	105	;'i'
  2832  00FDB5  73                 	db	115	;'s'
  2833  00FDB6  20                 	db	32
  2834  00FDB7  25                 	db	37
  2835  00FDB8  2E                 	db	46
  2836  00FDB9  33                 	db	51	;'3'
  2837  00FDBA  66                 	db	102	;'f'
  2838  00FDBB  20                 	db	32
  2839  00FDBC  56                 	db	86	;'V'
  2840  00FDBD  72                 	db	114	;'r'
  2841  00FDBE  6D                 	db	109	;'m'
  2842  00FDBF  73                 	db	115	;'s'
  2843  00FDC0  0A                 	db	10
  2844  00FDC1  0D                 	db	13
  2845  00FDC2  00                 	db	0
  2846  00FDC3                     STR_54:
  2847  00FDC3  2B                 	db	43
  2848  00FDC4  31                 	db	49	;'1'
  2849  00FDC5  32                 	db	50	;'2'
  2850  00FDC6  56                 	db	86	;'V'
  2851  00FDC7  20                 	db	32
  2852  00FDC8  72                 	db	114	;'r'
  2853  00FDC9  61                 	db	97	;'a'
  2854  00FDCA  69                 	db	105	;'i'
  2855  00FDCB  6C                 	db	108	;'l'
  2856  00FDCC  20                 	db	32
  2857  00FDCD  6D                 	db	109	;'m'
  2858  00FDCE  65                 	db	101	;'e'
  2859  00FDCF  61                 	db	97	;'a'
  2860  00FDD0  73                 	db	115	;'s'
  2861  00FDD1  75                 	db	117	;'u'
  2862  00FDD2  72                 	db	114	;'r'
  2863  00FDD3  65                 	db	101	;'e'
  2864  00FDD4  64                 	db	100	;'d'
  2865  00FDD5  20                 	db	32
  2866  00FDD6  61                 	db	97	;'a'
  2867  00FDD7  73                 	db	115	;'s'
  2868  00FDD8  20                 	db	32
  2869  00FDD9  2B                 	db	43
  2870  00FDDA  25                 	db	37
  2871  00FDDB  66                 	db	102	;'f'
  2872  00FDDC  20                 	db	32
  2873  00FDDD  56                 	db	86	;'V'
  2874  00FDDE  6F                 	db	111	;'o'
  2875  00FDDF  6C                 	db	108	;'l'
  2876  00FDE0  74                 	db	116	;'t'
  2877  00FDE1  73                 	db	115	;'s'
  2878  00FDE2  0A                 	db	10
  2879  00FDE3  0D                 	db	13
  2880  00FDE4  00                 	db	0
  2881  00FDE5                     STR_83:
  2882  00FDE5  48                 	db	72	;'H'
  2883  00FDE6  65                 	db	101	;'e'
  2884  00FDE7  6C                 	db	108	;'l'
  2885  00FDE8  70                 	db	112	;'p'
  2886  00FDE9  20                 	db	32
  2887  00FDEA  6D                 	db	109	;'m'
  2888  00FDEB  65                 	db	101	;'e'
  2889  00FDEC  73                 	db	115	;'s'
  2890  00FDED  73                 	db	115	;'s'
  2891  00FDEE  61                 	db	97	;'a'
  2892  00FDEF  67                 	db	103	;'g'
  2893  00FDF0  65                 	db	101	;'e'
  2894  00FDF1  73                 	db	115	;'s'
  2895  00FDF2  20                 	db	32
  2896  00FDF3  61                 	db	97	;'a'
  2897  00FDF4  70                 	db	112	;'p'
  2898  00FDF5  70                 	db	112	;'p'
  2899  00FDF6  65                 	db	101	;'e'
  2900  00FDF7  61                 	db	97	;'a'
  2901  00FDF8  72                 	db	114	;'r'
  2902  00FDF9  20                 	db	32
  2903  00FDFA  69                 	db	105	;'i'
  2904  00FDFB  6E                 	db	110	;'n'
  2905  00FDFC  20                 	db	32
  2906  00FDFD  79                 	db	121	;'y'
  2907  00FDFE  65                 	db	101	;'e'
  2908  00FDFF  6C                 	db	108	;'l'
  2909  00FE00  6C                 	db	108	;'l'
  2910  00FE01  6F                 	db	111	;'o'
  2911  00FE02  77                 	db	119	;'w'
  2912  00FE03  0A                 	db	10
  2913  00FE04  0D                 	db	13
  2914  00FE05  00                 	db	0
  2915  00FE06                     STR_60:
  2916  00FE06  4D                 	db	77	;'M'
  2917  00FE07  65                 	db	101	;'e'
  2918  00FE08  61                 	db	97	;'a'
  2919  00FE09  73                 	db	115	;'s'
  2920  00FE0A  75                 	db	117	;'u'
  2921  00FE0B  72                 	db	114	;'r'
  2922  00FE0C  65                 	db	101	;'e'
  2923  00FE0D  64                 	db	100	;'d'
  2924  00FE0E  20                 	db	32
  2925  00FE0F  43                 	db	67	;'C'
  2926  00FE10  75                 	db	117	;'u'
  2927  00FE11  72                 	db	114	;'r'
  2928  00FE12  72                 	db	114	;'r'
  2929  00FE13  65                 	db	101	;'e'
  2930  00FE14  6E                 	db	110	;'n'
  2931  00FE15  74                 	db	116	;'t'
  2932  00FE16  20                 	db	32
  2933  00FE17  69                 	db	105	;'i'
  2934  00FE18  73                 	db	115	;'s'
  2935  00FE19  20                 	db	32
  2936  00FE1A  25                 	db	37
  2937  00FE1B  2E                 	db	46
  2938  00FE1C  33                 	db	51	;'3'
  2939  00FE1D  66                 	db	102	;'f'
  2940  00FE1E  20                 	db	32
  2941  00FE1F  41                 	db	65	;'A'
  2942  00FE20  6D                 	db	109	;'m'
  2943  00FE21  70                 	db	112	;'p'
  2944  00FE22  73                 	db	115	;'s'
  2945  00FE23  0A                 	db	10
  2946  00FE24  0D                 	db	13
  2947  00FE25  00                 	db	0
  2948  00FE26                     STR_87:
  2949  00FE26  55                 	db	85	;'U'
  2950  00FE27  73                 	db	115	;'s'
  2951  00FE28  65                 	db	101	;'e'
  2952  00FE29  72                 	db	114	;'r'
  2953  00FE2A  20                 	db	32
  2954  00FE2B  69                 	db	105	;'i'
  2955  00FE2C  6E                 	db	110	;'n'
  2956  00FE2D  70                 	db	112	;'p'
  2957  00FE2E  75                 	db	117	;'u'
  2958  00FE2F  74                 	db	116	;'t'
  2959  00FE30  20                 	db	32
  2960  00FE31  61                 	db	97	;'a'
  2961  00FE32  70                 	db	112	;'p'
  2962  00FE33  70                 	db	112	;'p'
  2963  00FE34  65                 	db	101	;'e'
  2964  00FE35  61                 	db	97	;'a'
  2965  00FE36  72                 	db	114	;'r'
  2966  00FE37  73                 	db	115	;'s'
  2967  00FE38  20                 	db	32
  2968  00FE39  69                 	db	105	;'i'
  2969  00FE3A  6E                 	db	110	;'n'
  2970  00FE3B  20                 	db	32
  2971  00FE3C  77                 	db	119	;'w'
  2972  00FE3D  68                 	db	104	;'h'
  2973  00FE3E  69                 	db	105	;'i'
  2974  00FE3F  74                 	db	116	;'t'
  2975  00FE40  65                 	db	101	;'e'
  2976  00FE41  0A                 	db	10
  2977  00FE42  0D                 	db	13
  2978  00FE43  00                 	db	0
  2979  00FE44                     STR_84:
  2980  00FE44  49                 	db	73	;'I'
  2981  00FE45  44                 	db	68	;'D'
  2982  00FE46  4E                 	db	78	;'N'
  2983  00FE47  20                 	db	32
  2984  00FE48  73                 	db	115	;'s'
  2985  00FE49  74                 	db	116	;'t'
  2986  00FE4A  72                 	db	114	;'r'
  2987  00FE4B  69                 	db	105	;'i'
  2988  00FE4C  6E                 	db	110	;'n'
  2989  00FE4D  67                 	db	103	;'g'
  2990  00FE4E  20                 	db	32
  2991  00FE4F  61                 	db	97	;'a'
  2992  00FE50  70                 	db	112	;'p'
  2993  00FE51  70                 	db	112	;'p'
  2994  00FE52  65                 	db	101	;'e'
  2995  00FE53  61                 	db	97	;'a'
  2996  00FE54  72                 	db	114	;'r'
  2997  00FE55  73                 	db	115	;'s'
  2998  00FE56  20                 	db	32
  2999  00FE57  69                 	db	105	;'i'
  3000  00FE58  6E                 	db	110	;'n'
  3001  00FE59  20                 	db	32
  3002  00FE5A  67                 	db	103	;'g'
  3003  00FE5B  72                 	db	114	;'r'
  3004  00FE5C  65                 	db	101	;'e'
  3005  00FE5D  65                 	db	101	;'e'
  3006  00FE5E  6E                 	db	110	;'n'
  3007  00FE5F  0A                 	db	10
  3008  00FE60  0D                 	db	13
  3009  00FE61  00                 	db	0
  3010  00FE62                     STR_59:
  3011  00FE62  4D                 	db	77	;'M'
  3012  00FE63  65                 	db	101	;'e'
  3013  00FE64  61                 	db	97	;'a'
  3014  00FE65  73                 	db	115	;'s'
  3015  00FE66  75                 	db	117	;'u'
  3016  00FE67  72                 	db	114	;'r'
  3017  00FE68  65                 	db	101	;'e'
  3018  00FE69  20                 	db	32
  3019  00FE6A  44                 	db	68	;'D'
  3020  00FE6B  65                 	db	101	;'e'
  3021  00FE6C  74                 	db	116	;'t'
  3022  00FE6D  65                 	db	101	;'e'
  3023  00FE6E  63                 	db	99	;'c'
  3024  00FE6F  74                 	db	116	;'t'
  3025  00FE70  65                 	db	101	;'e'
  3026  00FE71  64                 	db	100	;'d'
  3027  00FE72  20                 	db	32
  3028  00FE73  43                 	db	67	;'C'
  3029  00FE74  75                 	db	117	;'u'
  3030  00FE75  72                 	db	114	;'r'
  3031  00FE76  72                 	db	114	;'r'
  3032  00FE77  65                 	db	101	;'e'
  3033  00FE78  6E                 	db	110	;'n'
  3034  00FE79  74                 	db	116	;'t'
  3035  00FE7A  3F                 	db	63	;'?'
  3036  00FE7B  00                 	db	0
  3037  00FE7C                     STR_72:
  3038  00FE7C  4C                 	db	76	;'L'
  3039  00FE7D  6F                 	db	111	;'o'
  3040  00FE7E  61                 	db	97	;'a'
  3041  00FE7F  64                 	db	100	;'d'
  3042  00FE80  20                 	db	32
  3043  00FE81  68                 	db	104	;'h'
  3044  00FE82  61                 	db	97	;'a'
  3045  00FE83  73                 	db	115	;'s'
  3046  00FE84  20                 	db	32
  3047  00FE85  62                 	db	98	;'b'
  3048  00FE86  65                 	db	101	;'e'
  3049  00FE87  65                 	db	101	;'e'
  3050  00FE88  6E                 	db	110	;'n'
  3051  00FE89  20                 	db	32
  3052  00FE8A  64                 	db	100	;'d'
  3053  00FE8B  69                 	db	105	;'i'
  3054  00FE8C  73                 	db	115	;'s'
  3055  00FE8D  61                 	db	97	;'a'
  3056  00FE8E  62                 	db	98	;'b'
  3057  00FE8F  6C                 	db	108	;'l'
  3058  00FE90  65                 	db	101	;'e'
  3059  00FE91  64                 	db	100	;'d'
  3060  00FE92  0A                 	db	10
  3061  00FE93  0D                 	db	13
  3062  00FE94  00                 	db	0
  3063  00FE95                     STR_70:
  3064  00FE95  4C                 	db	76	;'L'
  3065  00FE96  6F                 	db	111	;'o'
  3066  00FE97  61                 	db	97	;'a'
  3067  00FE98  64                 	db	100	;'d'
  3068  00FE99  20                 	db	32
  3069  00FE9A  68                 	db	104	;'h'
  3070  00FE9B  61                 	db	97	;'a'
  3071  00FE9C  73                 	db	115	;'s'
  3072  00FE9D  20                 	db	32
  3073  00FE9E  62                 	db	98	;'b'
  3074  00FE9F  65                 	db	101	;'e'
  3075  00FEA0  65                 	db	101	;'e'
  3076  00FEA1  6E                 	db	110	;'n'
  3077  00FEA2  20                 	db	32
  3078  00FEA3  65                 	db	101	;'e'
  3079  00FEA4  6E                 	db	110	;'n'
  3080  00FEA5  61                 	db	97	;'a'
  3081  00FEA6  62                 	db	98	;'b'
  3082  00FEA7  6C                 	db	108	;'l'
  3083  00FEA8  65                 	db	101	;'e'
  3084  00FEA9  64                 	db	100	;'d'
  3085  00FEAA  0A                 	db	10
  3086  00FEAB  0D                 	db	13
  3087  00FEAC  00                 	db	0
  3088  00FEAD                     STR_73:
  3089  00FEAD  53                 	db	83	;'S'
  3090  00FEAE  65                 	db	101	;'e'
  3091  00FEAF  74                 	db	116	;'t'
  3092  00FEB0  20                 	db	32
  3093  00FEB1  44                 	db	68	;'D'
  3094  00FEB2  69                 	db	105	;'i'
  3095  00FEB3  6D                 	db	109	;'m'
  3096  00FEB4  6D                 	db	109	;'m'
  3097  00FEB5  69                 	db	105	;'i'
  3098  00FEB6  6E                 	db	110	;'n'
  3099  00FEB7  67                 	db	103	;'g'
  3100  00FEB8  20                 	db	32
  3101  00FEB9  50                 	db	80	;'P'
  3102  00FEBA  65                 	db	101	;'e'
  3103  00FEBB  72                 	db	114	;'r'
  3104  00FEBC  63                 	db	99	;'c'
  3105  00FEBD  65                 	db	101	;'e'
  3106  00FEBE  6E                 	db	110	;'n'
  3107  00FEBF  74                 	db	116	;'t'
  3108  00FEC0  61                 	db	97	;'a'
  3109  00FEC1  67                 	db	103	;'g'
  3110  00FEC2  65                 	db	101	;'e'
  3111  00FEC3  20                 	db	32
  3112  00FEC4  00                 	db	0
  3113  00FEC5                     STR_86:
  3114  00FEC5  45                 	db	69	;'E'
  3115  00FEC6  72                 	db	114	;'r'
  3116  00FEC7  72                 	db	114	;'r'
  3117  00FEC8  6F                 	db	111	;'o'
  3118  00FEC9  72                 	db	114	;'r'
  3119  00FECA  73                 	db	115	;'s'
  3120  00FECB  20                 	db	32
  3121  00FECC  61                 	db	97	;'a'
  3122  00FECD  70                 	db	112	;'p'
  3123  00FECE  70                 	db	112	;'p'
  3124  00FECF  65                 	db	101	;'e'
  3125  00FED0  61                 	db	97	;'a'
  3126  00FED1  72                 	db	114	;'r'
  3127  00FED2  20                 	db	32
  3128  00FED3  69                 	db	105	;'i'
  3129  00FED4  6E                 	db	110	;'n'
  3130  00FED5  20                 	db	32
  3131  00FED6  72                 	db	114	;'r'
  3132  00FED7  65                 	db	101	;'e'
  3133  00FED8  64                 	db	100	;'d'
  3134  00FED9  0A                 	db	10
  3135  00FEDA  0D                 	db	13
  3136  00FEDB  00                 	db	0
  3137  00FEDC                     STR_63:
  3138  00FEDC  4D                 	db	77	;'M'
  3139  00FEDD  65                 	db	101	;'e'
  3140  00FEDE  61                 	db	97	;'a'
  3141  00FEDF  73                 	db	115	;'s'
  3142  00FEE0  75                 	db	117	;'u'
  3143  00FEE1  72                 	db	114	;'r'
  3144  00FEE2  65                 	db	101	;'e'
  3145  00FEE3  20                 	db	32
  3146  00FEE4  52                 	db	82	;'R'
  3147  00FEE5  4D                 	db	77	;'M'
  3148  00FEE6  53                 	db	83	;'S'
  3149  00FEE7  20                 	db	32
  3150  00FEE8  56                 	db	86	;'V'
  3151  00FEE9  6F                 	db	111	;'o'
  3152  00FEEA  6C                 	db	108	;'l'
  3153  00FEEB  74                 	db	116	;'t'
  3154  00FEEC  61                 	db	97	;'a'
  3155  00FEED  67                 	db	103	;'g'
  3156  00FEEE  65                 	db	101	;'e'
  3157  00FEEF  3F                 	db	63	;'?'
  3158  00FEF0  00                 	db	0
  3159  00FEF1                     STR_61:
  3160  00FEF1  4D                 	db	77	;'M'
  3161  00FEF2  65                 	db	101	;'e'
  3162  00FEF3  61                 	db	97	;'a'
  3163  00FEF4  73                 	db	115	;'s'
  3164  00FEF5  75                 	db	117	;'u'
  3165  00FEF6  72                 	db	114	;'r'
  3166  00FEF7  65                 	db	101	;'e'
  3167  00FEF8  20                 	db	32
  3168  00FEF9  52                 	db	82	;'R'
  3169  00FEFA  4D                 	db	77	;'M'
  3170  00FEFB  53                 	db	83	;'S'
  3171  00FEFC  20                 	db	32
  3172  00FEFD  43                 	db	67	;'C'
  3173  00FEFE  75                 	db	117	;'u'
  3174  00FEFF  72                 	db	114	;'r'
  3175  00FF00  72                 	db	114	;'r'
  3176  00FF01  65                 	db	101	;'e'
  3177  00FF02  6E                 	db	110	;'n'
  3178  00FF03  74                 	db	116	;'t'
  3179  00FF04  3F                 	db	63	;'?'
  3180  00FF05  00                 	db	0
  3181  00FF06                     STR_55:
  3182  00FF06  4D                 	db	77	;'M'
  3183  00FF07  65                 	db	101	;'e'
  3184  00FF08  61                 	db	97	;'a'
  3185  00FF09  73                 	db	115	;'s'
  3186  00FF0A  75                 	db	117	;'u'
  3187  00FF0B  72                 	db	114	;'r'
  3188  00FF0C  65                 	db	101	;'e'
  3189  00FF0D  20                 	db	32
  3190  00FF0E  44                 	db	68	;'D'
  3191  00FF0F  69                 	db	105	;'i'
  3192  00FF10  65                 	db	101	;'e'
  3193  00FF11  20                 	db	32
  3194  00FF12  54                 	db	84	;'T'
  3195  00FF13  65                 	db	101	;'e'
  3196  00FF14  6D                 	db	109	;'m'
  3197  00FF15  70                 	db	112	;'p'
  3198  00FF16  3F                 	db	63	;'?'
  3199  00FF17  00                 	db	0
  3200  00FF18                     STR_49:
  3201  00FF18  41                 	db	65	;'A'
  3202  00FF19  43                 	db	67	;'C'
  3203  00FF1A  20                 	db	32
  3204  00FF1B  50                 	db	80	;'P'
  3205  00FF1C  6F                 	db	111	;'o'
  3206  00FF1D  77                 	db	119	;'w'
  3207  00FF1E  65                 	db	101	;'e'
  3208  00FF1F  72                 	db	114	;'r'
  3209  00FF20  20                 	db	32
  3210  00FF21  4D                 	db	77	;'M'
  3211  00FF22  65                 	db	101	;'e'
  3212  00FF23  74                 	db	116	;'t'
  3213  00FF24  65                 	db	101	;'e'
  3214  00FF25  72                 	db	114	;'r'
  3215  00FF26  0A                 	db	10
  3216  00FF27  0D                 	db	13
  3217  00FF28  00                 	db	0
  3218  00FF29                     STR_51:
  3219  00FF29  4D                 	db	77	;'M'
  3220  00FF2A  65                 	db	101	;'e'
  3221  00FF2B  61                 	db	97	;'a'
  3222  00FF2C  73                 	db	115	;'s'
  3223  00FF2D  75                 	db	117	;'u'
  3224  00FF2E  72                 	db	114	;'r'
  3225  00FF2F  65                 	db	101	;'e'
  3226  00FF30  20                 	db	32
  3227  00FF31  50                 	db	80	;'P'
  3228  00FF32  4F                 	db	79	;'O'
  3229  00FF33  53                 	db	83	;'S'
  3230  00FF34  33                 	db	51	;'3'
  3231  00FF35  50                 	db	80	;'P'
  3232  00FF36  33                 	db	51	;'3'
  3233  00FF37  3F                 	db	63	;'?'
  3234  00FF38  00                 	db	0
  3235  00FF39                     STR_67:
  3236  00FF39  44                 	db	68	;'D'
  3237  00FF3A  69                 	db	105	;'i'
  3238  00FF3B  73                 	db	115	;'s'
  3239  00FF3C  61                 	db	97	;'a'
  3240  00FF3D  62                 	db	98	;'b'
  3241  00FF3E  6C                 	db	108	;'l'
  3242  00FF3F  65                 	db	101	;'e'
  3243  00FF40  20                 	db	32
  3244  00FF41  44                 	db	68	;'D'
  3245  00FF42  69                 	db	105	;'i'
  3246  00FF43  6D                 	db	109	;'m'
  3247  00FF44  6D                 	db	109	;'m'
  3248  00FF45  69                 	db	105	;'i'
  3249  00FF46  6E                 	db	110	;'n'
  3250  00FF47  67                 	db	103	;'g'
  3251  00FF48  00                 	db	0
  3252  00FF49                     STR_53:
  3253  00FF49  4D                 	db	77	;'M'
  3254  00FF4A  65                 	db	101	;'e'
  3255  00FF4B  61                 	db	97	;'a'
  3256  00FF4C  73                 	db	115	;'s'
  3257  00FF4D  75                 	db	117	;'u'
  3258  00FF4E  72                 	db	114	;'r'
  3259  00FF4F  65                 	db	101	;'e'
  3260  00FF50  20                 	db	32
  3261  00FF51  50                 	db	80	;'P'
  3262  00FF52  4F                 	db	79	;'O'
  3263  00FF53  53                 	db	83	;'S'
  3264  00FF54  31                 	db	49	;'1'
  3265  00FF55  32                 	db	50	;'2'
  3266  00FF56  3F                 	db	63	;'?'
  3267  00FF57  00                 	db	0
  3268  00FF58                     STR_65:
  3269  00FF58  45                 	db	69	;'E'
  3270  00FF59  6E                 	db	110	;'n'
  3271  00FF5A  61                 	db	97	;'a'
  3272  00FF5B  62                 	db	98	;'b'
  3273  00FF5C  6C                 	db	108	;'l'
  3274  00FF5D  65                 	db	101	;'e'
  3275  00FF5E  20                 	db	32
  3276  00FF5F  44                 	db	68	;'D'
  3277  00FF60  69                 	db	105	;'i'
  3278  00FF61  6D                 	db	109	;'m'
  3279  00FF62  6D                 	db	109	;'m'
  3280  00FF63  69                 	db	105	;'i'
  3281  00FF64  6E                 	db	110	;'n'
  3282  00FF65  67                 	db	103	;'g'
  3283  00FF66  00                 	db	0
  3284  00FF67                     STR_57:
  3285  00FF67  4D                 	db	77	;'M'
  3286  00FF68  65                 	db	101	;'e'
  3287  00FF69  61                 	db	97	;'a'
  3288  00FF6A  73                 	db	115	;'s'
  3289  00FF6B  75                 	db	117	;'u'
  3290  00FF6C  72                 	db	114	;'r'
  3291  00FF6D  65                 	db	101	;'e'
  3292  00FF6E  20                 	db	32
  3293  00FF6F  46                 	db	70	;'F'
  3294  00FF70  56                 	db	86	;'V'
  3295  00FF71  52                 	db	82	;'R'
  3296  00FF72  3F                 	db	63	;'?'
  3297  00FF73  00                 	db	0
  3298  00FF74                     STR_71:
  3299  00FF74  44                 	db	68	;'D'
  3300  00FF75  69                 	db	105	;'i'
  3301  00FF76  73                 	db	115	;'s'
  3302  00FF77  61                 	db	97	;'a'
  3303  00FF78  62                 	db	98	;'b'
  3304  00FF79  6C                 	db	108	;'l'
  3305  00FF7A  65                 	db	101	;'e'
  3306  00FF7B  20                 	db	32
  3307  00FF7C  4C                 	db	76	;'L'
  3308  00FF7D  6F                 	db	111	;'o'
  3309  00FF7E  61                 	db	97	;'a'
  3310  00FF7F  64                 	db	100	;'d'
  3311  00FF80  00                 	db	0
  3312  00FF81                     STR_69:
  3313  00FF81  45                 	db	69	;'E'
  3314  00FF82  6E                 	db	110	;'n'
  3315  00FF83  61                 	db	97	;'a'
  3316  00FF84  62                 	db	98	;'b'
  3317  00FF85  6C                 	db	108	;'l'
  3318  00FF86  65                 	db	101	;'e'
  3319  00FF87  20                 	db	32
  3320  00FF88  4C                 	db	76	;'L'
  3321  00FF89  6F                 	db	111	;'o'
  3322  00FF8A  61                 	db	97	;'a'
  3323  00FF8B  64                 	db	100	;'d'
  3324  00FF8C  00                 	db	0
  3325  00FF8D                     STR_79:
  3326  00FF8D  4F                 	db	79	;'O'
  3327  00FF8E  6E                 	db	110	;'n'
  3328  00FF8F  20                 	db	32
  3329  00FF90  54                 	db	84	;'T'
  3330  00FF91  69                 	db	105	;'i'
  3331  00FF92  6D                 	db	109	;'m'
  3332  00FF93  65                 	db	101	;'e'
  3333  00FF94  3F                 	db	63	;'?'
  3334  00FF95  00                 	db	0
  3335  00FF96                     STR_47:
  3336  00FF96  2A                 	db	42
  3337  00FF97  49                 	db	73	;'I'
  3338  00FF98  44                 	db	68	;'D'
  3339  00FF99  4E                 	db	78	;'N'
  3340  00FF9A  3F                 	db	63	;'?'
  3341  00FF9B  00                 	db	0
  3342  00FF9C                     STR_44:
  3343  00FF9C  43                 	db	67	;'C'
  3344  00FF9D  6C                 	db	108	;'l'
  3345  00FF9E  65                 	db	101	;'e'
  3346  00FF9F  61                 	db	97	;'a'
  3347  00FFA0  72                 	db	114	;'r'
  3348  00FFA1  00                 	db	0
  3349  00FFA2                     STR_41:
  3350  00FFA2  52                 	db	82	;'R'
  3351  00FFA3  65                 	db	101	;'e'
  3352  00FFA4  73                 	db	115	;'s'
  3353  00FFA5  65                 	db	101	;'e'
  3354  00FFA6  74                 	db	116	;'t'
  3355  00FFA7  00                 	db	0
  3356  00FFA8                     STR_81:
  3357  00FFA8  48                 	db	72	;'H'
  3358  00FFA9  65                 	db	101	;'e'
  3359  00FFAA  6C                 	db	108	;'l'
  3360  00FFAB  70                 	db	112	;'p'
  3361  00FFAC  00                 	db	0
  3362  00FFAD                     STR_2:
  3363  00FFAD  1B                 	db	27
  3364  00FFAE  5B                 	db	91	;'['
  3365  00FFAF  32                 	db	50	;'2'
  3366  00FFB0  4A                 	db	74	;'J'
  3367  00FFB1  00                 	db	0
  3368  00FFB2                     STR_48:
  3369  00FFB2  49                 	db	73	;'I'
  3370  00FFB3  44                 	db	68	;'D'
  3371  00FFB4  4E                 	db	78	;'N'
  3372  00FFB5  00                 	db	0
  3373  00FFB6                     STR_3:
  3374  00FFB6  1B                 	db	27
  3375  00FFB7  5B                 	db	91	;'['
  3376  00FFB8  48                 	db	72	;'H'
  3377  00FFB9  00                 	db	0
  3378  00FFBA  1B                 	db	27
  3379  00FFBB  5B                 	db	91	;'['
  3380  00FFBC  73                 	db	115	;'s'
  3381  00FFBD  00                 	db	0
  3382  00FFBE  1B                 	db	27
  3383  00FFBF  5B                 	db	91	;'['
  3384  00FFC0  75                 	db	117	;'u'
  3385  00FFC1  00                 	db	0
  3386  00FFC2                     STR_1:
  3387  00FFC2  1B                 	db	27
  3388  00FFC3  5B                 	db	91	;'['
  3389  00FFC4  4B                 	db	75	;'K'
  3390  00FFC5  00                 	db	0
  3391  00FFC6                     STR_20:
  3392  00FFC6  33                 	db	51	;'3'
  3393  00FFC7  30                 	db	48	;'0'
  3394  00FFC8  00                 	db	0
  3395  00FFC9                     STR_30:
  3396  00FFC9  34                 	db	52	;'4'
  3397  00FFCA  30                 	db	48	;'0'
  3398  00FFCB  00                 	db	0
  3399  00FFCC                     STR_21:
  3400  00FFCC  33                 	db	51	;'3'
  3401  00FFCD  31                 	db	49	;'1'
  3402  00FFCE  00                 	db	0
  3403  00FFCF                     STR_31:
  3404  00FFCF  34                 	db	52	;'4'
  3405  00FFD0  31                 	db	49	;'1'
  3406  00FFD1  00                 	db	0
  3407  00FFD2                     STR_22:
  3408  00FFD2  33                 	db	51	;'3'
  3409  00FFD3  32                 	db	50	;'2'
  3410  00FFD4  00                 	db	0
  3411  00FFD5                     STR_32:
  3412  00FFD5  34                 	db	52	;'4'
  3413  00FFD6  32                 	db	50	;'2'
  3414  00FFD7  00                 	db	0
  3415  00FFD8                     STR_23:
  3416  00FFD8  33                 	db	51	;'3'
  3417  00FFD9  33                 	db	51	;'3'
  3418  00FFDA  00                 	db	0
  3419  00FFDB                     STR_33:
  3420  00FFDB  34                 	db	52	;'4'
  3421  00FFDC  33                 	db	51	;'3'
  3422  00FFDD  00                 	db	0
  3423  00FFDE                     STR_24:
  3424  00FFDE  33                 	db	51	;'3'
  3425  00FFDF  34                 	db	52	;'4'
  3426  00FFE0  00                 	db	0
  3427  00FFE1                     STR_34:
  3428  00FFE1  34                 	db	52	;'4'
  3429  00FFE2  34                 	db	52	;'4'
  3430  00FFE3  00                 	db	0
  3431  00FFE4                     STR_25:
  3432  00FFE4  33                 	db	51	;'3'
  3433  00FFE5  35                 	db	53	;'5'
  3434  00FFE6  00                 	db	0
  3435  00FFE7                     STR_35:
  3436  00FFE7  34                 	db	52	;'4'
  3437  00FFE8  35                 	db	53	;'5'
  3438  00FFE9  00                 	db	0
  3439  00FFEA                     STR_26:
  3440  00FFEA  33                 	db	51	;'3'
  3441  00FFEB  36                 	db	54	;'6'
  3442  00FFEC  00                 	db	0
  3443  00FFED                     STR_36:
  3444  00FFED  34                 	db	52	;'4'
  3445  00FFEE  36                 	db	54	;'6'
  3446  00FFEF  00                 	db	0
  3447  00FFF0                     STR_27:
  3448  00FFF0  33                 	db	51	;'3'
  3449  00FFF1  37                 	db	55	;'7'
  3450  00FFF2  00                 	db	0
  3451  00FFF3                     STR_37:
  3452  00FFF3  34                 	db	52	;'4'
  3453  00FFF4  37                 	db	55	;'7'
  3454  00FFF5  00                 	db	0
  3455  00FFF6                     STR_11:
  3456  00FFF6  1B                 	db	27
  3457  00FFF7  5B                 	db	91	;'['
  3458  00FFF8  00                 	db	0
  3459  00FFF9                     STR_17:
  3460  00FFF9  38                 	db	56	;'8'
  3461  00FFFA  00                 	db	0
  3462  00FFFB                     STR_19:
  3463  00FFFB  3B                 	db	59	;';'
  3464  00FFFC  00                 	db	0
  3465  00FFFD                     STR_39:
  3466  00FFFD  6D                 	db	109	;'m'
  3467  00FFFE  00                 	db	0
  3468  0000                     
  3469                           ; #config settings
  3470  00FFFF  00                 	db	0	; dummy byte at the end
  3471  0000                     
  3472                           	psect	cinit
  3473  015766                     __pcinit:
  3474                           	opt stack 0
  3475  015766                     start_initialization:
  3476                           	opt stack 0
  3477  015766                     __initialization:
  3478                           	opt stack 0
  3479                           
  3480                           ; Initialize objects allocated to BANK0 (6 bytes)
  3481                           ; load TBLPTR registers with __pidataBANK0
  3482  015766  0ED0               	movlw	low __pidataBANK0
  3483  015768  6EF6               	movwf	tblptrl,c
  3484  01576A  0E5F               	movlw	high __pidataBANK0
  3485  01576C  6EF7               	movwf	tblptrh,c
  3486  01576E  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3487  015770  6EF8               	movwf	tblptru,c
  3488  015772  EE00  F0E5         	lfsr	0,__pdataBANK0
  3489  015776  EE10 F006          	lfsr	1,6
  3490  01577A                     copy_data0:
  3491  01577A  0009               	tblrd		*+
  3492  01577C  CFF5 FFEE          	movff	tablat,postinc0
  3493  015780  50E5               	movf	postdec1,w,c
  3494  015782  50E1               	movf	fsr1l,w,c
  3495  015784  E1FA               	bnz	copy_data0
  3496                           
  3497                           ; Clear objects allocated to BANK2 (256 bytes)
  3498  015786  EE02  F000         	lfsr	0,__pbssBANK2
  3499  01578A  EE11 F000          	lfsr	1,256
  3500  01578E                     clear_0:
  3501  01578E  6AEE               	clrf	postinc0,c
  3502  015790  50E5               	movf	postdec1,w,c
  3503  015792  50E1               	movf	fsr1l,w,c
  3504  015794  E1FC               	bnz	clear_0
  3505  015796  50E2               	movf	fsr1h,w,c
  3506  015798  E1FA               	bnz	clear_0
  3507                           
  3508                           ; Clear objects allocated to BANK1 (37 bytes)
  3509  01579A  EE01  F0BA         	lfsr	0,__pbssBANK1
  3510  01579E  0E25               	movlw	37
  3511  0157A0                     clear_1:
  3512  0157A0  6AEE               	clrf	postinc0,c
  3513  0157A2  06E8               	decf	wreg,f,c
  3514  0157A4  E1FD               	bnz	clear_1
  3515                           
  3516                           ; Clear objects allocated to BITBANK0 (1 bytes)
  3517  0157A6  0100               	movlb	0
  3518  0157A8  6BEB               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  3519                           
  3520                           ; Clear objects allocated to BANK0 (32 bytes)
  3521  0157AA  EE00  F0C5         	lfsr	0,__pbssBANK0
  3522  0157AE  0E20               	movlw	32
  3523  0157B0                     clear_2:
  3524  0157B0  6AEE               	clrf	postinc0,c
  3525  0157B2  06E8               	decf	wreg,f,c
  3526  0157B4  E1FD               	bnz	clear_2
  3527  0157B6                     end_of_initialization:
  3528                           	opt stack 0
  3529  0157B6                     __end_of__initialization:
  3530                           	opt stack 0
  3531  0157B6  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3532  0157B8  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3533  0157BA  0100               	movlb	0
  3534  0157BC  EF7C  F0A9         	goto	_main	;jump to C main() function
  3535                           tblptru	equ	0xFF8
  3536                           tblptrh	equ	0xFF7
  3537                           tblptrl	equ	0xFF6
  3538                           tablat	equ	0xFF5
  3539                           postinc0	equ	0xFEE
  3540                           wreg	equ	0xFE8
  3541                           postdec1	equ	0xFE5
  3542                           fsr1h	equ	0xFE2
  3543                           fsr1l	equ	0xFE1
  3544                           
  3545                           	psect	bitbssBANK0
  3546  000758                     __pbitbssBANK0:
  3547                           	opt stack 0
  3548  000758                     _eusart2RxStringReady:
  3549                           	opt stack 0
  3550  000758                     	ds	1
  3551                           tblptru	equ	0xFF8
  3552                           tblptrh	equ	0xFF7
  3553                           tblptrl	equ	0xFF6
  3554                           tablat	equ	0xFF5
  3555                           postinc0	equ	0xFEE
  3556                           wreg	equ	0xFE8
  3557                           postdec1	equ	0xFE5
  3558                           fsr1h	equ	0xFE2
  3559                           fsr1l	equ	0xFE1
  3560                           
  3561                           	psect	bssBANK0
  3562  0000C5                     __pbssBANK0:
  3563                           	opt stack 0
  3564  0000C5                     _Imeas:
  3565                           	opt stack 0
  3566  0000C5                     	ds	3
  3567  0000C8                     _Ipk:
  3568                           	opt stack 0
  3569  0000C8                     	ds	3
  3570  0000CB                     _POS3P3_ADC_Result:
  3571                           	opt stack 0
  3572  0000CB                     	ds	3
  3573  0000CE                     _ADC_Result_Scaling:
  3574                           	opt stack 0
  3575  0000CE                     	ds	3
  3576  0000D1                     _ADCC_ADI_InterruptHandler:
  3577                           	opt stack 0
  3578  0000D1                     	ds	3
  3579  0000D4                     _EUSART2_RxDefaultInterruptHandler:
  3580                           	opt stack 0
  3581  0000D4                     	ds	3
  3582  0000D7                     _errno:
  3583                           	opt stack 0
  3584  0000D7                     	ds	2
  3585  0000D9                     _dimming_period:
  3586                           	opt stack 0
  3587  0000D9                     	ds	2
  3588  0000DB                     _background_color:
  3589                           	opt stack 0
  3590  0000DB                     	ds	1
  3591  0000DC                     _foreground_color:
  3592                           	opt stack 0
  3593  0000DC                     	ds	1
  3594  0000DD                     _attribute:
  3595                           	opt stack 0
  3596  0000DD                     	ds	1
  3597  0000DE                     _eusart2RxHead:
  3598                           	opt stack 0
  3599  0000DE                     	ds	1
  3600  0000DF                     _TRIAC_Firing_Angle:
  3601                           	opt stack 0
  3602  0000DF                     	ds	3
  3603  0000E2                     _FVR_ADC_Result:
  3604                           	opt stack 0
  3605  0000E2                     	ds	3
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postdec1	equ	0xFE5
  3613                           fsr1h	equ	0xFE2
  3614                           fsr1l	equ	0xFE1
  3615                           
  3616                           	psect	dataBANK0
  3617  0000E5                     __pdataBANK0:
  3618                           	opt stack 0
  3619  0000E5                     _Vpk:
  3620                           	opt stack 0
  3621  0000E5                     	ds	3
  3622  0000E8                     _Temp_ADC_Offset:
  3623                           	opt stack 0
  3624  0000E8                     	ds	3
  3625                           tblptru	equ	0xFF8
  3626                           tblptrh	equ	0xFF7
  3627                           tblptrl	equ	0xFF6
  3628                           tablat	equ	0xFF5
  3629                           postinc0	equ	0xFEE
  3630                           wreg	equ	0xFE8
  3631                           postdec1	equ	0xFE5
  3632                           fsr1h	equ	0xFE2
  3633                           fsr1l	equ	0xFE1
  3634                           
  3635                           	psect	bssBANK1
  3636  0001BA                     __pbssBANK1:
  3637                           	opt stack 0
  3638  0001BA                     _on_time:
  3639                           	opt stack 0
  3640  0001BA                     	ds	4
  3641  0001BE                     _TMR5_InterruptHandler:
  3642                           	opt stack 0
  3643  0001BE                     	ds	3
  3644  0001C1                     _Vrms:
  3645                           	opt stack 0
  3646  0001C1                     	ds	3
  3647  0001C4                     _Irms:
  3648                           	opt stack 0
  3649  0001C4                     	ds	3
  3650  0001C7                     _Temp_ADC_Result:
  3651                           	opt stack 0
  3652  0001C7                     	ds	3
  3653  0001CA                     _POS12_ADC_Result:
  3654                           	opt stack 0
  3655  0001CA                     	ds	3
  3656  0001CD                     _TMR7_InterruptHandler:
  3657                           	opt stack 0
  3658  0001CD                     	ds	3
  3659  0001D0                     _TMR6_InterruptHandler:
  3660                           	opt stack 0
  3661  0001D0                     	ds	3
  3662  0001D3                     _EUSART2_TxDefaultInterruptHandler:
  3663                           	opt stack 0
  3664  0001D3                     	ds	3
  3665  0001D6                     _timer5ReloadVal:
  3666                           	opt stack 0
  3667  0001D6                     	ds	2
  3668  0001D8                     _timer7ReloadVal:
  3669                           	opt stack 0
  3670  0001D8                     	ds	2
  3671  0001DA                     _eusart2RxCount:
  3672                           	opt stack 0
  3673  0001DA                     	ds	1
  3674  0001DB                     _eusart2RxTail:
  3675                           	opt stack 0
  3676  0001DB                     	ds	1
  3677  0001DC                     _eusart2TxBufferRemaining:
  3678                           	opt stack 0
  3679  0001DC                     	ds	1
  3680  0001DD                     _eusart2TxTail:
  3681                           	opt stack 0
  3682  0001DD                     	ds	1
  3683  0001DE                     _eusart2TxHead:
  3684                           	opt stack 0
  3685  0001DE                     	ds	1
  3686                           tblptru	equ	0xFF8
  3687                           tblptrh	equ	0xFF7
  3688                           tblptrl	equ	0xFF6
  3689                           tablat	equ	0xFF5
  3690                           postinc0	equ	0xFEE
  3691                           wreg	equ	0xFE8
  3692                           postdec1	equ	0xFE5
  3693                           fsr1h	equ	0xFE2
  3694                           fsr1l	equ	0xFE1
  3695                           
  3696                           	psect	bssBANK2
  3697  000200                     __pbssBANK2:
  3698                           	opt stack 0
  3699  000200                     _eusart2TxBuffer:
  3700                           	opt stack 0
  3701  000200                     	ds	128
  3702  000280                     _eusart2RxBuffer:
  3703                           	opt stack 0
  3704  000280                     	ds	64
  3705  0002C0                     _line:
  3706                           	opt stack 0
  3707  0002C0                     	ds	64
  3708                           tblptru	equ	0xFF8
  3709                           tblptrh	equ	0xFF7
  3710                           tblptrl	equ	0xFF6
  3711                           tablat	equ	0xFF5
  3712                           postinc0	equ	0xFEE
  3713                           wreg	equ	0xFE8
  3714                           postdec1	equ	0xFE5
  3715                           fsr1h	equ	0xFE2
  3716                           fsr1l	equ	0xFE1
  3717                           
  3718                           	psect	cstackBANK1
  3719  000100                     __pcstackBANK1:
  3720                           	opt stack 0
  3721  000100                     ??_heartbeatTimerCallback:
  3722  000100                     ADCC_StartConversion@channel:
  3723                           	opt stack 0
  3724  000100                     TMR7_WriteTimer@timerVal:
  3725                           	opt stack 0
  3726                           
  3727                           ; 2 bytes @ 0x0
  3728  000100                     	ds	1
  3729  000101                     
  3730                           ; 1 bytes @ 0x1
  3731  000101                     	ds	1
  3732  000102                     ??_INTERRUPT_InterruptManagerLow:
  3733  000102                     
  3734                           ; 1 bytes @ 0x2
  3735  000102                     	ds	21
  3736  000117                     ??_isdigit:
  3737  000117                     ?_strlen:
  3738                           	opt stack 0
  3739  000117                     ?_strcmp:
  3740                           	opt stack 0
  3741  000117                     ?_strchr:
  3742                           	opt stack 0
  3743  000117                     ?___awmod:
  3744                           	opt stack 0
  3745  000117                     ?___ftpack:
  3746                           	opt stack 0
  3747  000117                     ?__tdiv_to_l_:
  3748                           	opt stack 0
  3749  000117                     ?__div_to_l_:
  3750                           	opt stack 0
  3751  000117                     ?___lldiv:
  3752                           	opt stack 0
  3753  000117                     EUSART2_Read@readValue:
  3754                           	opt stack 0
  3755  000117                     EUSART2_Write@txData:
  3756                           	opt stack 0
  3757  000117                     ___awmod@dividend:
  3758                           	opt stack 0
  3759  000117                     strcat@to:
  3760                           	opt stack 0
  3761  000117                     strcmp@s1:
  3762                           	opt stack 0
  3763  000117                     strlen@s:
  3764                           	opt stack 0
  3765  000117                     strncpy@to:
  3766                           	opt stack 0
  3767  000117                     strchr@ptr:
  3768                           	opt stack 0
  3769  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  3770                           	opt stack 0
  3771  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  3772                           	opt stack 0
  3773  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  3774                           	opt stack 0
  3775  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  3776                           	opt stack 0
  3777  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  3778                           	opt stack 0
  3779  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  3780                           	opt stack 0
  3781  000117                     __div_to_l_@f1:
  3782                           	opt stack 0
  3783  000117                     ___ftpack@arg:
  3784                           	opt stack 0
  3785  000117                     __tdiv_to_l_@f1:
  3786                           	opt stack 0
  3787  000117                     ___ftge@ff1:
  3788                           	opt stack 0
  3789  000117                     ___lldiv@dividend:
  3790                           	opt stack 0
  3791                           
  3792                           ; 4 bytes @ 0x17
  3793  000117                     	ds	1
  3794  000118                     putch@txData:
  3795                           	opt stack 0
  3796  000118                     _isdigit$2486:
  3797                           	opt stack 0
  3798                           
  3799                           ; 1 bytes @ 0x18
  3800  000118                     	ds	1
  3801  000119                     ??_strlen:
  3802  000119                     isdigit@c:
  3803                           	opt stack 0
  3804  000119                     ___awmod@divisor:
  3805                           	opt stack 0
  3806  000119                     strcat@from:
  3807                           	opt stack 0
  3808  000119                     strcmp@s2:
  3809                           	opt stack 0
  3810  000119                     strncpy@from:
  3811                           	opt stack 0
  3812  000119                     strchr@chr:
  3813                           	opt stack 0
  3814                           
  3815                           ; 2 bytes @ 0x19
  3816  000119                     	ds	1
  3817  00011A                     ??_TMR7_Initialize:
  3818  00011A                     ??_TMR5_Initialize:
  3819  00011A                     ___ftpack@exp:
  3820                           	opt stack 0
  3821  00011A                     __div_to_l_@f2:
  3822                           	opt stack 0
  3823  00011A                     __tdiv_to_l_@f2:
  3824                           	opt stack 0
  3825  00011A                     ___ftge@ff2:
  3826                           	opt stack 0
  3827                           
  3828                           ; 3 bytes @ 0x1A
  3829  00011A                     	ds	1
  3830  00011B                     ??_strcmp:
  3831  00011B                     ___awmod@counter:
  3832                           	opt stack 0
  3833  00011B                     ___ftpack@sign:
  3834                           	opt stack 0
  3835  00011B                     strcat@cp:
  3836                           	opt stack 0
  3837  00011B                     strlen@cp:
  3838                           	opt stack 0
  3839  00011B                     strncpy@size:
  3840                           	opt stack 0
  3841  00011B                     ___lldiv@divisor:
  3842                           	opt stack 0
  3843                           
  3844                           ; 4 bytes @ 0x1B
  3845  00011B                     	ds	1
  3846  00011C                     ??___ftpack:
  3847  00011C                     ___awmod@sign:
  3848                           	opt stack 0
  3849  00011C                     strcmp@r:
  3850                           	opt stack 0
  3851                           
  3852                           ; 1 bytes @ 0x1C
  3853  00011C                     	ds	1
  3854  00011D                     ??__tdiv_to_l_:
  3855  00011D                     ??___ftge:
  3856  00011D                     ?_strncmp:
  3857                           	opt stack 0
  3858  00011D                     ?___awdiv:
  3859                           	opt stack 0
  3860  00011D                     ___awdiv@dividend:
  3861                           	opt stack 0
  3862  00011D                     strncpy@cp:
  3863                           	opt stack 0
  3864  00011D                     strncmp@s1:
  3865                           	opt stack 0
  3866  00011D                     __div_to_l_@quot:
  3867                           	opt stack 0
  3868                           
  3869                           ; 4 bytes @ 0x1D
  3870  00011D                     	ds	2
  3871  00011F                     ?___awtoft:
  3872                           	opt stack 0
  3873  00011F                     ?___lltoft:
  3874                           	opt stack 0
  3875  00011F                     ___awdiv@divisor:
  3876                           	opt stack 0
  3877  00011F                     ___awtoft@c:
  3878                           	opt stack 0
  3879  00011F                     strncmp@s2:
  3880                           	opt stack 0
  3881  00011F                     ___lldiv@quotient:
  3882                           	opt stack 0
  3883  00011F                     ___lltoft@c:
  3884                           	opt stack 0
  3885                           
  3886                           ; 4 bytes @ 0x1F
  3887  00011F                     	ds	1
  3888  000120                     __tdiv_to_l_@quot:
  3889                           	opt stack 0
  3890                           
  3891                           ; 4 bytes @ 0x20
  3892  000120                     	ds	1
  3893  000121                     ___awdiv@counter:
  3894                           	opt stack 0
  3895  000121                     __div_to_l_@cntr:
  3896                           	opt stack 0
  3897  000121                     strncmp@len:
  3898                           	opt stack 0
  3899                           
  3900                           ; 2 bytes @ 0x21
  3901  000121                     	ds	1
  3902  000122                     ___awdiv@sign:
  3903                           	opt stack 0
  3904  000122                     ___awtoft@sign:
  3905                           	opt stack 0
  3906  000122                     __div_to_l_@exp1:
  3907                           	opt stack 0
  3908                           
  3909                           ; 1 bytes @ 0x22
  3910  000122                     	ds	1
  3911  000123                     ??_strncmp:
  3912  000123                     ??___lltoft:
  3913  000123                     ?___ftneg:
  3914                           	opt stack 0
  3915  000123                     ___lldiv@counter:
  3916                           	opt stack 0
  3917  000123                     ___awdiv@quotient:
  3918                           	opt stack 0
  3919  000123                     ___ftneg@f1:
  3920                           	opt stack 0
  3921                           
  3922                           ; 3 bytes @ 0x23
  3923  000123                     	ds	1
  3924  000124                     ?___llmod:
  3925                           	opt stack 0
  3926  000124                     __tdiv_to_l_@cntr:
  3927                           	opt stack 0
  3928  000124                     ___llmod@dividend:
  3929                           	opt stack 0
  3930                           
  3931                           ; 4 bytes @ 0x24
  3932  000124                     	ds	1
  3933  000125                     ?___wmul:
  3934                           	opt stack 0
  3935  000125                     __tdiv_to_l_@exp1:
  3936                           	opt stack 0
  3937  000125                     ___wmul@multiplier:
  3938                           	opt stack 0
  3939                           
  3940                           ; 2 bytes @ 0x25
  3941  000125                     	ds	1
  3942  000126                     ?_strstr:
  3943                           	opt stack 0
  3944  000126                     strstr@s1:
  3945                           	opt stack 0
  3946                           
  3947                           ; 2 bytes @ 0x26
  3948  000126                     	ds	1
  3949  000127                     ___lltoft@exp:
  3950                           	opt stack 0
  3951  000127                     ___wmul@multiplicand:
  3952                           	opt stack 0
  3953                           
  3954                           ; 2 bytes @ 0x27
  3955  000127                     	ds	1
  3956  000128                     strstr@s2:
  3957                           	opt stack 0
  3958  000128                     ___llmod@divisor:
  3959                           	opt stack 0
  3960                           
  3961                           ; 4 bytes @ 0x28
  3962  000128                     	ds	1
  3963  000129                     ___wmul@product:
  3964                           	opt stack 0
  3965                           
  3966                           ; 2 bytes @ 0x29
  3967  000129                     	ds	1
  3968  00012A                     
  3969                           ; 1 bytes @ 0x2A
  3970  00012A                     	ds	1
  3971  00012B                     ?_atoi:
  3972                           	opt stack 0
  3973  00012B                     ?___ftadd:
  3974                           	opt stack 0
  3975  00012B                     atoi@s:
  3976                           	opt stack 0
  3977  00012B                     ___ftadd@f1:
  3978                           	opt stack 0
  3979                           
  3980                           ; 3 bytes @ 0x2B
  3981  00012B                     	ds	1
  3982  00012C                     ___llmod@counter:
  3983                           	opt stack 0
  3984                           
  3985                           ; 1 bytes @ 0x2C
  3986  00012C                     	ds	1
  3987  00012D                     ??_atoi:
  3988                           
  3989                           ; 1 bytes @ 0x2D
  3990  00012D                     	ds	1
  3991  00012E                     ___ftadd@f2:
  3992                           	opt stack 0
  3993                           
  3994                           ; 3 bytes @ 0x2E
  3995  00012E                     	ds	1
  3996  00012F                     atoi@sign:
  3997                           	opt stack 0
  3998                           
  3999                           ; 1 bytes @ 0x2F
  4000  00012F                     	ds	1
  4001  000130                     atoi@a:
  4002                           	opt stack 0
  4003                           
  4004                           ; 2 bytes @ 0x30
  4005  000130                     	ds	1
  4006  000131                     ??___ftadd:
  4007                           
  4008                           ; 1 bytes @ 0x31
  4009  000131                     	ds	3
  4010  000134                     ___ftadd@sign:
  4011                           	opt stack 0
  4012                           
  4013                           ; 1 bytes @ 0x34
  4014  000134                     	ds	1
  4015  000135                     ___ftadd@exp2:
  4016                           	opt stack 0
  4017                           
  4018                           ; 1 bytes @ 0x35
  4019  000135                     	ds	1
  4020  000136                     ___ftadd@exp1:
  4021                           	opt stack 0
  4022                           
  4023                           ; 1 bytes @ 0x36
  4024  000136                     	ds	1
  4025  000137                     ?___ftdiv:
  4026                           	opt stack 0
  4027  000137                     ?___ftsub:
  4028                           	opt stack 0
  4029  000137                     ___ftdiv@f1:
  4030                           	opt stack 0
  4031  000137                     ___ftsub@f1:
  4032                           	opt stack 0
  4033                           
  4034                           ; 3 bytes @ 0x37
  4035  000137                     	ds	3
  4036  00013A                     ___ftdiv@f2:
  4037                           	opt stack 0
  4038  00013A                     ___ftsub@f2:
  4039                           	opt stack 0
  4040                           
  4041                           ; 3 bytes @ 0x3A
  4042  00013A                     	ds	3
  4043  00013D                     ??___ftdiv:
  4044  00013D                     
  4045                           ; 1 bytes @ 0x3D
  4046  00013D                     	ds	3
  4047  000140                     ___ftdiv@cntr:
  4048                           	opt stack 0
  4049                           
  4050                           ; 1 bytes @ 0x40
  4051  000140                     	ds	1
  4052  000141                     ___ftdiv@f3:
  4053                           	opt stack 0
  4054                           
  4055                           ; 3 bytes @ 0x41
  4056  000141                     	ds	3
  4057  000144                     ___ftdiv@exp:
  4058                           	opt stack 0
  4059                           
  4060                           ; 1 bytes @ 0x44
  4061  000144                     	ds	1
  4062  000145                     ___ftdiv@sign:
  4063                           	opt stack 0
  4064                           
  4065                           ; 1 bytes @ 0x45
  4066  000145                     	ds	1
  4067  000146                     ?___ftmul:
  4068                           	opt stack 0
  4069  000146                     ___ftmul@f1:
  4070                           	opt stack 0
  4071                           
  4072                           ; 3 bytes @ 0x46
  4073  000146                     	ds	3
  4074  000149                     ___ftmul@f2:
  4075                           	opt stack 0
  4076                           
  4077                           ; 3 bytes @ 0x49
  4078  000149                     	ds	3
  4079  00014C                     ??___ftmul:
  4080                           
  4081                           ; 1 bytes @ 0x4C
  4082  00014C                     	ds	3
  4083  00014F                     ___ftmul@exp:
  4084                           	opt stack 0
  4085                           
  4086                           ; 1 bytes @ 0x4F
  4087  00014F                     	ds	1
  4088  000150                     ___ftmul@f3_as_product:
  4089                           	opt stack 0
  4090                           
  4091                           ; 3 bytes @ 0x50
  4092  000150                     	ds	3
  4093  000153                     ___ftmul@cntr:
  4094                           	opt stack 0
  4095                           
  4096                           ; 1 bytes @ 0x53
  4097  000153                     	ds	1
  4098  000154                     ___ftmul@sign:
  4099                           	opt stack 0
  4100                           
  4101                           ; 1 bytes @ 0x54
  4102  000154                     	ds	1
  4103  000155                     ?_fround:
  4104                           	opt stack 0
  4105  000155                     ?_scale:
  4106                           	opt stack 0
  4107  000155                     ?___fttol:
  4108                           	opt stack 0
  4109  000155                     ___fttol@f1:
  4110                           	opt stack 0
  4111                           
  4112                           ; 3 bytes @ 0x55
  4113  000155                     	ds	3
  4114  000158                     _fround$3129:
  4115                           	opt stack 0
  4116  000158                     _scale$3130:
  4117                           	opt stack 0
  4118                           
  4119                           ; 3 bytes @ 0x58
  4120  000158                     	ds	1
  4121  000159                     ??___fttol:
  4122                           
  4123                           ; 1 bytes @ 0x59
  4124  000159                     	ds	2
  4125  00015B                     scale@scl:
  4126                           	opt stack 0
  4127  00015B                     _fround$3128:
  4128                           	opt stack 0
  4129                           
  4130                           ; 3 bytes @ 0x5B
  4131  00015B                     	ds	3
  4132  00015E                     fround@prec:
  4133                           	opt stack 0
  4134  00015E                     ___fttol@sign1:
  4135                           	opt stack 0
  4136                           
  4137                           ; 1 bytes @ 0x5E
  4138  00015E                     	ds	1
  4139  00015F                     ___fttol@lval:
  4140                           	opt stack 0
  4141                           
  4142                           ; 4 bytes @ 0x5F
  4143  00015F                     	ds	4
  4144  000163                     ___fttol@exp1:
  4145                           	opt stack 0
  4146                           
  4147                           ; 1 bytes @ 0x63
  4148  000163                     	ds	1
  4149  000164                     ?_printf:
  4150                           	opt stack 0
  4151  000164                     printf@f:
  4152                           	opt stack 0
  4153                           
  4154                           ; 2 bytes @ 0x64
  4155  000164                     	ds	8
  4156  00016C                     ??_printf:
  4157                           
  4158                           ; 1 bytes @ 0x6C
  4159  00016C                     	ds	6
  4160  000172                     _printf$3131:
  4161                           	opt stack 0
  4162                           
  4163                           ; 3 bytes @ 0x72
  4164  000172                     	ds	3
  4165  000175                     printf@cp:
  4166                           	opt stack 0
  4167                           
  4168                           ; 2 bytes @ 0x75
  4169  000175                     	ds	2
  4170  000177                     printf@len:
  4171                           	opt stack 0
  4172                           
  4173                           ; 2 bytes @ 0x77
  4174  000177                     	ds	2
  4175  000179                     printf@ap:
  4176                           	opt stack 0
  4177                           
  4178                           ; 2 bytes @ 0x79
  4179  000179                     	ds	2
  4180  00017B                     printf@flag:
  4181                           	opt stack 0
  4182                           
  4183                           ; 2 bytes @ 0x7B
  4184  00017B                     	ds	2
  4185  00017D                     printf@exp:
  4186                           	opt stack 0
  4187                           
  4188                           ; 2 bytes @ 0x7D
  4189  00017D                     	ds	2
  4190  00017F                     printf@tmpval:
  4191                           	opt stack 0
  4192                           
  4193                           ; 4 bytes @ 0x7F
  4194  00017F                     	ds	4
  4195  000183                     printf@val:
  4196                           	opt stack 0
  4197                           
  4198                           ; 4 bytes @ 0x83
  4199  000183                     	ds	4
  4200  000187                     printf@fval:
  4201                           	opt stack 0
  4202                           
  4203                           ; 3 bytes @ 0x87
  4204  000187                     	ds	3
  4205  00018A                     printf@prec:
  4206                           	opt stack 0
  4207                           
  4208                           ; 2 bytes @ 0x8A
  4209  00018A                     	ds	2
  4210  00018C                     printf@c:
  4211                           	opt stack 0
  4212                           
  4213                           ; 1 bytes @ 0x8C
  4214  00018C                     	ds	1
  4215  00018D                     terminal_textAttributes@background_color:
  4216                           	opt stack 0
  4217                           
  4218                           ; 1 bytes @ 0x8D
  4219  00018D                     	ds	1
  4220  00018E                     terminal_textAttributes@input_attribute:
  4221                           	opt stack 0
  4222                           
  4223                           ; 1 bytes @ 0x8E
  4224  00018E                     	ds	1
  4225  00018F                     terminal_textAttributes@foreground_color:
  4226                           	opt stack 0
  4227                           
  4228                           ; 1 bytes @ 0x8F
  4229  00018F                     	ds	1
  4230  000190                     terminal_textAttributes@output_buff:
  4231                           	opt stack 0
  4232                           
  4233                           ; 15 bytes @ 0x90
  4234  000190                     	ds	15
  4235  00019F                     ringBufferLUT@line:
  4236                           	opt stack 0
  4237                           
  4238                           ; 2 bytes @ 0x9F
  4239  00019F                     	ds	2
  4240  0001A1                     ??_ringBufferLUT:
  4241                           
  4242                           ; 1 bytes @ 0xA1
  4243  0001A1                     	ds	2
  4244  0001A3                     ringBufferLUT@angle_degrees:
  4245                           	opt stack 0
  4246                           
  4247                           ; 3 bytes @ 0xA3
  4248  0001A3                     	ds	3
  4249  0001A6                     ringBufferLUT@period_value:
  4250                           	opt stack 0
  4251                           
  4252                           ; 2 bytes @ 0xA6
  4253  0001A6                     	ds	2
  4254  0001A8                     ringBufferLUT@arg_buff:
  4255                           	opt stack 0
  4256                           
  4257                           ; 3 bytes @ 0xA8
  4258  0001A8                     	ds	3
  4259  0001AB                     ringBufferLUT@index:
  4260                           	opt stack 0
  4261                           
  4262                           ; 2 bytes @ 0xAB
  4263  0001AB                     	ds	2
  4264  0001AD                     ringBufferLUT@percentage:
  4265                           	opt stack 0
  4266                           
  4267                           ; 2 bytes @ 0xAD
  4268  0001AD                     	ds	2
  4269  0001AF                     ??_terminal_ringBufferPull:
  4270                           
  4271                           ; 1 bytes @ 0xAF
  4272  0001AF                     	ds	3
  4273  0001B2                     terminal_ringBufferPull@charNumber:
  4274                           	opt stack 0
  4275                           
  4276                           ; 2 bytes @ 0xB2
  4277  0001B2                     	ds	2
  4278  0001B4                     terminal_ringBufferPull@index_1778:
  4279                           	opt stack 0
  4280                           
  4281                           ; 2 bytes @ 0xB4
  4282  0001B4                     	ds	2
  4283  0001B6                     terminal_ringBufferPull@index:
  4284                           	opt stack 0
  4285                           
  4286                           ; 2 bytes @ 0xB6
  4287  0001B6                     	ds	2
  4288  0001B8                     ??_main:
  4289                           
  4290                           ; 1 bytes @ 0xB8
  4291  0001B8                     	ds	2
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           postdec1	equ	0xFE5
  4299                           fsr1h	equ	0xFE2
  4300                           fsr1l	equ	0xFE1
  4301                           
  4302                           	psect	cstackBANK0
  4303  000060                     __pcstackBANK0:
  4304                           	opt stack 0
  4305  000060                     ?i2___ftsub:
  4306                           	opt stack 0
  4307  000060                     atan@y:
  4308                           	opt stack 0
  4309  000060                     i2___ftsub@f1:
  4310                           	opt stack 0
  4311                           
  4312                           ; 3 bytes @ 0x0
  4313  000060                     	ds	3
  4314  000063                     atan@x:
  4315                           	opt stack 0
  4316  000063                     i2___ftsub@f2:
  4317                           	opt stack 0
  4318                           
  4319                           ; 3 bytes @ 0x3
  4320  000063                     	ds	3
  4321  000066                     ?i2_printf:
  4322                           	opt stack 0
  4323  000066                     ?_sin:
  4324                           	opt stack 0
  4325  000066                     ?_sqrt:
  4326                           	opt stack 0
  4327  000066                     atan@recip:
  4328                           	opt stack 0
  4329  000066                     i2printf@f:
  4330                           	opt stack 0
  4331  000066                     sin@f:
  4332                           	opt stack 0
  4333  000066                     sqrt@a:
  4334                           	opt stack 0
  4335                           
  4336                           ; 3 bytes @ 0x6
  4337  000066                     	ds	1
  4338  000067                     atan@val_squared:
  4339                           	opt stack 0
  4340                           
  4341                           ; 3 bytes @ 0x7
  4342  000067                     	ds	1
  4343  000068                     ??i2_printf:
  4344                           
  4345                           ; 1 bytes @ 0x8
  4346  000068                     	ds	1
  4347  000069                     ??_sqrt:
  4348  000069                     sin@y:
  4349                           	opt stack 0
  4350                           
  4351                           ; 3 bytes @ 0x9
  4352  000069                     	ds	1
  4353  00006A                     atan@val:
  4354                           	opt stack 0
  4355                           
  4356                           ; 3 bytes @ 0xA
  4357  00006A                     	ds	2
  4358  00006C                     sqrt@og:
  4359                           	opt stack 0
  4360  00006C                     _sin$3321:
  4361                           	opt stack 0
  4362                           
  4363                           ; 3 bytes @ 0xC
  4364  00006C                     	ds	2
  4365  00006E                     i2_printf$3325:
  4366                           	opt stack 0
  4367                           
  4368                           ; 3 bytes @ 0xE
  4369  00006E                     	ds	1
  4370  00006F                     sqrt@i:
  4371                           	opt stack 0
  4372  00006F                     sin@x2:
  4373                           	opt stack 0
  4374                           
  4375                           ; 3 bytes @ 0xF
  4376  00006F                     	ds	1
  4377  000070                     sqrt@z:
  4378                           	opt stack 0
  4379                           
  4380                           ; 3 bytes @ 0x10
  4381  000070                     	ds	1
  4382  000071                     i2printf@cp:
  4383                           	opt stack 0
  4384                           
  4385                           ; 2 bytes @ 0x11
  4386  000071                     	ds	1
  4387  000072                     sin@sgn:
  4388                           	opt stack 0
  4389                           
  4390                           ; 1 bytes @ 0x12
  4391  000072                     	ds	1
  4392  000073                     ?_currentMeasuredToPeak:
  4393                           	opt stack 0
  4394  000073                     i2printf@len:
  4395                           	opt stack 0
  4396  000073                     currentMeasuredToPeak@Measured:
  4397                           	opt stack 0
  4398  000073                     sqrt@q:
  4399                           	opt stack 0
  4400                           
  4401                           ; 3 bytes @ 0x13
  4402  000073                     	ds	2
  4403  000075                     i2printf@ap:
  4404                           	opt stack 0
  4405                           
  4406                           ; 2 bytes @ 0x15
  4407  000075                     	ds	1
  4408  000076                     currentMeasuredToPeak@Angle:
  4409                           	opt stack 0
  4410  000076                     sqrt@x:
  4411                           	opt stack 0
  4412                           
  4413                           ; 3 bytes @ 0x16
  4414  000076                     	ds	1
  4415  000077                     i2printf@flag:
  4416                           	opt stack 0
  4417                           
  4418                           ; 2 bytes @ 0x17
  4419  000077                     	ds	2
  4420  000079                     ?_asin:
  4421                           	opt stack 0
  4422  000079                     i2printf@exp:
  4423                           	opt stack 0
  4424  000079                     currentMeasuredToPeak@Peak:
  4425                           	opt stack 0
  4426  000079                     asin@x:
  4427                           	opt stack 0
  4428                           
  4429                           ; 3 bytes @ 0x19
  4430  000079                     	ds	2
  4431  00007B                     i2printf@tmpval:
  4432                           	opt stack 0
  4433                           
  4434                           ; 4 bytes @ 0x1B
  4435  00007B                     	ds	1
  4436  00007C                     asin@sgn:
  4437                           	opt stack 0
  4438                           
  4439                           ; 3 bytes @ 0x1C
  4440  00007C                     	ds	3
  4441  00007F                     _asin$3317:
  4442                           	opt stack 0
  4443  00007F                     i2printf@val:
  4444                           	opt stack 0
  4445                           
  4446                           ; 4 bytes @ 0x1F
  4447  00007F                     	ds	3
  4448  000082                     _asin$3320:
  4449                           	opt stack 0
  4450                           
  4451                           ; 3 bytes @ 0x22
  4452  000082                     	ds	1
  4453  000083                     i2printf@fval:
  4454                           	opt stack 0
  4455                           
  4456                           ; 3 bytes @ 0x23
  4457  000083                     	ds	2
  4458  000085                     _asin$3319:
  4459                           	opt stack 0
  4460                           
  4461                           ; 3 bytes @ 0x25
  4462  000085                     	ds	1
  4463  000086                     i2printf@prec:
  4464                           	opt stack 0
  4465                           
  4466                           ; 2 bytes @ 0x26
  4467  000086                     	ds	2
  4468  000088                     i2printf@c:
  4469                           	opt stack 0
  4470  000088                     asin@y:
  4471                           	opt stack 0
  4472                           
  4473                           ; 3 bytes @ 0x28
  4474  000088                     	ds	3
  4475  00008B                     _asin$3318:
  4476                           	opt stack 0
  4477                           
  4478                           ; 3 bytes @ 0x2B
  4479  00008B                     	ds	3
  4480  00008E                     ?_acos:
  4481                           	opt stack 0
  4482  00008E                     acos@x:
  4483                           	opt stack 0
  4484                           
  4485                           ; 3 bytes @ 0x2E
  4486  00008E                     	ds	3
  4487  000091                     _acos$3316:
  4488                           	opt stack 0
  4489                           
  4490                           ; 3 bytes @ 0x31
  4491  000091                     	ds	3
  4492  000094                     ?_peakToRMS:
  4493                           	opt stack 0
  4494  000094                     peakToRMS@Peak:
  4495                           	opt stack 0
  4496                           
  4497                           ; 3 bytes @ 0x34
  4498  000094                     	ds	3
  4499  000097                     peakToRMS@Angle:
  4500                           	opt stack 0
  4501                           
  4502                           ; 3 bytes @ 0x37
  4503  000097                     	ds	3
  4504  00009A                     _peakToRMS$3310:
  4505                           	opt stack 0
  4506                           
  4507                           ; 3 bytes @ 0x3A
  4508  00009A                     	ds	3
  4509  00009D                     _peakToRMS$3311:
  4510                           	opt stack 0
  4511                           
  4512                           ; 3 bytes @ 0x3D
  4513  00009D                     	ds	3
  4514  0000A0                     _peakToRMS$3309:
  4515                           	opt stack 0
  4516                           
  4517                           ; 3 bytes @ 0x40
  4518  0000A0                     	ds	3
  4519  0000A3                     peakToRMS@RMS:
  4520                           	opt stack 0
  4521                           
  4522                           ; 3 bytes @ 0x43
  4523  0000A3                     	ds	3
  4524  0000A6                     _ADC_postProcessingCallback$3313:
  4525                           	opt stack 0
  4526                           
  4527                           ; 3 bytes @ 0x46
  4528  0000A6                     	ds	3
  4529  0000A9                     _ADC_postProcessingCallback$3314:
  4530                           	opt stack 0
  4531                           
  4532                           ; 3 bytes @ 0x49
  4533  0000A9                     	ds	3
  4534  0000AC                     _ADC_postProcessingCallback$3315:
  4535                           	opt stack 0
  4536                           
  4537                           ; 3 bytes @ 0x4C
  4538  0000AC                     	ds	3
  4539  0000AF                     ADC_postProcessingCallback@currentADCChannel:
  4540                           	opt stack 0
  4541                           
  4542                           ; 1 bytes @ 0x4F
  4543  0000AF                     	ds	1
  4544  0000B0                     _ADC_postProcessingCallback$3312:
  4545                           	opt stack 0
  4546                           
  4547                           ; 3 bytes @ 0x50
  4548  0000B0                     	ds	3
  4549  0000B3                     ??_INTERRUPT_InterruptManagerHigh:
  4550                           
  4551                           ; 1 bytes @ 0x53
  4552  0000B3                     	ds	18
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           postinc0	equ	0xFEE
  4558                           wreg	equ	0xFE8
  4559                           postdec1	equ	0xFE5
  4560                           fsr1h	equ	0xFE2
  4561                           fsr1l	equ	0xFE1
  4562                           
  4563                           	psect	cstackCOMRAM
  4564  000001                     __pcstackCOMRAM:
  4565                           	opt stack 0
  4566  000001                     ??i2_isdigit:
  4567  000001                     ?_ADCC_GetConversionResult:
  4568                           	opt stack 0
  4569  000001                     ?i2___awmod:
  4570                           	opt stack 0
  4571  000001                     ?i2___ftpack:
  4572                           	opt stack 0
  4573  000001                     ?i2__div_to_l_:
  4574                           	opt stack 0
  4575  000001                     ?i2__tdiv_to_l_:
  4576                           	opt stack 0
  4577  000001                     ?i2___lldiv:
  4578                           	opt stack 0
  4579  000001                     i2EUSART2_Write@txData:
  4580                           	opt stack 0
  4581  000001                     TMR5_WriteTimer@timerVal:
  4582                           	opt stack 0
  4583  000001                     i2___awmod@dividend:
  4584                           	opt stack 0
  4585  000001                     frexp@value:
  4586                           	opt stack 0
  4587  000001                     i2__div_to_l_@f1:
  4588                           	opt stack 0
  4589  000001                     i2___ftpack@arg:
  4590                           	opt stack 0
  4591  000001                     i2__tdiv_to_l_@f1:
  4592                           	opt stack 0
  4593  000001                     i2___lldiv@dividend:
  4594                           	opt stack 0
  4595                           
  4596                           ; 4 bytes @ 0x0
  4597  000001                     	ds	1
  4598  000002                     i2putch@txData:
  4599                           	opt stack 0
  4600  000002                     i2_isdigit$2486:
  4601                           	opt stack 0
  4602                           
  4603                           ; 1 bytes @ 0x1
  4604  000002                     	ds	1
  4605  000003                     ??_ADCC_GetConversionResult:
  4606  000003                     i2isdigit@c:
  4607                           	opt stack 0
  4608  000003                     i2___awmod@divisor:
  4609                           	opt stack 0
  4610                           
  4611                           ; 2 bytes @ 0x2
  4612  000003                     	ds	1
  4613  000004                     i2___ftpack@exp:
  4614                           	opt stack 0
  4615  000004                     frexp@eptr:
  4616                           	opt stack 0
  4617  000004                     i2__div_to_l_@f2:
  4618                           	opt stack 0
  4619  000004                     i2__tdiv_to_l_@f2:
  4620                           	opt stack 0
  4621                           
  4622                           ; 3 bytes @ 0x3
  4623  000004                     	ds	1
  4624  000005                     i2___awmod@counter:
  4625                           	opt stack 0
  4626  000005                     i2___ftpack@sign:
  4627                           	opt stack 0
  4628  000005                     i2___lldiv@divisor:
  4629                           	opt stack 0
  4630                           
  4631                           ; 4 bytes @ 0x4
  4632  000005                     	ds	1
  4633  000006                     ??_frexp:
  4634  000006                     ??i2___ftpack:
  4635  000006                     i2___awmod@sign:
  4636                           	opt stack 0
  4637                           
  4638                           ; 1 bytes @ 0x5
  4639  000006                     	ds	1
  4640  000007                     ??i2__tdiv_to_l_:
  4641  000007                     ?i2___awdiv:
  4642                           	opt stack 0
  4643  000007                     i2___awdiv@dividend:
  4644                           	opt stack 0
  4645  000007                     i2__div_to_l_@quot:
  4646                           	opt stack 0
  4647                           
  4648                           ; 4 bytes @ 0x6
  4649  000007                     	ds	2
  4650  000009                     ?___lwtoft:
  4651                           	opt stack 0
  4652  000009                     ?i2___lltoft:
  4653                           	opt stack 0
  4654  000009                     ___lwtoft@c:
  4655                           	opt stack 0
  4656  000009                     i2___awdiv@divisor:
  4657                           	opt stack 0
  4658  000009                     i2___lldiv@quotient:
  4659                           	opt stack 0
  4660  000009                     i2___lltoft@c:
  4661                           	opt stack 0
  4662                           
  4663                           ; 4 bytes @ 0x8
  4664  000009                     	ds	1
  4665  00000A                     i2__tdiv_to_l_@quot:
  4666                           	opt stack 0
  4667                           
  4668                           ; 4 bytes @ 0x9
  4669  00000A                     	ds	1
  4670  00000B                     i2___awdiv@counter:
  4671                           	opt stack 0
  4672  00000B                     i2__div_to_l_@cntr:
  4673                           	opt stack 0
  4674                           
  4675                           ; 1 bytes @ 0xA
  4676  00000B                     	ds	1
  4677  00000C                     i2___awdiv@sign:
  4678                           	opt stack 0
  4679  00000C                     i2__div_to_l_@exp1:
  4680                           	opt stack 0
  4681                           
  4682                           ; 1 bytes @ 0xB
  4683  00000C                     	ds	1
  4684  00000D                     ??i2___lltoft:
  4685  00000D                     i2___lldiv@counter:
  4686                           	opt stack 0
  4687  00000D                     i2___awdiv@quotient:
  4688                           	opt stack 0
  4689                           
  4690                           ; 2 bytes @ 0xC
  4691  00000D                     	ds	1
  4692  00000E                     ?i2___llmod:
  4693                           	opt stack 0
  4694  00000E                     i2__tdiv_to_l_@cntr:
  4695                           	opt stack 0
  4696  00000E                     i2___llmod@dividend:
  4697                           	opt stack 0
  4698                           
  4699                           ; 4 bytes @ 0xD
  4700  00000E                     	ds	1
  4701  00000F                     ?i2___wmul:
  4702                           	opt stack 0
  4703  00000F                     i2__tdiv_to_l_@exp1:
  4704                           	opt stack 0
  4705  00000F                     i2___wmul@multiplier:
  4706                           	opt stack 0
  4707                           
  4708                           ; 2 bytes @ 0xE
  4709  00000F                     	ds	2
  4710  000011                     i2___lltoft@exp:
  4711                           	opt stack 0
  4712  000011                     i2___wmul@multiplicand:
  4713                           	opt stack 0
  4714                           
  4715                           ; 2 bytes @ 0x10
  4716  000011                     	ds	1
  4717  000012                     i2___llmod@divisor:
  4718                           	opt stack 0
  4719                           
  4720                           ; 4 bytes @ 0x11
  4721  000012                     	ds	1
  4722  000013                     i2___wmul@product:
  4723                           	opt stack 0
  4724                           
  4725                           ; 2 bytes @ 0x12
  4726  000013                     	ds	2
  4727  000015                     ?i2___ftdiv:
  4728                           	opt stack 0
  4729  000015                     i2___ftdiv@f1:
  4730                           	opt stack 0
  4731                           
  4732                           ; 3 bytes @ 0x14
  4733  000015                     	ds	1
  4734  000016                     i2___llmod@counter:
  4735                           	opt stack 0
  4736                           
  4737                           ; 1 bytes @ 0x15
  4738  000016                     	ds	2
  4739  000018                     i2___ftdiv@f2:
  4740                           	opt stack 0
  4741                           
  4742                           ; 3 bytes @ 0x17
  4743  000018                     	ds	3
  4744  00001B                     ??i2___ftdiv:
  4745                           
  4746                           ; 1 bytes @ 0x1A
  4747  00001B                     	ds	3
  4748  00001E                     i2___ftdiv@cntr:
  4749                           	opt stack 0
  4750                           
  4751                           ; 1 bytes @ 0x1D
  4752  00001E                     	ds	1
  4753  00001F                     i2___ftdiv@exp:
  4754                           	opt stack 0
  4755                           
  4756                           ; 1 bytes @ 0x1E
  4757  00001F                     	ds	1
  4758  000020                     i2___ftdiv@f3:
  4759                           	opt stack 0
  4760                           
  4761                           ; 3 bytes @ 0x1F
  4762  000020                     	ds	3
  4763  000023                     i2___ftdiv@sign:
  4764                           	opt stack 0
  4765                           
  4766                           ; 1 bytes @ 0x22
  4767  000023                     	ds	1
  4768  000024                     ?i2___ftneg:
  4769                           	opt stack 0
  4770  000024                     i2___ftneg@f1:
  4771                           	opt stack 0
  4772                           
  4773                           ; 3 bytes @ 0x23
  4774  000024                     	ds	3
  4775  000027                     ?_fabs:
  4776                           	opt stack 0
  4777  000027                     ?i2___ftmul:
  4778                           	opt stack 0
  4779  000027                     fabs@d:
  4780                           	opt stack 0
  4781  000027                     i2___ftmul@f1:
  4782                           	opt stack 0
  4783                           
  4784                           ; 3 bytes @ 0x26
  4785  000027                     	ds	3
  4786  00002A                     i2___ftge@ff1:
  4787                           	opt stack 0
  4788  00002A                     i2___ftmul@f2:
  4789                           	opt stack 0
  4790                           
  4791                           ; 3 bytes @ 0x29
  4792  00002A                     	ds	3
  4793  00002D                     ??i2___ftmul:
  4794  00002D                     i2___ftge@ff2:
  4795                           	opt stack 0
  4796                           
  4797                           ; 3 bytes @ 0x2C
  4798  00002D                     	ds	3
  4799  000030                     ??i2___ftge:
  4800  000030                     i2___ftmul@exp:
  4801                           	opt stack 0
  4802                           
  4803                           ; 1 bytes @ 0x2F
  4804  000030                     	ds	1
  4805  000031                     i2___ftmul@f3_as_product:
  4806                           	opt stack 0
  4807                           
  4808                           ; 3 bytes @ 0x30
  4809  000031                     	ds	3
  4810  000034                     i2___ftmul@cntr:
  4811                           	opt stack 0
  4812                           
  4813                           ; 1 bytes @ 0x33
  4814  000034                     	ds	1
  4815  000035                     i2___ftmul@sign:
  4816                           	opt stack 0
  4817                           
  4818                           ; 1 bytes @ 0x34
  4819  000035                     	ds	1
  4820  000036                     ?i2_fround:
  4821                           	opt stack 0
  4822  000036                     ?i2_scale:
  4823                           	opt stack 0
  4824                           
  4825                           ; 3 bytes @ 0x35
  4826  000036                     	ds	3
  4827  000039                     i2_fround$3323:
  4828                           	opt stack 0
  4829  000039                     i2_scale$3324:
  4830                           	opt stack 0
  4831                           
  4832                           ; 3 bytes @ 0x38
  4833  000039                     	ds	3
  4834  00003C                     i2scale@scl:
  4835                           	opt stack 0
  4836  00003C                     i2_fround$3322:
  4837                           	opt stack 0
  4838                           
  4839                           ; 3 bytes @ 0x3B
  4840  00003C                     	ds	1
  4841  00003D                     ?i2___fttol:
  4842                           	opt stack 0
  4843  00003D                     i2___fttol@f1:
  4844                           	opt stack 0
  4845                           
  4846                           ; 3 bytes @ 0x3C
  4847  00003D                     	ds	2
  4848  00003F                     i2fround@prec:
  4849                           	opt stack 0
  4850                           
  4851                           ; 1 bytes @ 0x3E
  4852  00003F                     	ds	1
  4853  000040                     ?i2___ftadd:
  4854                           	opt stack 0
  4855  000040                     i2___ftadd@f1:
  4856                           	opt stack 0
  4857                           
  4858                           ; 3 bytes @ 0x3F
  4859  000040                     	ds	1
  4860  000041                     ??i2___fttol:
  4861                           
  4862                           ; 1 bytes @ 0x40
  4863  000041                     	ds	2
  4864  000043                     i2___ftadd@f2:
  4865                           	opt stack 0
  4866                           
  4867                           ; 3 bytes @ 0x42
  4868  000043                     	ds	3
  4869  000046                     ??i2___ftadd:
  4870  000046                     i2___fttol@sign1:
  4871                           	opt stack 0
  4872                           
  4873                           ; 1 bytes @ 0x45
  4874  000046                     	ds	1
  4875  000047                     i2___fttol@lval:
  4876                           	opt stack 0
  4877                           
  4878                           ; 4 bytes @ 0x46
  4879  000047                     	ds	2
  4880  000049                     i2___ftadd@sign:
  4881                           	opt stack 0
  4882                           
  4883                           ; 1 bytes @ 0x48
  4884  000049                     	ds	1
  4885  00004A                     i2___ftadd@exp2:
  4886                           	opt stack 0
  4887                           
  4888                           ; 1 bytes @ 0x49
  4889  00004A                     	ds	1
  4890  00004B                     i2___ftadd@exp1:
  4891                           	opt stack 0
  4892  00004B                     i2___fttol@exp1:
  4893                           	opt stack 0
  4894                           
  4895                           ; 1 bytes @ 0x4A
  4896  00004B                     	ds	1
  4897  00004C                     ?_eval_poly:
  4898                           	opt stack 0
  4899  00004C                     ?___altoft:
  4900                           	opt stack 0
  4901  00004C                     eval_poly@x:
  4902                           	opt stack 0
  4903  00004C                     ___altoft@c:
  4904                           	opt stack 0
  4905                           
  4906                           ; 4 bytes @ 0x4B
  4907  00004C                     	ds	3
  4908  00004F                     eval_poly@d:
  4909                           	opt stack 0
  4910                           
  4911                           ; 2 bytes @ 0x4E
  4912  00004F                     	ds	1
  4913  000050                     ??___altoft:
  4914                           
  4915                           ; 1 bytes @ 0x4F
  4916  000050                     	ds	1
  4917  000051                     eval_poly@n:
  4918                           	opt stack 0
  4919                           
  4920                           ; 2 bytes @ 0x50
  4921  000051                     	ds	2
  4922  000053                     ??_eval_poly:
  4923                           
  4924                           ; 1 bytes @ 0x52
  4925  000053                     	ds	1
  4926  000054                     ___altoft@exp:
  4927                           	opt stack 0
  4928                           
  4929                           ; 1 bytes @ 0x53
  4930  000054                     	ds	1
  4931  000055                     ___altoft@sign:
  4932                           	opt stack 0
  4933  000055                     eval_poly@res:
  4934                           	opt stack 0
  4935                           
  4936                           ; 3 bytes @ 0x54
  4937  000055                     	ds	1
  4938  000056                     ?_floor:
  4939                           	opt stack 0
  4940  000056                     floor@x:
  4941                           	opt stack 0
  4942                           
  4943                           ; 3 bytes @ 0x55
  4944  000056                     	ds	2
  4945  000058                     ?_atan:
  4946                           	opt stack 0
  4947  000058                     atan@f:
  4948                           	opt stack 0
  4949                           
  4950                           ; 3 bytes @ 0x57
  4951  000058                     	ds	1
  4952  000059                     floor@i:
  4953                           	opt stack 0
  4954                           
  4955                           ; 3 bytes @ 0x58
  4956  000059                     	ds	2
  4957  00005B                     
  4958                           ; 1 bytes @ 0x5A
  4959  00005B                     	ds	1
  4960  00005C                     floor@expon:
  4961                           	opt stack 0
  4962                           
  4963                           ; 2 bytes @ 0x5B
  4964  00005C                     	ds	2
  4965  00005E                     tblptru	equ	0xFF8
  4966                           tblptrh	equ	0xFF7
  4967                           tblptrl	equ	0xFF6
  4968                           tablat	equ	0xFF5
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           postdec1	equ	0xFE5
  4972                           fsr1h	equ	0xFE2
  4973                           fsr1l	equ	0xFE1
  4974                           
  4975                           ; 1 bytes @ 0x5D
  4976 ;;
  4977 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4978 ;;
  4979 ;; *************** function _main *****************
  4980 ;; Defined at:
  4981 ;;		line 239 in file "main.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;		None
  4986 ;; Return value:  Size  Location     Type
  4987 ;;                  1    wreg      void 
  4988 ;; Registers used:
  4989 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  4995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4999 ;;Total ram usage:        2 bytes
  5000 ;; Hardware stack levels required when called:   22
  5001 ;; This function calls:
  5002 ;;		_ADCC_SetADIInterruptHandler
  5003 ;;		_SYSTEM_Initialize
  5004 ;;		_TMR6_SetInterruptHandler
  5005 ;;		_TMR7_SetInterruptHandler
  5006 ;;		_terminal_clearTerminal
  5007 ;;		_terminal_ringBufferPull
  5008 ;;		_terminal_setCursorHome
  5009 ;;		_terminal_textAttributesReset
  5010 ;; This function is called by:
  5011 ;;		Startup code after reset
  5012 ;; This function uses a non-reentrant model
  5013 ;;
  5014                           
  5015                           	psect	text0
  5016  0152F8                     __ptext0:
  5017                           	opt stack 0
  5018  0152F8                     _main:
  5019                           	opt stack 9
  5020                           
  5021                           ;main.c: 244: _delay((unsigned long)((250)*(64000000/4000.0)));
  5022                           
  5023                           ;incstack = 0
  5024  0152F8  0E15               	movlw	21
  5025  0152FA  0101               	movlb	1	; () banked
  5026  0152FC  6FB9               	movwf	(??_main+1)& (0+255),b
  5027  0152FE  0E4B               	movlw	75
  5028  015300  6FB8               	movwf	??_main& (0+255),b
  5029  015302  0EBE               	movlw	190
  5030  015304                     u15857:
  5031  015304  2EE8               	decfsz	wreg,f,c
  5032  015306  D7FE               	bra	u15857
  5033  015308  2FB8               	decfsz	??_main& (0+255),f,b
  5034  01530A  D7FC               	bra	u15857
  5035  01530C  2FB9               	decfsz	(??_main+1)& (0+255),f,b
  5036  01530E  D7FA               	bra	u15857
  5037  015310  F000               	nop	
  5038                           
  5039                           ;main.c: 247: SYSTEM_Initialize();
  5040  015312  EC75  F0AE         	call	_SYSTEM_Initialize	;wreg free
  5041                           
  5042                           ;main.c: 250: LATGbits.LATG0 = 1;
  5043  015316  807F               	bsf	3967,0,c	;volatile
  5044                           
  5045                           ;main.c: 253: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  5046  015318  0EBC               	movlw	low _heartbeatTimerCallback
  5047  01531A  0101               	movlb	1	; () banked
  5048  01531C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  5049  01531E  0E5C               	movlw	high _heartbeatTimerCallback
  5050  015320  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5051  015322  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  5052  015324  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5053  015326  ECAF  F0AF         	call	_TMR6_SetInterruptHandler	;wreg free
  5054                           
  5055                           ;main.c: 256: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  5056  01532A  0E80               	movlw	low _ADC_postProcessingCallback
  5057  01532C  0101               	movlb	1	; () banked
  5058  01532E  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  5059  015330  0E22               	movlw	high _ADC_postProcessingCallback
  5060  015332  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  5061  015334  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  5062  015336  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  5063  015338  ECCB  F0AF         	call	_ADCC_SetADIInterruptHandler	;wreg free
  5064                           
  5065                           ;main.c: 259: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  5066  01533C  0E6E               	movlw	low _acquisitionTimerCallback
  5067  01533E  0101               	movlb	1	; () banked
  5068  015340  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  5069  015342  0E58               	movlw	high _acquisitionTimerCallback
  5070  015344  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5071  015346  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  5072  015348  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5073  01534A  ECA8  F0AF         	call	_TMR7_SetInterruptHandler	;wreg free
  5074                           
  5075                           ;main.c: 262: (INTCONbits.GIEH = 1);
  5076  01534E  8EF2               	bsf	intcon,7,c	;volatile
  5077                           
  5078                           ;main.c: 265: (INTCONbits.GIEL = 1);
  5079  015350  8CF2               	bsf	intcon,6,c	;volatile
  5080                           
  5081                           ;main.c: 269: terminal_clearTerminal();
  5082  015352  EC99  F0AF         	call	_terminal_clearTerminal	;wreg free
  5083                           
  5084                           ;main.c: 270: terminal_setCursorHome();
  5085  015356  EC89  F0AF         	call	_terminal_setCursorHome	;wreg free
  5086                           
  5087                           ;main.c: 271: terminal_textAttributesReset();
  5088  01535A  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5089  01535E                     
  5090                           ;main.c: 275: {
  5091                           ;main.c: 278: if (eusart2RxStringReady) {
  5092  01535E  0100               	movlb	0	; () banked
  5093  015360  A1EB               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5094  015362  D7FD               	goto	l776
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;main.c: 280: terminal_ringBufferPull();
  5098  015364  EC7A  F0A0         	call	_terminal_ringBufferPull	;wreg free
  5099  015368  D7FA               	goto	l776
  5100  01536A                     __end_of_main:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           intcon	equ	0xFF2
  5107                           postinc0	equ	0xFEE
  5108                           wreg	equ	0xFE8
  5109                           postdec1	equ	0xFE5
  5110                           fsr1h	equ	0xFE2
  5111                           fsr1l	equ	0xFE1
  5112                           
  5113 ;; *************** function _terminal_setCursorHome *****************
  5114 ;; Defined at:
  5115 ;;		line 85 in file "ring_buffer_interface.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;		None
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;		None
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  1    wreg      void 
  5122 ;; Registers used:
  5123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5133 ;;Total ram usage:        0 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:   18
  5136 ;; This function calls:
  5137 ;;		_printf
  5138 ;; This function is called by:
  5139 ;;		_main
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text1
  5144  015F12                     __ptext1:
  5145                           	opt stack 0
  5146  015F12                     _terminal_setCursorHome:
  5147                           	opt stack 12
  5148                           
  5149                           ;ring_buffer_interface.c: 86: printf("\033[H");
  5150                           
  5151                           ;incstack = 0
  5152  015F12  0EB6               	movlw	low STR_3
  5153  015F14  0101               	movlb	1	; () banked
  5154  015F16  6F64               	movwf	printf@f& (0+255),b
  5155  015F18  0EFF               	movlw	high STR_3
  5156  015F1A  6F65               	movwf	(printf@f+1)& (0+255),b
  5157  015F1C  EC00  F080         	call	_printf	;wreg free
  5158  015F20  0012               	return		;funcret
  5159  015F22                     __end_of_terminal_setCursorHome:
  5160                           	opt stack 0
  5161                           tblptru	equ	0xFF8
  5162                           tblptrh	equ	0xFF7
  5163                           tblptrl	equ	0xFF6
  5164                           tablat	equ	0xFF5
  5165                           intcon	equ	0xFF2
  5166                           postinc0	equ	0xFEE
  5167                           wreg	equ	0xFE8
  5168                           postdec1	equ	0xFE5
  5169                           fsr1h	equ	0xFE2
  5170                           fsr1l	equ	0xFE1
  5171                           
  5172 ;; *************** function _terminal_ringBufferPull *****************
  5173 ;; Defined at:
  5174 ;;		line 12 in file "ring_buffer_interface.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  index           2  180[BANK1 ] int 
  5179 ;;  index           2  182[BANK1 ] int 
  5180 ;;  charNumber      2  178[BANK1 ] int 
  5181 ;; Return value:  Size  Location     Type
  5182 ;;                  1    wreg      void 
  5183 ;; Registers used:
  5184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5185 ;; Tracked objects:
  5186 ;;		On entry : 0/0
  5187 ;;		On exit  : 0/0
  5188 ;;		Unchanged: 0/0
  5189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5191 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5192 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5193 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5194 ;;Total ram usage:        9 bytes
  5195 ;; Hardware stack levels used:    1
  5196 ;; Hardware stack levels required when called:   21
  5197 ;; This function calls:
  5198 ;;		_EUSART2_Read
  5199 ;;		_ringBufferLUT
  5200 ;;		_strlen
  5201 ;; This function is called by:
  5202 ;;		_main
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text2
  5207  0140F4                     __ptext2:
  5208                           	opt stack 0
  5209  0140F4                     _terminal_ringBufferPull:
  5210                           	opt stack 9
  5211                           
  5212                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  5213                           
  5214                           ;incstack = 0
  5215  0140F4  C1DA  F1B2         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  5216  0140F8  0101               	movlb	1	; () banked
  5217  0140FA  6BB3               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  5218                           
  5219                           ; BSR set to: 1
  5220                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  5221  0140FC  0E00               	movlw	0
  5222  0140FE  6FB7               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  5223  014100  0E00               	movlw	0
  5224  014102  6FB6               	movwf	terminal_ringBufferPull@index& (0+255),b
  5225  014104                     l10113:
  5226                           
  5227                           ; BSR set to: 1
  5228  014104  BFB7               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  5229  014106  D006               	goto	l815
  5230  014108  51B7               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5231  01410A  E10F               	bnz	l10123
  5232  01410C  0E40               	movlw	64
  5233  01410E  5DB6               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  5234  014110  B0D8               	btfsc	status,0,c
  5235  014112  D00B               	goto	u12160
  5236  014114                     l815:
  5237                           
  5238                           ; BSR set to: 1
  5239                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  5240                           
  5241                           ; BSR set to: 1
  5242  014114  0EC0               	movlw	low _line
  5243  014116  25B6               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  5244  014118  6ED9               	movwf	fsr2l,c
  5245  01411A  0E02               	movlw	high _line
  5246  01411C  21B7               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5247  01411E  6EDA               	movwf	fsr2h,c
  5248  014120  0E00               	movlw	0
  5249  014122  6EDF               	movwf	indf2,c
  5250                           
  5251                           ; BSR set to: 1
  5252  014124  4BB6               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  5253  014126  2BB7               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  5254  014128  D7ED               	goto	l10113
  5255  01412A                     u12160:
  5256  01412A                     l10123:
  5257                           
  5258                           ; BSR set to: 1
  5259                           ;ring_buffer_interface.c: 21: }
  5260                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  5261  01412A  0E00               	movlw	0
  5262  01412C  6FB5               	movwf	(terminal_ringBufferPull@index_1778+1)& (0+255),b
  5263  01412E  0E00               	movlw	0
  5264  014130  6FB4               	movwf	terminal_ringBufferPull@index_1778& (0+255),b
  5265  014132  D00E               	goto	l817
  5266  014134                     
  5267                           ; BSR set to: 1
  5268                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  5269                           
  5270                           ; BSR set to: 1
  5271  014134  EC41  F0AD         	call	_EUSART2_Read	;wreg free
  5272  014138  0101               	movlb	1	; () banked
  5273  01413A  6FAF               	movwf	??_terminal_ringBufferPull& (0+255),b
  5274  01413C  0EC0               	movlw	low _line
  5275  01413E  25B4               	addwf	terminal_ringBufferPull@index_1778& (0+255),w,b
  5276  014140  6ED9               	movwf	fsr2l,c
  5277  014142  0E02               	movlw	high _line
  5278  014144  21B5               	addwfc	(terminal_ringBufferPull@index_1778+1)& (0+255),w,b
  5279  014146  6EDA               	movwf	fsr2h,c
  5280  014148  C1AF  FFDF         	movff	??_terminal_ringBufferPull,indf2
  5281                           
  5282                           ; BSR set to: 1
  5283  01414C  4BB4               	infsnz	terminal_ringBufferPull@index_1778& (0+255),f,b
  5284  01414E  2BB5               	incf	(terminal_ringBufferPull@index_1778+1)& (0+255),f,b
  5285  014150                     l817:
  5286                           
  5287                           ; BSR set to: 1
  5288                           
  5289                           ; BSR set to: 1
  5290  014150  51B2               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  5291  014152  5DB4               	subwf	terminal_ringBufferPull@index_1778& (0+255),w,b
  5292  014154  51B5               	movf	(terminal_ringBufferPull@index_1778+1)& (0+255),w,b
  5293  014156  0A80               	xorlw	128
  5294  014158  6FAF               	movwf	??_terminal_ringBufferPull& (0+255),b
  5295  01415A  51B3               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  5296  01415C  0A80               	xorlw	128
  5297  01415E  59AF               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  5298  014160  A0D8               	btfss	status,0,c
  5299  014162  D7E8               	goto	l818
  5300                           
  5301                           ; BSR set to: 1
  5302                           ;ring_buffer_interface.c: 28: }
  5303                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  5304  014164  C0DE  F1DB         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  5305                           
  5306                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  5307                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  5308  014168  D017               	goto	l820
  5309  01416A                     
  5310                           ; BSR set to: 1
  5311                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  5312                           
  5313                           ; BSR set to: 1
  5314  01416A  0EFF               	movlw	255
  5315  01416C  6FAF               	movwf	??_terminal_ringBufferPull& (0+255),b
  5316  01416E  0EFF               	movlw	255
  5317  014170  6FB0               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5318  014172  0EC0               	movlw	low _line
  5319  014174  6F17               	movwf	strlen@s& (0+255),b
  5320  014176  0E02               	movlw	high _line
  5321  014178  6F18               	movwf	(strlen@s+1)& (0+255),b
  5322  01417A  ECE0  F0AB         	call	_strlen	;wreg free
  5323  01417E  0101               	movlb	1	; () banked
  5324  014180  51AF               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5325  014182  2717               	addwf	?_strlen& (0+255),f,b
  5326  014184  51B0               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5327  014186  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5328  014188  0EC0               	movlw	low _line
  5329  01418A  2517               	addwf	?_strlen& (0+255),w,b
  5330  01418C  6ED9               	movwf	fsr2l,c
  5331  01418E  0E02               	movlw	high _line
  5332  014190  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5333  014192  6EDA               	movwf	fsr2h,c
  5334  014194  0E00               	movlw	0
  5335  014196  6EDF               	movwf	indf2,c
  5336  014198                     l820:
  5337                           
  5338                           ; BSR set to: 1
  5339  014198  0EFF               	movlw	255
  5340  01419A  6FAF               	movwf	??_terminal_ringBufferPull& (0+255),b
  5341  01419C  0EFF               	movlw	255
  5342  01419E  6FB0               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5343  0141A0  0EC0               	movlw	low _line
  5344  0141A2  6F17               	movwf	strlen@s& (0+255),b
  5345  0141A4  0E02               	movlw	high _line
  5346  0141A6  6F18               	movwf	(strlen@s+1)& (0+255),b
  5347  0141A8  ECE0  F0AB         	call	_strlen	;wreg free
  5348  0141AC  0101               	movlb	1	; () banked
  5349  0141AE  51AF               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5350  0141B0  2717               	addwf	?_strlen& (0+255),f,b
  5351  0141B2  51B0               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5352  0141B4  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5353  0141B6  0EC0               	movlw	low _line
  5354  0141B8  2517               	addwf	?_strlen& (0+255),w,b
  5355  0141BA  6ED9               	movwf	fsr2l,c
  5356  0141BC  0E02               	movlw	high _line
  5357  0141BE  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5358  0141C0  6EDA               	movwf	fsr2h,c
  5359  0141C2  0E0A               	movlw	10
  5360  0141C4  18DE               	xorwf	postinc2,w,c
  5361  0141C6  B4D8               	btfsc	status,2,c
  5362  0141C8  D7D0               	goto	l821
  5363                           
  5364                           ; BSR set to: 1
  5365  0141CA  0EFF               	movlw	255
  5366  0141CC  6FAF               	movwf	??_terminal_ringBufferPull& (0+255),b
  5367  0141CE  0EFF               	movlw	255
  5368  0141D0  6FB0               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5369  0141D2  0EC0               	movlw	low _line
  5370  0141D4  6F17               	movwf	strlen@s& (0+255),b
  5371  0141D6  0E02               	movlw	high _line
  5372  0141D8  6F18               	movwf	(strlen@s+1)& (0+255),b
  5373  0141DA  ECE0  F0AB         	call	_strlen	;wreg free
  5374  0141DE  0101               	movlb	1	; () banked
  5375  0141E0  51AF               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5376  0141E2  2717               	addwf	?_strlen& (0+255),f,b
  5377  0141E4  51B0               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5378  0141E6  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5379  0141E8  0EC0               	movlw	low _line
  5380  0141EA  2517               	addwf	?_strlen& (0+255),w,b
  5381  0141EC  6ED9               	movwf	fsr2l,c
  5382  0141EE  0E02               	movlw	high _line
  5383  0141F0  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5384  0141F2  6EDA               	movwf	fsr2h,c
  5385  0141F4  0E0D               	movlw	13
  5386  0141F6  18DE               	xorwf	postinc2,w,c
  5387  0141F8  B4D8               	btfsc	status,2,c
  5388  0141FA  D7B7               	goto	l821
  5389                           
  5390                           ; BSR set to: 1
  5391                           ;ring_buffer_interface.c: 40: }
  5392                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  5393  0141FC  0100               	movlb	0	; () banked
  5394  0141FE  91EB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5395                           
  5396                           ; BSR set to: 0
  5397                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  5398  014200  0EC0               	movlw	low _line
  5399  014202  0101               	movlb	1	; () banked
  5400  014204  6F9F               	movwf	ringBufferLUT@line& (0+255),b
  5401  014206  0E02               	movlw	high _line
  5402  014208  6FA0               	movwf	(ringBufferLUT@line+1)& (0+255),b
  5403  01420A  ECE5  F088         	call	_ringBufferLUT	;wreg free
  5404  01420E  0012               	return		;funcret
  5405  014210                     __end_of_terminal_ringBufferPull:
  5406                           	opt stack 0
  5407                           tblptru	equ	0xFF8
  5408                           tblptrh	equ	0xFF7
  5409                           tblptrl	equ	0xFF6
  5410                           tablat	equ	0xFF5
  5411                           intcon	equ	0xFF2
  5412                           postinc0	equ	0xFEE
  5413                           wreg	equ	0xFE8
  5414                           postdec1	equ	0xFE5
  5415                           fsr1h	equ	0xFE2
  5416                           fsr1l	equ	0xFE1
  5417                           indf2	equ	0xFDF
  5418                           postinc2	equ	0xFDE
  5419                           fsr2h	equ	0xFDA
  5420                           fsr2l	equ	0xFD9
  5421                           status	equ	0xFD8
  5422                           
  5423 ;; *************** function _ringBufferLUT *****************
  5424 ;; Defined at:
  5425 ;;		line 29 in file "ring_buffer_LUT.c"
  5426 ;; Parameters:    Size  Location     Type
  5427 ;;  line            2  159[BANK1 ] PTR unsigned char 
  5428 ;;		 -> line(64), 
  5429 ;; Auto vars:     Size  Location     Type
  5430 ;;  angle_degree    3  163[BANK1 ] PTR unsigned char 
  5431 ;;  period_value    2  166[BANK1 ] unsigned int 
  5432 ;;  index           2  171[BANK1 ] int 
  5433 ;;  arg_buff        3  168[BANK1 ] unsigned char [3]
  5434 ;;  percentage      2  173[BANK1 ] int 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5444 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5445 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5446 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5447 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5448 ;;Total ram usage:       16 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:   20
  5451 ;; This function calls:
  5452 ;;		___awtoft
  5453 ;;		___ftadd
  5454 ;;		___ftdiv
  5455 ;;		___ftmul
  5456 ;;		___ftneg
  5457 ;;		___wmul
  5458 ;;		_atoi
  5459 ;;		_printf
  5460 ;;		_strcmp
  5461 ;;		_strstr
  5462 ;;		_terminal_printNewline
  5463 ;;		_terminal_textAttributes
  5464 ;;		_terminal_textAttributesReset
  5465 ;; This function is called by:
  5466 ;;		_terminal_ringBufferPull
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text3
  5471  0111CA                     __ptext3:
  5472                           	opt stack 0
  5473  0111CA                     _ringBufferLUT:
  5474                           	opt stack 9
  5475                           
  5476                           ;ring_buffer_LUT.c: 35: if((0 == strcmp(line, "Reset"))) {
  5477                           
  5478                           ;incstack = 0
  5479  0111CA  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5480  0111CE  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5481  0111D2  0EA2               	movlw	low STR_41
  5482  0111D4  0101               	movlb	1	; () banked
  5483  0111D6  6F19               	movwf	strcmp@s2& (0+255),b
  5484  0111D8  0EFF               	movlw	high STR_41
  5485  0111DA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5486  0111DC  EC60  F0AC         	call	_strcmp	;wreg free
  5487  0111E0  0101               	movlb	1	; () banked
  5488  0111E2  5117               	movf	?_strcmp& (0+255),w,b
  5489  0111E4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5490  0111E6  A4D8               	btfss	status,2,c
  5491  0111E8  D00F               	goto	l924
  5492                           
  5493                           ; BSR set to: 1
  5494                           ;ring_buffer_LUT.c: 38: printf("\033[2J");
  5495  0111EA  0EAD               	movlw	low STR_2
  5496  0111EC  6F64               	movwf	printf@f& (0+255),b
  5497  0111EE  0EFF               	movlw	high STR_2
  5498  0111F0  6F65               	movwf	(printf@f+1)& (0+255),b
  5499  0111F2  EC00  F080         	call	_printf	;wreg free
  5500                           
  5501                           ;ring_buffer_LUT.c: 41: printf("\033[H");
  5502  0111F6  0EB6               	movlw	low STR_3
  5503  0111F8  0101               	movlb	1	; () banked
  5504  0111FA  6F64               	movwf	printf@f& (0+255),b
  5505  0111FC  0EFF               	movlw	high STR_3
  5506  0111FE  6F65               	movwf	(printf@f+1)& (0+255),b
  5507  011200  EC00  F080         	call	_printf	;wreg free
  5508  011204  00FF               	reset		;# 
  5509                           
  5510                           ;ring_buffer_LUT.c: 46: }
  5511  011206  0012               	return	
  5512  011208                     l924:
  5513                           
  5514                           ;ring_buffer_LUT.c: 49: else if((0 == strcmp(line, "Clear"))) {
  5515  011208  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5516  01120C  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5517  011210  0E9C               	movlw	low STR_44
  5518  011212  0101               	movlb	1	; () banked
  5519  011214  6F19               	movwf	strcmp@s2& (0+255),b
  5520  011216  0EFF               	movlw	high STR_44
  5521  011218  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5522  01121A  EC60  F0AC         	call	_strcmp	;wreg free
  5523  01121E  0101               	movlb	1	; () banked
  5524  011220  5117               	movf	?_strcmp& (0+255),w,b
  5525  011222  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5526  011224  A4D8               	btfss	status,2,c
  5527  011226  D00E               	goto	l926
  5528                           
  5529                           ; BSR set to: 1
  5530                           ;ring_buffer_LUT.c: 52: printf("\033[2J");
  5531  011228  0EAD               	movlw	low STR_2
  5532  01122A  6F64               	movwf	printf@f& (0+255),b
  5533  01122C  0EFF               	movlw	high STR_2
  5534  01122E  6F65               	movwf	(printf@f+1)& (0+255),b
  5535  011230  EC00  F080         	call	_printf	;wreg free
  5536                           
  5537                           ;ring_buffer_LUT.c: 55: printf("\033[H");
  5538  011234  0EB6               	movlw	low STR_3
  5539  011236  0101               	movlb	1	; () banked
  5540  011238  6F64               	movwf	printf@f& (0+255),b
  5541  01123A  0EFF               	movlw	high STR_3
  5542  01123C  6F65               	movwf	(printf@f+1)& (0+255),b
  5543  01123E  EC00  F080         	call	_printf	;wreg free
  5544                           
  5545                           ;ring_buffer_LUT.c: 57: }
  5546  011242  0012               	return	
  5547  011244                     l926:
  5548                           
  5549                           ;ring_buffer_LUT.c: 60: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  5550  011244  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5551  011248  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5552  01124C  0E96               	movlw	low STR_47
  5553  01124E  0101               	movlb	1	; () banked
  5554  011250  6F19               	movwf	strcmp@s2& (0+255),b
  5555  011252  0EFF               	movlw	high STR_47
  5556  011254  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5557  011256  EC60  F0AC         	call	_strcmp	;wreg free
  5558  01125A  0101               	movlb	1	; () banked
  5559  01125C  5117               	movf	?_strcmp& (0+255),w,b
  5560  01125E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5561  011260  B4D8               	btfsc	status,2,c
  5562  011262  D00F               	goto	u11360
  5563                           
  5564                           ; BSR set to: 1
  5565  011264  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5566  011268  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5567  01126C  0EB2               	movlw	low STR_48
  5568  01126E  6F19               	movwf	strcmp@s2& (0+255),b
  5569  011270  0EFF               	movlw	high STR_48
  5570  011272  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5571  011274  EC60  F0AC         	call	_strcmp	;wreg free
  5572  011278  0101               	movlb	1	; () banked
  5573  01127A  5117               	movf	?_strcmp& (0+255),w,b
  5574  01127C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5575  01127E  A4D8               	btfss	status,2,c
  5576  011280  D01D               	goto	l928
  5577  011282                     u11360:
  5578                           
  5579                           ; BSR set to: 1
  5580                           ;ring_buffer_LUT.c: 63: terminal_printNewline();
  5581                           
  5582                           ; BSR set to: 1
  5583  011282  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5584                           
  5585                           ;ring_buffer_LUT.c: 65: terminal_textAttributes(GREEN, BLACK, NORMAL);
  5586  011286  0E00               	movlw	0
  5587  011288  0101               	movlb	1	; () banked
  5588  01128A  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5589  01128C  0E00               	movlw	0
  5590  01128E  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5591  011290  0E02               	movlw	2
  5592  011292  EC47  F093         	call	_terminal_textAttributes
  5593                           
  5594                           ;ring_buffer_LUT.c: 67: printf("AC Power Meter\n\r");
  5595  011296  0E18               	movlw	low STR_49
  5596  011298  0101               	movlb	1	; () banked
  5597  01129A  6F64               	movwf	printf@f& (0+255),b
  5598  01129C  0EFF               	movlw	high STR_49
  5599  01129E  6F65               	movwf	(printf@f+1)& (0+255),b
  5600  0112A0  EC00  F080         	call	_printf	;wreg free
  5601                           
  5602                           ;ring_buffer_LUT.c: 68: printf("Marquette University ELEN 3035 Final Project\n\r");
  5603  0112A4  0E6D               	movlw	low STR_50
  5604  0112A6  0101               	movlb	1	; () banked
  5605  0112A8  6F64               	movwf	printf@f& (0+255),b
  5606  0112AA  0EFC               	movlw	high STR_50
  5607  0112AC  6F65               	movwf	(printf@f+1)& (0+255),b
  5608  0112AE  EC00  F080         	call	_printf	;wreg free
  5609                           
  5610                           ;ring_buffer_LUT.c: 70: terminal_textAttributesReset();
  5611  0112B2  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5612                           
  5613                           ;ring_buffer_LUT.c: 72: terminal_printNewline();
  5614  0112B6  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5615                           
  5616                           ;ring_buffer_LUT.c: 74: }
  5617  0112BA  0012               	return	
  5618  0112BC                     l928:
  5619                           
  5620                           ;ring_buffer_LUT.c: 77: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  5621  0112BC  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5622  0112C0  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5623  0112C4  0E29               	movlw	low STR_51
  5624  0112C6  0101               	movlb	1	; () banked
  5625  0112C8  6F19               	movwf	strcmp@s2& (0+255),b
  5626  0112CA  0EFF               	movlw	high STR_51
  5627  0112CC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5628  0112CE  EC60  F0AC         	call	_strcmp	;wreg free
  5629  0112D2  0101               	movlb	1	; () banked
  5630  0112D4  5117               	movf	?_strcmp& (0+255),w,b
  5631  0112D6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5632  0112D8  A4D8               	btfss	status,2,c
  5633  0112DA  D01C               	goto	l932
  5634                           
  5635                           ; BSR set to: 1
  5636                           ;ring_buffer_LUT.c: 80: terminal_printNewline();
  5637  0112DC  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5638                           
  5639                           ;ring_buffer_LUT.c: 82: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5640  0112E0  0E00               	movlw	0
  5641  0112E2  0101               	movlb	1	; () banked
  5642  0112E4  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5643  0112E6  0E00               	movlw	0
  5644  0112E8  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5645  0112EA  0E06               	movlw	6
  5646  0112EC  EC47  F093         	call	_terminal_textAttributes
  5647                           
  5648                           ;ring_buffer_LUT.c: 83: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  5649  0112F0  0E3A               	movlw	low STR_52
  5650  0112F2  0101               	movlb	1	; () banked
  5651  0112F4  6F64               	movwf	printf@f& (0+255),b
  5652  0112F6  0EFD               	movlw	high STR_52
  5653  0112F8  6F65               	movwf	(printf@f+1)& (0+255),b
  5654  0112FA  C0CB  F166         	movff	_POS3P3_ADC_Result,?_printf+2
  5655  0112FE  C0CC  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3
  5656  011302  C0CD  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4
  5657  011306  EC00  F080         	call	_printf	;wreg free
  5658                           
  5659                           ;ring_buffer_LUT.c: 85: terminal_textAttributesReset();
  5660  01130A  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5661                           
  5662                           ;ring_buffer_LUT.c: 87: terminal_printNewline();
  5663  01130E  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5664                           
  5665                           ;ring_buffer_LUT.c: 90: }
  5666  011312  0012               	return	
  5667  011314                     l932:
  5668                           
  5669                           ;ring_buffer_LUT.c: 93: else if((0 == strcmp(line, "Measure POS12?"))) {
  5670  011314  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5671  011318  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5672  01131C  0E49               	movlw	low STR_53
  5673  01131E  0101               	movlb	1	; () banked
  5674  011320  6F19               	movwf	strcmp@s2& (0+255),b
  5675  011322  0EFF               	movlw	high STR_53
  5676  011324  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5677  011326  EC60  F0AC         	call	_strcmp	;wreg free
  5678  01132A  0101               	movlb	1	; () banked
  5679  01132C  5117               	movf	?_strcmp& (0+255),w,b
  5680  01132E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5681  011330  A4D8               	btfss	status,2,c
  5682  011332  D01C               	goto	l934
  5683                           
  5684                           ; BSR set to: 1
  5685                           ;ring_buffer_LUT.c: 96: terminal_printNewline();
  5686  011334  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5687                           
  5688                           ;ring_buffer_LUT.c: 98: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5689  011338  0E00               	movlw	0
  5690  01133A  0101               	movlb	1	; () banked
  5691  01133C  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5692  01133E  0E00               	movlw	0
  5693  011340  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5694  011342  0E06               	movlw	6
  5695  011344  EC47  F093         	call	_terminal_textAttributes
  5696                           
  5697                           ;ring_buffer_LUT.c: 99: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result);
  5698  011348  0EC3               	movlw	low STR_54
  5699  01134A  0101               	movlb	1	; () banked
  5700  01134C  6F64               	movwf	printf@f& (0+255),b
  5701  01134E  0EFD               	movlw	high STR_54
  5702  011350  6F65               	movwf	(printf@f+1)& (0+255),b
  5703  011352  C1CA  F166         	movff	_POS12_ADC_Result,?_printf+2
  5704  011356  C1CB  F167         	movff	_POS12_ADC_Result+1,?_printf+3
  5705  01135A  C1CC  F168         	movff	_POS12_ADC_Result+2,?_printf+4
  5706  01135E  EC00  F080         	call	_printf	;wreg free
  5707                           
  5708                           ;ring_buffer_LUT.c: 101: terminal_textAttributesReset();
  5709  011362  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5710                           
  5711                           ;ring_buffer_LUT.c: 103: terminal_printNewline();
  5712  011366  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5713                           
  5714                           ;ring_buffer_LUT.c: 106: }
  5715  01136A  0012               	return	
  5716  01136C                     l934:
  5717                           
  5718                           ;ring_buffer_LUT.c: 109: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  5719  01136C  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5720  011370  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5721  011374  0E06               	movlw	low STR_55
  5722  011376  0101               	movlb	1	; () banked
  5723  011378  6F19               	movwf	strcmp@s2& (0+255),b
  5724  01137A  0EFF               	movlw	high STR_55
  5725  01137C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5726  01137E  EC60  F0AC         	call	_strcmp	;wreg free
  5727  011382  0101               	movlb	1	; () banked
  5728  011384  5117               	movf	?_strcmp& (0+255),w,b
  5729  011386  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5730  011388  A4D8               	btfss	status,2,c
  5731  01138A  D01C               	goto	l936
  5732                           
  5733                           ; BSR set to: 1
  5734                           ;ring_buffer_LUT.c: 112: terminal_printNewline();
  5735  01138C  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5736                           
  5737                           ;ring_buffer_LUT.c: 114: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5738  011390  0E00               	movlw	0
  5739  011392  0101               	movlb	1	; () banked
  5740  011394  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5741  011396  0E00               	movlw	0
  5742  011398  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5743  01139A  0E06               	movlw	6
  5744  01139C  EC47  F093         	call	_terminal_textAttributes
  5745                           
  5746                           ;ring_buffer_LUT.c: 115: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  5747  0113A0  0E5D               	movlw	low STR_56
  5748  0113A2  0101               	movlb	1	; () banked
  5749  0113A4  6F64               	movwf	printf@f& (0+255),b
  5750  0113A6  0EFD               	movlw	high STR_56
  5751  0113A8  6F65               	movwf	(printf@f+1)& (0+255),b
  5752  0113AA  C1C7  F166         	movff	_Temp_ADC_Result,?_printf+2
  5753  0113AE  C1C8  F167         	movff	_Temp_ADC_Result+1,?_printf+3
  5754  0113B2  C1C9  F168         	movff	_Temp_ADC_Result+2,?_printf+4
  5755  0113B6  EC00  F080         	call	_printf	;wreg free
  5756                           
  5757                           ;ring_buffer_LUT.c: 117: terminal_textAttributesReset();
  5758  0113BA  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5759                           
  5760                           ;ring_buffer_LUT.c: 119: terminal_printNewline();
  5761  0113BE  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5762                           
  5763                           ;ring_buffer_LUT.c: 122: }
  5764  0113C2  0012               	return	
  5765  0113C4                     l936:
  5766                           
  5767                           ;ring_buffer_LUT.c: 125: else if((0 == strcmp(line, "Measure FVR?"))) {
  5768  0113C4  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5769  0113C8  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5770  0113CC  0E67               	movlw	low STR_57
  5771  0113CE  0101               	movlb	1	; () banked
  5772  0113D0  6F19               	movwf	strcmp@s2& (0+255),b
  5773  0113D2  0EFF               	movlw	high STR_57
  5774  0113D4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5775  0113D6  EC60  F0AC         	call	_strcmp	;wreg free
  5776  0113DA  0101               	movlb	1	; () banked
  5777  0113DC  5117               	movf	?_strcmp& (0+255),w,b
  5778  0113DE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5779  0113E0  A4D8               	btfss	status,2,c
  5780  0113E2  D01C               	goto	l938
  5781                           
  5782                           ; BSR set to: 1
  5783                           ;ring_buffer_LUT.c: 128: terminal_printNewline();
  5784  0113E4  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5785                           
  5786                           ;ring_buffer_LUT.c: 130: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5787  0113E8  0E00               	movlw	0
  5788  0113EA  0101               	movlb	1	; () banked
  5789  0113EC  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5790  0113EE  0E00               	movlw	0
  5791  0113F0  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5792  0113F2  0E06               	movlw	6
  5793  0113F4  EC47  F093         	call	_terminal_textAttributes
  5794                           
  5795                           ;ring_buffer_LUT.c: 131: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  5796  0113F8  0E35               	movlw	low STR_58
  5797  0113FA  0101               	movlb	1	; () banked
  5798  0113FC  6F64               	movwf	printf@f& (0+255),b
  5799  0113FE  0EFC               	movlw	high STR_58
  5800  011400  6F65               	movwf	(printf@f+1)& (0+255),b
  5801  011402  C0E2  F166         	movff	_FVR_ADC_Result,?_printf+2
  5802  011406  C0E3  F167         	movff	_FVR_ADC_Result+1,?_printf+3
  5803  01140A  C0E4  F168         	movff	_FVR_ADC_Result+2,?_printf+4
  5804  01140E  EC00  F080         	call	_printf	;wreg free
  5805                           
  5806                           ;ring_buffer_LUT.c: 133: terminal_textAttributesReset();
  5807  011412  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5808                           
  5809                           ;ring_buffer_LUT.c: 135: terminal_printNewline();
  5810  011416  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5811                           
  5812                           ;ring_buffer_LUT.c: 138: }
  5813  01141A  0012               	return	
  5814  01141C                     l938:
  5815                           
  5816                           ;ring_buffer_LUT.c: 141: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  5817  01141C  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5818  011420  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5819  011424  0E62               	movlw	low STR_59
  5820  011426  0101               	movlb	1	; () banked
  5821  011428  6F19               	movwf	strcmp@s2& (0+255),b
  5822  01142A  0EFE               	movlw	high STR_59
  5823  01142C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5824  01142E  EC60  F0AC         	call	_strcmp	;wreg free
  5825  011432  0101               	movlb	1	; () banked
  5826  011434  5117               	movf	?_strcmp& (0+255),w,b
  5827  011436  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5828  011438  A4D8               	btfss	status,2,c
  5829  01143A  D01C               	goto	l940
  5830                           
  5831                           ; BSR set to: 1
  5832                           ;ring_buffer_LUT.c: 144: terminal_printNewline();
  5833  01143C  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5834                           
  5835                           ;ring_buffer_LUT.c: 146: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5836  011440  0E00               	movlw	0
  5837  011442  0101               	movlb	1	; () banked
  5838  011444  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5839  011446  0E00               	movlw	0
  5840  011448  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5841  01144A  0E06               	movlw	6
  5842  01144C  EC47  F093         	call	_terminal_textAttributes
  5843                           
  5844                           ;ring_buffer_LUT.c: 147: printf("Measured Current is %.3f Amps\n\r", Imeas);
  5845  011450  0E06               	movlw	low STR_60
  5846  011452  0101               	movlb	1	; () banked
  5847  011454  6F64               	movwf	printf@f& (0+255),b
  5848  011456  0EFE               	movlw	high STR_60
  5849  011458  6F65               	movwf	(printf@f+1)& (0+255),b
  5850  01145A  C0C5  F166         	movff	_Imeas,?_printf+2
  5851  01145E  C0C6  F167         	movff	_Imeas+1,?_printf+3
  5852  011462  C0C7  F168         	movff	_Imeas+2,?_printf+4
  5853  011466  EC00  F080         	call	_printf	;wreg free
  5854                           
  5855                           ;ring_buffer_LUT.c: 149: terminal_textAttributesReset();
  5856  01146A  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5857                           
  5858                           ;ring_buffer_LUT.c: 151: terminal_printNewline();
  5859  01146E  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5860                           
  5861                           ;ring_buffer_LUT.c: 153: }
  5862  011472  0012               	return	
  5863  011474                     l940:
  5864                           
  5865                           ;ring_buffer_LUT.c: 156: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  5866  011474  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5867  011478  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5868  01147C  0EF1               	movlw	low STR_61
  5869  01147E  0101               	movlb	1	; () banked
  5870  011480  6F19               	movwf	strcmp@s2& (0+255),b
  5871  011482  0EFE               	movlw	high STR_61
  5872  011484  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5873  011486  EC60  F0AC         	call	_strcmp	;wreg free
  5874  01148A  0101               	movlb	1	; () banked
  5875  01148C  5117               	movf	?_strcmp& (0+255),w,b
  5876  01148E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5877  011490  A4D8               	btfss	status,2,c
  5878  011492  D01C               	goto	l942
  5879                           
  5880                           ; BSR set to: 1
  5881                           ;ring_buffer_LUT.c: 159: terminal_printNewline();
  5882  011494  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5883                           
  5884                           ;ring_buffer_LUT.c: 161: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5885  011498  0E00               	movlw	0
  5886  01149A  0101               	movlb	1	; () banked
  5887  01149C  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5888  01149E  0E00               	movlw	0
  5889  0114A0  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5890  0114A2  0E06               	movlw	6
  5891  0114A4  EC47  F093         	call	_terminal_textAttributes
  5892                           
  5893                           ;ring_buffer_LUT.c: 162: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  5894  0114A8  0E7F               	movlw	low STR_62
  5895  0114AA  0101               	movlb	1	; () banked
  5896  0114AC  6F64               	movwf	printf@f& (0+255),b
  5897  0114AE  0EFD               	movlw	high STR_62
  5898  0114B0  6F65               	movwf	(printf@f+1)& (0+255),b
  5899  0114B2  C1C4  F166         	movff	_Irms,?_printf+2
  5900  0114B6  C1C5  F167         	movff	_Irms+1,?_printf+3
  5901  0114BA  C1C6  F168         	movff	_Irms+2,?_printf+4
  5902  0114BE  EC00  F080         	call	_printf	;wreg free
  5903                           
  5904                           ;ring_buffer_LUT.c: 164: terminal_textAttributesReset();
  5905  0114C2  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5906                           
  5907                           ;ring_buffer_LUT.c: 166: terminal_printNewline();
  5908  0114C6  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5909                           
  5910                           ;ring_buffer_LUT.c: 168: }
  5911  0114CA  0012               	return	
  5912  0114CC                     l942:
  5913                           
  5914                           ;ring_buffer_LUT.c: 171: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  5915  0114CC  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5916  0114D0  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5917  0114D4  0EDC               	movlw	low STR_63
  5918  0114D6  0101               	movlb	1	; () banked
  5919  0114D8  6F19               	movwf	strcmp@s2& (0+255),b
  5920  0114DA  0EFE               	movlw	high STR_63
  5921  0114DC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5922  0114DE  EC60  F0AC         	call	_strcmp	;wreg free
  5923  0114E2  0101               	movlb	1	; () banked
  5924  0114E4  5117               	movf	?_strcmp& (0+255),w,b
  5925  0114E6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5926  0114E8  A4D8               	btfss	status,2,c
  5927  0114EA  D01C               	goto	l944
  5928                           
  5929                           ; BSR set to: 1
  5930                           ;ring_buffer_LUT.c: 174: terminal_printNewline();
  5931  0114EC  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5932                           
  5933                           ;ring_buffer_LUT.c: 176: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5934  0114F0  0E00               	movlw	0
  5935  0114F2  0101               	movlb	1	; () banked
  5936  0114F4  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5937  0114F6  0E00               	movlw	0
  5938  0114F8  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5939  0114FA  0E06               	movlw	6
  5940  0114FC  EC47  F093         	call	_terminal_textAttributes
  5941                           
  5942                           ;ring_buffer_LUT.c: 177: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  5943  011500  0EA1               	movlw	low STR_64
  5944  011502  0101               	movlb	1	; () banked
  5945  011504  6F64               	movwf	printf@f& (0+255),b
  5946  011506  0EFD               	movlw	high STR_64
  5947  011508  6F65               	movwf	(printf@f+1)& (0+255),b
  5948  01150A  C1C1  F166         	movff	_Vrms,?_printf+2
  5949  01150E  C1C2  F167         	movff	_Vrms+1,?_printf+3
  5950  011512  C1C3  F168         	movff	_Vrms+2,?_printf+4
  5951  011516  EC00  F080         	call	_printf	;wreg free
  5952                           
  5953                           ;ring_buffer_LUT.c: 179: terminal_textAttributesReset();
  5954  01151A  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  5955                           
  5956                           ;ring_buffer_LUT.c: 181: terminal_printNewline();
  5957  01151E  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5958                           
  5959                           ;ring_buffer_LUT.c: 183: }
  5960  011522  0012               	return	
  5961  011524                     l944:
  5962                           
  5963                           ;ring_buffer_LUT.c: 186: else if ((0 == strcmp(line, "Enable Dimming"))) {
  5964  011524  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  5965  011528  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5966  01152C  0E58               	movlw	low STR_65
  5967  01152E  0101               	movlb	1	; () banked
  5968  011530  6F19               	movwf	strcmp@s2& (0+255),b
  5969  011532  0EFF               	movlw	high STR_65
  5970  011534  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5971  011536  EC60  F0AC         	call	_strcmp	;wreg free
  5972  01153A  0101               	movlb	1	; () banked
  5973  01153C  5117               	movf	?_strcmp& (0+255),w,b
  5974  01153E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5975  011540  A4D8               	btfss	status,2,c
  5976  011542  D017               	goto	l946
  5977                           
  5978                           ; BSR set to: 1
  5979                           ;ring_buffer_LUT.c: 189: LATGbits.LATG0 = 0;
  5980  011544  907F               	bcf	3967,0,c	;volatile
  5981                           
  5982                           ; BSR set to: 1
  5983                           ;ring_buffer_LUT.c: 192: terminal_printNewline();
  5984  011546  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  5985                           
  5986                           ;ring_buffer_LUT.c: 194: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5987  01154A  0E00               	movlw	0
  5988  01154C  0101               	movlb	1	; () banked
  5989  01154E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  5990  011550  0E00               	movlw	0
  5991  011552  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5992  011554  0E06               	movlw	6
  5993  011556  EC47  F093         	call	_terminal_textAttributes
  5994                           
  5995                           ;ring_buffer_LUT.c: 195: printf("TRIAC output dimming has been enabled\n\r");
  5996  01155A  0EC5               	movlw	low STR_66
  5997  01155C  0101               	movlb	1	; () banked
  5998  01155E  6F64               	movwf	printf@f& (0+255),b
  5999  011560  0EFC               	movlw	high STR_66
  6000  011562  6F65               	movwf	(printf@f+1)& (0+255),b
  6001  011564  EC00  F080         	call	_printf	;wreg free
  6002                           
  6003                           ;ring_buffer_LUT.c: 197: terminal_textAttributesReset();
  6004  011568  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6005                           
  6006                           ;ring_buffer_LUT.c: 199: terminal_printNewline();
  6007  01156C  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6008                           
  6009                           ;ring_buffer_LUT.c: 201: }
  6010  011570  0012               	return	
  6011  011572                     l946:
  6012                           
  6013                           ;ring_buffer_LUT.c: 204: else if ((0 == strcmp(line, "Disable Dimming"))) {
  6014  011572  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6015  011576  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6016  01157A  0E39               	movlw	low STR_67
  6017  01157C  0101               	movlb	1	; () banked
  6018  01157E  6F19               	movwf	strcmp@s2& (0+255),b
  6019  011580  0EFF               	movlw	high STR_67
  6020  011582  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6021  011584  EC60  F0AC         	call	_strcmp	;wreg free
  6022  011588  0101               	movlb	1	; () banked
  6023  01158A  5117               	movf	?_strcmp& (0+255),w,b
  6024  01158C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6025  01158E  A4D8               	btfss	status,2,c
  6026  011590  D018               	goto	l948
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;ring_buffer_LUT.c: 207: LATGbits.LATG0 = 1;
  6030  011592  807F               	bsf	3967,0,c	;volatile
  6031                           
  6032                           ;ring_buffer_LUT.c: 208: LATGbits.LATG1 = 1;
  6033  011594  827F               	bsf	3967,1,c	;volatile
  6034                           
  6035                           ; BSR set to: 1
  6036                           ;ring_buffer_LUT.c: 211: terminal_printNewline();
  6037  011596  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6038                           
  6039                           ;ring_buffer_LUT.c: 213: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6040  01159A  0E00               	movlw	0
  6041  01159C  0101               	movlb	1	; () banked
  6042  01159E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6043  0115A0  0E00               	movlw	0
  6044  0115A2  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6045  0115A4  0E06               	movlw	6
  6046  0115A6  EC47  F093         	call	_terminal_textAttributes
  6047                           
  6048                           ;ring_buffer_LUT.c: 214: printf("TRIAC output dimming has been disabled\n\r");
  6049  0115AA  0E9C               	movlw	low STR_68
  6050  0115AC  0101               	movlb	1	; () banked
  6051  0115AE  6F64               	movwf	printf@f& (0+255),b
  6052  0115B0  0EFC               	movlw	high STR_68
  6053  0115B2  6F65               	movwf	(printf@f+1)& (0+255),b
  6054  0115B4  EC00  F080         	call	_printf	;wreg free
  6055                           
  6056                           ;ring_buffer_LUT.c: 216: terminal_textAttributesReset();
  6057  0115B8  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6058                           
  6059                           ;ring_buffer_LUT.c: 218: terminal_printNewline();
  6060  0115BC  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6061                           
  6062                           ;ring_buffer_LUT.c: 220: }
  6063  0115C0  0012               	return	
  6064  0115C2                     l948:
  6065                           
  6066                           ;ring_buffer_LUT.c: 223: else if ((0 == strcmp(line, "Enable Load"))) {
  6067  0115C2  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6068  0115C6  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6069  0115CA  0E81               	movlw	low STR_69
  6070  0115CC  0101               	movlb	1	; () banked
  6071  0115CE  6F19               	movwf	strcmp@s2& (0+255),b
  6072  0115D0  0EFF               	movlw	high STR_69
  6073  0115D2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6074  0115D4  EC60  F0AC         	call	_strcmp	;wreg free
  6075  0115D8  0101               	movlb	1	; () banked
  6076  0115DA  5117               	movf	?_strcmp& (0+255),w,b
  6077  0115DC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6078  0115DE  A4D8               	btfss	status,2,c
  6079  0115E0  D016               	goto	l950
  6080                           
  6081                           ; BSR set to: 1
  6082                           ;ring_buffer_LUT.c: 227: terminal_printNewline();
  6083  0115E2  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6084                           
  6085                           ;ring_buffer_LUT.c: 229: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6086  0115E6  0E00               	movlw	0
  6087  0115E8  0101               	movlb	1	; () banked
  6088  0115EA  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6089  0115EC  0E00               	movlw	0
  6090  0115EE  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6091  0115F0  0E06               	movlw	6
  6092  0115F2  EC47  F093         	call	_terminal_textAttributes
  6093                           
  6094                           ;ring_buffer_LUT.c: 230: printf("Load has been enabled\n\r");
  6095  0115F6  0E95               	movlw	low STR_70
  6096  0115F8  0101               	movlb	1	; () banked
  6097  0115FA  6F64               	movwf	printf@f& (0+255),b
  6098  0115FC  0EFE               	movlw	high STR_70
  6099  0115FE  6F65               	movwf	(printf@f+1)& (0+255),b
  6100  011600  EC00  F080         	call	_printf	;wreg free
  6101                           
  6102                           ;ring_buffer_LUT.c: 232: terminal_textAttributesReset();
  6103  011604  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6104                           
  6105                           ;ring_buffer_LUT.c: 234: terminal_printNewline();
  6106  011608  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6107                           
  6108                           ;ring_buffer_LUT.c: 236: }
  6109  01160C  0012               	return	
  6110  01160E                     l950:
  6111                           
  6112                           ;ring_buffer_LUT.c: 239: else if ((0 == strcmp(line, "Disable Load"))) {
  6113  01160E  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6114  011612  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6115  011616  0E74               	movlw	low STR_71
  6116  011618  0101               	movlb	1	; () banked
  6117  01161A  6F19               	movwf	strcmp@s2& (0+255),b
  6118  01161C  0EFF               	movlw	high STR_71
  6119  01161E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6120  011620  EC60  F0AC         	call	_strcmp	;wreg free
  6121  011624  0101               	movlb	1	; () banked
  6122  011626  5117               	movf	?_strcmp& (0+255),w,b
  6123  011628  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6124  01162A  A4D8               	btfss	status,2,c
  6125  01162C  D018               	goto	l952
  6126                           
  6127                           ; BSR set to: 1
  6128                           ;ring_buffer_LUT.c: 241: LATGbits.LATG1 = 0;
  6129  01162E  927F               	bcf	3967,1,c	;volatile
  6130                           
  6131                           ;ring_buffer_LUT.c: 242: LATGbits.LATG0 = 0;
  6132  011630  907F               	bcf	3967,0,c	;volatile
  6133                           
  6134                           ; BSR set to: 1
  6135                           ;ring_buffer_LUT.c: 245: terminal_printNewline();
  6136  011632  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6137                           
  6138                           ;ring_buffer_LUT.c: 247: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6139  011636  0E00               	movlw	0
  6140  011638  0101               	movlb	1	; () banked
  6141  01163A  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6142  01163C  0E00               	movlw	0
  6143  01163E  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6144  011640  0E06               	movlw	6
  6145  011642  EC47  F093         	call	_terminal_textAttributes
  6146                           
  6147                           ;ring_buffer_LUT.c: 248: printf("Load has been disabled\n\r");
  6148  011646  0E7C               	movlw	low STR_72
  6149  011648  0101               	movlb	1	; () banked
  6150  01164A  6F64               	movwf	printf@f& (0+255),b
  6151  01164C  0EFE               	movlw	high STR_72
  6152  01164E  6F65               	movwf	(printf@f+1)& (0+255),b
  6153  011650  EC00  F080         	call	_printf	;wreg free
  6154                           
  6155                           ;ring_buffer_LUT.c: 250: terminal_textAttributesReset();
  6156  011654  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6157                           
  6158                           ;ring_buffer_LUT.c: 252: terminal_printNewline();
  6159  011658  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6160                           
  6161                           ;ring_buffer_LUT.c: 254: }
  6162  01165C  0012               	return	
  6163  01165E                     l952:
  6164                           
  6165                           ;ring_buffer_LUT.c: 257: else if ((strstr(line, "Set Dimming Percentage "))) {
  6166  01165E  C19F  F126         	movff	ringBufferLUT@line,strstr@s1
  6167  011662  C1A0  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  6168  011666  0EAD               	movlw	low STR_73
  6169  011668  0101               	movlb	1	; () banked
  6170  01166A  6F28               	movwf	strstr@s2& (0+255),b
  6171  01166C  0EFE               	movlw	high STR_73
  6172  01166E  6F29               	movwf	(strstr@s2+1)& (0+255),b
  6173  011670  ECB6  F0A7         	call	_strstr	;wreg free
  6174  011674  0101               	movlb	1	; () banked
  6175  011676  5126               	movf	?_strstr& (0+255),w,b
  6176  011678  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  6177  01167A  B4D8               	btfsc	status,2,c
  6178  01167C  D108               	goto	l954
  6179                           
  6180                           ; BSR set to: 1
  6181                           ;ring_buffer_LUT.c: 260: char arg_buff[3];
  6182                           ;ring_buffer_LUT.c: 263: for (int index = 0; index <= 3; index++) {
  6183  01167E  0E00               	movlw	0
  6184  011680  6FAC               	movwf	(ringBufferLUT@index+1)& (0+255),b
  6185  011682  0E00               	movlw	0
  6186  011684  6FAB               	movwf	ringBufferLUT@index& (0+255),b
  6187  011686                     l9745:
  6188                           
  6189                           ; BSR set to: 1
  6190  011686  BFAC               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  6191  011688  D006               	goto	l955
  6192  01168A  51AC               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  6193  01168C  E11B               	bnz	l9755
  6194  01168E  0E04               	movlw	4
  6195  011690  5DAB               	subwf	ringBufferLUT@index& (0+255),w,b
  6196  011692  B0D8               	btfsc	status,0,c
  6197  011694  D017               	goto	u11500
  6198  011696                     l955:
  6199                           
  6200                           ; BSR set to: 1
  6201                           ;ring_buffer_LUT.c: 265: arg_buff[index] = line[index + 23];
  6202                           
  6203                           ; BSR set to: 1
  6204  011696  0E17               	movlw	23
  6205  011698  25AB               	addwf	ringBufferLUT@index& (0+255),w,b
  6206  01169A  6FA1               	movwf	??_ringBufferLUT& (0+255),b
  6207  01169C  0E00               	movlw	0
  6208  01169E  21AC               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6209  0116A0  6FA2               	movwf	(??_ringBufferLUT+1)& (0+255),b
  6210  0116A2  51A1               	movf	??_ringBufferLUT& (0+255),w,b
  6211  0116A4  259F               	addwf	ringBufferLUT@line& (0+255),w,b
  6212  0116A6  6ED9               	movwf	fsr2l,c
  6213  0116A8  51A2               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  6214  0116AA  21A0               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  6215  0116AC  6EDA               	movwf	fsr2h,c
  6216  0116AE  0EA8               	movlw	low ringBufferLUT@arg_buff
  6217  0116B0  25AB               	addwf	ringBufferLUT@index& (0+255),w,b
  6218  0116B2  6EE1               	movwf	fsr1l,c
  6219  0116B4  0E01               	movlw	high ringBufferLUT@arg_buff
  6220  0116B6  21AC               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6221  0116B8  6EE2               	movwf	fsr1h,c
  6222  0116BA  CFDF FFE7          	movff	indf2,indf1
  6223                           
  6224                           ; BSR set to: 1
  6225  0116BE  4BAB               	infsnz	ringBufferLUT@index& (0+255),f,b
  6226  0116C0  2BAC               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  6227  0116C2  D7E1               	goto	l9745
  6228  0116C4                     u11500:
  6229  0116C4                     l9755:
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;ring_buffer_LUT.c: 267: }
  6233                           ;ring_buffer_LUT.c: 269: int percentage = atoi(arg_buff);
  6234  0116C4  0EA8               	movlw	low ringBufferLUT@arg_buff
  6235  0116C6  6F2B               	movwf	atoi@s& (0+255),b
  6236  0116C8  0E01               	movlw	high ringBufferLUT@arg_buff
  6237  0116CA  6F2C               	movwf	(atoi@s+1)& (0+255),b
  6238  0116CC  ECB6  F0A4         	call	_atoi	;wreg free
  6239  0116D0  C12B  F1AD         	movff	?_atoi,ringBufferLUT@percentage
  6240  0116D4  C12C  F1AE         	movff	?_atoi+1,ringBufferLUT@percentage+1
  6241                           
  6242                           ;ring_buffer_LUT.c: 272: if ( (percentage >= 100) ||
  6243                           ;ring_buffer_LUT.c: 273: (percentage <= 0)) {
  6244  0116D8  0101               	movlb	1	; () banked
  6245  0116DA  BFAE               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6246  0116DC  D006               	goto	u11510
  6247  0116DE  51AE               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6248  0116E0  E10B               	bnz	l9761
  6249  0116E2  0E64               	movlw	100
  6250  0116E4  5DAD               	subwf	ringBufferLUT@percentage& (0+255),w,b
  6251  0116E6  B0D8               	btfsc	status,0,c
  6252  0116E8  D007               	goto	u11520
  6253  0116EA                     u11510:
  6254                           
  6255                           ; BSR set to: 1
  6256  0116EA  BFAE               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6257  0116EC  D005               	goto	u11520
  6258  0116EE  51AE               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6259  0116F0  E128               	bnz	l9763
  6260  0116F2  05AD               	decf	ringBufferLUT@percentage& (0+255),w,b
  6261  0116F4  B0D8               	btfsc	status,0,c
  6262  0116F6  D025               	goto	l957
  6263  0116F8                     u11520:
  6264  0116F8                     l9761:
  6265                           
  6266                           ; BSR set to: 1
  6267                           ;ring_buffer_LUT.c: 276: terminal_printNewline();
  6268  0116F8  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6269                           
  6270                           ;ring_buffer_LUT.c: 278: terminal_textAttributes(RED, BLACK, NORMAL);
  6271  0116FC  0E00               	movlw	0
  6272  0116FE  0101               	movlb	1	; () banked
  6273  011700  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6274  011702  0E00               	movlw	0
  6275  011704  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6276  011706  0E01               	movlw	1
  6277  011708  EC47  F093         	call	_terminal_textAttributes
  6278                           
  6279                           ;ring_buffer_LUT.c: 279: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  6280  01170C  0E1D               	movlw	low STR_74
  6281  01170E  0101               	movlb	1	; () banked
  6282  011710  6F64               	movwf	printf@f& (0+255),b
  6283  011712  0EFB               	movlw	high STR_74
  6284  011714  6F65               	movwf	(printf@f+1)& (0+255),b
  6285  011716  EC00  F080         	call	_printf	;wreg free
  6286                           
  6287                           ;ring_buffer_LUT.c: 281: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6288  01171A  0E00               	movlw	0
  6289  01171C  0101               	movlb	1	; () banked
  6290  01171E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6291  011720  0E00               	movlw	0
  6292  011722  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6293  011724  0E03               	movlw	3
  6294  011726  EC47  F093         	call	_terminal_textAttributes
  6295                           
  6296                           ;ring_buffer_LUT.c: 282: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  6297  01172A  0EB7               	movlw	low STR_75
  6298  01172C  0101               	movlb	1	; () banked
  6299  01172E  6F64               	movwf	printf@f& (0+255),b
  6300  011730  0EFA               	movlw	high STR_75
  6301  011732  6F65               	movwf	(printf@f+1)& (0+255),b
  6302  011734  EC00  F080         	call	_printf	;wreg free
  6303                           
  6304                           ;ring_buffer_LUT.c: 284: terminal_textAttributesReset();
  6305  011738  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6306                           
  6307                           ;ring_buffer_LUT.c: 286: terminal_printNewline();
  6308  01173C  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6309                           
  6310                           ;ring_buffer_LUT.c: 288: }
  6311  011740  0012               	return	
  6312  011742                     l957:
  6313  011742                     l9763:
  6314                           
  6315                           ;ring_buffer_LUT.c: 291: else {
  6316                           ;ring_buffer_LUT.c: 294: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  6317  011742  0E00               	movlw	0
  6318  011744  0101               	movlb	1	; () banked
  6319  011746  6F3A               	movwf	___ftdiv@f2& (0+255),b
  6320  011748  0EC8               	movlw	200
  6321  01174A  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  6322  01174C  0E42               	movlw	66
  6323  01174E  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  6324  011750  0E00               	movlw	0
  6325  011752  6F2E               	movwf	___ftadd@f2& (0+255),b
  6326  011754  0EC8               	movlw	200
  6327  011756  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  6328  011758  0E42               	movlw	66
  6329  01175A  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  6330  01175C  C1AD  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  6331  011760  C1AE  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  6332  011764  ECA5  F0AD         	call	___awtoft	;wreg free
  6333  011768  C11F  F123         	movff	?___awtoft,___ftneg@f1
  6334  01176C  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  6335  011770  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  6336  011774  ECC6  F0AE         	call	___ftneg	;wreg free
  6337  011778  C123  F12B         	movff	?___ftneg,___ftadd@f1
  6338  01177C  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  6339  011780  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  6340  011784  ECA8  F09B         	call	___ftadd	;wreg free
  6341  011788  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  6342  01178C  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  6343  011790  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  6344  011794  ECF3  F0A2         	call	___ftdiv	;wreg free
  6345  011798  C137  F146         	movff	?___ftdiv,___ftmul@f1
  6346  01179C  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  6347  0117A0  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  6348  0117A4  0E10               	movlw	16
  6349  0117A6  0101               	movlb	1	; () banked
  6350  0117A8  6F49               	movwf	___ftmul@f2& (0+255),b
  6351  0117AA  0E49               	movlw	73
  6352  0117AC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6353  0117AE  0E40               	movlw	64
  6354  0117B0  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6355  0117B2  EC84  F0A1         	call	___ftmul	;wreg free
  6356  0117B6  C146  F0DF         	movff	?___ftmul,_TRIAC_Firing_Angle
  6357  0117BA  C147  F0E0         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1
  6358  0117BE  C148  F0E1         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2
  6359                           
  6360                           ;ring_buffer_LUT.c: 295: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  6361  0117C2  C0DF  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1
  6362  0117C6  C0E0  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1
  6363  0117CA  C0E1  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2
  6364  0117CE  0E2F               	movlw	47
  6365  0117D0  0101               	movlb	1	; () banked
  6366  0117D2  6F49               	movwf	___ftmul@f2& (0+255),b
  6367  0117D4  0E65               	movlw	101
  6368  0117D6  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6369  0117D8  0E42               	movlw	66
  6370  0117DA  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6371  0117DC  EC84  F0A1         	call	___ftmul	;wreg free
  6372  0117E0  C146  F1A3         	movff	?___ftmul,ringBufferLUT@angle_degrees
  6373  0117E4  C147  F1A4         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  6374  0117E8  C148  F1A5         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  6375                           
  6376                           ;ring_buffer_LUT.c: 296: unsigned int period_value = (100 - percentage) * (0xFFFF / 100)
      +                          ;
  6377  0117EC  C1AD  F1A1         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  6378  0117F0  C1AE  F1A2         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  6379  0117F4  0101               	movlb	1	; () banked
  6380  0117F6  1FA1               	comf	??_ringBufferLUT& (0+255),f,b
  6381  0117F8  1FA2               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  6382  0117FA  4BA1               	infsnz	??_ringBufferLUT& (0+255),f,b
  6383  0117FC  2BA2               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  6384  0117FE  0E64               	movlw	100
  6385  011800  25A1               	addwf	??_ringBufferLUT& (0+255),w,b
  6386  011802  6F25               	movwf	___wmul@multiplier& (0+255),b
  6387  011804  0E00               	movlw	0
  6388  011806  21A2               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  6389  011808  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  6390  01180A  0E02               	movlw	2
  6391  01180C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6392  01180E  0E8F               	movlw	143
  6393  011810  6F27               	movwf	___wmul@multiplicand& (0+255),b
  6394  011812  EC8A  F0AE         	call	___wmul	;wreg free
  6395  011816  C125  F1A6         	movff	?___wmul,ringBufferLUT@period_value
  6396  01181A  C126  F1A7         	movff	?___wmul+1,ringBufferLUT@period_value+1
  6397                           
  6398                           ;ring_buffer_LUT.c: 299: terminal_printNewline();
  6399  01181E  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6400                           
  6401                           ;ring_buffer_LUT.c: 301: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6402  011822  0E00               	movlw	0
  6403  011824  0101               	movlb	1	; () banked
  6404  011826  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6405  011828  0E00               	movlw	0
  6406  01182A  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6407  01182C  0E06               	movlw	6
  6408  01182E  EC47  F093         	call	_terminal_textAttributes
  6409                           
  6410                           ;ring_buffer_LUT.c: 302: printf("Dimming has been set to %d percent\n\r", percentage);
  6411  011832  0E15               	movlw	low STR_76
  6412  011834  0101               	movlb	1	; () banked
  6413  011836  6F64               	movwf	printf@f& (0+255),b
  6414  011838  0EFD               	movlw	high STR_76
  6415  01183A  6F65               	movwf	(printf@f+1)& (0+255),b
  6416  01183C  C1AD  F166         	movff	ringBufferLUT@percentage,?_printf+2
  6417  011840  C1AE  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  6418  011844  EC00  F080         	call	_printf	;wreg free
  6419                           
  6420                           ;ring_buffer_LUT.c: 303: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  6421  011848  0EBC               	movlw	low STR_77
  6422  01184A  0101               	movlb	1	; () banked
  6423  01184C  6F64               	movwf	printf@f& (0+255),b
  6424  01184E  0EFB               	movlw	high STR_77
  6425  011850  6F65               	movwf	(printf@f+1)& (0+255),b
  6426  011852  C0DF  F166         	movff	_TRIAC_Firing_Angle,?_printf+2
  6427  011856  C0E0  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3
  6428  01185A  C0E1  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4
  6429  01185E  C1A3  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  6430  011862  C1A4  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  6431  011866  C1A5  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  6432  01186A  EC00  F080         	call	_printf	;wreg free
  6433                           
  6434                           ;ring_buffer_LUT.c: 304: printf("This corresponds to a 16 bit period value of %d least s
      +                          ignificant bits\n\r", period_value);
  6435  01186E  0E73               	movlw	low STR_78
  6436  011870  0101               	movlb	1	; () banked
  6437  011872  6F64               	movwf	printf@f& (0+255),b
  6438  011874  0EFB               	movlw	high STR_78
  6439  011876  6F65               	movwf	(printf@f+1)& (0+255),b
  6440  011878  C1A6  F166         	movff	ringBufferLUT@period_value,?_printf+2
  6441  01187C  C1A7  F167         	movff	ringBufferLUT@period_value+1,?_printf+3
  6442  011880  EC00  F080         	call	_printf	;wreg free
  6443                           
  6444                           ;ring_buffer_LUT.c: 306: terminal_textAttributesReset();
  6445  011884  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6446                           
  6447                           ;ring_buffer_LUT.c: 308: terminal_printNewline();
  6448  011888  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6449                           
  6450                           ;ring_buffer_LUT.c: 310: }
  6451                           ;ring_buffer_LUT.c: 312: }
  6452  01188C  0012               	return	
  6453  01188E                     l954:
  6454                           
  6455                           ;ring_buffer_LUT.c: 315: else if((0 == strcmp(line, "On Time?"))) {
  6456  01188E  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6457  011892  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6458  011896  0E8D               	movlw	low STR_79
  6459  011898  0101               	movlb	1	; () banked
  6460  01189A  6F19               	movwf	strcmp@s2& (0+255),b
  6461  01189C  0EFF               	movlw	high STR_79
  6462  01189E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6463  0118A0  EC60  F0AC         	call	_strcmp	;wreg free
  6464  0118A4  0101               	movlb	1	; () banked
  6465  0118A6  5117               	movf	?_strcmp& (0+255),w,b
  6466  0118A8  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6467  0118AA  A4D8               	btfss	status,2,c
  6468  0118AC  D01E               	goto	l962
  6469                           
  6470                           ; BSR set to: 1
  6471                           ;ring_buffer_LUT.c: 318: terminal_printNewline();
  6472  0118AE  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6473                           
  6474                           ;ring_buffer_LUT.c: 320: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6475  0118B2  0E00               	movlw	0
  6476  0118B4  0101               	movlb	1	; () banked
  6477  0118B6  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6478  0118B8  0E00               	movlw	0
  6479  0118BA  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6480  0118BC  0E06               	movlw	6
  6481  0118BE  EC47  F093         	call	_terminal_textAttributes
  6482                           
  6483                           ;ring_buffer_LUT.c: 321: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", on_time);
  6484  0118C2  0EFB               	movlw	low STR_80
  6485  0118C4  0101               	movlb	1	; () banked
  6486  0118C6  6F64               	movwf	printf@f& (0+255),b
  6487  0118C8  0EFB               	movlw	high STR_80
  6488  0118CA  6F65               	movwf	(printf@f+1)& (0+255),b
  6489  0118CC  C1BA  F166         	movff	_on_time,?_printf+2
  6490  0118D0  C1BB  F167         	movff	_on_time+1,?_printf+3
  6491  0118D4  C1BC  F168         	movff	_on_time+2,?_printf+4
  6492  0118D8  C1BD  F169         	movff	_on_time+3,?_printf+5
  6493  0118DC  EC00  F080         	call	_printf	;wreg free
  6494                           
  6495                           ;ring_buffer_LUT.c: 323: terminal_textAttributesReset();
  6496  0118E0  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6497                           
  6498                           ;ring_buffer_LUT.c: 325: terminal_printNewline();
  6499  0118E4  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6500                           
  6501                           ;ring_buffer_LUT.c: 328: }
  6502  0118E8  0012               	return	
  6503  0118EA                     l962:
  6504                           
  6505                           ;ring_buffer_LUT.c: 333: else if((0 == strcmp(line, "Help"))) {
  6506  0118EA  C19F  F117         	movff	ringBufferLUT@line,strcmp@s1
  6507  0118EE  C1A0  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6508  0118F2  0EA8               	movlw	low STR_81
  6509  0118F4  0101               	movlb	1	; () banked
  6510  0118F6  6F19               	movwf	strcmp@s2& (0+255),b
  6511  0118F8  0EFF               	movlw	high STR_81
  6512  0118FA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6513  0118FC  EC60  F0AC         	call	_strcmp	;wreg free
  6514  011900  0101               	movlb	1	; () banked
  6515  011902  5117               	movf	?_strcmp& (0+255),w,b
  6516  011904  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6517  011906  A4D8               	btfss	status,2,c
  6518  011908  0012               	return	
  6519                           
  6520                           ; BSR set to: 1
  6521                           ;ring_buffer_LUT.c: 336: terminal_printNewline();
  6522  01190A  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6523                           
  6524                           ;ring_buffer_LUT.c: 338: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6525  01190E  0E00               	movlw	0
  6526  011910  0101               	movlb	1	; () banked
  6527  011912  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6528  011914  0E00               	movlw	0
  6529  011916  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6530  011918  0E03               	movlw	3
  6531  01191A  EC47  F093         	call	_terminal_textAttributes
  6532                           
  6533                           ;ring_buffer_LUT.c: 339: printf("List of supported commands:\n\r"
  6534                           ;ring_buffer_LUT.c: 340: "   Reset: Clears the terminal and resets the micro\n\r"
  6535                           ;ring_buffer_LUT.c: 341: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  6536                           ;ring_buffer_LUT.c: 342: "   *IDN?: Returns device identification\n\r"
  6537                           ;ring_buffer_LUT.c: 343: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
  6538                           ;ring_buffer_LUT.c: 344: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
  6539                           ;ring_buffer_LUT.c: 345: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
  6540  01191E  0EC3               	movlw	low STR_82
  6541  011920  0101               	movlb	1	; () banked
  6542  011922  6F64               	movwf	printf@f& (0+255),b
  6543  011924  0EF4               	movlw	high STR_82
  6544  011926  6F65               	movwf	(printf@f+1)& (0+255),b
  6545  011928  EC00  F080         	call	_printf	;wreg free
  6546                           
  6547                           ;ring_buffer_LUT.c: 359: terminal_printNewline();
  6548  01192C  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6549                           
  6550                           ;ring_buffer_LUT.c: 360: printf("Help messages appear in yellow\n\r");
  6551  011930  0EE5               	movlw	low STR_83
  6552  011932  0101               	movlb	1	; () banked
  6553  011934  6F64               	movwf	printf@f& (0+255),b
  6554  011936  0EFD               	movlw	high STR_83
  6555  011938  6F65               	movwf	(printf@f+1)& (0+255),b
  6556  01193A  EC00  F080         	call	_printf	;wreg free
  6557                           
  6558                           ;ring_buffer_LUT.c: 362: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6559  01193E  0E00               	movlw	0
  6560  011940  0101               	movlb	1	; () banked
  6561  011942  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6562  011944  0E00               	movlw	0
  6563  011946  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6564  011948  0E02               	movlw	2
  6565  01194A  EC47  F093         	call	_terminal_textAttributes
  6566                           
  6567                           ;ring_buffer_LUT.c: 363: printf("IDN string appears in green\n\r");
  6568  01194E  0E44               	movlw	low STR_84
  6569  011950  0101               	movlb	1	; () banked
  6570  011952  6F64               	movwf	printf@f& (0+255),b
  6571  011954  0EFE               	movlw	high STR_84
  6572  011956  6F65               	movwf	(printf@f+1)& (0+255),b
  6573  011958  EC00  F080         	call	_printf	;wreg free
  6574                           
  6575                           ;ring_buffer_LUT.c: 364: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6576  01195C  0E00               	movlw	0
  6577  01195E  0101               	movlb	1	; () banked
  6578  011960  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6579  011962  0E00               	movlw	0
  6580  011964  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6581  011966  0E06               	movlw	6
  6582  011968  EC47  F093         	call	_terminal_textAttributes
  6583                           
  6584                           ;ring_buffer_LUT.c: 365: printf("Measurements responses appear in cyan\n\r");
  6585  01196C  0EED               	movlw	low STR_85
  6586  01196E  0101               	movlb	1	; () banked
  6587  011970  6F64               	movwf	printf@f& (0+255),b
  6588  011972  0EFC               	movlw	high STR_85
  6589  011974  6F65               	movwf	(printf@f+1)& (0+255),b
  6590  011976  EC00  F080         	call	_printf	;wreg free
  6591                           
  6592                           ;ring_buffer_LUT.c: 366: terminal_textAttributes(RED, BLACK, NORMAL);
  6593  01197A  0E00               	movlw	0
  6594  01197C  0101               	movlb	1	; () banked
  6595  01197E  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6596  011980  0E00               	movlw	0
  6597  011982  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6598  011984  0E01               	movlw	1
  6599  011986  EC47  F093         	call	_terminal_textAttributes
  6600                           
  6601                           ;ring_buffer_LUT.c: 367: printf("Errors appear in red\n\r");
  6602  01198A  0EC5               	movlw	low STR_86
  6603  01198C  0101               	movlb	1	; () banked
  6604  01198E  6F64               	movwf	printf@f& (0+255),b
  6605  011990  0EFE               	movlw	high STR_86
  6606  011992  6F65               	movwf	(printf@f+1)& (0+255),b
  6607  011994  EC00  F080         	call	_printf	;wreg free
  6608                           
  6609                           ;ring_buffer_LUT.c: 368: terminal_textAttributesReset();
  6610  011998  EC77  F0AF         	call	_terminal_textAttributesReset	;wreg free
  6611                           
  6612                           ;ring_buffer_LUT.c: 369: printf("User input appears in white\n\r");
  6613  01199C  0E26               	movlw	low STR_87
  6614  01199E  0101               	movlb	1	; () banked
  6615  0119A0  6F64               	movwf	printf@f& (0+255),b
  6616  0119A2  0EFE               	movlw	high STR_87
  6617  0119A4  6F65               	movwf	(printf@f+1)& (0+255),b
  6618  0119A6  EC00  F080         	call	_printf	;wreg free
  6619                           
  6620                           ;ring_buffer_LUT.c: 372: terminal_printNewline();
  6621  0119AA  EC91  F0AF         	call	_terminal_printNewline	;wreg free
  6622  0119AE  0012               	return	
  6623  0119B0                     __end_of_ringBufferLUT:
  6624                           	opt stack 0
  6625                           tblptru	equ	0xFF8
  6626                           tblptrh	equ	0xFF7
  6627                           tblptrl	equ	0xFF6
  6628                           tablat	equ	0xFF5
  6629                           intcon	equ	0xFF2
  6630                           postinc0	equ	0xFEE
  6631                           wreg	equ	0xFE8
  6632                           indf1	equ	0xFE7
  6633                           postdec1	equ	0xFE5
  6634                           fsr1h	equ	0xFE2
  6635                           fsr1l	equ	0xFE1
  6636                           indf2	equ	0xFDF
  6637                           postinc2	equ	0xFDE
  6638                           fsr2h	equ	0xFDA
  6639                           fsr2l	equ	0xFD9
  6640                           status	equ	0xFD8
  6641                           
  6642 ;; *************** function _terminal_textAttributesReset *****************
  6643 ;; Defined at:
  6644 ;;		line 223 in file "ring_buffer_interface.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;		None
  6647 ;; Auto vars:     Size  Location     Type
  6648 ;;		None
  6649 ;; Return value:  Size  Location     Type
  6650 ;;                  1    wreg      void 
  6651 ;; Registers used:
  6652 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6653 ;; Tracked objects:
  6654 ;;		On entry : 0/0
  6655 ;;		On exit  : 0/0
  6656 ;;		Unchanged: 0/0
  6657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6662 ;;Total ram usage:        0 bytes
  6663 ;; Hardware stack levels used:    1
  6664 ;; Hardware stack levels required when called:   19
  6665 ;; This function calls:
  6666 ;;		_terminal_textAttributes
  6667 ;; This function is called by:
  6668 ;;		_main
  6669 ;;		_ringBufferLUT
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text4
  6674  015EEE                     __ptext4:
  6675                           	opt stack 0
  6676  015EEE                     _terminal_textAttributesReset:
  6677                           	opt stack 11
  6678                           
  6679                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  6680                           
  6681                           ;incstack = 0
  6682  015EEE  0E00               	movlw	0
  6683  015EF0  0101               	movlb	1	; () banked
  6684  015EF2  6F8D               	movwf	terminal_textAttributes@background_color& (0+255),b
  6685  015EF4  0E00               	movlw	0
  6686  015EF6  6F8E               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6687  015EF8  0E07               	movlw	7
  6688  015EFA  EC47  F093         	call	_terminal_textAttributes
  6689  015EFE  0012               	return		;funcret
  6690  015F00                     __end_of_terminal_textAttributesReset:
  6691                           	opt stack 0
  6692                           tblptru	equ	0xFF8
  6693                           tblptrh	equ	0xFF7
  6694                           tblptrl	equ	0xFF6
  6695                           tablat	equ	0xFF5
  6696                           intcon	equ	0xFF2
  6697                           postinc0	equ	0xFEE
  6698                           wreg	equ	0xFE8
  6699                           indf1	equ	0xFE7
  6700                           postdec1	equ	0xFE5
  6701                           fsr1h	equ	0xFE2
  6702                           fsr1l	equ	0xFE1
  6703                           indf2	equ	0xFDF
  6704                           postinc2	equ	0xFDE
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8
  6708                           
  6709 ;; *************** function _terminal_textAttributes *****************
  6710 ;; Defined at:
  6711 ;;		line 115 in file "ring_buffer_interface.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;  foreground_c    1    wreg     enum E17839
  6714 ;;  background_c    1  141[BANK1 ] enum E17839
  6715 ;;  input_attrib    1  142[BANK1 ] enum E17831
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  foreground_c    1  143[BANK1 ] enum E17839
  6718 ;;  output_buff    15  144[BANK1 ] unsigned char [15]
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6728 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6729 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;Total ram usage:       18 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:   18
  6735 ;; This function calls:
  6736 ;;		_printf
  6737 ;;		_strcat
  6738 ;;		_strncpy
  6739 ;; This function is called by:
  6740 ;;		_terminal_textAttributesReset
  6741 ;;		_ringBufferLUT
  6742 ;; This function uses a non-reentrant model
  6743 ;;
  6744                           
  6745                           	psect	text5
  6746  01268E                     __ptext5:
  6747                           	opt stack 0
  6748  01268E                     _terminal_textAttributes:
  6749                           	opt stack 11
  6750                           
  6751                           ;incstack = 0
  6752                           ;terminal_textAttributes@foreground_color stored from wreg
  6753  01268E  0101               	movlb	1	; () banked
  6754  012690  6F8F               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  6755                           
  6756                           ;ring_buffer_interface.c: 119: char output_buff[15];
  6757                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  6758  012692  0E90               	movlw	low terminal_textAttributes@output_buff
  6759  012694  0101               	movlb	1	; () banked
  6760  012696  6F17               	movwf	strncpy@to& (0+255),b
  6761  012698  0E01               	movlw	high terminal_textAttributes@output_buff
  6762  01269A  6F18               	movwf	(strncpy@to+1)& (0+255),b
  6763  01269C  0EF6               	movlw	low STR_11
  6764  01269E  6F19               	movwf	strncpy@from& (0+255),b
  6765  0126A0  0EFF               	movlw	high STR_11
  6766  0126A2  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  6767  0126A4  0E00               	movlw	0
  6768  0126A6  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  6769  0126A8  0E0F               	movlw	15
  6770  0126AA  6F1B               	movwf	strncpy@size& (0+255),b
  6771  0126AC  EC26  F0AA         	call	_strncpy	;wreg free
  6772                           
  6773                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  6774  0126B0  D054               	goto	l844
  6775  0126B2                     
  6776                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  6777  0126B2  0E90               	movlw	low terminal_textAttributes@output_buff
  6778  0126B4  0101               	movlb	1	; () banked
  6779  0126B6  6F17               	movwf	strcat@to& (0+255),b
  6780  0126B8  0E01               	movlw	high terminal_textAttributes@output_buff
  6781  0126BA  6F18               	movwf	(strcat@to+1)& (0+255),b
  6782  0126BC  0EC7               	movlw	low (STR_20+1)
  6783  0126BE  6F19               	movwf	strcat@from& (0+255),b
  6784  0126C0  0EFF               	movlw	high (STR_20+1)
  6785  0126C2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6786  0126C4  ECAF  F0AC         	call	_strcat	;wreg free
  6787                           
  6788                           ;ring_buffer_interface.c: 127: break;
  6789  0126C8  D05D               	goto	l846
  6790  0126CA                     
  6791                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  6792  0126CA  0E90               	movlw	low terminal_textAttributes@output_buff
  6793  0126CC  0101               	movlb	1	; () banked
  6794  0126CE  6F17               	movwf	strcat@to& (0+255),b
  6795  0126D0  0E01               	movlw	high terminal_textAttributes@output_buff
  6796  0126D2  6F18               	movwf	(strcat@to+1)& (0+255),b
  6797  0126D4  0ECD               	movlw	low (STR_21+1)
  6798  0126D6  6F19               	movwf	strcat@from& (0+255),b
  6799  0126D8  0EFF               	movlw	high (STR_21+1)
  6800  0126DA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6801  0126DC  ECAF  F0AC         	call	_strcat	;wreg free
  6802                           
  6803                           ;ring_buffer_interface.c: 130: break;
  6804  0126E0  D051               	goto	l846
  6805  0126E2                     
  6806                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  6807  0126E2  0E90               	movlw	low terminal_textAttributes@output_buff
  6808  0126E4  0101               	movlb	1	; () banked
  6809  0126E6  6F17               	movwf	strcat@to& (0+255),b
  6810  0126E8  0E01               	movlw	high terminal_textAttributes@output_buff
  6811  0126EA  6F18               	movwf	(strcat@to+1)& (0+255),b
  6812  0126EC  0EDF               	movlw	low (STR_24+1)
  6813  0126EE  6F19               	movwf	strcat@from& (0+255),b
  6814  0126F0  0EFF               	movlw	high (STR_24+1)
  6815  0126F2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6816  0126F4  ECAF  F0AC         	call	_strcat	;wreg free
  6817                           
  6818                           ;ring_buffer_interface.c: 133: break;
  6819  0126F8  D045               	goto	l846
  6820  0126FA                     
  6821                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  6822  0126FA  0E90               	movlw	low terminal_textAttributes@output_buff
  6823  0126FC  0101               	movlb	1	; () banked
  6824  0126FE  6F17               	movwf	strcat@to& (0+255),b
  6825  012700  0E01               	movlw	high terminal_textAttributes@output_buff
  6826  012702  6F18               	movwf	(strcat@to+1)& (0+255),b
  6827  012704  0EE5               	movlw	low (STR_25+1)
  6828  012706  6F19               	movwf	strcat@from& (0+255),b
  6829  012708  0EFF               	movlw	high (STR_25+1)
  6830  01270A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6831  01270C  ECAF  F0AC         	call	_strcat	;wreg free
  6832                           
  6833                           ;ring_buffer_interface.c: 136: break;
  6834  012710  D039               	goto	l846
  6835  012712                     
  6836                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  6837  012712  0E90               	movlw	low terminal_textAttributes@output_buff
  6838  012714  0101               	movlb	1	; () banked
  6839  012716  6F17               	movwf	strcat@to& (0+255),b
  6840  012718  0E01               	movlw	high terminal_textAttributes@output_buff
  6841  01271A  6F18               	movwf	(strcat@to+1)& (0+255),b
  6842  01271C  0EF1               	movlw	low (STR_27+1)
  6843  01271E  6F19               	movwf	strcat@from& (0+255),b
  6844  012720  0EFF               	movlw	high (STR_27+1)
  6845  012722  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6846  012724  ECAF  F0AC         	call	_strcat	;wreg free
  6847                           
  6848                           ;ring_buffer_interface.c: 139: break;
  6849  012728  D02D               	goto	l846
  6850  01272A                     
  6851                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  6852  01272A  0E90               	movlw	low terminal_textAttributes@output_buff
  6853  01272C  0101               	movlb	1	; () banked
  6854  01272E  6F17               	movwf	strcat@to& (0+255),b
  6855  012730  0E01               	movlw	high terminal_textAttributes@output_buff
  6856  012732  6F18               	movwf	(strcat@to+1)& (0+255),b
  6857  012734  0EF9               	movlw	low STR_17
  6858  012736  6F19               	movwf	strcat@from& (0+255),b
  6859  012738  0EFF               	movlw	high STR_17
  6860  01273A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6861  01273C  ECAF  F0AC         	call	_strcat	;wreg free
  6862                           
  6863                           ;ring_buffer_interface.c: 142: break;
  6864  012740  D021               	goto	l846
  6865  012742                     
  6866                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  6867  012742  0E90               	movlw	low terminal_textAttributes@output_buff
  6868  012744  0101               	movlb	1	; () banked
  6869  012746  6F17               	movwf	strcat@to& (0+255),b
  6870  012748  0E01               	movlw	high terminal_textAttributes@output_buff
  6871  01274A  6F18               	movwf	(strcat@to+1)& (0+255),b
  6872  01274C  0EC7               	movlw	low (STR_20+1)
  6873  01274E  6F19               	movwf	strcat@from& (0+255),b
  6874  012750  0EFF               	movlw	high (STR_20+1)
  6875  012752  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6876  012754  ECAF  F0AC         	call	_strcat	;wreg free
  6877                           
  6878                           ;ring_buffer_interface.c: 147: }
  6879                           
  6880                           ;ring_buffer_interface.c: 146: break;
  6881  012758  D015               	goto	l846
  6882  01275A                     l844:
  6883  01275A  0101               	movlb	1	; () banked
  6884  01275C  518E               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  6885                           
  6886                           ; Switch size 1, requested type "space"
  6887                           ; Number of cases is 6, Range of values is 0 to 5
  6888                           ; switch strategies available:
  6889                           ; Name         Instructions Cycles
  6890                           ; simple_byte           19    10 (average)
  6891                           ;	Chosen strategy is simple_byte
  6892  01275E  0A00               	xorlw	0	; case 0
  6893  012760  B4D8               	btfsc	status,2,c
  6894  012762  D7A7               	goto	l845
  6895  012764  0A01               	xorlw	1	; case 1
  6896  012766  B4D8               	btfsc	status,2,c
  6897  012768  D7B0               	goto	l847
  6898  01276A  0A03               	xorlw	3	; case 2
  6899  01276C  B4D8               	btfsc	status,2,c
  6900  01276E  D7B9               	goto	l848
  6901  012770  0A01               	xorlw	1	; case 3
  6902  012772  B4D8               	btfsc	status,2,c
  6903  012774  D7C2               	goto	l849
  6904  012776  0A07               	xorlw	7	; case 4
  6905  012778  B4D8               	btfsc	status,2,c
  6906  01277A  D7CB               	goto	l850
  6907  01277C  0A01               	xorlw	1	; case 5
  6908  01277E  B4D8               	btfsc	status,2,c
  6909  012780  D7D4               	goto	l851
  6910  012782  D7DF               	goto	l852
  6911  012784                     l846:
  6912                           
  6913                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  6914                           
  6915                           ; BSR set to: 1
  6916  012784  0E90               	movlw	low terminal_textAttributes@output_buff
  6917  012786  0101               	movlb	1	; () banked
  6918  012788  6F17               	movwf	strcat@to& (0+255),b
  6919  01278A  0E01               	movlw	high terminal_textAttributes@output_buff
  6920  01278C  6F18               	movwf	(strcat@to+1)& (0+255),b
  6921  01278E  0EFB               	movlw	low STR_19
  6922  012790  6F19               	movwf	strcat@from& (0+255),b
  6923  012792  0EFF               	movlw	high STR_19
  6924  012794  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6925  012796  ECAF  F0AC         	call	_strcat	;wreg free
  6926                           
  6927                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  6928  01279A  D06C               	goto	l853
  6929  01279C                     
  6930                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  6931  01279C  0E90               	movlw	low terminal_textAttributes@output_buff
  6932  01279E  0101               	movlb	1	; () banked
  6933  0127A0  6F17               	movwf	strcat@to& (0+255),b
  6934  0127A2  0E01               	movlw	high terminal_textAttributes@output_buff
  6935  0127A4  6F18               	movwf	(strcat@to+1)& (0+255),b
  6936  0127A6  0EC6               	movlw	low STR_20
  6937  0127A8  6F19               	movwf	strcat@from& (0+255),b
  6938  0127AA  0EFF               	movlw	high STR_20
  6939  0127AC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6940  0127AE  ECAF  F0AC         	call	_strcat	;wreg free
  6941                           
  6942                           ;ring_buffer_interface.c: 155: break;
  6943  0127B2  D07B               	goto	l855
  6944  0127B4                     
  6945                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  6946  0127B4  0E90               	movlw	low terminal_textAttributes@output_buff
  6947  0127B6  0101               	movlb	1	; () banked
  6948  0127B8  6F17               	movwf	strcat@to& (0+255),b
  6949  0127BA  0E01               	movlw	high terminal_textAttributes@output_buff
  6950  0127BC  6F18               	movwf	(strcat@to+1)& (0+255),b
  6951  0127BE  0ECC               	movlw	low STR_21
  6952  0127C0  6F19               	movwf	strcat@from& (0+255),b
  6953  0127C2  0EFF               	movlw	high STR_21
  6954  0127C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6955  0127C6  ECAF  F0AC         	call	_strcat	;wreg free
  6956                           
  6957                           ;ring_buffer_interface.c: 158: break;
  6958  0127CA  D06F               	goto	l855
  6959  0127CC                     
  6960                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  6961  0127CC  0E90               	movlw	low terminal_textAttributes@output_buff
  6962  0127CE  0101               	movlb	1	; () banked
  6963  0127D0  6F17               	movwf	strcat@to& (0+255),b
  6964  0127D2  0E01               	movlw	high terminal_textAttributes@output_buff
  6965  0127D4  6F18               	movwf	(strcat@to+1)& (0+255),b
  6966  0127D6  0ED2               	movlw	low STR_22
  6967  0127D8  6F19               	movwf	strcat@from& (0+255),b
  6968  0127DA  0EFF               	movlw	high STR_22
  6969  0127DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6970  0127DE  ECAF  F0AC         	call	_strcat	;wreg free
  6971                           
  6972                           ;ring_buffer_interface.c: 161: break;
  6973  0127E2  D063               	goto	l855
  6974  0127E4                     
  6975                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  6976  0127E4  0E90               	movlw	low terminal_textAttributes@output_buff
  6977  0127E6  0101               	movlb	1	; () banked
  6978  0127E8  6F17               	movwf	strcat@to& (0+255),b
  6979  0127EA  0E01               	movlw	high terminal_textAttributes@output_buff
  6980  0127EC  6F18               	movwf	(strcat@to+1)& (0+255),b
  6981  0127EE  0ED8               	movlw	low STR_23
  6982  0127F0  6F19               	movwf	strcat@from& (0+255),b
  6983  0127F2  0EFF               	movlw	high STR_23
  6984  0127F4  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6985  0127F6  ECAF  F0AC         	call	_strcat	;wreg free
  6986                           
  6987                           ;ring_buffer_interface.c: 164: break;
  6988  0127FA  D057               	goto	l855
  6989  0127FC                     
  6990                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  6991  0127FC  0E90               	movlw	low terminal_textAttributes@output_buff
  6992  0127FE  0101               	movlb	1	; () banked
  6993  012800  6F17               	movwf	strcat@to& (0+255),b
  6994  012802  0E01               	movlw	high terminal_textAttributes@output_buff
  6995  012804  6F18               	movwf	(strcat@to+1)& (0+255),b
  6996  012806  0EDE               	movlw	low STR_24
  6997  012808  6F19               	movwf	strcat@from& (0+255),b
  6998  01280A  0EFF               	movlw	high STR_24
  6999  01280C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7000  01280E  ECAF  F0AC         	call	_strcat	;wreg free
  7001                           
  7002                           ;ring_buffer_interface.c: 167: break;
  7003  012812  D04B               	goto	l855
  7004  012814                     
  7005                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  7006  012814  0E90               	movlw	low terminal_textAttributes@output_buff
  7007  012816  0101               	movlb	1	; () banked
  7008  012818  6F17               	movwf	strcat@to& (0+255),b
  7009  01281A  0E01               	movlw	high terminal_textAttributes@output_buff
  7010  01281C  6F18               	movwf	(strcat@to+1)& (0+255),b
  7011  01281E  0EE4               	movlw	low STR_25
  7012  012820  6F19               	movwf	strcat@from& (0+255),b
  7013  012822  0EFF               	movlw	high STR_25
  7014  012824  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7015  012826  ECAF  F0AC         	call	_strcat	;wreg free
  7016                           
  7017                           ;ring_buffer_interface.c: 170: break;
  7018  01282A  D03F               	goto	l855
  7019  01282C                     
  7020                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  7021  01282C  0E90               	movlw	low terminal_textAttributes@output_buff
  7022  01282E  0101               	movlb	1	; () banked
  7023  012830  6F17               	movwf	strcat@to& (0+255),b
  7024  012832  0E01               	movlw	high terminal_textAttributes@output_buff
  7025  012834  6F18               	movwf	(strcat@to+1)& (0+255),b
  7026  012836  0EEA               	movlw	low STR_26
  7027  012838  6F19               	movwf	strcat@from& (0+255),b
  7028  01283A  0EFF               	movlw	high STR_26
  7029  01283C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7030  01283E  ECAF  F0AC         	call	_strcat	;wreg free
  7031                           
  7032                           ;ring_buffer_interface.c: 173: break;
  7033  012842  D033               	goto	l855
  7034  012844                     
  7035                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  7036  012844  0E90               	movlw	low terminal_textAttributes@output_buff
  7037  012846  0101               	movlb	1	; () banked
  7038  012848  6F17               	movwf	strcat@to& (0+255),b
  7039  01284A  0E01               	movlw	high terminal_textAttributes@output_buff
  7040  01284C  6F18               	movwf	(strcat@to+1)& (0+255),b
  7041  01284E  0EF0               	movlw	low STR_27
  7042  012850  6F19               	movwf	strcat@from& (0+255),b
  7043  012852  0EFF               	movlw	high STR_27
  7044  012854  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7045  012856  ECAF  F0AC         	call	_strcat	;wreg free
  7046                           
  7047                           ;ring_buffer_interface.c: 176: break;
  7048  01285A  D027               	goto	l855
  7049  01285C                     
  7050                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  7051  01285C  0E90               	movlw	low terminal_textAttributes@output_buff
  7052  01285E  0101               	movlb	1	; () banked
  7053  012860  6F17               	movwf	strcat@to& (0+255),b
  7054  012862  0E01               	movlw	high terminal_textAttributes@output_buff
  7055  012864  6F18               	movwf	(strcat@to+1)& (0+255),b
  7056  012866  0EF0               	movlw	low STR_27
  7057  012868  6F19               	movwf	strcat@from& (0+255),b
  7058  01286A  0EFF               	movlw	high STR_27
  7059  01286C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7060  01286E  ECAF  F0AC         	call	_strcat	;wreg free
  7061                           
  7062                           ;ring_buffer_interface.c: 181: }
  7063                           
  7064                           ;ring_buffer_interface.c: 180: break;
  7065  012872  D01B               	goto	l855
  7066  012874                     l853:
  7067  012874  0101               	movlb	1	; () banked
  7068  012876  518F               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  7069                           
  7070                           ; Switch size 1, requested type "space"
  7071                           ; Number of cases is 8, Range of values is 0 to 7
  7072                           ; switch strategies available:
  7073                           ; Name         Instructions Cycles
  7074                           ; simple_byte           25    13 (average)
  7075                           ;	Chosen strategy is simple_byte
  7076  012878  0A00               	xorlw	0	; case 0
  7077  01287A  B4D8               	btfsc	status,2,c
  7078  01287C  D78F               	goto	l854
  7079  01287E  0A01               	xorlw	1	; case 1
  7080  012880  B4D8               	btfsc	status,2,c
  7081  012882  D798               	goto	l856
  7082  012884  0A03               	xorlw	3	; case 2
  7083  012886  B4D8               	btfsc	status,2,c
  7084  012888  D7A1               	goto	l857
  7085  01288A  0A01               	xorlw	1	; case 3
  7086  01288C  B4D8               	btfsc	status,2,c
  7087  01288E  D7AA               	goto	l858
  7088  012890  0A07               	xorlw	7	; case 4
  7089  012892  B4D8               	btfsc	status,2,c
  7090  012894  D7B3               	goto	l859
  7091  012896  0A01               	xorlw	1	; case 5
  7092  012898  B4D8               	btfsc	status,2,c
  7093  01289A  D7BC               	goto	l860
  7094  01289C  0A03               	xorlw	3	; case 6
  7095  01289E  B4D8               	btfsc	status,2,c
  7096  0128A0  D7C5               	goto	l861
  7097  0128A2  0A01               	xorlw	1	; case 7
  7098  0128A4  B4D8               	btfsc	status,2,c
  7099  0128A6  D7CE               	goto	l862
  7100  0128A8  D7D9               	goto	l863
  7101  0128AA                     l855:
  7102                           
  7103                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  7104                           
  7105                           ; BSR set to: 1
  7106  0128AA  0E90               	movlw	low terminal_textAttributes@output_buff
  7107  0128AC  0101               	movlb	1	; () banked
  7108  0128AE  6F17               	movwf	strcat@to& (0+255),b
  7109  0128B0  0E01               	movlw	high terminal_textAttributes@output_buff
  7110  0128B2  6F18               	movwf	(strcat@to+1)& (0+255),b
  7111  0128B4  0EFB               	movlw	low STR_19
  7112  0128B6  6F19               	movwf	strcat@from& (0+255),b
  7113  0128B8  0EFF               	movlw	high STR_19
  7114  0128BA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7115  0128BC  ECAF  F0AC         	call	_strcat	;wreg free
  7116                           
  7117                           ;ring_buffer_interface.c: 185: switch (background_color) {
  7118  0128C0  D06C               	goto	l864
  7119  0128C2                     
  7120                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  7121  0128C2  0E90               	movlw	low terminal_textAttributes@output_buff
  7122  0128C4  0101               	movlb	1	; () banked
  7123  0128C6  6F17               	movwf	strcat@to& (0+255),b
  7124  0128C8  0E01               	movlw	high terminal_textAttributes@output_buff
  7125  0128CA  6F18               	movwf	(strcat@to+1)& (0+255),b
  7126  0128CC  0EC9               	movlw	low STR_30
  7127  0128CE  6F19               	movwf	strcat@from& (0+255),b
  7128  0128D0  0EFF               	movlw	high STR_30
  7129  0128D2  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7130  0128D4  ECAF  F0AC         	call	_strcat	;wreg free
  7131                           
  7132                           ;ring_buffer_interface.c: 189: break;
  7133  0128D8  D07B               	goto	l866
  7134  0128DA                     
  7135                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  7136  0128DA  0E90               	movlw	low terminal_textAttributes@output_buff
  7137  0128DC  0101               	movlb	1	; () banked
  7138  0128DE  6F17               	movwf	strcat@to& (0+255),b
  7139  0128E0  0E01               	movlw	high terminal_textAttributes@output_buff
  7140  0128E2  6F18               	movwf	(strcat@to+1)& (0+255),b
  7141  0128E4  0ECF               	movlw	low STR_31
  7142  0128E6  6F19               	movwf	strcat@from& (0+255),b
  7143  0128E8  0EFF               	movlw	high STR_31
  7144  0128EA  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7145  0128EC  ECAF  F0AC         	call	_strcat	;wreg free
  7146                           
  7147                           ;ring_buffer_interface.c: 192: break;
  7148  0128F0  D06F               	goto	l866
  7149  0128F2                     
  7150                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  7151  0128F2  0E90               	movlw	low terminal_textAttributes@output_buff
  7152  0128F4  0101               	movlb	1	; () banked
  7153  0128F6  6F17               	movwf	strcat@to& (0+255),b
  7154  0128F8  0E01               	movlw	high terminal_textAttributes@output_buff
  7155  0128FA  6F18               	movwf	(strcat@to+1)& (0+255),b
  7156  0128FC  0ED5               	movlw	low STR_32
  7157  0128FE  6F19               	movwf	strcat@from& (0+255),b
  7158  012900  0EFF               	movlw	high STR_32
  7159  012902  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7160  012904  ECAF  F0AC         	call	_strcat	;wreg free
  7161                           
  7162                           ;ring_buffer_interface.c: 195: break;
  7163  012908  D063               	goto	l866
  7164  01290A                     
  7165                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  7166  01290A  0E90               	movlw	low terminal_textAttributes@output_buff
  7167  01290C  0101               	movlb	1	; () banked
  7168  01290E  6F17               	movwf	strcat@to& (0+255),b
  7169  012910  0E01               	movlw	high terminal_textAttributes@output_buff
  7170  012912  6F18               	movwf	(strcat@to+1)& (0+255),b
  7171  012914  0EDB               	movlw	low STR_33
  7172  012916  6F19               	movwf	strcat@from& (0+255),b
  7173  012918  0EFF               	movlw	high STR_33
  7174  01291A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7175  01291C  ECAF  F0AC         	call	_strcat	;wreg free
  7176                           
  7177                           ;ring_buffer_interface.c: 198: break;
  7178  012920  D057               	goto	l866
  7179  012922                     
  7180                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  7181  012922  0E90               	movlw	low terminal_textAttributes@output_buff
  7182  012924  0101               	movlb	1	; () banked
  7183  012926  6F17               	movwf	strcat@to& (0+255),b
  7184  012928  0E01               	movlw	high terminal_textAttributes@output_buff
  7185  01292A  6F18               	movwf	(strcat@to+1)& (0+255),b
  7186  01292C  0EE1               	movlw	low STR_34
  7187  01292E  6F19               	movwf	strcat@from& (0+255),b
  7188  012930  0EFF               	movlw	high STR_34
  7189  012932  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7190  012934  ECAF  F0AC         	call	_strcat	;wreg free
  7191                           
  7192                           ;ring_buffer_interface.c: 201: break;
  7193  012938  D04B               	goto	l866
  7194  01293A                     
  7195                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  7196  01293A  0E90               	movlw	low terminal_textAttributes@output_buff
  7197  01293C  0101               	movlb	1	; () banked
  7198  01293E  6F17               	movwf	strcat@to& (0+255),b
  7199  012940  0E01               	movlw	high terminal_textAttributes@output_buff
  7200  012942  6F18               	movwf	(strcat@to+1)& (0+255),b
  7201  012944  0EE7               	movlw	low STR_35
  7202  012946  6F19               	movwf	strcat@from& (0+255),b
  7203  012948  0EFF               	movlw	high STR_35
  7204  01294A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7205  01294C  ECAF  F0AC         	call	_strcat	;wreg free
  7206                           
  7207                           ;ring_buffer_interface.c: 204: break;
  7208  012950  D03F               	goto	l866
  7209  012952                     
  7210                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  7211  012952  0E90               	movlw	low terminal_textAttributes@output_buff
  7212  012954  0101               	movlb	1	; () banked
  7213  012956  6F17               	movwf	strcat@to& (0+255),b
  7214  012958  0E01               	movlw	high terminal_textAttributes@output_buff
  7215  01295A  6F18               	movwf	(strcat@to+1)& (0+255),b
  7216  01295C  0EED               	movlw	low STR_36
  7217  01295E  6F19               	movwf	strcat@from& (0+255),b
  7218  012960  0EFF               	movlw	high STR_36
  7219  012962  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7220  012964  ECAF  F0AC         	call	_strcat	;wreg free
  7221                           
  7222                           ;ring_buffer_interface.c: 207: break;
  7223  012968  D033               	goto	l866
  7224  01296A                     
  7225                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  7226  01296A  0E90               	movlw	low terminal_textAttributes@output_buff
  7227  01296C  0101               	movlb	1	; () banked
  7228  01296E  6F17               	movwf	strcat@to& (0+255),b
  7229  012970  0E01               	movlw	high terminal_textAttributes@output_buff
  7230  012972  6F18               	movwf	(strcat@to+1)& (0+255),b
  7231  012974  0EF3               	movlw	low STR_37
  7232  012976  6F19               	movwf	strcat@from& (0+255),b
  7233  012978  0EFF               	movlw	high STR_37
  7234  01297A  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7235  01297C  ECAF  F0AC         	call	_strcat	;wreg free
  7236                           
  7237                           ;ring_buffer_interface.c: 210: break;
  7238  012980  D027               	goto	l866
  7239  012982                     
  7240                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  7241  012982  0E90               	movlw	low terminal_textAttributes@output_buff
  7242  012984  0101               	movlb	1	; () banked
  7243  012986  6F17               	movwf	strcat@to& (0+255),b
  7244  012988  0E01               	movlw	high terminal_textAttributes@output_buff
  7245  01298A  6F18               	movwf	(strcat@to+1)& (0+255),b
  7246  01298C  0EF3               	movlw	low STR_37
  7247  01298E  6F19               	movwf	strcat@from& (0+255),b
  7248  012990  0EFF               	movlw	high STR_37
  7249  012992  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7250  012994  ECAF  F0AC         	call	_strcat	;wreg free
  7251                           
  7252                           ;ring_buffer_interface.c: 215: }
  7253                           
  7254                           ;ring_buffer_interface.c: 214: break;
  7255  012998  D01B               	goto	l866
  7256  01299A                     l864:
  7257  01299A  0101               	movlb	1	; () banked
  7258  01299C  518D               	movf	terminal_textAttributes@background_color& (0+255),w,b
  7259                           
  7260                           ; Switch size 1, requested type "space"
  7261                           ; Number of cases is 8, Range of values is 0 to 7
  7262                           ; switch strategies available:
  7263                           ; Name         Instructions Cycles
  7264                           ; simple_byte           25    13 (average)
  7265                           ;	Chosen strategy is simple_byte
  7266  01299E  0A00               	xorlw	0	; case 0
  7267  0129A0  B4D8               	btfsc	status,2,c
  7268  0129A2  D78F               	goto	l865
  7269  0129A4  0A01               	xorlw	1	; case 1
  7270  0129A6  B4D8               	btfsc	status,2,c
  7271  0129A8  D798               	goto	l867
  7272  0129AA  0A03               	xorlw	3	; case 2
  7273  0129AC  B4D8               	btfsc	status,2,c
  7274  0129AE  D7A1               	goto	l868
  7275  0129B0  0A01               	xorlw	1	; case 3
  7276  0129B2  B4D8               	btfsc	status,2,c
  7277  0129B4  D7AA               	goto	l869
  7278  0129B6  0A07               	xorlw	7	; case 4
  7279  0129B8  B4D8               	btfsc	status,2,c
  7280  0129BA  D7B3               	goto	l870
  7281  0129BC  0A01               	xorlw	1	; case 5
  7282  0129BE  B4D8               	btfsc	status,2,c
  7283  0129C0  D7BC               	goto	l871
  7284  0129C2  0A03               	xorlw	3	; case 6
  7285  0129C4  B4D8               	btfsc	status,2,c
  7286  0129C6  D7C5               	goto	l872
  7287  0129C8  0A01               	xorlw	1	; case 7
  7288  0129CA  B4D8               	btfsc	status,2,c
  7289  0129CC  D7CE               	goto	l873
  7290  0129CE  D7D9               	goto	l874
  7291  0129D0                     l866:
  7292                           
  7293                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  7294                           
  7295                           ; BSR set to: 1
  7296  0129D0  0E90               	movlw	low terminal_textAttributes@output_buff
  7297  0129D2  0101               	movlb	1	; () banked
  7298  0129D4  6F17               	movwf	strcat@to& (0+255),b
  7299  0129D6  0E01               	movlw	high terminal_textAttributes@output_buff
  7300  0129D8  6F18               	movwf	(strcat@to+1)& (0+255),b
  7301  0129DA  0EFD               	movlw	low STR_39
  7302  0129DC  6F19               	movwf	strcat@from& (0+255),b
  7303  0129DE  0EFF               	movlw	high STR_39
  7304  0129E0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7305  0129E2  ECAF  F0AC         	call	_strcat	;wreg free
  7306                           
  7307                           ;ring_buffer_interface.c: 219: printf(output_buff);
  7308  0129E6  0E90               	movlw	low terminal_textAttributes@output_buff
  7309  0129E8  0101               	movlb	1	; () banked
  7310  0129EA  6F64               	movwf	printf@f& (0+255),b
  7311  0129EC  0E01               	movlw	high terminal_textAttributes@output_buff
  7312  0129EE  6F65               	movwf	(printf@f+1)& (0+255),b
  7313  0129F0  EC00  F080         	call	_printf	;wreg free
  7314  0129F4  0012               	return		;funcret
  7315  0129F6                     __end_of_terminal_textAttributes:
  7316                           	opt stack 0
  7317                           tblptru	equ	0xFF8
  7318                           tblptrh	equ	0xFF7
  7319                           tblptrl	equ	0xFF6
  7320                           tablat	equ	0xFF5
  7321                           intcon	equ	0xFF2
  7322                           postinc0	equ	0xFEE
  7323                           wreg	equ	0xFE8
  7324                           indf1	equ	0xFE7
  7325                           postdec1	equ	0xFE5
  7326                           fsr1h	equ	0xFE2
  7327                           fsr1l	equ	0xFE1
  7328                           indf2	equ	0xFDF
  7329                           postinc2	equ	0xFDE
  7330                           fsr2h	equ	0xFDA
  7331                           fsr2l	equ	0xFD9
  7332                           status	equ	0xFD8
  7333                           
  7334 ;; *************** function _strncpy *****************
  7335 ;; Defined at:
  7336 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  7337 ;; Parameters:    Size  Location     Type
  7338 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7339 ;;		 -> terminal_textAttributes@output_buff(15), 
  7340 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7341 ;;		 -> STR_11(3), 
  7342 ;;  size            2   27[BANK1 ] unsigned int 
  7343 ;; Auto vars:     Size  Location     Type
  7344 ;;  cp              2   29[BANK1 ] PTR unsigned char 
  7345 ;;		 -> terminal_textAttributes@output_buff(15), 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  2   23[BANK1 ] PTR unsigned char 
  7348 ;; Registers used:
  7349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7355 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7356 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7358 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7359 ;;Total ram usage:        8 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:   14
  7362 ;; This function calls:
  7363 ;;		Nothing
  7364 ;; This function is called by:
  7365 ;;		_terminal_textAttributes
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text6
  7370  01544C                     __ptext6:
  7371                           	opt stack 0
  7372  01544C                     _strncpy:
  7373                           	opt stack 14
  7374                           
  7375                           ;incstack = 0
  7376  01544C  C117  F11D         	movff	strncpy@to,strncpy@cp
  7377  015450  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
  7378  015454  D018               	goto	l1842
  7379  015456  0101               	movlb	1	; () banked
  7380  015458  071B               	decf	strncpy@size& (0+255),f,b
  7381  01545A  A0D8               	btfss	status,0,c
  7382  01545C  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7383                           
  7384                           ; BSR set to: 1
  7385  01545E  C119  FFF6         	movff	strncpy@from,tblptrl
  7386  015462  C11A  FFF7         	movff	strncpy@from+1,tblptrh
  7387  015466  4B19               	infsnz	strncpy@from& (0+255),f,b
  7388  015468  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
  7389  01546A                     	if	0	;tblptru may be non-zero
  7390  01546A                     	endif
  7391  01546A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7392  01546A  0E00               	movlw	low (__mediumconst shr (0+16))
  7393  01546C  6EF8               	movwf	tblptru,c
  7394  01546E                     	endif
  7395  01546E  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7396  015472  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7397  015476  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7398  015478  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7399  01547A  0008               	tblrd		*
  7400  01547C  CFF5 FFDF          	movff	tablat,indf2
  7401  015480  50DF               	movf	indf2,w,c
  7402  015482  B4D8               	btfsc	status,2,c
  7403  015484  D00E               	goto	l1844
  7404  015486                     l1842:
  7405                           
  7406                           ; BSR set to: 1
  7407                           
  7408                           ; BSR set to: 1
  7409  015486  0101               	movlb	1	; () banked
  7410  015488  511B               	movf	strncpy@size& (0+255),w,b
  7411  01548A  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
  7412  01548C  B4D8               	btfsc	status,2,c
  7413  01548E  D009               	goto	l1844
  7414  015490  D7E2               	goto	l1841
  7415  015492                     l8777:
  7416                           
  7417                           ; BSR set to: 1
  7418  015492  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7419  015496  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7420  01549A  0E00               	movlw	0
  7421  01549C  6EDF               	movwf	indf2,c
  7422                           
  7423                           ; BSR set to: 1
  7424  01549E  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7425  0154A0  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7426  0154A2                     l1844:
  7427                           
  7428                           ; BSR set to: 1
  7429                           
  7430                           ; BSR set to: 1
  7431  0154A2  071B               	decf	strncpy@size& (0+255),f,b
  7432  0154A4  A0D8               	btfss	status,0,c
  7433  0154A6  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7434  0154A8  291B               	incf	strncpy@size& (0+255),w,b
  7435  0154AA  E1F3               	bnz	l8777
  7436  0154AC  291C               	incf	(strncpy@size+1)& (0+255),w,b
  7437  0154AE  B4D8               	btfsc	status,2,c
  7438  0154B0  0012               	return	
  7439  0154B2  D7EF               	goto	l1845
  7440  0154B4                     __end_of_strncpy:
  7441                           	opt stack 0
  7442                           tblptru	equ	0xFF8
  7443                           tblptrh	equ	0xFF7
  7444                           tblptrl	equ	0xFF6
  7445                           tablat	equ	0xFF5
  7446                           intcon	equ	0xFF2
  7447                           postinc0	equ	0xFEE
  7448                           wreg	equ	0xFE8
  7449                           indf1	equ	0xFE7
  7450                           postdec1	equ	0xFE5
  7451                           fsr1h	equ	0xFE2
  7452                           fsr1l	equ	0xFE1
  7453                           indf2	equ	0xFDF
  7454                           postinc2	equ	0xFDE
  7455                           fsr2h	equ	0xFDA
  7456                           fsr2l	equ	0xFD9
  7457                           status	equ	0xFD8
  7458                           
  7459 ;; *************** function _strcat *****************
  7460 ;; Defined at:
  7461 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  7462 ;; Parameters:    Size  Location     Type
  7463 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7464 ;;		 -> terminal_textAttributes@output_buff(15), 
  7465 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7466 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  7467 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  7468 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  7469 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  7470 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  7471 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  7472 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  7473 ;; Auto vars:     Size  Location     Type
  7474 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  7475 ;;		 -> terminal_textAttributes@output_buff(15), 
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  2   23[BANK1 ] PTR unsigned char 
  7478 ;; Registers used:
  7479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7485 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7486 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7488 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;Total ram usage:        6 bytes
  7490 ;; Hardware stack levels used:    1
  7491 ;; Hardware stack levels required when called:   14
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_terminal_textAttributes
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text7
  7500  01595E                     __ptext7:
  7501                           	opt stack 0
  7502  01595E                     _strcat:
  7503                           	opt stack 14
  7504                           
  7505                           ; BSR set to: 1
  7506                           ;incstack = 0
  7507  01595E  C117  F11B         	movff	strcat@to,strcat@cp
  7508  015962  C118  F11C         	movff	strcat@to+1,strcat@cp+1
  7509  015966  D003               	goto	l1817
  7510  015968  0101               	movlb	1	; () banked
  7511  01596A  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7512  01596C  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7513  01596E                     l1817:
  7514                           
  7515                           ; BSR set to: 1
  7516  01596E  C11B  FFD9         	movff	strcat@cp,fsr2l
  7517  015972  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7518  015976  50DF               	movf	indf2,w,c
  7519  015978  B4D8               	btfsc	status,2,c
  7520  01597A  D006               	goto	l1820
  7521  01597C  D7F5               	goto	l1818
  7522  01597E  0101               	movlb	1	; () banked
  7523  015980  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7524  015982  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7525  015984  4B19               	infsnz	strcat@from& (0+255),f,b
  7526  015986  2B1A               	incf	(strcat@from+1)& (0+255),f,b
  7527  015988                     l1820:
  7528                           
  7529                           ; BSR set to: 1
  7530  015988  C119  FFF6         	movff	strcat@from,tblptrl
  7531  01598C  C11A  FFF7         	movff	strcat@from+1,tblptrh
  7532  015990                     	if	0	;tblptru may be non-zero
  7533  015990                     	endif
  7534  015990                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7535  015990  0E00               	movlw	low (__mediumconst shr (0+16))
  7536  015992  6EF8               	movwf	tblptru,c
  7537  015994                     	endif
  7538  015994  C11B  FFD9         	movff	strcat@cp,fsr2l
  7539  015998  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7540  01599C  0008               	tblrd		*
  7541  01599E  CFF5 FFDF          	movff	tablat,indf2
  7542  0159A2  50DF               	movf	indf2,w,c
  7543  0159A4  B4D8               	btfsc	status,2,c
  7544  0159A6  0012               	return	
  7545  0159A8  D7EA               	goto	l1821
  7546  0159AA                     __end_of_strcat:
  7547                           	opt stack 0
  7548                           tblptru	equ	0xFF8
  7549                           tblptrh	equ	0xFF7
  7550                           tblptrl	equ	0xFF6
  7551                           tablat	equ	0xFF5
  7552                           intcon	equ	0xFF2
  7553                           postinc0	equ	0xFEE
  7554                           wreg	equ	0xFE8
  7555                           indf1	equ	0xFE7
  7556                           postdec1	equ	0xFE5
  7557                           fsr1h	equ	0xFE2
  7558                           fsr1l	equ	0xFE1
  7559                           indf2	equ	0xFDF
  7560                           postinc2	equ	0xFDE
  7561                           fsr2h	equ	0xFDA
  7562                           fsr2l	equ	0xFD9
  7563                           status	equ	0xFD8
  7564                           
  7565 ;; *************** function _terminal_printNewline *****************
  7566 ;; Defined at:
  7567 ;;		line 230 in file "ring_buffer_interface.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;		None
  7570 ;; Auto vars:     Size  Location     Type
  7571 ;;		None
  7572 ;; Return value:  Size  Location     Type
  7573 ;;                  1    wreg      void 
  7574 ;; Registers used:
  7575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7576 ;; Tracked objects:
  7577 ;;		On entry : 0/0
  7578 ;;		On exit  : 0/0
  7579 ;;		Unchanged: 0/0
  7580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7585 ;;Total ram usage:        0 bytes
  7586 ;; Hardware stack levels used:    1
  7587 ;; Hardware stack levels required when called:   18
  7588 ;; This function calls:
  7589 ;;		_printf
  7590 ;; This function is called by:
  7591 ;;		_ringBufferLUT
  7592 ;; This function uses a non-reentrant model
  7593 ;;
  7594                           
  7595                           	psect	text8
  7596  015F22                     __ptext8:
  7597                           	opt stack 0
  7598  015F22                     _terminal_printNewline:
  7599                           	opt stack 10
  7600                           
  7601                           ;ring_buffer_interface.c: 232: printf("\n\r");
  7602                           
  7603                           ;incstack = 0
  7604  015F22  0EF8               	movlw	low (STR_77+60)
  7605  015F24  0101               	movlb	1	; () banked
  7606  015F26  6F64               	movwf	printf@f& (0+255),b
  7607  015F28  0EFB               	movlw	high (STR_77+60)
  7608  015F2A  6F65               	movwf	(printf@f+1)& (0+255),b
  7609  015F2C  EC00  F080         	call	_printf	;wreg free
  7610  015F30  0012               	return		;funcret
  7611  015F32                     __end_of_terminal_printNewline:
  7612                           	opt stack 0
  7613                           tblptru	equ	0xFF8
  7614                           tblptrh	equ	0xFF7
  7615                           tblptrl	equ	0xFF6
  7616                           tablat	equ	0xFF5
  7617                           intcon	equ	0xFF2
  7618                           postinc0	equ	0xFEE
  7619                           wreg	equ	0xFE8
  7620                           indf1	equ	0xFE7
  7621                           postdec1	equ	0xFE5
  7622                           fsr1h	equ	0xFE2
  7623                           fsr1l	equ	0xFE1
  7624                           indf2	equ	0xFDF
  7625                           postinc2	equ	0xFDE
  7626                           fsr2h	equ	0xFDA
  7627                           fsr2l	equ	0xFD9
  7628                           status	equ	0xFD8
  7629                           
  7630 ;; *************** function _strstr *****************
  7631 ;; Defined at:
  7632 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
  7635 ;;		 -> NULL(0), line(64), 
  7636 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
  7637 ;;		 -> STR_73(24), 
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  2   38[BANK1 ] PTR unsigned char 
  7642 ;; Registers used:
  7643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7649 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7652 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7653 ;;Total ram usage:        4 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:   15
  7656 ;; This function calls:
  7657 ;;		_strchr
  7658 ;;		_strlen
  7659 ;;		_strncmp
  7660 ;; This function is called by:
  7661 ;;		_ringBufferLUT
  7662 ;; This function uses a non-reentrant model
  7663 ;;
  7664                           
  7665                           	psect	text9
  7666  014F6C                     __ptext9:
  7667                           	opt stack 0
  7668  014F6C                     _strstr:
  7669                           	opt stack 13
  7670                           
  7671                           ;incstack = 0
  7672  014F6C  D034               	goto	l1856
  7673  014F6E  C126  F11D         	movff	strstr@s1,strncmp@s1
  7674  014F72  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
  7675  014F76  C128  F11F         	movff	strstr@s2,strncmp@s2
  7676  014F7A  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
  7677  014F7E  C128  F117         	movff	strstr@s2,strlen@s
  7678  014F82  C129  F118         	movff	strstr@s2+1,strlen@s+1
  7679  014F86  ECE0  F0AB         	call	_strlen	;wreg free
  7680  014F8A  C117  F121         	movff	?_strlen,strncmp@len
  7681  014F8E  C118  F122         	movff	?_strlen+1,strncmp@len+1
  7682  014F92  EC26  F0A7         	call	_strncmp	;wreg free
  7683  014F96  0101               	movlb	1	; () banked
  7684  014F98  511D               	movf	?_strncmp& (0+255),w,b
  7685  014F9A  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
  7686  014F9C  A4D8               	btfss	status,2,c
  7687  014F9E  D005               	goto	l1858
  7688                           
  7689                           ; BSR set to: 1
  7690  014FA0  C126  F126         	movff	strstr@s1,?_strstr
  7691  014FA4  C127  F127         	movff	strstr@s1+1,?_strstr+1
  7692                           
  7693                           ; BSR set to: 1
  7694  014FA8  0012               	return	
  7695  014FAA                     l1858:
  7696                           
  7697                           ; BSR set to: 1
  7698                           
  7699                           ; BSR set to: 1
  7700  014FAA  0E01               	movlw	1
  7701  014FAC  2526               	addwf	strstr@s1& (0+255),w,b
  7702  014FAE  6F17               	movwf	strchr@ptr& (0+255),b
  7703  014FB0  0E00               	movlw	0
  7704  014FB2  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
  7705  014FB4  6F18               	movwf	(strchr@ptr+1)& (0+255),b
  7706  014FB6  C128  FFF6         	movff	strstr@s2,tblptrl
  7707  014FBA  C129  FFF7         	movff	strstr@s2+1,tblptrh
  7708  014FBE                     	if	0	;tblptru may be non-zero
  7709  014FBE                     	endif
  7710  014FBE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7711  014FBE  0E00               	movlw	low (__mediumconst shr (0+16))
  7712  014FC0  6EF8               	movwf	tblptru,c
  7713  014FC2                     	endif
  7714  014FC2  0008               	tblrd		*
  7715  014FC4  50F5               	movf	tablat,w,c
  7716  014FC6  6F19               	movwf	strchr@chr& (0+255),b
  7717  014FC8  6B1A               	clrf	(strchr@chr+1)& (0+255),b
  7718  014FCA  ECC2  F0AD         	call	_strchr	;wreg free
  7719  014FCE  C117  F126         	movff	?_strchr,strstr@s1
  7720  014FD2  C118  F127         	movff	?_strchr+1,strstr@s1+1
  7721  014FD6                     l1856:
  7722  014FD6  0101               	movlb	1	; () banked
  7723  014FD8  5126               	movf	strstr@s1& (0+255),w,b
  7724  014FDA  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
  7725  014FDC  B4D8               	btfsc	status,2,c
  7726  014FDE  D007               	goto	u10840
  7727                           
  7728                           ; BSR set to: 1
  7729  014FE0  C126  FFD9         	movff	strstr@s1,fsr2l
  7730  014FE4  C127  FFDA         	movff	strstr@s1+1,fsr2h
  7731  014FE8  50DF               	movf	indf2,w,c
  7732  014FEA  A4D8               	btfss	status,2,c
  7733  014FEC  D7C0               	goto	l1857
  7734  014FEE                     u10840:
  7735                           
  7736                           ; BSR set to: 1
  7737                           
  7738                           ; BSR set to: 1
  7739                           
  7740                           ; BSR set to: 1
  7741  014FEE  0E00               	movlw	0
  7742  014FF0  6F26               	movwf	?_strstr& (0+255),b
  7743  014FF2  0E00               	movlw	0
  7744  014FF4  6F27               	movwf	(?_strstr+1)& (0+255),b
  7745  014FF6  0012               	return	
  7746  014FF8                     __end_of_strstr:
  7747                           	opt stack 0
  7748                           tblptru	equ	0xFF8
  7749                           tblptrh	equ	0xFF7
  7750                           tblptrl	equ	0xFF6
  7751                           tablat	equ	0xFF5
  7752                           intcon	equ	0xFF2
  7753                           postinc0	equ	0xFEE
  7754                           wreg	equ	0xFE8
  7755                           indf1	equ	0xFE7
  7756                           postdec1	equ	0xFE5
  7757                           fsr1h	equ	0xFE2
  7758                           fsr1l	equ	0xFE1
  7759                           indf2	equ	0xFDF
  7760                           postinc2	equ	0xFDE
  7761                           fsr2h	equ	0xFDA
  7762                           fsr2l	equ	0xFD9
  7763                           status	equ	0xFD8
  7764                           
  7765 ;; *************** function _strncmp *****************
  7766 ;; Defined at:
  7767 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  7768 ;; Parameters:    Size  Location     Type
  7769 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
  7770 ;;		 -> NULL(0), line(64), 
  7771 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
  7772 ;;		 -> STR_73(24), 
  7773 ;;  len             2   33[BANK1 ] unsigned int 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;		None
  7776 ;; Return value:  Size  Location     Type
  7777 ;;                  2   29[BANK1 ] int 
  7778 ;; Registers used:
  7779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7780 ;; Tracked objects:
  7781 ;;		On entry : 0/0
  7782 ;;		On exit  : 0/0
  7783 ;;		Unchanged: 0/0
  7784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7785 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7787 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7788 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7789 ;;Total ram usage:        9 bytes
  7790 ;; Hardware stack levels used:    1
  7791 ;; Hardware stack levels required when called:   14
  7792 ;; This function calls:
  7793 ;;		Nothing
  7794 ;; This function is called by:
  7795 ;;		_strstr
  7796 ;; This function uses a non-reentrant model
  7797 ;;
  7798                           
  7799                           	psect	text10
  7800  014E4C                     __ptext10:
  7801                           	opt stack 0
  7802  014E4C                     _strncmp:
  7803                           	opt stack 13
  7804                           
  7805                           ; BSR set to: 1
  7806                           ;incstack = 0
  7807  014E4C  D039               	goto	l1915
  7808  014E4E                     l8981:
  7809  014E4E  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7810  014E52  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7811  014E56  50DF               	movf	indf2,w,c
  7812  014E58  B4D8               	btfsc	status,2,c
  7813  014E5A  D012               	goto	u10610
  7814  014E5C  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7815  014E60  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7816  014E64  50DF               	movf	indf2,w,c
  7817  014E66  0101               	movlb	1	; () banked
  7818  014E68  6F23               	movwf	??_strncmp& (0+255),b
  7819  014E6A  C11F  FFF6         	movff	strncmp@s2,tblptrl
  7820  014E6E  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  7821  014E72                     	if	0	;tblptru may be non-zero
  7822  014E72                     	endif
  7823  014E72                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7824  014E72  0E00               	movlw	low (__mediumconst shr (0+16))
  7825  014E74  6EF8               	movwf	tblptru,c
  7826  014E76                     	endif
  7827  014E76  0008               	tblrd		*
  7828  014E78  50F5               	movf	tablat,w,c
  7829  014E7A  1923               	xorwf	??_strncmp& (0+255),w,b
  7830  014E7C  B4D8               	btfsc	status,2,c
  7831  014E7E  D01C               	goto	l1917
  7832  014E80                     u10610:
  7833                           
  7834                           ; BSR set to: 1
  7835  014E80  C11F  FFF6         	movff	strncmp@s2,tblptrl
  7836  014E84  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  7837  014E88                     	if	0	;tblptru may be non-zero
  7838  014E88                     	endif
  7839  014E88                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7840  014E88  0E00               	movlw	low (__mediumconst shr (0+16))
  7841  014E8A  6EF8               	movwf	tblptru,c
  7842  014E8C                     	endif
  7843  014E8C  0008               	tblrd		*
  7844  014E8E  50F5               	movf	tablat,w,c
  7845  014E90  0101               	movlb	1	; () banked
  7846  014E92  6F23               	movwf	??_strncmp& (0+255),b
  7847  014E94  6B24               	clrf	(??_strncmp+1)& (0+255),b
  7848  014E96  1F23               	comf	??_strncmp& (0+255),f,b
  7849  014E98  1F24               	comf	(??_strncmp+1)& (0+255),f,b
  7850  014E9A  4B23               	infsnz	??_strncmp& (0+255),f,b
  7851  014E9C  2B24               	incf	(??_strncmp+1)& (0+255),f,b
  7852  014E9E  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7853  014EA2  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7854  014EA6  50DF               	movf	indf2,w,c
  7855  014EA8  6F25               	movwf	(??_strncmp+2)& (0+255),b
  7856  014EAA  5125               	movf	(??_strncmp+2)& (0+255),w,b
  7857  014EAC  2523               	addwf	??_strncmp& (0+255),w,b
  7858  014EAE  6F1D               	movwf	?_strncmp& (0+255),b
  7859  014EB0  0E00               	movlw	0
  7860  014EB2  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
  7861  014EB4  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  7862                           
  7863                           ; BSR set to: 1
  7864  014EB6  0012               	return	
  7865  014EB8                     l1917:
  7866                           
  7867                           ; BSR set to: 1
  7868                           
  7869                           ; BSR set to: 1
  7870  014EB8  4B1D               	infsnz	strncmp@s1& (0+255),f,b
  7871  014EBA  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
  7872  014EBC  4B1F               	infsnz	strncmp@s2& (0+255),f,b
  7873  014EBE  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
  7874  014EC0                     l1915:
  7875                           
  7876                           ; BSR set to: 1
  7877  014EC0  0101               	movlb	1	; () banked
  7878  014EC2  0721               	decf	strncmp@len& (0+255),f,b
  7879  014EC4  A0D8               	btfss	status,0,c
  7880  014EC6  0722               	decf	(strncmp@len+1)& (0+255),f,b
  7881  014EC8  2921               	incf	strncmp@len& (0+255),w,b
  7882  014ECA  E1C1               	bnz	l8981
  7883  014ECC  2922               	incf	(strncmp@len+1)& (0+255),w,b
  7884  014ECE  A4D8               	btfss	status,2,c
  7885  014ED0  D7BE               	goto	l1916
  7886                           
  7887                           ; BSR set to: 1
  7888                           
  7889                           ; BSR set to: 1
  7890  014ED2  0E00               	movlw	0
  7891  014ED4  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  7892  014ED6  0E00               	movlw	0
  7893  014ED8  6F1D               	movwf	?_strncmp& (0+255),b
  7894  014EDA  0012               	return	
  7895  014EDC                     __end_of_strncmp:
  7896                           	opt stack 0
  7897                           tblptru	equ	0xFF8
  7898                           tblptrh	equ	0xFF7
  7899                           tblptrl	equ	0xFF6
  7900                           tablat	equ	0xFF5
  7901                           intcon	equ	0xFF2
  7902                           postinc0	equ	0xFEE
  7903                           wreg	equ	0xFE8
  7904                           indf1	equ	0xFE7
  7905                           postdec1	equ	0xFE5
  7906                           fsr1h	equ	0xFE2
  7907                           fsr1l	equ	0xFE1
  7908                           indf2	equ	0xFDF
  7909                           postinc2	equ	0xFDE
  7910                           fsr2h	equ	0xFDA
  7911                           fsr2l	equ	0xFD9
  7912                           status	equ	0xFD8
  7913                           
  7914 ;; *************** function _strlen *****************
  7915 ;; Defined at:
  7916 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  7917 ;; Parameters:    Size  Location     Type
  7918 ;;  s               2   23[BANK1 ] PTR const unsigned char 
  7919 ;;		 -> STR_73(24), line(64), 
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
  7922 ;;		 -> STR_73(24), line(64), 
  7923 ;; Return value:  Size  Location     Type
  7924 ;;                  2   23[BANK1 ] unsigned int 
  7925 ;; Registers used:
  7926 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7927 ;; Tracked objects:
  7928 ;;		On entry : 0/0
  7929 ;;		On exit  : 0/0
  7930 ;;		Unchanged: 0/0
  7931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7932 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7933 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7934 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7935 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7936 ;;Total ram usage:        6 bytes
  7937 ;; Hardware stack levels used:    1
  7938 ;; Hardware stack levels required when called:   14
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_terminal_ringBufferPull
  7943 ;;		_strstr
  7944 ;; This function uses a non-reentrant model
  7945 ;;
  7946                           
  7947                           	psect	text11
  7948  0157C0                     __ptext11:
  7949                           	opt stack 0
  7950  0157C0                     _strlen:
  7951                           	opt stack 15
  7952                           
  7953                           ; BSR set to: 1
  7954                           ;incstack = 0
  7955  0157C0  C117  F11B         	movff	strlen@s,strlen@cp
  7956  0157C4  C118  F11C         	movff	strlen@s+1,strlen@cp+1
  7957  0157C8  D003               	goto	l1834
  7958  0157CA  0101               	movlb	1	; () banked
  7959  0157CC  4B1B               	infsnz	strlen@cp& (0+255),f,b
  7960  0157CE  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
  7961  0157D0                     l1834:
  7962                           
  7963                           ; BSR set to: 1
  7964  0157D0  C11B  FFF6         	movff	strlen@cp,tblptrl
  7965  0157D4  C11C  FFF7         	movff	strlen@cp+1,tblptrh
  7966  0157D8  0E00               	movlw	low (__mediumconst shr (0+16))
  7967  0157DA  6EF8               	movwf	tblptru,c
  7968  0157DC  0E0D               	movlw	(high __ramtop+-1)
  7969  0157DE  64F7               	cpfsgt	tblptrh,c
  7970  0157E0  D003               	bra	u10587
  7971  0157E2  0008               	tblrd		*
  7972  0157E4  50F5               	movf	tablat,w,c
  7973  0157E6  D005               	bra	u10580
  7974  0157E8                     u10587:
  7975  0157E8  CFF6 FFE1          	movff	tblptrl,fsr1l
  7976  0157EC  CFF7 FFE2          	movff	tblptrh,fsr1h
  7977  0157F0  50E7               	movf	indf1,w,c
  7978  0157F2                     u10580:
  7979  0157F2  0900               	iorlw	0
  7980  0157F4  A4D8               	btfss	status,2,c
  7981  0157F6  D7E9               	goto	l1835
  7982  0157F8  C117  F119         	movff	strlen@s,??_strlen
  7983  0157FC  C118  F11A         	movff	strlen@s+1,??_strlen+1
  7984  015800  0101               	movlb	1	; () banked
  7985  015802  1F19               	comf	??_strlen& (0+255),f,b
  7986  015804  1F1A               	comf	(??_strlen+1)& (0+255),f,b
  7987  015806  4B19               	infsnz	??_strlen& (0+255),f,b
  7988  015808  2B1A               	incf	(??_strlen+1)& (0+255),f,b
  7989  01580A  511B               	movf	strlen@cp& (0+255),w,b
  7990  01580C  2519               	addwf	??_strlen& (0+255),w,b
  7991  01580E  6F17               	movwf	?_strlen& (0+255),b
  7992  015810  511C               	movf	(strlen@cp+1)& (0+255),w,b
  7993  015812  211A               	addwfc	(??_strlen+1)& (0+255),w,b
  7994  015814  6F18               	movwf	(?_strlen+1)& (0+255),b
  7995  015816  0012               	return	
  7996  015818                     __end_of_strlen:
  7997                           	opt stack 0
  7998                           tblptru	equ	0xFF8
  7999                           tblptrh	equ	0xFF7
  8000                           tblptrl	equ	0xFF6
  8001                           tablat	equ	0xFF5
  8002                           intcon	equ	0xFF2
  8003                           postinc0	equ	0xFEE
  8004                           wreg	equ	0xFE8
  8005                           indf1	equ	0xFE7
  8006                           postdec1	equ	0xFE5
  8007                           fsr1h	equ	0xFE2
  8008                           fsr1l	equ	0xFE1
  8009                           indf2	equ	0xFDF
  8010                           postinc2	equ	0xFDE
  8011                           fsr2h	equ	0xFDA
  8012                           fsr2l	equ	0xFD9
  8013                           status	equ	0xFD8
  8014                           
  8015 ;; *************** function _strchr *****************
  8016 ;; Defined at:
  8017 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  8018 ;; Parameters:    Size  Location     Type
  8019 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
  8020 ;;		 -> NULL(0), line(64), 
  8021 ;;  chr             2   25[BANK1 ] int 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  2   23[BANK1 ] PTR unsigned char 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 0/0
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8033 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8035 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8036 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8037 ;;Total ram usage:        5 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:   14
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_strstr
  8044 ;; This function uses a non-reentrant model
  8045 ;;
  8046                           
  8047                           	psect	text12
  8048  015B84                     __ptext12:
  8049                           	opt stack 0
  8050  015B84                     _strchr:
  8051                           	opt stack 13
  8052                           
  8053                           ; BSR set to: 1
  8054                           ;incstack = 0
  8055  015B84  C117  FFD9         	movff	strchr@ptr,fsr2l
  8056  015B88  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8057  015B8C  0101               	movlb	1	; () banked
  8058  015B8E  5119               	movf	strchr@chr& (0+255),w,b
  8059  015B90  18DE               	xorwf	postinc2,w,c
  8060  015B92  A4D8               	btfss	status,2,c
  8061  015B94  D005               	goto	l1910
  8062                           
  8063                           ; BSR set to: 1
  8064  015B96  C117  F117         	movff	strchr@ptr,?_strchr
  8065  015B9A  C118  F118         	movff	strchr@ptr+1,?_strchr+1
  8066                           
  8067                           ; BSR set to: 1
  8068  015B9E  0012               	return	
  8069  015BA0                     l1910:
  8070                           
  8071                           ; BSR set to: 1
  8072                           
  8073                           ; BSR set to: 1
  8074  015BA0  C117  FFD9         	movff	strchr@ptr,fsr2l
  8075  015BA4  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8076  015BA8  4B17               	infsnz	strchr@ptr& (0+255),f,b
  8077  015BAA  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
  8078  015BAC  50DF               	movf	indf2,w,c
  8079  015BAE  A4D8               	btfss	status,2,c
  8080  015BB0  D7E9               	goto	_strchr
  8081                           
  8082                           ; BSR set to: 1
  8083                           
  8084                           ; BSR set to: 1
  8085  015BB2  0E00               	movlw	0
  8086  015BB4  6F17               	movwf	?_strchr& (0+255),b
  8087  015BB6  0E00               	movlw	0
  8088  015BB8  6F18               	movwf	(?_strchr+1)& (0+255),b
  8089  015BBA  0012               	return	
  8090  015BBC                     __end_of_strchr:
  8091                           	opt stack 0
  8092                           tblptru	equ	0xFF8
  8093                           tblptrh	equ	0xFF7
  8094                           tblptrl	equ	0xFF6
  8095                           tablat	equ	0xFF5
  8096                           intcon	equ	0xFF2
  8097                           postinc0	equ	0xFEE
  8098                           wreg	equ	0xFE8
  8099                           indf1	equ	0xFE7
  8100                           postdec1	equ	0xFE5
  8101                           fsr1h	equ	0xFE2
  8102                           fsr1l	equ	0xFE1
  8103                           indf2	equ	0xFDF
  8104                           postinc2	equ	0xFDE
  8105                           fsr2h	equ	0xFDA
  8106                           fsr2l	equ	0xFD9
  8107                           status	equ	0xFD8
  8108                           
  8109 ;; *************** function _strcmp *****************
  8110 ;; Defined at:
  8111 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  8112 ;; Parameters:    Size  Location     Type
  8113 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
  8114 ;;		 -> line(64), 
  8115 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
  8116 ;;		 -> STR_81(5), STR_79(9), STR_71(13), STR_69(12), 
  8117 ;;		 -> STR_67(16), STR_65(15), STR_63(21), STR_61(21), 
  8118 ;;		 -> STR_59(26), STR_57(13), STR_55(18), STR_53(15), 
  8119 ;;		 -> STR_51(16), STR_48(4), STR_47(6), STR_44(6), 
  8120 ;;		 -> STR_41(6), 
  8121 ;; Auto vars:     Size  Location     Type
  8122 ;;  r               1   28[BANK1 ] char 
  8123 ;; Return value:  Size  Location     Type
  8124 ;;                  2   23[BANK1 ] int 
  8125 ;; Registers used:
  8126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8127 ;; Tracked objects:
  8128 ;;		On entry : 0/0
  8129 ;;		On exit  : 0/0
  8130 ;;		Unchanged: 0/0
  8131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8132 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8133 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8134 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8135 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8136 ;;Total ram usage:        6 bytes
  8137 ;; Hardware stack levels used:    1
  8138 ;; Hardware stack levels required when called:   14
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_ringBufferLUT
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text13
  8147  0158C0                     __ptext13:
  8148                           	opt stack 0
  8149  0158C0                     _strcmp:
  8150                           	opt stack 14
  8151                           
  8152                           ; BSR set to: 1
  8153                           ;incstack = 0
  8154  0158C0  D005               	goto	l1826
  8155  0158C2  0101               	movlb	1	; () banked
  8156  0158C4  4B17               	infsnz	strcmp@s1& (0+255),f,b
  8157  0158C6  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
  8158  0158C8  4B19               	infsnz	strcmp@s2& (0+255),f,b
  8159  0158CA  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
  8160  0158CC                     l1826:
  8161                           
  8162                           ; BSR set to: 1
  8163  0158CC  C117  FFD9         	movff	strcmp@s1,fsr2l
  8164  0158D0  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8165  0158D4  50DF               	movf	indf2,w,c
  8166  0158D6  0101               	movlb	1	; () banked
  8167  0158D8  6F1B               	movwf	??_strcmp& (0+255),b
  8168  0158DA  C119  FFF6         	movff	strcmp@s2,tblptrl
  8169  0158DE  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
  8170  0158E2                     	if	0	;tblptru may be non-zero
  8171  0158E2                     	endif
  8172  0158E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8173  0158E2  0E00               	movlw	low (__mediumconst shr (0+16))
  8174  0158E4  6EF8               	movwf	tblptru,c
  8175  0158E6                     	endif
  8176  0158E6  0008               	tblrd		*
  8177  0158E8  50F5               	movf	tablat,w,c
  8178  0158EA  0800               	sublw	0
  8179  0158EC  251B               	addwf	??_strcmp& (0+255),w,b
  8180  0158EE  6F1C               	movwf	strcmp@r& (0+255),b
  8181  0158F0  511C               	movf	strcmp@r& (0+255),w,b
  8182  0158F2  A4D8               	btfss	status,2,c
  8183  0158F4  D007               	goto	u10810
  8184                           
  8185                           ; BSR set to: 1
  8186  0158F6  C117  FFD9         	movff	strcmp@s1,fsr2l
  8187  0158FA  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8188  0158FE  50DF               	movf	indf2,w,c
  8189  015900  A4D8               	btfss	status,2,c
  8190  015902  D7DF               	goto	l1827
  8191  015904                     u10810:
  8192                           
  8193                           ; BSR set to: 1
  8194                           
  8195                           ; BSR set to: 1
  8196                           
  8197                           ; BSR set to: 1
  8198  015904  511C               	movf	strcmp@r& (0+255),w,b
  8199  015906  6F17               	movwf	?_strcmp& (0+255),b
  8200  015908  6B18               	clrf	(?_strcmp+1)& (0+255),b
  8201  01590A  BF17               	btfsc	?_strcmp& (0+255),7,b
  8202  01590C  0718               	decf	(?_strcmp+1)& (0+255),f,b
  8203  01590E  0012               	return	
  8204  015910                     __end_of_strcmp:
  8205                           	opt stack 0
  8206                           tblptru	equ	0xFF8
  8207                           tblptrh	equ	0xFF7
  8208                           tblptrl	equ	0xFF6
  8209                           tablat	equ	0xFF5
  8210                           intcon	equ	0xFF2
  8211                           postinc0	equ	0xFEE
  8212                           wreg	equ	0xFE8
  8213                           indf1	equ	0xFE7
  8214                           postdec1	equ	0xFE5
  8215                           fsr1h	equ	0xFE2
  8216                           fsr1l	equ	0xFE1
  8217                           indf2	equ	0xFDF
  8218                           postinc2	equ	0xFDE
  8219                           fsr2h	equ	0xFDA
  8220                           fsr2l	equ	0xFD9
  8221                           status	equ	0xFD8
  8222                           
  8223 ;; *************** function _atoi *****************
  8224 ;; Defined at:
  8225 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  8226 ;; Parameters:    Size  Location     Type
  8227 ;;  s               2   43[BANK1 ] PTR const unsigned char 
  8228 ;;		 -> ringBufferLUT@arg_buff(3), 
  8229 ;; Auto vars:     Size  Location     Type
  8230 ;;  a               2   48[BANK1 ] int 
  8231 ;;  sign            1   47[BANK1 ] unsigned char 
  8232 ;; Return value:  Size  Location     Type
  8233 ;;                  2   43[BANK1 ] int 
  8234 ;; Registers used:
  8235 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8236 ;; Tracked objects:
  8237 ;;		On entry : 0/0
  8238 ;;		On exit  : 0/0
  8239 ;;		Unchanged: 0/0
  8240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8241 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8242 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8243 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8244 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8245 ;;Total ram usage:        7 bytes
  8246 ;; Hardware stack levels used:    1
  8247 ;; Hardware stack levels required when called:   15
  8248 ;; This function calls:
  8249 ;;		___wmul
  8250 ;;		_isdigit
  8251 ;; This function is called by:
  8252 ;;		_ringBufferLUT
  8253 ;; This function uses a non-reentrant model
  8254 ;;
  8255                           
  8256                           	psect	text14
  8257  01496C                     __ptext14:
  8258                           	opt stack 0
  8259  01496C                     _atoi:
  8260                           	opt stack 13
  8261                           
  8262                           ; BSR set to: 1
  8263                           ;incstack = 0
  8264  01496C  D003               	goto	l1339
  8265  01496E  0101               	movlb	1	; () banked
  8266  014970  4B2B               	infsnz	atoi@s& (0+255),f,b
  8267  014972  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8268  014974                     l1339:
  8269                           
  8270                           ; BSR set to: 1
  8271  014974  C12B  FFD9         	movff	atoi@s,fsr2l
  8272  014978  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8273  01497C  0E20               	movlw	32
  8274  01497E  18DE               	xorwf	postinc2,w,c
  8275  014980  B4D8               	btfsc	status,2,c
  8276  014982  D7F5               	goto	l1340
  8277  014984  C12B  FFD9         	movff	atoi@s,fsr2l
  8278  014988  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8279  01498C  0E09               	movlw	9
  8280  01498E  18DE               	xorwf	postinc2,w,c
  8281  014990  B4D8               	btfsc	status,2,c
  8282  014992  D7ED               	goto	l1340
  8283  014994  0E00               	movlw	0
  8284  014996  0101               	movlb	1	; () banked
  8285  014998  6F31               	movwf	(atoi@a+1)& (0+255),b
  8286  01499A  0E00               	movlw	0
  8287  01499C  6F30               	movwf	atoi@a& (0+255),b
  8288  01499E  0E00               	movlw	0
  8289  0149A0  6F2F               	movwf	atoi@sign& (0+255),b
  8290                           
  8291                           ; BSR set to: 1
  8292  0149A2  C12B  FFD9         	movff	atoi@s,fsr2l
  8293  0149A6  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8294  0149AA  0E2D               	movlw	45
  8295  0149AC  18DE               	xorwf	postinc2,w,c
  8296  0149AE  A4D8               	btfss	status,2,c
  8297  0149B0  D002               	goto	l1342
  8298                           
  8299                           ; BSR set to: 1
  8300  0149B2  2B2F               	incf	atoi@sign& (0+255),f,b
  8301  0149B4  D026               	goto	l9207
  8302  0149B6                     l1342:
  8303                           
  8304                           ; BSR set to: 1
  8305                           
  8306                           ; BSR set to: 1
  8307  0149B6  C12B  FFD9         	movff	atoi@s,fsr2l
  8308  0149BA  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8309  0149BE  0E2B               	movlw	43
  8310  0149C0  18DE               	xorwf	postinc2,w,c
  8311  0149C2  A4D8               	btfss	status,2,c
  8312  0149C4  D020               	goto	l1345
  8313  0149C6  D01D               	goto	l9207
  8314  0149C8                     
  8315                           ; BSR set to: 1
  8316  0149C8  C130  F125         	movff	atoi@a,___wmul@multiplier
  8317  0149CC  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
  8318  0149D0  0E00               	movlw	0
  8319  0149D2  0101               	movlb	1	; () banked
  8320  0149D4  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8321  0149D6  0E0A               	movlw	10
  8322  0149D8  6F27               	movwf	___wmul@multiplicand& (0+255),b
  8323  0149DA  EC8A  F0AE         	call	___wmul	;wreg free
  8324  0149DE  C12B  FFD9         	movff	atoi@s,fsr2l
  8325  0149E2  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8326  0149E6  50DF               	movf	indf2,w,c
  8327  0149E8  0101               	movlb	1	; () banked
  8328  0149EA  6F2D               	movwf	??_atoi& (0+255),b
  8329  0149EC  6B2E               	clrf	(??_atoi+1)& (0+255),b
  8330  0149EE  5125               	movf	?___wmul& (0+255),w,b
  8331  0149F0  272D               	addwf	??_atoi& (0+255),f,b
  8332  0149F2  5126               	movf	(?___wmul+1)& (0+255),w,b
  8333  0149F4  232E               	addwfc	(??_atoi+1)& (0+255),f,b
  8334  0149F6  0ED0               	movlw	208
  8335  0149F8  252D               	addwf	??_atoi& (0+255),w,b
  8336  0149FA  6F30               	movwf	atoi@a& (0+255),b
  8337  0149FC  0EFF               	movlw	255
  8338  0149FE  212E               	addwfc	(??_atoi+1)& (0+255),w,b
  8339  014A00  6F31               	movwf	(atoi@a+1)& (0+255),b
  8340  014A02                     l9207:
  8341                           
  8342                           ; BSR set to: 1
  8343  014A02  4B2B               	infsnz	atoi@s& (0+255),f,b
  8344  014A04  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8345  014A06                     l1345:
  8346                           
  8347                           ; BSR set to: 1
  8348                           
  8349                           ; BSR set to: 1
  8350  014A06  C12B  FFD9         	movff	atoi@s,fsr2l
  8351  014A0A  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8352  014A0E  50DF               	movf	indf2,w,c
  8353  014A10  EC23  F0AF         	call	_isdigit
  8354  014A14  B0D8               	btfsc	status,0,c
  8355  014A16  D7D8               	goto	l1346
  8356  014A18  0101               	movlb	1	; () banked
  8357  014A1A  512F               	movf	atoi@sign& (0+255),w,b
  8358  014A1C  B4D8               	btfsc	status,2,c
  8359  014A1E  D00D               	goto	l1348
  8360                           
  8361                           ; BSR set to: 1
  8362  014A20  C130  F12D         	movff	atoi@a,??_atoi
  8363  014A24  C131  F12E         	movff	atoi@a+1,??_atoi+1
  8364  014A28  1F2D               	comf	??_atoi& (0+255),f,b
  8365  014A2A  1F2E               	comf	(??_atoi+1)& (0+255),f,b
  8366  014A2C  4B2D               	infsnz	??_atoi& (0+255),f,b
  8367  014A2E  2B2E               	incf	(??_atoi+1)& (0+255),f,b
  8368  014A30  C12D  F12B         	movff	??_atoi,?_atoi
  8369  014A34  C12E  F12C         	movff	??_atoi+1,?_atoi+1
  8370  014A38  0012               	return	
  8371  014A3A                     l1348:
  8372                           
  8373                           ; BSR set to: 1
  8374  014A3A  C130  F12B         	movff	atoi@a,?_atoi
  8375  014A3E  C131  F12C         	movff	atoi@a+1,?_atoi+1
  8376                           
  8377                           ; BSR set to: 1
  8378  014A42  0012               	return		;funcret
  8379  014A44                     __end_of_atoi:
  8380                           	opt stack 0
  8381                           tblptru	equ	0xFF8
  8382                           tblptrh	equ	0xFF7
  8383                           tblptrl	equ	0xFF6
  8384                           tablat	equ	0xFF5
  8385                           intcon	equ	0xFF2
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           indf1	equ	0xFE7
  8389                           postdec1	equ	0xFE5
  8390                           fsr1h	equ	0xFE2
  8391                           fsr1l	equ	0xFE1
  8392                           indf2	equ	0xFDF
  8393                           postinc2	equ	0xFDE
  8394                           fsr2h	equ	0xFDA
  8395                           fsr2l	equ	0xFD9
  8396                           status	equ	0xFD8
  8397                           
  8398 ;; *************** function ___ftdiv *****************
  8399 ;; Defined at:
  8400 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8401 ;; Parameters:    Size  Location     Type
  8402 ;;  f1              3   55[BANK1 ] float 
  8403 ;;  f2              3   58[BANK1 ] float 
  8404 ;; Auto vars:     Size  Location     Type
  8405 ;;  f3              3   65[BANK1 ] float 
  8406 ;;  sign            1   69[BANK1 ] unsigned char 
  8407 ;;  exp             1   68[BANK1 ] unsigned char 
  8408 ;;  cntr            1   64[BANK1 ] unsigned char 
  8409 ;; Return value:  Size  Location     Type
  8410 ;;                  3   55[BANK1 ] float 
  8411 ;; Registers used:
  8412 ;;		wreg, status,2, status,0, cstack
  8413 ;; Tracked objects:
  8414 ;;		On entry : 0/0
  8415 ;;		On exit  : 0/0
  8416 ;;		Unchanged: 0/0
  8417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8418 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8419 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8420 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8421 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8422 ;;Total ram usage:       15 bytes
  8423 ;; Hardware stack levels used:    1
  8424 ;; Hardware stack levels required when called:   15
  8425 ;; This function calls:
  8426 ;;		___ftpack
  8427 ;; This function is called by:
  8428 ;;		_ringBufferLUT
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text15
  8433  0145E6                     __ptext15:
  8434                           	opt stack 0
  8435  0145E6                     ___ftdiv:
  8436                           	opt stack 13
  8437                           
  8438                           ; BSR set to: 1
  8439                           ;incstack = 0
  8440  0145E6  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
  8441  0145EA  0101               	movlb	1	; () banked
  8442  0145EC  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8443  0145EE  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8444  0145F0  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8445  0145F2  373D               	rlcf	??___ftdiv& (0+255),f,b
  8446  0145F4  E301               	bnc	u10911
  8447  0145F6  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8448  0145F8                     u10911:
  8449  0145F8  513D               	movf	??___ftdiv& (0+255),w,b
  8450  0145FA  6F44               	movwf	___ftdiv@exp& (0+255),b
  8451  0145FC  5144               	movf	___ftdiv@exp& (0+255),w,b
  8452  0145FE  A4D8               	btfss	status,2,c
  8453  014600  D007               	goto	l1498
  8454                           
  8455                           ; BSR set to: 1
  8456  014602  0E00               	movlw	0
  8457  014604  6F37               	movwf	?___ftdiv& (0+255),b
  8458  014606  0E00               	movlw	0
  8459  014608  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8460  01460A  0E00               	movlw	0
  8461  01460C  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8462                           
  8463                           ; BSR set to: 1
  8464  01460E  0012               	return	
  8465  014610                     l1498:
  8466                           
  8467                           ; BSR set to: 1
  8468                           
  8469                           ; BSR set to: 1
  8470  014610  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
  8471  014614  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8472  014616  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8473  014618  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8474  01461A  373D               	rlcf	??___ftdiv& (0+255),f,b
  8475  01461C  E301               	bnc	u10931
  8476  01461E  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8477  014620                     u10931:
  8478  014620  513D               	movf	??___ftdiv& (0+255),w,b
  8479  014622  6F45               	movwf	___ftdiv@sign& (0+255),b
  8480  014624  5145               	movf	___ftdiv@sign& (0+255),w,b
  8481  014626  A4D8               	btfss	status,2,c
  8482  014628  D007               	goto	l1500
  8483                           
  8484                           ; BSR set to: 1
  8485  01462A  0E00               	movlw	0
  8486  01462C  6F37               	movwf	?___ftdiv& (0+255),b
  8487  01462E  0E00               	movlw	0
  8488  014630  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8489  014632  0E00               	movlw	0
  8490  014634  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8491                           
  8492                           ; BSR set to: 1
  8493  014636  0012               	return	
  8494  014638                     l1500:
  8495                           
  8496                           ; BSR set to: 1
  8497                           
  8498                           ; BSR set to: 1
  8499  014638  0E00               	movlw	0
  8500  01463A  6F41               	movwf	___ftdiv@f3& (0+255),b
  8501  01463C  0E00               	movlw	0
  8502  01463E  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
  8503  014640  0E00               	movlw	0
  8504  014642  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
  8505                           
  8506                           ; BSR set to: 1
  8507  014644  5145               	movf	___ftdiv@sign& (0+255),w,b
  8508  014646  0F89               	addlw	137
  8509  014648  5F44               	subwf	___ftdiv@exp& (0+255),f,b
  8510                           
  8511                           ; BSR set to: 1
  8512  01464A  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
  8513                           
  8514                           ; BSR set to: 1
  8515  01464E  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8516  014650  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
  8517                           
  8518                           ; BSR set to: 1
  8519  014652  0E80               	movlw	128
  8520  014654  1745               	andwf	___ftdiv@sign& (0+255),f,b
  8521                           
  8522                           ; BSR set to: 1
  8523  014656  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8524                           
  8525                           ; BSR set to: 1
  8526  014658  0EFF               	movlw	255
  8527  01465A  1737               	andwf	___ftdiv@f1& (0+255),f,b
  8528  01465C  0EFF               	movlw	255
  8529  01465E  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8530  014660  0E00               	movlw	0
  8531  014662  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8532                           
  8533                           ; BSR set to: 1
  8534  014664  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8535                           
  8536                           ; BSR set to: 1
  8537  014666  0EFF               	movlw	255
  8538  014668  173A               	andwf	___ftdiv@f2& (0+255),f,b
  8539  01466A  0EFF               	movlw	255
  8540  01466C  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8541  01466E  0E00               	movlw	0
  8542  014670  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8543                           
  8544                           ; BSR set to: 1
  8545  014672  0E18               	movlw	24
  8546  014674  6F40               	movwf	___ftdiv@cntr& (0+255),b
  8547  014676                     
  8548                           ; BSR set to: 1
  8549                           
  8550                           ; BSR set to: 1
  8551  014676  90D8               	bcf	status,0,c
  8552  014678  3741               	rlcf	___ftdiv@f3& (0+255),f,b
  8553  01467A  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8554  01467C  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8555                           
  8556                           ; BSR set to: 1
  8557  01467E  513A               	movf	___ftdiv@f2& (0+255),w,b
  8558  014680  5D37               	subwf	___ftdiv@f1& (0+255),w,b
  8559  014682  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8560  014684  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8561  014686  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8562  014688  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8563  01468A  A0D8               	btfss	status,0,c
  8564  01468C  D007               	goto	l1502
  8565                           
  8566                           ; BSR set to: 1
  8567  01468E  513A               	movf	___ftdiv@f2& (0+255),w,b
  8568  014690  5F37               	subwf	___ftdiv@f1& (0+255),f,b
  8569  014692  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8570  014694  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8571  014696  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8572  014698  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8573                           
  8574                           ; BSR set to: 1
  8575  01469A  8141               	bsf	___ftdiv@f3& (0+255),0,b
  8576  01469C                     l1502:
  8577                           
  8578                           ; BSR set to: 1
  8579  01469C  90D8               	bcf	status,0,c
  8580  01469E  3737               	rlcf	___ftdiv@f1& (0+255),f,b
  8581  0146A0  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8582  0146A2  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8583                           
  8584                           ; BSR set to: 1
  8585  0146A4  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
  8586  0146A6  D7E7               	goto	l1501
  8587                           
  8588                           ; BSR set to: 1
  8589                           
  8590                           ; BSR set to: 1
  8591  0146A8  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
  8592  0146AC  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8593  0146B0  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8594  0146B4  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
  8595  0146B8  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
  8596  0146BC  EC88  F0A5         	call	___ftpack	;wreg free
  8597  0146C0  C117  F137         	movff	?___ftpack,?___ftdiv
  8598  0146C4  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
  8599  0146C8  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
  8600  0146CC  0012               	return	
  8601  0146CE                     __end_of___ftdiv:
  8602                           	opt stack 0
  8603                           tblptru	equ	0xFF8
  8604                           tblptrh	equ	0xFF7
  8605                           tblptrl	equ	0xFF6
  8606                           tablat	equ	0xFF5
  8607                           intcon	equ	0xFF2
  8608                           postinc0	equ	0xFEE
  8609                           wreg	equ	0xFE8
  8610                           indf1	equ	0xFE7
  8611                           postdec1	equ	0xFE5
  8612                           fsr1h	equ	0xFE2
  8613                           fsr1l	equ	0xFE1
  8614                           indf2	equ	0xFDF
  8615                           postinc2	equ	0xFDE
  8616                           fsr2h	equ	0xFDA
  8617                           fsr2l	equ	0xFD9
  8618                           status	equ	0xFD8
  8619                           
  8620 ;; *************** function ___awtoft *****************
  8621 ;; Defined at:
  8622 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8623 ;; Parameters:    Size  Location     Type
  8624 ;;  c               2   31[BANK1 ] int 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;  sign            1   34[BANK1 ] unsigned char 
  8627 ;; Return value:  Size  Location     Type
  8628 ;;                  3   31[BANK1 ] float 
  8629 ;; Registers used:
  8630 ;;		wreg, status,2, status,0, cstack
  8631 ;; Tracked objects:
  8632 ;;		On entry : 0/0
  8633 ;;		On exit  : 0/0
  8634 ;;		Unchanged: 0/0
  8635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8636 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8637 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8639 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8640 ;;Total ram usage:        4 bytes
  8641 ;; Hardware stack levels used:    1
  8642 ;; Hardware stack levels required when called:   15
  8643 ;; This function calls:
  8644 ;;		___ftpack
  8645 ;; This function is called by:
  8646 ;;		_ringBufferLUT
  8647 ;; This function uses a non-reentrant model
  8648 ;;
  8649                           
  8650                           	psect	text16
  8651  015B4A                     __ptext16:
  8652                           	opt stack 0
  8653  015B4A                     ___awtoft:
  8654                           	opt stack 13
  8655                           
  8656                           ;incstack = 0
  8657  015B4A  0E00               	movlw	0
  8658  015B4C  0101               	movlb	1	; () banked
  8659  015B4E  6F22               	movwf	___awtoft@sign& (0+255),b
  8660                           
  8661                           ; BSR set to: 1
  8662  015B50  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
  8663  015B52  D006               	goto	l1386
  8664                           
  8665                           ; BSR set to: 1
  8666  015B54  6D1F               	negf	___awtoft@c& (0+255),b
  8667  015B56  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
  8668  015B58  B0D8               	btfsc	status,0,c
  8669  015B5A  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
  8670                           
  8671                           ; BSR set to: 1
  8672  015B5C  0E01               	movlw	1
  8673  015B5E  6F22               	movwf	___awtoft@sign& (0+255),b
  8674  015B60                     l1386:
  8675                           
  8676                           ; BSR set to: 1
  8677                           
  8678                           ; BSR set to: 1
  8679  015B60  C11F  F117         	movff	___awtoft@c,___ftpack@arg
  8680  015B64  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
  8681  015B68  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
  8682  015B6A  0E8E               	movlw	142
  8683  015B6C  6F1A               	movwf	___ftpack@exp& (0+255),b
  8684  015B6E  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
  8685  015B72  EC88  F0A5         	call	___ftpack	;wreg free
  8686  015B76  C117  F11F         	movff	?___ftpack,?___awtoft
  8687  015B7A  C118  F120         	movff	?___ftpack+1,?___awtoft+1
  8688  015B7E  C119  F121         	movff	?___ftpack+2,?___awtoft+2
  8689  015B82  0012               	return	
  8690  015B84                     __end_of___awtoft:
  8691                           	opt stack 0
  8692                           tblptru	equ	0xFF8
  8693                           tblptrh	equ	0xFF7
  8694                           tblptrl	equ	0xFF6
  8695                           tablat	equ	0xFF5
  8696                           intcon	equ	0xFF2
  8697                           postinc0	equ	0xFEE
  8698                           wreg	equ	0xFE8
  8699                           indf1	equ	0xFE7
  8700                           postdec1	equ	0xFE5
  8701                           fsr1h	equ	0xFE2
  8702                           fsr1l	equ	0xFE1
  8703                           indf2	equ	0xFDF
  8704                           postinc2	equ	0xFDE
  8705                           fsr2h	equ	0xFDA
  8706                           fsr2l	equ	0xFD9
  8707                           status	equ	0xFD8
  8708                           
  8709 ;; *************** function _EUSART2_Read *****************
  8710 ;; Defined at:
  8711 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  8712 ;; Parameters:    Size  Location     Type
  8713 ;;		None
  8714 ;; Auto vars:     Size  Location     Type
  8715 ;;  readValue       1   23[BANK1 ] unsigned char 
  8716 ;; Return value:  Size  Location     Type
  8717 ;;                  1    wreg      unsigned char 
  8718 ;; Registers used:
  8719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8720 ;; Tracked objects:
  8721 ;;		On entry : 0/0
  8722 ;;		On exit  : 0/0
  8723 ;;		Unchanged: 0/0
  8724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8726 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8728 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8729 ;;Total ram usage:        1 bytes
  8730 ;; Hardware stack levels used:    1
  8731 ;; Hardware stack levels required when called:   14
  8732 ;; This function calls:
  8733 ;;		Nothing
  8734 ;; This function is called by:
  8735 ;;		_terminal_ringBufferPull
  8736 ;;		_getch
  8737 ;; This function uses a non-reentrant model
  8738 ;;
  8739                           
  8740                           	psect	text17
  8741  015A82                     __ptext17:
  8742                           	opt stack 0
  8743  015A82                     _EUSART2_Read:
  8744                           	opt stack 15
  8745                           
  8746                           ;eusart2.c: 132: uint8_t readValue = 0;
  8747                           
  8748                           ;incstack = 0
  8749  015A82  0E00               	movlw	0
  8750  015A84  0101               	movlb	1	; () banked
  8751  015A86  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  8752                           
  8753                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  8754  015A88  D001               	goto	l367
  8755  015A8A                     l368:
  8756                           
  8757                           ; BSR set to: 1
  8758  015A8A  0004               	clrwdt		;# 
  8759  015A8C                     l367:
  8760  015A8C  0101               	movlb	1	; () banked
  8761  015A8E  51DA               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8762  015A90  B4D8               	btfsc	status,2,c
  8763  015A92  D7FB               	goto	l368
  8764                           
  8765                           ; BSR set to: 1
  8766                           ;eusart2.c: 137: }
  8767                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  8768                           
  8769                           ; BSR set to: 1
  8770  015A94  51DB               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  8771  015A96  0D01               	mullw	1
  8772  015A98  0E80               	movlw	low _eusart2RxBuffer
  8773  015A9A  24F3               	addwf	prodl,w,c
  8774  015A9C  6ED9               	movwf	fsr2l,c
  8775  015A9E  0E02               	movlw	high _eusart2RxBuffer
  8776  015AA0  20F4               	addwfc	prodh,w,c
  8777  015AA2  6EDA               	movwf	fsr2h,c
  8778  015AA4  50DF               	movf	indf2,w,c
  8779  015AA6  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  8780                           
  8781                           ; BSR set to: 1
  8782  015AA8  2BDB               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  8783                           
  8784                           ; BSR set to: 1
  8785                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  8786  015AAA  0E3F               	movlw	63
  8787  015AAC  65DB               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  8788  015AAE  D002               	goto	l370
  8789                           
  8790                           ; BSR set to: 1
  8791                           ;eusart2.c: 141: {
  8792                           ;eusart2.c: 142: eusart2RxTail = 0;
  8793  015AB0  0E00               	movlw	0
  8794  015AB2  6FDB               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8795  015AB4                     l370:
  8796                           
  8797                           ; BSR set to: 1
  8798                           ;eusart2.c: 143: }
  8799                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  8800                           
  8801                           ; BSR set to: 1
  8802  015AB4  010E               	movlb	14	; () banked
  8803  015AB6  9F2C               	bcf	44,7,b	;volatile
  8804                           
  8805                           ; BSR set to: 14
  8806                           ;eusart2.c: 145: eusart2RxCount--;
  8807  015AB8  0101               	movlb	1	; () banked
  8808  015ABA  07DA               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  8809                           
  8810                           ; BSR set to: 1
  8811                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  8812  015ABC  010E               	movlb	14	; () banked
  8813  015ABE  8F2C               	bsf	44,7,b	;volatile
  8814                           
  8815                           ; BSR set to: 14
  8816                           ;eusart2.c: 148: return readValue;
  8817  015AC0  0101               	movlb	1	; () banked
  8818  015AC2  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
  8819  015AC4  0012               	return	
  8820  015AC6                     __end_of_EUSART2_Read:
  8821                           	opt stack 0
  8822                           tblptru	equ	0xFF8
  8823                           tblptrh	equ	0xFF7
  8824                           tblptrl	equ	0xFF6
  8825                           tablat	equ	0xFF5
  8826                           prodh	equ	0xFF4
  8827                           prodl	equ	0xFF3
  8828                           intcon	equ	0xFF2
  8829                           postinc0	equ	0xFEE
  8830                           wreg	equ	0xFE8
  8831                           indf1	equ	0xFE7
  8832                           postdec1	equ	0xFE5
  8833                           fsr1h	equ	0xFE2
  8834                           fsr1l	equ	0xFE1
  8835                           indf2	equ	0xFDF
  8836                           postinc2	equ	0xFDE
  8837                           fsr2h	equ	0xFDA
  8838                           fsr2l	equ	0xFD9
  8839                           status	equ	0xFD8
  8840                           
  8841 ;; *************** function _terminal_clearTerminal *****************
  8842 ;; Defined at:
  8843 ;;		line 80 in file "ring_buffer_interface.c"
  8844 ;; Parameters:    Size  Location     Type
  8845 ;;		None
  8846 ;; Auto vars:     Size  Location     Type
  8847 ;;		None
  8848 ;; Return value:  Size  Location     Type
  8849 ;;                  1    wreg      void 
  8850 ;; Registers used:
  8851 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8852 ;; Tracked objects:
  8853 ;;		On entry : 0/0
  8854 ;;		On exit  : 0/0
  8855 ;;		Unchanged: 0/0
  8856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8861 ;;Total ram usage:        0 bytes
  8862 ;; Hardware stack levels used:    1
  8863 ;; Hardware stack levels required when called:   18
  8864 ;; This function calls:
  8865 ;;		_printf
  8866 ;; This function is called by:
  8867 ;;		_main
  8868 ;; This function uses a non-reentrant model
  8869 ;;
  8870                           
  8871                           	psect	text18
  8872  015F32                     __ptext18:
  8873                           	opt stack 0
  8874  015F32                     _terminal_clearTerminal:
  8875                           	opt stack 12
  8876                           
  8877                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  8878                           
  8879                           ; BSR set to: 1
  8880                           ;incstack = 0
  8881  015F32  0EAD               	movlw	low STR_2
  8882  015F34  0101               	movlb	1	; () banked
  8883  015F36  6F64               	movwf	printf@f& (0+255),b
  8884  015F38  0EFF               	movlw	high STR_2
  8885  015F3A  6F65               	movwf	(printf@f+1)& (0+255),b
  8886  015F3C  EC00  F080         	call	_printf	;wreg free
  8887  015F40  0012               	return		;funcret
  8888  015F42                     __end_of_terminal_clearTerminal:
  8889                           	opt stack 0
  8890                           tblptru	equ	0xFF8
  8891                           tblptrh	equ	0xFF7
  8892                           tblptrl	equ	0xFF6
  8893                           tablat	equ	0xFF5
  8894                           prodh	equ	0xFF4
  8895                           prodl	equ	0xFF3
  8896                           intcon	equ	0xFF2
  8897                           postinc0	equ	0xFEE
  8898                           wreg	equ	0xFE8
  8899                           indf1	equ	0xFE7
  8900                           postdec1	equ	0xFE5
  8901                           fsr1h	equ	0xFE2
  8902                           fsr1l	equ	0xFE1
  8903                           indf2	equ	0xFDF
  8904                           postinc2	equ	0xFDE
  8905                           fsr2h	equ	0xFDA
  8906                           fsr2l	equ	0xFD9
  8907                           status	equ	0xFD8
  8908                           
  8909 ;; *************** function _printf *****************
  8910 ;; Defined at:
  8911 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  f               2  100[BANK1 ] PTR const unsigned char 
  8914 ;;		 -> STR_87(30), STR_86(23), STR_85(40), STR_84(30), 
  8915 ;;		 -> STR_83(33), STR_82(1152), STR_80(58), STR_78(73), 
  8916 ;;		 -> STR_77(63), STR_76(37), STR_75(102), STR_74(86), 
  8917 ;;		 -> STR_72(25), STR_70(24), STR_68(41), STR_66(40), 
  8918 ;;		 -> STR_64(34), STR_62(34), STR_60(32), STR_58(56), 
  8919 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
  8920 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
  8921 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
  8922 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
  8923 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
  8924 ;;		 -> STR_1(4), 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;  val             4  131[BANK1 ] unsigned long 
  8927 ;;  tmpval          4  127[BANK1 ] struct .
  8928 ;;  fval            3  135[BANK1 ] struct .
  8929 ;;  prec            2  138[BANK1 ] int 
  8930 ;;  exp             2  125[BANK1 ] int 
  8931 ;;  flag            2  123[BANK1 ] unsigned short 
  8932 ;;  ap              2  121[BANK1 ] PTR void [1]
  8933 ;;		 -> ?i2_printf(2), ?_printf(2), 
  8934 ;;  len             2  119[BANK1 ] unsigned int 
  8935 ;;  cp              2  117[BANK1 ] PTR const unsigned char 
  8936 ;;		 -> printf@c(1), 
  8937 ;;  width           2    0        int 
  8938 ;;  c               1  140[BANK1 ] char 
  8939 ;;  d               1    0        unsigned char 
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  2  100[BANK1 ] int 
  8942 ;; Registers used:
  8943 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8944 ;; Tracked objects:
  8945 ;;		On entry : 0/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8949 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8950 ;;      Locals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8951 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8952 ;;      Totals:         0       0      41       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8953 ;;Total ram usage:       41 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; Hardware stack levels required when called:   17
  8956 ;; This function calls:
  8957 ;;		___awdiv
  8958 ;;		___ftadd
  8959 ;;		___ftge
  8960 ;;		___ftmul
  8961 ;;		___ftneg
  8962 ;;		___ftsub
  8963 ;;		___fttol
  8964 ;;		___lldiv
  8965 ;;		___llmod
  8966 ;;		___lltoft
  8967 ;;		___wmul
  8968 ;;		__div_to_l_
  8969 ;;		__tdiv_to_l_
  8970 ;;		_fround
  8971 ;;		_isdigit
  8972 ;;		_putch
  8973 ;;		_scale
  8974 ;; This function is called by:
  8975 ;;		_terminal_clearTerminal
  8976 ;;		_terminal_setCursorHome
  8977 ;;		_terminal_textAttributes
  8978 ;;		_terminal_printNewline
  8979 ;;		_ringBufferLUT
  8980 ;;		_terminal_printResetMessage
  8981 ;;		_terminal_clearLine
  8982 ;;		_terminal_saveCursor
  8983 ;;		_terminal_returnCursor
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text19
  8988  010000                     __ptext19:
  8989                           	opt stack 0
  8990  010000                     _printf:
  8991                           	opt stack 11
  8992                           
  8993                           ;doprnt.c: 466: va_list ap;
  8994                           ;doprnt.c: 499: signed char c;
  8995                           ;doprnt.c: 501: int width;
  8996                           ;doprnt.c: 504: int prec;
  8997                           ;doprnt.c: 508: unsigned short flag;
  8998                           ;doprnt.c: 515: char d;
  8999                           ;doprnt.c: 516: double fval;
  9000                           ;doprnt.c: 517: int exp;
  9001                           ;doprnt.c: 523: union {
  9002                           ;doprnt.c: 524: unsigned long vd;
  9003                           ;doprnt.c: 525: double integ;
  9004                           ;doprnt.c: 526: } tmpval;
  9005                           ;doprnt.c: 528: unsigned long val;
  9006                           ;doprnt.c: 529: unsigned len;
  9007                           ;doprnt.c: 530: const char * cp;
  9008                           ;doprnt.c: 533: *ap = __va_start();
  9009                           
  9010                           ;incstack = 0
  9011  010000  0E66               	movlw	low (?_printf+2)
  9012  010002  0101               	movlb	1	; () banked
  9013  010004  6F79               	movwf	printf@ap& (0+255),b
  9014  010006  0E01               	movlw	high (?_printf+2)
  9015  010008  6F7A               	movwf	(printf@ap+1)& (0+255),b
  9016                           
  9017                           ;doprnt.c: 536: while(c = *f++) {
  9018  01000A  EF55  F084         	goto	u10370
  9019  01000E                     
  9020                           ; BSR set to: 1
  9021                           ;doprnt.c: 538: if(c != '%')
  9022                           
  9023                           ; BSR set to: 1
  9024  01000E  0E25               	movlw	37
  9025  010010  198C               	xorwf	printf@c& (0+255),w,b
  9026  010012  B4D8               	btfsc	status,2,c
  9027  010014  D005               	goto	l1068
  9028                           
  9029                           ; BSR set to: 1
  9030                           ;doprnt.c: 540: {
  9031                           ;doprnt.c: 541: (putch(c) );
  9032  010016  518C               	movf	printf@c& (0+255),w,b
  9033  010018  ECA1  F0AF         	call	_putch
  9034                           
  9035                           ;doprnt.c: 542: continue;
  9036  01001C  EF55  F084         	goto	u10370
  9037  010020                     l1068:
  9038                           
  9039                           ;doprnt.c: 543: }
  9040                           ;doprnt.c: 548: flag = 0;
  9041  010020  0E00               	movlw	0
  9042  010022  0101               	movlb	1	; () banked
  9043  010024  6F7C               	movwf	(printf@flag+1)& (0+255),b
  9044  010026  0E00               	movlw	0
  9045  010028  6F7B               	movwf	printf@flag& (0+255),b
  9046                           
  9047                           ; BSR set to: 1
  9048                           ;doprnt.c: 611: if(*f == '.') {
  9049  01002A  C164  FFF6         	movff	printf@f,tblptrl
  9050  01002E  C165  FFF7         	movff	printf@f+1,tblptrh
  9051  010032  0E00               	movlw	low (__mediumconst shr (0+16))
  9052  010034  6EF8               	movwf	tblptru,c
  9053  010036  0E0D               	movlw	(high __ramtop+-1)
  9054  010038  64F7               	cpfsgt	tblptrh,c
  9055  01003A  D003               	bra	u9957
  9056  01003C  0008               	tblrd		*
  9057  01003E  50F5               	movf	tablat,w,c
  9058  010040  D005               	bra	u9950
  9059  010042                     u9957:
  9060  010042  CFF6 FFE1          	movff	tblptrl,fsr1l
  9061  010046  CFF7 FFE2          	movff	tblptrh,fsr1h
  9062  01004A  50E7               	movf	indf1,w,c
  9063  01004C                     u9950:
  9064  01004C  0A2E               	xorlw	46
  9065  01004E  A4D8               	btfss	status,2,c
  9066  010050  D049               	goto	l1069
  9067                           
  9068                           ;doprnt.c: 612: flag |= 0x4000;
  9069  010052  0101               	movlb	1	; () banked
  9070  010054  8D7C               	bsf	(printf@flag+1)& (0+255),6,b
  9071                           
  9072                           ;doprnt.c: 613: f++;
  9073  010056  4B64               	infsnz	printf@f& (0+255),f,b
  9074  010058  2B65               	incf	(printf@f+1)& (0+255),f,b
  9075                           
  9076                           ; BSR set to: 1
  9077                           ;doprnt.c: 620: {
  9078                           ;doprnt.c: 621: prec = 0;
  9079  01005A  0E00               	movlw	0
  9080  01005C  6F8B               	movwf	(printf@prec+1)& (0+255),b
  9081  01005E  0E00               	movlw	0
  9082  010060  6F8A               	movwf	printf@prec& (0+255),b
  9083                           
  9084                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9085  010062  D02A               	goto	l1070
  9086  010064                     
  9087                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9088                           
  9089                           ; BSR set to: 1
  9090  010064  C18A  F125         	movff	printf@prec,___wmul@multiplier
  9091  010068  C18B  F126         	movff	printf@prec+1,___wmul@multiplier+1
  9092  01006C  0E00               	movlw	0
  9093  01006E  0101               	movlb	1	; () banked
  9094  010070  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9095  010072  0E0A               	movlw	10
  9096  010074  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9097  010076  EC8A  F0AE         	call	___wmul	;wreg free
  9098  01007A  C164  FFF6         	movff	printf@f,tblptrl
  9099  01007E  C165  FFF7         	movff	printf@f+1,tblptrh
  9100  010082  0E00               	movlw	low (__mediumconst shr (0+16))
  9101  010084  6EF8               	movwf	tblptru,c
  9102  010086  0E0D               	movlw	(high __ramtop+-1)
  9103  010088  64F7               	cpfsgt	tblptrh,c
  9104  01008A  D003               	bra	u9977
  9105  01008C  0008               	tblrd		*
  9106  01008E  50F5               	movf	tablat,w,c
  9107  010090  D005               	bra	u9970
  9108  010092                     u9977:
  9109  010092  CFF6 FFE1          	movff	tblptrl,fsr1l
  9110  010096  CFF7 FFE2          	movff	tblptrh,fsr1h
  9111  01009A  50E7               	movf	indf1,w,c
  9112  01009C                     u9970:
  9113  01009C  0101               	movlb	1	; () banked
  9114  01009E  6F6C               	movwf	??_printf& (0+255),b
  9115  0100A0  516C               	movf	??_printf& (0+255),w,b
  9116  0100A2  2725               	addwf	?___wmul& (0+255),f,b
  9117  0100A4  0E00               	movlw	0
  9118  0100A6  2326               	addwfc	(?___wmul+1)& (0+255),f,b
  9119  0100A8  0ED0               	movlw	208
  9120  0100AA  2525               	addwf	?___wmul& (0+255),w,b
  9121  0100AC  6F8A               	movwf	printf@prec& (0+255),b
  9122  0100AE  0EFF               	movlw	255
  9123  0100B0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
  9124  0100B2  6F8B               	movwf	(printf@prec+1)& (0+255),b
  9125                           
  9126                           ; BSR set to: 1
  9127  0100B4  4B64               	infsnz	printf@f& (0+255),f,b
  9128  0100B6  2B65               	incf	(printf@f+1)& (0+255),f,b
  9129  0100B8                     l1070:
  9130                           
  9131                           ; BSR set to: 1
  9132                           
  9133                           ; BSR set to: 1
  9134  0100B8  C164  FFF6         	movff	printf@f,tblptrl
  9135  0100BC  C165  FFF7         	movff	printf@f+1,tblptrh
  9136  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
  9137  0100C2  6EF8               	movwf	tblptru,c
  9138  0100C4  0E0D               	movlw	(high __ramtop+-1)
  9139  0100C6  64F7               	cpfsgt	tblptrh,c
  9140  0100C8  D003               	bra	u9987
  9141  0100CA  0008               	tblrd		*
  9142  0100CC  50F5               	movf	tablat,w,c
  9143  0100CE  D005               	bra	u9980
  9144  0100D0                     u9987:
  9145  0100D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9146  0100D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9147  0100D8  50E7               	movf	indf1,w,c
  9148  0100DA                     u9980:
  9149  0100DA  EC23  F0AF         	call	_isdigit
  9150  0100DE  A0D8               	btfss	status,0,c
  9151  0100E0  D035               	goto	l1074
  9152  0100E2  D7C0               	goto	l1071
  9153  0100E4                     l1069:
  9154                           
  9155                           ;doprnt.c: 626: prec = 0;
  9156  0100E4  0E00               	movlw	0
  9157  0100E6  0101               	movlb	1	; () banked
  9158  0100E8  6F8B               	movwf	(printf@prec+1)& (0+255),b
  9159  0100EA  0E00               	movlw	0
  9160  0100EC  6F8A               	movwf	printf@prec& (0+255),b
  9161                           
  9162                           ; BSR set to: 1
  9163                           ;doprnt.c: 628: flag |= 0x1000;
  9164  0100EE  897C               	bsf	(printf@flag+1)& (0+255),4,b
  9165                           
  9166                           ; BSR set to: 1
  9167                           ;doprnt.c: 630: }
  9168                           ;doprnt.c: 635: switch(c = *f++) {
  9169  0100F0  D02D               	goto	l1074
  9170  0100F2                     
  9171                           ; BSR set to: 1
  9172                           ;doprnt.c: 663: flag |= 0x400;
  9173                           
  9174                           ; BSR set to: 1
  9175  0100F2  857C               	bsf	(printf@flag+1)& (0+255),2,b
  9176                           
  9177                           ; BSR set to: 1
  9178                           ;doprnt.c: 698: case 'i':
  9179                           ;doprnt.c: 699: break;
  9180                           
  9181                           ; BSR set to: 1
  9182                           
  9183                           ;doprnt.c: 697: case 'd':
  9184                           
  9185                           ;doprnt.c: 664: break;
  9186  0100F4  D052               	goto	l1078
  9187  0100F6                     
  9188                           ; BSR set to: 1
  9189                           ;doprnt.c: 753: if(prec && prec < len)
  9190                           
  9191                           ; BSR set to: 1
  9192  0100F6  518A               	movf	printf@prec& (0+255),w,b
  9193  0100F8  118B               	iorwf	(printf@prec+1)& (0+255),w,b
  9194  0100FA  B4D8               	btfsc	status,2,c
  9195  0100FC  D015               	goto	l1083
  9196                           
  9197                           ; BSR set to: 1
  9198  0100FE  5177               	movf	printf@len& (0+255),w,b
  9199  010100  5D8A               	subwf	printf@prec& (0+255),w,b
  9200  010102  5178               	movf	(printf@len+1)& (0+255),w,b
  9201  010104  598B               	subwfb	(printf@prec+1)& (0+255),w,b
  9202  010106  B0D8               	btfsc	status,0,c
  9203  010108  D00F               	goto	l1083
  9204                           
  9205                           ; BSR set to: 1
  9206                           ;doprnt.c: 754: len = prec;
  9207  01010A  C18A  F177         	movff	printf@prec,printf@len
  9208  01010E  C18B  F178         	movff	printf@prec+1,printf@len+1
  9209                           
  9210                           ; BSR set to: 1
  9211                           ;doprnt.c: 767: while(len--)
  9212  010112  D00A               	goto	l1083
  9213  010114                     l8567:
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;doprnt.c: 768: (putch(*cp++) );
  9217  010114  C175  FFD9         	movff	printf@cp,fsr2l
  9218  010118  C176  FFDA         	movff	printf@cp+1,fsr2h
  9219  01011C  50DF               	movf	indf2,w,c
  9220  01011E  ECA1  F0AF         	call	_putch
  9221  010122  0101               	movlb	1	; () banked
  9222  010124  4B75               	infsnz	printf@cp& (0+255),f,b
  9223  010126  2B76               	incf	(printf@cp+1)& (0+255),f,b
  9224  010128                     l1083:
  9225                           
  9226                           ; BSR set to: 1
  9227                           
  9228                           ; BSR set to: 1
  9229  010128  0777               	decf	printf@len& (0+255),f,b
  9230  01012A  A0D8               	btfss	status,0,c
  9231  01012C  0778               	decf	(printf@len+1)& (0+255),f,b
  9232  01012E  2977               	incf	printf@len& (0+255),w,b
  9233  010130  E1F1               	bnz	l8567
  9234  010132  2978               	incf	(printf@len+1)& (0+255),w,b
  9235  010134  B4D8               	btfsc	status,2,c
  9236  010136  D3B9               	goto	u10370
  9237  010138  D7ED               	goto	l1084
  9238  01013A                     
  9239                           ; BSR set to: 1
  9240                           ;doprnt.c: 805: cp = (char *)&c;
  9241                           
  9242                           ; BSR set to: 1
  9243  01013A  0E8C               	movlw	low printf@c
  9244  01013C  6F75               	movwf	printf@cp& (0+255),b
  9245  01013E  0E01               	movlw	high printf@c
  9246  010140  6F76               	movwf	(printf@cp+1)& (0+255),b
  9247                           
  9248                           ; BSR set to: 1
  9249                           ;doprnt.c: 806: len = 1;
  9250  010142  0E00               	movlw	0
  9251  010144  6F78               	movwf	(printf@len+1)& (0+255),b
  9252  010146  0E01               	movlw	1
  9253  010148  6F77               	movwf	printf@len& (0+255),b
  9254                           
  9255                           ;doprnt.c: 807: goto dostring;
  9256  01014A  D7D5               	goto	l1081
  9257  01014C                     l1074:
  9258                           
  9259                           ; BSR set to: 1
  9260  01014C  0101               	movlb	1	; () banked
  9261  01014E  5164               	movf	printf@f& (0+255),w,b
  9262  010150  6F6C               	movwf	??_printf& (0+255),b
  9263  010152  5165               	movf	(printf@f+1)& (0+255),w,b
  9264  010154  6F6D               	movwf	(??_printf+1)& (0+255),b
  9265  010156  4B64               	infsnz	printf@f& (0+255),f,b
  9266  010158  2B65               	incf	(printf@f+1)& (0+255),f,b
  9267  01015A  C16C  FFF6         	movff	??_printf,tblptrl
  9268  01015E  C16D  FFF7         	movff	??_printf+1,tblptrh
  9269  010162  0E00               	movlw	low (__mediumconst shr (0+16))
  9270  010164  6EF8               	movwf	tblptru,c
  9271  010166  0E0D               	movlw	(high __ramtop+-1)
  9272  010168  64F7               	cpfsgt	tblptrh,c
  9273  01016A  D003               	bra	u10037
  9274  01016C  0008               	tblrd		*
  9275  01016E  50F5               	movf	tablat,w,c
  9276  010170  D005               	bra	u10030
  9277  010172                     u10037:
  9278  010172  CFF6 FFE1          	movff	tblptrl,fsr1l
  9279  010176  CFF7 FFE2          	movff	tblptrh,fsr1h
  9280  01017A  50E7               	movf	indf1,w,c
  9281  01017C                     u10030:
  9282  01017C  0101               	movlb	1	; () banked
  9283  01017E  6F8C               	movwf	printf@c& (0+255),b
  9284  010180  518C               	movf	printf@c& (0+255),w,b
  9285                           
  9286                           ; Switch size 1, requested type "space"
  9287                           ; Number of cases is 4, Range of values is 0 to 105
  9288                           ; switch strategies available:
  9289                           ; Name         Instructions Cycles
  9290                           ; simple_byte           13     7 (average)
  9291                           ;	Chosen strategy is simple_byte
  9292  010182  0A00               	xorlw	0	; case 0
  9293  010184  B4D8               	btfsc	status,2,c
  9294  010186  0012               	return	
  9295  010188  0A64               	xorlw	100	; case 100
  9296  01018A  B4D8               	btfsc	status,2,c
  9297  01018C  D006               	goto	l1078
  9298  01018E  0A02               	xorlw	2	; case 102
  9299  010190  B4D8               	btfsc	status,2,c
  9300  010192  D7AF               	goto	l1077
  9301  010194  0A0F               	xorlw	15	; case 105
  9302  010196  A4D8               	btfss	status,2,c
  9303  010198  D7D0               	goto	l1086
  9304  01019A                     l1078:
  9305                           
  9306                           ; BSR set to: 1
  9307                           ;doprnt.c: 825: if(flag & (0x700)) {
  9308                           
  9309                           ; BSR set to: 1
  9310  01019A  0E07               	movlw	7
  9311  01019C  157C               	andwf	(printf@flag+1)& (0+255),w,b
  9312  01019E  B4D8               	btfsc	status,2,c
  9313  0101A0  D2C1               	goto	l1087
  9314                           
  9315                           ; BSR set to: 1
  9316                           ;doprnt.c: 827: if(flag & 0x1000)
  9317  0101A2  A97C               	btfss	(printf@flag+1)& (0+255),4,b
  9318  0101A4  D004               	goto	l1088
  9319                           
  9320                           ; BSR set to: 1
  9321                           ;doprnt.c: 829: prec = 6;
  9322  0101A6  0E00               	movlw	0
  9323  0101A8  6F8B               	movwf	(printf@prec+1)& (0+255),b
  9324  0101AA  0E06               	movlw	6
  9325  0101AC  6F8A               	movwf	printf@prec& (0+255),b
  9326  0101AE                     l1088:
  9327                           
  9328                           ; BSR set to: 1
  9329                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  9330                           
  9331                           ; BSR set to: 1
  9332  0101AE  C179  FFD9         	movff	printf@ap,fsr2l
  9333  0101B2  C17A  FFDA         	movff	printf@ap+1,fsr2h
  9334  0101B6  CFDE F187          	movff	postinc2,printf@fval
  9335  0101BA  CFDE F188          	movff	postinc2,printf@fval+1
  9336  0101BE  CFDD F189          	movff	postdec2,printf@fval+2
  9337                           
  9338                           ; BSR set to: 1
  9339  0101C2  0E03               	movlw	3
  9340  0101C4  2779               	addwf	printf@ap& (0+255),f,b
  9341  0101C6  0E00               	movlw	0
  9342  0101C8  237A               	addwfc	(printf@ap+1)& (0+255),f,b
  9343                           
  9344                           ; BSR set to: 1
  9345                           ;doprnt.c: 831: if(fval < 0.0) {
  9346  0101CA  AF89               	btfss	(printf@fval+2)& (0+255),7,b
  9347  0101CC  D011               	goto	l1089
  9348                           
  9349                           ; BSR set to: 1
  9350                           ;doprnt.c: 832: fval = -fval;
  9351  0101CE  C187  F123         	movff	printf@fval,___ftneg@f1
  9352  0101D2  C188  F124         	movff	printf@fval+1,___ftneg@f1+1
  9353  0101D6  C189  F125         	movff	printf@fval+2,___ftneg@f1+2
  9354  0101DA  ECC6  F0AE         	call	___ftneg	;wreg free
  9355  0101DE  C123  F187         	movff	?___ftneg,printf@fval
  9356  0101E2  C124  F188         	movff	?___ftneg+1,printf@fval+1
  9357  0101E6  C125  F189         	movff	?___ftneg+2,printf@fval+2
  9358                           
  9359                           ;doprnt.c: 833: flag |= 0x03;
  9360  0101EA  0E03               	movlw	3
  9361  0101EC  0101               	movlb	1	; () banked
  9362  0101EE  137B               	iorwf	printf@flag& (0+255),f,b
  9363  0101F0                     l1089:
  9364                           
  9365                           ; BSR set to: 1
  9366                           ;doprnt.c: 834: }
  9367                           ;doprnt.c: 835: exp = 0;
  9368                           
  9369                           ; BSR set to: 1
  9370  0101F0  0E00               	movlw	0
  9371  0101F2  6F7E               	movwf	(printf@exp+1)& (0+255),b
  9372  0101F4  0E00               	movlw	0
  9373  0101F6  6F7D               	movwf	printf@exp& (0+255),b
  9374                           
  9375                           ; BSR set to: 1
  9376                           ;doprnt.c: 836: if( fval!=0) {
  9377  0101F8  5187               	movf	printf@fval& (0+255),w,b
  9378  0101FA  1188               	iorwf	(printf@fval+1)& (0+255),w,b
  9379  0101FC  1189               	iorwf	(printf@fval+2)& (0+255),w,b
  9380  0101FE  B4D8               	btfsc	status,2,c
  9381  010200  D088               	goto	l1094
  9382                           
  9383                           ; BSR set to: 1
  9384                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  9385  010202  0E82               	movlw	130
  9386  010204  6F6C               	movwf	??_printf& (0+255),b
  9387  010206  0EFF               	movlw	255
  9388  010208  6F6D               	movwf	(??_printf+1)& (0+255),b
  9389  01020A  C187  F16E         	movff	printf@fval,??_printf+2
  9390  01020E  C188  F16F         	movff	printf@fval+1,??_printf+3
  9391  010212  C189  F170         	movff	printf@fval+2,??_printf+4
  9392  010216  C18A  F171         	movff	printf@fval+3,??_printf+5
  9393  01021A  0E10               	movlw	16
  9394  01021C  D005               	goto	u10080
  9395  01021E                     u10085:
  9396  01021E  90D8               	bcf	status,0,c
  9397  010220  3371               	rrcf	(??_printf+5)& (0+255),f,b
  9398  010222  3370               	rrcf	(??_printf+4)& (0+255),f,b
  9399  010224  336F               	rrcf	(??_printf+3)& (0+255),f,b
  9400  010226  336E               	rrcf	(??_printf+2)& (0+255),f,b
  9401  010228                     u10080:
  9402  010228  2EE8               	decfsz	wreg,f,c
  9403  01022A  D7F9               	goto	u10085
  9404  01022C  516E               	movf	(??_printf+2)& (0+255),w,b
  9405  01022E  256C               	addwf	??_printf& (0+255),w,b
  9406  010230  6F7D               	movwf	printf@exp& (0+255),b
  9407  010232  0E00               	movlw	0
  9408  010234  216D               	addwfc	(??_printf+1)& (0+255),w,b
  9409  010236  6F7E               	movwf	(printf@exp+1)& (0+255),b
  9410                           
  9411                           ; BSR set to: 1
  9412                           ;doprnt.c: 838: exp--;
  9413  010238  077D               	decf	printf@exp& (0+255),f,b
  9414  01023A  A0D8               	btfss	status,0,c
  9415  01023C  077E               	decf	(printf@exp+1)& (0+255),f,b
  9416                           
  9417                           ; BSR set to: 1
  9418                           ;doprnt.c: 839: exp *= 3;
  9419  01023E  C17D  F125         	movff	printf@exp,___wmul@multiplier
  9420  010242  C17E  F126         	movff	printf@exp+1,___wmul@multiplier+1
  9421  010246  0E00               	movlw	0
  9422  010248  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9423  01024A  0E03               	movlw	3
  9424  01024C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9425  01024E  EC8A  F0AE         	call	___wmul	;wreg free
  9426  010252  C125  F17D         	movff	?___wmul,printf@exp
  9427  010256  C126  F17E         	movff	?___wmul+1,printf@exp+1
  9428                           
  9429                           ;doprnt.c: 840: exp /= 10;
  9430  01025A  C17D  F11D         	movff	printf@exp,___awdiv@dividend
  9431  01025E  C17E  F11E         	movff	printf@exp+1,___awdiv@dividend+1
  9432  010262  0E00               	movlw	0
  9433  010264  0101               	movlb	1	; () banked
  9434  010266  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
  9435  010268  0E0A               	movlw	10
  9436  01026A  6F1F               	movwf	___awdiv@divisor& (0+255),b
  9437  01026C  ECFC  F0A7         	call	___awdiv	;wreg free
  9438  010270  C11D  F17D         	movff	?___awdiv,printf@exp
  9439  010274  C11E  F17E         	movff	?___awdiv+1,printf@exp+1
  9440                           
  9441                           ;doprnt.c: 841: if(exp < 0)
  9442  010278  0101               	movlb	1	; () banked
  9443  01027A  AF7E               	btfss	(printf@exp+1)& (0+255),7,b
  9444  01027C  D003               	goto	l1091
  9445                           
  9446                           ; BSR set to: 1
  9447                           ;doprnt.c: 842: exp--;
  9448  01027E  077D               	decf	printf@exp& (0+255),f,b
  9449  010280  A0D8               	btfss	status,0,c
  9450  010282  077E               	decf	(printf@exp+1)& (0+255),f,b
  9451  010284                     l1091:
  9452                           
  9453                           ; BSR set to: 1
  9454                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9455                           
  9456                           ; BSR set to: 1
  9457  010284  517D               	movf	printf@exp& (0+255),w,b
  9458  010286  0800               	sublw	0
  9459  010288  ECD8  F08C         	call	_scale
  9460  01028C  C155  F17F         	movff	?_scale,printf@tmpval
  9461  010290  C156  F180         	movff	?_scale+1,printf@tmpval+1
  9462  010294  C157  F181         	movff	?_scale+2,printf@tmpval+2
  9463                           
  9464                           ;doprnt.c: 847: tmpval.integ *= fval;
  9465  010298  C17F  F146         	movff	printf@tmpval,___ftmul@f1
  9466  01029C  C180  F147         	movff	printf@tmpval+1,___ftmul@f1+1
  9467  0102A0  C181  F148         	movff	printf@tmpval+2,___ftmul@f1+2
  9468  0102A4  C187  F149         	movff	printf@fval,___ftmul@f2
  9469  0102A8  C188  F14A         	movff	printf@fval+1,___ftmul@f2+1
  9470  0102AC  C189  F14B         	movff	printf@fval+2,___ftmul@f2+2
  9471  0102B0  EC84  F0A1         	call	___ftmul	;wreg free
  9472  0102B4  C146  F17F         	movff	?___ftmul,printf@tmpval
  9473  0102B8  C147  F180         	movff	?___ftmul+1,printf@tmpval+1
  9474  0102BC  C148  F181         	movff	?___ftmul+2,printf@tmpval+2
  9475                           
  9476                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9477  0102C0  C17F  F117         	movff	printf@tmpval,___ftge@ff1
  9478  0102C4  C180  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9479  0102C8  C181  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9480  0102CC  0E00               	movlw	0
  9481  0102CE  0101               	movlb	1	; () banked
  9482  0102D0  6F1A               	movwf	___ftge@ff2& (0+255),b
  9483  0102D2  0E80               	movlw	128
  9484  0102D4  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9485  0102D6  0E3F               	movlw	63
  9486  0102D8  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9487  0102DA  ECDD  F0A6         	call	___ftge	;wreg free
  9488  0102DE  0101               	movlb	1	; () banked
  9489  0102E0  B0D8               	btfsc	status,0,c
  9490  0102E2  D004               	goto	l1092
  9491                           
  9492                           ; BSR set to: 1
  9493                           ;doprnt.c: 849: exp--;
  9494  0102E4  077D               	decf	printf@exp& (0+255),f,b
  9495  0102E6  A0D8               	btfss	status,0,c
  9496  0102E8  077E               	decf	(printf@exp+1)& (0+255),f,b
  9497  0102EA  D013               	goto	l1094
  9498  0102EC                     l1092:
  9499                           
  9500                           ; BSR set to: 1
  9501                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9502                           
  9503                           ; BSR set to: 1
  9504  0102EC  C17F  F117         	movff	printf@tmpval,___ftge@ff1
  9505  0102F0  C180  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9506  0102F4  C181  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9507  0102F8  0E00               	movlw	0
  9508  0102FA  6F1A               	movwf	___ftge@ff2& (0+255),b
  9509  0102FC  0E20               	movlw	32
  9510  0102FE  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9511  010300  0E41               	movlw	65
  9512  010302  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9513  010304  ECDD  F0A6         	call	___ftge	;wreg free
  9514  010308  0101               	movlb	1	; () banked
  9515  01030A  A0D8               	btfss	status,0,c
  9516  01030C  D002               	goto	l1094
  9517                           
  9518                           ; BSR set to: 1
  9519                           ;doprnt.c: 851: exp++;
  9520  01030E  4B7D               	infsnz	printf@exp& (0+255),f,b
  9521  010310  2B7E               	incf	(printf@exp+1)& (0+255),f,b
  9522  010312                     l1094:
  9523                           
  9524                           ; BSR set to: 1
  9525                           ;doprnt.c: 852: }
  9526                           ;doprnt.c: 1112: if(prec <= 12)
  9527                           
  9528                           ; BSR set to: 1
  9529                           
  9530                           ; BSR set to: 1
  9531                           
  9532                           ; BSR set to: 1
  9533  010312  BF8B               	btfsc	(printf@prec+1)& (0+255),7,b
  9534  010314  D006               	goto	u10120
  9535  010316  518B               	movf	(printf@prec+1)& (0+255),w,b
  9536  010318  E11B               	bnz	l8629
  9537  01031A  0E0D               	movlw	13
  9538  01031C  5D8A               	subwf	printf@prec& (0+255),w,b
  9539  01031E  B0D8               	btfsc	status,0,c
  9540  010320  D017               	goto	l1095
  9541  010322                     u10120:
  9542                           
  9543                           ; BSR set to: 1
  9544                           ;doprnt.c: 1113: fval += fround(prec);
  9545  010322  C187  F12B         	movff	printf@fval,___ftadd@f1
  9546  010326  C188  F12C         	movff	printf@fval+1,___ftadd@f1+1
  9547  01032A  C189  F12D         	movff	printf@fval+2,___ftadd@f1+2
  9548  01032E  518A               	movf	printf@prec& (0+255),w,b
  9549  010330  ECFB  F094         	call	_fround
  9550  010334  C155  F12E         	movff	?_fround,___ftadd@f2
  9551  010338  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
  9552  01033C  C157  F130         	movff	?_fround+2,___ftadd@f2+2
  9553  010340  ECA8  F09B         	call	___ftadd	;wreg free
  9554  010344  C12B  F187         	movff	?___ftadd,printf@fval
  9555  010348  C12C  F188         	movff	?___ftadd+1,printf@fval+1
  9556  01034C  C12D  F189         	movff	?___ftadd+2,printf@fval+2
  9557  010350                     l1095:
  9558  010350                     l8629:
  9559                           
  9560                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9561  010350  0101               	movlb	1	; () banked
  9562  010352  BF7E               	btfsc	(printf@exp+1)& (0+255),7,b
  9563  010354  D006               	goto	u10130
  9564  010356  517E               	movf	(printf@exp+1)& (0+255),w,b
  9565  010358  E11F               	bnz	l8637
  9566  01035A  0E0A               	movlw	10
  9567  01035C  5D7D               	subwf	printf@exp& (0+255),w,b
  9568  01035E  B0D8               	btfsc	status,0,c
  9569  010360  D01B               	goto	u10160
  9570  010362                     u10130:
  9571                           
  9572                           ; BSR set to: 1
  9573  010362  5187               	movf	printf@fval& (0+255),w,b
  9574  010364  1188               	iorwf	(printf@fval+1)& (0+255),w,b
  9575  010366  1189               	iorwf	(printf@fval+2)& (0+255),w,b
  9576  010368  B4D8               	btfsc	status,2,c
  9577  01036A  D054               	goto	l1096
  9578                           
  9579                           ; BSR set to: 1
  9580  01036C  C187  F155         	movff	printf@fval,___fttol@f1
  9581  010370  C188  F156         	movff	printf@fval+1,___fttol@f1+1
  9582  010374  C189  F157         	movff	printf@fval+2,___fttol@f1+2
  9583  010378  EC08  F0A1         	call	___fttol	;wreg free
  9584  01037C  0101               	movlb	1	; () banked
  9585  01037E  5155               	movf	?___fttol& (0+255),w,b
  9586  010380  1156               	iorwf	(?___fttol+1)& (0+255),w,b
  9587  010382  1157               	iorwf	(?___fttol+2)& (0+255),w,b
  9588  010384  1158               	iorwf	(?___fttol+3)& (0+255),w,b
  9589  010386  B4D8               	btfsc	status,2,c
  9590                           
  9591                           ; BSR set to: 1
  9592  010388  BF7E               	btfsc	(printf@exp+1)& (0+255),7,b
  9593  01038A  D044               	goto	l1096
  9594  01038C  517E               	movf	(printf@exp+1)& (0+255),w,b
  9595  01038E  E104               	bnz	l8637
  9596  010390  0E02               	movlw	2
  9597  010392  5D7D               	subwf	printf@exp& (0+255),w,b
  9598  010394  A0D8               	btfss	status,0,c
  9599  010396  D03E               	goto	l1096
  9600  010398                     u10160:
  9601  010398                     l8637:
  9602                           
  9603                           ; BSR set to: 1
  9604                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9605  010398  C17F  F117         	movff	printf@tmpval,___ftge@ff1
  9606  01039C  C180  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9607  0103A0  C181  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9608  0103A4  0E70               	movlw	112
  9609  0103A6  6F1A               	movwf	___ftge@ff2& (0+255),b
  9610  0103A8  0E89               	movlw	137
  9611  0103AA  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9612  0103AC  0E40               	movlw	64
  9613  0103AE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9614  0103B0  ECDD  F0A6         	call	___ftge	;wreg free
  9615  0103B4  0101               	movlb	1	; () banked
  9616  0103B6  B0D8               	btfsc	status,0,c
  9617  0103B8  D002               	goto	l1099
  9618                           
  9619                           ; BSR set to: 1
  9620                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9621  0103BA  0EF7               	movlw	247
  9622  0103BC  D001               	goto	L1
  9623  0103BE                     l1099:
  9624                           
  9625                           ; BSR set to: 1
  9626                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9627                           
  9628                           ; BSR set to: 1
  9629  0103BE  0EF8               	movlw	248
  9630  0103C0                     L1:
  9631  0103C0  277D               	addwf	printf@exp& (0+255),f,b
  9632  0103C2  0EFF               	movlw	255
  9633  0103C4  237E               	addwfc	(printf@exp+1)& (0+255),f,b
  9634                           
  9635                           ; BSR set to: 1
  9636                           ;doprnt.c: 1124: }
  9637                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  9638                           
  9639                           ; BSR set to: 1
  9640  0103C6  517D               	movf	printf@exp& (0+255),w,b
  9641  0103C8  ECD8  F08C         	call	_scale
  9642  0103CC  C155  F17F         	movff	?_scale,printf@tmpval
  9643  0103D0  C156  F180         	movff	?_scale+1,printf@tmpval+1
  9644  0103D4  C157  F181         	movff	?_scale+2,printf@tmpval+2
  9645                           
  9646                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9647  0103D8  C187  F117         	movff	printf@fval,__tdiv_to_l_@f1
  9648  0103DC  C188  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  9649  0103E0  C189  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  9650  0103E4  C17F  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
  9651  0103E8  C180  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  9652  0103EC  C181  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  9653  0103F0  EC1E  F09E         	call	__tdiv_to_l_	;wreg free
  9654  0103F4  C117  F183         	movff	?__tdiv_to_l_,printf@val
  9655  0103F8  C118  F184         	movff	?__tdiv_to_l_+1,printf@val+1
  9656  0103FC  C119  F185         	movff	?__tdiv_to_l_+2,printf@val+2
  9657  010400  C11A  F186         	movff	?__tdiv_to_l_+3,printf@val+3
  9658                           
  9659                           ;doprnt.c: 1129: fval = 0.0;
  9660  010404  0E00               	movlw	0
  9661  010406  0101               	movlb	1	; () banked
  9662  010408  6F87               	movwf	printf@fval& (0+255),b
  9663  01040A  0E00               	movlw	0
  9664  01040C  6F88               	movwf	(printf@fval+1)& (0+255),b
  9665  01040E  0E00               	movlw	0
  9666  010410  6F89               	movwf	(printf@fval+2)& (0+255),b
  9667                           
  9668                           ;doprnt.c: 1130: } else {
  9669  010412  D033               	goto	l1105
  9670  010414                     l1096:
  9671                           
  9672                           ; BSR set to: 1
  9673                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9674                           
  9675                           ; BSR set to: 1
  9676  010414  C187  F155         	movff	printf@fval,___fttol@f1
  9677  010418  C188  F156         	movff	printf@fval+1,___fttol@f1+1
  9678  01041C  C189  F157         	movff	printf@fval+2,___fttol@f1+2
  9679  010420  EC08  F0A1         	call	___fttol	;wreg free
  9680  010424  C155  F183         	movff	?___fttol,printf@val
  9681  010428  C156  F184         	movff	?___fttol+1,printf@val+1
  9682  01042C  C157  F185         	movff	?___fttol+2,printf@val+2
  9683  010430  C158  F186         	movff	?___fttol+3,printf@val+3
  9684                           
  9685                           ;doprnt.c: 1132: fval -= (double)val;
  9686  010434  C187  F137         	movff	printf@fval,___ftsub@f1
  9687  010438  C188  F138         	movff	printf@fval+1,___ftsub@f1+1
  9688  01043C  C189  F139         	movff	printf@fval+2,___ftsub@f1+2
  9689  010440  C183  F11F         	movff	printf@val,___lltoft@c
  9690  010444  C184  F120         	movff	printf@val+1,___lltoft@c+1
  9691  010448  C185  F121         	movff	printf@val+2,___lltoft@c+2
  9692  01044C  C186  F122         	movff	printf@val+3,___lltoft@c+3
  9693  010450  EC56  F0AB         	call	___lltoft	;wreg free
  9694  010454  C11F  F13A         	movff	?___lltoft,___ftsub@f2
  9695  010458  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
  9696  01045C  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
  9697  010460  EC63  F0AD         	call	___ftsub	;wreg free
  9698  010464  C137  F187         	movff	?___ftsub,printf@fval
  9699  010468  C138  F188         	movff	?___ftsub+1,printf@fval+1
  9700  01046C  C139  F189         	movff	?___ftsub+2,printf@fval+2
  9701                           
  9702                           ;doprnt.c: 1133: exp = 0;
  9703  010470  0E00               	movlw	0
  9704  010472  0101               	movlb	1	; () banked
  9705  010474  6F7E               	movwf	(printf@exp+1)& (0+255),b
  9706  010476  0E00               	movlw	0
  9707  010478  6F7D               	movwf	printf@exp& (0+255),b
  9708  01047A                     l1105:
  9709                           
  9710                           ; BSR set to: 1
  9711                           ;doprnt.c: 1134: }
  9712                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9713                           
  9714                           ; BSR set to: 1
  9715  01047A  0E01               	movlw	1
  9716  01047C  6F8C               	movwf	printf@c& (0+255),b
  9717  01047E                     l8657:
  9718                           
  9719                           ; BSR set to: 1
  9720  01047E  0E0A               	movlw	10
  9721  010480  198C               	xorwf	printf@c& (0+255),w,b
  9722  010482  B4D8               	btfsc	status,2,c
  9723  010484  D01B               	goto	u10200
  9724                           
  9725                           ; BSR set to: 1
  9726                           ;doprnt.c: 1137: if(val < dpowers[c])
  9727                           
  9728                           ; BSR set to: 1
  9729                           
  9730                           ; BSR set to: 1
  9731  010486  518C               	movf	printf@c& (0+255),w,b
  9732  010488  0D04               	mullw	4
  9733  01048A  0E11               	movlw	low _dpowers
  9734  01048C  24F3               	addwf	prodl,w,c
  9735  01048E  6EF6               	movwf	tblptrl,c
  9736  010490  0EF4               	movlw	high _dpowers
  9737  010492  20F4               	addwfc	prodh,w,c
  9738  010494  6EF7               	movwf	tblptrh,c
  9739  010496                     	if	1	;There are 3 active tblptr bytes
  9740  010496  6AF8               	clrf	tblptru,c
  9741  010498  0E00               	movlw	low (__mediumconst shr (0+16))
  9742  01049A  22F8               	addwfc	tblptru,f,c
  9743  01049C                     	endif
  9744  01049C  0009               	tblrd		*+
  9745  01049E  50F5               	movf	tablat,w,c
  9746  0104A0  5D83               	subwf	printf@val& (0+255),w,b
  9747  0104A2  0009               	tblrd		*+
  9748  0104A4  50F5               	movf	tablat,w,c
  9749  0104A6  5984               	subwfb	(printf@val+1)& (0+255),w,b
  9750  0104A8  0009               	tblrd		*+
  9751  0104AA  50F5               	movf	tablat,w,c
  9752  0104AC  5985               	subwfb	(printf@val+2)& (0+255),w,b
  9753  0104AE  0009               	tblrd		*+
  9754  0104B0  50F5               	movf	tablat,w,c
  9755  0104B2  5986               	subwfb	(printf@val+3)& (0+255),w,b
  9756  0104B4  A0D8               	btfss	status,0,c
  9757  0104B6  D002               	goto	u10200
  9758                           
  9759                           ; BSR set to: 1
  9760                           
  9761                           ; BSR set to: 1
  9762                           
  9763                           ; BSR set to: 1
  9764                           ;doprnt.c: 1138: break;
  9765  0104B8  2B8C               	incf	printf@c& (0+255),f,b
  9766  0104BA  D7E1               	goto	l8657
  9767  0104BC                     u10200:
  9768                           
  9769                           ; BSR set to: 1
  9770                           ;doprnt.c: 1175: {
  9771                           ;doprnt.c: 1188: if(flag & 0x03)
  9772                           
  9773                           ; BSR set to: 1
  9774  0104BC  0E03               	movlw	3
  9775  0104BE  157B               	andwf	printf@flag& (0+255),w,b
  9776  0104C0  6F6C               	movwf	??_printf& (0+255),b
  9777  0104C2  0E00               	movlw	0
  9778  0104C4  157C               	andwf	(printf@flag+1)& (0+255),w,b
  9779  0104C6  6F6D               	movwf	(??_printf+1)& (0+255),b
  9780  0104C8  516C               	movf	??_printf& (0+255),w,b
  9781  0104CA  116D               	iorwf	(??_printf+1)& (0+255),w,b
  9782  0104CC  B4D8               	btfsc	status,2,c
  9783  0104CE  D04E               	goto	l1110
  9784                           
  9785                           ; BSR set to: 1
  9786                           ;doprnt.c: 1190: (putch('-') );
  9787  0104D0  0E2D               	movlw	45
  9788  0104D2  ECA1  F0AF         	call	_putch
  9789                           
  9790                           ;doprnt.c: 1195: }
  9791                           ;doprnt.c: 1196: while(c--) {
  9792  0104D6  D04A               	goto	l1110
  9793  0104D8                     
  9794                           ;doprnt.c: 1200: {
  9795                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9796  0104D8  C183  F117         	movff	printf@val,___lldiv@dividend
  9797  0104DC  C184  F118         	movff	printf@val+1,___lldiv@dividend+1
  9798  0104E0  C185  F119         	movff	printf@val+2,___lldiv@dividend+2
  9799  0104E4  C186  F11A         	movff	printf@val+3,___lldiv@dividend+3
  9800  0104E8  0101               	movlb	1	; () banked
  9801  0104EA  518C               	movf	printf@c& (0+255),w,b
  9802  0104EC  0D04               	mullw	4
  9803  0104EE  0E11               	movlw	low _dpowers
  9804  0104F0  24F3               	addwf	prodl,w,c
  9805  0104F2  6EF6               	movwf	tblptrl,c
  9806  0104F4  0EF4               	movlw	high _dpowers
  9807  0104F6  20F4               	addwfc	prodh,w,c
  9808  0104F8  6EF7               	movwf	tblptrh,c
  9809  0104FA                     	if	1	;There are 3 active tblptr bytes
  9810  0104FA  6AF8               	clrf	tblptru,c
  9811  0104FC  0E00               	movlw	low (__mediumconst shr (0+16))
  9812  0104FE  22F8               	addwfc	tblptru,f,c
  9813  010500                     	endif
  9814  010500  0009               	tblrd		*+
  9815  010502  CFF5 F11B          	movff	tablat,___lldiv@divisor
  9816  010506  0009               	tblrd		*+
  9817  010508  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
  9818  01050C  0009               	tblrd		*+
  9819  01050E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
  9820  010512  000A               	tblrd		*-
  9821  010514  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
  9822  010518  EC3F  F0A8         	call	___lldiv	;wreg free
  9823  01051C  C117  F17F         	movff	?___lldiv,printf@tmpval
  9824  010520  C118  F180         	movff	?___lldiv+1,printf@tmpval+1
  9825  010524  C119  F181         	movff	?___lldiv+2,printf@tmpval+2
  9826  010528  C11A  F182         	movff	?___lldiv+3,printf@tmpval+3
  9827                           
  9828                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9829  01052C  C17F  F124         	movff	printf@tmpval,___llmod@dividend
  9830  010530  C180  F125         	movff	printf@tmpval+1,___llmod@dividend+1
  9831  010534  C181  F126         	movff	printf@tmpval+2,___llmod@dividend+2
  9832  010538  C182  F127         	movff	printf@tmpval+3,___llmod@dividend+3
  9833  01053C  0E0A               	movlw	10
  9834  01053E  0101               	movlb	1	; () banked
  9835  010540  6F28               	movwf	___llmod@divisor& (0+255),b
  9836  010542  0E00               	movlw	0
  9837  010544  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
  9838  010546  0E00               	movlw	0
  9839  010548  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
  9840  01054A  0E00               	movlw	0
  9841  01054C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
  9842  01054E  EC5A  F0AA         	call	___llmod	;wreg free
  9843  010552  C124  F17F         	movff	?___llmod,printf@tmpval
  9844  010556  C125  F180         	movff	?___llmod+1,printf@tmpval+1
  9845  01055A  C126  F181         	movff	?___llmod+2,printf@tmpval+2
  9846  01055E  C127  F182         	movff	?___llmod+3,printf@tmpval+3
  9847                           
  9848                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  9849  010562  0101               	movlb	1	; () banked
  9850  010564  517F               	movf	printf@tmpval& (0+255),w,b
  9851  010566  0F30               	addlw	48
  9852  010568  ECA1  F0AF         	call	_putch
  9853  01056C                     l1110:
  9854  01056C  0101               	movlb	1	; () banked
  9855  01056E  078C               	decf	printf@c& (0+255),f,b
  9856  010570  298C               	incf	printf@c& (0+255),w,b
  9857  010572  B4D8               	btfsc	status,2,c
  9858  010574  D008               	goto	l1113
  9859  010576  D7B0               	goto	l1111
  9860  010578                     l8681:
  9861                           
  9862                           ; BSR set to: 1
  9863                           ;doprnt.c: 1208: (putch('0') );
  9864  010578  0E30               	movlw	48
  9865  01057A  ECA1  F0AF         	call	_putch
  9866                           
  9867                           ;doprnt.c: 1209: exp--;
  9868  01057E  0101               	movlb	1	; () banked
  9869  010580  077D               	decf	printf@exp& (0+255),f,b
  9870  010582  A0D8               	btfss	status,0,c
  9871  010584  077E               	decf	(printf@exp+1)& (0+255),f,b
  9872  010586                     l1113:
  9873                           
  9874                           ; BSR set to: 1
  9875                           
  9876                           ; BSR set to: 1
  9877  010586  BF7E               	btfsc	(printf@exp+1)& (0+255),7,b
  9878  010588  D005               	goto	u10230
  9879  01058A  517E               	movf	(printf@exp+1)& (0+255),w,b
  9880  01058C  E1F5               	bnz	l8681
  9881  01058E  057D               	decf	printf@exp& (0+255),w,b
  9882  010590  B0D8               	btfsc	status,0,c
  9883  010592  D7F2               	goto	l1114
  9884  010594                     u10230:
  9885                           
  9886                           ; BSR set to: 1
  9887                           ;doprnt.c: 1210: }
  9888                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9889                           
  9890                           ; BSR set to: 1
  9891  010594  BF8B               	btfsc	(printf@prec+1)& (0+255),7,b
  9892  010596  D009               	goto	l1116
  9893  010598  518B               	movf	(printf@prec+1)& (0+255),w,b
  9894  01059A  E104               	bnz	u10240
  9895  01059C  0E09               	movlw	9
  9896  01059E  5D8A               	subwf	printf@prec& (0+255),w,b
  9897  0105A0  A0D8               	btfss	status,0,c
  9898  0105A2  D003               	goto	l1116
  9899  0105A4                     u10240:
  9900                           
  9901                           ; BSR set to: 1
  9902                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9903  0105A4  0E08               	movlw	8
  9904  0105A6  6F8C               	movwf	printf@c& (0+255),b
  9905  0105A8  D002               	goto	l1117
  9906  0105AA                     l1116:
  9907                           
  9908                           ; BSR set to: 1
  9909                           ;doprnt.c: 1213: else
  9910                           ;doprnt.c: 1214: c = prec;
  9911  0105AA  C18A  F18C         	movff	printf@prec,printf@c
  9912  0105AE                     l1117:
  9913                           
  9914                           ; BSR set to: 1
  9915                           ;doprnt.c: 1215: prec -= c;
  9916                           
  9917                           ; BSR set to: 1
  9918  0105AE  518C               	movf	printf@c& (0+255),w,b
  9919  0105B0  5F8A               	subwf	printf@prec& (0+255),f,b
  9920  0105B2  0E00               	movlw	0
  9921  0105B4  BF8C               	btfsc	printf@c& (0+255),7,b
  9922  0105B6  0EFF               	movlw	255
  9923  0105B8  5B8B               	subwfb	(printf@prec+1)& (0+255),f,b
  9924                           
  9925                           ; BSR set to: 1
  9926                           ;doprnt.c: 1219: if(c)
  9927  0105BA  518C               	movf	printf@c& (0+255),w,b
  9928  0105BC  B4D8               	btfsc	status,2,c
  9929  0105BE  D003               	goto	l1118
  9930                           
  9931                           ; BSR set to: 1
  9932                           ;doprnt.c: 1221: (putch('.') );
  9933  0105C0  0E2E               	movlw	46
  9934  0105C2  ECA1  F0AF         	call	_putch
  9935  0105C6                     l1118:
  9936                           
  9937                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9938  0105C6  0101               	movlb	1	; () banked
  9939  0105C8  518C               	movf	printf@c& (0+255),w,b
  9940  0105CA  ECD8  F08C         	call	_scale
  9941  0105CE  C155  F172         	movff	?_scale,_printf$3131
  9942  0105D2  C156  F173         	movff	?_scale+1,_printf$3131+1
  9943  0105D6  C157  F174         	movff	?_scale+2,_printf$3131+2
  9944                           
  9945                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  9946  0105DA  C187  F149         	movff	printf@fval,___ftmul@f2
  9947  0105DE  C188  F14A         	movff	printf@fval+1,___ftmul@f2+1
  9948  0105E2  C189  F14B         	movff	printf@fval+2,___ftmul@f2+2
  9949  0105E6  C172  F146         	movff	_printf$3131,___ftmul@f1
  9950  0105EA  C173  F147         	movff	_printf$3131+1,___ftmul@f1+1
  9951  0105EE  C174  F148         	movff	_printf$3131+2,___ftmul@f1+2
  9952  0105F2  EC84  F0A1         	call	___ftmul	;wreg free
  9953  0105F6  C146  F155         	movff	?___ftmul,___fttol@f1
  9954  0105FA  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
  9955  0105FE  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
  9956  010602  EC08  F0A1         	call	___fttol	;wreg free
  9957  010606  C155  F183         	movff	?___fttol,printf@val
  9958  01060A  C156  F184         	movff	?___fttol+1,printf@val+1
  9959  01060E  C157  F185         	movff	?___fttol+2,printf@val+2
  9960  010612  C158  F186         	movff	?___fttol+3,printf@val+3
  9961                           
  9962                           ;doprnt.c: 1228: while(c--) {
  9963  010616  D074               	goto	l1119
  9964  010618                     
  9965                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  9966  010618  C183  F117         	movff	printf@val,___lldiv@dividend
  9967  01061C  C184  F118         	movff	printf@val+1,___lldiv@dividend+1
  9968  010620  C185  F119         	movff	printf@val+2,___lldiv@dividend+2
  9969  010624  C186  F11A         	movff	printf@val+3,___lldiv@dividend+3
  9970  010628  0101               	movlb	1	; () banked
  9971  01062A  518C               	movf	printf@c& (0+255),w,b
  9972  01062C  0D04               	mullw	4
  9973  01062E  0E11               	movlw	low _dpowers
  9974  010630  24F3               	addwf	prodl,w,c
  9975  010632  6EF6               	movwf	tblptrl,c
  9976  010634  0EF4               	movlw	high _dpowers
  9977  010636  20F4               	addwfc	prodh,w,c
  9978  010638  6EF7               	movwf	tblptrh,c
  9979  01063A                     	if	1	;There are 3 active tblptr bytes
  9980  01063A  6AF8               	clrf	tblptru,c
  9981  01063C  0E00               	movlw	low (__mediumconst shr (0+16))
  9982  01063E  22F8               	addwfc	tblptru,f,c
  9983  010640                     	endif
  9984  010640  0009               	tblrd		*+
  9985  010642  CFF5 F11B          	movff	tablat,___lldiv@divisor
  9986  010646  0009               	tblrd		*+
  9987  010648  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
  9988  01064C  0009               	tblrd		*+
  9989  01064E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
  9990  010652  000A               	tblrd		*-
  9991  010654  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
  9992  010658  EC3F  F0A8         	call	___lldiv	;wreg free
  9993  01065C  C117  F17F         	movff	?___lldiv,printf@tmpval
  9994  010660  C118  F180         	movff	?___lldiv+1,printf@tmpval+1
  9995  010664  C119  F181         	movff	?___lldiv+2,printf@tmpval+2
  9996  010668  C11A  F182         	movff	?___lldiv+3,printf@tmpval+3
  9997                           
  9998                           ;doprnt.c: 1230: tmpval.vd %= 10;
  9999  01066C  C17F  F124         	movff	printf@tmpval,___llmod@dividend
 10000  010670  C180  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10001  010674  C181  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10002  010678  C182  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10003  01067C  0E0A               	movlw	10
 10004  01067E  0101               	movlb	1	; () banked
 10005  010680  6F28               	movwf	___llmod@divisor& (0+255),b
 10006  010682  0E00               	movlw	0
 10007  010684  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10008  010686  0E00               	movlw	0
 10009  010688  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10010  01068A  0E00               	movlw	0
 10011  01068C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10012  01068E  EC5A  F0AA         	call	___llmod	;wreg free
 10013  010692  C124  F17F         	movff	?___llmod,printf@tmpval
 10014  010696  C125  F180         	movff	?___llmod+1,printf@tmpval+1
 10015  01069A  C126  F181         	movff	?___llmod+2,printf@tmpval+2
 10016  01069E  C127  F182         	movff	?___llmod+3,printf@tmpval+3
 10017                           
 10018                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 10019  0106A2  0101               	movlb	1	; () banked
 10020  0106A4  517F               	movf	printf@tmpval& (0+255),w,b
 10021  0106A6  0F30               	addlw	48
 10022  0106A8  ECA1  F0AF         	call	_putch
 10023                           
 10024                           ;doprnt.c: 1232: val %= dpowers[c];
 10025  0106AC  C183  F124         	movff	printf@val,___llmod@dividend
 10026  0106B0  C184  F125         	movff	printf@val+1,___llmod@dividend+1
 10027  0106B4  C185  F126         	movff	printf@val+2,___llmod@dividend+2
 10028  0106B8  C186  F127         	movff	printf@val+3,___llmod@dividend+3
 10029  0106BC  0101               	movlb	1	; () banked
 10030  0106BE  518C               	movf	printf@c& (0+255),w,b
 10031  0106C0  0D04               	mullw	4
 10032  0106C2  0E11               	movlw	low _dpowers
 10033  0106C4  24F3               	addwf	prodl,w,c
 10034  0106C6  6EF6               	movwf	tblptrl,c
 10035  0106C8  0EF4               	movlw	high _dpowers
 10036  0106CA  20F4               	addwfc	prodh,w,c
 10037  0106CC  6EF7               	movwf	tblptrh,c
 10038  0106CE                     	if	1	;There are 3 active tblptr bytes
 10039  0106CE  6AF8               	clrf	tblptru,c
 10040  0106D0  0E00               	movlw	low (__mediumconst shr (0+16))
 10041  0106D2  22F8               	addwfc	tblptru,f,c
 10042  0106D4                     	endif
 10043  0106D4  0009               	tblrd		*+
 10044  0106D6  CFF5 F128          	movff	tablat,___llmod@divisor
 10045  0106DA  0009               	tblrd		*+
 10046  0106DC  CFF5 F129          	movff	tablat,___llmod@divisor+1
 10047  0106E0  0009               	tblrd		*+
 10048  0106E2  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 10049  0106E6  000A               	tblrd		*-
 10050  0106E8  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 10051  0106EC  EC5A  F0AA         	call	___llmod	;wreg free
 10052  0106F0  C124  F183         	movff	?___llmod,printf@val
 10053  0106F4  C125  F184         	movff	?___llmod+1,printf@val+1
 10054  0106F8  C126  F185         	movff	?___llmod+2,printf@val+2
 10055  0106FC  C127  F186         	movff	?___llmod+3,printf@val+3
 10056  010700                     l1119:
 10057  010700  0101               	movlb	1	; () banked
 10058  010702  078C               	decf	printf@c& (0+255),f,b
 10059  010704  298C               	incf	printf@c& (0+255),w,b
 10060  010706  B4D8               	btfsc	status,2,c
 10061  010708  D008               	goto	l1122
 10062  01070A  D786               	goto	l1120
 10063  01070C                     
 10064                           ; BSR set to: 1
 10065                           ;doprnt.c: 1236: (putch('0') );
 10066                           
 10067                           ; BSR set to: 1
 10068  01070C  0E30               	movlw	48
 10069  01070E  ECA1  F0AF         	call	_putch
 10070                           
 10071                           ;doprnt.c: 1237: prec--;
 10072  010712  0101               	movlb	1	; () banked
 10073  010714  078A               	decf	printf@prec& (0+255),f,b
 10074  010716  A0D8               	btfss	status,0,c
 10075  010718  078B               	decf	(printf@prec+1)& (0+255),f,b
 10076  01071A                     l1122:
 10077                           
 10078                           ; BSR set to: 1
 10079                           
 10080                           ; BSR set to: 1
 10081  01071A  518A               	movf	printf@prec& (0+255),w,b
 10082  01071C  118B               	iorwf	(printf@prec+1)& (0+255),w,b
 10083  01071E  B4D8               	btfsc	status,2,c
 10084  010720  D0C4               	goto	u10370
 10085  010722  D7F4               	goto	l1123
 10086  010724                     l1087:
 10087                           
 10088                           ; BSR set to: 1
 10089                           ;doprnt.c: 1246: }
 10090                           ;doprnt.c: 1253: {
 10091                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10092                           
 10093                           ; BSR set to: 1
 10094  010724  C179  FFD9         	movff	printf@ap,fsr2l
 10095  010728  C17A  FFDA         	movff	printf@ap+1,fsr2h
 10096  01072C  CFDE F183          	movff	postinc2,printf@val
 10097  010730  CFDD F184          	movff	postdec2,printf@val+1
 10098  010734  0E00               	movlw	0
 10099  010736  BF84               	btfsc	(printf@val+1)& (0+255),7,b
 10100  010738  0EFF               	movlw	-1
 10101  01073A  6F85               	movwf	(printf@val+2)& (0+255),b
 10102  01073C  6F86               	movwf	(printf@val+3)& (0+255),b
 10103                           
 10104                           ; BSR set to: 1
 10105  01073E  0E02               	movlw	2
 10106  010740  2779               	addwf	printf@ap& (0+255),f,b
 10107  010742  0E00               	movlw	0
 10108  010744  237A               	addwfc	(printf@ap+1)& (0+255),f,b
 10109                           
 10110                           ; BSR set to: 1
 10111                           ;doprnt.c: 1261: if((long)val < 0) {
 10112  010746  AF86               	btfss	(printf@val+3)& (0+255),7,b
 10113  010748  D00A               	goto	l1125
 10114                           
 10115                           ; BSR set to: 1
 10116                           ;doprnt.c: 1262: flag |= 0x03;
 10117  01074A  0E03               	movlw	3
 10118  01074C  137B               	iorwf	printf@flag& (0+255),f,b
 10119                           
 10120                           ; BSR set to: 1
 10121                           ;doprnt.c: 1263: val = -val;
 10122  01074E  1F86               	comf	(printf@val+3)& (0+255),f,b
 10123  010750  1F85               	comf	(printf@val+2)& (0+255),f,b
 10124  010752  1F84               	comf	(printf@val+1)& (0+255),f,b
 10125  010754  6D83               	negf	printf@val& (0+255),b
 10126  010756  0E00               	movlw	0
 10127  010758  2384               	addwfc	(printf@val+1)& (0+255),f,b
 10128  01075A  2385               	addwfc	(printf@val+2)& (0+255),f,b
 10129  01075C  2386               	addwfc	(printf@val+3)& (0+255),f,b
 10130  01075E                     l1125:
 10131                           
 10132                           ; BSR set to: 1
 10133                           ;doprnt.c: 1264: }
 10134                           ;doprnt.c: 1266: }
 10135                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 10136                           
 10137                           ; BSR set to: 1
 10138  01075E  518A               	movf	printf@prec& (0+255),w,b
 10139  010760  118B               	iorwf	(printf@prec+1)& (0+255),w,b
 10140  010762  A4D8               	btfss	status,2,c
 10141  010764  D008               	goto	l1126
 10142                           
 10143                           ; BSR set to: 1
 10144  010766  5183               	movf	printf@val& (0+255),w,b
 10145  010768  1184               	iorwf	(printf@val+1)& (0+255),w,b
 10146  01076A  1185               	iorwf	(printf@val+2)& (0+255),w,b
 10147  01076C  1186               	iorwf	(printf@val+3)& (0+255),w,b
 10148  01076E  A4D8               	btfss	status,2,c
 10149  010770  D002               	goto	l1126
 10150                           
 10151                           ; BSR set to: 1
 10152                           ;doprnt.c: 1291: prec++;
 10153  010772  4B8A               	infsnz	printf@prec& (0+255),f,b
 10154  010774  2B8B               	incf	(printf@prec+1)& (0+255),f,b
 10155  010776                     l1126:
 10156                           
 10157                           ; BSR set to: 1
 10158                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10159                           
 10160                           ; BSR set to: 1
 10161  010776  0E01               	movlw	1
 10162  010778  6F8C               	movwf	printf@c& (0+255),b
 10163  01077A                     l8735:
 10164                           
 10165                           ; BSR set to: 1
 10166  01077A  0E0A               	movlw	10
 10167  01077C  198C               	xorwf	printf@c& (0+255),w,b
 10168  01077E  B4D8               	btfsc	status,2,c
 10169  010780  D01B               	goto	u10330
 10170                           
 10171                           ; BSR set to: 1
 10172                           ;doprnt.c: 1306: if(val < dpowers[c])
 10173                           
 10174                           ; BSR set to: 1
 10175                           
 10176                           ; BSR set to: 1
 10177  010782  518C               	movf	printf@c& (0+255),w,b
 10178  010784  0D04               	mullw	4
 10179  010786  0E11               	movlw	low _dpowers
 10180  010788  24F3               	addwf	prodl,w,c
 10181  01078A  6EF6               	movwf	tblptrl,c
 10182  01078C  0EF4               	movlw	high _dpowers
 10183  01078E  20F4               	addwfc	prodh,w,c
 10184  010790  6EF7               	movwf	tblptrh,c
 10185  010792                     	if	1	;There are 3 active tblptr bytes
 10186  010792  6AF8               	clrf	tblptru,c
 10187  010794  0E00               	movlw	low (__mediumconst shr (0+16))
 10188  010796  22F8               	addwfc	tblptru,f,c
 10189  010798                     	endif
 10190  010798  0009               	tblrd		*+
 10191  01079A  50F5               	movf	tablat,w,c
 10192  01079C  5D83               	subwf	printf@val& (0+255),w,b
 10193  01079E  0009               	tblrd		*+
 10194  0107A0  50F5               	movf	tablat,w,c
 10195  0107A2  5984               	subwfb	(printf@val+1)& (0+255),w,b
 10196  0107A4  0009               	tblrd		*+
 10197  0107A6  50F5               	movf	tablat,w,c
 10198  0107A8  5985               	subwfb	(printf@val+2)& (0+255),w,b
 10199  0107AA  0009               	tblrd		*+
 10200  0107AC  50F5               	movf	tablat,w,c
 10201  0107AE  5986               	subwfb	(printf@val+3)& (0+255),w,b
 10202  0107B0  A0D8               	btfss	status,0,c
 10203  0107B2  D002               	goto	u10330
 10204                           
 10205                           ; BSR set to: 1
 10206                           
 10207                           ; BSR set to: 1
 10208                           
 10209                           ; BSR set to: 1
 10210                           ;doprnt.c: 1307: break;
 10211  0107B4  2B8C               	incf	printf@c& (0+255),f,b
 10212  0107B6  D7E1               	goto	l8735
 10213  0107B8                     u10330:
 10214                           
 10215                           ; BSR set to: 1
 10216                           ;doprnt.c: 1339: if(c < prec)
 10217                           
 10218                           ; BSR set to: 1
 10219  0107B8  0E80               	movlw	128
 10220  0107BA  BF8C               	btfsc	printf@c& (0+255),7,b
 10221  0107BC  0E7F               	movlw	127
 10222  0107BE  6F6C               	movwf	??_printf& (0+255),b
 10223  0107C0  518A               	movf	printf@prec& (0+255),w,b
 10224  0107C2  5D8C               	subwf	printf@c& (0+255),w,b
 10225  0107C4  518B               	movf	(printf@prec+1)& (0+255),w,b
 10226  0107C6  0A80               	xorlw	128
 10227  0107C8  596C               	subwfb	??_printf& (0+255),w,b
 10228  0107CA  B0D8               	btfsc	status,0,c
 10229  0107CC  D003               	goto	l1130
 10230                           
 10231                           ; BSR set to: 1
 10232                           ;doprnt.c: 1340: c = prec;
 10233  0107CE  C18A  F18C         	movff	printf@prec,printf@c
 10234  0107D2  D010               	goto	l1132
 10235  0107D4                     l1130:
 10236                           
 10237                           ; BSR set to: 1
 10238                           ;doprnt.c: 1341: else if(prec < c)
 10239                           
 10240                           ; BSR set to: 1
 10241  0107D4  518B               	movf	(printf@prec+1)& (0+255),w,b
 10242  0107D6  0A80               	xorlw	128
 10243  0107D8  6F6C               	movwf	??_printf& (0+255),b
 10244  0107DA  518C               	movf	printf@c& (0+255),w,b
 10245  0107DC  5D8A               	subwf	printf@prec& (0+255),w,b
 10246  0107DE  0E80               	movlw	128
 10247  0107E0  BF8C               	btfsc	printf@c& (0+255),7,b
 10248  0107E2  0E7F               	movlw	127
 10249  0107E4  596C               	subwfb	??_printf& (0+255),w,b
 10250  0107E6  B0D8               	btfsc	status,0,c
 10251  0107E8  D005               	goto	l1132
 10252                           
 10253                           ; BSR set to: 1
 10254                           ;doprnt.c: 1342: prec = c;
 10255  0107EA  518C               	movf	printf@c& (0+255),w,b
 10256  0107EC  6F8A               	movwf	printf@prec& (0+255),b
 10257  0107EE  6B8B               	clrf	(printf@prec+1)& (0+255),b
 10258  0107F0  BF8A               	btfsc	printf@prec& (0+255),7,b
 10259  0107F2  078B               	decf	(printf@prec+1)& (0+255),f,b
 10260  0107F4                     l1132:
 10261                           
 10262                           ; BSR set to: 1
 10263                           ;doprnt.c: 1422: {
 10264                           ;doprnt.c: 1438: if(flag & 0x03)
 10265                           
 10266                           ; BSR set to: 1
 10267                           
 10268                           ; BSR set to: 1
 10269  0107F4  0E03               	movlw	3
 10270  0107F6  157B               	andwf	printf@flag& (0+255),w,b
 10271  0107F8  6F6C               	movwf	??_printf& (0+255),b
 10272  0107FA  0E00               	movlw	0
 10273  0107FC  157C               	andwf	(printf@flag+1)& (0+255),w,b
 10274  0107FE  6F6D               	movwf	(??_printf+1)& (0+255),b
 10275  010800  516C               	movf	??_printf& (0+255),w,b
 10276  010802  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10277  010804  B4D8               	btfsc	status,2,c
 10278  010806  D048               	goto	l1134
 10279                           
 10280                           ; BSR set to: 1
 10281                           ;doprnt.c: 1439: (putch('-') );
 10282  010808  0E2D               	movlw	45
 10283  01080A  ECA1  F0AF         	call	_putch
 10284                           
 10285                           ;doprnt.c: 1469: }
 10286                           ;doprnt.c: 1474: while(prec--) {
 10287  01080E  D044               	goto	l1134
 10288  010810                     l8759:
 10289                           
 10290                           ;doprnt.c: 1478: {
 10291                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10292  010810  C18A  F16C         	movff	printf@prec,??_printf
 10293  010814  C18B  F16D         	movff	printf@prec+1,??_printf+1
 10294  010818  0101               	movlb	1	; () banked
 10295  01081A  90D8               	bcf	status,0,c
 10296  01081C  376C               	rlcf	??_printf& (0+255),f,b
 10297  01081E  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10298  010820  90D8               	bcf	status,0,c
 10299  010822  376C               	rlcf	??_printf& (0+255),f,b
 10300  010824  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10301  010826  0E11               	movlw	low _dpowers
 10302  010828  256C               	addwf	??_printf& (0+255),w,b
 10303  01082A  6EF6               	movwf	tblptrl,c
 10304  01082C  0EF4               	movlw	high _dpowers
 10305  01082E  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10306  010830  6EF7               	movwf	tblptrh,c
 10307  010832                     	if	1	;There are 3 active tblptr bytes
 10308  010832  6AF8               	clrf	tblptru,c
 10309  010834  0E00               	movlw	low (__mediumconst shr (0+16))
 10310  010836  22F8               	addwfc	tblptru,f,c
 10311  010838                     	endif
 10312  010838  0009               	tblrd		*+
 10313  01083A  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10314  01083E  0009               	tblrd		*+
 10315  010840  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10316  010844  0009               	tblrd		*+
 10317  010846  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10318  01084A  000A               	tblrd		*-
 10319  01084C  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10320  010850  C183  F117         	movff	printf@val,___lldiv@dividend
 10321  010854  C184  F118         	movff	printf@val+1,___lldiv@dividend+1
 10322  010858  C185  F119         	movff	printf@val+2,___lldiv@dividend+2
 10323  01085C  C186  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10324  010860  EC3F  F0A8         	call	___lldiv	;wreg free
 10325  010864  C117  F124         	movff	?___lldiv,___llmod@dividend
 10326  010868  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 10327  01086C  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 10328  010870  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 10329  010874  0E0A               	movlw	10
 10330  010876  0101               	movlb	1	; () banked
 10331  010878  6F28               	movwf	___llmod@divisor& (0+255),b
 10332  01087A  0E00               	movlw	0
 10333  01087C  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10334  01087E  0E00               	movlw	0
 10335  010880  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10336  010882  0E00               	movlw	0
 10337  010884  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10338  010886  EC5A  F0AA         	call	___llmod	;wreg free
 10339  01088A  0101               	movlb	1	; () banked
 10340  01088C  5124               	movf	?___llmod& (0+255),w,b
 10341  01088E  0F30               	addlw	48
 10342  010890  6F8C               	movwf	printf@c& (0+255),b
 10343                           
 10344                           ; BSR set to: 1
 10345                           ;doprnt.c: 1523: }
 10346                           ;doprnt.c: 1524: (putch(c) );
 10347  010892  518C               	movf	printf@c& (0+255),w,b
 10348  010894  ECA1  F0AF         	call	_putch
 10349  010898                     l1134:
 10350  010898  0101               	movlb	1	; () banked
 10351  01089A  078A               	decf	printf@prec& (0+255),f,b
 10352  01089C  A0D8               	btfss	status,0,c
 10353  01089E  078B               	decf	(printf@prec+1)& (0+255),f,b
 10354  0108A0  298A               	incf	printf@prec& (0+255),w,b
 10355  0108A2  E1B6               	bnz	l8759
 10356  0108A4  298B               	incf	(printf@prec+1)& (0+255),w,b
 10357  0108A6  A4D8               	btfss	status,2,c
 10358  0108A8  D7B3               	goto	l1135
 10359  0108AA                     u10370:
 10360                           
 10361                           ; BSR set to: 1
 10362                           
 10363                           ; BSR set to: 1
 10364  0108AA  0101               	movlb	1	; () banked
 10365  0108AC  5164               	movf	printf@f& (0+255),w,b
 10366  0108AE  6F6C               	movwf	??_printf& (0+255),b
 10367  0108B0  5165               	movf	(printf@f+1)& (0+255),w,b
 10368  0108B2  6F6D               	movwf	(??_printf+1)& (0+255),b
 10369  0108B4  4B64               	infsnz	printf@f& (0+255),f,b
 10370  0108B6  2B65               	incf	(printf@f+1)& (0+255),f,b
 10371  0108B8  C16C  FFF6         	movff	??_printf,tblptrl
 10372  0108BC  C16D  FFF7         	movff	??_printf+1,tblptrh
 10373  0108C0  0E00               	movlw	low (__mediumconst shr (0+16))
 10374  0108C2  6EF8               	movwf	tblptru,c
 10375  0108C4  0E0D               	movlw	(high __ramtop+-1)
 10376  0108C6  64F7               	cpfsgt	tblptrh,c
 10377  0108C8  D003               	bra	u10387
 10378  0108CA  0008               	tblrd		*
 10379  0108CC  50F5               	movf	tablat,w,c
 10380  0108CE  D005               	bra	u10380
 10381  0108D0                     u10387:
 10382  0108D0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10383  0108D4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10384  0108D8  50E7               	movf	indf1,w,c
 10385  0108DA                     u10380:
 10386  0108DA  0101               	movlb	1	; () banked
 10387  0108DC  6F8C               	movwf	printf@c& (0+255),b
 10388  0108DE  518C               	movf	printf@c& (0+255),w,b
 10389  0108E0  B4D8               	btfsc	status,2,c
 10390  0108E2  0012               	return	
 10391  0108E4  EF07  F080         	goto	l1067
 10392  0108E8                     __end_of_printf:
 10393                           	opt stack 0
 10394                           tblptru	equ	0xFF8
 10395                           tblptrh	equ	0xFF7
 10396                           tblptrl	equ	0xFF6
 10397                           tablat	equ	0xFF5
 10398                           prodh	equ	0xFF4
 10399                           prodl	equ	0xFF3
 10400                           intcon	equ	0xFF2
 10401                           postinc0	equ	0xFEE
 10402                           wreg	equ	0xFE8
 10403                           indf1	equ	0xFE7
 10404                           postdec1	equ	0xFE5
 10405                           fsr1h	equ	0xFE2
 10406                           fsr1l	equ	0xFE1
 10407                           indf2	equ	0xFDF
 10408                           postinc2	equ	0xFDE
 10409                           postdec2	equ	0xFDD
 10410                           fsr2h	equ	0xFDA
 10411                           fsr2l	equ	0xFD9
 10412                           status	equ	0xFD8
 10413                           
 10414 ;; *************** function _scale *****************
 10415 ;; Defined at:
 10416 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10417 ;; Parameters:    Size  Location     Type
 10418 ;;  scl             1    wreg     char 
 10419 ;; Auto vars:     Size  Location     Type
 10420 ;;  scl             1   91[BANK1 ] char 
 10421 ;; Return value:  Size  Location     Type
 10422 ;;                  3   85[BANK1 ] char 
 10423 ;; Registers used:
 10424 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10425 ;; Tracked objects:
 10426 ;;		On entry : 0/0
 10427 ;;		On exit  : 0/0
 10428 ;;		Unchanged: 0/0
 10429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10430 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10431 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10433 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10434 ;;Total ram usage:        7 bytes
 10435 ;; Hardware stack levels used:    1
 10436 ;; Hardware stack levels required when called:   16
 10437 ;; This function calls:
 10438 ;;		___awdiv
 10439 ;;		___awmod
 10440 ;;		___ftmul
 10441 ;;		___wmul
 10442 ;; This function is called by:
 10443 ;;		_printf
 10444 ;; This function uses a non-reentrant model
 10445 ;;
 10446                           
 10447                           	psect	text20
 10448  0119B0                     __ptext20:
 10449                           	opt stack 0
 10450  0119B0                     _scale:
 10451                           	opt stack 11
 10452                           
 10453                           ; BSR set to: 1
 10454                           ;incstack = 0
 10455                           ;scale@scl stored from wreg
 10456  0119B0  0101               	movlb	1	; () banked
 10457  0119B2  6F5B               	movwf	scale@scl& (0+255),b
 10458                           
 10459                           ;doprnt.c: 428: if(scl < 0) {
 10460  0119B4  0101               	movlb	1	; () banked
 10461  0119B6  AF5B               	btfss	scale@scl& (0+255),7,b
 10462  0119B8  D11E               	goto	l1056
 10463                           
 10464                           ; BSR set to: 1
 10465                           ;doprnt.c: 429: scl = -scl;
 10466  0119BA  6D5B               	negf	scale@scl& (0+255),b
 10467                           
 10468                           ;doprnt.c: 430: if(scl>=110)
 10469  0119BC  515B               	movf	scale@scl& (0+255),w,b
 10470  0119BE  0A80               	xorlw	128
 10471  0119C0  0F12               	addlw	-238
 10472  0119C2  A0D8               	btfss	status,0,c
 10473  0119C4  D0A0               	goto	l1057
 10474                           
 10475                           ; BSR set to: 1
 10476                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10477  0119C6  0E00               	movlw	0
 10478  0119C8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10479  0119CA  0E03               	movlw	3
 10480  0119CC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10481  0119CE  0E00               	movlw	0
 10482  0119D0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10483  0119D2  0E0A               	movlw	10
 10484  0119D4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10485  0119D6  0E00               	movlw	0
 10486  0119D8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10487  0119DA  0E64               	movlw	100
 10488  0119DC  6F19               	movwf	___awmod@divisor& (0+255),b
 10489  0119DE  515B               	movf	scale@scl& (0+255),w,b
 10490  0119E0  6F17               	movwf	___awmod@dividend& (0+255),b
 10491  0119E2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10492  0119E4  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10493  0119E6  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10494  0119E8  ECB5  F0A9         	call	___awmod	;wreg free
 10495  0119EC  C117  F11D         	movff	?___awmod,___awdiv@dividend
 10496  0119F0  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 10497  0119F4  ECFC  F0A7         	call	___awdiv	;wreg free
 10498  0119F8  0E09               	movlw	9
 10499  0119FA  0101               	movlb	1	; () banked
 10500  0119FC  251D               	addwf	?___awdiv& (0+255),w,b
 10501  0119FE  6F25               	movwf	___wmul@multiplier& (0+255),b
 10502  011A00  0E00               	movlw	0
 10503  011A02  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10504  011A04  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10505  011A06  EC8A  F0AE         	call	___wmul	;wreg free
 10506  011A0A  0E60               	movlw	low __npowers_
 10507  011A0C  0101               	movlb	1	; () banked
 10508  011A0E  2525               	addwf	?___wmul& (0+255),w,b
 10509  011A10  6EF6               	movwf	tblptrl,c
 10510  011A12  0EF4               	movlw	high __npowers_
 10511  011A14  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10512  011A16  6EF7               	movwf	tblptrh,c
 10513  011A18                     	if	1	;There are 3 active tblptr bytes
 10514  011A18  6AF8               	clrf	tblptru,c
 10515  011A1A  0E00               	movlw	low (__mediumconst shr (0+16))
 10516  011A1C  22F8               	addwfc	tblptru,f,c
 10517  011A1E                     	endif
 10518  011A1E  0009               	tblrd		*+
 10519  011A20  CFF5 F149          	movff	tablat,___ftmul@f2
 10520  011A24  0009               	tblrd		*+
 10521  011A26  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10522  011A2A  000A               	tblrd		*-
 10523  011A2C  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10524  011A30  0E00               	movlw	0
 10525  011A32  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10526  011A34  0E64               	movlw	100
 10527  011A36  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10528  011A38  515B               	movf	scale@scl& (0+255),w,b
 10529  011A3A  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10530  011A3C  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10531  011A3E  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10532  011A40  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10533  011A42  ECFC  F0A7         	call	___awdiv	;wreg free
 10534  011A46  0E12               	movlw	18
 10535  011A48  0101               	movlb	1	; () banked
 10536  011A4A  251D               	addwf	?___awdiv& (0+255),w,b
 10537  011A4C  6F25               	movwf	___wmul@multiplier& (0+255),b
 10538  011A4E  0E00               	movlw	0
 10539  011A50  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10540  011A52  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10541  011A54  0E00               	movlw	0
 10542  011A56  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10543  011A58  0E03               	movlw	3
 10544  011A5A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10545  011A5C  EC8A  F0AE         	call	___wmul	;wreg free
 10546  011A60  0E60               	movlw	low __npowers_
 10547  011A62  0101               	movlb	1	; () banked
 10548  011A64  2525               	addwf	?___wmul& (0+255),w,b
 10549  011A66  6EF6               	movwf	tblptrl,c
 10550  011A68  0EF4               	movlw	high __npowers_
 10551  011A6A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10552  011A6C  6EF7               	movwf	tblptrh,c
 10553  011A6E                     	if	1	;There are 3 active tblptr bytes
 10554  011A6E  6AF8               	clrf	tblptru,c
 10555  011A70  0E00               	movlw	low (__mediumconst shr (0+16))
 10556  011A72  22F8               	addwfc	tblptru,f,c
 10557  011A74                     	endif
 10558  011A74  0009               	tblrd		*+
 10559  011A76  CFF5 F146          	movff	tablat,___ftmul@f1
 10560  011A7A  0009               	tblrd		*+
 10561  011A7C  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10562  011A80  000A               	tblrd		*-
 10563  011A82  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10564  011A86  EC84  F0A1         	call	___ftmul	;wreg free
 10565  011A8A  C146  F158         	movff	?___ftmul,_scale$3130
 10566  011A8E  C147  F159         	movff	?___ftmul+1,_scale$3130+1
 10567  011A92  C148  F15A         	movff	?___ftmul+2,_scale$3130+2
 10568                           
 10569                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10570  011A96  C158  F146         	movff	_scale$3130,___ftmul@f1
 10571  011A9A  C159  F147         	movff	_scale$3130+1,___ftmul@f1+1
 10572  011A9E  C15A  F148         	movff	_scale$3130+2,___ftmul@f1+2
 10573  011AA2  0E00               	movlw	0
 10574  011AA4  0101               	movlb	1	; () banked
 10575  011AA6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10576  011AA8  0E03               	movlw	3
 10577  011AAA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10578  011AAC  0E00               	movlw	0
 10579  011AAE  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10580  011AB0  0E0A               	movlw	10
 10581  011AB2  6F19               	movwf	___awmod@divisor& (0+255),b
 10582  011AB4  515B               	movf	scale@scl& (0+255),w,b
 10583  011AB6  6F17               	movwf	___awmod@dividend& (0+255),b
 10584  011AB8  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10585  011ABA  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10586  011ABC  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10587  011ABE  ECB5  F0A9         	call	___awmod	;wreg free
 10588  011AC2  C117  F125         	movff	?___awmod,___wmul@multiplier
 10589  011AC6  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10590  011ACA  EC8A  F0AE         	call	___wmul	;wreg free
 10591  011ACE  0E60               	movlw	low __npowers_
 10592  011AD0  0101               	movlb	1	; () banked
 10593  011AD2  2525               	addwf	?___wmul& (0+255),w,b
 10594  011AD4  6EF6               	movwf	tblptrl,c
 10595  011AD6  0EF4               	movlw	high __npowers_
 10596  011AD8  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10597  011ADA  6EF7               	movwf	tblptrh,c
 10598  011ADC                     	if	1	;There are 3 active tblptr bytes
 10599  011ADC  6AF8               	clrf	tblptru,c
 10600  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
 10601  011AE0  22F8               	addwfc	tblptru,f,c
 10602  011AE2                     	endif
 10603  011AE2  0009               	tblrd		*+
 10604  011AE4  CFF5 F149          	movff	tablat,___ftmul@f2
 10605  011AE8  0009               	tblrd		*+
 10606  011AEA  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10607  011AEE  000A               	tblrd		*-
 10608  011AF0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10609  011AF4  EC84  F0A1         	call	___ftmul	;wreg free
 10610  011AF8  C146  F155         	movff	?___ftmul,?_scale
 10611  011AFC  C147  F156         	movff	?___ftmul+1,?_scale+1
 10612  011B00  C148  F157         	movff	?___ftmul+2,?_scale+2
 10613  011B04  0012               	return	
 10614  011B06                     l1057:
 10615                           
 10616                           ;doprnt.c: 432: else if(scl > 10)
 10617  011B06  0101               	movlb	1	; () banked
 10618  011B08  515B               	movf	scale@scl& (0+255),w,b
 10619  011B0A  0A80               	xorlw	128
 10620  011B0C  0F75               	addlw	-139
 10621  011B0E  A0D8               	btfss	status,0,c
 10622  011B10  D05C               	goto	l1060
 10623                           
 10624                           ; BSR set to: 1
 10625                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10626  011B12  0E00               	movlw	0
 10627  011B14  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10628  011B16  0E0A               	movlw	10
 10629  011B18  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10630  011B1A  515B               	movf	scale@scl& (0+255),w,b
 10631  011B1C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10632  011B1E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10633  011B20  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10634  011B22  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10635  011B24  ECFC  F0A7         	call	___awdiv	;wreg free
 10636  011B28  0E09               	movlw	9
 10637  011B2A  0101               	movlb	1	; () banked
 10638  011B2C  251D               	addwf	?___awdiv& (0+255),w,b
 10639  011B2E  6F25               	movwf	___wmul@multiplier& (0+255),b
 10640  011B30  0E00               	movlw	0
 10641  011B32  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10642  011B34  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10643  011B36  0E00               	movlw	0
 10644  011B38  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10645  011B3A  0E03               	movlw	3
 10646  011B3C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10647  011B3E  EC8A  F0AE         	call	___wmul	;wreg free
 10648  011B42  0E60               	movlw	low __npowers_
 10649  011B44  0101               	movlb	1	; () banked
 10650  011B46  2525               	addwf	?___wmul& (0+255),w,b
 10651  011B48  6EF6               	movwf	tblptrl,c
 10652  011B4A  0EF4               	movlw	high __npowers_
 10653  011B4C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10654  011B4E  6EF7               	movwf	tblptrh,c
 10655  011B50                     	if	1	;There are 3 active tblptr bytes
 10656  011B50  6AF8               	clrf	tblptru,c
 10657  011B52  0E00               	movlw	low (__mediumconst shr (0+16))
 10658  011B54  22F8               	addwfc	tblptru,f,c
 10659  011B56                     	endif
 10660  011B56  0009               	tblrd		*+
 10661  011B58  CFF5 F146          	movff	tablat,___ftmul@f1
 10662  011B5C  0009               	tblrd		*+
 10663  011B5E  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10664  011B62  000A               	tblrd		*-
 10665  011B64  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10666  011B68  0E00               	movlw	0
 10667  011B6A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10668  011B6C  0E03               	movlw	3
 10669  011B6E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10670  011B70  0E00               	movlw	0
 10671  011B72  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10672  011B74  0E0A               	movlw	10
 10673  011B76  6F19               	movwf	___awmod@divisor& (0+255),b
 10674  011B78  515B               	movf	scale@scl& (0+255),w,b
 10675  011B7A  6F17               	movwf	___awmod@dividend& (0+255),b
 10676  011B7C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10677  011B7E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10678  011B80  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10679  011B82  ECB5  F0A9         	call	___awmod	;wreg free
 10680  011B86  C117  F125         	movff	?___awmod,___wmul@multiplier
 10681  011B8A  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10682  011B8E  EC8A  F0AE         	call	___wmul	;wreg free
 10683  011B92  0E60               	movlw	low __npowers_
 10684  011B94  0101               	movlb	1	; () banked
 10685  011B96  2525               	addwf	?___wmul& (0+255),w,b
 10686  011B98  6EF6               	movwf	tblptrl,c
 10687  011B9A  0EF4               	movlw	high __npowers_
 10688  011B9C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10689  011B9E  6EF7               	movwf	tblptrh,c
 10690  011BA0                     	if	1	;There are 3 active tblptr bytes
 10691  011BA0  6AF8               	clrf	tblptru,c
 10692  011BA2  0E00               	movlw	low (__mediumconst shr (0+16))
 10693  011BA4  22F8               	addwfc	tblptru,f,c
 10694  011BA6                     	endif
 10695  011BA6  0009               	tblrd		*+
 10696  011BA8  CFF5 F149          	movff	tablat,___ftmul@f2
 10697  011BAC  0009               	tblrd		*+
 10698  011BAE  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10699  011BB2  000A               	tblrd		*-
 10700  011BB4  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10701  011BB8  EC84  F0A1         	call	___ftmul	;wreg free
 10702  011BBC  C146  F155         	movff	?___ftmul,?_scale
 10703  011BC0  C147  F156         	movff	?___ftmul+1,?_scale+1
 10704  011BC4  C148  F157         	movff	?___ftmul+2,?_scale+2
 10705  011BC8  0012               	return	
 10706  011BCA                     l1060:
 10707                           
 10708                           ;doprnt.c: 434: return _npowers_[scl];
 10709  011BCA  0101               	movlb	1	; () banked
 10710  011BCC  515B               	movf	scale@scl& (0+255),w,b
 10711  011BCE  0D03               	mullw	3
 10712  011BD0  0E60               	movlw	low __npowers_
 10713  011BD2  24F3               	addwf	prodl,w,c
 10714  011BD4  6EF6               	movwf	tblptrl,c
 10715  011BD6  0EF4               	movlw	high __npowers_
 10716  011BD8  20F4               	addwfc	prodh,w,c
 10717  011BDA  6EF7               	movwf	tblptrh,c
 10718  011BDC                     	if	1	;There are 3 active tblptr bytes
 10719  011BDC  6AF8               	clrf	tblptru,c
 10720  011BDE  0E00               	movlw	low (__mediumconst shr (0+16))
 10721  011BE0  22F8               	addwfc	tblptru,f,c
 10722  011BE2                     	endif
 10723  011BE2  0009               	tblrd		*+
 10724  011BE4  CFF5 F155          	movff	tablat,?_scale
 10725  011BE8  0009               	tblrd		*+
 10726  011BEA  CFF5 F156          	movff	tablat,?_scale+1
 10727  011BEE  000A               	tblrd		*-
 10728  011BF0  CFF5 F157          	movff	tablat,?_scale+2
 10729                           
 10730                           ; BSR set to: 1
 10731  011BF4  0012               	return	
 10732  011BF6                     l1056:
 10733                           
 10734                           ; BSR set to: 1
 10735                           ;doprnt.c: 435: }
 10736                           ;doprnt.c: 436: if(scl>=110)
 10737                           
 10738                           ; BSR set to: 1
 10739  011BF6  515B               	movf	scale@scl& (0+255),w,b
 10740  011BF8  0A80               	xorlw	128
 10741  011BFA  0F12               	addlw	-238
 10742  011BFC  A0D8               	btfss	status,0,c
 10743  011BFE  D0A0               	goto	l1061
 10744                           
 10745                           ; BSR set to: 1
 10746                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10747  011C00  0E00               	movlw	0
 10748  011C02  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10749  011C04  0E03               	movlw	3
 10750  011C06  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10751  011C08  0E00               	movlw	0
 10752  011C0A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10753  011C0C  0E0A               	movlw	10
 10754  011C0E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10755  011C10  0E00               	movlw	0
 10756  011C12  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10757  011C14  0E64               	movlw	100
 10758  011C16  6F19               	movwf	___awmod@divisor& (0+255),b
 10759  011C18  515B               	movf	scale@scl& (0+255),w,b
 10760  011C1A  6F17               	movwf	___awmod@dividend& (0+255),b
 10761  011C1C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10762  011C1E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10763  011C20  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10764  011C22  ECB5  F0A9         	call	___awmod	;wreg free
 10765  011C26  C117  F11D         	movff	?___awmod,___awdiv@dividend
 10766  011C2A  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 10767  011C2E  ECFC  F0A7         	call	___awdiv	;wreg free
 10768  011C32  0E09               	movlw	9
 10769  011C34  0101               	movlb	1	; () banked
 10770  011C36  251D               	addwf	?___awdiv& (0+255),w,b
 10771  011C38  6F25               	movwf	___wmul@multiplier& (0+255),b
 10772  011C3A  0E00               	movlw	0
 10773  011C3C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10774  011C3E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10775  011C40  EC8A  F0AE         	call	___wmul	;wreg free
 10776  011C44  0E39               	movlw	low __powers_
 10777  011C46  0101               	movlb	1	; () banked
 10778  011C48  2525               	addwf	?___wmul& (0+255),w,b
 10779  011C4A  6EF6               	movwf	tblptrl,c
 10780  011C4C  0EF4               	movlw	high __powers_
 10781  011C4E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10782  011C50  6EF7               	movwf	tblptrh,c
 10783  011C52                     	if	1	;There are 3 active tblptr bytes
 10784  011C52  6AF8               	clrf	tblptru,c
 10785  011C54  0E00               	movlw	low (__mediumconst shr (0+16))
 10786  011C56  22F8               	addwfc	tblptru,f,c
 10787  011C58                     	endif
 10788  011C58  0009               	tblrd		*+
 10789  011C5A  CFF5 F149          	movff	tablat,___ftmul@f2
 10790  011C5E  0009               	tblrd		*+
 10791  011C60  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10792  011C64  000A               	tblrd		*-
 10793  011C66  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10794  011C6A  0E00               	movlw	0
 10795  011C6C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10796  011C6E  0E64               	movlw	100
 10797  011C70  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10798  011C72  515B               	movf	scale@scl& (0+255),w,b
 10799  011C74  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10800  011C76  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10801  011C78  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10802  011C7A  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10803  011C7C  ECFC  F0A7         	call	___awdiv	;wreg free
 10804  011C80  0E12               	movlw	18
 10805  011C82  0101               	movlb	1	; () banked
 10806  011C84  251D               	addwf	?___awdiv& (0+255),w,b
 10807  011C86  6F25               	movwf	___wmul@multiplier& (0+255),b
 10808  011C88  0E00               	movlw	0
 10809  011C8A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10810  011C8C  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10811  011C8E  0E00               	movlw	0
 10812  011C90  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10813  011C92  0E03               	movlw	3
 10814  011C94  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10815  011C96  EC8A  F0AE         	call	___wmul	;wreg free
 10816  011C9A  0E39               	movlw	low __powers_
 10817  011C9C  0101               	movlb	1	; () banked
 10818  011C9E  2525               	addwf	?___wmul& (0+255),w,b
 10819  011CA0  6EF6               	movwf	tblptrl,c
 10820  011CA2  0EF4               	movlw	high __powers_
 10821  011CA4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10822  011CA6  6EF7               	movwf	tblptrh,c
 10823  011CA8                     	if	1	;There are 3 active tblptr bytes
 10824  011CA8  6AF8               	clrf	tblptru,c
 10825  011CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 10826  011CAC  22F8               	addwfc	tblptru,f,c
 10827  011CAE                     	endif
 10828  011CAE  0009               	tblrd		*+
 10829  011CB0  CFF5 F146          	movff	tablat,___ftmul@f1
 10830  011CB4  0009               	tblrd		*+
 10831  011CB6  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10832  011CBA  000A               	tblrd		*-
 10833  011CBC  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10834  011CC0  EC84  F0A1         	call	___ftmul	;wreg free
 10835  011CC4  C146  F158         	movff	?___ftmul,_scale$3130
 10836  011CC8  C147  F159         	movff	?___ftmul+1,_scale$3130+1
 10837  011CCC  C148  F15A         	movff	?___ftmul+2,_scale$3130+2
 10838                           
 10839                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 10840  011CD0  C158  F146         	movff	_scale$3130,___ftmul@f1
 10841  011CD4  C159  F147         	movff	_scale$3130+1,___ftmul@f1+1
 10842  011CD8  C15A  F148         	movff	_scale$3130+2,___ftmul@f1+2
 10843  011CDC  0E00               	movlw	0
 10844  011CDE  0101               	movlb	1	; () banked
 10845  011CE0  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10846  011CE2  0E03               	movlw	3
 10847  011CE4  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10848  011CE6  0E00               	movlw	0
 10849  011CE8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10850  011CEA  0E0A               	movlw	10
 10851  011CEC  6F19               	movwf	___awmod@divisor& (0+255),b
 10852  011CEE  515B               	movf	scale@scl& (0+255),w,b
 10853  011CF0  6F17               	movwf	___awmod@dividend& (0+255),b
 10854  011CF2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10855  011CF4  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10856  011CF6  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10857  011CF8  ECB5  F0A9         	call	___awmod	;wreg free
 10858  011CFC  C117  F125         	movff	?___awmod,___wmul@multiplier
 10859  011D00  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10860  011D04  EC8A  F0AE         	call	___wmul	;wreg free
 10861  011D08  0E39               	movlw	low __powers_
 10862  011D0A  0101               	movlb	1	; () banked
 10863  011D0C  2525               	addwf	?___wmul& (0+255),w,b
 10864  011D0E  6EF6               	movwf	tblptrl,c
 10865  011D10  0EF4               	movlw	high __powers_
 10866  011D12  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10867  011D14  6EF7               	movwf	tblptrh,c
 10868  011D16                     	if	1	;There are 3 active tblptr bytes
 10869  011D16  6AF8               	clrf	tblptru,c
 10870  011D18  0E00               	movlw	low (__mediumconst shr (0+16))
 10871  011D1A  22F8               	addwfc	tblptru,f,c
 10872  011D1C                     	endif
 10873  011D1C  0009               	tblrd		*+
 10874  011D1E  CFF5 F149          	movff	tablat,___ftmul@f2
 10875  011D22  0009               	tblrd		*+
 10876  011D24  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10877  011D28  000A               	tblrd		*-
 10878  011D2A  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10879  011D2E  EC84  F0A1         	call	___ftmul	;wreg free
 10880  011D32  C146  F155         	movff	?___ftmul,?_scale
 10881  011D36  C147  F156         	movff	?___ftmul+1,?_scale+1
 10882  011D3A  C148  F157         	movff	?___ftmul+2,?_scale+2
 10883  011D3E  0012               	return	
 10884  011D40                     l1061:
 10885                           
 10886                           ;doprnt.c: 438: else if(scl > 10)
 10887  011D40  0101               	movlb	1	; () banked
 10888  011D42  515B               	movf	scale@scl& (0+255),w,b
 10889  011D44  0A80               	xorlw	128
 10890  011D46  0F75               	addlw	-139
 10891  011D48  A0D8               	btfss	status,0,c
 10892  011D4A  D05C               	goto	l1063
 10893                           
 10894                           ; BSR set to: 1
 10895                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 10896  011D4C  0E00               	movlw	0
 10897  011D4E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10898  011D50  0E0A               	movlw	10
 10899  011D52  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10900  011D54  515B               	movf	scale@scl& (0+255),w,b
 10901  011D56  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10902  011D58  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10903  011D5A  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10904  011D5C  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10905  011D5E  ECFC  F0A7         	call	___awdiv	;wreg free
 10906  011D62  0E09               	movlw	9
 10907  011D64  0101               	movlb	1	; () banked
 10908  011D66  251D               	addwf	?___awdiv& (0+255),w,b
 10909  011D68  6F25               	movwf	___wmul@multiplier& (0+255),b
 10910  011D6A  0E00               	movlw	0
 10911  011D6C  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10912  011D6E  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10913  011D70  0E00               	movlw	0
 10914  011D72  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10915  011D74  0E03               	movlw	3
 10916  011D76  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10917  011D78  EC8A  F0AE         	call	___wmul	;wreg free
 10918  011D7C  0E39               	movlw	low __powers_
 10919  011D7E  0101               	movlb	1	; () banked
 10920  011D80  2525               	addwf	?___wmul& (0+255),w,b
 10921  011D82  6EF6               	movwf	tblptrl,c
 10922  011D84  0EF4               	movlw	high __powers_
 10923  011D86  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10924  011D88  6EF7               	movwf	tblptrh,c
 10925  011D8A                     	if	1	;There are 3 active tblptr bytes
 10926  011D8A  6AF8               	clrf	tblptru,c
 10927  011D8C  0E00               	movlw	low (__mediumconst shr (0+16))
 10928  011D8E  22F8               	addwfc	tblptru,f,c
 10929  011D90                     	endif
 10930  011D90  0009               	tblrd		*+
 10931  011D92  CFF5 F146          	movff	tablat,___ftmul@f1
 10932  011D96  0009               	tblrd		*+
 10933  011D98  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10934  011D9C  000A               	tblrd		*-
 10935  011D9E  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10936  011DA2  0E00               	movlw	0
 10937  011DA4  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10938  011DA6  0E03               	movlw	3
 10939  011DA8  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10940  011DAA  0E00               	movlw	0
 10941  011DAC  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10942  011DAE  0E0A               	movlw	10
 10943  011DB0  6F19               	movwf	___awmod@divisor& (0+255),b
 10944  011DB2  515B               	movf	scale@scl& (0+255),w,b
 10945  011DB4  6F17               	movwf	___awmod@dividend& (0+255),b
 10946  011DB6  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10947  011DB8  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10948  011DBA  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10949  011DBC  ECB5  F0A9         	call	___awmod	;wreg free
 10950  011DC0  C117  F125         	movff	?___awmod,___wmul@multiplier
 10951  011DC4  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10952  011DC8  EC8A  F0AE         	call	___wmul	;wreg free
 10953  011DCC  0E39               	movlw	low __powers_
 10954  011DCE  0101               	movlb	1	; () banked
 10955  011DD0  2525               	addwf	?___wmul& (0+255),w,b
 10956  011DD2  6EF6               	movwf	tblptrl,c
 10957  011DD4  0EF4               	movlw	high __powers_
 10958  011DD6  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10959  011DD8  6EF7               	movwf	tblptrh,c
 10960  011DDA                     	if	1	;There are 3 active tblptr bytes
 10961  011DDA  6AF8               	clrf	tblptru,c
 10962  011DDC  0E00               	movlw	low (__mediumconst shr (0+16))
 10963  011DDE  22F8               	addwfc	tblptru,f,c
 10964  011DE0                     	endif
 10965  011DE0  0009               	tblrd		*+
 10966  011DE2  CFF5 F149          	movff	tablat,___ftmul@f2
 10967  011DE6  0009               	tblrd		*+
 10968  011DE8  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10969  011DEC  000A               	tblrd		*-
 10970  011DEE  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10971  011DF2  EC84  F0A1         	call	___ftmul	;wreg free
 10972  011DF6  C146  F155         	movff	?___ftmul,?_scale
 10973  011DFA  C147  F156         	movff	?___ftmul+1,?_scale+1
 10974  011DFE  C148  F157         	movff	?___ftmul+2,?_scale+2
 10975  011E02  0012               	return	
 10976  011E04                     l1063:
 10977                           
 10978                           ;doprnt.c: 440: return _powers_[scl];
 10979  011E04  0101               	movlb	1	; () banked
 10980  011E06  515B               	movf	scale@scl& (0+255),w,b
 10981  011E08  0D03               	mullw	3
 10982  011E0A  0E39               	movlw	low __powers_
 10983  011E0C  24F3               	addwf	prodl,w,c
 10984  011E0E  6EF6               	movwf	tblptrl,c
 10985  011E10  0EF4               	movlw	high __powers_
 10986  011E12  20F4               	addwfc	prodh,w,c
 10987  011E14  6EF7               	movwf	tblptrh,c
 10988  011E16                     	if	1	;There are 3 active tblptr bytes
 10989  011E16  6AF8               	clrf	tblptru,c
 10990  011E18  0E00               	movlw	low (__mediumconst shr (0+16))
 10991  011E1A  22F8               	addwfc	tblptru,f,c
 10992  011E1C                     	endif
 10993  011E1C  0009               	tblrd		*+
 10994  011E1E  CFF5 F155          	movff	tablat,?_scale
 10995  011E22  0009               	tblrd		*+
 10996  011E24  CFF5 F156          	movff	tablat,?_scale+1
 10997  011E28  000A               	tblrd		*-
 10998  011E2A  CFF5 F157          	movff	tablat,?_scale+2
 10999  011E2E  0012               	return	
 11000  011E30                     __end_of_scale:
 11001                           	opt stack 0
 11002                           tblptru	equ	0xFF8
 11003                           tblptrh	equ	0xFF7
 11004                           tblptrl	equ	0xFF6
 11005                           tablat	equ	0xFF5
 11006                           prodh	equ	0xFF4
 11007                           prodl	equ	0xFF3
 11008                           intcon	equ	0xFF2
 11009                           postinc0	equ	0xFEE
 11010                           wreg	equ	0xFE8
 11011                           indf1	equ	0xFE7
 11012                           postdec1	equ	0xFE5
 11013                           fsr1h	equ	0xFE2
 11014                           fsr1l	equ	0xFE1
 11015                           indf2	equ	0xFDF
 11016                           postinc2	equ	0xFDE
 11017                           postdec2	equ	0xFDD
 11018                           fsr2h	equ	0xFDA
 11019                           fsr2l	equ	0xFD9
 11020                           status	equ	0xFD8
 11021                           
 11022 ;; *************** function _putch *****************
 11023 ;; Defined at:
 11024 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 11025 ;; Parameters:    Size  Location     Type
 11026 ;;  txData          1    wreg     unsigned char 
 11027 ;; Auto vars:     Size  Location     Type
 11028 ;;  txData          1   24[BANK1 ] unsigned char 
 11029 ;; Return value:  Size  Location     Type
 11030 ;;                  1    wreg      void 
 11031 ;; Registers used:
 11032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11033 ;; Tracked objects:
 11034 ;;		On entry : 0/0
 11035 ;;		On exit  : 0/0
 11036 ;;		Unchanged: 0/0
 11037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11039 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11041 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11042 ;;Total ram usage:        1 bytes
 11043 ;; Hardware stack levels used:    1
 11044 ;; Hardware stack levels required when called:   15
 11045 ;; This function calls:
 11046 ;;		_EUSART2_Write
 11047 ;; This function is called by:
 11048 ;;		_printf
 11049 ;; This function uses a non-reentrant model
 11050 ;;
 11051                           
 11052                           	psect	text21
 11053  015F42                     __ptext21:
 11054                           	opt stack 0
 11055  015F42                     _putch:
 11056                           	opt stack 12
 11057                           
 11058                           ;incstack = 0
 11059                           ;putch@txData stored from wreg
 11060  015F42  0101               	movlb	1	; () banked
 11061  015F44  6F18               	movwf	putch@txData& (0+255),b
 11062                           
 11063                           ;eusart2.c: 182: EUSART2_Write(txData);
 11064  015F46  0101               	movlb	1	; () banked
 11065  015F48  5118               	movf	putch@txData& (0+255),w,b
 11066  015F4A  ECFA  F0AC         	call	_EUSART2_Write
 11067  015F4E  0012               	return		;funcret
 11068  015F50                     __end_of_putch:
 11069                           	opt stack 0
 11070                           tblptru	equ	0xFF8
 11071                           tblptrh	equ	0xFF7
 11072                           tblptrl	equ	0xFF6
 11073                           tablat	equ	0xFF5
 11074                           prodh	equ	0xFF4
 11075                           prodl	equ	0xFF3
 11076                           intcon	equ	0xFF2
 11077                           postinc0	equ	0xFEE
 11078                           wreg	equ	0xFE8
 11079                           indf1	equ	0xFE7
 11080                           postdec1	equ	0xFE5
 11081                           fsr1h	equ	0xFE2
 11082                           fsr1l	equ	0xFE1
 11083                           indf2	equ	0xFDF
 11084                           postinc2	equ	0xFDE
 11085                           postdec2	equ	0xFDD
 11086                           fsr2h	equ	0xFDA
 11087                           fsr2l	equ	0xFD9
 11088                           status	equ	0xFD8
 11089                           
 11090 ;; *************** function _EUSART2_Write *****************
 11091 ;; Defined at:
 11092 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 11093 ;; Parameters:    Size  Location     Type
 11094 ;;  txData          1    wreg     unsigned char 
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;  txData          1   23[BANK1 ] unsigned char 
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  1    wreg      void 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11107 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11109 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11110 ;;Total ram usage:        1 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; Hardware stack levels required when called:   14
 11113 ;; This function calls:
 11114 ;;		Nothing
 11115 ;; This function is called by:
 11116 ;;		_putch
 11117 ;; This function uses a non-reentrant model
 11118 ;;
 11119                           
 11120                           	psect	text22
 11121  0159F4                     __ptext22:
 11122                           	opt stack 0
 11123  0159F4                     _EUSART2_Write:
 11124                           	opt stack 12
 11125                           
 11126                           ;incstack = 0
 11127                           ;EUSART2_Write@txData stored from wreg
 11128  0159F4  0101               	movlb	1	; () banked
 11129  0159F6  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 11130                           
 11131                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 11132  0159F8  D001               	goto	l374
 11133  0159FA                     l375:
 11134                           
 11135                           ; BSR set to: 1
 11136  0159FA  0004               	clrwdt		;# 
 11137  0159FC                     l374:
 11138  0159FC  0101               	movlb	1	; () banked
 11139  0159FE  51DC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 11140  015A00  B4D8               	btfsc	status,2,c
 11141  015A02  D7FB               	goto	l375
 11142                           
 11143                           ; BSR set to: 1
 11144                           ;eusart2.c: 156: }
 11145                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 11146  015A04  010E               	movlb	14	; () banked
 11147  015A06  BD2C               	btfsc	44,6,b	;volatile
 11148  015A08  D003               	goto	l377
 11149                           
 11150                           ; BSR set to: 14
 11151                           ;eusart2.c: 159: {
 11152                           ;eusart2.c: 160: TX2REG = txData;
 11153  015A0A  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 11154                           
 11155                           ;eusart2.c: 161: }
 11156  015A0E  D013               	goto	l378
 11157  015A10                     l377:
 11158                           
 11159                           ; BSR set to: 14
 11160                           ;eusart2.c: 162: else
 11161                           ;eusart2.c: 163: {
 11162                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 11163  015A10  9D2C               	bcf	44,6,b	;volatile
 11164                           
 11165                           ; BSR set to: 14
 11166                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 11167  015A12  0101               	movlb	1	; () banked
 11168  015A14  51DE               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 11169  015A16  0D01               	mullw	1
 11170  015A18  0E00               	movlw	low _eusart2TxBuffer
 11171  015A1A  24F3               	addwf	prodl,w,c
 11172  015A1C  6ED9               	movwf	fsr2l,c
 11173  015A1E  0E02               	movlw	high _eusart2TxBuffer
 11174  015A20  20F4               	addwfc	prodh,w,c
 11175  015A22  6EDA               	movwf	fsr2h,c
 11176  015A24  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 11177                           
 11178                           ; BSR set to: 1
 11179  015A28  2BDE               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 11180                           
 11181                           ; BSR set to: 1
 11182                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 11183  015A2A  0E7F               	movlw	127
 11184  015A2C  65DE               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 11185  015A2E  D002               	goto	l379
 11186                           
 11187                           ; BSR set to: 1
 11188                           ;eusart2.c: 167: {
 11189                           ;eusart2.c: 168: eusart2TxHead = 0;
 11190  015A30  0E00               	movlw	0
 11191  015A32  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 11192  015A34                     l379:
 11193                           
 11194                           ; BSR set to: 1
 11195                           ;eusart2.c: 169: }
 11196                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 11197                           
 11198                           ; BSR set to: 1
 11199  015A34  07DC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 11200  015A36                     l378:
 11201                           
 11202                           ;eusart2.c: 171: }
 11203                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 11204                           
 11205                           ; BSR set to: 1
 11206  015A36  010E               	movlb	14	; () banked
 11207  015A38  8D2C               	bsf	44,6,b	;volatile
 11208                           
 11209                           ; BSR set to: 14
 11210  015A3A  0012               	return		;funcret
 11211  015A3C                     __end_of_EUSART2_Write:
 11212                           	opt stack 0
 11213                           tblptru	equ	0xFF8
 11214                           tblptrh	equ	0xFF7
 11215                           tblptrl	equ	0xFF6
 11216                           tablat	equ	0xFF5
 11217                           prodh	equ	0xFF4
 11218                           prodl	equ	0xFF3
 11219                           intcon	equ	0xFF2
 11220                           postinc0	equ	0xFEE
 11221                           wreg	equ	0xFE8
 11222                           indf1	equ	0xFE7
 11223                           postdec1	equ	0xFE5
 11224                           fsr1h	equ	0xFE2
 11225                           fsr1l	equ	0xFE1
 11226                           indf2	equ	0xFDF
 11227                           postinc2	equ	0xFDE
 11228                           postdec2	equ	0xFDD
 11229                           fsr2h	equ	0xFDA
 11230                           fsr2l	equ	0xFD9
 11231                           status	equ	0xFD8
 11232                           
 11233 ;; *************** function _isdigit *****************
 11234 ;; Defined at:
 11235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11236 ;; Parameters:    Size  Location     Type
 11237 ;;  c               1    wreg     unsigned char 
 11238 ;; Auto vars:     Size  Location     Type
 11239 ;;  c               1   25[BANK1 ] unsigned char 
 11240 ;; Return value:  Size  Location     Type
 11241 ;;		None               void
 11242 ;; Registers used:
 11243 ;;		wreg, status,2, status,0
 11244 ;; Tracked objects:
 11245 ;;		On entry : 0/0
 11246 ;;		On exit  : 0/0
 11247 ;;		Unchanged: 0/0
 11248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11250 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11251 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11252 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11253 ;;Total ram usage:        3 bytes
 11254 ;; Hardware stack levels used:    1
 11255 ;; Hardware stack levels required when called:   14
 11256 ;; This function calls:
 11257 ;;		Nothing
 11258 ;; This function is called by:
 11259 ;;		_printf
 11260 ;;		_atoi
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text23
 11265  015E46                     __ptext23:
 11266                           	opt stack 0
 11267  015E46                     _isdigit:
 11268                           	opt stack 13
 11269                           
 11270                           ; BSR set to: 14
 11271                           ;incstack = 0
 11272                           ;isdigit@c stored from wreg
 11273  015E46  0101               	movlb	1	; () banked
 11274  015E48  6F19               	movwf	isdigit@c& (0+255),b
 11275  015E4A  0E00               	movlw	0
 11276  015E4C  0101               	movlb	1	; () banked
 11277  015E4E  6F18               	movwf	_isdigit$2486& (0+255),b
 11278                           
 11279                           ; BSR set to: 1
 11280  015E50  0E3A               	movlw	58
 11281  015E52  6119               	cpfslt	isdigit@c& (0+255),b
 11282  015E54  D005               	goto	l1566
 11283                           
 11284                           ; BSR set to: 1
 11285  015E56  0E2F               	movlw	47
 11286  015E58  6519               	cpfsgt	isdigit@c& (0+255),b
 11287  015E5A  D002               	goto	l1566
 11288                           
 11289                           ; BSR set to: 1
 11290  015E5C  0E01               	movlw	1
 11291  015E5E  6F18               	movwf	_isdigit$2486& (0+255),b
 11292  015E60                     l1566:
 11293                           
 11294                           ; BSR set to: 1
 11295                           
 11296                           ; BSR set to: 1
 11297  015E60  C118  F117         	movff	_isdigit$2486,??_isdigit
 11298  015E64  3117               	rrcf	??_isdigit& (0+255),w,b
 11299  015E66  0012               	return	
 11300  015E68                     __end_of_isdigit:
 11301                           	opt stack 0
 11302                           tblptru	equ	0xFF8
 11303                           tblptrh	equ	0xFF7
 11304                           tblptrl	equ	0xFF6
 11305                           tablat	equ	0xFF5
 11306                           prodh	equ	0xFF4
 11307                           prodl	equ	0xFF3
 11308                           intcon	equ	0xFF2
 11309                           postinc0	equ	0xFEE
 11310                           wreg	equ	0xFE8
 11311                           indf1	equ	0xFE7
 11312                           postdec1	equ	0xFE5
 11313                           fsr1h	equ	0xFE2
 11314                           fsr1l	equ	0xFE1
 11315                           indf2	equ	0xFDF
 11316                           postinc2	equ	0xFDE
 11317                           postdec2	equ	0xFDD
 11318                           fsr2h	equ	0xFDA
 11319                           fsr2l	equ	0xFD9
 11320                           status	equ	0xFD8
 11321                           
 11322 ;; *************** function _fround *****************
 11323 ;; Defined at:
 11324 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;  prec            1    wreg     unsigned char 
 11327 ;; Auto vars:     Size  Location     Type
 11328 ;;  prec            1   94[BANK1 ] unsigned char 
 11329 ;; Return value:  Size  Location     Type
 11330 ;;                  3   85[BANK1 ] unsigned char 
 11331 ;; Registers used:
 11332 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11333 ;; Tracked objects:
 11334 ;;		On entry : 0/0
 11335 ;;		On exit  : 0/0
 11336 ;;		Unchanged: 0/0
 11337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11338 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11339 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11341 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11342 ;;Total ram usage:       10 bytes
 11343 ;; Hardware stack levels used:    1
 11344 ;; Hardware stack levels required when called:   16
 11345 ;; This function calls:
 11346 ;;		___awdiv
 11347 ;;		___awmod
 11348 ;;		___ftmul
 11349 ;;		___wmul
 11350 ;; This function is called by:
 11351 ;;		_printf
 11352 ;; This function uses a non-reentrant model
 11353 ;;
 11354                           
 11355                           	psect	text24
 11356  0129F6                     __ptext24:
 11357                           	opt stack 0
 11358  0129F6                     _fround:
 11359                           	opt stack 11
 11360                           
 11361                           ; BSR set to: 1
 11362                           ;incstack = 0
 11363                           ;fround@prec stored from wreg
 11364  0129F6  0101               	movlb	1	; () banked
 11365  0129F8  6F5E               	movwf	fround@prec& (0+255),b
 11366                           
 11367                           ;doprnt.c: 413: if(prec>=110)
 11368  0129FA  0E6D               	movlw	109
 11369  0129FC  0101               	movlb	1	; () banked
 11370  0129FE  655E               	cpfsgt	fround@prec& (0+255),b
 11371  012A00  D0AF               	goto	l1050
 11372                           
 11373                           ; BSR set to: 1
 11374                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11375  012A02  0E00               	movlw	0
 11376  012A04  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11377  012A06  0E03               	movlw	3
 11378  012A08  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11379  012A0A  0E00               	movlw	0
 11380  012A0C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11381  012A0E  0E0A               	movlw	10
 11382  012A10  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11383  012A12  0E00               	movlw	0
 11384  012A14  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11385  012A16  0E64               	movlw	100
 11386  012A18  6F19               	movwf	___awmod@divisor& (0+255),b
 11387  012A1A  C15E  F117         	movff	fround@prec,___awmod@dividend
 11388  012A1E  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11389  012A20  ECB5  F0A9         	call	___awmod	;wreg free
 11390  012A24  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11391  012A28  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11392  012A2C  ECFC  F0A7         	call	___awdiv	;wreg free
 11393  012A30  0E09               	movlw	9
 11394  012A32  0101               	movlb	1	; () banked
 11395  012A34  251D               	addwf	?___awdiv& (0+255),w,b
 11396  012A36  6F25               	movwf	___wmul@multiplier& (0+255),b
 11397  012A38  0E00               	movlw	0
 11398  012A3A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11399  012A3C  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11400  012A3E  EC8A  F0AE         	call	___wmul	;wreg free
 11401  012A42  0E60               	movlw	low __npowers_
 11402  012A44  0101               	movlb	1	; () banked
 11403  012A46  2525               	addwf	?___wmul& (0+255),w,b
 11404  012A48  6EF6               	movwf	tblptrl,c
 11405  012A4A  0EF4               	movlw	high __npowers_
 11406  012A4C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11407  012A4E  6EF7               	movwf	tblptrh,c
 11408  012A50                     	if	1	;There are 3 active tblptr bytes
 11409  012A50  6AF8               	clrf	tblptru,c
 11410  012A52  0E00               	movlw	low (__mediumconst shr (0+16))
 11411  012A54  22F8               	addwfc	tblptru,f,c
 11412  012A56                     	endif
 11413  012A56  0009               	tblrd		*+
 11414  012A58  CFF5 F149          	movff	tablat,___ftmul@f2
 11415  012A5C  0009               	tblrd		*+
 11416  012A5E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11417  012A62  000A               	tblrd		*-
 11418  012A64  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11419  012A68  0E00               	movlw	0
 11420  012A6A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11421  012A6C  0E64               	movlw	100
 11422  012A6E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11423  012A70  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 11424  012A74  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11425  012A76  ECFC  F0A7         	call	___awdiv	;wreg free
 11426  012A7A  0E12               	movlw	18
 11427  012A7C  0101               	movlb	1	; () banked
 11428  012A7E  251D               	addwf	?___awdiv& (0+255),w,b
 11429  012A80  6F25               	movwf	___wmul@multiplier& (0+255),b
 11430  012A82  0E00               	movlw	0
 11431  012A84  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11432  012A86  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11433  012A88  0E00               	movlw	0
 11434  012A8A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11435  012A8C  0E03               	movlw	3
 11436  012A8E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11437  012A90  EC8A  F0AE         	call	___wmul	;wreg free
 11438  012A94  0E60               	movlw	low __npowers_
 11439  012A96  0101               	movlb	1	; () banked
 11440  012A98  2525               	addwf	?___wmul& (0+255),w,b
 11441  012A9A  6EF6               	movwf	tblptrl,c
 11442  012A9C  0EF4               	movlw	high __npowers_
 11443  012A9E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11444  012AA0  6EF7               	movwf	tblptrh,c
 11445  012AA2                     	if	1	;There are 3 active tblptr bytes
 11446  012AA2  6AF8               	clrf	tblptru,c
 11447  012AA4  0E00               	movlw	low (__mediumconst shr (0+16))
 11448  012AA6  22F8               	addwfc	tblptru,f,c
 11449  012AA8                     	endif
 11450  012AA8  0009               	tblrd		*+
 11451  012AAA  CFF5 F146          	movff	tablat,___ftmul@f1
 11452  012AAE  0009               	tblrd		*+
 11453  012AB0  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11454  012AB4  000A               	tblrd		*-
 11455  012AB6  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11456  012ABA  EC84  F0A1         	call	___ftmul	;wreg free
 11457  012ABE  C146  F15B         	movff	?___ftmul,_fround$3128
 11458  012AC2  C147  F15C         	movff	?___ftmul+1,_fround$3128+1
 11459  012AC6  C148  F15D         	movff	?___ftmul+2,_fround$3128+2
 11460                           
 11461                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11462  012ACA  0E00               	movlw	0
 11463  012ACC  0101               	movlb	1	; () banked
 11464  012ACE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11465  012AD0  0E03               	movlw	3
 11466  012AD2  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11467  012AD4  0E00               	movlw	0
 11468  012AD6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11469  012AD8  0E0A               	movlw	10
 11470  012ADA  6F19               	movwf	___awmod@divisor& (0+255),b
 11471  012ADC  C15E  F117         	movff	fround@prec,___awmod@dividend
 11472  012AE0  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11473  012AE2  ECB5  F0A9         	call	___awmod	;wreg free
 11474  012AE6  C117  F125         	movff	?___awmod,___wmul@multiplier
 11475  012AEA  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11476  012AEE  EC8A  F0AE         	call	___wmul	;wreg free
 11477  012AF2  0E60               	movlw	low __npowers_
 11478  012AF4  0101               	movlb	1	; () banked
 11479  012AF6  2525               	addwf	?___wmul& (0+255),w,b
 11480  012AF8  6EF6               	movwf	tblptrl,c
 11481  012AFA  0EF4               	movlw	high __npowers_
 11482  012AFC  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11483  012AFE  6EF7               	movwf	tblptrh,c
 11484  012B00                     	if	1	;There are 3 active tblptr bytes
 11485  012B00  6AF8               	clrf	tblptru,c
 11486  012B02  0E00               	movlw	low (__mediumconst shr (0+16))
 11487  012B04  22F8               	addwfc	tblptru,f,c
 11488  012B06                     	endif
 11489  012B06  0009               	tblrd		*+
 11490  012B08  CFF5 F149          	movff	tablat,___ftmul@f2
 11491  012B0C  0009               	tblrd		*+
 11492  012B0E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11493  012B12  000A               	tblrd		*-
 11494  012B14  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11495  012B18  C15B  F146         	movff	_fround$3128,___ftmul@f1
 11496  012B1C  C15C  F147         	movff	_fround$3128+1,___ftmul@f1+1
 11497  012B20  C15D  F148         	movff	_fround$3128+2,___ftmul@f1+2
 11498  012B24  EC84  F0A1         	call	___ftmul	;wreg free
 11499  012B28  C146  F158         	movff	?___ftmul,_fround$3129
 11500  012B2C  C147  F159         	movff	?___ftmul+1,_fround$3129+1
 11501  012B30  C148  F15A         	movff	?___ftmul+2,_fround$3129+2
 11502                           
 11503                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11504  012B34  C158  F146         	movff	_fround$3129,___ftmul@f1
 11505  012B38  C159  F147         	movff	_fround$3129+1,___ftmul@f1+1
 11506  012B3C  C15A  F148         	movff	_fround$3129+2,___ftmul@f1+2
 11507  012B40  0E00               	movlw	0
 11508  012B42  0101               	movlb	1	; () banked
 11509  012B44  6F49               	movwf	___ftmul@f2& (0+255),b
 11510  012B46  0E00               	movlw	0
 11511  012B48  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11512  012B4A  0E3F               	movlw	63
 11513  012B4C  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11514  012B4E  EC84  F0A1         	call	___ftmul	;wreg free
 11515  012B52  C146  F155         	movff	?___ftmul,?_fround
 11516  012B56  C147  F156         	movff	?___ftmul+1,?_fround+1
 11517  012B5A  C148  F157         	movff	?___ftmul+2,?_fround+2
 11518  012B5E  0012               	return	
 11519  012B60                     l1050:
 11520                           
 11521                           ;doprnt.c: 415: else if(prec > 10)
 11522  012B60  0E0A               	movlw	10
 11523  012B62  0101               	movlb	1	; () banked
 11524  012B64  655E               	cpfsgt	fround@prec& (0+255),b
 11525  012B66  D06D               	goto	l1053
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11529  012B68  0E00               	movlw	0
 11530  012B6A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11531  012B6C  0E03               	movlw	3
 11532  012B6E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11533  012B70  0E00               	movlw	0
 11534  012B72  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11535  012B74  0E0A               	movlw	10
 11536  012B76  6F19               	movwf	___awmod@divisor& (0+255),b
 11537  012B78  C15E  F117         	movff	fround@prec,___awmod@dividend
 11538  012B7C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11539  012B7E  ECB5  F0A9         	call	___awmod	;wreg free
 11540  012B82  C117  F125         	movff	?___awmod,___wmul@multiplier
 11541  012B86  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11542  012B8A  EC8A  F0AE         	call	___wmul	;wreg free
 11543  012B8E  0E60               	movlw	low __npowers_
 11544  012B90  0101               	movlb	1	; () banked
 11545  012B92  2525               	addwf	?___wmul& (0+255),w,b
 11546  012B94  6EF6               	movwf	tblptrl,c
 11547  012B96  0EF4               	movlw	high __npowers_
 11548  012B98  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11549  012B9A  6EF7               	movwf	tblptrh,c
 11550  012B9C                     	if	1	;There are 3 active tblptr bytes
 11551  012B9C  6AF8               	clrf	tblptru,c
 11552  012B9E  0E00               	movlw	low (__mediumconst shr (0+16))
 11553  012BA0  22F8               	addwfc	tblptru,f,c
 11554  012BA2                     	endif
 11555  012BA2  0009               	tblrd		*+
 11556  012BA4  CFF5 F149          	movff	tablat,___ftmul@f2
 11557  012BA8  0009               	tblrd		*+
 11558  012BAA  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11559  012BAE  000A               	tblrd		*-
 11560  012BB0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11561  012BB4  0E00               	movlw	0
 11562  012BB6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11563  012BB8  0E0A               	movlw	10
 11564  012BBA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11565  012BBC  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 11566  012BC0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11567  012BC2  ECFC  F0A7         	call	___awdiv	;wreg free
 11568  012BC6  0E09               	movlw	9
 11569  012BC8  0101               	movlb	1	; () banked
 11570  012BCA  251D               	addwf	?___awdiv& (0+255),w,b
 11571  012BCC  6F25               	movwf	___wmul@multiplier& (0+255),b
 11572  012BCE  0E00               	movlw	0
 11573  012BD0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11574  012BD2  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11575  012BD4  0E00               	movlw	0
 11576  012BD6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11577  012BD8  0E03               	movlw	3
 11578  012BDA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11579  012BDC  EC8A  F0AE         	call	___wmul	;wreg free
 11580  012BE0  0E60               	movlw	low __npowers_
 11581  012BE2  0101               	movlb	1	; () banked
 11582  012BE4  2525               	addwf	?___wmul& (0+255),w,b
 11583  012BE6  6EF6               	movwf	tblptrl,c
 11584  012BE8  0EF4               	movlw	high __npowers_
 11585  012BEA  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11586  012BEC  6EF7               	movwf	tblptrh,c
 11587  012BEE                     	if	1	;There are 3 active tblptr bytes
 11588  012BEE  6AF8               	clrf	tblptru,c
 11589  012BF0  0E00               	movlw	low (__mediumconst shr (0+16))
 11590  012BF2  22F8               	addwfc	tblptru,f,c
 11591  012BF4                     	endif
 11592  012BF4  0009               	tblrd		*+
 11593  012BF6  CFF5 F146          	movff	tablat,___ftmul@f1
 11594  012BFA  0009               	tblrd		*+
 11595  012BFC  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11596  012C00  000A               	tblrd		*-
 11597  012C02  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11598  012C06  EC84  F0A1         	call	___ftmul	;wreg free
 11599  012C0A  C146  F15B         	movff	?___ftmul,_fround$3128
 11600  012C0E  C147  F15C         	movff	?___ftmul+1,_fround$3128+1
 11601  012C12  C148  F15D         	movff	?___ftmul+2,_fround$3128+2
 11602                           
 11603                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11604  012C16  C15B  F146         	movff	_fround$3128,___ftmul@f1
 11605  012C1A  C15C  F147         	movff	_fround$3128+1,___ftmul@f1+1
 11606  012C1E  C15D  F148         	movff	_fround$3128+2,___ftmul@f1+2
 11607  012C22  0E00               	movlw	0
 11608  012C24  0101               	movlb	1	; () banked
 11609  012C26  6F49               	movwf	___ftmul@f2& (0+255),b
 11610  012C28  0E00               	movlw	0
 11611  012C2A  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11612  012C2C  0E3F               	movlw	63
 11613  012C2E  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11614  012C30  EC84  F0A1         	call	___ftmul	;wreg free
 11615  012C34  C146  F155         	movff	?___ftmul,?_fround
 11616  012C38  C147  F156         	movff	?___ftmul+1,?_fround+1
 11617  012C3C  C148  F157         	movff	?___ftmul+2,?_fround+2
 11618  012C40  0012               	return	
 11619  012C42                     l1053:
 11620                           
 11621                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11622  012C42  0101               	movlb	1	; () banked
 11623  012C44  515E               	movf	fround@prec& (0+255),w,b
 11624  012C46  0D03               	mullw	3
 11625  012C48  0E60               	movlw	low __npowers_
 11626  012C4A  24F3               	addwf	prodl,w,c
 11627  012C4C  6EF6               	movwf	tblptrl,c
 11628  012C4E  0EF4               	movlw	high __npowers_
 11629  012C50  20F4               	addwfc	prodh,w,c
 11630  012C52  6EF7               	movwf	tblptrh,c
 11631  012C54                     	if	1	;There are 3 active tblptr bytes
 11632  012C54  6AF8               	clrf	tblptru,c
 11633  012C56  0E00               	movlw	low (__mediumconst shr (0+16))
 11634  012C58  22F8               	addwfc	tblptru,f,c
 11635  012C5A                     	endif
 11636  012C5A  0009               	tblrd		*+
 11637  012C5C  CFF5 F146          	movff	tablat,___ftmul@f1
 11638  012C60  0009               	tblrd		*+
 11639  012C62  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11640  012C66  000A               	tblrd		*-
 11641  012C68  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11642  012C6C  0E00               	movlw	0
 11643  012C6E  6F49               	movwf	___ftmul@f2& (0+255),b
 11644  012C70  0E00               	movlw	0
 11645  012C72  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11646  012C74  0E3F               	movlw	63
 11647  012C76  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11648  012C78  EC84  F0A1         	call	___ftmul	;wreg free
 11649  012C7C  C146  F155         	movff	?___ftmul,?_fround
 11650  012C80  C147  F156         	movff	?___ftmul+1,?_fround+1
 11651  012C84  C148  F157         	movff	?___ftmul+2,?_fround+2
 11652  012C88  0012               	return	
 11653  012C8A                     __end_of_fround:
 11654                           	opt stack 0
 11655                           tblptru	equ	0xFF8
 11656                           tblptrh	equ	0xFF7
 11657                           tblptrl	equ	0xFF6
 11658                           tablat	equ	0xFF5
 11659                           prodh	equ	0xFF4
 11660                           prodl	equ	0xFF3
 11661                           intcon	equ	0xFF2
 11662                           postinc0	equ	0xFEE
 11663                           wreg	equ	0xFE8
 11664                           indf1	equ	0xFE7
 11665                           postdec1	equ	0xFE5
 11666                           fsr1h	equ	0xFE2
 11667                           fsr1l	equ	0xFE1
 11668                           indf2	equ	0xFDF
 11669                           postinc2	equ	0xFDE
 11670                           postdec2	equ	0xFDD
 11671                           fsr2h	equ	0xFDA
 11672                           fsr2l	equ	0xFD9
 11673                           status	equ	0xFD8
 11674                           
 11675 ;; *************** function ___wmul *****************
 11676 ;; Defined at:
 11677 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;  multiplier      2   37[BANK1 ] unsigned int 
 11680 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;  product         2   41[BANK1 ] unsigned int 
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  2   37[BANK1 ] unsigned int 
 11685 ;; Registers used:
 11686 ;;		wreg, status,2, status,0, prodl, prodh
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11692 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11693 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;Total ram usage:        6 bytes
 11697 ;; Hardware stack levels used:    1
 11698 ;; Hardware stack levels required when called:   14
 11699 ;; This function calls:
 11700 ;;		Nothing
 11701 ;; This function is called by:
 11702 ;;		_ringBufferLUT
 11703 ;;		_fround
 11704 ;;		_scale
 11705 ;;		_printf
 11706 ;;		_atoi
 11707 ;; This function uses a non-reentrant model
 11708 ;;
 11709                           
 11710                           	psect	text25
 11711  015D14                     __ptext25:
 11712                           	opt stack 0
 11713  015D14                     ___wmul:
 11714                           	opt stack 12
 11715                           
 11716                           ;incstack = 0
 11717  015D14  0101               	movlb	1	; () banked
 11718  015D16  5125               	movf	___wmul@multiplier& (0+255),w,b
 11719  015D18  0327               	mulwf	___wmul@multiplicand& (0+255),b
 11720  015D1A  CFF3 F129          	movff	prodl,___wmul@product
 11721  015D1E  CFF4 F12A          	movff	prodh,___wmul@product+1
 11722  015D22  5125               	movf	___wmul@multiplier& (0+255),w,b
 11723  015D24  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 11724  015D26  50F3               	movf	prodl,w,c
 11725  015D28  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 11726  015D2A  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 11727  015D2C  0327               	mulwf	___wmul@multiplicand& (0+255),b
 11728  015D2E  50F3               	movf	prodl,w,c
 11729  015D30  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 11730                           
 11731                           ; BSR set to: 1
 11732  015D32  C129  F125         	movff	___wmul@product,?___wmul
 11733  015D36  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 11734  015D3A  0012               	return	
 11735  015D3C                     __end_of___wmul:
 11736                           	opt stack 0
 11737                           tblptru	equ	0xFF8
 11738                           tblptrh	equ	0xFF7
 11739                           tblptrl	equ	0xFF6
 11740                           tablat	equ	0xFF5
 11741                           prodh	equ	0xFF4
 11742                           prodl	equ	0xFF3
 11743                           intcon	equ	0xFF2
 11744                           postinc0	equ	0xFEE
 11745                           wreg	equ	0xFE8
 11746                           indf1	equ	0xFE7
 11747                           postdec1	equ	0xFE5
 11748                           fsr1h	equ	0xFE2
 11749                           fsr1l	equ	0xFE1
 11750                           indf2	equ	0xFDF
 11751                           postinc2	equ	0xFDE
 11752                           postdec2	equ	0xFDD
 11753                           fsr2h	equ	0xFDA
 11754                           fsr2l	equ	0xFD9
 11755                           status	equ	0xFD8
 11756                           
 11757 ;; *************** function ___ftmul *****************
 11758 ;; Defined at:
 11759 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 11760 ;; Parameters:    Size  Location     Type
 11761 ;;  f1              3   70[BANK1 ] float 
 11762 ;;  f2              3   73[BANK1 ] float 
 11763 ;; Auto vars:     Size  Location     Type
 11764 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 11765 ;;  sign            1   84[BANK1 ] unsigned char 
 11766 ;;  cntr            1   83[BANK1 ] unsigned char 
 11767 ;;  exp             1   79[BANK1 ] unsigned char 
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  3   70[BANK1 ] float 
 11770 ;; Registers used:
 11771 ;;		wreg, status,2, status,0, cstack
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11777 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11778 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11779 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11780 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11781 ;;Total ram usage:       15 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:   15
 11784 ;; This function calls:
 11785 ;;		___ftpack
 11786 ;; This function is called by:
 11787 ;;		_ringBufferLUT
 11788 ;;		_fround
 11789 ;;		_scale
 11790 ;;		_printf
 11791 ;; This function uses a non-reentrant model
 11792 ;;
 11793                           
 11794                           	psect	text26
 11795  014308                     __ptext26:
 11796                           	opt stack 0
 11797  014308                     ___ftmul:
 11798                           	opt stack 11
 11799                           
 11800                           ; BSR set to: 1
 11801                           ;incstack = 0
 11802  014308  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 11803  01430C  0101               	movlb	1	; () banked
 11804  01430E  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 11805  014310  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 11806  014312  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 11807  014314  374C               	rlcf	??___ftmul& (0+255),f,b
 11808  014316  E301               	bnc	u9021
 11809  014318  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 11810  01431A                     u9021:
 11811  01431A  514C               	movf	??___ftmul& (0+255),w,b
 11812  01431C  6F4F               	movwf	___ftmul@exp& (0+255),b
 11813  01431E  514F               	movf	___ftmul@exp& (0+255),w,b
 11814  014320  A4D8               	btfss	status,2,c
 11815  014322  D007               	goto	l1530
 11816                           
 11817                           ; BSR set to: 1
 11818  014324  0E00               	movlw	0
 11819  014326  6F46               	movwf	?___ftmul& (0+255),b
 11820  014328  0E00               	movlw	0
 11821  01432A  6F47               	movwf	(?___ftmul+1)& (0+255),b
 11822  01432C  0E00               	movlw	0
 11823  01432E  6F48               	movwf	(?___ftmul+2)& (0+255),b
 11824                           
 11825                           ; BSR set to: 1
 11826  014330  0012               	return	
 11827  014332                     l1530:
 11828                           
 11829                           ; BSR set to: 1
 11830                           
 11831                           ; BSR set to: 1
 11832  014332  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 11833  014336  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 11834  014338  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 11835  01433A  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 11836  01433C  374C               	rlcf	??___ftmul& (0+255),f,b
 11837  01433E  E301               	bnc	u9041
 11838  014340  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 11839  014342                     u9041:
 11840  014342  514C               	movf	??___ftmul& (0+255),w,b
 11841  014344  6F54               	movwf	___ftmul@sign& (0+255),b
 11842  014346  5154               	movf	___ftmul@sign& (0+255),w,b
 11843  014348  A4D8               	btfss	status,2,c
 11844  01434A  D007               	goto	l1532
 11845                           
 11846                           ; BSR set to: 1
 11847  01434C  0E00               	movlw	0
 11848  01434E  6F46               	movwf	?___ftmul& (0+255),b
 11849  014350  0E00               	movlw	0
 11850  014352  6F47               	movwf	(?___ftmul+1)& (0+255),b
 11851  014354  0E00               	movlw	0
 11852  014356  6F48               	movwf	(?___ftmul+2)& (0+255),b
 11853                           
 11854                           ; BSR set to: 1
 11855  014358  0012               	return	
 11856  01435A                     l1532:
 11857                           
 11858                           ; BSR set to: 1
 11859                           
 11860                           ; BSR set to: 1
 11861  01435A  5154               	movf	___ftmul@sign& (0+255),w,b
 11862  01435C  0F7B               	addlw	123
 11863  01435E  274F               	addwf	___ftmul@exp& (0+255),f,b
 11864                           
 11865                           ; BSR set to: 1
 11866  014360  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 11867  014364  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 11868  014366  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 11869  014368  0E80               	movlw	128
 11870  01436A  1754               	andwf	___ftmul@sign& (0+255),f,b
 11871                           
 11872                           ; BSR set to: 1
 11873  01436C  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 11874                           
 11875                           ; BSR set to: 1
 11876  01436E  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 11877                           
 11878                           ; BSR set to: 1
 11879  014370  0EFF               	movlw	255
 11880  014372  1749               	andwf	___ftmul@f2& (0+255),f,b
 11881  014374  0EFF               	movlw	255
 11882  014376  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 11883  014378  0E00               	movlw	0
 11884  01437A  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 11885                           
 11886                           ; BSR set to: 1
 11887  01437C  0E00               	movlw	0
 11888  01437E  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 11889  014380  0E00               	movlw	0
 11890  014382  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 11891  014384  0E00               	movlw	0
 11892  014386  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 11893                           
 11894                           ; BSR set to: 1
 11895  014388  0E07               	movlw	7
 11896  01438A  6F53               	movwf	___ftmul@cntr& (0+255),b
 11897  01438C                     
 11898                           ; BSR set to: 1
 11899                           
 11900                           ; BSR set to: 1
 11901  01438C  A146               	btfss	___ftmul@f1& (0+255),0,b
 11902  01438E  D006               	goto	l1534
 11903                           
 11904                           ; BSR set to: 1
 11905  014390  5149               	movf	___ftmul@f2& (0+255),w,b
 11906  014392  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11907  014394  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 11908  014396  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11909  014398  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 11910  01439A  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11911  01439C                     l1534:
 11912                           
 11913                           ; BSR set to: 1
 11914                           
 11915                           ; BSR set to: 1
 11916  01439C  90D8               	bcf	status,0,c
 11917  01439E  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11918  0143A0  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11919  0143A2  3346               	rrcf	___ftmul@f1& (0+255),f,b
 11920  0143A4  90D8               	bcf	status,0,c
 11921  0143A6  3749               	rlcf	___ftmul@f2& (0+255),f,b
 11922  0143A8  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 11923  0143AA  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 11924                           
 11925                           ; BSR set to: 1
 11926  0143AC  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 11927  0143AE  D7EE               	goto	l1533
 11928                           
 11929                           ; BSR set to: 1
 11930                           
 11931                           ; BSR set to: 1
 11932  0143B0  0E09               	movlw	9
 11933  0143B2  6F53               	movwf	___ftmul@cntr& (0+255),b
 11934  0143B4                     
 11935                           ; BSR set to: 1
 11936                           
 11937                           ; BSR set to: 1
 11938  0143B4  A146               	btfss	___ftmul@f1& (0+255),0,b
 11939  0143B6  D006               	goto	l1537
 11940                           
 11941                           ; BSR set to: 1
 11942  0143B8  5149               	movf	___ftmul@f2& (0+255),w,b
 11943  0143BA  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 11944  0143BC  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 11945  0143BE  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 11946  0143C0  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 11947  0143C2  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 11948  0143C4                     l1537:
 11949                           
 11950                           ; BSR set to: 1
 11951                           
 11952                           ; BSR set to: 1
 11953  0143C4  90D8               	bcf	status,0,c
 11954  0143C6  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 11955  0143C8  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 11956  0143CA  3346               	rrcf	___ftmul@f1& (0+255),f,b
 11957  0143CC  90D8               	bcf	status,0,c
 11958  0143CE  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 11959  0143D0  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 11960  0143D2  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 11961                           
 11962                           ; BSR set to: 1
 11963  0143D4  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 11964  0143D6  D7EE               	goto	l1536
 11965                           
 11966                           ; BSR set to: 1
 11967                           
 11968                           ; BSR set to: 1
 11969  0143D8  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 11970  0143DC  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 11971  0143E0  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 11972  0143E4  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 11973  0143E8  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 11974  0143EC  EC88  F0A5         	call	___ftpack	;wreg free
 11975  0143F0  C117  F146         	movff	?___ftpack,?___ftmul
 11976  0143F4  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 11977  0143F8  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 11978  0143FC  0012               	return	
 11979  0143FE                     __end_of___ftmul:
 11980                           	opt stack 0
 11981                           tblptru	equ	0xFF8
 11982                           tblptrh	equ	0xFF7
 11983                           tblptrl	equ	0xFF6
 11984                           tablat	equ	0xFF5
 11985                           prodh	equ	0xFF4
 11986                           prodl	equ	0xFF3
 11987                           intcon	equ	0xFF2
 11988                           postinc0	equ	0xFEE
 11989                           wreg	equ	0xFE8
 11990                           indf1	equ	0xFE7
 11991                           postdec1	equ	0xFE5
 11992                           fsr1h	equ	0xFE2
 11993                           fsr1l	equ	0xFE1
 11994                           indf2	equ	0xFDF
 11995                           postinc2	equ	0xFDE
 11996                           postdec2	equ	0xFDD
 11997                           fsr2h	equ	0xFDA
 11998                           fsr2l	equ	0xFD9
 11999                           status	equ	0xFD8
 12000                           
 12001 ;; *************** function ___awmod *****************
 12002 ;; Defined at:
 12003 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 12004 ;; Parameters:    Size  Location     Type
 12005 ;;  dividend        2   23[BANK1 ] int 
 12006 ;;  divisor         2   25[BANK1 ] int 
 12007 ;; Auto vars:     Size  Location     Type
 12008 ;;  sign            1   28[BANK1 ] unsigned char 
 12009 ;;  counter         1   27[BANK1 ] unsigned char 
 12010 ;; Return value:  Size  Location     Type
 12011 ;;                  2   23[BANK1 ] int 
 12012 ;; Registers used:
 12013 ;;		wreg, status,2, status,0
 12014 ;; Tracked objects:
 12015 ;;		On entry : 0/0
 12016 ;;		On exit  : 0/0
 12017 ;;		Unchanged: 0/0
 12018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12019 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12020 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12022 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12023 ;;Total ram usage:        6 bytes
 12024 ;; Hardware stack levels used:    1
 12025 ;; Hardware stack levels required when called:   14
 12026 ;; This function calls:
 12027 ;;		Nothing
 12028 ;; This function is called by:
 12029 ;;		_fround
 12030 ;;		_scale
 12031 ;; This function uses a non-reentrant model
 12032 ;;
 12033                           
 12034                           	psect	text27
 12035  01536A                     __ptext27:
 12036                           	opt stack 0
 12037  01536A                     ___awmod:
 12038                           	opt stack 12
 12039                           
 12040                           ;incstack = 0
 12041  01536A  0E00               	movlw	0
 12042  01536C  0101               	movlb	1	; () banked
 12043  01536E  6F1C               	movwf	___awmod@sign& (0+255),b
 12044                           
 12045                           ; BSR set to: 1
 12046  015370  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12047  015372  D006               	goto	l1371
 12048                           
 12049                           ; BSR set to: 1
 12050  015374  6D17               	negf	___awmod@dividend& (0+255),b
 12051  015376  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12052  015378  B0D8               	btfsc	status,0,c
 12053  01537A  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12054                           
 12055                           ; BSR set to: 1
 12056  01537C  0E01               	movlw	1
 12057  01537E  6F1C               	movwf	___awmod@sign& (0+255),b
 12058  015380                     l1371:
 12059                           
 12060                           ; BSR set to: 1
 12061                           
 12062                           ; BSR set to: 1
 12063  015380  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12064  015382  D004               	goto	l1372
 12065                           
 12066                           ; BSR set to: 1
 12067  015384  6D19               	negf	___awmod@divisor& (0+255),b
 12068  015386  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 12069  015388  B0D8               	btfsc	status,0,c
 12070  01538A  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 12071  01538C                     l1372:
 12072                           
 12073                           ; BSR set to: 1
 12074                           
 12075                           ; BSR set to: 1
 12076  01538C  5119               	movf	___awmod@divisor& (0+255),w,b
 12077  01538E  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12078  015390  B4D8               	btfsc	status,2,c
 12079  015392  D018               	goto	l1379
 12080                           
 12081                           ; BSR set to: 1
 12082  015394  0E01               	movlw	1
 12083  015396  6F1B               	movwf	___awmod@counter& (0+255),b
 12084  015398  D004               	goto	l1374
 12085  01539A                     
 12086                           ; BSR set to: 1
 12087                           
 12088                           ; BSR set to: 1
 12089  01539A  90D8               	bcf	status,0,c
 12090  01539C  3719               	rlcf	___awmod@divisor& (0+255),f,b
 12091  01539E  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12092  0153A0  2B1B               	incf	___awmod@counter& (0+255),f,b
 12093  0153A2                     l1374:
 12094                           
 12095                           ; BSR set to: 1
 12096                           
 12097                           ; BSR set to: 1
 12098  0153A2  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12099  0153A4  D7FA               	goto	l1375
 12100  0153A6                     u9190:
 12101                           
 12102                           ; BSR set to: 1
 12103                           
 12104                           ; BSR set to: 1
 12105                           
 12106                           ; BSR set to: 1
 12107  0153A6  5119               	movf	___awmod@divisor& (0+255),w,b
 12108  0153A8  5D17               	subwf	___awmod@dividend& (0+255),w,b
 12109  0153AA  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 12110  0153AC  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12111  0153AE  A0D8               	btfss	status,0,c
 12112  0153B0  D004               	goto	l1378
 12113                           
 12114                           ; BSR set to: 1
 12115  0153B2  5119               	movf	___awmod@divisor& (0+255),w,b
 12116  0153B4  5F17               	subwf	___awmod@dividend& (0+255),f,b
 12117  0153B6  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 12118  0153B8  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12119  0153BA                     l1378:
 12120                           
 12121                           ; BSR set to: 1
 12122                           
 12123                           ; BSR set to: 1
 12124  0153BA  90D8               	bcf	status,0,c
 12125  0153BC  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12126  0153BE  3319               	rrcf	___awmod@divisor& (0+255),f,b
 12127                           
 12128                           ; BSR set to: 1
 12129  0153C0  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 12130  0153C2  D7F1               	goto	u9190
 12131  0153C4                     l1379:
 12132                           
 12133                           ; BSR set to: 1
 12134                           
 12135                           ; BSR set to: 1
 12136                           
 12137                           ; BSR set to: 1
 12138  0153C4  511C               	movf	___awmod@sign& (0+255),w,b
 12139  0153C6  B4D8               	btfsc	status,2,c
 12140  0153C8  D004               	goto	l1380
 12141                           
 12142                           ; BSR set to: 1
 12143  0153CA  6D17               	negf	___awmod@dividend& (0+255),b
 12144  0153CC  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12145  0153CE  B0D8               	btfsc	status,0,c
 12146  0153D0  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12147  0153D2                     l1380:
 12148                           
 12149                           ; BSR set to: 1
 12150                           
 12151                           ; BSR set to: 1
 12152  0153D2  C117  F117         	movff	___awmod@dividend,?___awmod
 12153  0153D6  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 12154  0153DA  0012               	return	
 12155  0153DC                     __end_of___awmod:
 12156                           	opt stack 0
 12157                           tblptru	equ	0xFF8
 12158                           tblptrh	equ	0xFF7
 12159                           tblptrl	equ	0xFF6
 12160                           tablat	equ	0xFF5
 12161                           prodh	equ	0xFF4
 12162                           prodl	equ	0xFF3
 12163                           intcon	equ	0xFF2
 12164                           postinc0	equ	0xFEE
 12165                           wreg	equ	0xFE8
 12166                           indf1	equ	0xFE7
 12167                           postdec1	equ	0xFE5
 12168                           fsr1h	equ	0xFE2
 12169                           fsr1l	equ	0xFE1
 12170                           indf2	equ	0xFDF
 12171                           postinc2	equ	0xFDE
 12172                           postdec2	equ	0xFDD
 12173                           fsr2h	equ	0xFDA
 12174                           fsr2l	equ	0xFD9
 12175                           status	equ	0xFD8
 12176                           
 12177 ;; *************** function ___awdiv *****************
 12178 ;; Defined at:
 12179 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  dividend        2   29[BANK1 ] int 
 12182 ;;  divisor         2   31[BANK1 ] int 
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;  quotient        2   35[BANK1 ] int 
 12185 ;;  sign            1   34[BANK1 ] unsigned char 
 12186 ;;  counter         1   33[BANK1 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  2   29[BANK1 ] int 
 12189 ;; Registers used:
 12190 ;;		wreg, status,2, status,0
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12196 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12199 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12200 ;;Total ram usage:        8 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:   14
 12203 ;; This function calls:
 12204 ;;		Nothing
 12205 ;; This function is called by:
 12206 ;;		_fround
 12207 ;;		_scale
 12208 ;;		_printf
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text28
 12213  014FF8                     __ptext28:
 12214                           	opt stack 0
 12215  014FF8                     ___awdiv:
 12216                           	opt stack 12
 12217                           
 12218                           ; BSR set to: 1
 12219                           ;incstack = 0
 12220  014FF8  0E00               	movlw	0
 12221  014FFA  0101               	movlb	1	; () banked
 12222  014FFC  6F22               	movwf	___awdiv@sign& (0+255),b
 12223                           
 12224                           ; BSR set to: 1
 12225  014FFE  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12226  015000  D006               	goto	l1358
 12227                           
 12228                           ; BSR set to: 1
 12229  015002  6D1F               	negf	___awdiv@divisor& (0+255),b
 12230  015004  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12231  015006  B0D8               	btfsc	status,0,c
 12232  015008  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12233                           
 12234                           ; BSR set to: 1
 12235  01500A  0E01               	movlw	1
 12236  01500C  6F22               	movwf	___awdiv@sign& (0+255),b
 12237  01500E                     l1358:
 12238                           
 12239                           ; BSR set to: 1
 12240                           
 12241                           ; BSR set to: 1
 12242  01500E  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12243  015010  D006               	goto	l1359
 12244                           
 12245                           ; BSR set to: 1
 12246  015012  6D1D               	negf	___awdiv@dividend& (0+255),b
 12247  015014  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12248  015016  B0D8               	btfsc	status,0,c
 12249  015018  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12250                           
 12251                           ; BSR set to: 1
 12252  01501A  0E01               	movlw	1
 12253  01501C  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 12254  01501E                     l1359:
 12255                           
 12256                           ; BSR set to: 1
 12257                           
 12258                           ; BSR set to: 1
 12259  01501E  0E00               	movlw	0
 12260  015020  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 12261  015022  0E00               	movlw	0
 12262  015024  6F23               	movwf	___awdiv@quotient& (0+255),b
 12263                           
 12264                           ; BSR set to: 1
 12265  015026  511F               	movf	___awdiv@divisor& (0+255),w,b
 12266  015028  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12267  01502A  B4D8               	btfsc	status,2,c
 12268  01502C  D01C               	goto	l1366
 12269                           
 12270                           ; BSR set to: 1
 12271  01502E  0E01               	movlw	1
 12272  015030  6F21               	movwf	___awdiv@counter& (0+255),b
 12273  015032  D004               	goto	l1361
 12274  015034                     
 12275                           ; BSR set to: 1
 12276                           
 12277                           ; BSR set to: 1
 12278  015034  90D8               	bcf	status,0,c
 12279  015036  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 12280  015038  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12281  01503A  2B21               	incf	___awdiv@counter& (0+255),f,b
 12282  01503C                     l1361:
 12283                           
 12284                           ; BSR set to: 1
 12285                           
 12286                           ; BSR set to: 1
 12287  01503C  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12288  01503E  D7FA               	goto	l1362
 12289  015040                     u9130:
 12290                           
 12291                           ; BSR set to: 1
 12292                           
 12293                           ; BSR set to: 1
 12294                           
 12295                           ; BSR set to: 1
 12296  015040  90D8               	bcf	status,0,c
 12297  015042  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 12298  015044  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12299                           
 12300                           ; BSR set to: 1
 12301  015046  511F               	movf	___awdiv@divisor& (0+255),w,b
 12302  015048  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 12303  01504A  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12304  01504C  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12305  01504E  A0D8               	btfss	status,0,c
 12306  015050  D005               	goto	l1365
 12307                           
 12308                           ; BSR set to: 1
 12309  015052  511F               	movf	___awdiv@divisor& (0+255),w,b
 12310  015054  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 12311  015056  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12312  015058  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12313                           
 12314                           ; BSR set to: 1
 12315  01505A  8123               	bsf	___awdiv@quotient& (0+255),0,b
 12316  01505C                     l1365:
 12317                           
 12318                           ; BSR set to: 1
 12319                           
 12320                           ; BSR set to: 1
 12321  01505C  90D8               	bcf	status,0,c
 12322  01505E  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12323  015060  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 12324                           
 12325                           ; BSR set to: 1
 12326  015062  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 12327  015064  D7ED               	goto	u9130
 12328  015066                     l1366:
 12329                           
 12330                           ; BSR set to: 1
 12331                           
 12332                           ; BSR set to: 1
 12333                           
 12334                           ; BSR set to: 1
 12335  015066  5122               	movf	___awdiv@sign& (0+255),w,b
 12336  015068  B4D8               	btfsc	status,2,c
 12337  01506A  D004               	goto	l1367
 12338                           
 12339                           ; BSR set to: 1
 12340  01506C  6D23               	negf	___awdiv@quotient& (0+255),b
 12341  01506E  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12342  015070  B0D8               	btfsc	status,0,c
 12343  015072  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12344  015074                     l1367:
 12345                           
 12346                           ; BSR set to: 1
 12347                           
 12348                           ; BSR set to: 1
 12349  015074  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 12350  015078  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 12351  01507C  0012               	return	
 12352  01507E                     __end_of___awdiv:
 12353                           	opt stack 0
 12354                           tblptru	equ	0xFF8
 12355                           tblptrh	equ	0xFF7
 12356                           tblptrl	equ	0xFF6
 12357                           tablat	equ	0xFF5
 12358                           prodh	equ	0xFF4
 12359                           prodl	equ	0xFF3
 12360                           intcon	equ	0xFF2
 12361                           postinc0	equ	0xFEE
 12362                           wreg	equ	0xFE8
 12363                           indf1	equ	0xFE7
 12364                           postdec1	equ	0xFE5
 12365                           fsr1h	equ	0xFE2
 12366                           fsr1l	equ	0xFE1
 12367                           indf2	equ	0xFDF
 12368                           postinc2	equ	0xFDE
 12369                           postdec2	equ	0xFDD
 12370                           fsr2h	equ	0xFDA
 12371                           fsr2l	equ	0xFD9
 12372                           status	equ	0xFD8
 12373                           
 12374 ;; *************** function __tdiv_to_l_ *****************
 12375 ;; Defined at:
 12376 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12377 ;; Parameters:    Size  Location     Type
 12378 ;;  f1              3   23[BANK1 ] float 
 12379 ;;  f2              3   26[BANK1 ] float 
 12380 ;; Auto vars:     Size  Location     Type
 12381 ;;  quot            4   32[BANK1 ] unsigned long 
 12382 ;;  exp1            1   37[BANK1 ] unsigned char 
 12383 ;;  cntr            1   36[BANK1 ] unsigned char 
 12384 ;; Return value:  Size  Location     Type
 12385 ;;                  4   23[BANK1 ] unsigned long 
 12386 ;; Registers used:
 12387 ;;		wreg, status,2, status,0
 12388 ;; Tracked objects:
 12389 ;;		On entry : 0/0
 12390 ;;		On exit  : 0/0
 12391 ;;		Unchanged: 0/0
 12392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12393 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12394 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12395 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12396 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12397 ;;Total ram usage:       15 bytes
 12398 ;; Hardware stack levels used:    1
 12399 ;; Hardware stack levels required when called:   14
 12400 ;; This function calls:
 12401 ;;		Nothing
 12402 ;; This function is called by:
 12403 ;;		_printf
 12404 ;; This function uses a non-reentrant model
 12405 ;;
 12406                           
 12407                           	psect	text29
 12408  013C3C                     __ptext29:
 12409                           	opt stack 0
 12410  013C3C                     __tdiv_to_l_:
 12411                           	opt stack 13
 12412                           
 12413                           ; BSR set to: 1
 12414                           ;incstack = 0
 12415  013C3C  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 12416  013C40  0101               	movlb	1	; () banked
 12417  013C42  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12418  013C44  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12419  013C46  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12420  013C48  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12421  013C4A  E301               	bnc	u9421
 12422  013C4C  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12423  013C4E                     u9421:
 12424  013C4E  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 12425  013C50  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 12426  013C52  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12427  013C54  A4D8               	btfss	status,2,c
 12428  013C56  D009               	goto	l1506
 12429                           
 12430                           ; BSR set to: 1
 12431  013C58  0E00               	movlw	0
 12432  013C5A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12433  013C5C  0E00               	movlw	0
 12434  013C5E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12435  013C60  0E00               	movlw	0
 12436  013C62  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12437  013C64  0E00               	movlw	0
 12438  013C66  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12439                           
 12440                           ; BSR set to: 1
 12441  013C68  0012               	return	
 12442  013C6A                     l1506:
 12443                           
 12444                           ; BSR set to: 1
 12445                           
 12446                           ; BSR set to: 1
 12447  013C6A  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 12448  013C6E  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12449  013C70  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12450  013C72  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12451  013C74  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12452  013C76  E301               	bnc	u9441
 12453  013C78  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12454  013C7A                     u9441:
 12455  013C7A  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 12456  013C7C  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12457  013C7E  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12458  013C80  A4D8               	btfss	status,2,c
 12459  013C82  D009               	goto	l1508
 12460                           
 12461                           ; BSR set to: 1
 12462  013C84  0E00               	movlw	0
 12463  013C86  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12464  013C88  0E00               	movlw	0
 12465  013C8A  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12466  013C8C  0E00               	movlw	0
 12467  013C8E  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12468  013C90  0E00               	movlw	0
 12469  013C92  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12470                           
 12471                           ; BSR set to: 1
 12472  013C94  0012               	return	
 12473  013C96                     l1508:
 12474                           
 12475                           ; BSR set to: 1
 12476                           
 12477                           ; BSR set to: 1
 12478  013C96  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 12479                           
 12480                           ; BSR set to: 1
 12481  013C98  0EFF               	movlw	255
 12482  013C9A  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 12483  013C9C  0EFF               	movlw	255
 12484  013C9E  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12485  013CA0  0E00               	movlw	0
 12486  013CA2  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12487  013CA4  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 12488                           
 12489                           ; BSR set to: 1
 12490  013CA6  0EFF               	movlw	255
 12491  013CA8  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 12492  013CAA  0EFF               	movlw	255
 12493  013CAC  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 12494  013CAE  0E00               	movlw	0
 12495  013CB0  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 12496                           
 12497                           ; BSR set to: 1
 12498  013CB2  0E00               	movlw	0
 12499  013CB4  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 12500  013CB6  0E00               	movlw	0
 12501  013CB8  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 12502  013CBA  0E00               	movlw	0
 12503  013CBC  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 12504  013CBE  0E00               	movlw	0
 12505  013CC0  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 12506                           
 12507                           ; BSR set to: 1
 12508  013CC2  0E7F               	movlw	127
 12509  013CC4  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12510                           
 12511                           ; BSR set to: 1
 12512  013CC6  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12513  013CC8  0F98               	addlw	152
 12514  013CCA  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12515                           
 12516                           ; BSR set to: 1
 12517  013CCC  0E18               	movlw	24
 12518  013CCE  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12519  013CD0                     l1509:
 12520                           
 12521                           ; BSR set to: 1
 12522  013CD0  90D8               	bcf	status,0,c
 12523  013CD2  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12524  013CD4  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12525  013CD6  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12526  013CD8  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12527                           
 12528                           ; BSR set to: 1
 12529  013CDA  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12530  013CDC  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 12531  013CDE  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12532  013CE0  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12533  013CE2  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12534  013CE4  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 12535  013CE6  A0D8               	btfss	status,0,c
 12536  013CE8  D007               	goto	l1510
 12537                           
 12538                           ; BSR set to: 1
 12539  013CEA  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12540  013CEC  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 12541  013CEE  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12542  013CF0  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12543  013CF2  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12544  013CF4  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12545                           
 12546                           ; BSR set to: 1
 12547  013CF6  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 12548  013CF8                     l1510:
 12549                           
 12550                           ; BSR set to: 1
 12551  013CF8  90D8               	bcf	status,0,c
 12552  013CFA  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 12553  013CFC  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12554  013CFE  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12555                           
 12556                           ; BSR set to: 1
 12557  013D00  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 12558  013D02  D7E6               	goto	l1509
 12559                           
 12560                           ; BSR set to: 1
 12561                           
 12562                           ; BSR set to: 1
 12563  013D04  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 12564  013D06  D016               	goto	l1512
 12565                           
 12566                           ; BSR set to: 1
 12567  013D08  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12568  013D0A  0A80               	xorlw	128
 12569  013D0C  0F97               	addlw	151
 12570  013D0E  B0D8               	btfsc	status,0,c
 12571  013D10  D009               	goto	l1513
 12572                           
 12573                           ; BSR set to: 1
 12574  013D12  0E00               	movlw	0
 12575  013D14  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12576  013D16  0E00               	movlw	0
 12577  013D18  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12578  013D1A  0E00               	movlw	0
 12579  013D1C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12580  013D1E  0E00               	movlw	0
 12581  013D20  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12582                           
 12583                           ; BSR set to: 1
 12584  013D22  0012               	return	
 12585  013D24                     l1513:
 12586                           
 12587                           ; BSR set to: 1
 12588                           
 12589                           ; BSR set to: 1
 12590                           
 12591                           ; BSR set to: 1
 12592  013D24  90D8               	bcf	status,0,c
 12593  013D26  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12594  013D28  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12595  013D2A  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12596  013D2C  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 12597                           
 12598                           ; BSR set to: 1
 12599  013D2E  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 12600  013D30  D7F9               	goto	l1513
 12601                           
 12602                           ; BSR set to: 1
 12603  013D32  D015               	goto	u9500
 12604  013D34                     l1512:
 12605                           
 12606                           ; BSR set to: 1
 12607                           
 12608                           ; BSR set to: 1
 12609  013D34  0E17               	movlw	23
 12610  013D36  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 12611  013D38  D00F               	goto	l1518
 12612                           
 12613                           ; BSR set to: 1
 12614  013D3A  0E00               	movlw	0
 12615  013D3C  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12616  013D3E  0E00               	movlw	0
 12617  013D40  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12618  013D42  0E00               	movlw	0
 12619  013D44  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12620  013D46  0E00               	movlw	0
 12621  013D48  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12622                           
 12623                           ; BSR set to: 1
 12624  013D4A  0012               	return	
 12625  013D4C                     
 12626                           ; BSR set to: 1
 12627                           
 12628                           ; BSR set to: 1
 12629  013D4C  90D8               	bcf	status,0,c
 12630  013D4E  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12631  013D50  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12632  013D52  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12633  013D54  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12634  013D56  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 12635  013D58                     l1518:
 12636                           
 12637                           ; BSR set to: 1
 12638                           
 12639                           ; BSR set to: 1
 12640  013D58  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12641  013D5A  A4D8               	btfss	status,2,c
 12642  013D5C  D7F7               	goto	l1519
 12643  013D5E                     u9500:
 12644                           
 12645                           ; BSR set to: 1
 12646                           
 12647                           ; BSR set to: 1
 12648  013D5E  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 12649  013D62  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 12650  013D66  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 12651  013D6A  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 12652                           
 12653                           ; BSR set to: 1
 12654  013D6E  0012               	return		;funcret
 12655  013D70                     __end_of__tdiv_to_l_:
 12656                           	opt stack 0
 12657                           tblptru	equ	0xFF8
 12658                           tblptrh	equ	0xFF7
 12659                           tblptrl	equ	0xFF6
 12660                           tablat	equ	0xFF5
 12661                           prodh	equ	0xFF4
 12662                           prodl	equ	0xFF3
 12663                           intcon	equ	0xFF2
 12664                           postinc0	equ	0xFEE
 12665                           wreg	equ	0xFE8
 12666                           indf1	equ	0xFE7
 12667                           postdec1	equ	0xFE5
 12668                           fsr1h	equ	0xFE2
 12669                           fsr1l	equ	0xFE1
 12670                           indf2	equ	0xFDF
 12671                           postinc2	equ	0xFDE
 12672                           postdec2	equ	0xFDD
 12673                           fsr2h	equ	0xFDA
 12674                           fsr2l	equ	0xFD9
 12675                           status	equ	0xFD8
 12676                           
 12677 ;; *************** function __div_to_l_ *****************
 12678 ;; Defined at:
 12679 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12680 ;; Parameters:    Size  Location     Type
 12681 ;;  f1              3   23[BANK1 ] unsigned long 
 12682 ;;  f2              3   26[BANK1 ] unsigned long 
 12683 ;; Auto vars:     Size  Location     Type
 12684 ;;  quot            4   29[BANK1 ] unsigned long 
 12685 ;;  exp1            1   34[BANK1 ] unsigned char 
 12686 ;;  cntr            1   33[BANK1 ] unsigned char 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  4   23[BANK1 ] unsigned long 
 12689 ;; Registers used:
 12690 ;;		wreg, status,2, status,0
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12696 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12697 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12699 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12700 ;;Total ram usage:       12 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:   14
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_printf
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text30
 12711  013EA2                     __ptext30:
 12712                           	opt stack 0
 12713  013EA2                     __div_to_l_:
 12714                           	opt stack 13
 12715                           
 12716                           ; BSR set to: 1
 12717                           ;incstack = 0
 12718  013EA2  0101               	movlb	1	; () banked
 12719  013EA4  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 12720  013EA6  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 12721  013EA8  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 12722  013EAA  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 12723  013EAC  A4D8               	btfss	status,2,c
 12724  013EAE  D009               	goto	l1402
 12725                           
 12726                           ; BSR set to: 1
 12727  013EB0  0E00               	movlw	0
 12728  013EB2  6F17               	movwf	?__div_to_l_& (0+255),b
 12729  013EB4  0E00               	movlw	0
 12730  013EB6  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12731  013EB8  0E00               	movlw	0
 12732  013EBA  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12733  013EBC  0E00               	movlw	0
 12734  013EBE  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12735                           
 12736                           ; BSR set to: 1
 12737  013EC0  0012               	return	
 12738  013EC2                     l1402:
 12739                           
 12740                           ; BSR set to: 1
 12741                           
 12742                           ; BSR set to: 1
 12743  013EC2  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 12744  013EC4  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 12745  013EC6  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 12746  013EC8  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 12747  013ECA  A4D8               	btfss	status,2,c
 12748  013ECC  D009               	goto	l1404
 12749                           
 12750                           ; BSR set to: 1
 12751  013ECE  0E00               	movlw	0
 12752  013ED0  6F17               	movwf	?__div_to_l_& (0+255),b
 12753  013ED2  0E00               	movlw	0
 12754  013ED4  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12755  013ED6  0E00               	movlw	0
 12756  013ED8  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12757  013EDA  0E00               	movlw	0
 12758  013EDC  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12759                           
 12760                           ; BSR set to: 1
 12761  013EDE  0012               	return	
 12762  013EE0                     l1404:
 12763                           
 12764                           ; BSR set to: 1
 12765                           
 12766                           ; BSR set to: 1
 12767  013EE0  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 12768                           
 12769                           ; BSR set to: 1
 12770  013EE2  0EFF               	movlw	255
 12771  013EE4  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 12772  013EE6  0EFF               	movlw	255
 12773  013EE8  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 12774  013EEA  0EFF               	movlw	255
 12775  013EEC  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 12776  013EEE  0E00               	movlw	0
 12777  013EF0  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 12778                           
 12779                           ; BSR set to: 1
 12780  013EF2  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 12781  013EF4  0EFF               	movlw	255
 12782  013EF6  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 12783  013EF8  0EFF               	movlw	255
 12784  013EFA  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 12785  013EFC  0EFF               	movlw	255
 12786  013EFE  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 12787  013F00  0E00               	movlw	0
 12788  013F02  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 12789                           
 12790                           ; BSR set to: 1
 12791  013F04  0E00               	movlw	0
 12792  013F06  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 12793  013F08  0E00               	movlw	0
 12794  013F0A  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 12795  013F0C  0E00               	movlw	0
 12796  013F0E  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 12797  013F10  0E00               	movlw	0
 12798  013F12  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 12799                           
 12800                           ; BSR set to: 1
 12801  013F14  0E7F               	movlw	127
 12802  013F16  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 12803                           
 12804                           ; BSR set to: 1
 12805  013F18  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 12806  013F1A  0FA0               	addlw	160
 12807  013F1C  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 12808                           
 12809                           ; BSR set to: 1
 12810  013F1E  0E20               	movlw	32
 12811  013F20  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 12812  013F22                     
 12813                           ; BSR set to: 1
 12814                           
 12815                           ; BSR set to: 1
 12816  013F22  90D8               	bcf	status,0,c
 12817  013F24  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 12818  013F26  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12819  013F28  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12820  013F2A  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12821                           
 12822                           ; BSR set to: 1
 12823  013F2C  511A               	movf	__div_to_l_@f2& (0+255),w,b
 12824  013F2E  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 12825  013F30  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12826  013F32  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 12827  013F34  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12828  013F36  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 12829  013F38  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12830  013F3A  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 12831  013F3C  A0D8               	btfss	status,0,c
 12832  013F3E  D009               	goto	l1406
 12833                           
 12834                           ; BSR set to: 1
 12835  013F40  511A               	movf	__div_to_l_@f2& (0+255),w,b
 12836  013F42  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 12837  013F44  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 12838  013F46  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 12839  013F48  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 12840  013F4A  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 12841  013F4C  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 12842  013F4E  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 12843                           
 12844                           ; BSR set to: 1
 12845  013F50  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 12846  013F52                     l1406:
 12847                           
 12848                           ; BSR set to: 1
 12849                           
 12850                           ; BSR set to: 1
 12851  013F52  90D8               	bcf	status,0,c
 12852  013F54  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 12853  013F56  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 12854  013F58  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 12855  013F5A  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 12856                           
 12857                           ; BSR set to: 1
 12858  013F5C  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 12859  013F5E  D7E1               	goto	l1405
 12860                           
 12861                           ; BSR set to: 1
 12862                           
 12863                           ; BSR set to: 1
 12864  013F60  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 12865  013F62  D016               	goto	l1408
 12866                           
 12867                           ; BSR set to: 1
 12868  013F64  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 12869  013F66  0A80               	xorlw	128
 12870  013F68  0F9F               	addlw	159
 12871  013F6A  B0D8               	btfsc	status,0,c
 12872  013F6C  D009               	goto	l1409
 12873                           
 12874                           ; BSR set to: 1
 12875  013F6E  0E00               	movlw	0
 12876  013F70  6F17               	movwf	?__div_to_l_& (0+255),b
 12877  013F72  0E00               	movlw	0
 12878  013F74  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12879  013F76  0E00               	movlw	0
 12880  013F78  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12881  013F7A  0E00               	movlw	0
 12882  013F7C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12883                           
 12884                           ; BSR set to: 1
 12885  013F7E  0012               	return	
 12886  013F80                     l1409:
 12887                           
 12888                           ; BSR set to: 1
 12889                           
 12890                           ; BSR set to: 1
 12891                           
 12892                           ; BSR set to: 1
 12893  013F80  90D8               	bcf	status,0,c
 12894  013F82  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 12895  013F84  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 12896  013F86  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 12897  013F88  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 12898                           
 12899                           ; BSR set to: 1
 12900  013F8A  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 12901  013F8C  D7F9               	goto	l1409
 12902                           
 12903                           ; BSR set to: 1
 12904  013F8E  D015               	goto	u9570
 12905  013F90                     l1408:
 12906                           
 12907                           ; BSR set to: 1
 12908                           
 12909                           ; BSR set to: 1
 12910  013F90  0E1F               	movlw	31
 12911  013F92  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 12912  013F94  D00F               	goto	l1414
 12913                           
 12914                           ; BSR set to: 1
 12915  013F96  0E00               	movlw	0
 12916  013F98  6F17               	movwf	?__div_to_l_& (0+255),b
 12917  013F9A  0E00               	movlw	0
 12918  013F9C  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 12919  013F9E  0E00               	movlw	0
 12920  013FA0  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 12921  013FA2  0E00               	movlw	0
 12922  013FA4  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 12923                           
 12924                           ; BSR set to: 1
 12925  013FA6  0012               	return	
 12926  013FA8                     
 12927                           ; BSR set to: 1
 12928                           
 12929                           ; BSR set to: 1
 12930  013FA8  90D8               	bcf	status,0,c
 12931  013FAA  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 12932  013FAC  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 12933  013FAE  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 12934  013FB0  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 12935  013FB2  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 12936  013FB4                     l1414:
 12937                           
 12938                           ; BSR set to: 1
 12939                           
 12940                           ; BSR set to: 1
 12941  013FB4  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 12942  013FB6  A4D8               	btfss	status,2,c
 12943  013FB8  D7F7               	goto	l1415
 12944  013FBA                     u9570:
 12945                           
 12946                           ; BSR set to: 1
 12947                           
 12948                           ; BSR set to: 1
 12949  013FBA  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 12950  013FBE  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 12951  013FC2  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 12952  013FC6  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 12953                           
 12954                           ; BSR set to: 1
 12955  013FCA  0012               	return		;funcret
 12956  013FCC                     __end_of__div_to_l_:
 12957                           	opt stack 0
 12958                           tblptru	equ	0xFF8
 12959                           tblptrh	equ	0xFF7
 12960                           tblptrl	equ	0xFF6
 12961                           tablat	equ	0xFF5
 12962                           prodh	equ	0xFF4
 12963                           prodl	equ	0xFF3
 12964                           intcon	equ	0xFF2
 12965                           postinc0	equ	0xFEE
 12966                           wreg	equ	0xFE8
 12967                           indf1	equ	0xFE7
 12968                           postdec1	equ	0xFE5
 12969                           fsr1h	equ	0xFE2
 12970                           fsr1l	equ	0xFE1
 12971                           indf2	equ	0xFDF
 12972                           postinc2	equ	0xFDE
 12973                           postdec2	equ	0xFDD
 12974                           fsr2h	equ	0xFDA
 12975                           fsr2l	equ	0xFD9
 12976                           status	equ	0xFD8
 12977                           
 12978 ;; *************** function ___lltoft *****************
 12979 ;; Defined at:
 12980 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 12981 ;; Parameters:    Size  Location     Type
 12982 ;;  c               4   31[BANK1 ] unsigned long 
 12983 ;; Auto vars:     Size  Location     Type
 12984 ;;  exp             1   39[BANK1 ] unsigned char 
 12985 ;; Return value:  Size  Location     Type
 12986 ;;                  3   31[BANK1 ] float 
 12987 ;; Registers used:
 12988 ;;		wreg, status,2, status,0, cstack
 12989 ;; Tracked objects:
 12990 ;;		On entry : 0/0
 12991 ;;		On exit  : 0/0
 12992 ;;		Unchanged: 0/0
 12993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12994 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12995 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12996 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12997 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12998 ;;Total ram usage:        9 bytes
 12999 ;; Hardware stack levels used:    1
 13000 ;; Hardware stack levels required when called:   15
 13001 ;; This function calls:
 13002 ;;		___ftpack
 13003 ;; This function is called by:
 13004 ;;		_printf
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008                           	psect	text31
 13009  0156AC                     __ptext31:
 13010                           	opt stack 0
 13011  0156AC                     ___lltoft:
 13012                           	opt stack 12
 13013                           
 13014                           ; BSR set to: 1
 13015                           ;incstack = 0
 13016  0156AC  0E8E               	movlw	142
 13017  0156AE  0101               	movlb	1	; () banked
 13018  0156B0  6F27               	movwf	___lltoft@exp& (0+255),b
 13019  0156B2  D006               	goto	l1613
 13020  0156B4                     
 13021                           ; BSR set to: 1
 13022                           
 13023                           ; BSR set to: 1
 13024  0156B4  90D8               	bcf	status,0,c
 13025  0156B6  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 13026  0156B8  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 13027  0156BA  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 13028  0156BC  331F               	rrcf	___lltoft@c& (0+255),f,b
 13029  0156BE  2B27               	incf	___lltoft@exp& (0+255),f,b
 13030  0156C0                     l1613:
 13031                           
 13032                           ; BSR set to: 1
 13033                           
 13034                           ; BSR set to: 1
 13035  0156C0  0E00               	movlw	0
 13036  0156C2  151F               	andwf	___lltoft@c& (0+255),w,b
 13037  0156C4  6F23               	movwf	??___lltoft& (0+255),b
 13038  0156C6  0E00               	movlw	0
 13039  0156C8  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 13040  0156CA  6F24               	movwf	(??___lltoft+1)& (0+255),b
 13041  0156CC  0E00               	movlw	0
 13042  0156CE  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 13043  0156D0  6F25               	movwf	(??___lltoft+2)& (0+255),b
 13044  0156D2  0EFF               	movlw	255
 13045  0156D4  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 13046  0156D6  6F26               	movwf	(??___lltoft+3)& (0+255),b
 13047  0156D8  5123               	movf	??___lltoft& (0+255),w,b
 13048  0156DA  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 13049  0156DC  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 13050  0156DE  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 13051  0156E0  A4D8               	btfss	status,2,c
 13052  0156E2  D7E8               	goto	l1614
 13053                           
 13054                           ; BSR set to: 1
 13055                           
 13056                           ; BSR set to: 1
 13057  0156E4  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 13058  0156E8  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 13059  0156EC  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 13060  0156F0  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 13061  0156F4  0E00               	movlw	0
 13062  0156F6  6F1B               	movwf	___ftpack@sign& (0+255),b
 13063  0156F8  EC88  F0A5         	call	___ftpack	;wreg free
 13064  0156FC  C117  F11F         	movff	?___ftpack,?___lltoft
 13065  015700  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 13066  015704  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 13067  015708  0012               	return	
 13068  01570A                     __end_of___lltoft:
 13069                           	opt stack 0
 13070                           tblptru	equ	0xFF8
 13071                           tblptrh	equ	0xFF7
 13072                           tblptrl	equ	0xFF6
 13073                           tablat	equ	0xFF5
 13074                           prodh	equ	0xFF4
 13075                           prodl	equ	0xFF3
 13076                           intcon	equ	0xFF2
 13077                           postinc0	equ	0xFEE
 13078                           wreg	equ	0xFE8
 13079                           indf1	equ	0xFE7
 13080                           postdec1	equ	0xFE5
 13081                           fsr1h	equ	0xFE2
 13082                           fsr1l	equ	0xFE1
 13083                           indf2	equ	0xFDF
 13084                           postinc2	equ	0xFDE
 13085                           postdec2	equ	0xFDD
 13086                           fsr2h	equ	0xFDA
 13087                           fsr2l	equ	0xFD9
 13088                           status	equ	0xFD8
 13089                           
 13090 ;; *************** function ___llmod *****************
 13091 ;; Defined at:
 13092 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13093 ;; Parameters:    Size  Location     Type
 13094 ;;  dividend        4   36[BANK1 ] unsigned long 
 13095 ;;  divisor         4   40[BANK1 ] unsigned long 
 13096 ;; Auto vars:     Size  Location     Type
 13097 ;;  counter         1   44[BANK1 ] unsigned char 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  4   36[BANK1 ] unsigned long 
 13100 ;; Registers used:
 13101 ;;		wreg, status,2, status,0
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13107 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13108 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13110 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13111 ;;Total ram usage:        9 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:   14
 13114 ;; This function calls:
 13115 ;;		Nothing
 13116 ;; This function is called by:
 13117 ;;		_printf
 13118 ;; This function uses a non-reentrant model
 13119 ;;
 13120                           
 13121                           	psect	text32
 13122  0154B4                     __ptext32:
 13123                           	opt stack 0
 13124  0154B4                     ___llmod:
 13125                           	opt stack 13
 13126                           
 13127                           ;incstack = 0
 13128  0154B4  0101               	movlb	1	; () banked
 13129  0154B6  5128               	movf	___llmod@divisor& (0+255),w,b
 13130  0154B8  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13131  0154BA  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13132  0154BC  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13133  0154BE  B4D8               	btfsc	status,2,c
 13134  0154C0  D024               	goto	l1607
 13135                           
 13136                           ; BSR set to: 1
 13137  0154C2  0E01               	movlw	1
 13138  0154C4  6F2C               	movwf	___llmod@counter& (0+255),b
 13139  0154C6  D006               	goto	l1602
 13140  0154C8                     
 13141                           ; BSR set to: 1
 13142                           
 13143                           ; BSR set to: 1
 13144  0154C8  90D8               	bcf	status,0,c
 13145  0154CA  3728               	rlcf	___llmod@divisor& (0+255),f,b
 13146  0154CC  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13147  0154CE  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13148  0154D0  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13149  0154D2  2B2C               	incf	___llmod@counter& (0+255),f,b
 13150  0154D4                     l1602:
 13151                           
 13152                           ; BSR set to: 1
 13153                           
 13154                           ; BSR set to: 1
 13155  0154D4  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13156  0154D6  D7F8               	goto	l1603
 13157  0154D8                     u9830:
 13158                           
 13159                           ; BSR set to: 1
 13160                           
 13161                           ; BSR set to: 1
 13162                           
 13163                           ; BSR set to: 1
 13164  0154D8  5128               	movf	___llmod@divisor& (0+255),w,b
 13165  0154DA  5D24               	subwf	___llmod@dividend& (0+255),w,b
 13166  0154DC  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13167  0154DE  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13168  0154E0  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13169  0154E2  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13170  0154E4  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13171  0154E6  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13172  0154E8  A0D8               	btfss	status,0,c
 13173  0154EA  D008               	goto	l1606
 13174                           
 13175                           ; BSR set to: 1
 13176  0154EC  5128               	movf	___llmod@divisor& (0+255),w,b
 13177  0154EE  5F24               	subwf	___llmod@dividend& (0+255),f,b
 13178  0154F0  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13179  0154F2  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13180  0154F4  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13181  0154F6  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13182  0154F8  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13183  0154FA  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13184  0154FC                     l1606:
 13185                           
 13186                           ; BSR set to: 1
 13187                           
 13188                           ; BSR set to: 1
 13189  0154FC  90D8               	bcf	status,0,c
 13190  0154FE  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13191  015500  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13192  015502  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13193  015504  3328               	rrcf	___llmod@divisor& (0+255),f,b
 13194                           
 13195                           ; BSR set to: 1
 13196  015506  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 13197  015508  D7E7               	goto	u9830
 13198  01550A                     l1607:
 13199                           
 13200                           ; BSR set to: 1
 13201                           
 13202                           ; BSR set to: 1
 13203  01550A  C124  F124         	movff	___llmod@dividend,?___llmod
 13204  01550E  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 13205  015512  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 13206  015516  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 13207                           
 13208                           ; BSR set to: 1
 13209  01551A  0012               	return		;funcret
 13210  01551C                     __end_of___llmod:
 13211                           	opt stack 0
 13212                           tblptru	equ	0xFF8
 13213                           tblptrh	equ	0xFF7
 13214                           tblptrl	equ	0xFF6
 13215                           tablat	equ	0xFF5
 13216                           prodh	equ	0xFF4
 13217                           prodl	equ	0xFF3
 13218                           intcon	equ	0xFF2
 13219                           postinc0	equ	0xFEE
 13220                           wreg	equ	0xFE8
 13221                           indf1	equ	0xFE7
 13222                           postdec1	equ	0xFE5
 13223                           fsr1h	equ	0xFE2
 13224                           fsr1l	equ	0xFE1
 13225                           indf2	equ	0xFDF
 13226                           postinc2	equ	0xFDE
 13227                           postdec2	equ	0xFDD
 13228                           fsr2h	equ	0xFDA
 13229                           fsr2l	equ	0xFD9
 13230                           status	equ	0xFD8
 13231                           
 13232 ;; *************** function ___lldiv *****************
 13233 ;; Defined at:
 13234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 13235 ;; Parameters:    Size  Location     Type
 13236 ;;  dividend        4   23[BANK1 ] unsigned long 
 13237 ;;  divisor         4   27[BANK1 ] unsigned long 
 13238 ;; Auto vars:     Size  Location     Type
 13239 ;;  quotient        4   31[BANK1 ] unsigned long 
 13240 ;;  counter         1   35[BANK1 ] unsigned char 
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  4   23[BANK1 ] unsigned long 
 13243 ;; Registers used:
 13244 ;;		wreg, status,2, status,0
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 0/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13250 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13251 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13253 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13254 ;;Total ram usage:       13 bytes
 13255 ;; Hardware stack levels used:    1
 13256 ;; Hardware stack levels required when called:   14
 13257 ;; This function calls:
 13258 ;;		Nothing
 13259 ;; This function is called by:
 13260 ;;		_printf
 13261 ;; This function uses a non-reentrant model
 13262 ;;
 13263                           
 13264                           	psect	text33
 13265  01507E                     __ptext33:
 13266                           	opt stack 0
 13267  01507E                     ___lldiv:
 13268                           	opt stack 13
 13269                           
 13270                           ; BSR set to: 1
 13271                           ;incstack = 0
 13272  01507E  0E00               	movlw	0
 13273  015080  0101               	movlb	1	; () banked
 13274  015082  6F1F               	movwf	___lldiv@quotient& (0+255),b
 13275  015084  0E00               	movlw	0
 13276  015086  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 13277  015088  0E00               	movlw	0
 13278  01508A  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 13279  01508C  0E00               	movlw	0
 13280  01508E  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 13281                           
 13282                           ; BSR set to: 1
 13283  015090  511B               	movf	___lldiv@divisor& (0+255),w,b
 13284  015092  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13285  015094  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13286  015096  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13287  015098  B4D8               	btfsc	status,2,c
 13288  01509A  D02A               	goto	l1597
 13289                           
 13290                           ; BSR set to: 1
 13291  01509C  0E01               	movlw	1
 13292  01509E  6F23               	movwf	___lldiv@counter& (0+255),b
 13293  0150A0  D006               	goto	l1592
 13294  0150A2                     
 13295                           ; BSR set to: 1
 13296                           
 13297                           ; BSR set to: 1
 13298  0150A2  90D8               	bcf	status,0,c
 13299  0150A4  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 13300  0150A6  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13301  0150A8  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13302  0150AA  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13303  0150AC  2B23               	incf	___lldiv@counter& (0+255),f,b
 13304  0150AE                     l1592:
 13305                           
 13306                           ; BSR set to: 1
 13307                           
 13308                           ; BSR set to: 1
 13309  0150AE  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13310  0150B0  D7F8               	goto	l1593
 13311  0150B2                     u9800:
 13312                           
 13313                           ; BSR set to: 1
 13314                           
 13315                           ; BSR set to: 1
 13316                           
 13317                           ; BSR set to: 1
 13318  0150B2  90D8               	bcf	status,0,c
 13319  0150B4  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 13320  0150B6  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13321  0150B8  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13322  0150BA  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13323                           
 13324                           ; BSR set to: 1
 13325  0150BC  511B               	movf	___lldiv@divisor& (0+255),w,b
 13326  0150BE  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 13327  0150C0  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13328  0150C2  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13329  0150C4  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13330  0150C6  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13331  0150C8  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13332  0150CA  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13333  0150CC  A0D8               	btfss	status,0,c
 13334  0150CE  D009               	goto	l1596
 13335                           
 13336                           ; BSR set to: 1
 13337  0150D0  511B               	movf	___lldiv@divisor& (0+255),w,b
 13338  0150D2  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 13339  0150D4  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13340  0150D6  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13341  0150D8  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13342  0150DA  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13343  0150DC  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13344  0150DE  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13345                           
 13346                           ; BSR set to: 1
 13347  0150E0  811F               	bsf	___lldiv@quotient& (0+255),0,b
 13348  0150E2                     l1596:
 13349                           
 13350                           ; BSR set to: 1
 13351                           
 13352                           ; BSR set to: 1
 13353  0150E2  90D8               	bcf	status,0,c
 13354  0150E4  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13355  0150E6  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13356  0150E8  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13357  0150EA  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 13358                           
 13359                           ; BSR set to: 1
 13360  0150EC  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 13361  0150EE  D7E1               	goto	u9800
 13362  0150F0                     l1597:
 13363                           
 13364                           ; BSR set to: 1
 13365                           
 13366                           ; BSR set to: 1
 13367  0150F0  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 13368  0150F4  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 13369  0150F8  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 13370  0150FC  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 13371                           
 13372                           ; BSR set to: 1
 13373  015100  0012               	return		;funcret
 13374  015102                     __end_of___lldiv:
 13375                           	opt stack 0
 13376                           tblptru	equ	0xFF8
 13377                           tblptrh	equ	0xFF7
 13378                           tblptrl	equ	0xFF6
 13379                           tablat	equ	0xFF5
 13380                           prodh	equ	0xFF4
 13381                           prodl	equ	0xFF3
 13382                           intcon	equ	0xFF2
 13383                           postinc0	equ	0xFEE
 13384                           wreg	equ	0xFE8
 13385                           indf1	equ	0xFE7
 13386                           postdec1	equ	0xFE5
 13387                           fsr1h	equ	0xFE2
 13388                           fsr1l	equ	0xFE1
 13389                           indf2	equ	0xFDF
 13390                           postinc2	equ	0xFDE
 13391                           postdec2	equ	0xFDD
 13392                           fsr2h	equ	0xFDA
 13393                           fsr2l	equ	0xFD9
 13394                           status	equ	0xFD8
 13395                           
 13396 ;; *************** function ___fttol *****************
 13397 ;; Defined at:
 13398 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13399 ;; Parameters:    Size  Location     Type
 13400 ;;  f1              3   85[BANK1 ] float 
 13401 ;; Auto vars:     Size  Location     Type
 13402 ;;  lval            4   95[BANK1 ] unsigned long 
 13403 ;;  exp1            1   99[BANK1 ] unsigned char 
 13404 ;;  sign1           1   94[BANK1 ] unsigned char 
 13405 ;; Return value:  Size  Location     Type
 13406 ;;                  4   85[BANK1 ] long 
 13407 ;; Registers used:
 13408 ;;		wreg, status,2, status,0
 13409 ;; Tracked objects:
 13410 ;;		On entry : 0/0
 13411 ;;		On exit  : 0/0
 13412 ;;		Unchanged: 0/0
 13413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13414 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13415 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13416 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13417 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13418 ;;Total ram usage:       15 bytes
 13419 ;; Hardware stack levels used:    1
 13420 ;; Hardware stack levels required when called:   14
 13421 ;; This function calls:
 13422 ;;		Nothing
 13423 ;; This function is called by:
 13424 ;;		_printf
 13425 ;; This function uses a non-reentrant model
 13426 ;;
 13427                           
 13428                           	psect	text34
 13429  014210                     __ptext34:
 13430                           	opt stack 0
 13431  014210                     ___fttol:
 13432                           	opt stack 13
 13433                           
 13434                           ; BSR set to: 1
 13435                           ;incstack = 0
 13436  014210  C157  F159         	movff	___fttol@f1+2,??___fttol
 13437  014214  0101               	movlb	1	; () banked
 13438  014216  6B5A               	clrf	(??___fttol+1)& (0+255),b
 13439  014218  6B5B               	clrf	(??___fttol+2)& (0+255),b
 13440  01421A  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13441  01421C  3759               	rlcf	??___fttol& (0+255),f,b
 13442  01421E  E301               	bnc	u9711
 13443  014220  815A               	bsf	(??___fttol+1)& (0+255),0,b
 13444  014222                     u9711:
 13445  014222  5159               	movf	??___fttol& (0+255),w,b
 13446  014224  6F63               	movwf	___fttol@exp1& (0+255),b
 13447  014226  5163               	movf	___fttol@exp1& (0+255),w,b
 13448  014228  A4D8               	btfss	status,2,c
 13449  01422A  D009               	goto	l1551
 13450                           
 13451                           ; BSR set to: 1
 13452  01422C  0E00               	movlw	0
 13453  01422E  6F55               	movwf	?___fttol& (0+255),b
 13454  014230  0E00               	movlw	0
 13455  014232  6F56               	movwf	(?___fttol+1)& (0+255),b
 13456  014234  0E00               	movlw	0
 13457  014236  6F57               	movwf	(?___fttol+2)& (0+255),b
 13458  014238  0E00               	movlw	0
 13459  01423A  6F58               	movwf	(?___fttol+3)& (0+255),b
 13460                           
 13461                           ; BSR set to: 1
 13462  01423C  0012               	return	
 13463  01423E                     l1551:
 13464                           
 13465                           ; BSR set to: 1
 13466                           
 13467                           ; BSR set to: 1
 13468  01423E  0E17               	movlw	23
 13469  014240  6F59               	movwf	??___fttol& (0+255),b
 13470  014242  C155  F15A         	movff	___fttol@f1,??___fttol+1
 13471  014246  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 13472  01424A  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 13473  01424E  2959               	incf	??___fttol& (0+255),w,b
 13474  014250  6F5D               	movwf	(??___fttol+4)& (0+255),b
 13475  014252  D004               	goto	u9730
 13476  014254                     u9735:
 13477  014254  90D8               	bcf	status,0,c
 13478  014256  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 13479  014258  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 13480  01425A  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 13481  01425C                     u9730:
 13482  01425C  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 13483  01425E  D7FA               	goto	u9735
 13484  014260  0101               	movlb	1	; () banked
 13485  014262  515A               	movf	(??___fttol+1)& (0+255),w,b
 13486  014264  6F5E               	movwf	___fttol@sign1& (0+255),b
 13487                           
 13488                           ; BSR set to: 1
 13489  014266  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 13490                           
 13491                           ; BSR set to: 1
 13492  014268  0EFF               	movlw	255
 13493  01426A  1755               	andwf	___fttol@f1& (0+255),f,b
 13494  01426C  0EFF               	movlw	255
 13495  01426E  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 13496  014270  0E00               	movlw	0
 13497  014272  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 13498                           
 13499                           ; BSR set to: 1
 13500  014274  5155               	movf	___fttol@f1& (0+255),w,b
 13501  014276  6F5F               	movwf	___fttol@lval& (0+255),b
 13502  014278  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 13503  01427A  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 13504  01427C  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 13505  01427E  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 13506  014280  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 13507                           
 13508                           ; BSR set to: 1
 13509  014282  0E8E               	movlw	142
 13510  014284  5F63               	subwf	___fttol@exp1& (0+255),f,b
 13511                           
 13512                           ; BSR set to: 1
 13513  014286  AF63               	btfss	___fttol@exp1& (0+255),7,b
 13514  014288  D016               	goto	l1553
 13515                           
 13516                           ; BSR set to: 1
 13517  01428A  5163               	movf	___fttol@exp1& (0+255),w,b
 13518  01428C  0A80               	xorlw	128
 13519  01428E  0F8F               	addlw	143
 13520  014290  B0D8               	btfsc	status,0,c
 13521  014292  D009               	goto	l1554
 13522                           
 13523                           ; BSR set to: 1
 13524  014294  0E00               	movlw	0
 13525  014296  6F55               	movwf	?___fttol& (0+255),b
 13526  014298  0E00               	movlw	0
 13527  01429A  6F56               	movwf	(?___fttol+1)& (0+255),b
 13528  01429C  0E00               	movlw	0
 13529  01429E  6F57               	movwf	(?___fttol+2)& (0+255),b
 13530  0142A0  0E00               	movlw	0
 13531  0142A2  6F58               	movwf	(?___fttol+3)& (0+255),b
 13532                           
 13533                           ; BSR set to: 1
 13534  0142A4  0012               	return	
 13535  0142A6                     l1554:
 13536                           
 13537                           ; BSR set to: 1
 13538                           
 13539                           ; BSR set to: 1
 13540                           
 13541                           ; BSR set to: 1
 13542  0142A6  90D8               	bcf	status,0,c
 13543  0142A8  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13544  0142AA  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13545  0142AC  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13546  0142AE  335F               	rrcf	___fttol@lval& (0+255),f,b
 13547                           
 13548                           ; BSR set to: 1
 13549  0142B0  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 13550  0142B2  D7F9               	goto	l1554
 13551                           
 13552                           ; BSR set to: 1
 13553  0142B4  D015               	goto	u9770
 13554  0142B6                     l1553:
 13555                           
 13556                           ; BSR set to: 1
 13557                           
 13558                           ; BSR set to: 1
 13559  0142B6  0E17               	movlw	23
 13560  0142B8  6563               	cpfsgt	___fttol@exp1& (0+255),b
 13561  0142BA  D00F               	goto	l1559
 13562                           
 13563                           ; BSR set to: 1
 13564  0142BC  0E00               	movlw	0
 13565  0142BE  6F55               	movwf	?___fttol& (0+255),b
 13566  0142C0  0E00               	movlw	0
 13567  0142C2  6F56               	movwf	(?___fttol+1)& (0+255),b
 13568  0142C4  0E00               	movlw	0
 13569  0142C6  6F57               	movwf	(?___fttol+2)& (0+255),b
 13570  0142C8  0E00               	movlw	0
 13571  0142CA  6F58               	movwf	(?___fttol+3)& (0+255),b
 13572                           
 13573                           ; BSR set to: 1
 13574  0142CC  0012               	return	
 13575  0142CE                     
 13576                           ; BSR set to: 1
 13577                           
 13578                           ; BSR set to: 1
 13579  0142CE  90D8               	bcf	status,0,c
 13580  0142D0  375F               	rlcf	___fttol@lval& (0+255),f,b
 13581  0142D2  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13582  0142D4  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13583  0142D6  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13584  0142D8  0763               	decf	___fttol@exp1& (0+255),f,b
 13585  0142DA                     l1559:
 13586                           
 13587                           ; BSR set to: 1
 13588                           
 13589                           ; BSR set to: 1
 13590  0142DA  5163               	movf	___fttol@exp1& (0+255),w,b
 13591  0142DC  A4D8               	btfss	status,2,c
 13592  0142DE  D7F7               	goto	l1560
 13593  0142E0                     u9770:
 13594                           
 13595                           ; BSR set to: 1
 13596                           
 13597                           ; BSR set to: 1
 13598                           
 13599                           ; BSR set to: 1
 13600  0142E0  515E               	movf	___fttol@sign1& (0+255),w,b
 13601  0142E2  B4D8               	btfsc	status,2,c
 13602  0142E4  D008               	goto	l1562
 13603                           
 13604                           ; BSR set to: 1
 13605  0142E6  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 13606  0142E8  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 13607  0142EA  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 13608  0142EC  6D5F               	negf	___fttol@lval& (0+255),b
 13609  0142EE  0E00               	movlw	0
 13610  0142F0  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13611  0142F2  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13612  0142F4  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13613  0142F6                     l1562:
 13614                           
 13615                           ; BSR set to: 1
 13616                           
 13617                           ; BSR set to: 1
 13618  0142F6  C15F  F155         	movff	___fttol@lval,?___fttol
 13619  0142FA  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 13620  0142FE  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 13621  014302  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 13622  014306  0012               	return	
 13623  014308                     __end_of___fttol:
 13624                           	opt stack 0
 13625                           tblptru	equ	0xFF8
 13626                           tblptrh	equ	0xFF7
 13627                           tblptrl	equ	0xFF6
 13628                           tablat	equ	0xFF5
 13629                           prodh	equ	0xFF4
 13630                           prodl	equ	0xFF3
 13631                           intcon	equ	0xFF2
 13632                           postinc0	equ	0xFEE
 13633                           wreg	equ	0xFE8
 13634                           indf1	equ	0xFE7
 13635                           postdec1	equ	0xFE5
 13636                           fsr1h	equ	0xFE2
 13637                           fsr1l	equ	0xFE1
 13638                           indf2	equ	0xFDF
 13639                           postinc2	equ	0xFDE
 13640                           postdec2	equ	0xFDD
 13641                           fsr2h	equ	0xFDA
 13642                           fsr2l	equ	0xFD9
 13643                           status	equ	0xFD8
 13644                           
 13645 ;; *************** function ___ftsub *****************
 13646 ;; Defined at:
 13647 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 13648 ;; Parameters:    Size  Location     Type
 13649 ;;  f1              3   55[BANK1 ] float 
 13650 ;;  f2              3   58[BANK1 ] float 
 13651 ;; Auto vars:     Size  Location     Type
 13652 ;;		None
 13653 ;; Return value:  Size  Location     Type
 13654 ;;                  3   55[BANK1 ] float 
 13655 ;; Registers used:
 13656 ;;		wreg, status,2, status,0, cstack
 13657 ;; Tracked objects:
 13658 ;;		On entry : 0/0
 13659 ;;		On exit  : 0/0
 13660 ;;		Unchanged: 0/0
 13661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13662 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13665 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13666 ;;Total ram usage:        6 bytes
 13667 ;; Hardware stack levels used:    1
 13668 ;; Hardware stack levels required when called:   16
 13669 ;; This function calls:
 13670 ;;		___ftadd
 13671 ;; This function is called by:
 13672 ;;		_printf
 13673 ;; This function uses a non-reentrant model
 13674 ;;
 13675                           
 13676                           	psect	text35
 13677  015AC6                     __ptext35:
 13678                           	opt stack 0
 13679  015AC6                     ___ftsub:
 13680                           	opt stack 11
 13681                           
 13682                           ; BSR set to: 1
 13683                           ;incstack = 0
 13684  015AC6  0101               	movlb	1	; () banked
 13685  015AC8  513A               	movf	___ftsub@f2& (0+255),w,b
 13686  015ACA  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 13687  015ACC  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 13688  015ACE  B4D8               	btfsc	status,2,c
 13689  015AD0  D006               	goto	l1547
 13690                           
 13691                           ; BSR set to: 1
 13692  015AD2  0E00               	movlw	0
 13693  015AD4  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 13694  015AD6  0E00               	movlw	0
 13695  015AD8  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 13696  015ADA  0E80               	movlw	128
 13697  015ADC  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 13698  015ADE                     l1547:
 13699                           
 13700                           ; BSR set to: 1
 13701                           
 13702                           ; BSR set to: 1
 13703  015ADE  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 13704  015AE2  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 13705  015AE6  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 13706  015AEA  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 13707  015AEE  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 13708  015AF2  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 13709  015AF6  ECA8  F09B         	call	___ftadd	;wreg free
 13710  015AFA  C12B  F137         	movff	?___ftadd,?___ftsub
 13711  015AFE  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 13712  015B02  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 13713  015B06  0012               	return	
 13714  015B08                     __end_of___ftsub:
 13715                           	opt stack 0
 13716                           tblptru	equ	0xFF8
 13717                           tblptrh	equ	0xFF7
 13718                           tblptrl	equ	0xFF6
 13719                           tablat	equ	0xFF5
 13720                           prodh	equ	0xFF4
 13721                           prodl	equ	0xFF3
 13722                           intcon	equ	0xFF2
 13723                           postinc0	equ	0xFEE
 13724                           wreg	equ	0xFE8
 13725                           indf1	equ	0xFE7
 13726                           postdec1	equ	0xFE5
 13727                           fsr1h	equ	0xFE2
 13728                           fsr1l	equ	0xFE1
 13729                           indf2	equ	0xFDF
 13730                           postinc2	equ	0xFDE
 13731                           postdec2	equ	0xFDD
 13732                           fsr2h	equ	0xFDA
 13733                           fsr2l	equ	0xFD9
 13734                           status	equ	0xFD8
 13735                           
 13736 ;; *************** function ___ftadd *****************
 13737 ;; Defined at:
 13738 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 13739 ;; Parameters:    Size  Location     Type
 13740 ;;  f1              3   43[BANK1 ] float 
 13741 ;;  f2              3   46[BANK1 ] float 
 13742 ;; Auto vars:     Size  Location     Type
 13743 ;;  exp1            1   54[BANK1 ] unsigned char 
 13744 ;;  exp2            1   53[BANK1 ] unsigned char 
 13745 ;;  sign            1   52[BANK1 ] unsigned char 
 13746 ;; Return value:  Size  Location     Type
 13747 ;;                  3   43[BANK1 ] float 
 13748 ;; Registers used:
 13749 ;;		wreg, status,2, status,0, cstack
 13750 ;; Tracked objects:
 13751 ;;		On entry : 0/0
 13752 ;;		On exit  : 0/0
 13753 ;;		Unchanged: 0/0
 13754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13755 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13756 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13757 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13758 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13759 ;;Total ram usage:       12 bytes
 13760 ;; Hardware stack levels used:    1
 13761 ;; Hardware stack levels required when called:   15
 13762 ;; This function calls:
 13763 ;;		___ftpack
 13764 ;; This function is called by:
 13765 ;;		_ringBufferLUT
 13766 ;;		_printf
 13767 ;;		___ftsub
 13768 ;; This function uses a non-reentrant model
 13769 ;;
 13770                           
 13771                           	psect	text36
 13772  013750                     __ptext36:
 13773                           	opt stack 0
 13774  013750                     ___ftadd:
 13775                           	opt stack 11
 13776                           
 13777                           ;incstack = 0
 13778  013750  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 13779  013754  0101               	movlb	1	; () banked
 13780  013756  6B32               	clrf	(??___ftadd+1)& (0+255),b
 13781  013758  6B33               	clrf	(??___ftadd+2)& (0+255),b
 13782  01375A  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 13783  01375C  3731               	rlcf	??___ftadd& (0+255),f,b
 13784  01375E  E301               	bnc	u8811
 13785  013760  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 13786  013762                     u8811:
 13787  013762  5131               	movf	??___ftadd& (0+255),w,b
 13788  013764  6F36               	movwf	___ftadd@exp1& (0+255),b
 13789  013766  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 13790  01376A  6B32               	clrf	(??___ftadd+1)& (0+255),b
 13791  01376C  6B33               	clrf	(??___ftadd+2)& (0+255),b
 13792  01376E  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 13793  013770  3731               	rlcf	??___ftadd& (0+255),f,b
 13794  013772  E301               	bnc	u8821
 13795  013774  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 13796  013776                     u8821:
 13797  013776  5131               	movf	??___ftadd& (0+255),w,b
 13798  013778  6F35               	movwf	___ftadd@exp2& (0+255),b
 13799                           
 13800                           ; BSR set to: 1
 13801  01377A  5136               	movf	___ftadd@exp1& (0+255),w,b
 13802  01377C  B4D8               	btfsc	status,2,c
 13803  01377E  D00B               	goto	u8850
 13804                           
 13805                           ; BSR set to: 1
 13806  013780  5135               	movf	___ftadd@exp2& (0+255),w,b
 13807  013782  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 13808  013784  B0D8               	btfsc	status,0,c
 13809  013786  D00E               	goto	l1465
 13810                           
 13811                           ; BSR set to: 1
 13812  013788  5136               	movf	___ftadd@exp1& (0+255),w,b
 13813  01378A  0800               	sublw	0
 13814  01378C  2535               	addwf	___ftadd@exp2& (0+255),w,b
 13815  01378E  6F31               	movwf	??___ftadd& (0+255),b
 13816  013790  0E18               	movlw	24
 13817  013792  6531               	cpfsgt	??___ftadd& (0+255),b
 13818  013794  D007               	goto	l1465
 13819  013796                     u8850:
 13820                           
 13821                           ; BSR set to: 1
 13822  013796  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 13823  01379A  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 13824  01379E  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 13825  0137A2  0012               	return	
 13826  0137A4                     l1465:
 13827                           
 13828                           ; BSR set to: 1
 13829                           
 13830                           ; BSR set to: 1
 13831  0137A4  5135               	movf	___ftadd@exp2& (0+255),w,b
 13832  0137A6  B4D8               	btfsc	status,2,c
 13833  0137A8  D00B               	goto	u8880
 13834                           
 13835                           ; BSR set to: 1
 13836  0137AA  5136               	movf	___ftadd@exp1& (0+255),w,b
 13837  0137AC  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 13838  0137AE  B0D8               	btfsc	status,0,c
 13839  0137B0  D00E               	goto	l1469
 13840                           
 13841                           ; BSR set to: 1
 13842  0137B2  5135               	movf	___ftadd@exp2& (0+255),w,b
 13843  0137B4  0800               	sublw	0
 13844  0137B6  2536               	addwf	___ftadd@exp1& (0+255),w,b
 13845  0137B8  6F31               	movwf	??___ftadd& (0+255),b
 13846  0137BA  0E18               	movlw	24
 13847  0137BC  6531               	cpfsgt	??___ftadd& (0+255),b
 13848  0137BE  D007               	goto	l1469
 13849  0137C0                     u8880:
 13850                           
 13851                           ; BSR set to: 1
 13852  0137C0  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 13853  0137C4  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 13854  0137C8  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 13855  0137CC  0012               	return	
 13856  0137CE                     l1469:
 13857                           
 13858                           ; BSR set to: 1
 13859                           
 13860                           ; BSR set to: 1
 13861  0137CE  0E06               	movlw	6
 13862  0137D0  6F34               	movwf	___ftadd@sign& (0+255),b
 13863                           
 13864                           ; BSR set to: 1
 13865  0137D2  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 13866                           
 13867                           ; BSR set to: 1
 13868  0137D4  8F34               	bsf	___ftadd@sign& (0+255),7,b
 13869                           
 13870                           ; BSR set to: 1
 13871                           
 13872                           ; BSR set to: 1
 13873  0137D6  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 13874                           
 13875                           ; BSR set to: 1
 13876  0137D8  8D34               	bsf	___ftadd@sign& (0+255),6,b
 13877                           
 13878                           ; BSR set to: 1
 13879  0137DA  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 13880                           
 13881                           ; BSR set to: 1
 13882  0137DC  0EFF               	movlw	255
 13883  0137DE  172B               	andwf	___ftadd@f1& (0+255),f,b
 13884  0137E0  0EFF               	movlw	255
 13885  0137E2  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 13886  0137E4  0E00               	movlw	0
 13887  0137E6  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 13888  0137E8  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 13889                           
 13890                           ; BSR set to: 1
 13891  0137EA  0EFF               	movlw	255
 13892  0137EC  172E               	andwf	___ftadd@f2& (0+255),f,b
 13893  0137EE  0EFF               	movlw	255
 13894  0137F0  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 13895  0137F2  0E00               	movlw	0
 13896  0137F4  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 13897                           
 13898                           ; BSR set to: 1
 13899  0137F6  5135               	movf	___ftadd@exp2& (0+255),w,b
 13900  0137F8  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 13901  0137FA  B0D8               	btfsc	status,0,c
 13902  0137FC  D01B               	goto	l1474
 13903  0137FE                     u8910:
 13904                           
 13905                           ; BSR set to: 1
 13906                           
 13907                           ; BSR set to: 1
 13908  0137FE  90D8               	bcf	status,0,c
 13909  013800  372E               	rlcf	___ftadd@f2& (0+255),f,b
 13910  013802  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 13911  013804  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 13912  013806  0735               	decf	___ftadd@exp2& (0+255),f,b
 13913                           
 13914                           ; BSR set to: 1
 13915  013808  5136               	movf	___ftadd@exp1& (0+255),w,b
 13916  01380A  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 13917  01380C  B4D8               	btfsc	status,2,c
 13918  01380E  D00D               	goto	l1479
 13919                           
 13920                           ; BSR set to: 1
 13921  013810  0734               	decf	___ftadd@sign& (0+255),f,b
 13922  013812  C134  F131         	movff	___ftadd@sign,??___ftadd
 13923  013816  0E07               	movlw	7
 13924  013818  1731               	andwf	??___ftadd& (0+255),f,b
 13925  01381A  B4D8               	btfsc	status,2,c
 13926  01381C  D006               	goto	l1479
 13927  01381E  D7EF               	goto	u8910
 13928  013820                     
 13929                           ; BSR set to: 1
 13930                           
 13931                           ; BSR set to: 1
 13932  013820  90D8               	bcf	status,0,c
 13933  013822  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 13934  013824  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 13935  013826  332B               	rrcf	___ftadd@f1& (0+255),f,b
 13936  013828  2B36               	incf	___ftadd@exp1& (0+255),f,b
 13937  01382A                     l1479:
 13938                           
 13939                           ; BSR set to: 1
 13940                           
 13941                           ; BSR set to: 1
 13942  01382A  5135               	movf	___ftadd@exp2& (0+255),w,b
 13943  01382C  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 13944  01382E  B4D8               	btfsc	status,2,c
 13945  013830  D01F               	goto	u8980
 13946  013832  D7F6               	goto	l1480
 13947  013834                     l1474:
 13948                           
 13949                           ; BSR set to: 1
 13950                           
 13951                           ; BSR set to: 1
 13952  013834  5136               	movf	___ftadd@exp1& (0+255),w,b
 13953  013836  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 13954  013838  B0D8               	btfsc	status,0,c
 13955  01383A  D01A               	goto	u8980
 13956  01383C                     u8950:
 13957                           
 13958                           ; BSR set to: 1
 13959                           
 13960                           ; BSR set to: 1
 13961  01383C  90D8               	bcf	status,0,c
 13962  01383E  372B               	rlcf	___ftadd@f1& (0+255),f,b
 13963  013840  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 13964  013842  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 13965  013844  0736               	decf	___ftadd@exp1& (0+255),f,b
 13966                           
 13967                           ; BSR set to: 1
 13968  013846  5136               	movf	___ftadd@exp1& (0+255),w,b
 13969  013848  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 13970  01384A  B4D8               	btfsc	status,2,c
 13971  01384C  D00D               	goto	l1488
 13972                           
 13973                           ; BSR set to: 1
 13974  01384E  0734               	decf	___ftadd@sign& (0+255),f,b
 13975  013850  C134  F131         	movff	___ftadd@sign,??___ftadd
 13976  013854  0E07               	movlw	7
 13977  013856  1731               	andwf	??___ftadd& (0+255),f,b
 13978  013858  B4D8               	btfsc	status,2,c
 13979  01385A  D006               	goto	l1488
 13980  01385C  D7EF               	goto	u8950
 13981  01385E                     
 13982                           ; BSR set to: 1
 13983                           
 13984                           ; BSR set to: 1
 13985  01385E  90D8               	bcf	status,0,c
 13986  013860  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 13987  013862  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 13988  013864  332E               	rrcf	___ftadd@f2& (0+255),f,b
 13989  013866  2B35               	incf	___ftadd@exp2& (0+255),f,b
 13990  013868                     l1488:
 13991                           
 13992                           ; BSR set to: 1
 13993                           
 13994                           ; BSR set to: 1
 13995  013868  5135               	movf	___ftadd@exp2& (0+255),w,b
 13996  01386A  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 13997  01386C  A4D8               	btfss	status,2,c
 13998  01386E  D7F7               	goto	l1489
 13999  013870                     u8980:
 14000                           
 14001                           ; BSR set to: 1
 14002                           
 14003                           ; BSR set to: 1
 14004                           
 14005                           ; BSR set to: 1
 14006  013870  AF34               	btfss	___ftadd@sign& (0+255),7,b
 14007  013872  D00C               	goto	l1491
 14008                           
 14009                           ; BSR set to: 1
 14010  013874  0EFF               	movlw	255
 14011  013876  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 14012  013878  0EFF               	movlw	255
 14013  01387A  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14014  01387C  0EFF               	movlw	255
 14015  01387E  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14016  013880  0E01               	movlw	1
 14017  013882  272B               	addwf	___ftadd@f1& (0+255),f,b
 14018  013884  0E00               	movlw	0
 14019  013886  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14020  013888  0E00               	movlw	0
 14021  01388A  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14022  01388C                     l1491:
 14023                           
 14024                           ; BSR set to: 1
 14025  01388C  AD34               	btfss	___ftadd@sign& (0+255),6,b
 14026  01388E  D00C               	goto	l1492
 14027                           
 14028                           ; BSR set to: 1
 14029  013890  0EFF               	movlw	255
 14030  013892  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14031  013894  0EFF               	movlw	255
 14032  013896  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14033  013898  0EFF               	movlw	255
 14034  01389A  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14035  01389C  0E01               	movlw	1
 14036  01389E  272E               	addwf	___ftadd@f2& (0+255),f,b
 14037  0138A0  0E00               	movlw	0
 14038  0138A2  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14039  0138A4  0E00               	movlw	0
 14040  0138A6  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14041  0138A8                     l1492:
 14042                           
 14043                           ; BSR set to: 1
 14044                           
 14045                           ; BSR set to: 1
 14046  0138A8  0E00               	movlw	0
 14047  0138AA  6F34               	movwf	___ftadd@sign& (0+255),b
 14048                           
 14049                           ; BSR set to: 1
 14050  0138AC  512B               	movf	___ftadd@f1& (0+255),w,b
 14051  0138AE  272E               	addwf	___ftadd@f2& (0+255),f,b
 14052  0138B0  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14053  0138B2  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14054  0138B4  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14055  0138B6  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14056                           
 14057                           ; BSR set to: 1
 14058  0138B8  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14059  0138BA  D00E               	goto	l1493
 14060                           
 14061                           ; BSR set to: 1
 14062  0138BC  0EFF               	movlw	255
 14063  0138BE  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14064  0138C0  0EFF               	movlw	255
 14065  0138C2  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14066  0138C4  0EFF               	movlw	255
 14067  0138C6  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14068  0138C8  0E01               	movlw	1
 14069  0138CA  272E               	addwf	___ftadd@f2& (0+255),f,b
 14070  0138CC  0E00               	movlw	0
 14071  0138CE  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14072  0138D0  0E00               	movlw	0
 14073  0138D2  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14074                           
 14075                           ; BSR set to: 1
 14076  0138D4  0E01               	movlw	1
 14077  0138D6  6F34               	movwf	___ftadd@sign& (0+255),b
 14078  0138D8                     l1493:
 14079                           
 14080                           ; BSR set to: 1
 14081                           
 14082                           ; BSR set to: 1
 14083  0138D8  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 14084  0138DC  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 14085  0138E0  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 14086  0138E4  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 14087  0138E8  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 14088  0138EC  EC88  F0A5         	call	___ftpack	;wreg free
 14089  0138F0  C117  F12B         	movff	?___ftpack,?___ftadd
 14090  0138F4  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 14091  0138F8  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 14092  0138FC  0012               	return	
 14093  0138FE                     __end_of___ftadd:
 14094                           	opt stack 0
 14095                           tblptru	equ	0xFF8
 14096                           tblptrh	equ	0xFF7
 14097                           tblptrl	equ	0xFF6
 14098                           tablat	equ	0xFF5
 14099                           prodh	equ	0xFF4
 14100                           prodl	equ	0xFF3
 14101                           intcon	equ	0xFF2
 14102                           postinc0	equ	0xFEE
 14103                           wreg	equ	0xFE8
 14104                           indf1	equ	0xFE7
 14105                           postdec1	equ	0xFE5
 14106                           fsr1h	equ	0xFE2
 14107                           fsr1l	equ	0xFE1
 14108                           indf2	equ	0xFDF
 14109                           postinc2	equ	0xFDE
 14110                           postdec2	equ	0xFDD
 14111                           fsr2h	equ	0xFDA
 14112                           fsr2l	equ	0xFD9
 14113                           status	equ	0xFD8
 14114                           
 14115 ;; *************** function ___ftpack *****************
 14116 ;; Defined at:
 14117 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14118 ;; Parameters:    Size  Location     Type
 14119 ;;  arg             3   23[BANK1 ] unsigned um
 14120 ;;  exp             1   26[BANK1 ] unsigned char 
 14121 ;;  sign            1   27[BANK1 ] unsigned char 
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;		None
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  3   23[BANK1 ] float 
 14126 ;; Registers used:
 14127 ;;		wreg, status,2, status,0
 14128 ;; Tracked objects:
 14129 ;;		On entry : 0/0
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14133 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14135 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14136 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14137 ;;Total ram usage:        8 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; Hardware stack levels required when called:   14
 14140 ;; This function calls:
 14141 ;;		Nothing
 14142 ;; This function is called by:
 14143 ;;		___awtoft
 14144 ;;		___ftadd
 14145 ;;		___ftdiv
 14146 ;;		___ftmul
 14147 ;;		___lltoft
 14148 ;; This function uses a non-reentrant model
 14149 ;;
 14150                           
 14151                           	psect	text37
 14152  014B10                     __ptext37:
 14153                           	opt stack 0
 14154  014B10                     ___ftpack:
 14155                           	opt stack 11
 14156                           
 14157                           ;incstack = 0
 14158  014B10  0101               	movlb	1	; () banked
 14159  014B12  511A               	movf	___ftpack@exp& (0+255),w,b
 14160  014B14  B4D8               	btfsc	status,2,c
 14161  014B16  D005               	goto	u8430
 14162                           
 14163                           ; BSR set to: 1
 14164  014B18  5117               	movf	___ftpack@arg& (0+255),w,b
 14165  014B1A  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14166  014B1C  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14167  014B1E  A4D8               	btfss	status,2,c
 14168  014B20  D00C               	goto	l1434
 14169  014B22                     u8430:
 14170                           
 14171                           ; BSR set to: 1
 14172                           
 14173                           ; BSR set to: 1
 14174  014B22  0E00               	movlw	0
 14175  014B24  6F17               	movwf	?___ftpack& (0+255),b
 14176  014B26  0E00               	movlw	0
 14177  014B28  6F18               	movwf	(?___ftpack+1)& (0+255),b
 14178  014B2A  0E00               	movlw	0
 14179  014B2C  6F19               	movwf	(?___ftpack+2)& (0+255),b
 14180                           
 14181                           ; BSR set to: 1
 14182  014B2E  0012               	return	
 14183  014B30                     
 14184                           ; BSR set to: 1
 14185                           
 14186                           ; BSR set to: 1
 14187  014B30  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14188  014B32  90D8               	bcf	status,0,c
 14189  014B34  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14190  014B36  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14191  014B38  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14192  014B3A                     l1434:
 14193                           
 14194                           ; BSR set to: 1
 14195                           
 14196                           ; BSR set to: 1
 14197  014B3A  0E00               	movlw	0
 14198  014B3C  1517               	andwf	___ftpack@arg& (0+255),w,b
 14199  014B3E  6F1C               	movwf	??___ftpack& (0+255),b
 14200  014B40  0E00               	movlw	0
 14201  014B42  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14202  014B44  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14203  014B46  0EFE               	movlw	254
 14204  014B48  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14205  014B4A  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14206  014B4C  511C               	movf	??___ftpack& (0+255),w,b
 14207  014B4E  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14208  014B50  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14209  014B52  B4D8               	btfsc	status,2,c
 14210  014B54  D00C               	goto	l1437
 14211  014B56  D7EC               	goto	l1435
 14212  014B58                     
 14213                           ; BSR set to: 1
 14214                           
 14215                           ; BSR set to: 1
 14216  014B58  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14217                           
 14218                           ; BSR set to: 1
 14219  014B5A  0E01               	movlw	1
 14220  014B5C  2717               	addwf	___ftpack@arg& (0+255),f,b
 14221  014B5E  0E00               	movlw	0
 14222  014B60  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14223  014B62  0E00               	movlw	0
 14224  014B64  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14225  014B66  90D8               	bcf	status,0,c
 14226  014B68  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14227  014B6A  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14228  014B6C  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14229  014B6E                     l1437:
 14230                           
 14231                           ; BSR set to: 1
 14232                           
 14233                           ; BSR set to: 1
 14234  014B6E  0E00               	movlw	0
 14235  014B70  1517               	andwf	___ftpack@arg& (0+255),w,b
 14236  014B72  6F1C               	movwf	??___ftpack& (0+255),b
 14237  014B74  0E00               	movlw	0
 14238  014B76  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14239  014B78  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14240  014B7A  0EFF               	movlw	255
 14241  014B7C  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14242  014B7E  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14243  014B80  511C               	movf	??___ftpack& (0+255),w,b
 14244  014B82  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14245  014B84  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14246  014B86  B4D8               	btfsc	status,2,c
 14247  014B88  D006               	goto	l1440
 14248  014B8A  D7E6               	goto	l1438
 14249  014B8C                     
 14250                           ; BSR set to: 1
 14251                           
 14252                           ; BSR set to: 1
 14253  014B8C  071A               	decf	___ftpack@exp& (0+255),f,b
 14254  014B8E  90D8               	bcf	status,0,c
 14255  014B90  3717               	rlcf	___ftpack@arg& (0+255),f,b
 14256  014B92  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14257  014B94  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14258  014B96                     l1440:
 14259                           
 14260                           ; BSR set to: 1
 14261                           
 14262                           ; BSR set to: 1
 14263  014B96  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14264  014B98  D003               	goto	u8470
 14265                           
 14266                           ; BSR set to: 1
 14267  014B9A  0E02               	movlw	2
 14268  014B9C  611A               	cpfslt	___ftpack@exp& (0+255),b
 14269  014B9E  D7F6               	goto	l1441
 14270  014BA0                     u8470:
 14271                           
 14272                           ; BSR set to: 1
 14273                           
 14274                           ; BSR set to: 1
 14275  014BA0  A11A               	btfss	___ftpack@exp& (0+255),0,b
 14276                           
 14277                           ; BSR set to: 1
 14278  014BA2  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14279                           
 14280                           ; BSR set to: 1
 14281                           
 14282                           ; BSR set to: 1
 14283  014BA4  90D8               	bcf	status,0,c
 14284  014BA6  331A               	rrcf	___ftpack@exp& (0+255),f,b
 14285  014BA8  511A               	movf	___ftpack@exp& (0+255),w,b
 14286  014BAA  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14287                           
 14288                           ; BSR set to: 1
 14289  014BAC  511B               	movf	___ftpack@sign& (0+255),w,b
 14290  014BAE  A4D8               	btfss	status,2,c
 14291                           
 14292                           ; BSR set to: 1
 14293  014BB0  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14294                           
 14295                           ; BSR set to: 1
 14296                           
 14297                           ; BSR set to: 1
 14298  014BB2  C117  F117         	movff	___ftpack@arg,?___ftpack
 14299  014BB6  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 14300  014BBA  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 14301  014BBE  0012               	return	
 14302  014BC0                     __end_of___ftpack:
 14303                           	opt stack 0
 14304                           tblptru	equ	0xFF8
 14305                           tblptrh	equ	0xFF7
 14306                           tblptrl	equ	0xFF6
 14307                           tablat	equ	0xFF5
 14308                           prodh	equ	0xFF4
 14309                           prodl	equ	0xFF3
 14310                           intcon	equ	0xFF2
 14311                           postinc0	equ	0xFEE
 14312                           wreg	equ	0xFE8
 14313                           indf1	equ	0xFE7
 14314                           postdec1	equ	0xFE5
 14315                           fsr1h	equ	0xFE2
 14316                           fsr1l	equ	0xFE1
 14317                           indf2	equ	0xFDF
 14318                           postinc2	equ	0xFDE
 14319                           postdec2	equ	0xFDD
 14320                           fsr2h	equ	0xFDA
 14321                           fsr2l	equ	0xFD9
 14322                           status	equ	0xFD8
 14323                           
 14324 ;; *************** function ___ftneg *****************
 14325 ;; Defined at:
 14326 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 14327 ;; Parameters:    Size  Location     Type
 14328 ;;  f1              3   35[BANK1 ] float 
 14329 ;; Auto vars:     Size  Location     Type
 14330 ;;		None
 14331 ;; Return value:  Size  Location     Type
 14332 ;;                  3   35[BANK1 ] float 
 14333 ;; Registers used:
 14334 ;;		wreg, status,2, status,0
 14335 ;; Tracked objects:
 14336 ;;		On entry : 0/0
 14337 ;;		On exit  : 0/0
 14338 ;;		Unchanged: 0/0
 14339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14340 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14343 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14344 ;;Total ram usage:        3 bytes
 14345 ;; Hardware stack levels used:    1
 14346 ;; Hardware stack levels required when called:   14
 14347 ;; This function calls:
 14348 ;;		Nothing
 14349 ;; This function is called by:
 14350 ;;		_ringBufferLUT
 14351 ;;		_printf
 14352 ;; This function uses a non-reentrant model
 14353 ;;
 14354                           
 14355                           	psect	text38
 14356  015D8C                     __ptext38:
 14357                           	opt stack 0
 14358  015D8C                     ___ftneg:
 14359                           	opt stack 13
 14360                           
 14361                           ; BSR set to: 1
 14362                           ;incstack = 0
 14363  015D8C  0101               	movlb	1	; () banked
 14364  015D8E  5123               	movf	___ftneg@f1& (0+255),w,b
 14365  015D90  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 14366  015D92  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 14367  015D94  B4D8               	btfsc	status,2,c
 14368  015D96  D006               	goto	l1541
 14369                           
 14370                           ; BSR set to: 1
 14371  015D98  0E00               	movlw	0
 14372  015D9A  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 14373  015D9C  0E00               	movlw	0
 14374  015D9E  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 14375  015DA0  0E80               	movlw	128
 14376  015DA2  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 14377  015DA4                     l1541:
 14378                           
 14379                           ; BSR set to: 1
 14380  015DA4  C123  F123         	movff	___ftneg@f1,?___ftneg
 14381  015DA8  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 14382  015DAC  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 14383                           
 14384                           ; BSR set to: 1
 14385  015DB0  0012               	return		;funcret
 14386  015DB2                     __end_of___ftneg:
 14387                           	opt stack 0
 14388                           tblptru	equ	0xFF8
 14389                           tblptrh	equ	0xFF7
 14390                           tblptrl	equ	0xFF6
 14391                           tablat	equ	0xFF5
 14392                           prodh	equ	0xFF4
 14393                           prodl	equ	0xFF3
 14394                           intcon	equ	0xFF2
 14395                           postinc0	equ	0xFEE
 14396                           wreg	equ	0xFE8
 14397                           indf1	equ	0xFE7
 14398                           postdec1	equ	0xFE5
 14399                           fsr1h	equ	0xFE2
 14400                           fsr1l	equ	0xFE1
 14401                           indf2	equ	0xFDF
 14402                           postinc2	equ	0xFDE
 14403                           postdec2	equ	0xFDD
 14404                           fsr2h	equ	0xFDA
 14405                           fsr2l	equ	0xFD9
 14406                           status	equ	0xFD8
 14407                           
 14408 ;; *************** function ___ftge *****************
 14409 ;; Defined at:
 14410 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 14411 ;; Parameters:    Size  Location     Type
 14412 ;;  ff1             3   23[BANK1 ] float 
 14413 ;;  ff2             3   26[BANK1 ] float 
 14414 ;; Auto vars:     Size  Location     Type
 14415 ;;		None
 14416 ;; Return value:  Size  Location     Type
 14417 ;;		None               void
 14418 ;; Registers used:
 14419 ;;		wreg, status,2, status,0
 14420 ;; Tracked objects:
 14421 ;;		On entry : 0/0
 14422 ;;		On exit  : 0/0
 14423 ;;		Unchanged: 0/0
 14424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14425 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14427 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14428 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14429 ;;Total ram usage:        9 bytes
 14430 ;; Hardware stack levels used:    1
 14431 ;; Hardware stack levels required when called:   14
 14432 ;; This function calls:
 14433 ;;		Nothing
 14434 ;; This function is called by:
 14435 ;;		_printf
 14436 ;; This function uses a non-reentrant model
 14437 ;;
 14438                           
 14439                           	psect	text39
 14440  014DBA                     __ptext39:
 14441                           	opt stack 0
 14442  014DBA                     ___ftge:
 14443                           	opt stack 13
 14444                           
 14445                           ; BSR set to: 1
 14446                           ;incstack = 0
 14447  014DBA  0101               	movlb	1	; () banked
 14448  014DBC  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14449  014DBE  D016               	goto	l1523
 14450                           
 14451                           ; BSR set to: 1
 14452  014DC0  C117  F11D         	movff	___ftge@ff1,??___ftge
 14453  014DC4  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 14454  014DC8  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 14455  014DCC  1F1D               	comf	??___ftge& (0+255),f,b
 14456  014DCE  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 14457  014DD0  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 14458  014DD2  2B1D               	incf	??___ftge& (0+255),f,b
 14459  014DD4  0E00               	movlw	0
 14460  014DD6  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 14461  014DD8  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 14462  014DDA  0E00               	movlw	0
 14463  014DDC  251D               	addwf	??___ftge& (0+255),w,b
 14464  014DDE  6F17               	movwf	___ftge@ff1& (0+255),b
 14465  014DE0  0E00               	movlw	0
 14466  014DE2  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 14467  014DE4  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 14468  014DE6  0E80               	movlw	128
 14469  014DE8  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 14470  014DEA  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 14471  014DEC                     l1523:
 14472                           
 14473                           ; BSR set to: 1
 14474                           
 14475                           ; BSR set to: 1
 14476  014DEC  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14477  014DEE  D016               	goto	l1524
 14478                           
 14479                           ; BSR set to: 1
 14480  014DF0  C11A  F11D         	movff	___ftge@ff2,??___ftge
 14481  014DF4  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 14482  014DF8  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 14483  014DFC  1F1D               	comf	??___ftge& (0+255),f,b
 14484  014DFE  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 14485  014E00  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 14486  014E02  2B1D               	incf	??___ftge& (0+255),f,b
 14487  014E04  0E00               	movlw	0
 14488  014E06  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 14489  014E08  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 14490  014E0A  0E00               	movlw	0
 14491  014E0C  251D               	addwf	??___ftge& (0+255),w,b
 14492  014E0E  6F1A               	movwf	___ftge@ff2& (0+255),b
 14493  014E10  0E00               	movlw	0
 14494  014E12  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 14495  014E14  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14496  014E16  0E80               	movlw	128
 14497  014E18  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 14498  014E1A  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14499  014E1C                     l1524:
 14500                           
 14501                           ; BSR set to: 1
 14502                           
 14503                           ; BSR set to: 1
 14504  014E1C  0E00               	movlw	0
 14505  014E1E  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 14506  014E20  0E00               	movlw	0
 14507  014E22  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14508  014E24  0E80               	movlw	128
 14509  014E26  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14510                           
 14511                           ; BSR set to: 1
 14512  014E28  0E00               	movlw	0
 14513  014E2A  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 14514  014E2C  0E00               	movlw	0
 14515  014E2E  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14516  014E30  0E80               	movlw	128
 14517  014E32  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14518  014E34  511A               	movf	___ftge@ff2& (0+255),w,b
 14519  014E36  5D17               	subwf	___ftge@ff1& (0+255),w,b
 14520  014E38  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 14521  014E3A  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14522  014E3C  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 14523  014E3E  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14524  014E40  B0D8               	btfsc	status,0,c
 14525  014E42  D002               	goto	l7585
 14526                           
 14527                           ; BSR set to: 1
 14528  014E44  90D8               	bcf	status,0,c
 14529  014E46  0012               	return	
 14530  014E48                     l7585:
 14531                           
 14532                           ; BSR set to: 1
 14533                           
 14534                           ; BSR set to: 1
 14535  014E48  80D8               	bsf	status,0,c
 14536                           
 14537                           ; BSR set to: 1
 14538  014E4A  0012               	return	
 14539  014E4C                     __end_of___ftge:
 14540                           	opt stack 0
 14541                           tblptru	equ	0xFF8
 14542                           tblptrh	equ	0xFF7
 14543                           tblptrl	equ	0xFF6
 14544                           tablat	equ	0xFF5
 14545                           prodh	equ	0xFF4
 14546                           prodl	equ	0xFF3
 14547                           intcon	equ	0xFF2
 14548                           postinc0	equ	0xFEE
 14549                           wreg	equ	0xFE8
 14550                           indf1	equ	0xFE7
 14551                           postdec1	equ	0xFE5
 14552                           fsr1h	equ	0xFE2
 14553                           fsr1l	equ	0xFE1
 14554                           indf2	equ	0xFDF
 14555                           postinc2	equ	0xFDE
 14556                           postdec2	equ	0xFDD
 14557                           fsr2h	equ	0xFDA
 14558                           fsr2l	equ	0xFD9
 14559                           status	equ	0xFD8
 14560                           
 14561 ;; *************** function _SYSTEM_Initialize *****************
 14562 ;; Defined at:
 14563 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14564 ;; Parameters:    Size  Location     Type
 14565 ;;		None
 14566 ;; Auto vars:     Size  Location     Type
 14567 ;;		None
 14568 ;; Return value:  Size  Location     Type
 14569 ;;                  1    wreg      void 
 14570 ;; Registers used:
 14571 ;;		wreg, status,2, status,0, cstack
 14572 ;; Tracked objects:
 14573 ;;		On entry : 0/0
 14574 ;;		On exit  : 0/0
 14575 ;;		Unchanged: 0/0
 14576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14581 ;;Total ram usage:        0 bytes
 14582 ;; Hardware stack levels used:    1
 14583 ;; Hardware stack levels required when called:   16
 14584 ;; This function calls:
 14585 ;;		_ADCC_Initialize
 14586 ;;		_EUSART2_Initialize
 14587 ;;		_FVR_Initialize
 14588 ;;		_INTERRUPT_Initialize
 14589 ;;		_OSCILLATOR_Initialize
 14590 ;;		_PIN_MANAGER_Initialize
 14591 ;;		_PMD_Initialize
 14592 ;;		_TMR5_Initialize
 14593 ;;		_TMR6_Initialize
 14594 ;;		_TMR7_Initialize
 14595 ;; This function is called by:
 14596 ;;		_main
 14597 ;; This function uses a non-reentrant model
 14598 ;;
 14599                           
 14600                           	psect	text40
 14601  015CEA                     __ptext40:
 14602                           	opt stack 0
 14603  015CEA                     _SYSTEM_Initialize:
 14604                           	opt stack 14
 14605                           
 14606                           ;mcc.c: 52: INTERRUPT_Initialize();
 14607                           
 14608                           ; BSR set to: 1
 14609                           ;incstack = 0
 14610  015CEA  EC80  F0AF         	call	_INTERRUPT_Initialize	;wreg free
 14611                           
 14612                           ;mcc.c: 53: PMD_Initialize();
 14613  015CEE  EC43  F0AF         	call	_PMD_Initialize	;wreg free
 14614                           
 14615                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 14616  015CF2  EC8C  F0A6         	call	_PIN_MANAGER_Initialize	;wreg free
 14617                           
 14618                           ;mcc.c: 55: OSCILLATOR_Initialize();
 14619  015CF6  EC51  F0AF         	call	_OSCILLATOR_Initialize	;wreg free
 14620                           
 14621                           ;mcc.c: 56: FVR_Initialize();
 14622  015CFA  ECE4  F0AF         	call	_FVR_Initialize	;wreg free
 14623                           
 14624                           ;mcc.c: 57: TMR7_Initialize();
 14625  015CFE  EC88  F0AC         	call	_TMR7_Initialize	;wreg free
 14626                           
 14627                           ;mcc.c: 58: TMR6_Initialize();
 14628  015D02  EC2D  F0AE         	call	_TMR6_Initialize	;wreg free
 14629                           
 14630                           ;mcc.c: 59: ADCC_Initialize();
 14631  015D06  ECF4  F0AA         	call	_ADCC_Initialize	;wreg free
 14632                           
 14633                           ;mcc.c: 60: TMR5_Initialize();
 14634  015D0A  ECD5  F0AC         	call	_TMR5_Initialize	;wreg free
 14635                           
 14636                           ;mcc.c: 61: EUSART2_Initialize();
 14637  015D0E  EC8E  F0AA         	call	_EUSART2_Initialize	;wreg free
 14638  015D12  0012               	return		;funcret
 14639  015D14                     __end_of_SYSTEM_Initialize:
 14640                           	opt stack 0
 14641                           tblptru	equ	0xFF8
 14642                           tblptrh	equ	0xFF7
 14643                           tblptrl	equ	0xFF6
 14644                           tablat	equ	0xFF5
 14645                           prodh	equ	0xFF4
 14646                           prodl	equ	0xFF3
 14647                           intcon	equ	0xFF2
 14648                           postinc0	equ	0xFEE
 14649                           wreg	equ	0xFE8
 14650                           indf1	equ	0xFE7
 14651                           postdec1	equ	0xFE5
 14652                           fsr1h	equ	0xFE2
 14653                           fsr1l	equ	0xFE1
 14654                           indf2	equ	0xFDF
 14655                           postinc2	equ	0xFDE
 14656                           postdec2	equ	0xFDD
 14657                           fsr2h	equ	0xFDA
 14658                           fsr2l	equ	0xFD9
 14659                           status	equ	0xFD8
 14660                           
 14661 ;; *************** function _TMR7_Initialize *****************
 14662 ;; Defined at:
 14663 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;		None
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;		None
 14668 ;; Return value:  Size  Location     Type
 14669 ;;                  1    wreg      void 
 14670 ;; Registers used:
 14671 ;;		wreg, status,2, status,0, cstack
 14672 ;; Tracked objects:
 14673 ;;		On entry : 0/0
 14674 ;;		On exit  : 0/0
 14675 ;;		Unchanged: 0/0
 14676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14679 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14680 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14681 ;;Total ram usage:        2 bytes
 14682 ;; Hardware stack levels used:    1
 14683 ;; Hardware stack levels required when called:   15
 14684 ;; This function calls:
 14685 ;;		_TMR7_SetInterruptHandler
 14686 ;; This function is called by:
 14687 ;;		_SYSTEM_Initialize
 14688 ;; This function uses a non-reentrant model
 14689 ;;
 14690                           
 14691                           	psect	text41
 14692  015910                     __ptext41:
 14693                           	opt stack 0
 14694  015910                     _TMR7_Initialize:
 14695                           	opt stack 14
 14696                           
 14697                           ;tmr7.c: 69: T7GCON = 0x00;
 14698                           
 14699                           ;incstack = 0
 14700  015910  0E00               	movlw	0
 14701  015912  010F               	movlb	15	; () banked
 14702  015914  6F31               	movwf	49,b	;volatile
 14703                           
 14704                           ;tmr7.c: 72: T7GATE = 0x00;
 14705  015916  0E00               	movlw	0
 14706  015918  6F32               	movwf	50,b	;volatile
 14707                           
 14708                           ;tmr7.c: 75: T7CLK = 0x03;
 14709  01591A  0E03               	movlw	3
 14710  01591C  6F33               	movwf	51,b	;volatile
 14711                           
 14712                           ;tmr7.c: 78: TMR7H = 0x3C;
 14713  01591E  0E3C               	movlw	60
 14714  015920  6F2F               	movwf	47,b	;volatile
 14715                           
 14716                           ;tmr7.c: 81: TMR7L = 0xB0;
 14717  015922  0EB0               	movlw	176
 14718  015924  6F2E               	movwf	46,b	;volatile
 14719                           
 14720                           ; BSR set to: 15
 14721                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 14722  015926  512E               	movf	46,w,b	;volatile
 14723  015928  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 14724  01592C  0101               	movlb	1	; () banked
 14725  01592E  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 14726  015930  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 14727  015934  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 14728  015936  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 14729  015938  6FD8               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 14730  01593A  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 14731  01593C  6FD9               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 14732                           
 14733                           ; BSR set to: 1
 14734                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 14735  01593E  010E               	movlb	14	; () banked
 14736  015940  9D38               	bcf	56,6,b	;volatile
 14737                           
 14738                           ; BSR set to: 14
 14739                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 14740  015942  8D2E               	bsf	46,6,b	;volatile
 14741                           
 14742                           ; BSR set to: 14
 14743                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 14744  015944  0ED6               	movlw	low _TMR7_DefaultInterruptHandler
 14745  015946  0101               	movlb	1	; () banked
 14746  015948  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 14747  01594A  0E5F               	movlw	high _TMR7_DefaultInterruptHandler
 14748  01594C  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14749  01594E  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 14750  015950  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 14751  015952  ECA8  F0AF         	call	_TMR7_SetInterruptHandler	;wreg free
 14752                           
 14753                           ;tmr7.c: 96: T7CON = 0x31;
 14754  015956  0E31               	movlw	49
 14755  015958  010F               	movlb	15	; () banked
 14756  01595A  6F30               	movwf	48,b	;volatile
 14757                           
 14758                           ; BSR set to: 15
 14759  01595C  0012               	return		;funcret
 14760  01595E                     __end_of_TMR7_Initialize:
 14761                           	opt stack 0
 14762                           tblptru	equ	0xFF8
 14763                           tblptrh	equ	0xFF7
 14764                           tblptrl	equ	0xFF6
 14765                           tablat	equ	0xFF5
 14766                           prodh	equ	0xFF4
 14767                           prodl	equ	0xFF3
 14768                           intcon	equ	0xFF2
 14769                           postinc0	equ	0xFEE
 14770                           wreg	equ	0xFE8
 14771                           indf1	equ	0xFE7
 14772                           postdec1	equ	0xFE5
 14773                           fsr1h	equ	0xFE2
 14774                           fsr1l	equ	0xFE1
 14775                           indf2	equ	0xFDF
 14776                           postinc2	equ	0xFDE
 14777                           postdec2	equ	0xFDD
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782 ;; *************** function _TMR7_SetInterruptHandler *****************
 14783 ;; Defined at:
 14784 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 14787 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 14788 ;; Auto vars:     Size  Location     Type
 14789 ;;		None
 14790 ;; Return value:  Size  Location     Type
 14791 ;;                  1    wreg      void 
 14792 ;; Registers used:
 14793 ;;		wreg, status,2, status,0
 14794 ;; Tracked objects:
 14795 ;;		On entry : 0/0
 14796 ;;		On exit  : 0/0
 14797 ;;		Unchanged: 0/0
 14798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14799 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14802 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14803 ;;Total ram usage:        3 bytes
 14804 ;; Hardware stack levels used:    1
 14805 ;; Hardware stack levels required when called:   14
 14806 ;; This function calls:
 14807 ;;		Nothing
 14808 ;; This function is called by:
 14809 ;;		_TMR7_Initialize
 14810 ;;		_main
 14811 ;; This function uses a non-reentrant model
 14812 ;;
 14813                           
 14814                           	psect	text42
 14815  015F50                     __ptext42:
 14816                           	opt stack 0
 14817  015F50                     _TMR7_SetInterruptHandler:
 14818                           	opt stack 16
 14819                           
 14820                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 14821                           
 14822                           ; BSR set to: 15
 14823                           ;incstack = 0
 14824  015F50  C117  F1CD         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 14825  015F54  C118  F1CE         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 14826  015F58  C119  F1CF         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 14827  015F5C  0012               	return		;funcret
 14828  015F5E                     __end_of_TMR7_SetInterruptHandler:
 14829                           	opt stack 0
 14830                           tblptru	equ	0xFF8
 14831                           tblptrh	equ	0xFF7
 14832                           tblptrl	equ	0xFF6
 14833                           tablat	equ	0xFF5
 14834                           prodh	equ	0xFF4
 14835                           prodl	equ	0xFF3
 14836                           intcon	equ	0xFF2
 14837                           postinc0	equ	0xFEE
 14838                           wreg	equ	0xFE8
 14839                           indf1	equ	0xFE7
 14840                           postdec1	equ	0xFE5
 14841                           fsr1h	equ	0xFE2
 14842                           fsr1l	equ	0xFE1
 14843                           indf2	equ	0xFDF
 14844                           postinc2	equ	0xFDE
 14845                           postdec2	equ	0xFDD
 14846                           fsr2h	equ	0xFDA
 14847                           fsr2l	equ	0xFD9
 14848                           status	equ	0xFD8
 14849                           
 14850 ;; *************** function _TMR6_Initialize *****************
 14851 ;; Defined at:
 14852 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 14853 ;; Parameters:    Size  Location     Type
 14854 ;;		None
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;		None
 14857 ;; Return value:  Size  Location     Type
 14858 ;;                  1    wreg      void 
 14859 ;; Registers used:
 14860 ;;		wreg, status,2, status,0, cstack
 14861 ;; Tracked objects:
 14862 ;;		On entry : 0/0
 14863 ;;		On exit  : 0/0
 14864 ;;		Unchanged: 0/0
 14865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14870 ;;Total ram usage:        0 bytes
 14871 ;; Hardware stack levels used:    1
 14872 ;; Hardware stack levels required when called:   15
 14873 ;; This function calls:
 14874 ;;		_TMR6_SetInterruptHandler
 14875 ;; This function is called by:
 14876 ;;		_SYSTEM_Initialize
 14877 ;; This function uses a non-reentrant model
 14878 ;;
 14879                           
 14880                           	psect	text43
 14881  015C5A                     __ptext43:
 14882                           	opt stack 0
 14883  015C5A                     _TMR6_Initialize:
 14884                           	opt stack 14
 14885                           
 14886                           ;tmr6.c: 69: T6CLKCON = 0x04;
 14887                           
 14888                           ;incstack = 0
 14889  015C5A  0E04               	movlw	4
 14890  015C5C  6EB3               	movwf	4019,c	;volatile
 14891                           
 14892                           ;tmr6.c: 72: T6HLT = 0x20;
 14893  015C5E  0E20               	movlw	32
 14894  015C60  6EB2               	movwf	4018,c	;volatile
 14895                           
 14896                           ;tmr6.c: 75: T6RST = 0x00;
 14897  015C62  0E00               	movlw	0
 14898  015C64  6EB4               	movwf	4020,c	;volatile
 14899                           
 14900                           ;tmr6.c: 78: T6PR = 0xF1;
 14901  015C66  0EF1               	movlw	241
 14902  015C68  6EB0               	movwf	4016,c	;volatile
 14903                           
 14904                           ;tmr6.c: 81: T6TMR = 0x00;
 14905  015C6A  0E00               	movlw	0
 14906  015C6C  6EAF               	movwf	4015,c	;volatile
 14907                           
 14908                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 14909  015C6E  010E               	movlb	14	; () banked
 14910  015C70  9B38               	bcf	56,5,b	;volatile
 14911                           
 14912                           ; BSR set to: 14
 14913                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 14914  015C72  8B2E               	bsf	46,5,b	;volatile
 14915                           
 14916                           ; BSR set to: 14
 14917                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 14918  015C74  0ED8               	movlw	low _TMR6_DefaultInterruptHandler
 14919  015C76  0101               	movlb	1	; () banked
 14920  015C78  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 14921  015C7A  0E5F               	movlw	high _TMR6_DefaultInterruptHandler
 14922  015C7C  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 14923  015C7E  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 14924  015C80  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 14925  015C82  ECAF  F0AF         	call	_TMR6_SetInterruptHandler	;wreg free
 14926                           
 14927                           ;tmr6.c: 93: T6CON = 0xBF;
 14928  015C86  0EBF               	movlw	191
 14929  015C88  6EB1               	movwf	4017,c	;volatile
 14930  015C8A  0012               	return		;funcret
 14931  015C8C                     __end_of_TMR6_Initialize:
 14932                           	opt stack 0
 14933                           tblptru	equ	0xFF8
 14934                           tblptrh	equ	0xFF7
 14935                           tblptrl	equ	0xFF6
 14936                           tablat	equ	0xFF5
 14937                           prodh	equ	0xFF4
 14938                           prodl	equ	0xFF3
 14939                           intcon	equ	0xFF2
 14940                           postinc0	equ	0xFEE
 14941                           wreg	equ	0xFE8
 14942                           indf1	equ	0xFE7
 14943                           postdec1	equ	0xFE5
 14944                           fsr1h	equ	0xFE2
 14945                           fsr1l	equ	0xFE1
 14946                           indf2	equ	0xFDF
 14947                           postinc2	equ	0xFDE
 14948                           postdec2	equ	0xFDD
 14949                           fsr2h	equ	0xFDA
 14950                           fsr2l	equ	0xFD9
 14951                           status	equ	0xFD8
 14952                           
 14953 ;; *************** function _TMR6_SetInterruptHandler *****************
 14954 ;; Defined at:
 14955 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 14956 ;; Parameters:    Size  Location     Type
 14957 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 14958 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 14959 ;; Auto vars:     Size  Location     Type
 14960 ;;		None
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      void 
 14963 ;; Registers used:
 14964 ;;		wreg, status,2, status,0
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14970 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14973 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14974 ;;Total ram usage:        3 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; Hardware stack levels required when called:   14
 14977 ;; This function calls:
 14978 ;;		Nothing
 14979 ;; This function is called by:
 14980 ;;		_TMR6_Initialize
 14981 ;;		_main
 14982 ;; This function uses a non-reentrant model
 14983 ;;
 14984                           
 14985                           	psect	text44
 14986  015F5E                     __ptext44:
 14987                           	opt stack 0
 14988  015F5E                     _TMR6_SetInterruptHandler:
 14989                           	opt stack 16
 14990                           
 14991                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 14992                           
 14993                           ;incstack = 0
 14994  015F5E  C117  F1D0         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 14995  015F62  C118  F1D1         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 14996  015F66  C119  F1D2         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 14997  015F6A  0012               	return		;funcret
 14998  015F6C                     __end_of_TMR6_SetInterruptHandler:
 14999                           	opt stack 0
 15000                           tblptru	equ	0xFF8
 15001                           tblptrh	equ	0xFF7
 15002                           tblptrl	equ	0xFF6
 15003                           tablat	equ	0xFF5
 15004                           prodh	equ	0xFF4
 15005                           prodl	equ	0xFF3
 15006                           intcon	equ	0xFF2
 15007                           postinc0	equ	0xFEE
 15008                           wreg	equ	0xFE8
 15009                           indf1	equ	0xFE7
 15010                           postdec1	equ	0xFE5
 15011                           fsr1h	equ	0xFE2
 15012                           fsr1l	equ	0xFE1
 15013                           indf2	equ	0xFDF
 15014                           postinc2	equ	0xFDE
 15015                           postdec2	equ	0xFDD
 15016                           fsr2h	equ	0xFDA
 15017                           fsr2l	equ	0xFD9
 15018                           status	equ	0xFD8
 15019                           
 15020 ;; *************** function _TMR5_Initialize *****************
 15021 ;; Defined at:
 15022 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;		None
 15025 ;; Auto vars:     Size  Location     Type
 15026 ;;		None
 15027 ;; Return value:  Size  Location     Type
 15028 ;;                  1    wreg      void 
 15029 ;; Registers used:
 15030 ;;		wreg, status,2, status,0, cstack
 15031 ;; Tracked objects:
 15032 ;;		On entry : 0/0
 15033 ;;		On exit  : 0/0
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15038 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15039 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15040 ;;Total ram usage:        2 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:   15
 15043 ;; This function calls:
 15044 ;;		_TMR5_SetInterruptHandler
 15045 ;; This function is called by:
 15046 ;;		_SYSTEM_Initialize
 15047 ;; This function uses a non-reentrant model
 15048 ;;
 15049                           
 15050                           	psect	text45
 15051  0159AA                     __ptext45:
 15052                           	opt stack 0
 15053  0159AA                     _TMR5_Initialize:
 15054                           	opt stack 14
 15055                           
 15056                           ;tmr5.c: 69: T5GCON = 0x00;
 15057                           
 15058                           ;incstack = 0
 15059  0159AA  0E00               	movlw	0
 15060  0159AC  6EC4               	movwf	4036,c	;volatile
 15061                           
 15062                           ;tmr5.c: 72: T5GATE = 0x00;
 15063  0159AE  0E00               	movlw	0
 15064  0159B0  6EC5               	movwf	4037,c	;volatile
 15065                           
 15066                           ;tmr5.c: 75: T5CLK = 0x01;
 15067  0159B2  0E01               	movlw	1
 15068  0159B4  6EC6               	movwf	4038,c	;volatile
 15069                           
 15070                           ;tmr5.c: 78: TMR5H = 0x00;
 15071  0159B6  0E00               	movlw	0
 15072  0159B8  6EC2               	movwf	4034,c	;volatile
 15073                           
 15074                           ;tmr5.c: 81: TMR5L = 0x00;
 15075  0159BA  0E00               	movlw	0
 15076  0159BC  6EC1               	movwf	4033,c	;volatile
 15077                           
 15078                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15079  0159BE  50C1               	movf	4033,w,c	;volatile
 15080  0159C0  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 15081  0159C4  0101               	movlb	1	; () banked
 15082  0159C6  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 15083  0159C8  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15084  0159CC  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 15085  0159CE  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 15086  0159D0  6FD6               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 15087  0159D2  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 15088  0159D4  6FD7               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 15089                           
 15090                           ; BSR set to: 1
 15091                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 15092  0159D6  010E               	movlb	14	; () banked
 15093  0159D8  9938               	bcf	56,4,b	;volatile
 15094                           
 15095                           ; BSR set to: 14
 15096                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 15097  0159DA  892E               	bsf	46,4,b	;volatile
 15098                           
 15099                           ; BSR set to: 14
 15100                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 15101  0159DC  0EDA               	movlw	low _TMR5_DefaultInterruptHandler
 15102  0159DE  0101               	movlb	1	; () banked
 15103  0159E0  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15104  0159E2  0E5F               	movlw	high _TMR5_DefaultInterruptHandler
 15105  0159E4  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15106  0159E6  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15107  0159E8  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15108  0159EA  ECB6  F0AF         	call	_TMR5_SetInterruptHandler	;wreg free
 15109                           
 15110                           ;tmr5.c: 96: T5CON = 0x13;
 15111  0159EE  0E13               	movlw	19
 15112  0159F0  6EC3               	movwf	4035,c	;volatile
 15113  0159F2  0012               	return		;funcret
 15114  0159F4                     __end_of_TMR5_Initialize:
 15115                           	opt stack 0
 15116                           tblptru	equ	0xFF8
 15117                           tblptrh	equ	0xFF7
 15118                           tblptrl	equ	0xFF6
 15119                           tablat	equ	0xFF5
 15120                           prodh	equ	0xFF4
 15121                           prodl	equ	0xFF3
 15122                           intcon	equ	0xFF2
 15123                           postinc0	equ	0xFEE
 15124                           wreg	equ	0xFE8
 15125                           indf1	equ	0xFE7
 15126                           postdec1	equ	0xFE5
 15127                           fsr1h	equ	0xFE2
 15128                           fsr1l	equ	0xFE1
 15129                           indf2	equ	0xFDF
 15130                           postinc2	equ	0xFDE
 15131                           postdec2	equ	0xFDD
 15132                           fsr2h	equ	0xFDA
 15133                           fsr2l	equ	0xFD9
 15134                           status	equ	0xFD8
 15135                           
 15136 ;; *************** function _TMR5_SetInterruptHandler *****************
 15137 ;; Defined at:
 15138 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15141 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15142 ;; Auto vars:     Size  Location     Type
 15143 ;;		None
 15144 ;; Return value:  Size  Location     Type
 15145 ;;                  1    wreg      void 
 15146 ;; Registers used:
 15147 ;;		wreg, status,2, status,0
 15148 ;; Tracked objects:
 15149 ;;		On entry : 0/0
 15150 ;;		On exit  : 0/0
 15151 ;;		Unchanged: 0/0
 15152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15153 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15156 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15157 ;;Total ram usage:        3 bytes
 15158 ;; Hardware stack levels used:    1
 15159 ;; Hardware stack levels required when called:   14
 15160 ;; This function calls:
 15161 ;;		Nothing
 15162 ;; This function is called by:
 15163 ;;		_TMR5_Initialize
 15164 ;; This function uses a non-reentrant model
 15165 ;;
 15166                           
 15167                           	psect	text46
 15168  015F6C                     __ptext46:
 15169                           	opt stack 0
 15170  015F6C                     _TMR5_SetInterruptHandler:
 15171                           	opt stack 14
 15172                           
 15173                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 15174                           
 15175                           ;incstack = 0
 15176  015F6C  C117  F1BE         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15177  015F70  C118  F1BF         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15178  015F74  C119  F1C0         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 15179  015F78  0012               	return		;funcret
 15180  015F7A                     __end_of_TMR5_SetInterruptHandler:
 15181                           	opt stack 0
 15182                           tblptru	equ	0xFF8
 15183                           tblptrh	equ	0xFF7
 15184                           tblptrl	equ	0xFF6
 15185                           tablat	equ	0xFF5
 15186                           prodh	equ	0xFF4
 15187                           prodl	equ	0xFF3
 15188                           intcon	equ	0xFF2
 15189                           postinc0	equ	0xFEE
 15190                           wreg	equ	0xFE8
 15191                           indf1	equ	0xFE7
 15192                           postdec1	equ	0xFE5
 15193                           fsr1h	equ	0xFE2
 15194                           fsr1l	equ	0xFE1
 15195                           indf2	equ	0xFDF
 15196                           postinc2	equ	0xFDE
 15197                           postdec2	equ	0xFDD
 15198                           fsr2h	equ	0xFDA
 15199                           fsr2l	equ	0xFD9
 15200                           status	equ	0xFD8
 15201                           
 15202 ;; *************** function _PMD_Initialize *****************
 15203 ;; Defined at:
 15204 ;;		line 82 in file "mcc_generated_files/mcc.c"
 15205 ;; Parameters:    Size  Location     Type
 15206 ;;		None
 15207 ;; Auto vars:     Size  Location     Type
 15208 ;;		None
 15209 ;; Return value:  Size  Location     Type
 15210 ;;                  1    wreg      void 
 15211 ;; Registers used:
 15212 ;;		wreg, status,2
 15213 ;; Tracked objects:
 15214 ;;		On entry : 0/0
 15215 ;;		On exit  : 0/0
 15216 ;;		Unchanged: 0/0
 15217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15222 ;;Total ram usage:        0 bytes
 15223 ;; Hardware stack levels used:    1
 15224 ;; Hardware stack levels required when called:   14
 15225 ;; This function calls:
 15226 ;;		Nothing
 15227 ;; This function is called by:
 15228 ;;		_SYSTEM_Initialize
 15229 ;; This function uses a non-reentrant model
 15230 ;;
 15231                           
 15232                           	psect	text47
 15233  015E86                     __ptext47:
 15234                           	opt stack 0
 15235  015E86                     _PMD_Initialize:
 15236                           	opt stack 15
 15237                           
 15238                           ;mcc.c: 85: PMD0 = 0x00;
 15239                           
 15240                           ;incstack = 0
 15241  015E86  0E00               	movlw	0
 15242  015E88  010E               	movlb	14	; () banked
 15243  015E8A  6F4C               	movwf	76,b	;volatile
 15244                           
 15245                           ;mcc.c: 87: PMD1 = 0x00;
 15246  015E8C  0E00               	movlw	0
 15247  015E8E  6F4D               	movwf	77,b	;volatile
 15248                           
 15249                           ;mcc.c: 89: PMD2 = 0x00;
 15250  015E90  0E00               	movlw	0
 15251  015E92  6F4E               	movwf	78,b	;volatile
 15252                           
 15253                           ;mcc.c: 91: PMD3 = 0x00;
 15254  015E94  0E00               	movlw	0
 15255  015E96  6F4F               	movwf	79,b	;volatile
 15256                           
 15257                           ;mcc.c: 93: PMD4 = 0x00;
 15258  015E98  0E00               	movlw	0
 15259  015E9A  6F50               	movwf	80,b	;volatile
 15260                           
 15261                           ;mcc.c: 95: PMD5 = 0x00;
 15262  015E9C  0E00               	movlw	0
 15263  015E9E  6F51               	movwf	81,b	;volatile
 15264                           
 15265                           ; BSR set to: 14
 15266  015EA0  0012               	return		;funcret
 15267  015EA2                     __end_of_PMD_Initialize:
 15268                           	opt stack 0
 15269                           tblptru	equ	0xFF8
 15270                           tblptrh	equ	0xFF7
 15271                           tblptrl	equ	0xFF6
 15272                           tablat	equ	0xFF5
 15273                           prodh	equ	0xFF4
 15274                           prodl	equ	0xFF3
 15275                           intcon	equ	0xFF2
 15276                           postinc0	equ	0xFEE
 15277                           wreg	equ	0xFE8
 15278                           indf1	equ	0xFE7
 15279                           postdec1	equ	0xFE5
 15280                           fsr1h	equ	0xFE2
 15281                           fsr1l	equ	0xFE1
 15282                           indf2	equ	0xFDF
 15283                           postinc2	equ	0xFDE
 15284                           postdec2	equ	0xFDD
 15285                           fsr2h	equ	0xFDA
 15286                           fsr2l	equ	0xFD9
 15287                           status	equ	0xFD8
 15288                           
 15289 ;; *************** function _PIN_MANAGER_Initialize *****************
 15290 ;; Defined at:
 15291 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15292 ;; Parameters:    Size  Location     Type
 15293 ;;		None
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;		None
 15296 ;; Return value:  Size  Location     Type
 15297 ;;                  1    wreg      void 
 15298 ;; Registers used:
 15299 ;;		wreg, status,2
 15300 ;; Tracked objects:
 15301 ;;		On entry : 0/0
 15302 ;;		On exit  : 0/0
 15303 ;;		Unchanged: 0/0
 15304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15309 ;;Total ram usage:        0 bytes
 15310 ;; Hardware stack levels used:    1
 15311 ;; Hardware stack levels required when called:   14
 15312 ;; This function calls:
 15313 ;;		Nothing
 15314 ;; This function is called by:
 15315 ;;		_SYSTEM_Initialize
 15316 ;; This function uses a non-reentrant model
 15317 ;;
 15318                           
 15319                           	psect	text48
 15320  014D18                     __ptext48:
 15321                           	opt stack 0
 15322  014D18                     _PIN_MANAGER_Initialize:
 15323                           	opt stack 15
 15324                           
 15325                           ;pin_manager.c: 62: LATE = 0x00;
 15326                           
 15327                           ; BSR set to: 14
 15328                           ;incstack = 0
 15329  014D18  0E00               	movlw	0
 15330  014D1A  6E7D               	movwf	3965,c	;volatile
 15331                           
 15332                           ;pin_manager.c: 63: LATD = 0x00;
 15333  014D1C  0E00               	movlw	0
 15334  014D1E  6E7C               	movwf	3964,c	;volatile
 15335                           
 15336                           ;pin_manager.c: 64: LATA = 0x00;
 15337  014D20  0E00               	movlw	0
 15338  014D22  6E79               	movwf	3961,c	;volatile
 15339                           
 15340                           ;pin_manager.c: 65: LATF = 0x00;
 15341  014D24  0E00               	movlw	0
 15342  014D26  6E7E               	movwf	3966,c	;volatile
 15343                           
 15344                           ;pin_manager.c: 66: LATB = 0x00;
 15345  014D28  0E00               	movlw	0
 15346  014D2A  6E7A               	movwf	3962,c	;volatile
 15347                           
 15348                           ;pin_manager.c: 67: LATG = 0x00;
 15349  014D2C  0E00               	movlw	0
 15350  014D2E  6E7F               	movwf	3967,c	;volatile
 15351                           
 15352                           ;pin_manager.c: 68: LATC = 0x00;
 15353  014D30  0E00               	movlw	0
 15354  014D32  6E7B               	movwf	3963,c	;volatile
 15355                           
 15356                           ;pin_manager.c: 69: LATH = 0x00;
 15357  014D34  0E00               	movlw	0
 15358  014D36  6E80               	movwf	3968,c	;volatile
 15359                           
 15360                           ;pin_manager.c: 74: TRISE = 0xFF;
 15361  014D38  6885               	setf	3973,c	;volatile
 15362                           
 15363                           ;pin_manager.c: 75: TRISF = 0xF0;
 15364  014D3A  0EF0               	movlw	240
 15365  014D3C  6E86               	movwf	3974,c	;volatile
 15366                           
 15367                           ;pin_manager.c: 76: TRISA = 0xFF;
 15368  014D3E  6881               	setf	3969,c	;volatile
 15369                           
 15370                           ;pin_manager.c: 77: TRISG = 0x5C;
 15371  014D40  0E5C               	movlw	92
 15372  014D42  6E87               	movwf	3975,c	;volatile
 15373                           
 15374                           ;pin_manager.c: 78: TRISB = 0xFF;
 15375  014D44  6882               	setf	3970,c	;volatile
 15376                           
 15377                           ;pin_manager.c: 79: TRISH = 0x0F;
 15378  014D46  0E0F               	movlw	15
 15379  014D48  6E88               	movwf	3976,c	;volatile
 15380                           
 15381                           ;pin_manager.c: 80: TRISC = 0xFF;
 15382  014D4A  6883               	setf	3971,c	;volatile
 15383                           
 15384                           ;pin_manager.c: 81: TRISD = 0xFF;
 15385  014D4C  6884               	setf	3972,c	;volatile
 15386                           
 15387                           ;pin_manager.c: 86: ANSELD = 0xFF;
 15388  014D4E  010E               	movlb	14	; () banked
 15389  014D50  69A7               	setf	167,b	;volatile
 15390                           
 15391                           ; BSR set to: 14
 15392                           ;pin_manager.c: 87: ANSELB = 0xFF;
 15393  014D52  699A               	setf	154,b	;volatile
 15394                           
 15395                           ; BSR set to: 14
 15396                           ;pin_manager.c: 88: ANSELE = 0xFF;
 15397  014D54  69AF               	setf	175,b	;volatile
 15398                           
 15399                           ;pin_manager.c: 89: ANSELG = 0x3C;
 15400  014D56  0E3C               	movlw	60
 15401  014D58  6FBC               	movwf	188,b	;volatile
 15402                           
 15403                           ;pin_manager.c: 90: ANSELF = 0xF0;
 15404  014D5A  0EF0               	movlw	240
 15405  014D5C  6FB4               	movwf	180,b	;volatile
 15406                           
 15407                           ; BSR set to: 14
 15408                           ;pin_manager.c: 91: ANSELA = 0xFF;
 15409  014D5E  6992               	setf	146,b	;volatile
 15410                           
 15411                           ;pin_manager.c: 96: WPUD = 0x00;
 15412  014D60  0E00               	movlw	0
 15413  014D62  6FA6               	movwf	166,b	;volatile
 15414                           
 15415                           ;pin_manager.c: 97: WPUF = 0x00;
 15416  014D64  0E00               	movlw	0
 15417  014D66  6FB3               	movwf	179,b	;volatile
 15418                           
 15419                           ;pin_manager.c: 98: WPUE = 0x00;
 15420  014D68  0E00               	movlw	0
 15421  014D6A  6FAE               	movwf	174,b	;volatile
 15422                           
 15423                           ;pin_manager.c: 99: WPUB = 0x00;
 15424  014D6C  0E00               	movlw	0
 15425  014D6E  6F99               	movwf	153,b	;volatile
 15426                           
 15427                           ;pin_manager.c: 100: WPUG = 0x00;
 15428  014D70  0E00               	movlw	0
 15429  014D72  6FBB               	movwf	187,b	;volatile
 15430                           
 15431                           ;pin_manager.c: 101: WPUA = 0x00;
 15432  014D74  0E00               	movlw	0
 15433  014D76  6F91               	movwf	145,b	;volatile
 15434                           
 15435                           ;pin_manager.c: 102: WPUC = 0x00;
 15436  014D78  0E00               	movlw	0
 15437  014D7A  6FA1               	movwf	161,b	;volatile
 15438                           
 15439                           ;pin_manager.c: 103: WPUH = 0x00;
 15440  014D7C  0E00               	movlw	0
 15441  014D7E  6FC0               	movwf	192,b	;volatile
 15442                           
 15443                           ;pin_manager.c: 108: ODCONE = 0x00;
 15444  014D80  0E00               	movlw	0
 15445  014D82  6FAD               	movwf	173,b	;volatile
 15446                           
 15447                           ;pin_manager.c: 109: ODCONF = 0x01;
 15448  014D84  0E01               	movlw	1
 15449  014D86  6FB2               	movwf	178,b	;volatile
 15450                           
 15451                           ;pin_manager.c: 110: ODCONA = 0x00;
 15452  014D88  0E00               	movlw	0
 15453  014D8A  6F90               	movwf	144,b	;volatile
 15454                           
 15455                           ;pin_manager.c: 111: ODCONG = 0x00;
 15456  014D8C  0E00               	movlw	0
 15457  014D8E  6FBA               	movwf	186,b	;volatile
 15458                           
 15459                           ;pin_manager.c: 112: ODCONB = 0x00;
 15460  014D90  0E00               	movlw	0
 15461  014D92  6F98               	movwf	152,b	;volatile
 15462                           
 15463                           ;pin_manager.c: 113: ODCONH = 0x00;
 15464  014D94  0E00               	movlw	0
 15465  014D96  6FBF               	movwf	191,b	;volatile
 15466                           
 15467                           ;pin_manager.c: 114: ODCONC = 0x00;
 15468  014D98  0E00               	movlw	0
 15469  014D9A  6FA0               	movwf	160,b	;volatile
 15470                           
 15471                           ;pin_manager.c: 115: ODCOND = 0x00;
 15472  014D9C  0E00               	movlw	0
 15473  014D9E  6FA5               	movwf	165,b	;volatile
 15474                           
 15475                           ; BSR set to: 14
 15476                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 15477  014DA0  698F               	setf	143,b	;volatile
 15478                           
 15479                           ; BSR set to: 14
 15480                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 15481  014DA2  6997               	setf	151,b	;volatile
 15482                           
 15483                           ; BSR set to: 14
 15484                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 15485  014DA4  699F               	setf	159,b	;volatile
 15486                           
 15487                           ; BSR set to: 14
 15488                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 15489  014DA6  69A4               	setf	164,b	;volatile
 15490                           
 15491                           ; BSR set to: 14
 15492                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 15493  014DA8  69AC               	setf	172,b	;volatile
 15494                           
 15495                           ; BSR set to: 14
 15496                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 15497  014DAA  69B1               	setf	177,b	;volatile
 15498                           
 15499                           ; BSR set to: 14
 15500                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 15501  014DAC  69B9               	setf	185,b	;volatile
 15502                           
 15503                           ; BSR set to: 14
 15504                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 15505  014DAE  69BE               	setf	190,b	;volatile
 15506                           
 15507                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 15508  014DB0  0E0E               	movlw	14
 15509  014DB2  6F89               	movwf	137,b	;volatile
 15510                           
 15511                           ;pin_manager.c: 137: RX2PPS = 0x36;
 15512  014DB4  0E36               	movlw	54
 15513  014DB6  6F11               	movwf	17,b	;volatile
 15514                           
 15515                           ; BSR set to: 14
 15516  014DB8  0012               	return		;funcret
 15517  014DBA                     __end_of_PIN_MANAGER_Initialize:
 15518                           	opt stack 0
 15519                           tblptru	equ	0xFF8
 15520                           tblptrh	equ	0xFF7
 15521                           tblptrl	equ	0xFF6
 15522                           tablat	equ	0xFF5
 15523                           prodh	equ	0xFF4
 15524                           prodl	equ	0xFF3
 15525                           intcon	equ	0xFF2
 15526                           postinc0	equ	0xFEE
 15527                           wreg	equ	0xFE8
 15528                           indf1	equ	0xFE7
 15529                           postdec1	equ	0xFE5
 15530                           fsr1h	equ	0xFE2
 15531                           fsr1l	equ	0xFE1
 15532                           indf2	equ	0xFDF
 15533                           postinc2	equ	0xFDE
 15534                           postdec2	equ	0xFDD
 15535                           fsr2h	equ	0xFDA
 15536                           fsr2l	equ	0xFD9
 15537                           status	equ	0xFD8
 15538                           
 15539 ;; *************** function _OSCILLATOR_Initialize *****************
 15540 ;; Defined at:
 15541 ;;		line 64 in file "mcc_generated_files/mcc.c"
 15542 ;; Parameters:    Size  Location     Type
 15543 ;;		None
 15544 ;; Auto vars:     Size  Location     Type
 15545 ;;		None
 15546 ;; Return value:  Size  Location     Type
 15547 ;;                  1    wreg      void 
 15548 ;; Registers used:
 15549 ;;		wreg, status,2
 15550 ;; Tracked objects:
 15551 ;;		On entry : 0/0
 15552 ;;		On exit  : 0/0
 15553 ;;		Unchanged: 0/0
 15554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15559 ;;Total ram usage:        0 bytes
 15560 ;; Hardware stack levels used:    1
 15561 ;; Hardware stack levels required when called:   14
 15562 ;; This function calls:
 15563 ;;		Nothing
 15564 ;; This function is called by:
 15565 ;;		_SYSTEM_Initialize
 15566 ;; This function uses a non-reentrant model
 15567 ;;
 15568                           
 15569                           	psect	text49
 15570  015EA2                     __ptext49:
 15571                           	opt stack 0
 15572  015EA2                     _OSCILLATOR_Initialize:
 15573                           	opt stack 15
 15574                           
 15575                           ;mcc.c: 67: OSCCON1 = 0x20;
 15576                           
 15577                           ; BSR set to: 14
 15578                           ;incstack = 0
 15579  015EA2  0E20               	movlw	32
 15580  015EA4  010E               	movlb	14	; () banked
 15581  015EA6  6F43               	movwf	67,b	;volatile
 15582                           
 15583                           ;mcc.c: 69: OSCCON3 = 0x00;
 15584  015EA8  0E00               	movlw	0
 15585  015EAA  6F45               	movwf	69,b	;volatile
 15586                           
 15587                           ;mcc.c: 71: OSCEN = 0x00;
 15588  015EAC  0E00               	movlw	0
 15589  015EAE  6F47               	movwf	71,b	;volatile
 15590                           
 15591                           ;mcc.c: 73: OSCFRQ = 0x02;
 15592  015EB0  0E02               	movlw	2
 15593  015EB2  6F49               	movwf	73,b	;volatile
 15594                           
 15595                           ;mcc.c: 75: OSCTUNE = 0x00;
 15596  015EB4  0E00               	movlw	0
 15597  015EB6  6F48               	movwf	72,b	;volatile
 15598  015EB8                     
 15599                           ; BSR set to: 14
 15600                           
 15601                           ; BSR set to: 14
 15602                           ;mcc.c: 78: {
 15603  015EB8  B146               	btfsc	70,0,b	;volatile
 15604  015EBA  0012               	return	
 15605  015EBC  D7FD               	goto	l55
 15606  015EBE                     __end_of_OSCILLATOR_Initialize:
 15607                           	opt stack 0
 15608                           tblptru	equ	0xFF8
 15609                           tblptrh	equ	0xFF7
 15610                           tblptrl	equ	0xFF6
 15611                           tablat	equ	0xFF5
 15612                           prodh	equ	0xFF4
 15613                           prodl	equ	0xFF3
 15614                           intcon	equ	0xFF2
 15615                           postinc0	equ	0xFEE
 15616                           wreg	equ	0xFE8
 15617                           indf1	equ	0xFE7
 15618                           postdec1	equ	0xFE5
 15619                           fsr1h	equ	0xFE2
 15620                           fsr1l	equ	0xFE1
 15621                           indf2	equ	0xFDF
 15622                           postinc2	equ	0xFDE
 15623                           postdec2	equ	0xFDD
 15624                           fsr2h	equ	0xFDA
 15625                           fsr2l	equ	0xFD9
 15626                           status	equ	0xFD8
 15627                           
 15628 ;; *************** function _INTERRUPT_Initialize *****************
 15629 ;; Defined at:
 15630 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15631 ;; Parameters:    Size  Location     Type
 15632 ;;		None
 15633 ;; Auto vars:     Size  Location     Type
 15634 ;;		None
 15635 ;; Return value:  Size  Location     Type
 15636 ;;                  1    wreg      void 
 15637 ;; Registers used:
 15638 ;;		None
 15639 ;; Tracked objects:
 15640 ;;		On entry : 0/0
 15641 ;;		On exit  : 0/0
 15642 ;;		Unchanged: 0/0
 15643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15648 ;;Total ram usage:        0 bytes
 15649 ;; Hardware stack levels used:    1
 15650 ;; Hardware stack levels required when called:   14
 15651 ;; This function calls:
 15652 ;;		Nothing
 15653 ;; This function is called by:
 15654 ;;		_SYSTEM_Initialize
 15655 ;; This function uses a non-reentrant model
 15656 ;;
 15657                           
 15658                           	psect	text50
 15659  015F00                     __ptext50:
 15660                           	opt stack 0
 15661  015F00                     _INTERRUPT_Initialize:
 15662                           	opt stack 15
 15663                           
 15664                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 15665                           
 15666                           ; BSR set to: 14
 15667                           ;incstack = 0
 15668  015F00  8AF2               	bsf	intcon,5,c	;volatile
 15669                           
 15670                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 15671  015F02  010E               	movlb	14	; () banked
 15672  015F04  8F22               	bsf	34,7,b	;volatile
 15673                           
 15674                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 15675  015F06  8924               	bsf	36,4,b	;volatile
 15676                           
 15677                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 15678  015F08  8120               	bsf	32,0,b	;volatile
 15679                           
 15680                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 15681  015F0A  9B24               	bcf	36,5,b	;volatile
 15682                           
 15683                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 15684  015F0C  9D22               	bcf	34,6,b	;volatile
 15685                           
 15686                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 15687  015F0E  9D24               	bcf	36,6,b	;volatile
 15688                           
 15689                           ; BSR set to: 14
 15690  015F10  0012               	return		;funcret
 15691  015F12                     __end_of_INTERRUPT_Initialize:
 15692                           	opt stack 0
 15693                           tblptru	equ	0xFF8
 15694                           tblptrh	equ	0xFF7
 15695                           tblptrl	equ	0xFF6
 15696                           tablat	equ	0xFF5
 15697                           prodh	equ	0xFF4
 15698                           prodl	equ	0xFF3
 15699                           intcon	equ	0xFF2
 15700                           postinc0	equ	0xFEE
 15701                           wreg	equ	0xFE8
 15702                           indf1	equ	0xFE7
 15703                           postdec1	equ	0xFE5
 15704                           fsr1h	equ	0xFE2
 15705                           fsr1l	equ	0xFE1
 15706                           indf2	equ	0xFDF
 15707                           postinc2	equ	0xFDE
 15708                           postdec2	equ	0xFDD
 15709                           fsr2h	equ	0xFDA
 15710                           fsr2l	equ	0xFD9
 15711                           status	equ	0xFD8
 15712                           
 15713 ;; *************** function _FVR_Initialize *****************
 15714 ;; Defined at:
 15715 ;;		line 58 in file "mcc_generated_files/fvr.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;		None
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;		None
 15720 ;; Return value:  Size  Location     Type
 15721 ;;                  1    wreg      void 
 15722 ;; Registers used:
 15723 ;;		wreg, status,2
 15724 ;; Tracked objects:
 15725 ;;		On entry : 0/0
 15726 ;;		On exit  : 0/0
 15727 ;;		Unchanged: 0/0
 15728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15733 ;;Total ram usage:        0 bytes
 15734 ;; Hardware stack levels used:    1
 15735 ;; Hardware stack levels required when called:   14
 15736 ;; This function calls:
 15737 ;;		Nothing
 15738 ;; This function is called by:
 15739 ;;		_SYSTEM_Initialize
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           	psect	text51
 15744  015FC8                     __ptext51:
 15745                           	opt stack 0
 15746  015FC8                     _FVR_Initialize:
 15747                           	opt stack 15
 15748                           
 15749                           ;fvr.c: 61: FVRCON = 0xA6;
 15750                           
 15751                           ; BSR set to: 14
 15752                           ;incstack = 0
 15753  015FC8  0EA6               	movlw	166
 15754  015FCA  010E               	movlb	14	; () banked
 15755  015FCC  6FC4               	movwf	196,b	;volatile
 15756                           
 15757                           ; BSR set to: 14
 15758  015FCE  0012               	return		;funcret
 15759  015FD0                     __end_of_FVR_Initialize:
 15760                           	opt stack 0
 15761                           tblptru	equ	0xFF8
 15762                           tblptrh	equ	0xFF7
 15763                           tblptrl	equ	0xFF6
 15764                           tablat	equ	0xFF5
 15765                           prodh	equ	0xFF4
 15766                           prodl	equ	0xFF3
 15767                           intcon	equ	0xFF2
 15768                           postinc0	equ	0xFEE
 15769                           wreg	equ	0xFE8
 15770                           indf1	equ	0xFE7
 15771                           postdec1	equ	0xFE5
 15772                           fsr1h	equ	0xFE2
 15773                           fsr1l	equ	0xFE1
 15774                           indf2	equ	0xFDF
 15775                           postinc2	equ	0xFDE
 15776                           postdec2	equ	0xFDD
 15777                           fsr2h	equ	0xFDA
 15778                           fsr2l	equ	0xFD9
 15779                           status	equ	0xFD8
 15780                           
 15781 ;; *************** function _EUSART2_Initialize *****************
 15782 ;; Defined at:
 15783 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 15784 ;; Parameters:    Size  Location     Type
 15785 ;;		None
 15786 ;; Auto vars:     Size  Location     Type
 15787 ;;		None
 15788 ;; Return value:  Size  Location     Type
 15789 ;;                  1    wreg      void 
 15790 ;; Registers used:
 15791 ;;		wreg, status,2, status,0, cstack
 15792 ;; Tracked objects:
 15793 ;;		On entry : 0/0
 15794 ;;		On exit  : 0/0
 15795 ;;		Unchanged: 0/0
 15796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15801 ;;Total ram usage:        0 bytes
 15802 ;; Hardware stack levels used:    1
 15803 ;; Hardware stack levels required when called:   15
 15804 ;; This function calls:
 15805 ;;		_EUSART2_SetRxInterruptHandler
 15806 ;;		_EUSART2_SetTxInterruptHandler
 15807 ;; This function is called by:
 15808 ;;		_SYSTEM_Initialize
 15809 ;; This function uses a non-reentrant model
 15810 ;;
 15811                           
 15812                           	psect	text52
 15813  01551C                     __ptext52:
 15814                           	opt stack 0
 15815  01551C                     _EUSART2_Initialize:
 15816                           	opt stack 14
 15817                           
 15818                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 15819                           
 15820                           ; BSR set to: 14
 15821                           ;incstack = 0
 15822  01551C  010E               	movlb	14	; () banked
 15823  01551E  9F2C               	bcf	44,7,b	;volatile
 15824                           
 15825                           ; BSR set to: 14
 15826                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 15827  015520  0E6E               	movlw	low _EUSART2_Receive_ISR
 15828  015522  0101               	movlb	1	; () banked
 15829  015524  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 15830  015526  0E4C               	movlw	high _EUSART2_Receive_ISR
 15831  015528  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 15832  01552A  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 15833  01552C  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 15834  01552E  ECC4  F0AF         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 15835                           
 15836                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 15837  015532  010E               	movlb	14	; () banked
 15838  015534  9D2C               	bcf	44,6,b	;volatile
 15839                           
 15840                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 15841  015536  0EBC               	movlw	low _EUSART2_Transmit_ISR
 15842  015538  0101               	movlb	1	; () banked
 15843  01553A  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 15844  01553C  0E5B               	movlw	high _EUSART2_Transmit_ISR
 15845  01553E  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 15846  015540  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 15847  015542  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 15848  015544  ECBD  F0AF         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 15849                           
 15850                           ;eusart2.c: 87: BAUD2CON = 0x08;
 15851  015548  0E08               	movlw	8
 15852  01554A  010E               	movlb	14	; () banked
 15853  01554C  6FF7               	movwf	247,b	;volatile
 15854                           
 15855                           ; BSR set to: 14
 15856                           ;eusart2.c: 90: RC2STA = 0x90;
 15857  01554E  0E90               	movlw	144
 15858  015550  6FF5               	movwf	245,b	;volatile
 15859                           
 15860                           ; BSR set to: 14
 15861                           ;eusart2.c: 93: TX2STA = 0x24;
 15862  015552  0E24               	movlw	36
 15863  015554  6FF6               	movwf	246,b	;volatile
 15864                           
 15865                           ; BSR set to: 14
 15866                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 15867  015556  0E8A               	movlw	138
 15868  015558  6FF3               	movwf	243,b	;volatile
 15869                           
 15870                           ; BSR set to: 14
 15871                           ;eusart2.c: 99: SP2BRGH = 0x00;
 15872  01555A  0E00               	movlw	0
 15873  01555C  6FF4               	movwf	244,b	;volatile
 15874                           
 15875                           ; BSR set to: 14
 15876                           ;eusart2.c: 103: eusart2TxHead = 0;
 15877  01555E  0E00               	movlw	0
 15878  015560  0101               	movlb	1	; () banked
 15879  015562  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 15880                           
 15881                           ; BSR set to: 1
 15882                           ;eusart2.c: 104: eusart2TxTail = 0;
 15883  015564  0E00               	movlw	0
 15884  015566  6FDD               	movwf	_eusart2TxTail& (0+255),b	;volatile
 15885                           
 15886                           ; BSR set to: 1
 15887                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 15888  015568  0E80               	movlw	128
 15889  01556A  6FDC               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 15890                           
 15891                           ; BSR set to: 1
 15892                           ;eusart2.c: 107: eusart2RxHead = 0;
 15893  01556C  0E00               	movlw	0
 15894  01556E  0100               	movlb	0	; () banked
 15895  015570  6FDE               	movwf	_eusart2RxHead& (0+255),b	;volatile
 15896                           
 15897                           ; BSR set to: 0
 15898                           ;eusart2.c: 108: eusart2RxTail = 0;
 15899  015572  0E00               	movlw	0
 15900  015574  0101               	movlb	1	; () banked
 15901  015576  6FDB               	movwf	_eusart2RxTail& (0+255),b	;volatile
 15902                           
 15903                           ; BSR set to: 1
 15904                           ;eusart2.c: 109: eusart2RxCount = 0;
 15905  015578  0E00               	movlw	0
 15906  01557A  6FDA               	movwf	_eusart2RxCount& (0+255),b	;volatile
 15907                           
 15908                           ; BSR set to: 1
 15909                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 15910  01557C  010E               	movlb	14	; () banked
 15911  01557E  8F2C               	bsf	44,7,b	;volatile
 15912                           
 15913                           ; BSR set to: 14
 15914  015580  0012               	return		;funcret
 15915  015582                     __end_of_EUSART2_Initialize:
 15916                           	opt stack 0
 15917                           tblptru	equ	0xFF8
 15918                           tblptrh	equ	0xFF7
 15919                           tblptrl	equ	0xFF6
 15920                           tablat	equ	0xFF5
 15921                           prodh	equ	0xFF4
 15922                           prodl	equ	0xFF3
 15923                           intcon	equ	0xFF2
 15924                           postinc0	equ	0xFEE
 15925                           wreg	equ	0xFE8
 15926                           indf1	equ	0xFE7
 15927                           postdec1	equ	0xFE5
 15928                           fsr1h	equ	0xFE2
 15929                           fsr1l	equ	0xFE1
 15930                           indf2	equ	0xFDF
 15931                           postinc2	equ	0xFDE
 15932                           postdec2	equ	0xFDD
 15933                           fsr2h	equ	0xFDA
 15934                           fsr2l	equ	0xFD9
 15935                           status	equ	0xFD8
 15936                           
 15937 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 15938 ;; Defined at:
 15939 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 15940 ;; Parameters:    Size  Location     Type
 15941 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 15942 ;;		 -> EUSART2_Transmit_ISR(1), 
 15943 ;; Auto vars:     Size  Location     Type
 15944 ;;		None
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  1    wreg      void 
 15947 ;; Registers used:
 15948 ;;		wreg, status,2, status,0
 15949 ;; Tracked objects:
 15950 ;;		On entry : 0/0
 15951 ;;		On exit  : 0/0
 15952 ;;		Unchanged: 0/0
 15953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15954 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15957 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15958 ;;Total ram usage:        3 bytes
 15959 ;; Hardware stack levels used:    1
 15960 ;; Hardware stack levels required when called:   14
 15961 ;; This function calls:
 15962 ;;		Nothing
 15963 ;; This function is called by:
 15964 ;;		_EUSART2_Initialize
 15965 ;; This function uses a non-reentrant model
 15966 ;;
 15967                           
 15968                           	psect	text53
 15969  015F7A                     __ptext53:
 15970                           	opt stack 0
 15971  015F7A                     _EUSART2_SetTxInterruptHandler:
 15972                           	opt stack 14
 15973                           
 15974                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 15975                           
 15976                           ; BSR set to: 14
 15977                           ;incstack = 0
 15978  015F7A  C117  F1D3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 15979  015F7E  C118  F1D4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 15980  015F82  C119  F1D5         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 15981  015F86  0012               	return		;funcret
 15982  015F88                     __end_of_EUSART2_SetTxInterruptHandler:
 15983                           	opt stack 0
 15984                           tblptru	equ	0xFF8
 15985                           tblptrh	equ	0xFF7
 15986                           tblptrl	equ	0xFF6
 15987                           tablat	equ	0xFF5
 15988                           prodh	equ	0xFF4
 15989                           prodl	equ	0xFF3
 15990                           intcon	equ	0xFF2
 15991                           postinc0	equ	0xFEE
 15992                           wreg	equ	0xFE8
 15993                           indf1	equ	0xFE7
 15994                           postdec1	equ	0xFE5
 15995                           fsr1h	equ	0xFE2
 15996                           fsr1l	equ	0xFE1
 15997                           indf2	equ	0xFDF
 15998                           postinc2	equ	0xFDE
 15999                           postdec2	equ	0xFDD
 16000                           fsr2h	equ	0xFDA
 16001                           fsr2l	equ	0xFD9
 16002                           status	equ	0xFD8
 16003                           
 16004 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 16005 ;; Defined at:
 16006 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 16007 ;; Parameters:    Size  Location     Type
 16008 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 16009 ;;		 -> EUSART2_Receive_ISR(1), 
 16010 ;; Auto vars:     Size  Location     Type
 16011 ;;		None
 16012 ;; Return value:  Size  Location     Type
 16013 ;;                  1    wreg      void 
 16014 ;; Registers used:
 16015 ;;		wreg, status,2, status,0
 16016 ;; Tracked objects:
 16017 ;;		On entry : 0/0
 16018 ;;		On exit  : 0/0
 16019 ;;		Unchanged: 0/0
 16020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16021 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16024 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16025 ;;Total ram usage:        3 bytes
 16026 ;; Hardware stack levels used:    1
 16027 ;; Hardware stack levels required when called:   14
 16028 ;; This function calls:
 16029 ;;		Nothing
 16030 ;; This function is called by:
 16031 ;;		_EUSART2_Initialize
 16032 ;; This function uses a non-reentrant model
 16033 ;;
 16034                           
 16035                           	psect	text54
 16036  015F88                     __ptext54:
 16037                           	opt stack 0
 16038  015F88                     _EUSART2_SetRxInterruptHandler:
 16039                           	opt stack 14
 16040                           
 16041                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 16042                           
 16043                           ;incstack = 0
 16044  015F88  C117  F0D4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 16045  015F8C  C118  F0D5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 16046  015F90  C119  F0D6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 16047  015F94  0012               	return		;funcret
 16048  015F96                     __end_of_EUSART2_SetRxInterruptHandler:
 16049                           	opt stack 0
 16050                           tblptru	equ	0xFF8
 16051                           tblptrh	equ	0xFF7
 16052                           tblptrl	equ	0xFF6
 16053                           tablat	equ	0xFF5
 16054                           prodh	equ	0xFF4
 16055                           prodl	equ	0xFF3
 16056                           intcon	equ	0xFF2
 16057                           postinc0	equ	0xFEE
 16058                           wreg	equ	0xFE8
 16059                           indf1	equ	0xFE7
 16060                           postdec1	equ	0xFE5
 16061                           fsr1h	equ	0xFE2
 16062                           fsr1l	equ	0xFE1
 16063                           indf2	equ	0xFDF
 16064                           postinc2	equ	0xFDE
 16065                           postdec2	equ	0xFDD
 16066                           fsr2h	equ	0xFDA
 16067                           fsr2l	equ	0xFD9
 16068                           status	equ	0xFD8
 16069                           
 16070 ;; *************** function _ADCC_Initialize *****************
 16071 ;; Defined at:
 16072 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16073 ;; Parameters:    Size  Location     Type
 16074 ;;		None
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;		None
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  1    wreg      void 
 16079 ;; Registers used:
 16080 ;;		wreg, status,2, status,0, cstack
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16090 ;;Total ram usage:        0 bytes
 16091 ;; Hardware stack levels used:    1
 16092 ;; Hardware stack levels required when called:   15
 16093 ;; This function calls:
 16094 ;;		_ADCC_SetADIInterruptHandler
 16095 ;; This function is called by:
 16096 ;;		_SYSTEM_Initialize
 16097 ;; This function uses a non-reentrant model
 16098 ;;
 16099                           
 16100                           	psect	text55
 16101  0155E8                     __ptext55:
 16102                           	opt stack 0
 16103  0155E8                     _ADCC_Initialize:
 16104                           	opt stack 14
 16105                           
 16106                           ;adcc.c: 67: ADLTHL = 0x00;
 16107                           
 16108                           ;incstack = 0
 16109  0155E8  0E00               	movlw	0
 16110  0155EA  6E6A               	movwf	3946,c	;volatile
 16111                           
 16112                           ;adcc.c: 69: ADLTHH = 0x00;
 16113  0155EC  0E00               	movlw	0
 16114  0155EE  6E6B               	movwf	3947,c	;volatile
 16115                           
 16116                           ;adcc.c: 71: ADUTHL = 0x00;
 16117  0155F0  0E00               	movlw	0
 16118  0155F2  6E6C               	movwf	3948,c	;volatile
 16119                           
 16120                           ;adcc.c: 73: ADUTHH = 0x00;
 16121  0155F4  0E00               	movlw	0
 16122  0155F6  6E6D               	movwf	3949,c	;volatile
 16123                           
 16124                           ;adcc.c: 75: ADSTPTL = 0x00;
 16125  0155F8  0E00               	movlw	0
 16126  0155FA  6E68               	movwf	3944,c	;volatile
 16127                           
 16128                           ;adcc.c: 77: ADSTPTH = 0x00;
 16129  0155FC  0E00               	movlw	0
 16130  0155FE  6E69               	movwf	3945,c	;volatile
 16131                           
 16132                           ;adcc.c: 79: ADRPT = 0x00;
 16133  015600  0E00               	movlw	0
 16134  015602  6E66               	movwf	3942,c	;volatile
 16135                           
 16136                           ;adcc.c: 81: ADPCH = 0x00;
 16137  015604  0E00               	movlw	0
 16138  015606  010F               	movlb	15	; () banked
 16139  015608  6F5F               	movwf	95,b	;volatile
 16140                           
 16141                           ;adcc.c: 83: ADCAP = 0x00;
 16142  01560A  0E00               	movlw	0
 16143  01560C  6F5D               	movwf	93,b	;volatile
 16144                           
 16145                           ;adcc.c: 85: ADCON1 = 0x00;
 16146  01560E  0E00               	movlw	0
 16147  015610  6F59               	movwf	89,b	;volatile
 16148                           
 16149                           ;adcc.c: 87: ADCON2 = 0x04;
 16150  015612  0E04               	movlw	4
 16151  015614  6F5A               	movwf	90,b	;volatile
 16152                           
 16153                           ;adcc.c: 89: ADCON3 = 0x00;
 16154  015616  0E00               	movlw	0
 16155  015618  6F5B               	movwf	91,b	;volatile
 16156                           
 16157                           ;adcc.c: 91: ADSTAT = 0x00;
 16158  01561A  0E00               	movlw	0
 16159  01561C  6E65               	movwf	3941,c	;volatile
 16160                           
 16161                           ;adcc.c: 93: ADREF = 0x12;
 16162  01561E  0E12               	movlw	18
 16163  015620  6F58               	movwf	88,b	;volatile
 16164                           
 16165                           ;adcc.c: 95: ADACT = 0x00;
 16166  015622  0E00               	movlw	0
 16167  015624  6F56               	movwf	86,b	;volatile
 16168                           
 16169                           ;adcc.c: 97: ADCLK = 0x00;
 16170  015626  0E00               	movlw	0
 16171  015628  6F57               	movwf	87,b	;volatile
 16172                           
 16173                           ;adcc.c: 99: ADCON0 = 0x94;
 16174  01562A  0E94               	movlw	148
 16175  01562C  6E60               	movwf	3936,c	;volatile
 16176                           
 16177                           ;adcc.c: 101: ADACQ = 0x00;
 16178  01562E  0E00               	movlw	0
 16179  015630  6F5C               	movwf	92,b	;volatile
 16180                           
 16181                           ; BSR set to: 15
 16182                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 16183  015632  010E               	movlb	14	; () banked
 16184  015634  9134               	bcf	52,0,b	;volatile
 16185                           
 16186                           ; BSR set to: 14
 16187                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 16188  015636  812A               	bsf	42,0,b	;volatile
 16189                           
 16190                           ; BSR set to: 14
 16191                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 16192  015638  0EDC               	movlw	low _ADCC_DefaultInterruptHandler
 16193  01563A  0101               	movlb	1	; () banked
 16194  01563C  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 16195  01563E  0E5F               	movlw	high _ADCC_DefaultInterruptHandler
 16196  015640  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 16197  015642  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 16198  015644  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 16199  015646  ECCB  F0AF         	call	_ADCC_SetADIInterruptHandler	;wreg free
 16200  01564A  0012               	return		;funcret
 16201  01564C                     __end_of_ADCC_Initialize:
 16202                           	opt stack 0
 16203                           tblptru	equ	0xFF8
 16204                           tblptrh	equ	0xFF7
 16205                           tblptrl	equ	0xFF6
 16206                           tablat	equ	0xFF5
 16207                           prodh	equ	0xFF4
 16208                           prodl	equ	0xFF3
 16209                           intcon	equ	0xFF2
 16210                           postinc0	equ	0xFEE
 16211                           wreg	equ	0xFE8
 16212                           indf1	equ	0xFE7
 16213                           postdec1	equ	0xFE5
 16214                           fsr1h	equ	0xFE2
 16215                           fsr1l	equ	0xFE1
 16216                           indf2	equ	0xFDF
 16217                           postinc2	equ	0xFDE
 16218                           postdec2	equ	0xFDD
 16219                           fsr2h	equ	0xFDA
 16220                           fsr2l	equ	0xFD9
 16221                           status	equ	0xFD8
 16222                           
 16223 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16224 ;; Defined at:
 16225 ;;		line 306 in file "mcc_generated_files/adcc.c"
 16226 ;; Parameters:    Size  Location     Type
 16227 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16228 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 16229 ;; Auto vars:     Size  Location     Type
 16230 ;;		None
 16231 ;; Return value:  Size  Location     Type
 16232 ;;                  1    wreg      void 
 16233 ;; Registers used:
 16234 ;;		wreg, status,2, status,0
 16235 ;; Tracked objects:
 16236 ;;		On entry : 0/0
 16237 ;;		On exit  : 0/0
 16238 ;;		Unchanged: 0/0
 16239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16240 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16243 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16244 ;;Total ram usage:        3 bytes
 16245 ;; Hardware stack levels used:    1
 16246 ;; Hardware stack levels required when called:   14
 16247 ;; This function calls:
 16248 ;;		Nothing
 16249 ;; This function is called by:
 16250 ;;		_ADCC_Initialize
 16251 ;;		_main
 16252 ;; This function uses a non-reentrant model
 16253 ;;
 16254                           
 16255                           	psect	text56
 16256  015F96                     __ptext56:
 16257                           	opt stack 0
 16258  015F96                     _ADCC_SetADIInterruptHandler:
 16259                           	opt stack 14
 16260                           
 16261                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 16262                           
 16263                           ;incstack = 0
 16264  015F96  C117  F0D1         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 16265  015F9A  C118  F0D2         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 16266  015F9E  C119  F0D3         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 16267  015FA2  0012               	return		;funcret
 16268  015FA4                     __end_of_ADCC_SetADIInterruptHandler:
 16269                           	opt stack 0
 16270                           tblptru	equ	0xFF8
 16271                           tblptrh	equ	0xFF7
 16272                           tblptrl	equ	0xFF6
 16273                           tablat	equ	0xFF5
 16274                           prodh	equ	0xFF4
 16275                           prodl	equ	0xFF3
 16276                           intcon	equ	0xFF2
 16277                           postinc0	equ	0xFEE
 16278                           wreg	equ	0xFE8
 16279                           indf1	equ	0xFE7
 16280                           postdec1	equ	0xFE5
 16281                           fsr1h	equ	0xFE2
 16282                           fsr1l	equ	0xFE1
 16283                           indf2	equ	0xFDF
 16284                           postinc2	equ	0xFDE
 16285                           postdec2	equ	0xFDD
 16286                           fsr2h	equ	0xFDA
 16287                           fsr2l	equ	0xFD9
 16288                           status	equ	0xFD8
 16289                           
 16290 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 16291 ;; Defined at:
 16292 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;		None
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;		None
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      void 
 16299 ;; Registers used:
 16300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16308 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16309 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16310 ;;Total ram usage:       21 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; Hardware stack levels required when called:   13
 16313 ;; This function calls:
 16314 ;;		Absolute function
 16315 ;;		_EUSART2_Transmit_ISR
 16316 ;;		_TMR6_ISR
 16317 ;;		_TMR7_ISR
 16318 ;; This function is called by:
 16319 ;;		Interrupt level 1
 16320 ;; This function uses a non-reentrant model
 16321 ;;
 16322                           
 16323                           	psect	intcodelo
 16324  000018                     __pintcodelo:
 16325                           	opt stack 0
 16326  000018                     _INTERRUPT_InterruptManagerLow:
 16327                           	opt stack 9
 16328                           
 16329                           ;incstack = 0
 16330  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16331  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 16332  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 16333  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 16334  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 16335  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 16336  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 16337  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 16338  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 16339  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 16340  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 16341  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 16342  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 16343  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 16344  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 16345  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 16346  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 16347  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 16348  00005E  C05E  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 16349  000062  C05F  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 16350  000066  C060  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 16351  00006A  C061  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 16352                           
 16353                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 16354  00006E  010E               	movlb	14	; () banked
 16355  000070  BB2E               	btfsc	46,5,b	;volatile
 16356                           
 16357                           ; BSR set to: 14
 16358  000072  AB38               	btfss	56,5,b	;volatile
 16359  000074  D003               	goto	i1l213
 16360                           
 16361                           ; BSR set to: 14
 16362                           ;interrupt_manager.c: 105: {
 16363                           ;interrupt_manager.c: 106: TMR6_ISR();
 16364  000076  EC9E  F0AE         	call	_TMR6_ISR	;wreg free
 16365                           
 16366                           ;interrupt_manager.c: 107: }
 16367  00007A  D015               	goto	i1l217
 16368  00007C                     i1l213:
 16369                           
 16370                           ; BSR set to: 14
 16371                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 16372  00007C  BD2C               	btfsc	44,6,b	;volatile
 16373                           
 16374                           ; BSR set to: 14
 16375  00007E  AD36               	btfss	54,6,b	;volatile
 16376  000080  D00D               	goto	i1l215
 16377                           
 16378                           ; BSR set to: 14
 16379                           ;interrupt_manager.c: 109: {
 16380                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 16381  000082  D801               	call	i1u1581_28
 16382  000084  D010               	goto	i1l217
 16383  000086                     i1u1581_28:
 16384  000086  0005               	push	
 16385  000088  6EFA               	movwf	pclath,c
 16386  00008A  0101               	movlb	1	; () banked
 16387  00008C  51D3               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 16388  00008E  6EFD               	movwf	tosl,c
 16389  000090  51D4               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 16390  000092  6EFE               	movwf	tosh,c
 16391  000094  51D5               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 16392  000096  6EFF               	movwf	tosu,c
 16393  000098  50FA               	movf	pclath,w,c
 16394  00009A  0012               	return		;indir
 16395  00009C                     i1l215:
 16396                           
 16397                           ; BSR set to: 14
 16398                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 16399  00009C  BD2E               	btfsc	46,6,b	;volatile
 16400                           
 16401                           ; BSR set to: 14
 16402  00009E  AD38               	btfss	56,6,b	;volatile
 16403  0000A0  D002               	goto	i1l217
 16404                           
 16405                           ; BSR set to: 14
 16406                           ;interrupt_manager.c: 113: {
 16407                           ;interrupt_manager.c: 114: TMR7_ISR();
 16408  0000A2  ECF9  F0AD         	call	_TMR7_ISR	;wreg free
 16409  0000A6                     i1l217:
 16410                           
 16411                           ;interrupt_manager.c: 116: else
 16412                           ;interrupt_manager.c: 117: {
 16413  0000A6  C116  F061         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 16414  0000AA  C115  F060         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 16415  0000AE  C114  F05F         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 16416  0000B2  C113  F05E         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 16417  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 16418  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 16419  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 16420  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 16421  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 16422  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 16423  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 16424  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 16425  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 16426  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 16427  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 16428  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 16429  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 16430  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 16431  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 16432  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 16433  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 16434  0000FA  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16435  0000FC  0010               	retfie	
 16436  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 16437                           	opt stack 0
 16438                           tosu	equ	0xFFF
 16439                           tosh	equ	0xFFE
 16440                           tosl	equ	0xFFD
 16441                           pclatu	equ	0xFFB
 16442                           pclath	equ	0xFFA
 16443                           tblptru	equ	0xFF8
 16444                           tblptrh	equ	0xFF7
 16445                           tblptrl	equ	0xFF6
 16446                           tablat	equ	0xFF5
 16447                           prodh	equ	0xFF4
 16448                           prodl	equ	0xFF3
 16449                           intcon	equ	0xFF2
 16450                           postinc0	equ	0xFEE
 16451                           fsr0h	equ	0xFEA
 16452                           fsr0l	equ	0xFE9
 16453                           wreg	equ	0xFE8
 16454                           indf1	equ	0xFE7
 16455                           postdec1	equ	0xFE5
 16456                           fsr1h	equ	0xFE2
 16457                           fsr1l	equ	0xFE1
 16458                           bsr	equ	0xFE0
 16459                           indf2	equ	0xFDF
 16460                           postinc2	equ	0xFDE
 16461                           postdec2	equ	0xFDD
 16462                           fsr2h	equ	0xFDA
 16463                           fsr2l	equ	0xFD9
 16464                           status	equ	0xFD8
 16465                           
 16466 ;; *************** function _TMR7_ISR *****************
 16467 ;; Defined at:
 16468 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 16469 ;; Parameters:    Size  Location     Type
 16470 ;;		None
 16471 ;; Auto vars:     Size  Location     Type
 16472 ;;		None
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  1    wreg      void 
 16475 ;; Registers used:
 16476 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16486 ;;Total ram usage:        0 bytes
 16487 ;; Hardware stack levels used:    1
 16488 ;; Hardware stack levels required when called:   12
 16489 ;; This function calls:
 16490 ;;		Absolute function
 16491 ;;		_TMR7_DefaultInterruptHandler
 16492 ;;		_TMR7_WriteTimer
 16493 ;;		_acquisitionTimerCallback
 16494 ;; This function is called by:
 16495 ;;		_INTERRUPT_InterruptManagerLow
 16496 ;; This function uses a non-reentrant model
 16497 ;;
 16498                           
 16499                           	psect	text58
 16500  015BF2                     __ptext58:
 16501                           	opt stack 0
 16502  015BF2                     _TMR7_ISR:
 16503                           	opt stack 9
 16504                           
 16505                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 16506                           
 16507                           ;incstack = 0
 16508  015BF2  010E               	movlb	14	; () banked
 16509  015BF4  9D38               	bcf	56,6,b	;volatile
 16510                           
 16511                           ; BSR set to: 14
 16512                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 16513  015BF6  C1D8  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 16514  015BFA  C1D9  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 16515  015BFE  ECD9  F0AE         	call	_TMR7_WriteTimer	;wreg free
 16516                           
 16517                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 16518  015C02  0101               	movlb	1	; () banked
 16519  015C04  51CD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 16520  015C06  11CE               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 16521  015C08  11CF               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 16522  015C0A  B4D8               	btfsc	status,2,c
 16523  015C0C  0012               	return	
 16524                           
 16525                           ; BSR set to: 1
 16526                           ;tmr7.c: 172: {
 16527                           ;tmr7.c: 173: TMR7_InterruptHandler();
 16528  015C0E  D801               	call	i1u1563_28
 16529  015C10  0012               	return	
 16530  015C12                     i1u1563_28:
 16531  015C12  0005               	push	
 16532  015C14  6EFA               	movwf	pclath,c
 16533  015C16  51CD               	movf	_TMR7_InterruptHandler& (0+255),w,b
 16534  015C18  6EFD               	movwf	tosl,c
 16535  015C1A  51CE               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 16536  015C1C  6EFE               	movwf	tosh,c
 16537  015C1E  51CF               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 16538  015C20  6EFF               	movwf	tosu,c
 16539  015C22  50FA               	movf	pclath,w,c
 16540  015C24  0012               	return		;indir
 16541  015C26                     __end_of_TMR7_ISR:
 16542                           	opt stack 0
 16543                           tosu	equ	0xFFF
 16544                           tosh	equ	0xFFE
 16545                           tosl	equ	0xFFD
 16546                           pclatu	equ	0xFFB
 16547                           pclath	equ	0xFFA
 16548                           tblptru	equ	0xFF8
 16549                           tblptrh	equ	0xFF7
 16550                           tblptrl	equ	0xFF6
 16551                           tablat	equ	0xFF5
 16552                           prodh	equ	0xFF4
 16553                           prodl	equ	0xFF3
 16554                           intcon	equ	0xFF2
 16555                           postinc0	equ	0xFEE
 16556                           fsr0h	equ	0xFEA
 16557                           fsr0l	equ	0xFE9
 16558                           wreg	equ	0xFE8
 16559                           indf1	equ	0xFE7
 16560                           postdec1	equ	0xFE5
 16561                           fsr1h	equ	0xFE2
 16562                           fsr1l	equ	0xFE1
 16563                           bsr	equ	0xFE0
 16564                           indf2	equ	0xFDF
 16565                           postinc2	equ	0xFDE
 16566                           postdec2	equ	0xFDD
 16567                           fsr2h	equ	0xFDA
 16568                           fsr2l	equ	0xFD9
 16569                           status	equ	0xFD8
 16570                           
 16571 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 16572 ;; Defined at:
 16573 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 16574 ;; Parameters:    Size  Location     Type
 16575 ;;		None
 16576 ;; Auto vars:     Size  Location     Type
 16577 ;;		None
 16578 ;; Return value:  Size  Location     Type
 16579 ;;                  1    wreg      void 
 16580 ;; Registers used:
 16581 ;;		None
 16582 ;; Tracked objects:
 16583 ;;		On entry : 0/0
 16584 ;;		On exit  : 0/0
 16585 ;;		Unchanged: 0/0
 16586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16591 ;;Total ram usage:        0 bytes
 16592 ;; Hardware stack levels used:    1
 16593 ;; Hardware stack levels required when called:   10
 16594 ;; This function calls:
 16595 ;;		Nothing
 16596 ;; This function is called by:
 16597 ;;		_TMR7_Initialize
 16598 ;;		_TMR7_ISR
 16599 ;; This function uses a non-reentrant model
 16600 ;;
 16601                           
 16602                           	psect	text59
 16603  015FD6                     __ptext59:
 16604                           	opt stack 0
 16605  015FD6                     _TMR7_DefaultInterruptHandler:
 16606                           	opt stack 10
 16607                           
 16608                           ;incstack = 0
 16609  015FD6  0012               	return		;funcret
 16610  015FD8                     __end_of_TMR7_DefaultInterruptHandler:
 16611                           	opt stack 0
 16612                           tosu	equ	0xFFF
 16613                           tosh	equ	0xFFE
 16614                           tosl	equ	0xFFD
 16615                           pclatu	equ	0xFFB
 16616                           pclath	equ	0xFFA
 16617                           tblptru	equ	0xFF8
 16618                           tblptrh	equ	0xFF7
 16619                           tblptrl	equ	0xFF6
 16620                           tablat	equ	0xFF5
 16621                           prodh	equ	0xFF4
 16622                           prodl	equ	0xFF3
 16623                           intcon	equ	0xFF2
 16624                           postinc0	equ	0xFEE
 16625                           fsr0h	equ	0xFEA
 16626                           fsr0l	equ	0xFE9
 16627                           wreg	equ	0xFE8
 16628                           indf1	equ	0xFE7
 16629                           postdec1	equ	0xFE5
 16630                           fsr1h	equ	0xFE2
 16631                           fsr1l	equ	0xFE1
 16632                           bsr	equ	0xFE0
 16633                           indf2	equ	0xFDF
 16634                           postinc2	equ	0xFDE
 16635                           postdec2	equ	0xFDD
 16636                           fsr2h	equ	0xFDA
 16637                           fsr2l	equ	0xFD9
 16638                           status	equ	0xFD8
 16639                           
 16640 ;; *************** function _acquisitionTimerCallback *****************
 16641 ;; Defined at:
 16642 ;;		line 199 in file "main.c"
 16643 ;; Parameters:    Size  Location     Type
 16644 ;;		None
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;		None
 16647 ;; Return value:  Size  Location     Type
 16648 ;;                  1    wreg      void 
 16649 ;; Registers used:
 16650 ;;		wreg, status,2, cstack
 16651 ;; Tracked objects:
 16652 ;;		On entry : 0/0
 16653 ;;		On exit  : 0/0
 16654 ;;		Unchanged: 0/0
 16655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16660 ;;Total ram usage:        0 bytes
 16661 ;; Hardware stack levels used:    1
 16662 ;; Hardware stack levels required when called:   11
 16663 ;; This function calls:
 16664 ;;		_ADCC_IsConversionDone
 16665 ;;		_ADCC_StartConversion
 16666 ;; This function is called by:
 16667 ;;		_main
 16668 ;;		_TMR7_ISR
 16669 ;; This function uses a non-reentrant model
 16670 ;;
 16671                           
 16672                           	psect	text60
 16673  01586E                     __ptext60:
 16674                           	opt stack 0
 16675  01586E                     _acquisitionTimerCallback:
 16676                           	opt stack 9
 16677                           
 16678                           ;main.c: 202: ADCC_StartConversion(channel_FVR_buf1);
 16679                           
 16680                           ;incstack = 0
 16681  01586E  0E3F               	movlw	63
 16682  015870  ECD2  F0AF         	call	_ADCC_StartConversion
 16683  015874  ECD9  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16684  015878  0900               	iorlw	0
 16685  01587A  B4D8               	btfsc	status,2,c
 16686  01587C  D7FB               	goto	i1l757
 16687                           
 16688                           ;main.c: 208: ADCC_StartConversion(POS3P3_ADC);
 16689  01587E  0E22               	movlw	34
 16690  015880  ECD2  F0AF         	call	_ADCC_StartConversion
 16691  015884  ECD9  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16692  015888  0900               	iorlw	0
 16693  01588A  B4D8               	btfsc	status,2,c
 16694  01588C  D7FB               	goto	i1l760
 16695                           
 16696                           ;main.c: 214: ADCC_StartConversion(ISNS_ADC);
 16697  01588E  0E00               	movlw	0
 16698  015890  ECD2  F0AF         	call	_ADCC_StartConversion
 16699  015894  ECD9  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16700  015898  0900               	iorlw	0
 16701  01589A  B4D8               	btfsc	status,2,c
 16702  01589C  D7FB               	goto	i1l763
 16703                           
 16704                           ;main.c: 220: ADCC_StartConversion(POS12_ADC);
 16705  01589E  0E04               	movlw	4
 16706  0158A0  ECD2  F0AF         	call	_ADCC_StartConversion
 16707  0158A4  ECD9  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16708  0158A8  0900               	iorlw	0
 16709  0158AA  B4D8               	btfsc	status,2,c
 16710  0158AC  D7FB               	goto	i1l766
 16711                           
 16712                           ;main.c: 226: ADCC_StartConversion(channel_Temp);
 16713  0158AE  0E3D               	movlw	61
 16714  0158B0  ECD2  F0AF         	call	_ADCC_StartConversion
 16715  0158B4  ECD9  F0AF         	call	_ADCC_IsConversionDone	;wreg free
 16716  0158B8  0900               	iorlw	0
 16717  0158BA  A4D8               	btfss	status,2,c
 16718  0158BC  0012               	return	
 16719  0158BE  D7FA               	goto	i1l769
 16720  0158C0                     __end_of_acquisitionTimerCallback:
 16721                           	opt stack 0
 16722                           tosu	equ	0xFFF
 16723                           tosh	equ	0xFFE
 16724                           tosl	equ	0xFFD
 16725                           pclatu	equ	0xFFB
 16726                           pclath	equ	0xFFA
 16727                           tblptru	equ	0xFF8
 16728                           tblptrh	equ	0xFF7
 16729                           tblptrl	equ	0xFF6
 16730                           tablat	equ	0xFF5
 16731                           prodh	equ	0xFF4
 16732                           prodl	equ	0xFF3
 16733                           intcon	equ	0xFF2
 16734                           postinc0	equ	0xFEE
 16735                           fsr0h	equ	0xFEA
 16736                           fsr0l	equ	0xFE9
 16737                           wreg	equ	0xFE8
 16738                           indf1	equ	0xFE7
 16739                           postdec1	equ	0xFE5
 16740                           fsr1h	equ	0xFE2
 16741                           fsr1l	equ	0xFE1
 16742                           bsr	equ	0xFE0
 16743                           indf2	equ	0xFDF
 16744                           postinc2	equ	0xFDE
 16745                           postdec2	equ	0xFDD
 16746                           fsr2h	equ	0xFDA
 16747                           fsr2l	equ	0xFD9
 16748                           status	equ	0xFD8
 16749                           
 16750 ;; *************** function _ADCC_StartConversion *****************
 16751 ;; Defined at:
 16752 ;;		line 112 in file "mcc_generated_files/adcc.c"
 16753 ;; Parameters:    Size  Location     Type
 16754 ;;  channel         1    wreg     enum E17310
 16755 ;; Auto vars:     Size  Location     Type
 16756 ;;  channel         1    0[BANK1 ] enum E17310
 16757 ;; Return value:  Size  Location     Type
 16758 ;;                  1    wreg      void 
 16759 ;; Registers used:
 16760 ;;		wreg
 16761 ;; Tracked objects:
 16762 ;;		On entry : 0/0
 16763 ;;		On exit  : 0/0
 16764 ;;		Unchanged: 0/0
 16765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16767 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16769 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16770 ;;Total ram usage:        1 bytes
 16771 ;; Hardware stack levels used:    1
 16772 ;; Hardware stack levels required when called:   10
 16773 ;; This function calls:
 16774 ;;		Nothing
 16775 ;; This function is called by:
 16776 ;;		_acquisitionTimerCallback
 16777 ;; This function uses a non-reentrant model
 16778 ;;
 16779                           
 16780                           	psect	text61
 16781  015FA4                     __ptext61:
 16782                           	opt stack 0
 16783  015FA4                     _ADCC_StartConversion:
 16784                           	opt stack 9
 16785                           
 16786                           ;incstack = 0
 16787                           ;ADCC_StartConversion@channel stored from wreg
 16788  015FA4  0101               	movlb	1	; () banked
 16789  015FA6  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 16790                           
 16791                           ;adcc.c: 115: ADPCH = channel;
 16792  015FA8  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 16793                           
 16794                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 16795  015FAC  8E60               	bsf	3936,7,c	;volatile
 16796                           
 16797                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 16798  015FAE  8060               	bsf	3936,0,c	;volatile
 16799  015FB0  0012               	return		;funcret
 16800  015FB2                     __end_of_ADCC_StartConversion:
 16801                           	opt stack 0
 16802                           tosu	equ	0xFFF
 16803                           tosh	equ	0xFFE
 16804                           tosl	equ	0xFFD
 16805                           pclatu	equ	0xFFB
 16806                           pclath	equ	0xFFA
 16807                           tblptru	equ	0xFF8
 16808                           tblptrh	equ	0xFF7
 16809                           tblptrl	equ	0xFF6
 16810                           tablat	equ	0xFF5
 16811                           prodh	equ	0xFF4
 16812                           prodl	equ	0xFF3
 16813                           intcon	equ	0xFF2
 16814                           postinc0	equ	0xFEE
 16815                           fsr0h	equ	0xFEA
 16816                           fsr0l	equ	0xFE9
 16817                           wreg	equ	0xFE8
 16818                           indf1	equ	0xFE7
 16819                           postdec1	equ	0xFE5
 16820                           fsr1h	equ	0xFE2
 16821                           fsr1l	equ	0xFE1
 16822                           bsr	equ	0xFE0
 16823                           indf2	equ	0xFDF
 16824                           postinc2	equ	0xFDE
 16825                           postdec2	equ	0xFDD
 16826                           fsr2h	equ	0xFDA
 16827                           fsr2l	equ	0xFD9
 16828                           status	equ	0xFD8
 16829                           
 16830 ;; *************** function _ADCC_IsConversionDone *****************
 16831 ;; Defined at:
 16832 ;;		line 124 in file "mcc_generated_files/adcc.c"
 16833 ;; Parameters:    Size  Location     Type
 16834 ;;		None
 16835 ;; Auto vars:     Size  Location     Type
 16836 ;;		None
 16837 ;; Return value:  Size  Location     Type
 16838 ;;                  1    wreg      unsigned char 
 16839 ;; Registers used:
 16840 ;;		wreg
 16841 ;; Tracked objects:
 16842 ;;		On entry : 0/0
 16843 ;;		On exit  : 0/0
 16844 ;;		Unchanged: 0/0
 16845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16850 ;;Total ram usage:        0 bytes
 16851 ;; Hardware stack levels used:    1
 16852 ;; Hardware stack levels required when called:   10
 16853 ;; This function calls:
 16854 ;;		Nothing
 16855 ;; This function is called by:
 16856 ;;		_acquisitionTimerCallback
 16857 ;; This function uses a non-reentrant model
 16858 ;;
 16859                           
 16860                           	psect	text62
 16861  015FB2                     __ptext62:
 16862                           	opt stack 0
 16863  015FB2                     _ADCC_IsConversionDone:
 16864                           	opt stack 9
 16865                           
 16866                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 16867                           
 16868                           ;incstack = 0
 16869  015FB2  B060               	btfsc	3936,0,c	;volatile
 16870  015FB4  D002               	goto	i1u666_20
 16871  015FB6  0E01               	movlw	1
 16872  015FB8  0012               	return	
 16873  015FBA                     i1u666_20:
 16874  015FBA  0E00               	movlw	0
 16875  015FBC  0012               	return	
 16876  015FBE                     __end_of_ADCC_IsConversionDone:
 16877                           	opt stack 0
 16878                           tosu	equ	0xFFF
 16879                           tosh	equ	0xFFE
 16880                           tosl	equ	0xFFD
 16881                           pclatu	equ	0xFFB
 16882                           pclath	equ	0xFFA
 16883                           tblptru	equ	0xFF8
 16884                           tblptrh	equ	0xFF7
 16885                           tblptrl	equ	0xFF6
 16886                           tablat	equ	0xFF5
 16887                           prodh	equ	0xFF4
 16888                           prodl	equ	0xFF3
 16889                           intcon	equ	0xFF2
 16890                           postinc0	equ	0xFEE
 16891                           fsr0h	equ	0xFEA
 16892                           fsr0l	equ	0xFE9
 16893                           wreg	equ	0xFE8
 16894                           indf1	equ	0xFE7
 16895                           postdec1	equ	0xFE5
 16896                           fsr1h	equ	0xFE2
 16897                           fsr1l	equ	0xFE1
 16898                           bsr	equ	0xFE0
 16899                           indf2	equ	0xFDF
 16900                           postinc2	equ	0xFDE
 16901                           postdec2	equ	0xFDD
 16902                           fsr2h	equ	0xFDA
 16903                           fsr2l	equ	0xFD9
 16904                           status	equ	0xFD8
 16905                           
 16906 ;; *************** function _TMR7_WriteTimer *****************
 16907 ;; Defined at:
 16908 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 16909 ;; Parameters:    Size  Location     Type
 16910 ;;  timerVal        2    0[BANK1 ] unsigned int 
 16911 ;; Auto vars:     Size  Location     Type
 16912 ;;		None
 16913 ;; Return value:  Size  Location     Type
 16914 ;;                  1    wreg      void 
 16915 ;; Registers used:
 16916 ;;		wreg, status,2
 16917 ;; Tracked objects:
 16918 ;;		On entry : 0/0
 16919 ;;		On exit  : 0/0
 16920 ;;		Unchanged: 0/0
 16921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16922 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16925 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16926 ;;Total ram usage:        2 bytes
 16927 ;; Hardware stack levels used:    1
 16928 ;; Hardware stack levels required when called:   10
 16929 ;; This function calls:
 16930 ;;		Nothing
 16931 ;; This function is called by:
 16932 ;;		_TMR7_ISR
 16933 ;;		_TMR7_Reload
 16934 ;; This function uses a non-reentrant model
 16935 ;;
 16936                           
 16937                           	psect	text63
 16938  015DB2                     __ptext63:
 16939                           	opt stack 0
 16940  015DB2                     _TMR7_WriteTimer:
 16941                           	opt stack 10
 16942                           
 16943                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 16944                           
 16945                           ;incstack = 0
 16946  015DB2  010F               	movlb	15	; () banked
 16947  015DB4  A530               	btfss	48,2,b	;volatile
 16948  015DB6  D009               	goto	i1l626
 16949                           
 16950                           ; BSR set to: 15
 16951                           ;tmr7.c: 130: {
 16952                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 16953  015DB8  9130               	bcf	48,0,b	;volatile
 16954                           
 16955                           ; BSR set to: 15
 16956                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 16957  015DBA  0101               	movlb	1	; () banked
 16958  015DBC  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 16959  015DBE  010F               	movlb	15	; () banked
 16960  015DC0  6F2F               	movwf	47,b	;volatile
 16961                           
 16962                           ; BSR set to: 15
 16963                           ;tmr7.c: 136: TMR7L = timerVal;
 16964  015DC2  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 16965                           
 16966                           ; BSR set to: 15
 16967                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 16968  015DC6  8130               	bsf	48,0,b	;volatile
 16969                           
 16970                           ;tmr7.c: 140: }
 16971  015DC8  0012               	return	
 16972  015DCA                     i1l626:
 16973                           
 16974                           ; BSR set to: 15
 16975                           ;tmr7.c: 141: else
 16976                           ;tmr7.c: 142: {
 16977                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 16978                           
 16979                           ; BSR set to: 15
 16980  015DCA  0101               	movlb	1	; () banked
 16981  015DCC  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 16982  015DCE  010F               	movlb	15	; () banked
 16983  015DD0  6F2F               	movwf	47,b	;volatile
 16984                           
 16985                           ; BSR set to: 15
 16986                           ;tmr7.c: 145: TMR7L = timerVal;
 16987  015DD2  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 16988  015DD6  0012               	return	
 16989  015DD8                     __end_of_TMR7_WriteTimer:
 16990                           	opt stack 0
 16991                           tosu	equ	0xFFF
 16992                           tosh	equ	0xFFE
 16993                           tosl	equ	0xFFD
 16994                           pclatu	equ	0xFFB
 16995                           pclath	equ	0xFFA
 16996                           tblptru	equ	0xFF8
 16997                           tblptrh	equ	0xFF7
 16998                           tblptrl	equ	0xFF6
 16999                           tablat	equ	0xFF5
 17000                           prodh	equ	0xFF4
 17001                           prodl	equ	0xFF3
 17002                           intcon	equ	0xFF2
 17003                           postinc0	equ	0xFEE
 17004                           fsr0h	equ	0xFEA
 17005                           fsr0l	equ	0xFE9
 17006                           wreg	equ	0xFE8
 17007                           indf1	equ	0xFE7
 17008                           postdec1	equ	0xFE5
 17009                           fsr1h	equ	0xFE2
 17010                           fsr1l	equ	0xFE1
 17011                           bsr	equ	0xFE0
 17012                           indf2	equ	0xFDF
 17013                           postinc2	equ	0xFDE
 17014                           postdec2	equ	0xFDD
 17015                           fsr2h	equ	0xFDA
 17016                           fsr2l	equ	0xFD9
 17017                           status	equ	0xFD8
 17018                           
 17019 ;; *************** function _TMR6_ISR *****************
 17020 ;; Defined at:
 17021 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 17022 ;; Parameters:    Size  Location     Type
 17023 ;;		None
 17024 ;; Auto vars:     Size  Location     Type
 17025 ;;		None
 17026 ;; Return value:  Size  Location     Type
 17027 ;;                  1    wreg      void 
 17028 ;; Registers used:
 17029 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17030 ;; Tracked objects:
 17031 ;;		On entry : 0/0
 17032 ;;		On exit  : 0/0
 17033 ;;		Unchanged: 0/0
 17034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17039 ;;Total ram usage:        0 bytes
 17040 ;; Hardware stack levels used:    1
 17041 ;; Hardware stack levels required when called:   11
 17042 ;; This function calls:
 17043 ;;		Absolute function
 17044 ;;		_TMR6_DefaultInterruptHandler
 17045 ;;		_heartbeatTimerCallback
 17046 ;; This function is called by:
 17047 ;;		_INTERRUPT_InterruptManagerLow
 17048 ;; This function uses a non-reentrant model
 17049 ;;
 17050                           
 17051                           	psect	text64
 17052  015D3C                     __ptext64:
 17053                           	opt stack 0
 17054  015D3C                     _TMR6_ISR:
 17055                           	opt stack 10
 17056                           
 17057                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 17058                           
 17059                           ; BSR set to: 15
 17060                           ;incstack = 0
 17061  015D3C  010E               	movlb	14	; () banked
 17062  015D3E  9B38               	bcf	56,5,b	;volatile
 17063                           
 17064                           ; BSR set to: 14
 17065                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 17066  015D40  0101               	movlb	1	; () banked
 17067  015D42  51D0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17068  015D44  11D1               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17069  015D46  11D2               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17070  015D48  B4D8               	btfsc	status,2,c
 17071  015D4A  0012               	return	
 17072                           
 17073                           ; BSR set to: 1
 17074                           ;tmr6.c: 172: {
 17075                           ;tmr6.c: 173: TMR6_InterruptHandler();
 17076  015D4C  D801               	call	i1u1561_28
 17077  015D4E  0012               	return	
 17078  015D50                     i1u1561_28:
 17079  015D50  0005               	push	
 17080  015D52  6EFA               	movwf	pclath,c
 17081  015D54  51D0               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17082  015D56  6EFD               	movwf	tosl,c
 17083  015D58  51D1               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17084  015D5A  6EFE               	movwf	tosh,c
 17085  015D5C  51D2               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17086  015D5E  6EFF               	movwf	tosu,c
 17087  015D60  50FA               	movf	pclath,w,c
 17088  015D62  0012               	return		;indir
 17089  015D64                     __end_of_TMR6_ISR:
 17090                           	opt stack 0
 17091                           tosu	equ	0xFFF
 17092                           tosh	equ	0xFFE
 17093                           tosl	equ	0xFFD
 17094                           pclatu	equ	0xFFB
 17095                           pclath	equ	0xFFA
 17096                           tblptru	equ	0xFF8
 17097                           tblptrh	equ	0xFF7
 17098                           tblptrl	equ	0xFF6
 17099                           tablat	equ	0xFF5
 17100                           prodh	equ	0xFF4
 17101                           prodl	equ	0xFF3
 17102                           intcon	equ	0xFF2
 17103                           postinc0	equ	0xFEE
 17104                           fsr0h	equ	0xFEA
 17105                           fsr0l	equ	0xFE9
 17106                           wreg	equ	0xFE8
 17107                           indf1	equ	0xFE7
 17108                           postdec1	equ	0xFE5
 17109                           fsr1h	equ	0xFE2
 17110                           fsr1l	equ	0xFE1
 17111                           bsr	equ	0xFE0
 17112                           indf2	equ	0xFDF
 17113                           postinc2	equ	0xFDE
 17114                           postdec2	equ	0xFDD
 17115                           fsr2h	equ	0xFDA
 17116                           fsr2l	equ	0xFD9
 17117                           status	equ	0xFD8
 17118                           
 17119 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17120 ;; Defined at:
 17121 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 17122 ;; Parameters:    Size  Location     Type
 17123 ;;		None
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;		None
 17126 ;; Return value:  Size  Location     Type
 17127 ;;                  1    wreg      void 
 17128 ;; Registers used:
 17129 ;;		None
 17130 ;; Tracked objects:
 17131 ;;		On entry : 0/0
 17132 ;;		On exit  : 0/0
 17133 ;;		Unchanged: 0/0
 17134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17139 ;;Total ram usage:        0 bytes
 17140 ;; Hardware stack levels used:    1
 17141 ;; Hardware stack levels required when called:   10
 17142 ;; This function calls:
 17143 ;;		Nothing
 17144 ;; This function is called by:
 17145 ;;		_TMR6_Initialize
 17146 ;;		_TMR6_ISR
 17147 ;; This function uses a non-reentrant model
 17148 ;;
 17149                           
 17150                           	psect	text65
 17151  015FD8                     __ptext65:
 17152                           	opt stack 0
 17153  015FD8                     _TMR6_DefaultInterruptHandler:
 17154                           	opt stack 10
 17155                           
 17156                           ;incstack = 0
 17157  015FD8  0012               	return		;funcret
 17158  015FDA                     __end_of_TMR6_DefaultInterruptHandler:
 17159                           	opt stack 0
 17160                           tosu	equ	0xFFF
 17161                           tosh	equ	0xFFE
 17162                           tosl	equ	0xFFD
 17163                           pclatu	equ	0xFFB
 17164                           pclath	equ	0xFFA
 17165                           tblptru	equ	0xFF8
 17166                           tblptrh	equ	0xFF7
 17167                           tblptrl	equ	0xFF6
 17168                           tablat	equ	0xFF5
 17169                           prodh	equ	0xFF4
 17170                           prodl	equ	0xFF3
 17171                           intcon	equ	0xFF2
 17172                           postinc0	equ	0xFEE
 17173                           fsr0h	equ	0xFEA
 17174                           fsr0l	equ	0xFE9
 17175                           wreg	equ	0xFE8
 17176                           indf1	equ	0xFE7
 17177                           postdec1	equ	0xFE5
 17178                           fsr1h	equ	0xFE2
 17179                           fsr1l	equ	0xFE1
 17180                           bsr	equ	0xFE0
 17181                           indf2	equ	0xFDF
 17182                           postinc2	equ	0xFDE
 17183                           postdec2	equ	0xFDD
 17184                           fsr2h	equ	0xFDA
 17185                           fsr2l	equ	0xFD9
 17186                           status	equ	0xFD8
 17187                           
 17188 ;; *************** function _heartbeatTimerCallback *****************
 17189 ;; Defined at:
 17190 ;;		line 122 in file "main.c"
 17191 ;; Parameters:    Size  Location     Type
 17192 ;;		None
 17193 ;; Auto vars:     Size  Location     Type
 17194 ;;		None
 17195 ;; Return value:  Size  Location     Type
 17196 ;;                  1    wreg      void 
 17197 ;; Registers used:
 17198 ;;		wreg, status,2, status,0
 17199 ;; Tracked objects:
 17200 ;;		On entry : 0/0
 17201 ;;		On exit  : 0/0
 17202 ;;		Unchanged: 0/0
 17203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17206 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17207 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17208 ;;Total ram usage:        1 bytes
 17209 ;; Hardware stack levels used:    1
 17210 ;; Hardware stack levels required when called:   10
 17211 ;; This function calls:
 17212 ;;		Nothing
 17213 ;; This function is called by:
 17214 ;;		_main
 17215 ;;		_TMR6_ISR
 17216 ;; This function uses a non-reentrant model
 17217 ;;
 17218                           
 17219                           	psect	text66
 17220  015CBC                     __ptext66:
 17221                           	opt stack 0
 17222  015CBC                     _heartbeatTimerCallback:
 17223                           	opt stack 10
 17224                           
 17225                           ;main.c: 125: LATFbits.LATF2 = !LATFbits.LATF2;
 17226                           
 17227                           ;incstack = 0
 17228  015CBC  B47E               	btfsc	3966,2,c	;volatile
 17229  015CBE  D004               	goto	i1u721_20
 17230  015CC0  0101               	movlb	1	; () banked
 17231  015CC2  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17232  015CC4  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 17233  015CC6  D002               	goto	i1u722_28
 17234  015CC8                     i1u721_20:
 17235  015CC8  0101               	movlb	1	; () banked
 17236  015CCA  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17237  015CCC                     i1u722_28:
 17238  015CCC  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17239  015CCE  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17240  015CD0  507E               	movf	3966,w,c	;volatile
 17241  015CD2  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17242  015CD4  0BFB               	andlw	-5
 17243  015CD6  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17244  015CD8  6E7E               	movwf	3966,c	;volatile
 17245                           
 17246                           ;main.c: 128: on_time++;
 17247  015CDA  0E01               	movlw	1
 17248  015CDC  27BA               	addwf	_on_time& (0+255),f,b
 17249  015CDE  0E00               	movlw	0
 17250  015CE0  23BB               	addwfc	(_on_time+1)& (0+255),f,b
 17251  015CE2  23BC               	addwfc	(_on_time+2)& (0+255),f,b
 17252  015CE4  23BD               	addwfc	(_on_time+3)& (0+255),f,b
 17253  015CE6  0004               	clrwdt		;# 
 17254  015CE8  0012               	return		;funcret
 17255  015CEA                     __end_of_heartbeatTimerCallback:
 17256                           	opt stack 0
 17257                           tosu	equ	0xFFF
 17258                           tosh	equ	0xFFE
 17259                           tosl	equ	0xFFD
 17260                           pclatu	equ	0xFFB
 17261                           pclath	equ	0xFFA
 17262                           tblptru	equ	0xFF8
 17263                           tblptrh	equ	0xFF7
 17264                           tblptrl	equ	0xFF6
 17265                           tablat	equ	0xFF5
 17266                           prodh	equ	0xFF4
 17267                           prodl	equ	0xFF3
 17268                           intcon	equ	0xFF2
 17269                           postinc0	equ	0xFEE
 17270                           fsr0h	equ	0xFEA
 17271                           fsr0l	equ	0xFE9
 17272                           wreg	equ	0xFE8
 17273                           indf1	equ	0xFE7
 17274                           postdec1	equ	0xFE5
 17275                           fsr1h	equ	0xFE2
 17276                           fsr1l	equ	0xFE1
 17277                           bsr	equ	0xFE0
 17278                           indf2	equ	0xFDF
 17279                           postinc2	equ	0xFDE
 17280                           postdec2	equ	0xFDD
 17281                           fsr2h	equ	0xFDA
 17282                           fsr2l	equ	0xFD9
 17283                           status	equ	0xFD8
 17284                           
 17285 ;; *************** function _EUSART2_Transmit_ISR *****************
 17286 ;; Defined at:
 17287 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 17288 ;; Parameters:    Size  Location     Type
 17289 ;;		None
 17290 ;; Auto vars:     Size  Location     Type
 17291 ;;		None
 17292 ;; Return value:  Size  Location     Type
 17293 ;;                  1    wreg      void 
 17294 ;; Registers used:
 17295 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17296 ;; Tracked objects:
 17297 ;;		On entry : 0/0
 17298 ;;		On exit  : 0/0
 17299 ;;		Unchanged: 0/0
 17300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17305 ;;Total ram usage:        0 bytes
 17306 ;; Hardware stack levels used:    1
 17307 ;; Hardware stack levels required when called:   10
 17308 ;; This function calls:
 17309 ;;		Nothing
 17310 ;; This function is called by:
 17311 ;;		_EUSART2_Initialize
 17312 ;;		_INTERRUPT_InterruptManagerLow
 17313 ;; This function uses a non-reentrant model
 17314 ;;
 17315                           
 17316                           	psect	text67
 17317  015BBC                     __ptext67:
 17318                           	opt stack 0
 17319  015BBC                     _EUSART2_Transmit_ISR:
 17320                           	opt stack 11
 17321                           
 17322                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 17323                           
 17324                           ;incstack = 0
 17325  015BBC  0E80               	movlw	128
 17326  015BBE  0101               	movlb	1	; () banked
 17327  015BC0  61DC               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17328  015BC2  D014               	goto	i1l389
 17329                           
 17330                           ; BSR set to: 1
 17331                           ;eusart2.c: 190: {
 17332                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 17333  015BC4  51DD               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 17334  015BC6  0D01               	mullw	1
 17335  015BC8  0E00               	movlw	low _eusart2TxBuffer
 17336  015BCA  24F3               	addwf	prodl,w,c
 17337  015BCC  6ED9               	movwf	fsr2l,c
 17338  015BCE  0E02               	movlw	high _eusart2TxBuffer
 17339  015BD0  20F4               	addwfc	prodh,w,c
 17340  015BD2  6EDA               	movwf	fsr2h,c
 17341  015BD4  50DF               	movf	indf2,w,c
 17342  015BD6  010E               	movlb	14	; () banked
 17343  015BD8  6FF2               	movwf	242,b	;volatile
 17344                           
 17345                           ; BSR set to: 14
 17346  015BDA  0101               	movlb	1	; () banked
 17347  015BDC  2BDD               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 17348                           
 17349                           ; BSR set to: 1
 17350                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 17351  015BDE  0E7F               	movlw	127
 17352  015BE0  65DD               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 17353  015BE2  D002               	goto	i1l390
 17354                           
 17355                           ; BSR set to: 1
 17356                           ;eusart2.c: 193: {
 17357                           ;eusart2.c: 194: eusart2TxTail = 0;
 17358  015BE4  0E00               	movlw	0
 17359  015BE6  6FDD               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17360  015BE8                     i1l390:
 17361                           
 17362                           ; BSR set to: 1
 17363                           ;eusart2.c: 195: }
 17364                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 17365                           
 17366                           ; BSR set to: 1
 17367  015BE8  2BDC               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 17368                           
 17369                           ;eusart2.c: 197: }
 17370  015BEA  0012               	return	
 17371  015BEC                     i1l389:
 17372                           
 17373                           ; BSR set to: 1
 17374                           ;eusart2.c: 198: else
 17375                           ;eusart2.c: 199: {
 17376                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 17377  015BEC  010E               	movlb	14	; () banked
 17378  015BEE  9D2C               	bcf	44,6,b	;volatile
 17379  015BF0  0012               	return	
 17380  015BF2                     __end_of_EUSART2_Transmit_ISR:
 17381                           	opt stack 0
 17382                           tosu	equ	0xFFF
 17383                           tosh	equ	0xFFE
 17384                           tosl	equ	0xFFD
 17385                           pclatu	equ	0xFFB
 17386                           pclath	equ	0xFFA
 17387                           tblptru	equ	0xFF8
 17388                           tblptrh	equ	0xFF7
 17389                           tblptrl	equ	0xFF6
 17390                           tablat	equ	0xFF5
 17391                           prodh	equ	0xFF4
 17392                           prodl	equ	0xFF3
 17393                           intcon	equ	0xFF2
 17394                           postinc0	equ	0xFEE
 17395                           fsr0h	equ	0xFEA
 17396                           fsr0l	equ	0xFE9
 17397                           wreg	equ	0xFE8
 17398                           indf1	equ	0xFE7
 17399                           postdec1	equ	0xFE5
 17400                           fsr1h	equ	0xFE2
 17401                           fsr1l	equ	0xFE1
 17402                           bsr	equ	0xFE0
 17403                           indf2	equ	0xFDF
 17404                           postinc2	equ	0xFDE
 17405                           postdec2	equ	0xFDD
 17406                           fsr2h	equ	0xFDA
 17407                           fsr2l	equ	0xFD9
 17408                           status	equ	0xFD8
 17409                           
 17410 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 17411 ;; Defined at:
 17412 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 17413 ;; Parameters:    Size  Location     Type
 17414 ;;		None
 17415 ;; Auto vars:     Size  Location     Type
 17416 ;;		None
 17417 ;; Return value:  Size  Location     Type
 17418 ;;                  1    wreg      void 
 17419 ;; Registers used:
 17420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17421 ;; Tracked objects:
 17422 ;;		On entry : 0/0
 17423 ;;		On exit  : 0/0
 17424 ;;		Unchanged: 0/0
 17425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17428 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17429 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17430 ;;Total ram usage:       18 bytes
 17431 ;; Hardware stack levels used:    1
 17432 ;; Hardware stack levels required when called:    9
 17433 ;; This function calls:
 17434 ;;		Absolute function
 17435 ;;		_ADCC_ISR
 17436 ;;		_EUSART2_Receive_ISR
 17437 ;;		_TMR5_ISR
 17438 ;; This function is called by:
 17439 ;;		Interrupt level 2
 17440 ;; This function uses a non-reentrant model
 17441 ;;
 17442                           
 17443                           	psect	intcode
 17444  000008                     __pintcode:
 17445                           	opt stack 0
 17446  000008                     _INTERRUPT_InterruptManagerHigh:
 17447                           	opt stack 9
 17448                           
 17449                           ;incstack = 0
 17450  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17451  00000A  EF22  F0A5         	goto	int_func
 17452                           tosu	equ	0xFFF
 17453                           tosh	equ	0xFFE
 17454                           tosl	equ	0xFFD
 17455                           pclatu	equ	0xFFB
 17456                           pclath	equ	0xFFA
 17457                           tblptru	equ	0xFF8
 17458                           tblptrh	equ	0xFF7
 17459                           tblptrl	equ	0xFF6
 17460                           tablat	equ	0xFF5
 17461                           prodh	equ	0xFF4
 17462                           prodl	equ	0xFF3
 17463                           intcon	equ	0xFF2
 17464                           postinc0	equ	0xFEE
 17465                           fsr0h	equ	0xFEA
 17466                           fsr0l	equ	0xFE9
 17467                           wreg	equ	0xFE8
 17468                           indf1	equ	0xFE7
 17469                           postdec1	equ	0xFE5
 17470                           fsr1h	equ	0xFE2
 17471                           fsr1l	equ	0xFE1
 17472                           bsr	equ	0xFE0
 17473                           indf2	equ	0xFDF
 17474                           postinc2	equ	0xFDE
 17475                           postdec2	equ	0xFDD
 17476                           fsr2h	equ	0xFDA
 17477                           fsr2l	equ	0xFD9
 17478                           status	equ	0xFD8
 17479                           
 17480                           	psect	intcode_body
 17481  014A44                     __pintcode_body:
 17482                           	opt stack 9
 17483  014A44                     int_func:
 17484                           	opt stack 9
 17485  014A44  CFFA F0B3          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 17486  014A48  CFFB F0B4          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 17487  014A4C  CFE9 F0B5          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 17488  014A50  CFEA F0B6          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 17489  014A54  CFE1 F0B7          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 17490  014A58  CFE2 F0B8          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 17491  014A5C  CFD9 F0B9          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 17492  014A60  CFDA F0BA          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 17493  014A64  CFF3 F0BB          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 17494  014A68  CFF4 F0BC          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 17495  014A6C  CFF6 F0BD          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 17496  014A70  CFF7 F0BE          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 17497  014A74  CFF8 F0BF          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 17498  014A78  CFF5 F0C0          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 17499  014A7C  C05E  F0C1         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 17500  014A80  C05F  F0C2         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 17501  014A84  C060  F0C3         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 17502  014A88  C061  F0C4         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 17503                           
 17504                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 17505  014A8C  010E               	movlb	14	; () banked
 17506  014A8E  BF2C               	btfsc	44,7,b	;volatile
 17507                           
 17508                           ; BSR set to: 14
 17509  014A90  AF36               	btfss	54,7,b	;volatile
 17510  014A92  D00D               	goto	i2l202
 17511                           
 17512                           ; BSR set to: 14
 17513                           ;interrupt_manager.c: 84: {
 17514                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 17515  014A94  D801               	call	i2u1572_48
 17516  014A96  D016               	goto	i2l206
 17517  014A98                     i2u1572_48:
 17518  014A98  0005               	push	
 17519  014A9A  6EFA               	movwf	pclath,c
 17520  014A9C  0100               	movlb	0	; () banked
 17521  014A9E  51D4               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 17522  014AA0  6EFD               	movwf	tosl,c
 17523  014AA2  51D5               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 17524  014AA4  6EFE               	movwf	tosh,c
 17525  014AA6  51D6               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 17526  014AA8  6EFF               	movwf	tosu,c
 17527  014AAA  50FA               	movf	pclath,w,c
 17528  014AAC  0012               	return		;indir
 17529  014AAE                     i2l202:
 17530                           
 17531                           ; BSR set to: 14
 17532                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 17533  014AAE  B92E               	btfsc	46,4,b	;volatile
 17534                           
 17535                           ; BSR set to: 14
 17536  014AB0  A938               	btfss	56,4,b	;volatile
 17537  014AB2  D003               	goto	i2l204
 17538                           
 17539                           ; BSR set to: 14
 17540                           ;interrupt_manager.c: 88: {
 17541                           ;interrupt_manager.c: 89: TMR5_ISR();
 17542  014AB4  EC13  F0AE         	call	_TMR5_ISR	;wreg free
 17543                           
 17544                           ;interrupt_manager.c: 90: }
 17545  014AB8  D005               	goto	i2l206
 17546  014ABA                     i2l204:
 17547                           
 17548                           ; BSR set to: 14
 17549                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 17550  014ABA  B12A               	btfsc	42,0,b	;volatile
 17551                           
 17552                           ; BSR set to: 14
 17553  014ABC  A134               	btfss	52,0,b	;volatile
 17554  014ABE  D002               	goto	i2l206
 17555                           
 17556                           ; BSR set to: 14
 17557                           ;interrupt_manager.c: 92: {
 17558                           ;interrupt_manager.c: 93: ADCC_ISR();
 17559  014AC0  ECB2  F0AE         	call	_ADCC_ISR	;wreg free
 17560  014AC4                     i2l206:
 17561                           
 17562                           ;interrupt_manager.c: 95: else
 17563                           ;interrupt_manager.c: 96: {
 17564  014AC4  C0C4  F061         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 17565  014AC8  C0C3  F060         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 17566  014ACC  C0C2  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 17567  014AD0  C0C1  F05E         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 17568  014AD4  C0C0  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 17569  014AD8  C0BF  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 17570  014ADC  C0BE  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 17571  014AE0  C0BD  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 17572  014AE4  C0BC  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 17573  014AE8  C0BB  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 17574  014AEC  C0BA  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 17575  014AF0  C0B9  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 17576  014AF4  C0B8  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 17577  014AF8  C0B7  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 17578  014AFC  C0B6  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 17579  014B00  C0B5  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 17580  014B04  C0B4  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 17581  014B08  C0B3  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 17582  014B0C  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17583  014B0E  0011               	retfie		f
 17584  014B10                     __end_of_INTERRUPT_InterruptManagerHigh:
 17585                           	opt stack 0
 17586                           tosu	equ	0xFFF
 17587                           tosh	equ	0xFFE
 17588                           tosl	equ	0xFFD
 17589                           pclatu	equ	0xFFB
 17590                           pclath	equ	0xFFA
 17591                           tblptru	equ	0xFF8
 17592                           tblptrh	equ	0xFF7
 17593                           tblptrl	equ	0xFF6
 17594                           tablat	equ	0xFF5
 17595                           prodh	equ	0xFF4
 17596                           prodl	equ	0xFF3
 17597                           intcon	equ	0xFF2
 17598                           postinc0	equ	0xFEE
 17599                           fsr0h	equ	0xFEA
 17600                           fsr0l	equ	0xFE9
 17601                           wreg	equ	0xFE8
 17602                           indf1	equ	0xFE7
 17603                           postdec1	equ	0xFE5
 17604                           fsr1h	equ	0xFE2
 17605                           fsr1l	equ	0xFE1
 17606                           bsr	equ	0xFE0
 17607                           indf2	equ	0xFDF
 17608                           postinc2	equ	0xFDE
 17609                           postdec2	equ	0xFDD
 17610                           fsr2h	equ	0xFDA
 17611                           fsr2l	equ	0xFD9
 17612                           status	equ	0xFD8
 17613                           
 17614 ;; *************** function _TMR5_ISR *****************
 17615 ;; Defined at:
 17616 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17617 ;; Parameters:    Size  Location     Type
 17618 ;;		None
 17619 ;; Auto vars:     Size  Location     Type
 17620 ;;		None
 17621 ;; Return value:  Size  Location     Type
 17622 ;;                  1    wreg      void 
 17623 ;; Registers used:
 17624 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17625 ;; Tracked objects:
 17626 ;;		On entry : 0/0
 17627 ;;		On exit  : 0/0
 17628 ;;		Unchanged: 0/0
 17629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17634 ;;Total ram usage:        0 bytes
 17635 ;; Hardware stack levels used:    1
 17636 ;; Hardware stack levels required when called:    1
 17637 ;; This function calls:
 17638 ;;		Absolute function
 17639 ;;		_TMR5_DefaultInterruptHandler
 17640 ;;		_TMR5_WriteTimer
 17641 ;; This function is called by:
 17642 ;;		_INTERRUPT_InterruptManagerHigh
 17643 ;; This function uses a non-reentrant model
 17644 ;;
 17645                           
 17646                           	psect	text69
 17647  015C26                     __ptext69:
 17648                           	opt stack 0
 17649  015C26                     _TMR5_ISR:
 17650                           	opt stack 16
 17651                           
 17652                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 17653                           
 17654                           ;incstack = 0
 17655  015C26  010E               	movlb	14	; () banked
 17656  015C28  9938               	bcf	56,4,b	;volatile
 17657                           
 17658                           ; BSR set to: 14
 17659                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 17660  015C2A  C1D6  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17661  015C2E  C1D7  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17662  015C32  EC5F  F0AF         	call	_TMR5_WriteTimer	;wreg free
 17663                           
 17664                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 17665  015C36  0101               	movlb	1	; () banked
 17666  015C38  51BE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17667  015C3A  11BF               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17668  015C3C  11C0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17669  015C3E  B4D8               	btfsc	status,2,c
 17670  015C40  0012               	return	
 17671                           
 17672                           ; BSR set to: 1
 17673                           ;tmr5.c: 172: {
 17674                           ;tmr5.c: 173: TMR5_InterruptHandler();
 17675  015C42  D801               	call	i2u1557_48
 17676  015C44  0012               	return	
 17677  015C46                     i2u1557_48:
 17678  015C46  0005               	push	
 17679  015C48  6EFA               	movwf	pclath,c
 17680  015C4A  51BE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17681  015C4C  6EFD               	movwf	tosl,c
 17682  015C4E  51BF               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17683  015C50  6EFE               	movwf	tosh,c
 17684  015C52  51C0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17685  015C54  6EFF               	movwf	tosu,c
 17686  015C56  50FA               	movf	pclath,w,c
 17687  015C58  0012               	return		;indir
 17688  015C5A                     __end_of_TMR5_ISR:
 17689                           	opt stack 0
 17690                           tosu	equ	0xFFF
 17691                           tosh	equ	0xFFE
 17692                           tosl	equ	0xFFD
 17693                           pclatu	equ	0xFFB
 17694                           pclath	equ	0xFFA
 17695                           tblptru	equ	0xFF8
 17696                           tblptrh	equ	0xFF7
 17697                           tblptrl	equ	0xFF6
 17698                           tablat	equ	0xFF5
 17699                           prodh	equ	0xFF4
 17700                           prodl	equ	0xFF3
 17701                           intcon	equ	0xFF2
 17702                           postinc0	equ	0xFEE
 17703                           fsr0h	equ	0xFEA
 17704                           fsr0l	equ	0xFE9
 17705                           wreg	equ	0xFE8
 17706                           indf1	equ	0xFE7
 17707                           postdec1	equ	0xFE5
 17708                           fsr1h	equ	0xFE2
 17709                           fsr1l	equ	0xFE1
 17710                           bsr	equ	0xFE0
 17711                           indf2	equ	0xFDF
 17712                           postinc2	equ	0xFDE
 17713                           postdec2	equ	0xFDD
 17714                           fsr2h	equ	0xFDA
 17715                           fsr2l	equ	0xFD9
 17716                           status	equ	0xFD8
 17717                           
 17718 ;; *************** function _TMR5_WriteTimer *****************
 17719 ;; Defined at:
 17720 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;  timerVal        2    0[COMRAM] unsigned int 
 17723 ;; Auto vars:     Size  Location     Type
 17724 ;;		None
 17725 ;; Return value:  Size  Location     Type
 17726 ;;                  1    wreg      void 
 17727 ;; Registers used:
 17728 ;;		wreg, status,2
 17729 ;; Tracked objects:
 17730 ;;		On entry : 0/0
 17731 ;;		On exit  : 0/0
 17732 ;;		Unchanged: 0/0
 17733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17738 ;;Total ram usage:        2 bytes
 17739 ;; Hardware stack levels used:    1
 17740 ;; This function calls:
 17741 ;;		Nothing
 17742 ;; This function is called by:
 17743 ;;		_TMR5_ISR
 17744 ;;		_TMR5_Reload
 17745 ;; This function uses a non-reentrant model
 17746 ;;
 17747                           
 17748                           	psect	text70
 17749  015EBE                     __ptext70:
 17750                           	opt stack 0
 17751  015EBE                     _TMR5_WriteTimer:
 17752                           	opt stack 16
 17753                           
 17754                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 17755                           
 17756                           ;incstack = 0
 17757  015EBE  A4C3               	btfss	4035,2,c	;volatile
 17758  015EC0  D007               	goto	i2l1008
 17759                           
 17760                           ;tmr5.c: 130: {
 17761                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 17762  015EC2  90C3               	bcf	4035,0,c	;volatile
 17763                           
 17764                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 17765  015EC4  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 17766  015EC6  6EC2               	movwf	4034,c	;volatile
 17767                           
 17768                           ;tmr5.c: 136: TMR5L = timerVal;
 17769  015EC8  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 17770                           
 17771                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 17772  015ECC  80C3               	bsf	4035,0,c	;volatile
 17773                           
 17774                           ;tmr5.c: 140: }
 17775  015ECE  0012               	return	
 17776  015ED0                     i2l1008:
 17777                           
 17778                           ;tmr5.c: 141: else
 17779                           ;tmr5.c: 142: {
 17780                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 17781  015ED0  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 17782  015ED2  6EC2               	movwf	4034,c	;volatile
 17783                           
 17784                           ;tmr5.c: 145: TMR5L = timerVal;
 17785  015ED4  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 17786  015ED8  0012               	return	
 17787  015EDA                     __end_of_TMR5_WriteTimer:
 17788                           	opt stack 0
 17789                           tosu	equ	0xFFF
 17790                           tosh	equ	0xFFE
 17791                           tosl	equ	0xFFD
 17792                           pclatu	equ	0xFFB
 17793                           pclath	equ	0xFFA
 17794                           tblptru	equ	0xFF8
 17795                           tblptrh	equ	0xFF7
 17796                           tblptrl	equ	0xFF6
 17797                           tablat	equ	0xFF5
 17798                           prodh	equ	0xFF4
 17799                           prodl	equ	0xFF3
 17800                           intcon	equ	0xFF2
 17801                           postinc0	equ	0xFEE
 17802                           fsr0h	equ	0xFEA
 17803                           fsr0l	equ	0xFE9
 17804                           wreg	equ	0xFE8
 17805                           indf1	equ	0xFE7
 17806                           postdec1	equ	0xFE5
 17807                           fsr1h	equ	0xFE2
 17808                           fsr1l	equ	0xFE1
 17809                           bsr	equ	0xFE0
 17810                           indf2	equ	0xFDF
 17811                           postinc2	equ	0xFDE
 17812                           postdec2	equ	0xFDD
 17813                           fsr2h	equ	0xFDA
 17814                           fsr2l	equ	0xFD9
 17815                           status	equ	0xFD8
 17816                           
 17817 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17818 ;; Defined at:
 17819 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17820 ;; Parameters:    Size  Location     Type
 17821 ;;		None
 17822 ;; Auto vars:     Size  Location     Type
 17823 ;;		None
 17824 ;; Return value:  Size  Location     Type
 17825 ;;                  1    wreg      void 
 17826 ;; Registers used:
 17827 ;;		None
 17828 ;; Tracked objects:
 17829 ;;		On entry : 0/0
 17830 ;;		On exit  : 0/0
 17831 ;;		Unchanged: 0/0
 17832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17837 ;;Total ram usage:        0 bytes
 17838 ;; Hardware stack levels used:    1
 17839 ;; This function calls:
 17840 ;;		Nothing
 17841 ;; This function is called by:
 17842 ;;		_TMR5_Initialize
 17843 ;;		_TMR5_ISR
 17844 ;; This function uses a non-reentrant model
 17845 ;;
 17846                           
 17847                           	psect	text71
 17848  015FDA                     __ptext71:
 17849                           	opt stack 0
 17850  015FDA                     _TMR5_DefaultInterruptHandler:
 17851                           	opt stack 16
 17852                           
 17853                           ;incstack = 0
 17854  015FDA  0012               	return		;funcret
 17855  015FDC                     __end_of_TMR5_DefaultInterruptHandler:
 17856                           	opt stack 0
 17857                           tosu	equ	0xFFF
 17858                           tosh	equ	0xFFE
 17859                           tosl	equ	0xFFD
 17860                           pclatu	equ	0xFFB
 17861                           pclath	equ	0xFFA
 17862                           tblptru	equ	0xFF8
 17863                           tblptrh	equ	0xFF7
 17864                           tblptrl	equ	0xFF6
 17865                           tablat	equ	0xFF5
 17866                           prodh	equ	0xFF4
 17867                           prodl	equ	0xFF3
 17868                           intcon	equ	0xFF2
 17869                           postinc0	equ	0xFEE
 17870                           fsr0h	equ	0xFEA
 17871                           fsr0l	equ	0xFE9
 17872                           wreg	equ	0xFE8
 17873                           indf1	equ	0xFE7
 17874                           postdec1	equ	0xFE5
 17875                           fsr1h	equ	0xFE2
 17876                           fsr1l	equ	0xFE1
 17877                           bsr	equ	0xFE0
 17878                           indf2	equ	0xFDF
 17879                           postinc2	equ	0xFDE
 17880                           postdec2	equ	0xFDD
 17881                           fsr2h	equ	0xFDA
 17882                           fsr2l	equ	0xFD9
 17883                           status	equ	0xFD8
 17884                           
 17885 ;; *************** function _EUSART2_Receive_ISR *****************
 17886 ;; Defined at:
 17887 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 17888 ;; Parameters:    Size  Location     Type
 17889 ;;		None
 17890 ;; Auto vars:     Size  Location     Type
 17891 ;;		None
 17892 ;; Return value:  Size  Location     Type
 17893 ;;                  1    wreg      void 
 17894 ;; Registers used:
 17895 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17896 ;; Tracked objects:
 17897 ;;		On entry : 0/0
 17898 ;;		On exit  : 0/0
 17899 ;;		Unchanged: 0/0
 17900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17905 ;;Total ram usage:        0 bytes
 17906 ;; Hardware stack levels used:    1
 17907 ;; Hardware stack levels required when called:    4
 17908 ;; This function calls:
 17909 ;;		i2_printf
 17910 ;; This function is called by:
 17911 ;;		_EUSART2_Initialize
 17912 ;;		_INTERRUPT_InterruptManagerHigh
 17913 ;; This function uses a non-reentrant model
 17914 ;;
 17915                           
 17916                           	psect	text72
 17917  014C6E                     __ptext72:
 17918                           	opt stack 0
 17919  014C6E                     _EUSART2_Receive_ISR:
 17920                           	opt stack 13
 17921                           
 17922                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 17923                           
 17924                           ;incstack = 0
 17925  014C6E  010E               	movlb	14	; () banked
 17926  014C70  A3F5               	btfss	245,1,b	;volatile
 17927  014C72  D002               	goto	i2l395
 17928                           
 17929                           ; BSR set to: 14
 17930                           ;eusart2.c: 208: {
 17931                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 17932  014C74  99F5               	bcf	245,4,b	;volatile
 17933                           
 17934                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 17935  014C76  89F5               	bsf	245,4,b	;volatile
 17936  014C78                     i2l395:
 17937                           
 17938                           ; BSR set to: 14
 17939                           ;eusart2.c: 213: }
 17940                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 17941                           
 17942                           ; BSR set to: 14
 17943  014C78  0100               	movlb	0	; () banked
 17944  014C7A  51DE               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 17945  014C7C  0D01               	mullw	1
 17946  014C7E  0E80               	movlw	low _eusart2RxBuffer
 17947  014C80  24F3               	addwf	prodl,w,c
 17948  014C82  6ED9               	movwf	fsr2l,c
 17949  014C84  0E02               	movlw	high _eusart2RxBuffer
 17950  014C86  20F4               	addwfc	prodh,w,c
 17951  014C88  6EDA               	movwf	fsr2h,c
 17952  014C8A  CEF1 FFDF          	movff	3825,indf2	;volatile
 17953                           
 17954                           ; BSR set to: 0
 17955  014C8E  2BDE               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 17956                           
 17957                           ; BSR set to: 0
 17958                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 17959  014C90  0E3F               	movlw	63
 17960  014C92  65DE               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 17961  014C94  D002               	goto	i2l396
 17962                           
 17963                           ; BSR set to: 0
 17964                           ;eusart2.c: 218: {
 17965                           ;eusart2.c: 219: eusart2RxHead = 0;
 17966  014C96  0E00               	movlw	0
 17967  014C98  6FDE               	movwf	_eusart2RxHead& (0+255),b	;volatile
 17968  014C9A                     i2l396:
 17969                           
 17970                           ; BSR set to: 0
 17971                           ;eusart2.c: 220: }
 17972                           ;eusart2.c: 221: eusart2RxCount++;
 17973                           
 17974                           ; BSR set to: 0
 17975  014C9A  0101               	movlb	1	; () banked
 17976  014C9C  2BDA               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 17977                           
 17978                           ; BSR set to: 1
 17979                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 17980  014C9E  0E0A               	movlw	10
 17981  014CA0  010E               	movlb	14	; () banked
 17982  014CA2  19F1               	xorwf	241,w,b	;volatile
 17983  014CA4  B4D8               	btfsc	status,2,c
 17984  014CA6  D004               	goto	i2u1567_40
 17985                           
 17986                           ; BSR set to: 14
 17987  014CA8  0E0D               	movlw	13
 17988  014CAA  19F1               	xorwf	241,w,b	;volatile
 17989  014CAC  A4D8               	btfss	status,2,c
 17990  014CAE  D006               	goto	i2l397
 17991  014CB0                     i2u1567_40:
 17992                           
 17993                           ; BSR set to: 14
 17994                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 17995  014CB0  0100               	movlb	0	; () banked
 17996  014CB2  81EB               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 17997                           
 17998                           ; BSR set to: 0
 17999                           ;eusart2.c: 232: RC2REG = 0;
 18000  014CB4  0E00               	movlw	0
 18001  014CB6  010E               	movlb	14	; () banked
 18002  014CB8  6FF1               	movwf	241,b	;volatile
 18003                           
 18004                           ;eusart2.c: 234: }
 18005  014CBA  D002               	goto	i2l400
 18006  014CBC                     i2l397:
 18007                           
 18008                           ; BSR set to: 14
 18009                           ;eusart2.c: 236: else {
 18010                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 18011  014CBC  0100               	movlb	0	; () banked
 18012  014CBE  91EB               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 18013  014CC0                     i2l400:
 18014                           
 18015                           ;eusart2.c: 240: }
 18016                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 18017                           
 18018                           ; BSR set to: 0
 18019  014CC0  0E08               	movlw	8
 18020  014CC2  010E               	movlb	14	; () banked
 18021  014CC4  19F1               	xorwf	241,w,b	;volatile
 18022  014CC6  A4D8               	btfss	status,2,c
 18023  014CC8  0012               	return	
 18024                           
 18025                           ; BSR set to: 14
 18026                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 18027  014CCA  0100               	movlb	0	; () banked
 18028  014CCC  51DE               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18029  014CCE  0D01               	mullw	1
 18030  014CD0  0E80               	movlw	low _eusart2RxBuffer
 18031  014CD2  24F3               	addwf	prodl,w,c
 18032  014CD4  6ED9               	movwf	fsr2l,c
 18033  014CD6  0E02               	movlw	high _eusart2RxBuffer
 18034  014CD8  20F4               	addwfc	prodh,w,c
 18035  014CDA  6EDA               	movwf	fsr2h,c
 18036  014CDC  0E00               	movlw	0
 18037  014CDE  6EDF               	movwf	indf2,c
 18038                           
 18039                           ; BSR set to: 0
 18040                           ;eusart2.c: 246: eusart2RxHead--;
 18041  014CE0  07DE               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18042                           
 18043                           ; BSR set to: 0
 18044                           ;eusart2.c: 249: printf("\033[K");
 18045  014CE2  0EC2               	movlw	low STR_1
 18046  014CE4  6F66               	movwf	i2printf@f& (0+255),b
 18047  014CE6  0EFF               	movlw	high STR_1
 18048  014CE8  6F67               	movwf	(i2printf@f+1)& (0+255),b
 18049  014CEA  EC74  F084         	call	i2_printf	;wreg free
 18050                           
 18051                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 18052  014CEE  0101               	movlb	1	; () banked
 18053  014CF0  51DB               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 18054  014CF2  0100               	movlb	0	; () banked
 18055  014CF4  19DE               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 18056  014CF6  B4D8               	btfsc	status,2,c
 18057  014CF8  D00B               	goto	i2l402
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 18061  014CFA  51DE               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18062  014CFC  0D01               	mullw	1
 18063  014CFE  0E80               	movlw	low _eusart2RxBuffer
 18064  014D00  24F3               	addwf	prodl,w,c
 18065  014D02  6ED9               	movwf	fsr2l,c
 18066  014D04  0E02               	movlw	high _eusart2RxBuffer
 18067  014D06  20F4               	addwfc	prodh,w,c
 18068  014D08  6EDA               	movwf	fsr2h,c
 18069  014D0A  0E00               	movlw	0
 18070  014D0C  6EDF               	movwf	indf2,c
 18071                           
 18072                           ; BSR set to: 0
 18073                           ;eusart2.c: 254: eusart2RxHead--;
 18074  014D0E  07DE               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18075  014D10                     i2l402:
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;eusart2.c: 256: }
 18079                           ;eusart2.c: 258: RC2REG = 0;
 18080                           
 18081                           ; BSR set to: 0
 18082  014D10  0E00               	movlw	0
 18083  014D12  010E               	movlb	14	; () banked
 18084  014D14  6FF1               	movwf	241,b	;volatile
 18085  014D16  0012               	return	
 18086  014D18                     __end_of_EUSART2_Receive_ISR:
 18087                           	opt stack 0
 18088                           tosu	equ	0xFFF
 18089                           tosh	equ	0xFFE
 18090                           tosl	equ	0xFFD
 18091                           pclatu	equ	0xFFB
 18092                           pclath	equ	0xFFA
 18093                           tblptru	equ	0xFF8
 18094                           tblptrh	equ	0xFF7
 18095                           tblptrl	equ	0xFF6
 18096                           tablat	equ	0xFF5
 18097                           prodh	equ	0xFF4
 18098                           prodl	equ	0xFF3
 18099                           intcon	equ	0xFF2
 18100                           postinc0	equ	0xFEE
 18101                           fsr0h	equ	0xFEA
 18102                           fsr0l	equ	0xFE9
 18103                           wreg	equ	0xFE8
 18104                           indf1	equ	0xFE7
 18105                           postdec1	equ	0xFE5
 18106                           fsr1h	equ	0xFE2
 18107                           fsr1l	equ	0xFE1
 18108                           bsr	equ	0xFE0
 18109                           indf2	equ	0xFDF
 18110                           postinc2	equ	0xFDE
 18111                           postdec2	equ	0xFDD
 18112                           fsr2h	equ	0xFDA
 18113                           fsr2l	equ	0xFD9
 18114                           status	equ	0xFD8
 18115                           
 18116 ;; *************** function i2_printf *****************
 18117 ;; Defined at:
 18118 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18119 ;; Parameters:    Size  Location     Type
 18120 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 18121 ;;		 -> STR_87(30), STR_86(23), STR_85(40), STR_84(30), 
 18122 ;;		 -> STR_83(33), STR_82(1152), STR_80(58), STR_78(73), 
 18123 ;;		 -> STR_77(63), STR_76(37), STR_75(102), STR_74(86), 
 18124 ;;		 -> STR_72(25), STR_70(24), STR_68(41), STR_66(40), 
 18125 ;;		 -> STR_64(34), STR_62(34), STR_60(32), STR_58(56), 
 18126 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
 18127 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
 18128 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 18129 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 18130 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 18131 ;;		 -> STR_1(4), 
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;  printf          4   31[BANK0 ] unsigned long 
 18134 ;;  printf          4   27[BANK0 ] struct .
 18135 ;;  printf          3   35[BANK0 ] struct .
 18136 ;;  printf          2   38[BANK0 ] int 
 18137 ;;  printf          2   25[BANK0 ] int 
 18138 ;;  printf          2   23[BANK0 ] unsigned short 
 18139 ;;  printf          2   21[BANK0 ] PTR void [1]
 18140 ;;		 -> ?i2_printf(2), ?_printf(2), 
 18141 ;;  printf          2   19[BANK0 ] unsigned int 
 18142 ;;  printf          2   17[BANK0 ] PTR const unsigned char 
 18143 ;;		 -> printf@c(1), 
 18144 ;;  printf          2    0        int 
 18145 ;;  printf          1   40[BANK0 ] char 
 18146 ;;  printf          1    0        unsigned char 
 18147 ;; Return value:  Size  Location     Type
 18148 ;;                  2    6[BANK0 ] int 
 18149 ;; Registers used:
 18150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18151 ;; Tracked objects:
 18152 ;;		On entry : 0/0
 18153 ;;		On exit  : 0/0
 18154 ;;		Unchanged: 0/0
 18155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18156 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18157 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18158 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18159 ;;      Totals:         0      35       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18160 ;;Total ram usage:       35 bytes
 18161 ;; Hardware stack levels used:    1
 18162 ;; Hardware stack levels required when called:    3
 18163 ;; This function calls:
 18164 ;;		i2___awdiv
 18165 ;;		i2___ftadd
 18166 ;;		i2___ftge
 18167 ;;		i2___ftmul
 18168 ;;		i2___ftneg
 18169 ;;		i2___ftsub
 18170 ;;		i2___fttol
 18171 ;;		i2___lldiv
 18172 ;;		i2___llmod
 18173 ;;		i2___lltoft
 18174 ;;		i2___wmul
 18175 ;;		i2__div_to_l_
 18176 ;;		i2__tdiv_to_l_
 18177 ;;		i2_fround
 18178 ;;		i2_isdigit
 18179 ;;		i2_putch
 18180 ;;		i2_scale
 18181 ;; This function is called by:
 18182 ;;		_EUSART2_Receive_ISR
 18183 ;; This function uses a non-reentrant model
 18184 ;;
 18185                           
 18186                           	psect	text73
 18187  0108E8                     __ptext73:
 18188                           	opt stack 0
 18189  0108E8                     i2_printf:
 18190                           	opt stack 13
 18191                           
 18192                           ;doprnt.c: 466: va_list ap;
 18193                           ;doprnt.c: 499: signed char c;
 18194                           ;doprnt.c: 501: int width;
 18195                           ;doprnt.c: 504: int prec;
 18196                           ;doprnt.c: 508: unsigned short flag;
 18197                           ;doprnt.c: 515: char d;
 18198                           ;doprnt.c: 516: double fval;
 18199                           ;doprnt.c: 517: int exp;
 18200                           ;doprnt.c: 523: union {
 18201                           ;doprnt.c: 524: unsigned long vd;
 18202                           ;doprnt.c: 525: double integ;
 18203                           ;doprnt.c: 526: } tmpval;
 18204                           ;doprnt.c: 528: unsigned long val;
 18205                           ;doprnt.c: 529: unsigned len;
 18206                           ;doprnt.c: 530: const char * cp;
 18207                           ;doprnt.c: 533: *ap = __va_start();
 18208                           
 18209                           ; BSR set to: 14
 18210                           ;incstack = 0
 18211  0108E8  0E68               	movlw	low (?i2_printf+2)
 18212  0108EA  0100               	movlb	0	; () banked
 18213  0108EC  6F75               	movwf	i2printf@ap& (0+255),b
 18214  0108EE  0E00               	movlw	high (?i2_printf+2)
 18215  0108F0  6F76               	movwf	(i2printf@ap+1)& (0+255),b
 18216                           
 18217                           ;doprnt.c: 536: while(c = *f++) {
 18218  0108F2  EFC6  F088         	goto	i2u1553_40
 18219  0108F6                     
 18220                           ; BSR set to: 0
 18221                           ;doprnt.c: 538: if(c != '%')
 18222                           
 18223                           ; BSR set to: 0
 18224  0108F6  0E25               	movlw	37
 18225  0108F8  1988               	xorwf	i2printf@c& (0+255),w,b
 18226  0108FA  B4D8               	btfsc	status,2,c
 18227  0108FC  D005               	goto	i2l1068
 18228                           
 18229                           ; BSR set to: 0
 18230                           ;doprnt.c: 540: {
 18231                           ;doprnt.c: 541: (putch(c) );
 18232  0108FE  5188               	movf	i2printf@c& (0+255),w,b
 18233  010900  ECDF  F0AF         	call	i2_putch
 18234                           
 18235                           ;doprnt.c: 542: continue;
 18236  010904  EFC6  F088         	goto	i2u1553_40
 18237  010908                     i2l1068:
 18238                           
 18239                           ;doprnt.c: 543: }
 18240                           ;doprnt.c: 548: flag = 0;
 18241  010908  0E00               	movlw	0
 18242  01090A  0100               	movlb	0	; () banked
 18243  01090C  6F78               	movwf	(i2printf@flag+1)& (0+255),b
 18244  01090E  0E00               	movlw	0
 18245  010910  6F77               	movwf	i2printf@flag& (0+255),b
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;doprnt.c: 611: if(*f == '.') {
 18249  010912  C066  FFF6         	movff	i2printf@f,tblptrl
 18250  010916  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18251  01091A  0E00               	movlw	low (__mediumconst shr (0+16))
 18252  01091C  6EF8               	movwf	tblptru,c
 18253  01091E  0E0D               	movlw	(high __ramtop+-1)
 18254  010920  64F7               	cpfsgt	tblptrh,c
 18255  010922  D003               	bra	i2u1511_47
 18256  010924  0008               	tblrd		*
 18257  010926  50F5               	movf	tablat,w,c
 18258  010928  D005               	bra	i2u1511_40
 18259  01092A                     i2u1511_47:
 18260  01092A  CFF6 FFE1          	movff	tblptrl,fsr1l
 18261  01092E  CFF7 FFE2          	movff	tblptrh,fsr1h
 18262  010932  50E7               	movf	indf1,w,c
 18263  010934                     i2u1511_40:
 18264  010934  0A2E               	xorlw	46
 18265  010936  A4D8               	btfss	status,2,c
 18266  010938  D048               	goto	i2l1069
 18267                           
 18268                           ;doprnt.c: 612: flag |= 0x4000;
 18269  01093A  0100               	movlb	0	; () banked
 18270  01093C  8D78               	bsf	(i2printf@flag+1)& (0+255),6,b
 18271                           
 18272                           ;doprnt.c: 613: f++;
 18273  01093E  4B66               	infsnz	i2printf@f& (0+255),f,b
 18274  010940  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;doprnt.c: 620: {
 18278                           ;doprnt.c: 621: prec = 0;
 18279  010942  0E00               	movlw	0
 18280  010944  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18281  010946  0E00               	movlw	0
 18282  010948  6F86               	movwf	i2printf@prec& (0+255),b
 18283                           
 18284                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 18285  01094A  D029               	goto	i2l1070
 18286  01094C                     
 18287                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 18288                           
 18289                           ; BSR set to: 0
 18290  01094C  C086  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 18291  010950  C087  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 18292  010954  0E00               	movlw	0
 18293  010956  6E12               	movwf	i2___wmul@multiplicand+1,c
 18294  010958  0E0A               	movlw	10
 18295  01095A  6E11               	movwf	i2___wmul@multiplicand,c
 18296  01095C  ECEC  F0AE         	call	i2___wmul	;wreg free
 18297  010960  C066  FFF6         	movff	i2printf@f,tblptrl
 18298  010964  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18299  010968  0E00               	movlw	low (__mediumconst shr (0+16))
 18300  01096A  6EF8               	movwf	tblptru,c
 18301  01096C  0E0D               	movlw	(high __ramtop+-1)
 18302  01096E  64F7               	cpfsgt	tblptrh,c
 18303  010970  D003               	bra	i2u1513_47
 18304  010972  0008               	tblrd		*
 18305  010974  50F5               	movf	tablat,w,c
 18306  010976  D005               	bra	i2u1513_40
 18307  010978                     i2u1513_47:
 18308  010978  CFF6 FFE1          	movff	tblptrl,fsr1l
 18309  01097C  CFF7 FFE2          	movff	tblptrh,fsr1h
 18310  010980  50E7               	movf	indf1,w,c
 18311  010982                     i2u1513_40:
 18312  010982  0100               	movlb	0	; () banked
 18313  010984  6F68               	movwf	??i2_printf& (0+255),b
 18314  010986  5168               	movf	??i2_printf& (0+255),w,b
 18315  010988  260F               	addwf	?i2___wmul,f,c
 18316  01098A  0E00               	movlw	0
 18317  01098C  2210               	addwfc	?i2___wmul+1,f,c
 18318  01098E  0ED0               	movlw	208
 18319  010990  240F               	addwf	?i2___wmul,w,c
 18320  010992  6F86               	movwf	i2printf@prec& (0+255),b
 18321  010994  0EFF               	movlw	255
 18322  010996  2010               	addwfc	?i2___wmul+1,w,c
 18323  010998  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18324                           
 18325                           ; BSR set to: 0
 18326  01099A  4B66               	infsnz	i2printf@f& (0+255),f,b
 18327  01099C  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18328  01099E                     i2l1070:
 18329                           
 18330                           ; BSR set to: 0
 18331                           
 18332                           ; BSR set to: 0
 18333  01099E  C066  FFF6         	movff	i2printf@f,tblptrl
 18334  0109A2  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18335  0109A6  0E00               	movlw	low (__mediumconst shr (0+16))
 18336  0109A8  6EF8               	movwf	tblptru,c
 18337  0109AA  0E0D               	movlw	(high __ramtop+-1)
 18338  0109AC  64F7               	cpfsgt	tblptrh,c
 18339  0109AE  D003               	bra	i2u1514_47
 18340  0109B0  0008               	tblrd		*
 18341  0109B2  50F5               	movf	tablat,w,c
 18342  0109B4  D005               	bra	i2u1514_40
 18343  0109B6                     i2u1514_47:
 18344  0109B6  CFF6 FFE1          	movff	tblptrl,fsr1l
 18345  0109BA  CFF7 FFE2          	movff	tblptrh,fsr1h
 18346  0109BE  50E7               	movf	indf1,w,c
 18347  0109C0                     i2u1514_40:
 18348  0109C0  EC34  F0AF         	call	i2_isdigit
 18349  0109C4  A0D8               	btfss	status,0,c
 18350  0109C6  D035               	goto	i2l1074
 18351  0109C8  D7C1               	goto	i2l1071
 18352  0109CA                     i2l1069:
 18353                           
 18354                           ;doprnt.c: 626: prec = 0;
 18355  0109CA  0E00               	movlw	0
 18356  0109CC  0100               	movlb	0	; () banked
 18357  0109CE  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18358  0109D0  0E00               	movlw	0
 18359  0109D2  6F86               	movwf	i2printf@prec& (0+255),b
 18360                           
 18361                           ; BSR set to: 0
 18362                           ;doprnt.c: 628: flag |= 0x1000;
 18363  0109D4  8978               	bsf	(i2printf@flag+1)& (0+255),4,b
 18364                           
 18365                           ; BSR set to: 0
 18366                           ;doprnt.c: 630: }
 18367                           ;doprnt.c: 635: switch(c = *f++) {
 18368  0109D6  D02D               	goto	i2l1074
 18369  0109D8                     
 18370                           ; BSR set to: 0
 18371                           ;doprnt.c: 663: flag |= 0x400;
 18372                           
 18373                           ; BSR set to: 0
 18374  0109D8  8578               	bsf	(i2printf@flag+1)& (0+255),2,b
 18375                           
 18376                           ; BSR set to: 0
 18377                           ;doprnt.c: 698: case 'i':
 18378                           ;doprnt.c: 699: break;
 18379                           
 18380                           ; BSR set to: 0
 18381                           
 18382                           ;doprnt.c: 697: case 'd':
 18383                           
 18384                           ;doprnt.c: 664: break;
 18385  0109DA  D052               	goto	i2l1078
 18386  0109DC                     
 18387                           ; BSR set to: 0
 18388                           ;doprnt.c: 753: if(prec && prec < len)
 18389                           
 18390                           ; BSR set to: 0
 18391  0109DC  5186               	movf	i2printf@prec& (0+255),w,b
 18392  0109DE  1187               	iorwf	(i2printf@prec+1)& (0+255),w,b
 18393  0109E0  B4D8               	btfsc	status,2,c
 18394  0109E2  D015               	goto	i2l1083
 18395                           
 18396                           ; BSR set to: 0
 18397  0109E4  5173               	movf	i2printf@len& (0+255),w,b
 18398  0109E6  5D86               	subwf	i2printf@prec& (0+255),w,b
 18399  0109E8  5174               	movf	(i2printf@len+1)& (0+255),w,b
 18400  0109EA  5987               	subwfb	(i2printf@prec+1)& (0+255),w,b
 18401  0109EC  B0D8               	btfsc	status,0,c
 18402  0109EE  D00F               	goto	i2l1083
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;doprnt.c: 754: len = prec;
 18406  0109F0  C086  F073         	movff	i2printf@prec,i2printf@len
 18407  0109F4  C087  F074         	movff	i2printf@prec+1,i2printf@len+1
 18408                           
 18409                           ; BSR set to: 0
 18410                           ;doprnt.c: 767: while(len--)
 18411  0109F8  D00A               	goto	i2l1083
 18412  0109FA                     i2l11973:
 18413                           
 18414                           ; BSR set to: 0
 18415                           ;doprnt.c: 768: (putch(*cp++) );
 18416  0109FA  C071  FFD9         	movff	i2printf@cp,fsr2l
 18417  0109FE  C072  FFDA         	movff	i2printf@cp+1,fsr2h
 18418  010A02  50DF               	movf	indf2,w,c
 18419  010A04  ECDF  F0AF         	call	i2_putch
 18420  010A08  0100               	movlb	0	; () banked
 18421  010A0A  4B71               	infsnz	i2printf@cp& (0+255),f,b
 18422  010A0C  2B72               	incf	(i2printf@cp+1)& (0+255),f,b
 18423  010A0E                     i2l1083:
 18424                           
 18425                           ; BSR set to: 0
 18426                           
 18427                           ; BSR set to: 0
 18428  010A0E  0773               	decf	i2printf@len& (0+255),f,b
 18429  010A10  A0D8               	btfss	status,0,c
 18430  010A12  0774               	decf	(i2printf@len+1)& (0+255),f,b
 18431  010A14  2973               	incf	i2printf@len& (0+255),w,b
 18432  010A16  E1F1               	bnz	i2l11973
 18433  010A18  2974               	incf	(i2printf@len+1)& (0+255),w,b
 18434  010A1A  B4D8               	btfsc	status,2,c
 18435  010A1C  D3B7               	goto	i2u1553_40
 18436  010A1E  D7ED               	goto	i2l1084
 18437  010A20                     
 18438                           ; BSR set to: 0
 18439                           ;doprnt.c: 805: cp = (char *)&c;
 18440                           
 18441                           ; BSR set to: 0
 18442  010A20  0E88               	movlw	low i2printf@c
 18443  010A22  6F71               	movwf	i2printf@cp& (0+255),b
 18444  010A24  0E00               	movlw	high i2printf@c
 18445  010A26  6F72               	movwf	(i2printf@cp+1)& (0+255),b
 18446                           
 18447                           ; BSR set to: 0
 18448                           ;doprnt.c: 806: len = 1;
 18449  010A28  0E00               	movlw	0
 18450  010A2A  6F74               	movwf	(i2printf@len+1)& (0+255),b
 18451  010A2C  0E01               	movlw	1
 18452  010A2E  6F73               	movwf	i2printf@len& (0+255),b
 18453                           
 18454                           ;doprnt.c: 807: goto dostring;
 18455  010A30  D7D5               	goto	i2l1081
 18456  010A32                     i2l1074:
 18457                           
 18458                           ; BSR set to: 0
 18459  010A32  0100               	movlb	0	; () banked
 18460  010A34  5166               	movf	i2printf@f& (0+255),w,b
 18461  010A36  6F68               	movwf	??i2_printf& (0+255),b
 18462  010A38  5167               	movf	(i2printf@f+1)& (0+255),w,b
 18463  010A3A  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18464  010A3C  4B66               	infsnz	i2printf@f& (0+255),f,b
 18465  010A3E  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18466  010A40  C068  FFF6         	movff	??i2_printf,tblptrl
 18467  010A44  C069  FFF7         	movff	??i2_printf+1,tblptrh
 18468  010A48  0E00               	movlw	low (__mediumconst shr (0+16))
 18469  010A4A  6EF8               	movwf	tblptru,c
 18470  010A4C  0E0D               	movlw	(high __ramtop+-1)
 18471  010A4E  64F7               	cpfsgt	tblptrh,c
 18472  010A50  D003               	bra	i2u1519_47
 18473  010A52  0008               	tblrd		*
 18474  010A54  50F5               	movf	tablat,w,c
 18475  010A56  D005               	bra	i2u1519_40
 18476  010A58                     i2u1519_47:
 18477  010A58  CFF6 FFE1          	movff	tblptrl,fsr1l
 18478  010A5C  CFF7 FFE2          	movff	tblptrh,fsr1h
 18479  010A60  50E7               	movf	indf1,w,c
 18480  010A62                     i2u1519_40:
 18481  010A62  0100               	movlb	0	; () banked
 18482  010A64  6F88               	movwf	i2printf@c& (0+255),b
 18483  010A66  5188               	movf	i2printf@c& (0+255),w,b
 18484                           
 18485                           ; Switch size 1, requested type "space"
 18486                           ; Number of cases is 4, Range of values is 0 to 105
 18487                           ; switch strategies available:
 18488                           ; Name         Instructions Cycles
 18489                           ; simple_byte           13     7 (average)
 18490                           ;	Chosen strategy is simple_byte
 18491  010A68  0A00               	xorlw	0	; case 0
 18492  010A6A  B4D8               	btfsc	status,2,c
 18493  010A6C  0012               	return	
 18494  010A6E  0A64               	xorlw	100	; case 100
 18495  010A70  B4D8               	btfsc	status,2,c
 18496  010A72  D006               	goto	i2l1078
 18497  010A74  0A02               	xorlw	2	; case 102
 18498  010A76  B4D8               	btfsc	status,2,c
 18499  010A78  D7AF               	goto	i2l1077
 18500  010A7A  0A0F               	xorlw	15	; case 105
 18501  010A7C  A4D8               	btfss	status,2,c
 18502  010A7E  D7D0               	goto	i2l1086
 18503  010A80                     i2l1078:
 18504                           
 18505                           ; BSR set to: 0
 18506                           ;doprnt.c: 825: if(flag & (0x700)) {
 18507                           
 18508                           ; BSR set to: 0
 18509  010A80  0E07               	movlw	7
 18510  010A82  1578               	andwf	(i2printf@flag+1)& (0+255),w,b
 18511  010A84  B4D8               	btfsc	status,2,c
 18512  010A86  D2C0               	goto	i2l1087
 18513                           
 18514                           ; BSR set to: 0
 18515                           ;doprnt.c: 827: if(flag & 0x1000)
 18516  010A88  A978               	btfss	(i2printf@flag+1)& (0+255),4,b
 18517  010A8A  D004               	goto	i2l1088
 18518                           
 18519                           ; BSR set to: 0
 18520                           ;doprnt.c: 829: prec = 6;
 18521  010A8C  0E00               	movlw	0
 18522  010A8E  6F87               	movwf	(i2printf@prec+1)& (0+255),b
 18523  010A90  0E06               	movlw	6
 18524  010A92  6F86               	movwf	i2printf@prec& (0+255),b
 18525  010A94                     i2l1088:
 18526                           
 18527                           ; BSR set to: 0
 18528                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 18529                           
 18530                           ; BSR set to: 0
 18531  010A94  C075  FFD9         	movff	i2printf@ap,fsr2l
 18532  010A98  C076  FFDA         	movff	i2printf@ap+1,fsr2h
 18533  010A9C  CFDE F083          	movff	postinc2,i2printf@fval
 18534  010AA0  CFDE F084          	movff	postinc2,i2printf@fval+1
 18535  010AA4  CFDD F085          	movff	postdec2,i2printf@fval+2
 18536                           
 18537                           ; BSR set to: 0
 18538  010AA8  0E03               	movlw	3
 18539  010AAA  2775               	addwf	i2printf@ap& (0+255),f,b
 18540  010AAC  0E00               	movlw	0
 18541  010AAE  2376               	addwfc	(i2printf@ap+1)& (0+255),f,b
 18542                           
 18543                           ; BSR set to: 0
 18544                           ;doprnt.c: 831: if(fval < 0.0) {
 18545  010AB0  AF85               	btfss	(i2printf@fval+2)& (0+255),7,b
 18546  010AB2  D011               	goto	i2l1089
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;doprnt.c: 832: fval = -fval;
 18550  010AB4  C083  F024         	movff	i2printf@fval,i2___ftneg@f1
 18551  010AB8  C084  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 18552  010ABC  C085  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 18553  010AC0  ECFF  F0AE         	call	i2___ftneg	;wreg free
 18554  010AC4  C024  F083         	movff	?i2___ftneg,i2printf@fval
 18555  010AC8  C025  F084         	movff	?i2___ftneg+1,i2printf@fval+1
 18556  010ACC  C026  F085         	movff	?i2___ftneg+2,i2printf@fval+2
 18557                           
 18558                           ;doprnt.c: 833: flag |= 0x03;
 18559  010AD0  0E03               	movlw	3
 18560  010AD2  0100               	movlb	0	; () banked
 18561  010AD4  1377               	iorwf	i2printf@flag& (0+255),f,b
 18562  010AD6                     i2l1089:
 18563                           
 18564                           ; BSR set to: 0
 18565                           ;doprnt.c: 834: }
 18566                           ;doprnt.c: 835: exp = 0;
 18567                           
 18568                           ; BSR set to: 0
 18569  010AD6  0E00               	movlw	0
 18570  010AD8  6F7A               	movwf	(i2printf@exp+1)& (0+255),b
 18571  010ADA  0E00               	movlw	0
 18572  010ADC  6F79               	movwf	i2printf@exp& (0+255),b
 18573                           
 18574                           ; BSR set to: 0
 18575                           ;doprnt.c: 836: if( fval!=0) {
 18576  010ADE  5183               	movf	i2printf@fval& (0+255),w,b
 18577  010AE0  1184               	iorwf	(i2printf@fval+1)& (0+255),w,b
 18578  010AE2  1185               	iorwf	(i2printf@fval+2)& (0+255),w,b
 18579  010AE4  B4D8               	btfsc	status,2,c
 18580  010AE6  D086               	goto	i2l1094
 18581                           
 18582                           ; BSR set to: 0
 18583                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 18584  010AE8  0E82               	movlw	130
 18585  010AEA  6F68               	movwf	??i2_printf& (0+255),b
 18586  010AEC  0EFF               	movlw	255
 18587  010AEE  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18588  010AF0  C083  F06A         	movff	i2printf@fval,??i2_printf+2
 18589  010AF4  C084  F06B         	movff	i2printf@fval+1,??i2_printf+3
 18590  010AF8  C085  F06C         	movff	i2printf@fval+2,??i2_printf+4
 18591  010AFC  C086  F06D         	movff	i2printf@fval+3,??i2_printf+5
 18592  010B00  0E10               	movlw	16
 18593  010B02  D005               	goto	i2u1524_40
 18594  010B04                     i2u1524_45:
 18595  010B04  90D8               	bcf	status,0,c
 18596  010B06  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 18597  010B08  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 18598  010B0A  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 18599  010B0C  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 18600  010B0E                     i2u1524_40:
 18601  010B0E  2EE8               	decfsz	wreg,f,c
 18602  010B10  D7F9               	goto	i2u1524_45
 18603  010B12  516A               	movf	(??i2_printf+2)& (0+255),w,b
 18604  010B14  2568               	addwf	??i2_printf& (0+255),w,b
 18605  010B16  6F79               	movwf	i2printf@exp& (0+255),b
 18606  010B18  0E00               	movlw	0
 18607  010B1A  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 18608  010B1C  6F7A               	movwf	(i2printf@exp+1)& (0+255),b
 18609                           
 18610                           ; BSR set to: 0
 18611                           ;doprnt.c: 838: exp--;
 18612  010B1E  0779               	decf	i2printf@exp& (0+255),f,b
 18613  010B20  A0D8               	btfss	status,0,c
 18614  010B22  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 18615                           
 18616                           ; BSR set to: 0
 18617                           ;doprnt.c: 839: exp *= 3;
 18618  010B24  C079  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 18619  010B28  C07A  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 18620  010B2C  0E00               	movlw	0
 18621  010B2E  6E12               	movwf	i2___wmul@multiplicand+1,c
 18622  010B30  0E03               	movlw	3
 18623  010B32  6E11               	movwf	i2___wmul@multiplicand,c
 18624  010B34  ECEC  F0AE         	call	i2___wmul	;wreg free
 18625  010B38  C00F  F079         	movff	?i2___wmul,i2printf@exp
 18626  010B3C  C010  F07A         	movff	?i2___wmul+1,i2printf@exp+1
 18627                           
 18628                           ;doprnt.c: 840: exp /= 10;
 18629  010B40  C079  F007         	movff	i2printf@exp,i2___awdiv@dividend
 18630  010B44  C07A  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 18631  010B48  0E00               	movlw	0
 18632  010B4A  6E0A               	movwf	i2___awdiv@divisor+1,c
 18633  010B4C  0E0A               	movlw	10
 18634  010B4E  6E09               	movwf	i2___awdiv@divisor,c
 18635  010B50  EC81  F0A8         	call	i2___awdiv	;wreg free
 18636  010B54  C007  F079         	movff	?i2___awdiv,i2printf@exp
 18637  010B58  C008  F07A         	movff	?i2___awdiv+1,i2printf@exp+1
 18638                           
 18639                           ;doprnt.c: 841: if(exp < 0)
 18640  010B5C  0100               	movlb	0	; () banked
 18641  010B5E  AF7A               	btfss	(i2printf@exp+1)& (0+255),7,b
 18642  010B60  D003               	goto	i2l1091
 18643                           
 18644                           ; BSR set to: 0
 18645                           ;doprnt.c: 842: exp--;
 18646  010B62  0779               	decf	i2printf@exp& (0+255),f,b
 18647  010B64  A0D8               	btfss	status,0,c
 18648  010B66  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 18649  010B68                     i2l1091:
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 18653                           
 18654                           ; BSR set to: 0
 18655  010B68  5179               	movf	i2printf@exp& (0+255),w,b
 18656  010B6A  0800               	sublw	0
 18657  010B6C  EC18  F08F         	call	i2_scale
 18658  010B70  C036  F07B         	movff	?i2_scale,i2printf@tmpval
 18659  010B74  C037  F07C         	movff	?i2_scale+1,i2printf@tmpval+1
 18660  010B78  C038  F07D         	movff	?i2_scale+2,i2printf@tmpval+2
 18661                           
 18662                           ;doprnt.c: 847: tmpval.integ *= fval;
 18663  010B7C  C07B  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 18664  010B80  C07C  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 18665  010B84  C07D  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 18666  010B88  C083  F02A         	movff	i2printf@fval,i2___ftmul@f2
 18667  010B8C  C084  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 18668  010B90  C085  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 18669  010B94  EC79  F0A2         	call	i2___ftmul	;wreg free
 18670  010B98  C027  F07B         	movff	?i2___ftmul,i2printf@tmpval
 18671  010B9C  C028  F07C         	movff	?i2___ftmul+1,i2printf@tmpval+1
 18672  010BA0  C029  F07D         	movff	?i2___ftmul+2,i2printf@tmpval+2
 18673                           
 18674                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 18675  010BA4  C07B  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 18676  010BA8  C07C  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 18677  010BAC  C07D  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 18678  010BB0  0E00               	movlw	0
 18679  010BB2  6E2D               	movwf	i2___ftge@ff2,c
 18680  010BB4  0E80               	movlw	128
 18681  010BB6  6E2E               	movwf	i2___ftge@ff2+1,c
 18682  010BB8  0E3F               	movlw	63
 18683  010BBA  6E2F               	movwf	i2___ftge@ff2+2,c
 18684  010BBC  EC6E  F0A7         	call	i2___ftge	;wreg free
 18685  010BC0  B0D8               	btfsc	status,0,c
 18686  010BC2  D005               	goto	i2l1092
 18687                           
 18688                           ;doprnt.c: 849: exp--;
 18689  010BC4  0100               	movlb	0	; () banked
 18690  010BC6  0779               	decf	i2printf@exp& (0+255),f,b
 18691  010BC8  A0D8               	btfss	status,0,c
 18692  010BCA  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 18693  010BCC  D013               	goto	i2l1094
 18694  010BCE                     i2l1092:
 18695                           
 18696                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 18697                           
 18698                           ; BSR set to: 0
 18699  010BCE  C07B  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 18700  010BD2  C07C  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 18701  010BD6  C07D  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 18702  010BDA  0E00               	movlw	0
 18703  010BDC  6E2D               	movwf	i2___ftge@ff2,c
 18704  010BDE  0E20               	movlw	32
 18705  010BE0  6E2E               	movwf	i2___ftge@ff2+1,c
 18706  010BE2  0E41               	movlw	65
 18707  010BE4  6E2F               	movwf	i2___ftge@ff2+2,c
 18708  010BE6  EC6E  F0A7         	call	i2___ftge	;wreg free
 18709  010BEA  A0D8               	btfss	status,0,c
 18710  010BEC  D003               	goto	i2l1094
 18711                           
 18712                           ;doprnt.c: 851: exp++;
 18713  010BEE  0100               	movlb	0	; () banked
 18714  010BF0  4B79               	infsnz	i2printf@exp& (0+255),f,b
 18715  010BF2  2B7A               	incf	(i2printf@exp+1)& (0+255),f,b
 18716  010BF4                     i2l1094:
 18717                           
 18718                           ;doprnt.c: 852: }
 18719                           ;doprnt.c: 1112: if(prec <= 12)
 18720                           
 18721                           ; BSR set to: 0
 18722                           
 18723                           ; BSR set to: 0
 18724                           
 18725                           ; BSR set to: 0
 18726  010BF4  0100               	movlb	0	; () banked
 18727  010BF6  BF87               	btfsc	(i2printf@prec+1)& (0+255),7,b
 18728  010BF8  D006               	goto	i2u1528_40
 18729  010BFA  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 18730  010BFC  E11B               	bnz	i2l12035
 18731  010BFE  0E0D               	movlw	13
 18732  010C00  5D86               	subwf	i2printf@prec& (0+255),w,b
 18733  010C02  B0D8               	btfsc	status,0,c
 18734  010C04  D017               	goto	i2l1095
 18735  010C06                     i2u1528_40:
 18736                           
 18737                           ; BSR set to: 0
 18738                           ;doprnt.c: 1113: fval += fround(prec);
 18739  010C06  C083  F040         	movff	i2printf@fval,i2___ftadd@f1
 18740  010C0A  C084  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 18741  010C0E  C085  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 18742  010C12  5186               	movf	i2printf@prec& (0+255),w,b
 18743  010C14  EC45  F096         	call	i2_fround
 18744  010C18  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 18745  010C1C  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 18746  010C20  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 18747  010C24  EC7F  F09C         	call	i2___ftadd	;wreg free
 18748  010C28  C040  F083         	movff	?i2___ftadd,i2printf@fval
 18749  010C2C  C041  F084         	movff	?i2___ftadd+1,i2printf@fval+1
 18750  010C30  C042  F085         	movff	?i2___ftadd+2,i2printf@fval+2
 18751  010C34                     i2l1095:
 18752  010C34                     i2l12035:
 18753                           
 18754                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 18755  010C34  0100               	movlb	0	; () banked
 18756  010C36  BF7A               	btfsc	(i2printf@exp+1)& (0+255),7,b
 18757  010C38  D006               	goto	i2u1529_40
 18758  010C3A  517A               	movf	(i2printf@exp+1)& (0+255),w,b
 18759  010C3C  E120               	bnz	i2l12043
 18760  010C3E  0E0A               	movlw	10
 18761  010C40  5D79               	subwf	i2printf@exp& (0+255),w,b
 18762  010C42  B0D8               	btfsc	status,0,c
 18763  010C44  D01C               	goto	i2u1532_40
 18764  010C46                     i2u1529_40:
 18765                           
 18766                           ; BSR set to: 0
 18767  010C46  5183               	movf	i2printf@fval& (0+255),w,b
 18768  010C48  1184               	iorwf	(i2printf@fval+1)& (0+255),w,b
 18769  010C4A  1185               	iorwf	(i2printf@fval+2)& (0+255),w,b
 18770  010C4C  B4D8               	btfsc	status,2,c
 18771  010C4E  D056               	goto	i2l1096
 18772                           
 18773                           ; BSR set to: 0
 18774  010C50  C083  F03D         	movff	i2printf@fval,i2___fttol@f1
 18775  010C54  C084  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 18776  010C58  C085  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 18777  010C5C  ECFF  F0A1         	call	i2___fttol	;wreg free
 18778  010C60  503D               	movf	?i2___fttol,w,c
 18779  010C62  103E               	iorwf	?i2___fttol+1,w,c
 18780  010C64  103F               	iorwf	?i2___fttol+2,w,c
 18781  010C66  1040               	iorwf	?i2___fttol+3,w,c
 18782  010C68  A4D8               	btfss	status,2,c
 18783  010C6A  D048               	goto	i2l1096
 18784  010C6C  0100               	movlb	0	; () banked
 18785  010C6E  BF7A               	btfsc	(i2printf@exp+1)& (0+255),7,b
 18786  010C70  D045               	goto	i2l1096
 18787  010C72  517A               	movf	(i2printf@exp+1)& (0+255),w,b
 18788  010C74  E104               	bnz	i2l12043
 18789  010C76  0E02               	movlw	2
 18790  010C78  5D79               	subwf	i2printf@exp& (0+255),w,b
 18791  010C7A  A0D8               	btfss	status,0,c
 18792  010C7C  D03F               	goto	i2l1096
 18793  010C7E                     i2u1532_40:
 18794  010C7E                     i2l12043:
 18795                           
 18796                           ; BSR set to: 0
 18797                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 18798  010C7E  C07B  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 18799  010C82  C07C  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 18800  010C86  C07D  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 18801  010C8A  0E70               	movlw	112
 18802  010C8C  6E2D               	movwf	i2___ftge@ff2,c
 18803  010C8E  0E89               	movlw	137
 18804  010C90  6E2E               	movwf	i2___ftge@ff2+1,c
 18805  010C92  0E40               	movlw	64
 18806  010C94  6E2F               	movwf	i2___ftge@ff2+2,c
 18807  010C96  EC6E  F0A7         	call	i2___ftge	;wreg free
 18808  010C9A  B0D8               	btfsc	status,0,c
 18809  010C9C  D003               	goto	i2l1099
 18810                           
 18811                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 18812  010C9E  0100               	movlb	0	; () banked
 18813  010CA0  0EF7               	movlw	247
 18814  010CA2  D002               	goto	L2
 18815  010CA4                     i2l1099:
 18816                           
 18817                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 18818                           
 18819                           ; BSR set to: 0
 18820  010CA4  0100               	movlb	0	; () banked
 18821  010CA6  0EF8               	movlw	248
 18822  010CA8                     L2:
 18823  010CA8  2779               	addwf	i2printf@exp& (0+255),f,b
 18824  010CAA  0EFF               	movlw	255
 18825  010CAC  237A               	addwfc	(i2printf@exp+1)& (0+255),f,b
 18826                           
 18827                           ; BSR set to: 0
 18828                           ;doprnt.c: 1124: }
 18829                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 18830                           
 18831                           ; BSR set to: 0
 18832  010CAE  5179               	movf	i2printf@exp& (0+255),w,b
 18833  010CB0  EC18  F08F         	call	i2_scale
 18834  010CB4  C036  F07B         	movff	?i2_scale,i2printf@tmpval
 18835  010CB8  C037  F07C         	movff	?i2_scale+1,i2printf@tmpval+1
 18836  010CBC  C038  F07D         	movff	?i2_scale+2,i2printf@tmpval+2
 18837                           
 18838                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 18839  010CC0  C083  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 18840  010CC4  C084  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 18841  010CC8  C085  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 18842  010CCC  C07B  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 18843  010CD0  C07C  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 18844  010CD4  C07D  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 18845  010CD8  ECB8  F09E         	call	i2__tdiv_to_l_	;wreg free
 18846  010CDC  C001  F07F         	movff	?i2__tdiv_to_l_,i2printf@val
 18847  010CE0  C002  F080         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 18848  010CE4  C003  F081         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 18849  010CE8  C004  F082         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 18850                           
 18851                           ;doprnt.c: 1129: fval = 0.0;
 18852  010CEC  0E00               	movlw	0
 18853  010CEE  0100               	movlb	0	; () banked
 18854  010CF0  6F83               	movwf	i2printf@fval& (0+255),b
 18855  010CF2  0E00               	movlw	0
 18856  010CF4  6F84               	movwf	(i2printf@fval+1)& (0+255),b
 18857  010CF6  0E00               	movlw	0
 18858  010CF8  6F85               	movwf	(i2printf@fval+2)& (0+255),b
 18859                           
 18860                           ;doprnt.c: 1130: } else {
 18861  010CFA  D033               	goto	i2l1105
 18862  010CFC                     i2l1096:
 18863                           
 18864                           ;doprnt.c: 1131: val = (unsigned long)fval;
 18865                           
 18866                           ; BSR set to: 0
 18867  010CFC  C083  F03D         	movff	i2printf@fval,i2___fttol@f1
 18868  010D00  C084  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 18869  010D04  C085  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 18870  010D08  ECFF  F0A1         	call	i2___fttol	;wreg free
 18871  010D0C  C03D  F07F         	movff	?i2___fttol,i2printf@val
 18872  010D10  C03E  F080         	movff	?i2___fttol+1,i2printf@val+1
 18873  010D14  C03F  F081         	movff	?i2___fttol+2,i2printf@val+2
 18874  010D18  C040  F082         	movff	?i2___fttol+3,i2printf@val+3
 18875                           
 18876                           ;doprnt.c: 1132: fval -= (double)val;
 18877  010D1C  C083  F060         	movff	i2printf@fval,i2___ftsub@f1
 18878  010D20  C084  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 18879  010D24  C085  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 18880  010D28  C07F  F009         	movff	i2printf@val,i2___lltoft@c
 18881  010D2C  C080  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 18882  010D30  C081  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 18883  010D34  C082  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 18884  010D38  EC85  F0AB         	call	i2___lltoft	;wreg free
 18885  010D3C  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 18886  010D40  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 18887  010D44  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 18888  010D48  EC84  F0AD         	call	i2___ftsub	;wreg free
 18889  010D4C  C060  F083         	movff	?i2___ftsub,i2printf@fval
 18890  010D50  C061  F084         	movff	?i2___ftsub+1,i2printf@fval+1
 18891  010D54  C062  F085         	movff	?i2___ftsub+2,i2printf@fval+2
 18892                           
 18893                           ;doprnt.c: 1133: exp = 0;
 18894  010D58  0E00               	movlw	0
 18895  010D5A  0100               	movlb	0	; () banked
 18896  010D5C  6F7A               	movwf	(i2printf@exp+1)& (0+255),b
 18897  010D5E  0E00               	movlw	0
 18898  010D60  6F79               	movwf	i2printf@exp& (0+255),b
 18899  010D62                     i2l1105:
 18900                           
 18901                           ; BSR set to: 0
 18902                           ;doprnt.c: 1134: }
 18903                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 18904                           
 18905                           ; BSR set to: 0
 18906  010D62  0E01               	movlw	1
 18907  010D64  6F88               	movwf	i2printf@c& (0+255),b
 18908  010D66                     i2l12063:
 18909                           
 18910                           ; BSR set to: 0
 18911  010D66  0E0A               	movlw	10
 18912  010D68  1988               	xorwf	i2printf@c& (0+255),w,b
 18913  010D6A  B4D8               	btfsc	status,2,c
 18914  010D6C  D01B               	goto	i2u1536_40
 18915                           
 18916                           ; BSR set to: 0
 18917                           ;doprnt.c: 1137: if(val < dpowers[c])
 18918                           
 18919                           ; BSR set to: 0
 18920                           
 18921                           ; BSR set to: 0
 18922  010D6E  5188               	movf	i2printf@c& (0+255),w,b
 18923  010D70  0D04               	mullw	4
 18924  010D72  0E11               	movlw	low _dpowers
 18925  010D74  24F3               	addwf	prodl,w,c
 18926  010D76  6EF6               	movwf	tblptrl,c
 18927  010D78  0EF4               	movlw	high _dpowers
 18928  010D7A  20F4               	addwfc	prodh,w,c
 18929  010D7C  6EF7               	movwf	tblptrh,c
 18930  010D7E                     	if	1	;There are 3 active tblptr bytes
 18931  010D7E  6AF8               	clrf	tblptru,c
 18932  010D80  0E00               	movlw	low (__mediumconst shr (0+16))
 18933  010D82  22F8               	addwfc	tblptru,f,c
 18934  010D84                     	endif
 18935  010D84  0009               	tblrd		*+
 18936  010D86  50F5               	movf	tablat,w,c
 18937  010D88  5D7F               	subwf	i2printf@val& (0+255),w,b
 18938  010D8A  0009               	tblrd		*+
 18939  010D8C  50F5               	movf	tablat,w,c
 18940  010D8E  5980               	subwfb	(i2printf@val+1)& (0+255),w,b
 18941  010D90  0009               	tblrd		*+
 18942  010D92  50F5               	movf	tablat,w,c
 18943  010D94  5981               	subwfb	(i2printf@val+2)& (0+255),w,b
 18944  010D96  0009               	tblrd		*+
 18945  010D98  50F5               	movf	tablat,w,c
 18946  010D9A  5982               	subwfb	(i2printf@val+3)& (0+255),w,b
 18947  010D9C  A0D8               	btfss	status,0,c
 18948  010D9E  D002               	goto	i2u1536_40
 18949                           
 18950                           ; BSR set to: 0
 18951                           
 18952                           ; BSR set to: 0
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;doprnt.c: 1138: break;
 18956  010DA0  2B88               	incf	i2printf@c& (0+255),f,b
 18957  010DA2  D7E1               	goto	i2l12063
 18958  010DA4                     i2u1536_40:
 18959                           
 18960                           ; BSR set to: 0
 18961                           ;doprnt.c: 1175: {
 18962                           ;doprnt.c: 1188: if(flag & 0x03)
 18963                           
 18964                           ; BSR set to: 0
 18965  010DA4  0E03               	movlw	3
 18966  010DA6  1577               	andwf	i2printf@flag& (0+255),w,b
 18967  010DA8  6F68               	movwf	??i2_printf& (0+255),b
 18968  010DAA  0E00               	movlw	0
 18969  010DAC  1578               	andwf	(i2printf@flag+1)& (0+255),w,b
 18970  010DAE  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18971  010DB0  5168               	movf	??i2_printf& (0+255),w,b
 18972  010DB2  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 18973  010DB4  B4D8               	btfsc	status,2,c
 18974  010DB6  D04D               	goto	i2l1110
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;doprnt.c: 1190: (putch('-') );
 18978  010DB8  0E2D               	movlw	45
 18979  010DBA  ECDF  F0AF         	call	i2_putch
 18980                           
 18981                           ;doprnt.c: 1195: }
 18982                           ;doprnt.c: 1196: while(c--) {
 18983  010DBE  D049               	goto	i2l1110
 18984  010DC0                     
 18985                           ;doprnt.c: 1200: {
 18986                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 18987  010DC0  C07F  F001         	movff	i2printf@val,i2___lldiv@dividend
 18988  010DC4  C080  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 18989  010DC8  C081  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 18990  010DCC  C082  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 18991  010DD0  0100               	movlb	0	; () banked
 18992  010DD2  5188               	movf	i2printf@c& (0+255),w,b
 18993  010DD4  0D04               	mullw	4
 18994  010DD6  0E11               	movlw	low _dpowers
 18995  010DD8  24F3               	addwf	prodl,w,c
 18996  010DDA  6EF6               	movwf	tblptrl,c
 18997  010DDC  0EF4               	movlw	high _dpowers
 18998  010DDE  20F4               	addwfc	prodh,w,c
 18999  010DE0  6EF7               	movwf	tblptrh,c
 19000  010DE2                     	if	1	;There are 3 active tblptr bytes
 19001  010DE2  6AF8               	clrf	tblptru,c
 19002  010DE4  0E00               	movlw	low (__mediumconst shr (0+16))
 19003  010DE6  22F8               	addwfc	tblptru,f,c
 19004  010DE8                     	endif
 19005  010DE8  0009               	tblrd		*+
 19006  010DEA  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19007  010DEE  0009               	tblrd		*+
 19008  010DF0  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19009  010DF4  0009               	tblrd		*+
 19010  010DF6  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19011  010DFA  000A               	tblrd		*-
 19012  010DFC  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19013  010E00  ECC3  F0A8         	call	i2___lldiv	;wreg free
 19014  010E04  C001  F07B         	movff	?i2___lldiv,i2printf@tmpval
 19015  010E08  C002  F07C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19016  010E0C  C003  F07D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19017  010E10  C004  F07E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19018                           
 19019                           ;doprnt.c: 1202: tmpval.vd %= 10;
 19020  010E14  C07B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19021  010E18  C07C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19022  010E1C  C07D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19023  010E20  C07E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19024  010E24  0E0A               	movlw	10
 19025  010E26  6E12               	movwf	i2___llmod@divisor,c
 19026  010E28  0E00               	movlw	0
 19027  010E2A  6E13               	movwf	i2___llmod@divisor+1,c
 19028  010E2C  0E00               	movlw	0
 19029  010E2E  6E14               	movwf	i2___llmod@divisor+2,c
 19030  010E30  0E00               	movlw	0
 19031  010E32  6E15               	movwf	i2___llmod@divisor+3,c
 19032  010E34  ECC1  F0AA         	call	i2___llmod	;wreg free
 19033  010E38  C00E  F07B         	movff	?i2___llmod,i2printf@tmpval
 19034  010E3C  C00F  F07C         	movff	?i2___llmod+1,i2printf@tmpval+1
 19035  010E40  C010  F07D         	movff	?i2___llmod+2,i2printf@tmpval+2
 19036  010E44  C011  F07E         	movff	?i2___llmod+3,i2printf@tmpval+3
 19037                           
 19038                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 19039  010E48  0100               	movlb	0	; () banked
 19040  010E4A  517B               	movf	i2printf@tmpval& (0+255),w,b
 19041  010E4C  0F30               	addlw	48
 19042  010E4E  ECDF  F0AF         	call	i2_putch
 19043  010E52                     i2l1110:
 19044  010E52  0100               	movlb	0	; () banked
 19045  010E54  0788               	decf	i2printf@c& (0+255),f,b
 19046  010E56  2988               	incf	i2printf@c& (0+255),w,b
 19047  010E58  B4D8               	btfsc	status,2,c
 19048  010E5A  D008               	goto	i2l1113
 19049  010E5C  D7B1               	goto	i2l1111
 19050  010E5E                     i2l12087:
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;doprnt.c: 1208: (putch('0') );
 19054  010E5E  0E30               	movlw	48
 19055  010E60  ECDF  F0AF         	call	i2_putch
 19056                           
 19057                           ;doprnt.c: 1209: exp--;
 19058  010E64  0100               	movlb	0	; () banked
 19059  010E66  0779               	decf	i2printf@exp& (0+255),f,b
 19060  010E68  A0D8               	btfss	status,0,c
 19061  010E6A  077A               	decf	(i2printf@exp+1)& (0+255),f,b
 19062  010E6C                     i2l1113:
 19063                           
 19064                           ; BSR set to: 0
 19065                           
 19066                           ; BSR set to: 0
 19067  010E6C  BF7A               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19068  010E6E  D005               	goto	i2u1539_40
 19069  010E70  517A               	movf	(i2printf@exp+1)& (0+255),w,b
 19070  010E72  E1F5               	bnz	i2l12087
 19071  010E74  0579               	decf	i2printf@exp& (0+255),w,b
 19072  010E76  B0D8               	btfsc	status,0,c
 19073  010E78  D7F2               	goto	i2l1114
 19074  010E7A                     i2u1539_40:
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;doprnt.c: 1210: }
 19078                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 19079                           
 19080                           ; BSR set to: 0
 19081  010E7A  BF87               	btfsc	(i2printf@prec+1)& (0+255),7,b
 19082  010E7C  D009               	goto	i2l1116
 19083  010E7E  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 19084  010E80  E104               	bnz	i2u1540_40
 19085  010E82  0E09               	movlw	9
 19086  010E84  5D86               	subwf	i2printf@prec& (0+255),w,b
 19087  010E86  A0D8               	btfss	status,0,c
 19088  010E88  D003               	goto	i2l1116
 19089  010E8A                     i2u1540_40:
 19090                           
 19091                           ; BSR set to: 0
 19092                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 19093  010E8A  0E08               	movlw	8
 19094  010E8C  6F88               	movwf	i2printf@c& (0+255),b
 19095  010E8E  D002               	goto	i2l1117
 19096  010E90                     i2l1116:
 19097                           
 19098                           ; BSR set to: 0
 19099                           ;doprnt.c: 1213: else
 19100                           ;doprnt.c: 1214: c = prec;
 19101  010E90  C086  F088         	movff	i2printf@prec,i2printf@c
 19102  010E94                     i2l1117:
 19103                           
 19104                           ; BSR set to: 0
 19105                           ;doprnt.c: 1215: prec -= c;
 19106                           
 19107                           ; BSR set to: 0
 19108  010E94  5188               	movf	i2printf@c& (0+255),w,b
 19109  010E96  5F86               	subwf	i2printf@prec& (0+255),f,b
 19110  010E98  0E00               	movlw	0
 19111  010E9A  BF88               	btfsc	i2printf@c& (0+255),7,b
 19112  010E9C  0EFF               	movlw	255
 19113  010E9E  5B87               	subwfb	(i2printf@prec+1)& (0+255),f,b
 19114                           
 19115                           ; BSR set to: 0
 19116                           ;doprnt.c: 1219: if(c)
 19117  010EA0  5188               	movf	i2printf@c& (0+255),w,b
 19118  010EA2  B4D8               	btfsc	status,2,c
 19119  010EA4  D003               	goto	i2l1118
 19120                           
 19121                           ; BSR set to: 0
 19122                           ;doprnt.c: 1221: (putch('.') );
 19123  010EA6  0E2E               	movlw	46
 19124  010EA8  ECDF  F0AF         	call	i2_putch
 19125  010EAC                     i2l1118:
 19126                           
 19127                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 19128  010EAC  0100               	movlb	0	; () banked
 19129  010EAE  5188               	movf	i2printf@c& (0+255),w,b
 19130  010EB0  EC18  F08F         	call	i2_scale
 19131  010EB4  C036  F06E         	movff	?i2_scale,i2_printf$3325
 19132  010EB8  C037  F06F         	movff	?i2_scale+1,i2_printf$3325+1
 19133  010EBC  C038  F070         	movff	?i2_scale+2,i2_printf$3325+2
 19134                           
 19135                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 19136  010EC0  C083  F02A         	movff	i2printf@fval,i2___ftmul@f2
 19137  010EC4  C084  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 19138  010EC8  C085  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 19139  010ECC  C06E  F027         	movff	i2_printf$3325,i2___ftmul@f1
 19140  010ED0  C06F  F028         	movff	i2_printf$3325+1,i2___ftmul@f1+1
 19141  010ED4  C070  F029         	movff	i2_printf$3325+2,i2___ftmul@f1+2
 19142  010ED8  EC79  F0A2         	call	i2___ftmul	;wreg free
 19143  010EDC  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 19144  010EE0  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 19145  010EE4  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 19146  010EE8  ECFF  F0A1         	call	i2___fttol	;wreg free
 19147  010EEC  C03D  F07F         	movff	?i2___fttol,i2printf@val
 19148  010EF0  C03E  F080         	movff	?i2___fttol+1,i2printf@val+1
 19149  010EF4  C03F  F081         	movff	?i2___fttol+2,i2printf@val+2
 19150  010EF8  C040  F082         	movff	?i2___fttol+3,i2printf@val+3
 19151                           
 19152                           ;doprnt.c: 1228: while(c--) {
 19153  010EFC  D073               	goto	i2l1119
 19154  010EFE                     
 19155                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 19156  010EFE  C07F  F001         	movff	i2printf@val,i2___lldiv@dividend
 19157  010F02  C080  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19158  010F06  C081  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19159  010F0A  C082  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19160  010F0E  0100               	movlb	0	; () banked
 19161  010F10  5188               	movf	i2printf@c& (0+255),w,b
 19162  010F12  0D04               	mullw	4
 19163  010F14  0E11               	movlw	low _dpowers
 19164  010F16  24F3               	addwf	prodl,w,c
 19165  010F18  6EF6               	movwf	tblptrl,c
 19166  010F1A  0EF4               	movlw	high _dpowers
 19167  010F1C  20F4               	addwfc	prodh,w,c
 19168  010F1E  6EF7               	movwf	tblptrh,c
 19169  010F20                     	if	1	;There are 3 active tblptr bytes
 19170  010F20  6AF8               	clrf	tblptru,c
 19171  010F22  0E00               	movlw	low (__mediumconst shr (0+16))
 19172  010F24  22F8               	addwfc	tblptru,f,c
 19173  010F26                     	endif
 19174  010F26  0009               	tblrd		*+
 19175  010F28  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19176  010F2C  0009               	tblrd		*+
 19177  010F2E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19178  010F32  0009               	tblrd		*+
 19179  010F34  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19180  010F38  000A               	tblrd		*-
 19181  010F3A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19182  010F3E  ECC3  F0A8         	call	i2___lldiv	;wreg free
 19183  010F42  C001  F07B         	movff	?i2___lldiv,i2printf@tmpval
 19184  010F46  C002  F07C         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19185  010F4A  C003  F07D         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19186  010F4E  C004  F07E         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19187                           
 19188                           ;doprnt.c: 1230: tmpval.vd %= 10;
 19189  010F52  C07B  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19190  010F56  C07C  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19191  010F5A  C07D  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19192  010F5E  C07E  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19193  010F62  0E0A               	movlw	10
 19194  010F64  6E12               	movwf	i2___llmod@divisor,c
 19195  010F66  0E00               	movlw	0
 19196  010F68  6E13               	movwf	i2___llmod@divisor+1,c
 19197  010F6A  0E00               	movlw	0
 19198  010F6C  6E14               	movwf	i2___llmod@divisor+2,c
 19199  010F6E  0E00               	movlw	0
 19200  010F70  6E15               	movwf	i2___llmod@divisor+3,c
 19201  010F72  ECC1  F0AA         	call	i2___llmod	;wreg free
 19202  010F76  C00E  F07B         	movff	?i2___llmod,i2printf@tmpval
 19203  010F7A  C00F  F07C         	movff	?i2___llmod+1,i2printf@tmpval+1
 19204  010F7E  C010  F07D         	movff	?i2___llmod+2,i2printf@tmpval+2
 19205  010F82  C011  F07E         	movff	?i2___llmod+3,i2printf@tmpval+3
 19206                           
 19207                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 19208  010F86  0100               	movlb	0	; () banked
 19209  010F88  517B               	movf	i2printf@tmpval& (0+255),w,b
 19210  010F8A  0F30               	addlw	48
 19211  010F8C  ECDF  F0AF         	call	i2_putch
 19212                           
 19213                           ;doprnt.c: 1232: val %= dpowers[c];
 19214  010F90  C07F  F00E         	movff	i2printf@val,i2___llmod@dividend
 19215  010F94  C080  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 19216  010F98  C081  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 19217  010F9C  C082  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 19218  010FA0  0100               	movlb	0	; () banked
 19219  010FA2  5188               	movf	i2printf@c& (0+255),w,b
 19220  010FA4  0D04               	mullw	4
 19221  010FA6  0E11               	movlw	low _dpowers
 19222  010FA8  24F3               	addwf	prodl,w,c
 19223  010FAA  6EF6               	movwf	tblptrl,c
 19224  010FAC  0EF4               	movlw	high _dpowers
 19225  010FAE  20F4               	addwfc	prodh,w,c
 19226  010FB0  6EF7               	movwf	tblptrh,c
 19227  010FB2                     	if	1	;There are 3 active tblptr bytes
 19228  010FB2  6AF8               	clrf	tblptru,c
 19229  010FB4  0E00               	movlw	low (__mediumconst shr (0+16))
 19230  010FB6  22F8               	addwfc	tblptru,f,c
 19231  010FB8                     	endif
 19232  010FB8  0009               	tblrd		*+
 19233  010FBA  CFF5 F012          	movff	tablat,i2___llmod@divisor
 19234  010FBE  0009               	tblrd		*+
 19235  010FC0  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 19236  010FC4  0009               	tblrd		*+
 19237  010FC6  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 19238  010FCA  000A               	tblrd		*-
 19239  010FCC  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 19240  010FD0  ECC1  F0AA         	call	i2___llmod	;wreg free
 19241  010FD4  C00E  F07F         	movff	?i2___llmod,i2printf@val
 19242  010FD8  C00F  F080         	movff	?i2___llmod+1,i2printf@val+1
 19243  010FDC  C010  F081         	movff	?i2___llmod+2,i2printf@val+2
 19244  010FE0  C011  F082         	movff	?i2___llmod+3,i2printf@val+3
 19245  010FE4                     i2l1119:
 19246  010FE4  0100               	movlb	0	; () banked
 19247  010FE6  0788               	decf	i2printf@c& (0+255),f,b
 19248  010FE8  2988               	incf	i2printf@c& (0+255),w,b
 19249  010FEA  B4D8               	btfsc	status,2,c
 19250  010FEC  D008               	goto	i2l1122
 19251  010FEE  D787               	goto	i2l1120
 19252  010FF0                     
 19253                           ; BSR set to: 0
 19254                           ;doprnt.c: 1236: (putch('0') );
 19255                           
 19256                           ; BSR set to: 0
 19257  010FF0  0E30               	movlw	48
 19258  010FF2  ECDF  F0AF         	call	i2_putch
 19259                           
 19260                           ;doprnt.c: 1237: prec--;
 19261  010FF6  0100               	movlb	0	; () banked
 19262  010FF8  0786               	decf	i2printf@prec& (0+255),f,b
 19263  010FFA  A0D8               	btfss	status,0,c
 19264  010FFC  0787               	decf	(i2printf@prec+1)& (0+255),f,b
 19265  010FFE                     i2l1122:
 19266                           
 19267                           ; BSR set to: 0
 19268                           
 19269                           ; BSR set to: 0
 19270  010FFE  5186               	movf	i2printf@prec& (0+255),w,b
 19271  011000  1187               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19272  011002  B4D8               	btfsc	status,2,c
 19273  011004  D0C3               	goto	i2u1553_40
 19274  011006  D7F4               	goto	i2l1123
 19275  011008                     i2l1087:
 19276                           
 19277                           ; BSR set to: 0
 19278                           ;doprnt.c: 1246: }
 19279                           ;doprnt.c: 1253: {
 19280                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 19281                           
 19282                           ; BSR set to: 0
 19283  011008  C075  FFD9         	movff	i2printf@ap,fsr2l
 19284  01100C  C076  FFDA         	movff	i2printf@ap+1,fsr2h
 19285  011010  CFDE F07F          	movff	postinc2,i2printf@val
 19286  011014  CFDD F080          	movff	postdec2,i2printf@val+1
 19287  011018  0E00               	movlw	0
 19288  01101A  BF80               	btfsc	(i2printf@val+1)& (0+255),7,b
 19289  01101C  0EFF               	movlw	-1
 19290  01101E  6F81               	movwf	(i2printf@val+2)& (0+255),b
 19291  011020  6F82               	movwf	(i2printf@val+3)& (0+255),b
 19292                           
 19293                           ; BSR set to: 0
 19294  011022  0E02               	movlw	2
 19295  011024  2775               	addwf	i2printf@ap& (0+255),f,b
 19296  011026  0E00               	movlw	0
 19297  011028  2376               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19298                           
 19299                           ; BSR set to: 0
 19300                           ;doprnt.c: 1261: if((long)val < 0) {
 19301  01102A  AF82               	btfss	(i2printf@val+3)& (0+255),7,b
 19302  01102C  D00A               	goto	i2l1125
 19303                           
 19304                           ; BSR set to: 0
 19305                           ;doprnt.c: 1262: flag |= 0x03;
 19306  01102E  0E03               	movlw	3
 19307  011030  1377               	iorwf	i2printf@flag& (0+255),f,b
 19308                           
 19309                           ; BSR set to: 0
 19310                           ;doprnt.c: 1263: val = -val;
 19311  011032  1F82               	comf	(i2printf@val+3)& (0+255),f,b
 19312  011034  1F81               	comf	(i2printf@val+2)& (0+255),f,b
 19313  011036  1F80               	comf	(i2printf@val+1)& (0+255),f,b
 19314  011038  6D7F               	negf	i2printf@val& (0+255),b
 19315  01103A  0E00               	movlw	0
 19316  01103C  2380               	addwfc	(i2printf@val+1)& (0+255),f,b
 19317  01103E  2381               	addwfc	(i2printf@val+2)& (0+255),f,b
 19318  011040  2382               	addwfc	(i2printf@val+3)& (0+255),f,b
 19319  011042                     i2l1125:
 19320                           
 19321                           ; BSR set to: 0
 19322                           ;doprnt.c: 1264: }
 19323                           ;doprnt.c: 1266: }
 19324                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 19325                           
 19326                           ; BSR set to: 0
 19327  011042  5186               	movf	i2printf@prec& (0+255),w,b
 19328  011044  1187               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19329  011046  A4D8               	btfss	status,2,c
 19330  011048  D008               	goto	i2l1126
 19331                           
 19332                           ; BSR set to: 0
 19333  01104A  517F               	movf	i2printf@val& (0+255),w,b
 19334  01104C  1180               	iorwf	(i2printf@val+1)& (0+255),w,b
 19335  01104E  1181               	iorwf	(i2printf@val+2)& (0+255),w,b
 19336  011050  1182               	iorwf	(i2printf@val+3)& (0+255),w,b
 19337  011052  A4D8               	btfss	status,2,c
 19338  011054  D002               	goto	i2l1126
 19339                           
 19340                           ; BSR set to: 0
 19341                           ;doprnt.c: 1291: prec++;
 19342  011056  4B86               	infsnz	i2printf@prec& (0+255),f,b
 19343  011058  2B87               	incf	(i2printf@prec+1)& (0+255),f,b
 19344  01105A                     i2l1126:
 19345                           
 19346                           ; BSR set to: 0
 19347                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 19348                           
 19349                           ; BSR set to: 0
 19350  01105A  0E01               	movlw	1
 19351  01105C  6F88               	movwf	i2printf@c& (0+255),b
 19352  01105E                     i2l12141:
 19353                           
 19354                           ; BSR set to: 0
 19355  01105E  0E0A               	movlw	10
 19356  011060  1988               	xorwf	i2printf@c& (0+255),w,b
 19357  011062  B4D8               	btfsc	status,2,c
 19358  011064  D01B               	goto	i2u1549_40
 19359                           
 19360                           ; BSR set to: 0
 19361                           ;doprnt.c: 1306: if(val < dpowers[c])
 19362                           
 19363                           ; BSR set to: 0
 19364                           
 19365                           ; BSR set to: 0
 19366  011066  5188               	movf	i2printf@c& (0+255),w,b
 19367  011068  0D04               	mullw	4
 19368  01106A  0E11               	movlw	low _dpowers
 19369  01106C  24F3               	addwf	prodl,w,c
 19370  01106E  6EF6               	movwf	tblptrl,c
 19371  011070  0EF4               	movlw	high _dpowers
 19372  011072  20F4               	addwfc	prodh,w,c
 19373  011074  6EF7               	movwf	tblptrh,c
 19374  011076                     	if	1	;There are 3 active tblptr bytes
 19375  011076  6AF8               	clrf	tblptru,c
 19376  011078  0E00               	movlw	low (__mediumconst shr (0+16))
 19377  01107A  22F8               	addwfc	tblptru,f,c
 19378  01107C                     	endif
 19379  01107C  0009               	tblrd		*+
 19380  01107E  50F5               	movf	tablat,w,c
 19381  011080  5D7F               	subwf	i2printf@val& (0+255),w,b
 19382  011082  0009               	tblrd		*+
 19383  011084  50F5               	movf	tablat,w,c
 19384  011086  5980               	subwfb	(i2printf@val+1)& (0+255),w,b
 19385  011088  0009               	tblrd		*+
 19386  01108A  50F5               	movf	tablat,w,c
 19387  01108C  5981               	subwfb	(i2printf@val+2)& (0+255),w,b
 19388  01108E  0009               	tblrd		*+
 19389  011090  50F5               	movf	tablat,w,c
 19390  011092  5982               	subwfb	(i2printf@val+3)& (0+255),w,b
 19391  011094  A0D8               	btfss	status,0,c
 19392  011096  D002               	goto	i2u1549_40
 19393                           
 19394                           ; BSR set to: 0
 19395                           
 19396                           ; BSR set to: 0
 19397                           
 19398                           ; BSR set to: 0
 19399                           ;doprnt.c: 1307: break;
 19400  011098  2B88               	incf	i2printf@c& (0+255),f,b
 19401  01109A  D7E1               	goto	i2l12141
 19402  01109C                     i2u1549_40:
 19403                           
 19404                           ; BSR set to: 0
 19405                           ;doprnt.c: 1339: if(c < prec)
 19406                           
 19407                           ; BSR set to: 0
 19408  01109C  0E80               	movlw	128
 19409  01109E  BF88               	btfsc	i2printf@c& (0+255),7,b
 19410  0110A0  0E7F               	movlw	127
 19411  0110A2  6F68               	movwf	??i2_printf& (0+255),b
 19412  0110A4  5186               	movf	i2printf@prec& (0+255),w,b
 19413  0110A6  5D88               	subwf	i2printf@c& (0+255),w,b
 19414  0110A8  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 19415  0110AA  0A80               	xorlw	128
 19416  0110AC  5968               	subwfb	??i2_printf& (0+255),w,b
 19417  0110AE  B0D8               	btfsc	status,0,c
 19418  0110B0  D003               	goto	i2l1130
 19419                           
 19420                           ; BSR set to: 0
 19421                           ;doprnt.c: 1340: c = prec;
 19422  0110B2  C086  F088         	movff	i2printf@prec,i2printf@c
 19423  0110B6  D010               	goto	i2l1132
 19424  0110B8                     i2l1130:
 19425                           
 19426                           ; BSR set to: 0
 19427                           ;doprnt.c: 1341: else if(prec < c)
 19428                           
 19429                           ; BSR set to: 0
 19430  0110B8  5187               	movf	(i2printf@prec+1)& (0+255),w,b
 19431  0110BA  0A80               	xorlw	128
 19432  0110BC  6F68               	movwf	??i2_printf& (0+255),b
 19433  0110BE  5188               	movf	i2printf@c& (0+255),w,b
 19434  0110C0  5D86               	subwf	i2printf@prec& (0+255),w,b
 19435  0110C2  0E80               	movlw	128
 19436  0110C4  BF88               	btfsc	i2printf@c& (0+255),7,b
 19437  0110C6  0E7F               	movlw	127
 19438  0110C8  5968               	subwfb	??i2_printf& (0+255),w,b
 19439  0110CA  B0D8               	btfsc	status,0,c
 19440  0110CC  D005               	goto	i2l1132
 19441                           
 19442                           ; BSR set to: 0
 19443                           ;doprnt.c: 1342: prec = c;
 19444  0110CE  5188               	movf	i2printf@c& (0+255),w,b
 19445  0110D0  6F86               	movwf	i2printf@prec& (0+255),b
 19446  0110D2  6B87               	clrf	(i2printf@prec+1)& (0+255),b
 19447  0110D4  BF86               	btfsc	i2printf@prec& (0+255),7,b
 19448  0110D6  0787               	decf	(i2printf@prec+1)& (0+255),f,b
 19449  0110D8                     i2l1132:
 19450                           
 19451                           ; BSR set to: 0
 19452                           ;doprnt.c: 1422: {
 19453                           ;doprnt.c: 1438: if(flag & 0x03)
 19454                           
 19455                           ; BSR set to: 0
 19456                           
 19457                           ; BSR set to: 0
 19458  0110D8  0E03               	movlw	3
 19459  0110DA  1577               	andwf	i2printf@flag& (0+255),w,b
 19460  0110DC  6F68               	movwf	??i2_printf& (0+255),b
 19461  0110DE  0E00               	movlw	0
 19462  0110E0  1578               	andwf	(i2printf@flag+1)& (0+255),w,b
 19463  0110E2  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19464  0110E4  5168               	movf	??i2_printf& (0+255),w,b
 19465  0110E6  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19466  0110E8  B4D8               	btfsc	status,2,c
 19467  0110EA  D047               	goto	i2l1134
 19468                           
 19469                           ; BSR set to: 0
 19470                           ;doprnt.c: 1439: (putch('-') );
 19471  0110EC  0E2D               	movlw	45
 19472  0110EE  ECDF  F0AF         	call	i2_putch
 19473                           
 19474                           ;doprnt.c: 1469: }
 19475                           ;doprnt.c: 1474: while(prec--) {
 19476  0110F2  D043               	goto	i2l1134
 19477  0110F4                     i2l12165:
 19478                           
 19479                           ;doprnt.c: 1478: {
 19480                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 19481  0110F4  C086  F068         	movff	i2printf@prec,??i2_printf
 19482  0110F8  C087  F069         	movff	i2printf@prec+1,??i2_printf+1
 19483  0110FC  0100               	movlb	0	; () banked
 19484  0110FE  90D8               	bcf	status,0,c
 19485  011100  3768               	rlcf	??i2_printf& (0+255),f,b
 19486  011102  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 19487  011104  90D8               	bcf	status,0,c
 19488  011106  3768               	rlcf	??i2_printf& (0+255),f,b
 19489  011108  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 19490  01110A  0E11               	movlw	low _dpowers
 19491  01110C  2568               	addwf	??i2_printf& (0+255),w,b
 19492  01110E  6EF6               	movwf	tblptrl,c
 19493  011110  0EF4               	movlw	high _dpowers
 19494  011112  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 19495  011114  6EF7               	movwf	tblptrh,c
 19496  011116                     	if	1	;There are 3 active tblptr bytes
 19497  011116  6AF8               	clrf	tblptru,c
 19498  011118  0E00               	movlw	low (__mediumconst shr (0+16))
 19499  01111A  22F8               	addwfc	tblptru,f,c
 19500  01111C                     	endif
 19501  01111C  0009               	tblrd		*+
 19502  01111E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19503  011122  0009               	tblrd		*+
 19504  011124  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19505  011128  0009               	tblrd		*+
 19506  01112A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19507  01112E  000A               	tblrd		*-
 19508  011130  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19509  011134  C07F  F001         	movff	i2printf@val,i2___lldiv@dividend
 19510  011138  C080  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19511  01113C  C081  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19512  011140  C082  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19513  011144  ECC3  F0A8         	call	i2___lldiv	;wreg free
 19514  011148  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 19515  01114C  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 19516  011150  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 19517  011154  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 19518  011158  0E0A               	movlw	10
 19519  01115A  6E12               	movwf	i2___llmod@divisor,c
 19520  01115C  0E00               	movlw	0
 19521  01115E  6E13               	movwf	i2___llmod@divisor+1,c
 19522  011160  0E00               	movlw	0
 19523  011162  6E14               	movwf	i2___llmod@divisor+2,c
 19524  011164  0E00               	movlw	0
 19525  011166  6E15               	movwf	i2___llmod@divisor+3,c
 19526  011168  ECC1  F0AA         	call	i2___llmod	;wreg free
 19527  01116C  500E               	movf	?i2___llmod,w,c
 19528  01116E  0F30               	addlw	48
 19529  011170  0100               	movlb	0	; () banked
 19530  011172  6F88               	movwf	i2printf@c& (0+255),b
 19531                           
 19532                           ; BSR set to: 0
 19533                           ;doprnt.c: 1523: }
 19534                           ;doprnt.c: 1524: (putch(c) );
 19535  011174  5188               	movf	i2printf@c& (0+255),w,b
 19536  011176  ECDF  F0AF         	call	i2_putch
 19537  01117A                     i2l1134:
 19538  01117A  0100               	movlb	0	; () banked
 19539  01117C  0786               	decf	i2printf@prec& (0+255),f,b
 19540  01117E  A0D8               	btfss	status,0,c
 19541  011180  0787               	decf	(i2printf@prec+1)& (0+255),f,b
 19542  011182  2986               	incf	i2printf@prec& (0+255),w,b
 19543  011184  E1B7               	bnz	i2l12165
 19544  011186  2987               	incf	(i2printf@prec+1)& (0+255),w,b
 19545  011188  A4D8               	btfss	status,2,c
 19546  01118A  D7B4               	goto	i2l1135
 19547  01118C                     i2u1553_40:
 19548                           
 19549                           ; BSR set to: 0
 19550                           
 19551                           ; BSR set to: 0
 19552  01118C  0100               	movlb	0	; () banked
 19553  01118E  5166               	movf	i2printf@f& (0+255),w,b
 19554  011190  6F68               	movwf	??i2_printf& (0+255),b
 19555  011192  5167               	movf	(i2printf@f+1)& (0+255),w,b
 19556  011194  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19557  011196  4B66               	infsnz	i2printf@f& (0+255),f,b
 19558  011198  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 19559  01119A  C068  FFF6         	movff	??i2_printf,tblptrl
 19560  01119E  C069  FFF7         	movff	??i2_printf+1,tblptrh
 19561  0111A2  0E00               	movlw	low (__mediumconst shr (0+16))
 19562  0111A4  6EF8               	movwf	tblptru,c
 19563  0111A6  0E0D               	movlw	(high __ramtop+-1)
 19564  0111A8  64F7               	cpfsgt	tblptrh,c
 19565  0111AA  D003               	bra	i2u1554_47
 19566  0111AC  0008               	tblrd		*
 19567  0111AE  50F5               	movf	tablat,w,c
 19568  0111B0  D005               	bra	i2u1554_40
 19569  0111B2                     i2u1554_47:
 19570  0111B2  CFF6 FFE1          	movff	tblptrl,fsr1l
 19571  0111B6  CFF7 FFE2          	movff	tblptrh,fsr1h
 19572  0111BA  50E7               	movf	indf1,w,c
 19573  0111BC                     i2u1554_40:
 19574  0111BC  0100               	movlb	0	; () banked
 19575  0111BE  6F88               	movwf	i2printf@c& (0+255),b
 19576  0111C0  5188               	movf	i2printf@c& (0+255),w,b
 19577  0111C2  B4D8               	btfsc	status,2,c
 19578  0111C4  0012               	return	
 19579  0111C6  EF7B  F084         	goto	i2l1067
 19580  0111CA                     __end_ofi2_printf:
 19581                           	opt stack 0
 19582                           tosu	equ	0xFFF
 19583                           tosh	equ	0xFFE
 19584                           tosl	equ	0xFFD
 19585                           pclatu	equ	0xFFB
 19586                           pclath	equ	0xFFA
 19587                           tblptru	equ	0xFF8
 19588                           tblptrh	equ	0xFF7
 19589                           tblptrl	equ	0xFF6
 19590                           tablat	equ	0xFF5
 19591                           prodh	equ	0xFF4
 19592                           prodl	equ	0xFF3
 19593                           intcon	equ	0xFF2
 19594                           postinc0	equ	0xFEE
 19595                           fsr0h	equ	0xFEA
 19596                           fsr0l	equ	0xFE9
 19597                           wreg	equ	0xFE8
 19598                           indf1	equ	0xFE7
 19599                           postdec1	equ	0xFE5
 19600                           fsr1h	equ	0xFE2
 19601                           fsr1l	equ	0xFE1
 19602                           bsr	equ	0xFE0
 19603                           indf2	equ	0xFDF
 19604                           postinc2	equ	0xFDE
 19605                           postdec2	equ	0xFDD
 19606                           fsr2h	equ	0xFDA
 19607                           fsr2l	equ	0xFD9
 19608                           status	equ	0xFD8
 19609                           
 19610 ;; *************** function i2_scale *****************
 19611 ;; Defined at:
 19612 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 19613 ;; Parameters:    Size  Location     Type
 19614 ;;  scl             1    wreg     char 
 19615 ;; Auto vars:     Size  Location     Type
 19616 ;;  scl             1   59[COMRAM] char 
 19617 ;; Return value:  Size  Location     Type
 19618 ;;                  3   53[COMRAM] char 
 19619 ;; Registers used:
 19620 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19621 ;; Tracked objects:
 19622 ;;		On entry : 0/0
 19623 ;;		On exit  : 0/0
 19624 ;;		Unchanged: 0/0
 19625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19626 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19627 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19629 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19630 ;;Total ram usage:        7 bytes
 19631 ;; Hardware stack levels used:    1
 19632 ;; Hardware stack levels required when called:    2
 19633 ;; This function calls:
 19634 ;;		i2___awdiv
 19635 ;;		i2___awmod
 19636 ;;		i2___ftmul
 19637 ;;		i2___wmul
 19638 ;; This function is called by:
 19639 ;;		i2_printf
 19640 ;; This function uses a non-reentrant model
 19641 ;;
 19642                           
 19643                           	psect	text74
 19644  011E30                     __ptext74:
 19645                           	opt stack 0
 19646  011E30                     i2_scale:
 19647                           	opt stack 13
 19648                           
 19649                           ; BSR set to: 0
 19650                           ;incstack = 0
 19651                           ;i2scale@scl stored from wreg
 19652  011E30  6E3C               	movwf	i2scale@scl,c
 19653                           
 19654                           ;doprnt.c: 428: if(scl < 0) {
 19655  011E32  AE3C               	btfss	i2scale@scl,7,c
 19656  011E34  D113               	goto	i2l1056
 19657                           
 19658                           ;doprnt.c: 429: scl = -scl;
 19659  011E36  6C3C               	negf	i2scale@scl,c
 19660                           
 19661                           ;doprnt.c: 430: if(scl>=110)
 19662  011E38  503C               	movf	i2scale@scl,w,c
 19663  011E3A  0A80               	xorlw	128
 19664  011E3C  0F12               	addlw	-238
 19665  011E3E  A0D8               	btfss	status,0,c
 19666  011E40  D09A               	goto	i2l1057
 19667                           
 19668                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 19669  011E42  0E00               	movlw	0
 19670  011E44  6E12               	movwf	i2___wmul@multiplicand+1,c
 19671  011E46  0E03               	movlw	3
 19672  011E48  6E11               	movwf	i2___wmul@multiplicand,c
 19673  011E4A  0E00               	movlw	0
 19674  011E4C  6E0A               	movwf	i2___awdiv@divisor+1,c
 19675  011E4E  0E0A               	movlw	10
 19676  011E50  6E09               	movwf	i2___awdiv@divisor,c
 19677  011E52  0E00               	movlw	0
 19678  011E54  6E04               	movwf	i2___awmod@divisor+1,c
 19679  011E56  0E64               	movlw	100
 19680  011E58  6E03               	movwf	i2___awmod@divisor,c
 19681  011E5A  503C               	movf	i2scale@scl,w,c
 19682  011E5C  6E01               	movwf	i2___awmod@dividend,c
 19683  011E5E  6A02               	clrf	i2___awmod@dividend+1,c
 19684  011E60  BE01               	btfsc	i2___awmod@dividend,7,c
 19685  011E62  0602               	decf	i2___awmod@dividend+1,f,c
 19686  011E64  ECEE  F0A9         	call	i2___awmod	;wreg free
 19687  011E68  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 19688  011E6C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 19689  011E70  EC81  F0A8         	call	i2___awdiv	;wreg free
 19690  011E74  0E09               	movlw	9
 19691  011E76  2407               	addwf	?i2___awdiv,w,c
 19692  011E78  6E0F               	movwf	i2___wmul@multiplier,c
 19693  011E7A  0E00               	movlw	0
 19694  011E7C  2008               	addwfc	?i2___awdiv+1,w,c
 19695  011E7E  6E10               	movwf	i2___wmul@multiplier+1,c
 19696  011E80  ECEC  F0AE         	call	i2___wmul	;wreg free
 19697  011E84  0E60               	movlw	low __npowers_
 19698  011E86  240F               	addwf	?i2___wmul,w,c
 19699  011E88  6EF6               	movwf	tblptrl,c
 19700  011E8A  0EF4               	movlw	high __npowers_
 19701  011E8C  2010               	addwfc	?i2___wmul+1,w,c
 19702  011E8E  6EF7               	movwf	tblptrh,c
 19703  011E90                     	if	1	;There are 3 active tblptr bytes
 19704  011E90  6AF8               	clrf	tblptru,c
 19705  011E92  0E00               	movlw	low (__mediumconst shr (0+16))
 19706  011E94  22F8               	addwfc	tblptru,f,c
 19707  011E96                     	endif
 19708  011E96  0009               	tblrd		*+
 19709  011E98  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19710  011E9C  0009               	tblrd		*+
 19711  011E9E  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19712  011EA2  000A               	tblrd		*-
 19713  011EA4  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19714  011EA8  0E00               	movlw	0
 19715  011EAA  6E0A               	movwf	i2___awdiv@divisor+1,c
 19716  011EAC  0E64               	movlw	100
 19717  011EAE  6E09               	movwf	i2___awdiv@divisor,c
 19718  011EB0  503C               	movf	i2scale@scl,w,c
 19719  011EB2  6E07               	movwf	i2___awdiv@dividend,c
 19720  011EB4  6A08               	clrf	i2___awdiv@dividend+1,c
 19721  011EB6  BE07               	btfsc	i2___awdiv@dividend,7,c
 19722  011EB8  0608               	decf	i2___awdiv@dividend+1,f,c
 19723  011EBA  EC81  F0A8         	call	i2___awdiv	;wreg free
 19724  011EBE  0E12               	movlw	18
 19725  011EC0  2407               	addwf	?i2___awdiv,w,c
 19726  011EC2  6E0F               	movwf	i2___wmul@multiplier,c
 19727  011EC4  0E00               	movlw	0
 19728  011EC6  2008               	addwfc	?i2___awdiv+1,w,c
 19729  011EC8  6E10               	movwf	i2___wmul@multiplier+1,c
 19730  011ECA  0E00               	movlw	0
 19731  011ECC  6E12               	movwf	i2___wmul@multiplicand+1,c
 19732  011ECE  0E03               	movlw	3
 19733  011ED0  6E11               	movwf	i2___wmul@multiplicand,c
 19734  011ED2  ECEC  F0AE         	call	i2___wmul	;wreg free
 19735  011ED6  0E60               	movlw	low __npowers_
 19736  011ED8  240F               	addwf	?i2___wmul,w,c
 19737  011EDA  6EF6               	movwf	tblptrl,c
 19738  011EDC  0EF4               	movlw	high __npowers_
 19739  011EDE  2010               	addwfc	?i2___wmul+1,w,c
 19740  011EE0  6EF7               	movwf	tblptrh,c
 19741  011EE2                     	if	1	;There are 3 active tblptr bytes
 19742  011EE2  6AF8               	clrf	tblptru,c
 19743  011EE4  0E00               	movlw	low (__mediumconst shr (0+16))
 19744  011EE6  22F8               	addwfc	tblptru,f,c
 19745  011EE8                     	endif
 19746  011EE8  0009               	tblrd		*+
 19747  011EEA  CFF5 F027          	movff	tablat,i2___ftmul@f1
 19748  011EEE  0009               	tblrd		*+
 19749  011EF0  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 19750  011EF4  000A               	tblrd		*-
 19751  011EF6  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 19752  011EFA  EC79  F0A2         	call	i2___ftmul	;wreg free
 19753  011EFE  C027  F039         	movff	?i2___ftmul,i2_scale$3324
 19754  011F02  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3324+1
 19755  011F06  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3324+2
 19756                           
 19757                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 19758  011F0A  C039  F027         	movff	i2_scale$3324,i2___ftmul@f1
 19759  011F0E  C03A  F028         	movff	i2_scale$3324+1,i2___ftmul@f1+1
 19760  011F12  C03B  F029         	movff	i2_scale$3324+2,i2___ftmul@f1+2
 19761  011F16  0E00               	movlw	0
 19762  011F18  6E12               	movwf	i2___wmul@multiplicand+1,c
 19763  011F1A  0E03               	movlw	3
 19764  011F1C  6E11               	movwf	i2___wmul@multiplicand,c
 19765  011F1E  0E00               	movlw	0
 19766  011F20  6E04               	movwf	i2___awmod@divisor+1,c
 19767  011F22  0E0A               	movlw	10
 19768  011F24  6E03               	movwf	i2___awmod@divisor,c
 19769  011F26  503C               	movf	i2scale@scl,w,c
 19770  011F28  6E01               	movwf	i2___awmod@dividend,c
 19771  011F2A  6A02               	clrf	i2___awmod@dividend+1,c
 19772  011F2C  BE01               	btfsc	i2___awmod@dividend,7,c
 19773  011F2E  0602               	decf	i2___awmod@dividend+1,f,c
 19774  011F30  ECEE  F0A9         	call	i2___awmod	;wreg free
 19775  011F34  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 19776  011F38  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 19777  011F3C  ECEC  F0AE         	call	i2___wmul	;wreg free
 19778  011F40  0E60               	movlw	low __npowers_
 19779  011F42  240F               	addwf	?i2___wmul,w,c
 19780  011F44  6EF6               	movwf	tblptrl,c
 19781  011F46  0EF4               	movlw	high __npowers_
 19782  011F48  2010               	addwfc	?i2___wmul+1,w,c
 19783  011F4A  6EF7               	movwf	tblptrh,c
 19784  011F4C                     	if	1	;There are 3 active tblptr bytes
 19785  011F4C  6AF8               	clrf	tblptru,c
 19786  011F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 19787  011F50  22F8               	addwfc	tblptru,f,c
 19788  011F52                     	endif
 19789  011F52  0009               	tblrd		*+
 19790  011F54  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19791  011F58  0009               	tblrd		*+
 19792  011F5A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19793  011F5E  000A               	tblrd		*-
 19794  011F60  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19795  011F64  EC79  F0A2         	call	i2___ftmul	;wreg free
 19796  011F68  C027  F036         	movff	?i2___ftmul,?i2_scale
 19797  011F6C  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 19798  011F70  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 19799  011F74  0012               	return	
 19800  011F76                     i2l1057:
 19801                           
 19802                           ;doprnt.c: 432: else if(scl > 10)
 19803  011F76  503C               	movf	i2scale@scl,w,c
 19804  011F78  0A80               	xorlw	128
 19805  011F7A  0F75               	addlw	-139
 19806  011F7C  A0D8               	btfss	status,0,c
 19807  011F7E  D059               	goto	i2l1060
 19808                           
 19809                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 19810  011F80  0E00               	movlw	0
 19811  011F82  6E0A               	movwf	i2___awdiv@divisor+1,c
 19812  011F84  0E0A               	movlw	10
 19813  011F86  6E09               	movwf	i2___awdiv@divisor,c
 19814  011F88  503C               	movf	i2scale@scl,w,c
 19815  011F8A  6E07               	movwf	i2___awdiv@dividend,c
 19816  011F8C  6A08               	clrf	i2___awdiv@dividend+1,c
 19817  011F8E  BE07               	btfsc	i2___awdiv@dividend,7,c
 19818  011F90  0608               	decf	i2___awdiv@dividend+1,f,c
 19819  011F92  EC81  F0A8         	call	i2___awdiv	;wreg free
 19820  011F96  0E09               	movlw	9
 19821  011F98  2407               	addwf	?i2___awdiv,w,c
 19822  011F9A  6E0F               	movwf	i2___wmul@multiplier,c
 19823  011F9C  0E00               	movlw	0
 19824  011F9E  2008               	addwfc	?i2___awdiv+1,w,c
 19825  011FA0  6E10               	movwf	i2___wmul@multiplier+1,c
 19826  011FA2  0E00               	movlw	0
 19827  011FA4  6E12               	movwf	i2___wmul@multiplicand+1,c
 19828  011FA6  0E03               	movlw	3
 19829  011FA8  6E11               	movwf	i2___wmul@multiplicand,c
 19830  011FAA  ECEC  F0AE         	call	i2___wmul	;wreg free
 19831  011FAE  0E60               	movlw	low __npowers_
 19832  011FB0  240F               	addwf	?i2___wmul,w,c
 19833  011FB2  6EF6               	movwf	tblptrl,c
 19834  011FB4  0EF4               	movlw	high __npowers_
 19835  011FB6  2010               	addwfc	?i2___wmul+1,w,c
 19836  011FB8  6EF7               	movwf	tblptrh,c
 19837  011FBA                     	if	1	;There are 3 active tblptr bytes
 19838  011FBA  6AF8               	clrf	tblptru,c
 19839  011FBC  0E00               	movlw	low (__mediumconst shr (0+16))
 19840  011FBE  22F8               	addwfc	tblptru,f,c
 19841  011FC0                     	endif
 19842  011FC0  0009               	tblrd		*+
 19843  011FC2  CFF5 F027          	movff	tablat,i2___ftmul@f1
 19844  011FC6  0009               	tblrd		*+
 19845  011FC8  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 19846  011FCC  000A               	tblrd		*-
 19847  011FCE  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 19848  011FD2  0E00               	movlw	0
 19849  011FD4  6E12               	movwf	i2___wmul@multiplicand+1,c
 19850  011FD6  0E03               	movlw	3
 19851  011FD8  6E11               	movwf	i2___wmul@multiplicand,c
 19852  011FDA  0E00               	movlw	0
 19853  011FDC  6E04               	movwf	i2___awmod@divisor+1,c
 19854  011FDE  0E0A               	movlw	10
 19855  011FE0  6E03               	movwf	i2___awmod@divisor,c
 19856  011FE2  503C               	movf	i2scale@scl,w,c
 19857  011FE4  6E01               	movwf	i2___awmod@dividend,c
 19858  011FE6  6A02               	clrf	i2___awmod@dividend+1,c
 19859  011FE8  BE01               	btfsc	i2___awmod@dividend,7,c
 19860  011FEA  0602               	decf	i2___awmod@dividend+1,f,c
 19861  011FEC  ECEE  F0A9         	call	i2___awmod	;wreg free
 19862  011FF0  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 19863  011FF4  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 19864  011FF8  ECEC  F0AE         	call	i2___wmul	;wreg free
 19865  011FFC  0E60               	movlw	low __npowers_
 19866  011FFE  240F               	addwf	?i2___wmul,w,c
 19867  012000  6EF6               	movwf	tblptrl,c
 19868  012002  0EF4               	movlw	high __npowers_
 19869  012004  2010               	addwfc	?i2___wmul+1,w,c
 19870  012006  6EF7               	movwf	tblptrh,c
 19871  012008                     	if	1	;There are 3 active tblptr bytes
 19872  012008  6AF8               	clrf	tblptru,c
 19873  01200A  0E00               	movlw	low (__mediumconst shr (0+16))
 19874  01200C  22F8               	addwfc	tblptru,f,c
 19875  01200E                     	endif
 19876  01200E  0009               	tblrd		*+
 19877  012010  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19878  012014  0009               	tblrd		*+
 19879  012016  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19880  01201A  000A               	tblrd		*-
 19881  01201C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19882  012020  EC79  F0A2         	call	i2___ftmul	;wreg free
 19883  012024  C027  F036         	movff	?i2___ftmul,?i2_scale
 19884  012028  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 19885  01202C  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 19886  012030  0012               	return	
 19887  012032                     i2l1060:
 19888                           
 19889                           ;doprnt.c: 434: return _npowers_[scl];
 19890  012032  503C               	movf	i2scale@scl,w,c
 19891  012034  0D03               	mullw	3
 19892  012036  0E60               	movlw	low __npowers_
 19893  012038  24F3               	addwf	prodl,w,c
 19894  01203A  6EF6               	movwf	tblptrl,c
 19895  01203C  0EF4               	movlw	high __npowers_
 19896  01203E  20F4               	addwfc	prodh,w,c
 19897  012040  6EF7               	movwf	tblptrh,c
 19898  012042                     	if	1	;There are 3 active tblptr bytes
 19899  012042  6AF8               	clrf	tblptru,c
 19900  012044  0E00               	movlw	low (__mediumconst shr (0+16))
 19901  012046  22F8               	addwfc	tblptru,f,c
 19902  012048                     	endif
 19903  012048  0009               	tblrd		*+
 19904  01204A  CFF5 F036          	movff	tablat,?i2_scale
 19905  01204E  0009               	tblrd		*+
 19906  012050  CFF5 F037          	movff	tablat,?i2_scale+1
 19907  012054  000A               	tblrd		*-
 19908  012056  CFF5 F038          	movff	tablat,?i2_scale+2
 19909  01205A  0012               	return	
 19910  01205C                     i2l1056:
 19911                           
 19912                           ;doprnt.c: 435: }
 19913                           ;doprnt.c: 436: if(scl>=110)
 19914  01205C  503C               	movf	i2scale@scl,w,c
 19915  01205E  0A80               	xorlw	128
 19916  012060  0F12               	addlw	-238
 19917  012062  A0D8               	btfss	status,0,c
 19918  012064  D09A               	goto	i2l1061
 19919                           
 19920                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 19921  012066  0E00               	movlw	0
 19922  012068  6E12               	movwf	i2___wmul@multiplicand+1,c
 19923  01206A  0E03               	movlw	3
 19924  01206C  6E11               	movwf	i2___wmul@multiplicand,c
 19925  01206E  0E00               	movlw	0
 19926  012070  6E0A               	movwf	i2___awdiv@divisor+1,c
 19927  012072  0E0A               	movlw	10
 19928  012074  6E09               	movwf	i2___awdiv@divisor,c
 19929  012076  0E00               	movlw	0
 19930  012078  6E04               	movwf	i2___awmod@divisor+1,c
 19931  01207A  0E64               	movlw	100
 19932  01207C  6E03               	movwf	i2___awmod@divisor,c
 19933  01207E  503C               	movf	i2scale@scl,w,c
 19934  012080  6E01               	movwf	i2___awmod@dividend,c
 19935  012082  6A02               	clrf	i2___awmod@dividend+1,c
 19936  012084  BE01               	btfsc	i2___awmod@dividend,7,c
 19937  012086  0602               	decf	i2___awmod@dividend+1,f,c
 19938  012088  ECEE  F0A9         	call	i2___awmod	;wreg free
 19939  01208C  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 19940  012090  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 19941  012094  EC81  F0A8         	call	i2___awdiv	;wreg free
 19942  012098  0E09               	movlw	9
 19943  01209A  2407               	addwf	?i2___awdiv,w,c
 19944  01209C  6E0F               	movwf	i2___wmul@multiplier,c
 19945  01209E  0E00               	movlw	0
 19946  0120A0  2008               	addwfc	?i2___awdiv+1,w,c
 19947  0120A2  6E10               	movwf	i2___wmul@multiplier+1,c
 19948  0120A4  ECEC  F0AE         	call	i2___wmul	;wreg free
 19949  0120A8  0E39               	movlw	low __powers_
 19950  0120AA  240F               	addwf	?i2___wmul,w,c
 19951  0120AC  6EF6               	movwf	tblptrl,c
 19952  0120AE  0EF4               	movlw	high __powers_
 19953  0120B0  2010               	addwfc	?i2___wmul+1,w,c
 19954  0120B2  6EF7               	movwf	tblptrh,c
 19955  0120B4                     	if	1	;There are 3 active tblptr bytes
 19956  0120B4  6AF8               	clrf	tblptru,c
 19957  0120B6  0E00               	movlw	low (__mediumconst shr (0+16))
 19958  0120B8  22F8               	addwfc	tblptru,f,c
 19959  0120BA                     	endif
 19960  0120BA  0009               	tblrd		*+
 19961  0120BC  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 19962  0120C0  0009               	tblrd		*+
 19963  0120C2  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 19964  0120C6  000A               	tblrd		*-
 19965  0120C8  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 19966  0120CC  0E00               	movlw	0
 19967  0120CE  6E0A               	movwf	i2___awdiv@divisor+1,c
 19968  0120D0  0E64               	movlw	100
 19969  0120D2  6E09               	movwf	i2___awdiv@divisor,c
 19970  0120D4  503C               	movf	i2scale@scl,w,c
 19971  0120D6  6E07               	movwf	i2___awdiv@dividend,c
 19972  0120D8  6A08               	clrf	i2___awdiv@dividend+1,c
 19973  0120DA  BE07               	btfsc	i2___awdiv@dividend,7,c
 19974  0120DC  0608               	decf	i2___awdiv@dividend+1,f,c
 19975  0120DE  EC81  F0A8         	call	i2___awdiv	;wreg free
 19976  0120E2  0E12               	movlw	18
 19977  0120E4  2407               	addwf	?i2___awdiv,w,c
 19978  0120E6  6E0F               	movwf	i2___wmul@multiplier,c
 19979  0120E8  0E00               	movlw	0
 19980  0120EA  2008               	addwfc	?i2___awdiv+1,w,c
 19981  0120EC  6E10               	movwf	i2___wmul@multiplier+1,c
 19982  0120EE  0E00               	movlw	0
 19983  0120F0  6E12               	movwf	i2___wmul@multiplicand+1,c
 19984  0120F2  0E03               	movlw	3
 19985  0120F4  6E11               	movwf	i2___wmul@multiplicand,c
 19986  0120F6  ECEC  F0AE         	call	i2___wmul	;wreg free
 19987  0120FA  0E39               	movlw	low __powers_
 19988  0120FC  240F               	addwf	?i2___wmul,w,c
 19989  0120FE  6EF6               	movwf	tblptrl,c
 19990  012100  0EF4               	movlw	high __powers_
 19991  012102  2010               	addwfc	?i2___wmul+1,w,c
 19992  012104  6EF7               	movwf	tblptrh,c
 19993  012106                     	if	1	;There are 3 active tblptr bytes
 19994  012106  6AF8               	clrf	tblptru,c
 19995  012108  0E00               	movlw	low (__mediumconst shr (0+16))
 19996  01210A  22F8               	addwfc	tblptru,f,c
 19997  01210C                     	endif
 19998  01210C  0009               	tblrd		*+
 19999  01210E  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20000  012112  0009               	tblrd		*+
 20001  012114  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20002  012118  000A               	tblrd		*-
 20003  01211A  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20004  01211E  EC79  F0A2         	call	i2___ftmul	;wreg free
 20005  012122  C027  F039         	movff	?i2___ftmul,i2_scale$3324
 20006  012126  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3324+1
 20007  01212A  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3324+2
 20008                           
 20009                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 20010  01212E  C039  F027         	movff	i2_scale$3324,i2___ftmul@f1
 20011  012132  C03A  F028         	movff	i2_scale$3324+1,i2___ftmul@f1+1
 20012  012136  C03B  F029         	movff	i2_scale$3324+2,i2___ftmul@f1+2
 20013  01213A  0E00               	movlw	0
 20014  01213C  6E12               	movwf	i2___wmul@multiplicand+1,c
 20015  01213E  0E03               	movlw	3
 20016  012140  6E11               	movwf	i2___wmul@multiplicand,c
 20017  012142  0E00               	movlw	0
 20018  012144  6E04               	movwf	i2___awmod@divisor+1,c
 20019  012146  0E0A               	movlw	10
 20020  012148  6E03               	movwf	i2___awmod@divisor,c
 20021  01214A  503C               	movf	i2scale@scl,w,c
 20022  01214C  6E01               	movwf	i2___awmod@dividend,c
 20023  01214E  6A02               	clrf	i2___awmod@dividend+1,c
 20024  012150  BE01               	btfsc	i2___awmod@dividend,7,c
 20025  012152  0602               	decf	i2___awmod@dividend+1,f,c
 20026  012154  ECEE  F0A9         	call	i2___awmod	;wreg free
 20027  012158  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20028  01215C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20029  012160  ECEC  F0AE         	call	i2___wmul	;wreg free
 20030  012164  0E39               	movlw	low __powers_
 20031  012166  240F               	addwf	?i2___wmul,w,c
 20032  012168  6EF6               	movwf	tblptrl,c
 20033  01216A  0EF4               	movlw	high __powers_
 20034  01216C  2010               	addwfc	?i2___wmul+1,w,c
 20035  01216E  6EF7               	movwf	tblptrh,c
 20036  012170                     	if	1	;There are 3 active tblptr bytes
 20037  012170  6AF8               	clrf	tblptru,c
 20038  012172  0E00               	movlw	low (__mediumconst shr (0+16))
 20039  012174  22F8               	addwfc	tblptru,f,c
 20040  012176                     	endif
 20041  012176  0009               	tblrd		*+
 20042  012178  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20043  01217C  0009               	tblrd		*+
 20044  01217E  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20045  012182  000A               	tblrd		*-
 20046  012184  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20047  012188  EC79  F0A2         	call	i2___ftmul	;wreg free
 20048  01218C  C027  F036         	movff	?i2___ftmul,?i2_scale
 20049  012190  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20050  012194  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20051  012198  0012               	return	
 20052  01219A                     i2l1061:
 20053                           
 20054                           ;doprnt.c: 438: else if(scl > 10)
 20055  01219A  503C               	movf	i2scale@scl,w,c
 20056  01219C  0A80               	xorlw	128
 20057  01219E  0F75               	addlw	-139
 20058  0121A0  A0D8               	btfss	status,0,c
 20059  0121A2  D059               	goto	i2l1063
 20060                           
 20061                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 20062  0121A4  0E00               	movlw	0
 20063  0121A6  6E0A               	movwf	i2___awdiv@divisor+1,c
 20064  0121A8  0E0A               	movlw	10
 20065  0121AA  6E09               	movwf	i2___awdiv@divisor,c
 20066  0121AC  503C               	movf	i2scale@scl,w,c
 20067  0121AE  6E07               	movwf	i2___awdiv@dividend,c
 20068  0121B0  6A08               	clrf	i2___awdiv@dividend+1,c
 20069  0121B2  BE07               	btfsc	i2___awdiv@dividend,7,c
 20070  0121B4  0608               	decf	i2___awdiv@dividend+1,f,c
 20071  0121B6  EC81  F0A8         	call	i2___awdiv	;wreg free
 20072  0121BA  0E09               	movlw	9
 20073  0121BC  2407               	addwf	?i2___awdiv,w,c
 20074  0121BE  6E0F               	movwf	i2___wmul@multiplier,c
 20075  0121C0  0E00               	movlw	0
 20076  0121C2  2008               	addwfc	?i2___awdiv+1,w,c
 20077  0121C4  6E10               	movwf	i2___wmul@multiplier+1,c
 20078  0121C6  0E00               	movlw	0
 20079  0121C8  6E12               	movwf	i2___wmul@multiplicand+1,c
 20080  0121CA  0E03               	movlw	3
 20081  0121CC  6E11               	movwf	i2___wmul@multiplicand,c
 20082  0121CE  ECEC  F0AE         	call	i2___wmul	;wreg free
 20083  0121D2  0E39               	movlw	low __powers_
 20084  0121D4  240F               	addwf	?i2___wmul,w,c
 20085  0121D6  6EF6               	movwf	tblptrl,c
 20086  0121D8  0EF4               	movlw	high __powers_
 20087  0121DA  2010               	addwfc	?i2___wmul+1,w,c
 20088  0121DC  6EF7               	movwf	tblptrh,c
 20089  0121DE                     	if	1	;There are 3 active tblptr bytes
 20090  0121DE  6AF8               	clrf	tblptru,c
 20091  0121E0  0E00               	movlw	low (__mediumconst shr (0+16))
 20092  0121E2  22F8               	addwfc	tblptru,f,c
 20093  0121E4                     	endif
 20094  0121E4  0009               	tblrd		*+
 20095  0121E6  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20096  0121EA  0009               	tblrd		*+
 20097  0121EC  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20098  0121F0  000A               	tblrd		*-
 20099  0121F2  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20100  0121F6  0E00               	movlw	0
 20101  0121F8  6E12               	movwf	i2___wmul@multiplicand+1,c
 20102  0121FA  0E03               	movlw	3
 20103  0121FC  6E11               	movwf	i2___wmul@multiplicand,c
 20104  0121FE  0E00               	movlw	0
 20105  012200  6E04               	movwf	i2___awmod@divisor+1,c
 20106  012202  0E0A               	movlw	10
 20107  012204  6E03               	movwf	i2___awmod@divisor,c
 20108  012206  503C               	movf	i2scale@scl,w,c
 20109  012208  6E01               	movwf	i2___awmod@dividend,c
 20110  01220A  6A02               	clrf	i2___awmod@dividend+1,c
 20111  01220C  BE01               	btfsc	i2___awmod@dividend,7,c
 20112  01220E  0602               	decf	i2___awmod@dividend+1,f,c
 20113  012210  ECEE  F0A9         	call	i2___awmod	;wreg free
 20114  012214  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20115  012218  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20116  01221C  ECEC  F0AE         	call	i2___wmul	;wreg free
 20117  012220  0E39               	movlw	low __powers_
 20118  012222  240F               	addwf	?i2___wmul,w,c
 20119  012224  6EF6               	movwf	tblptrl,c
 20120  012226  0EF4               	movlw	high __powers_
 20121  012228  2010               	addwfc	?i2___wmul+1,w,c
 20122  01222A  6EF7               	movwf	tblptrh,c
 20123  01222C                     	if	1	;There are 3 active tblptr bytes
 20124  01222C  6AF8               	clrf	tblptru,c
 20125  01222E  0E00               	movlw	low (__mediumconst shr (0+16))
 20126  012230  22F8               	addwfc	tblptru,f,c
 20127  012232                     	endif
 20128  012232  0009               	tblrd		*+
 20129  012234  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20130  012238  0009               	tblrd		*+
 20131  01223A  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20132  01223E  000A               	tblrd		*-
 20133  012240  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20134  012244  EC79  F0A2         	call	i2___ftmul	;wreg free
 20135  012248  C027  F036         	movff	?i2___ftmul,?i2_scale
 20136  01224C  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20137  012250  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20138  012254  0012               	return	
 20139  012256                     i2l1063:
 20140                           
 20141                           ;doprnt.c: 440: return _powers_[scl];
 20142  012256  503C               	movf	i2scale@scl,w,c
 20143  012258  0D03               	mullw	3
 20144  01225A  0E39               	movlw	low __powers_
 20145  01225C  24F3               	addwf	prodl,w,c
 20146  01225E  6EF6               	movwf	tblptrl,c
 20147  012260  0EF4               	movlw	high __powers_
 20148  012262  20F4               	addwfc	prodh,w,c
 20149  012264  6EF7               	movwf	tblptrh,c
 20150  012266                     	if	1	;There are 3 active tblptr bytes
 20151  012266  6AF8               	clrf	tblptru,c
 20152  012268  0E00               	movlw	low (__mediumconst shr (0+16))
 20153  01226A  22F8               	addwfc	tblptru,f,c
 20154  01226C                     	endif
 20155  01226C  0009               	tblrd		*+
 20156  01226E  CFF5 F036          	movff	tablat,?i2_scale
 20157  012272  0009               	tblrd		*+
 20158  012274  CFF5 F037          	movff	tablat,?i2_scale+1
 20159  012278  000A               	tblrd		*-
 20160  01227A  CFF5 F038          	movff	tablat,?i2_scale+2
 20161  01227E  0012               	return	
 20162  012280                     __end_ofi2_scale:
 20163                           	opt stack 0
 20164                           tosu	equ	0xFFF
 20165                           tosh	equ	0xFFE
 20166                           tosl	equ	0xFFD
 20167                           pclatu	equ	0xFFB
 20168                           pclath	equ	0xFFA
 20169                           tblptru	equ	0xFF8
 20170                           tblptrh	equ	0xFF7
 20171                           tblptrl	equ	0xFF6
 20172                           tablat	equ	0xFF5
 20173                           prodh	equ	0xFF4
 20174                           prodl	equ	0xFF3
 20175                           intcon	equ	0xFF2
 20176                           postinc0	equ	0xFEE
 20177                           fsr0h	equ	0xFEA
 20178                           fsr0l	equ	0xFE9
 20179                           wreg	equ	0xFE8
 20180                           indf1	equ	0xFE7
 20181                           postdec1	equ	0xFE5
 20182                           fsr1h	equ	0xFE2
 20183                           fsr1l	equ	0xFE1
 20184                           bsr	equ	0xFE0
 20185                           indf2	equ	0xFDF
 20186                           postinc2	equ	0xFDE
 20187                           postdec2	equ	0xFDD
 20188                           fsr2h	equ	0xFDA
 20189                           fsr2l	equ	0xFD9
 20190                           status	equ	0xFD8
 20191                           
 20192 ;; *************** function i2_putch *****************
 20193 ;; Defined at:
 20194 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 20195 ;; Parameters:    Size  Location     Type
 20196 ;;  txData          1    wreg     unsigned char 
 20197 ;; Auto vars:     Size  Location     Type
 20198 ;;  txData          1    1[COMRAM] unsigned char 
 20199 ;; Return value:  Size  Location     Type
 20200 ;;                  1    wreg      void 
 20201 ;; Registers used:
 20202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20203 ;; Tracked objects:
 20204 ;;		On entry : 0/0
 20205 ;;		On exit  : 0/0
 20206 ;;		Unchanged: 0/0
 20207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20212 ;;Total ram usage:        1 bytes
 20213 ;; Hardware stack levels used:    1
 20214 ;; Hardware stack levels required when called:    1
 20215 ;; This function calls:
 20216 ;;		i2_EUSART2_Write
 20217 ;; This function is called by:
 20218 ;;		i2_printf
 20219 ;; This function uses a non-reentrant model
 20220 ;;
 20221                           
 20222                           	psect	text75
 20223  015FBE                     __ptext75:
 20224                           	opt stack 0
 20225  015FBE                     i2_putch:
 20226                           	opt stack 14
 20227                           
 20228                           ;incstack = 0
 20229                           ;i2putch@txData stored from wreg
 20230  015FBE  6E02               	movwf	i2putch@txData,c
 20231                           
 20232                           ;eusart2.c: 182: EUSART2_Write(txData);
 20233  015FC0  5002               	movf	i2putch@txData,w,c
 20234  015FC2  EC1E  F0AD         	call	i2_EUSART2_Write
 20235  015FC6  0012               	return		;funcret
 20236  015FC8                     __end_ofi2_putch:
 20237                           	opt stack 0
 20238                           tosu	equ	0xFFF
 20239                           tosh	equ	0xFFE
 20240                           tosl	equ	0xFFD
 20241                           pclatu	equ	0xFFB
 20242                           pclath	equ	0xFFA
 20243                           tblptru	equ	0xFF8
 20244                           tblptrh	equ	0xFF7
 20245                           tblptrl	equ	0xFF6
 20246                           tablat	equ	0xFF5
 20247                           prodh	equ	0xFF4
 20248                           prodl	equ	0xFF3
 20249                           intcon	equ	0xFF2
 20250                           postinc0	equ	0xFEE
 20251                           fsr0h	equ	0xFEA
 20252                           fsr0l	equ	0xFE9
 20253                           wreg	equ	0xFE8
 20254                           indf1	equ	0xFE7
 20255                           postdec1	equ	0xFE5
 20256                           fsr1h	equ	0xFE2
 20257                           fsr1l	equ	0xFE1
 20258                           bsr	equ	0xFE0
 20259                           indf2	equ	0xFDF
 20260                           postinc2	equ	0xFDE
 20261                           postdec2	equ	0xFDD
 20262                           fsr2h	equ	0xFDA
 20263                           fsr2l	equ	0xFD9
 20264                           status	equ	0xFD8
 20265                           
 20266 ;; *************** function i2_EUSART2_Write *****************
 20267 ;; Defined at:
 20268 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 20269 ;; Parameters:    Size  Location     Type
 20270 ;;  txData          1    wreg     unsigned char 
 20271 ;; Auto vars:     Size  Location     Type
 20272 ;;  txData          1    0[COMRAM] unsigned char 
 20273 ;; Return value:  Size  Location     Type
 20274 ;;                  1    wreg      void 
 20275 ;; Registers used:
 20276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20277 ;; Tracked objects:
 20278 ;;		On entry : 0/0
 20279 ;;		On exit  : 0/0
 20280 ;;		Unchanged: 0/0
 20281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20286 ;;Total ram usage:        1 bytes
 20287 ;; Hardware stack levels used:    1
 20288 ;; This function calls:
 20289 ;;		Nothing
 20290 ;; This function is called by:
 20291 ;;		i2_putch
 20292 ;; This function uses a non-reentrant model
 20293 ;;
 20294                           
 20295                           	psect	text76
 20296  015A3C                     __ptext76:
 20297                           	opt stack 0
 20298  015A3C                     i2_EUSART2_Write:
 20299                           	opt stack 14
 20300                           
 20301                           ;incstack = 0
 20302                           ;i2EUSART2_Write@txData stored from wreg
 20303  015A3C  6E01               	movwf	i2EUSART2_Write@txData,c
 20304                           
 20305                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 20306  015A3E  D001               	goto	i2l374
 20307  015A40                     i2l375:
 20308                           
 20309                           ; BSR set to: 1
 20310  015A40  0004               	clrwdt		;# 
 20311  015A42                     i2l374:
 20312  015A42  0101               	movlb	1	; () banked
 20313  015A44  51DC               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 20314  015A46  B4D8               	btfsc	status,2,c
 20315  015A48  D7FB               	goto	i2l375
 20316                           
 20317                           ; BSR set to: 1
 20318                           ;eusart2.c: 156: }
 20319                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 20320  015A4A  010E               	movlb	14	; () banked
 20321  015A4C  BD2C               	btfsc	44,6,b	;volatile
 20322  015A4E  D003               	goto	i2l377
 20323                           
 20324                           ; BSR set to: 14
 20325                           ;eusart2.c: 159: {
 20326                           ;eusart2.c: 160: TX2REG = txData;
 20327  015A50  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 20328                           
 20329                           ;eusart2.c: 161: }
 20330  015A54  D013               	goto	i2l378
 20331  015A56                     i2l377:
 20332                           
 20333                           ; BSR set to: 14
 20334                           ;eusart2.c: 162: else
 20335                           ;eusart2.c: 163: {
 20336                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 20337  015A56  9D2C               	bcf	44,6,b	;volatile
 20338                           
 20339                           ; BSR set to: 14
 20340                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 20341  015A58  0101               	movlb	1	; () banked
 20342  015A5A  51DE               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 20343  015A5C  0D01               	mullw	1
 20344  015A5E  0E00               	movlw	low _eusart2TxBuffer
 20345  015A60  24F3               	addwf	prodl,w,c
 20346  015A62  6ED9               	movwf	fsr2l,c
 20347  015A64  0E02               	movlw	high _eusart2TxBuffer
 20348  015A66  20F4               	addwfc	prodh,w,c
 20349  015A68  6EDA               	movwf	fsr2h,c
 20350  015A6A  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 20351                           
 20352                           ; BSR set to: 1
 20353  015A6E  2BDE               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 20354                           
 20355                           ; BSR set to: 1
 20356                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 20357  015A70  0E7F               	movlw	127
 20358  015A72  65DE               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 20359  015A74  D002               	goto	i2l379
 20360                           
 20361                           ; BSR set to: 1
 20362                           ;eusart2.c: 167: {
 20363                           ;eusart2.c: 168: eusart2TxHead = 0;
 20364  015A76  0E00               	movlw	0
 20365  015A78  6FDE               	movwf	_eusart2TxHead& (0+255),b	;volatile
 20366  015A7A                     i2l379:
 20367                           
 20368                           ; BSR set to: 1
 20369                           ;eusart2.c: 169: }
 20370                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 20371                           
 20372                           ; BSR set to: 1
 20373  015A7A  07DC               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 20374  015A7C                     i2l378:
 20375                           
 20376                           ;eusart2.c: 171: }
 20377                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 20378                           
 20379                           ; BSR set to: 1
 20380  015A7C  010E               	movlb	14	; () banked
 20381  015A7E  8D2C               	bsf	44,6,b	;volatile
 20382                           
 20383                           ; BSR set to: 14
 20384  015A80  0012               	return		;funcret
 20385  015A82                     __end_ofi2_EUSART2_Write:
 20386                           	opt stack 0
 20387                           tosu	equ	0xFFF
 20388                           tosh	equ	0xFFE
 20389                           tosl	equ	0xFFD
 20390                           pclatu	equ	0xFFB
 20391                           pclath	equ	0xFFA
 20392                           tblptru	equ	0xFF8
 20393                           tblptrh	equ	0xFF7
 20394                           tblptrl	equ	0xFF6
 20395                           tablat	equ	0xFF5
 20396                           prodh	equ	0xFF4
 20397                           prodl	equ	0xFF3
 20398                           intcon	equ	0xFF2
 20399                           postinc0	equ	0xFEE
 20400                           fsr0h	equ	0xFEA
 20401                           fsr0l	equ	0xFE9
 20402                           wreg	equ	0xFE8
 20403                           indf1	equ	0xFE7
 20404                           postdec1	equ	0xFE5
 20405                           fsr1h	equ	0xFE2
 20406                           fsr1l	equ	0xFE1
 20407                           bsr	equ	0xFE0
 20408                           indf2	equ	0xFDF
 20409                           postinc2	equ	0xFDE
 20410                           postdec2	equ	0xFDD
 20411                           fsr2h	equ	0xFDA
 20412                           fsr2l	equ	0xFD9
 20413                           status	equ	0xFD8
 20414                           
 20415 ;; *************** function i2_isdigit *****************
 20416 ;; Defined at:
 20417 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 20418 ;; Parameters:    Size  Location     Type
 20419 ;;  c               1    wreg     unsigned char 
 20420 ;; Auto vars:     Size  Location     Type
 20421 ;;  c               1    2[COMRAM] unsigned char 
 20422 ;; Return value:  Size  Location     Type
 20423 ;;		None               void
 20424 ;; Registers used:
 20425 ;;		wreg, status,2, status,0
 20426 ;; Tracked objects:
 20427 ;;		On entry : 0/0
 20428 ;;		On exit  : 0/0
 20429 ;;		Unchanged: 0/0
 20430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20432 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20434 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20435 ;;Total ram usage:        3 bytes
 20436 ;; Hardware stack levels used:    1
 20437 ;; This function calls:
 20438 ;;		Nothing
 20439 ;; This function is called by:
 20440 ;;		i2_printf
 20441 ;; This function uses a non-reentrant model
 20442 ;;
 20443                           
 20444                           	psect	text77
 20445  015E68                     __ptext77:
 20446                           	opt stack 0
 20447  015E68                     i2_isdigit:
 20448                           	opt stack 15
 20449                           
 20450                           ; BSR set to: 14
 20451                           ;incstack = 0
 20452                           ;i2isdigit@c stored from wreg
 20453  015E68  6E03               	movwf	i2isdigit@c,c
 20454  015E6A  0E00               	movlw	0
 20455  015E6C  6E02               	movwf	i2_isdigit$2486,c
 20456  015E6E  0E3A               	movlw	58
 20457  015E70  6003               	cpfslt	i2isdigit@c,c
 20458  015E72  D005               	goto	i2l1566
 20459  015E74  0E2F               	movlw	47
 20460  015E76  6403               	cpfsgt	i2isdigit@c,c
 20461  015E78  D002               	goto	i2l1566
 20462  015E7A  0E01               	movlw	1
 20463  015E7C  6E02               	movwf	i2_isdigit$2486,c
 20464  015E7E                     i2l1566:
 20465  015E7E  C002  F001         	movff	i2_isdigit$2486,??i2_isdigit
 20466  015E82  3001               	rrcf	??i2_isdigit,w,c
 20467  015E84  0012               	return	
 20468  015E86                     __end_ofi2_isdigit:
 20469                           	opt stack 0
 20470                           tosu	equ	0xFFF
 20471                           tosh	equ	0xFFE
 20472                           tosl	equ	0xFFD
 20473                           pclatu	equ	0xFFB
 20474                           pclath	equ	0xFFA
 20475                           tblptru	equ	0xFF8
 20476                           tblptrh	equ	0xFF7
 20477                           tblptrl	equ	0xFF6
 20478                           tablat	equ	0xFF5
 20479                           prodh	equ	0xFF4
 20480                           prodl	equ	0xFF3
 20481                           intcon	equ	0xFF2
 20482                           postinc0	equ	0xFEE
 20483                           fsr0h	equ	0xFEA
 20484                           fsr0l	equ	0xFE9
 20485                           wreg	equ	0xFE8
 20486                           indf1	equ	0xFE7
 20487                           postdec1	equ	0xFE5
 20488                           fsr1h	equ	0xFE2
 20489                           fsr1l	equ	0xFE1
 20490                           bsr	equ	0xFE0
 20491                           indf2	equ	0xFDF
 20492                           postinc2	equ	0xFDE
 20493                           postdec2	equ	0xFDD
 20494                           fsr2h	equ	0xFDA
 20495                           fsr2l	equ	0xFD9
 20496                           status	equ	0xFD8
 20497                           
 20498 ;; *************** function i2_fround *****************
 20499 ;; Defined at:
 20500 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20501 ;; Parameters:    Size  Location     Type
 20502 ;;  prec            1    wreg     unsigned char 
 20503 ;; Auto vars:     Size  Location     Type
 20504 ;;  prec            1   62[COMRAM] unsigned char 
 20505 ;; Return value:  Size  Location     Type
 20506 ;;                  3   53[COMRAM] unsigned char 
 20507 ;; Registers used:
 20508 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20509 ;; Tracked objects:
 20510 ;;		On entry : 0/0
 20511 ;;		On exit  : 0/0
 20512 ;;		Unchanged: 0/0
 20513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20514 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20515 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20517 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20518 ;;Total ram usage:       10 bytes
 20519 ;; Hardware stack levels used:    1
 20520 ;; Hardware stack levels required when called:    2
 20521 ;; This function calls:
 20522 ;;		i2___awdiv
 20523 ;;		i2___awmod
 20524 ;;		i2___ftmul
 20525 ;;		i2___wmul
 20526 ;; This function is called by:
 20527 ;;		i2_printf
 20528 ;; This function uses a non-reentrant model
 20529 ;;
 20530                           
 20531                           	psect	text78
 20532  012C8A                     __ptext78:
 20533                           	opt stack 0
 20534  012C8A                     i2_fround:
 20535                           	opt stack 13
 20536                           
 20537                           ;incstack = 0
 20538                           ;i2fround@prec stored from wreg
 20539  012C8A  6E3F               	movwf	i2fround@prec,c
 20540                           
 20541                           ;doprnt.c: 413: if(prec>=110)
 20542  012C8C  0E6D               	movlw	109
 20543  012C8E  643F               	cpfsgt	i2fround@prec,c
 20544  012C90  D0A8               	goto	i2l1050
 20545                           
 20546                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 20547  012C92  0E00               	movlw	0
 20548  012C94  6E12               	movwf	i2___wmul@multiplicand+1,c
 20549  012C96  0E03               	movlw	3
 20550  012C98  6E11               	movwf	i2___wmul@multiplicand,c
 20551  012C9A  0E00               	movlw	0
 20552  012C9C  6E0A               	movwf	i2___awdiv@divisor+1,c
 20553  012C9E  0E0A               	movlw	10
 20554  012CA0  6E09               	movwf	i2___awdiv@divisor,c
 20555  012CA2  0E00               	movlw	0
 20556  012CA4  6E04               	movwf	i2___awmod@divisor+1,c
 20557  012CA6  0E64               	movlw	100
 20558  012CA8  6E03               	movwf	i2___awmod@divisor,c
 20559  012CAA  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 20560  012CAE  6A02               	clrf	i2___awmod@dividend+1,c
 20561  012CB0  ECEE  F0A9         	call	i2___awmod	;wreg free
 20562  012CB4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 20563  012CB8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 20564  012CBC  EC81  F0A8         	call	i2___awdiv	;wreg free
 20565  012CC0  0E09               	movlw	9
 20566  012CC2  2407               	addwf	?i2___awdiv,w,c
 20567  012CC4  6E0F               	movwf	i2___wmul@multiplier,c
 20568  012CC6  0E00               	movlw	0
 20569  012CC8  2008               	addwfc	?i2___awdiv+1,w,c
 20570  012CCA  6E10               	movwf	i2___wmul@multiplier+1,c
 20571  012CCC  ECEC  F0AE         	call	i2___wmul	;wreg free
 20572  012CD0  0E60               	movlw	low __npowers_
 20573  012CD2  240F               	addwf	?i2___wmul,w,c
 20574  012CD4  6EF6               	movwf	tblptrl,c
 20575  012CD6  0EF4               	movlw	high __npowers_
 20576  012CD8  2010               	addwfc	?i2___wmul+1,w,c
 20577  012CDA  6EF7               	movwf	tblptrh,c
 20578  012CDC                     	if	1	;There are 3 active tblptr bytes
 20579  012CDC  6AF8               	clrf	tblptru,c
 20580  012CDE  0E00               	movlw	low (__mediumconst shr (0+16))
 20581  012CE0  22F8               	addwfc	tblptru,f,c
 20582  012CE2                     	endif
 20583  012CE2  0009               	tblrd		*+
 20584  012CE4  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20585  012CE8  0009               	tblrd		*+
 20586  012CEA  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20587  012CEE  000A               	tblrd		*-
 20588  012CF0  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20589  012CF4  0E00               	movlw	0
 20590  012CF6  6E0A               	movwf	i2___awdiv@divisor+1,c
 20591  012CF8  0E64               	movlw	100
 20592  012CFA  6E09               	movwf	i2___awdiv@divisor,c
 20593  012CFC  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 20594  012D00  6A08               	clrf	i2___awdiv@dividend+1,c
 20595  012D02  EC81  F0A8         	call	i2___awdiv	;wreg free
 20596  012D06  0E12               	movlw	18
 20597  012D08  2407               	addwf	?i2___awdiv,w,c
 20598  012D0A  6E0F               	movwf	i2___wmul@multiplier,c
 20599  012D0C  0E00               	movlw	0
 20600  012D0E  2008               	addwfc	?i2___awdiv+1,w,c
 20601  012D10  6E10               	movwf	i2___wmul@multiplier+1,c
 20602  012D12  0E00               	movlw	0
 20603  012D14  6E12               	movwf	i2___wmul@multiplicand+1,c
 20604  012D16  0E03               	movlw	3
 20605  012D18  6E11               	movwf	i2___wmul@multiplicand,c
 20606  012D1A  ECEC  F0AE         	call	i2___wmul	;wreg free
 20607  012D1E  0E60               	movlw	low __npowers_
 20608  012D20  240F               	addwf	?i2___wmul,w,c
 20609  012D22  6EF6               	movwf	tblptrl,c
 20610  012D24  0EF4               	movlw	high __npowers_
 20611  012D26  2010               	addwfc	?i2___wmul+1,w,c
 20612  012D28  6EF7               	movwf	tblptrh,c
 20613  012D2A                     	if	1	;There are 3 active tblptr bytes
 20614  012D2A  6AF8               	clrf	tblptru,c
 20615  012D2C  0E00               	movlw	low (__mediumconst shr (0+16))
 20616  012D2E  22F8               	addwfc	tblptru,f,c
 20617  012D30                     	endif
 20618  012D30  0009               	tblrd		*+
 20619  012D32  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20620  012D36  0009               	tblrd		*+
 20621  012D38  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20622  012D3C  000A               	tblrd		*-
 20623  012D3E  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20624  012D42  EC79  F0A2         	call	i2___ftmul	;wreg free
 20625  012D46  C027  F03C         	movff	?i2___ftmul,i2_fround$3322
 20626  012D4A  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3322+1
 20627  012D4E  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3322+2
 20628                           
 20629                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 20630  012D52  0E00               	movlw	0
 20631  012D54  6E12               	movwf	i2___wmul@multiplicand+1,c
 20632  012D56  0E03               	movlw	3
 20633  012D58  6E11               	movwf	i2___wmul@multiplicand,c
 20634  012D5A  0E00               	movlw	0
 20635  012D5C  6E04               	movwf	i2___awmod@divisor+1,c
 20636  012D5E  0E0A               	movlw	10
 20637  012D60  6E03               	movwf	i2___awmod@divisor,c
 20638  012D62  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 20639  012D66  6A02               	clrf	i2___awmod@dividend+1,c
 20640  012D68  ECEE  F0A9         	call	i2___awmod	;wreg free
 20641  012D6C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20642  012D70  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20643  012D74  ECEC  F0AE         	call	i2___wmul	;wreg free
 20644  012D78  0E60               	movlw	low __npowers_
 20645  012D7A  240F               	addwf	?i2___wmul,w,c
 20646  012D7C  6EF6               	movwf	tblptrl,c
 20647  012D7E  0EF4               	movlw	high __npowers_
 20648  012D80  2010               	addwfc	?i2___wmul+1,w,c
 20649  012D82  6EF7               	movwf	tblptrh,c
 20650  012D84                     	if	1	;There are 3 active tblptr bytes
 20651  012D84  6AF8               	clrf	tblptru,c
 20652  012D86  0E00               	movlw	low (__mediumconst shr (0+16))
 20653  012D88  22F8               	addwfc	tblptru,f,c
 20654  012D8A                     	endif
 20655  012D8A  0009               	tblrd		*+
 20656  012D8C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20657  012D90  0009               	tblrd		*+
 20658  012D92  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20659  012D96  000A               	tblrd		*-
 20660  012D98  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20661  012D9C  C03C  F027         	movff	i2_fround$3322,i2___ftmul@f1
 20662  012DA0  C03D  F028         	movff	i2_fround$3322+1,i2___ftmul@f1+1
 20663  012DA4  C03E  F029         	movff	i2_fround$3322+2,i2___ftmul@f1+2
 20664  012DA8  EC79  F0A2         	call	i2___ftmul	;wreg free
 20665  012DAC  C027  F039         	movff	?i2___ftmul,i2_fround$3323
 20666  012DB0  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3323+1
 20667  012DB4  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3323+2
 20668                           
 20669                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 20670  012DB8  C039  F027         	movff	i2_fround$3323,i2___ftmul@f1
 20671  012DBC  C03A  F028         	movff	i2_fround$3323+1,i2___ftmul@f1+1
 20672  012DC0  C03B  F029         	movff	i2_fround$3323+2,i2___ftmul@f1+2
 20673  012DC4  0E00               	movlw	0
 20674  012DC6  6E2A               	movwf	i2___ftmul@f2,c
 20675  012DC8  0E00               	movlw	0
 20676  012DCA  6E2B               	movwf	i2___ftmul@f2+1,c
 20677  012DCC  0E3F               	movlw	63
 20678  012DCE  6E2C               	movwf	i2___ftmul@f2+2,c
 20679  012DD0  EC79  F0A2         	call	i2___ftmul	;wreg free
 20680  012DD4  C027  F036         	movff	?i2___ftmul,?i2_fround
 20681  012DD8  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 20682  012DDC  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 20683  012DE0  0012               	return	
 20684  012DE2                     i2l1050:
 20685                           
 20686                           ;doprnt.c: 415: else if(prec > 10)
 20687  012DE2  0E0A               	movlw	10
 20688  012DE4  643F               	cpfsgt	i2fround@prec,c
 20689  012DE6  D069               	goto	i2l1053
 20690                           
 20691                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 20692  012DE8  0E00               	movlw	0
 20693  012DEA  6E12               	movwf	i2___wmul@multiplicand+1,c
 20694  012DEC  0E03               	movlw	3
 20695  012DEE  6E11               	movwf	i2___wmul@multiplicand,c
 20696  012DF0  0E00               	movlw	0
 20697  012DF2  6E04               	movwf	i2___awmod@divisor+1,c
 20698  012DF4  0E0A               	movlw	10
 20699  012DF6  6E03               	movwf	i2___awmod@divisor,c
 20700  012DF8  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 20701  012DFC  6A02               	clrf	i2___awmod@dividend+1,c
 20702  012DFE  ECEE  F0A9         	call	i2___awmod	;wreg free
 20703  012E02  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20704  012E06  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20705  012E0A  ECEC  F0AE         	call	i2___wmul	;wreg free
 20706  012E0E  0E60               	movlw	low __npowers_
 20707  012E10  240F               	addwf	?i2___wmul,w,c
 20708  012E12  6EF6               	movwf	tblptrl,c
 20709  012E14  0EF4               	movlw	high __npowers_
 20710  012E16  2010               	addwfc	?i2___wmul+1,w,c
 20711  012E18  6EF7               	movwf	tblptrh,c
 20712  012E1A                     	if	1	;There are 3 active tblptr bytes
 20713  012E1A  6AF8               	clrf	tblptru,c
 20714  012E1C  0E00               	movlw	low (__mediumconst shr (0+16))
 20715  012E1E  22F8               	addwfc	tblptru,f,c
 20716  012E20                     	endif
 20717  012E20  0009               	tblrd		*+
 20718  012E22  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20719  012E26  0009               	tblrd		*+
 20720  012E28  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20721  012E2C  000A               	tblrd		*-
 20722  012E2E  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20723  012E32  0E00               	movlw	0
 20724  012E34  6E0A               	movwf	i2___awdiv@divisor+1,c
 20725  012E36  0E0A               	movlw	10
 20726  012E38  6E09               	movwf	i2___awdiv@divisor,c
 20727  012E3A  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 20728  012E3E  6A08               	clrf	i2___awdiv@dividend+1,c
 20729  012E40  EC81  F0A8         	call	i2___awdiv	;wreg free
 20730  012E44  0E09               	movlw	9
 20731  012E46  2407               	addwf	?i2___awdiv,w,c
 20732  012E48  6E0F               	movwf	i2___wmul@multiplier,c
 20733  012E4A  0E00               	movlw	0
 20734  012E4C  2008               	addwfc	?i2___awdiv+1,w,c
 20735  012E4E  6E10               	movwf	i2___wmul@multiplier+1,c
 20736  012E50  0E00               	movlw	0
 20737  012E52  6E12               	movwf	i2___wmul@multiplicand+1,c
 20738  012E54  0E03               	movlw	3
 20739  012E56  6E11               	movwf	i2___wmul@multiplicand,c
 20740  012E58  ECEC  F0AE         	call	i2___wmul	;wreg free
 20741  012E5C  0E60               	movlw	low __npowers_
 20742  012E5E  240F               	addwf	?i2___wmul,w,c
 20743  012E60  6EF6               	movwf	tblptrl,c
 20744  012E62  0EF4               	movlw	high __npowers_
 20745  012E64  2010               	addwfc	?i2___wmul+1,w,c
 20746  012E66  6EF7               	movwf	tblptrh,c
 20747  012E68                     	if	1	;There are 3 active tblptr bytes
 20748  012E68  6AF8               	clrf	tblptru,c
 20749  012E6A  0E00               	movlw	low (__mediumconst shr (0+16))
 20750  012E6C  22F8               	addwfc	tblptru,f,c
 20751  012E6E                     	endif
 20752  012E6E  0009               	tblrd		*+
 20753  012E70  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20754  012E74  0009               	tblrd		*+
 20755  012E76  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20756  012E7A  000A               	tblrd		*-
 20757  012E7C  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20758  012E80  EC79  F0A2         	call	i2___ftmul	;wreg free
 20759  012E84  C027  F03C         	movff	?i2___ftmul,i2_fround$3322
 20760  012E88  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3322+1
 20761  012E8C  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3322+2
 20762                           
 20763                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 20764  012E90  C03C  F027         	movff	i2_fround$3322,i2___ftmul@f1
 20765  012E94  C03D  F028         	movff	i2_fround$3322+1,i2___ftmul@f1+1
 20766  012E98  C03E  F029         	movff	i2_fround$3322+2,i2___ftmul@f1+2
 20767  012E9C  0E00               	movlw	0
 20768  012E9E  6E2A               	movwf	i2___ftmul@f2,c
 20769  012EA0  0E00               	movlw	0
 20770  012EA2  6E2B               	movwf	i2___ftmul@f2+1,c
 20771  012EA4  0E3F               	movlw	63
 20772  012EA6  6E2C               	movwf	i2___ftmul@f2+2,c
 20773  012EA8  EC79  F0A2         	call	i2___ftmul	;wreg free
 20774  012EAC  C027  F036         	movff	?i2___ftmul,?i2_fround
 20775  012EB0  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 20776  012EB4  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 20777  012EB8  0012               	return	
 20778  012EBA                     i2l1053:
 20779                           
 20780                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 20781  012EBA  503F               	movf	i2fround@prec,w,c
 20782  012EBC  0D03               	mullw	3
 20783  012EBE  0E60               	movlw	low __npowers_
 20784  012EC0  24F3               	addwf	prodl,w,c
 20785  012EC2  6EF6               	movwf	tblptrl,c
 20786  012EC4  0EF4               	movlw	high __npowers_
 20787  012EC6  20F4               	addwfc	prodh,w,c
 20788  012EC8  6EF7               	movwf	tblptrh,c
 20789  012ECA                     	if	1	;There are 3 active tblptr bytes
 20790  012ECA  6AF8               	clrf	tblptru,c
 20791  012ECC  0E00               	movlw	low (__mediumconst shr (0+16))
 20792  012ECE  22F8               	addwfc	tblptru,f,c
 20793  012ED0                     	endif
 20794  012ED0  0009               	tblrd		*+
 20795  012ED2  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20796  012ED6  0009               	tblrd		*+
 20797  012ED8  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20798  012EDC  000A               	tblrd		*-
 20799  012EDE  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20800  012EE2  0E00               	movlw	0
 20801  012EE4  6E2A               	movwf	i2___ftmul@f2,c
 20802  012EE6  0E00               	movlw	0
 20803  012EE8  6E2B               	movwf	i2___ftmul@f2+1,c
 20804  012EEA  0E3F               	movlw	63
 20805  012EEC  6E2C               	movwf	i2___ftmul@f2+2,c
 20806  012EEE  EC79  F0A2         	call	i2___ftmul	;wreg free
 20807  012EF2  C027  F036         	movff	?i2___ftmul,?i2_fround
 20808  012EF6  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 20809  012EFA  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 20810  012EFE  0012               	return	
 20811  012F00                     __end_ofi2_fround:
 20812                           	opt stack 0
 20813                           tosu	equ	0xFFF
 20814                           tosh	equ	0xFFE
 20815                           tosl	equ	0xFFD
 20816                           pclatu	equ	0xFFB
 20817                           pclath	equ	0xFFA
 20818                           tblptru	equ	0xFF8
 20819                           tblptrh	equ	0xFF7
 20820                           tblptrl	equ	0xFF6
 20821                           tablat	equ	0xFF5
 20822                           prodh	equ	0xFF4
 20823                           prodl	equ	0xFF3
 20824                           intcon	equ	0xFF2
 20825                           postinc0	equ	0xFEE
 20826                           fsr0h	equ	0xFEA
 20827                           fsr0l	equ	0xFE9
 20828                           wreg	equ	0xFE8
 20829                           indf1	equ	0xFE7
 20830                           postdec1	equ	0xFE5
 20831                           fsr1h	equ	0xFE2
 20832                           fsr1l	equ	0xFE1
 20833                           bsr	equ	0xFE0
 20834                           indf2	equ	0xFDF
 20835                           postinc2	equ	0xFDE
 20836                           postdec2	equ	0xFDD
 20837                           fsr2h	equ	0xFDA
 20838                           fsr2l	equ	0xFD9
 20839                           status	equ	0xFD8
 20840                           
 20841 ;; *************** function i2___awmod *****************
 20842 ;; Defined at:
 20843 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 20844 ;; Parameters:    Size  Location     Type
 20845 ;;  dividend        2    0[COMRAM] int 
 20846 ;;  divisor         2    2[COMRAM] int 
 20847 ;; Auto vars:     Size  Location     Type
 20848 ;;  __awmod         1    5[COMRAM] unsigned char 
 20849 ;;  __awmod         1    4[COMRAM] unsigned char 
 20850 ;; Return value:  Size  Location     Type
 20851 ;;                  2    0[COMRAM] int 
 20852 ;; Registers used:
 20853 ;;		wreg, status,2, status,0
 20854 ;; Tracked objects:
 20855 ;;		On entry : 0/0
 20856 ;;		On exit  : 0/0
 20857 ;;		Unchanged: 0/0
 20858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20859 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20860 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20862 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20863 ;;Total ram usage:        6 bytes
 20864 ;; Hardware stack levels used:    1
 20865 ;; This function calls:
 20866 ;;		Nothing
 20867 ;; This function is called by:
 20868 ;;		i2_fround
 20869 ;;		i2_scale
 20870 ;; This function uses a non-reentrant model
 20871 ;;
 20872                           
 20873                           	psect	text79
 20874  0153DC                     __ptext79:
 20875                           	opt stack 0
 20876  0153DC                     i2___awmod:
 20877                           	opt stack 14
 20878                           
 20879                           ;incstack = 0
 20880  0153DC  0E00               	movlw	0
 20881  0153DE  6E06               	movwf	i2___awmod@sign,c
 20882  0153E0  AE02               	btfss	i2___awmod@dividend+1,7,c
 20883  0153E2  D006               	goto	i2l1371
 20884  0153E4  6C01               	negf	i2___awmod@dividend,c
 20885  0153E6  1E02               	comf	i2___awmod@dividend+1,f,c
 20886  0153E8  B0D8               	btfsc	status,0,c
 20887  0153EA  2A02               	incf	i2___awmod@dividend+1,f,c
 20888  0153EC  0E01               	movlw	1
 20889  0153EE  6E06               	movwf	i2___awmod@sign,c
 20890  0153F0                     i2l1371:
 20891  0153F0  AE04               	btfss	i2___awmod@divisor+1,7,c
 20892  0153F2  D004               	goto	i2l1372
 20893  0153F4  6C03               	negf	i2___awmod@divisor,c
 20894  0153F6  1E04               	comf	i2___awmod@divisor+1,f,c
 20895  0153F8  B0D8               	btfsc	status,0,c
 20896  0153FA  2A04               	incf	i2___awmod@divisor+1,f,c
 20897  0153FC                     i2l1372:
 20898  0153FC  5003               	movf	i2___awmod@divisor,w,c
 20899  0153FE  1004               	iorwf	i2___awmod@divisor+1,w,c
 20900  015400  B4D8               	btfsc	status,2,c
 20901  015402  D018               	goto	i2l1379
 20902  015404  0E01               	movlw	1
 20903  015406  6E05               	movwf	i2___awmod@counter,c
 20904  015408  D004               	goto	i2l1374
 20905  01540A  90D8               	bcf	status,0,c
 20906  01540C  3603               	rlcf	i2___awmod@divisor,f,c
 20907  01540E  3604               	rlcf	i2___awmod@divisor+1,f,c
 20908  015410  2A05               	incf	i2___awmod@counter,f,c
 20909  015412                     i2l1374:
 20910  015412  AE04               	btfss	i2___awmod@divisor+1,7,c
 20911  015414  D7FA               	goto	i2l1375
 20912  015416                     i2u1077_40:
 20913  015416  5003               	movf	i2___awmod@divisor,w,c
 20914  015418  5C01               	subwf	i2___awmod@dividend,w,c
 20915  01541A  5004               	movf	i2___awmod@divisor+1,w,c
 20916  01541C  5802               	subwfb	i2___awmod@dividend+1,w,c
 20917  01541E  A0D8               	btfss	status,0,c
 20918  015420  D004               	goto	i2l1378
 20919  015422  5003               	movf	i2___awmod@divisor,w,c
 20920  015424  5E01               	subwf	i2___awmod@dividend,f,c
 20921  015426  5004               	movf	i2___awmod@divisor+1,w,c
 20922  015428  5A02               	subwfb	i2___awmod@dividend+1,f,c
 20923  01542A                     i2l1378:
 20924  01542A  90D8               	bcf	status,0,c
 20925  01542C  3204               	rrcf	i2___awmod@divisor+1,f,c
 20926  01542E  3203               	rrcf	i2___awmod@divisor,f,c
 20927  015430  2E05               	decfsz	i2___awmod@counter,f,c
 20928  015432  D7F1               	goto	i2u1077_40
 20929  015434                     i2l1379:
 20930  015434  5006               	movf	i2___awmod@sign,w,c
 20931  015436  B4D8               	btfsc	status,2,c
 20932  015438  D004               	goto	i2l1380
 20933  01543A  6C01               	negf	i2___awmod@dividend,c
 20934  01543C  1E02               	comf	i2___awmod@dividend+1,f,c
 20935  01543E  B0D8               	btfsc	status,0,c
 20936  015440  2A02               	incf	i2___awmod@dividend+1,f,c
 20937  015442                     i2l1380:
 20938  015442  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 20939  015446  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 20940  01544A  0012               	return	
 20941  01544C                     __end_ofi2___awmod:
 20942                           	opt stack 0
 20943                           tosu	equ	0xFFF
 20944                           tosh	equ	0xFFE
 20945                           tosl	equ	0xFFD
 20946                           pclatu	equ	0xFFB
 20947                           pclath	equ	0xFFA
 20948                           tblptru	equ	0xFF8
 20949                           tblptrh	equ	0xFF7
 20950                           tblptrl	equ	0xFF6
 20951                           tablat	equ	0xFF5
 20952                           prodh	equ	0xFF4
 20953                           prodl	equ	0xFF3
 20954                           intcon	equ	0xFF2
 20955                           postinc0	equ	0xFEE
 20956                           fsr0h	equ	0xFEA
 20957                           fsr0l	equ	0xFE9
 20958                           wreg	equ	0xFE8
 20959                           indf1	equ	0xFE7
 20960                           postdec1	equ	0xFE5
 20961                           fsr1h	equ	0xFE2
 20962                           fsr1l	equ	0xFE1
 20963                           bsr	equ	0xFE0
 20964                           indf2	equ	0xFDF
 20965                           postinc2	equ	0xFDE
 20966                           postdec2	equ	0xFDD
 20967                           fsr2h	equ	0xFDA
 20968                           fsr2l	equ	0xFD9
 20969                           status	equ	0xFD8
 20970                           
 20971 ;; *************** function i2___awdiv *****************
 20972 ;; Defined at:
 20973 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 20974 ;; Parameters:    Size  Location     Type
 20975 ;;  dividend        2    6[COMRAM] int 
 20976 ;;  divisor         2    8[COMRAM] int 
 20977 ;; Auto vars:     Size  Location     Type
 20978 ;;  __awdiv         2   12[COMRAM] int 
 20979 ;;  __awdiv         1   11[COMRAM] unsigned char 
 20980 ;;  __awdiv         1   10[COMRAM] unsigned char 
 20981 ;; Return value:  Size  Location     Type
 20982 ;;                  2    6[COMRAM] int 
 20983 ;; Registers used:
 20984 ;;		wreg, status,2, status,0
 20985 ;; Tracked objects:
 20986 ;;		On entry : 0/0
 20987 ;;		On exit  : 0/0
 20988 ;;		Unchanged: 0/0
 20989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20991 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20993 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20994 ;;Total ram usage:        8 bytes
 20995 ;; Hardware stack levels used:    1
 20996 ;; This function calls:
 20997 ;;		Nothing
 20998 ;; This function is called by:
 20999 ;;		i2_fround
 21000 ;;		i2_scale
 21001 ;;		i2_printf
 21002 ;; This function uses a non-reentrant model
 21003 ;;
 21004                           
 21005                           	psect	text80
 21006  015102                     __ptext80:
 21007                           	opt stack 0
 21008  015102                     i2___awdiv:
 21009                           	opt stack 14
 21010                           
 21011                           ;incstack = 0
 21012  015102  0E00               	movlw	0
 21013  015104  6E0C               	movwf	i2___awdiv@sign,c
 21014  015106  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 21015  015108  D006               	goto	i2l1358
 21016  01510A  6C09               	negf	i2___awdiv@divisor,c
 21017  01510C  1E0A               	comf	i2___awdiv@divisor+1,f,c
 21018  01510E  B0D8               	btfsc	status,0,c
 21019  015110  2A0A               	incf	i2___awdiv@divisor+1,f,c
 21020  015112  0E01               	movlw	1
 21021  015114  6E0C               	movwf	i2___awdiv@sign,c
 21022  015116                     i2l1358:
 21023  015116  AE08               	btfss	i2___awdiv@dividend+1,7,c
 21024  015118  D006               	goto	i2l1359
 21025  01511A  6C07               	negf	i2___awdiv@dividend,c
 21026  01511C  1E08               	comf	i2___awdiv@dividend+1,f,c
 21027  01511E  B0D8               	btfsc	status,0,c
 21028  015120  2A08               	incf	i2___awdiv@dividend+1,f,c
 21029  015122  0E01               	movlw	1
 21030  015124  1A0C               	xorwf	i2___awdiv@sign,f,c
 21031  015126                     i2l1359:
 21032  015126  0E00               	movlw	0
 21033  015128  6E0E               	movwf	i2___awdiv@quotient+1,c
 21034  01512A  0E00               	movlw	0
 21035  01512C  6E0D               	movwf	i2___awdiv@quotient,c
 21036  01512E  5009               	movf	i2___awdiv@divisor,w,c
 21037  015130  100A               	iorwf	i2___awdiv@divisor+1,w,c
 21038  015132  B4D8               	btfsc	status,2,c
 21039  015134  D01C               	goto	i2l1366
 21040  015136  0E01               	movlw	1
 21041  015138  6E0B               	movwf	i2___awdiv@counter,c
 21042  01513A  D004               	goto	i2l1361
 21043  01513C  90D8               	bcf	status,0,c
 21044  01513E  3609               	rlcf	i2___awdiv@divisor,f,c
 21045  015140  360A               	rlcf	i2___awdiv@divisor+1,f,c
 21046  015142  2A0B               	incf	i2___awdiv@counter,f,c
 21047  015144                     i2l1361:
 21048  015144  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 21049  015146  D7FA               	goto	i2l1362
 21050  015148                     i2u1071_40:
 21051  015148  90D8               	bcf	status,0,c
 21052  01514A  360D               	rlcf	i2___awdiv@quotient,f,c
 21053  01514C  360E               	rlcf	i2___awdiv@quotient+1,f,c
 21054  01514E  5009               	movf	i2___awdiv@divisor,w,c
 21055  015150  5C07               	subwf	i2___awdiv@dividend,w,c
 21056  015152  500A               	movf	i2___awdiv@divisor+1,w,c
 21057  015154  5808               	subwfb	i2___awdiv@dividend+1,w,c
 21058  015156  A0D8               	btfss	status,0,c
 21059  015158  D005               	goto	i2l1365
 21060  01515A  5009               	movf	i2___awdiv@divisor,w,c
 21061  01515C  5E07               	subwf	i2___awdiv@dividend,f,c
 21062  01515E  500A               	movf	i2___awdiv@divisor+1,w,c
 21063  015160  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 21064  015162  800D               	bsf	i2___awdiv@quotient,0,c
 21065  015164                     i2l1365:
 21066  015164  90D8               	bcf	status,0,c
 21067  015166  320A               	rrcf	i2___awdiv@divisor+1,f,c
 21068  015168  3209               	rrcf	i2___awdiv@divisor,f,c
 21069  01516A  2E0B               	decfsz	i2___awdiv@counter,f,c
 21070  01516C  D7ED               	goto	i2u1071_40
 21071  01516E                     i2l1366:
 21072  01516E  500C               	movf	i2___awdiv@sign,w,c
 21073  015170  B4D8               	btfsc	status,2,c
 21074  015172  D004               	goto	i2l1367
 21075  015174  6C0D               	negf	i2___awdiv@quotient,c
 21076  015176  1E0E               	comf	i2___awdiv@quotient+1,f,c
 21077  015178  B0D8               	btfsc	status,0,c
 21078  01517A  2A0E               	incf	i2___awdiv@quotient+1,f,c
 21079  01517C                     i2l1367:
 21080  01517C  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 21081  015180  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 21082  015184  0012               	return	
 21083  015186                     __end_ofi2___awdiv:
 21084                           	opt stack 0
 21085                           tosu	equ	0xFFF
 21086                           tosh	equ	0xFFE
 21087                           tosl	equ	0xFFD
 21088                           pclatu	equ	0xFFB
 21089                           pclath	equ	0xFFA
 21090                           tblptru	equ	0xFF8
 21091                           tblptrh	equ	0xFF7
 21092                           tblptrl	equ	0xFF6
 21093                           tablat	equ	0xFF5
 21094                           prodh	equ	0xFF4
 21095                           prodl	equ	0xFF3
 21096                           intcon	equ	0xFF2
 21097                           postinc0	equ	0xFEE
 21098                           fsr0h	equ	0xFEA
 21099                           fsr0l	equ	0xFE9
 21100                           wreg	equ	0xFE8
 21101                           indf1	equ	0xFE7
 21102                           postdec1	equ	0xFE5
 21103                           fsr1h	equ	0xFE2
 21104                           fsr1l	equ	0xFE1
 21105                           bsr	equ	0xFE0
 21106                           indf2	equ	0xFDF
 21107                           postinc2	equ	0xFDE
 21108                           postdec2	equ	0xFDD
 21109                           fsr2h	equ	0xFDA
 21110                           fsr2l	equ	0xFD9
 21111                           status	equ	0xFD8
 21112                           
 21113 ;; *************** function i2__tdiv_to_l_ *****************
 21114 ;; Defined at:
 21115 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 21116 ;; Parameters:    Size  Location     Type
 21117 ;;  f1              3    0[COMRAM] float 
 21118 ;;  f2              3    3[COMRAM] float 
 21119 ;; Auto vars:     Size  Location     Type
 21120 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 21121 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 21122 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  4    0[COMRAM] unsigned long 
 21125 ;; Registers used:
 21126 ;;		wreg, status,2, status,0
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/0
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21132 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21133 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21134 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21135 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21136 ;;Total ram usage:       15 bytes
 21137 ;; Hardware stack levels used:    1
 21138 ;; This function calls:
 21139 ;;		Nothing
 21140 ;; This function is called by:
 21141 ;;		i2_printf
 21142 ;; This function uses a non-reentrant model
 21143 ;;
 21144                           
 21145                           	psect	text81
 21146  013D70                     __ptext81:
 21147                           	opt stack 0
 21148  013D70                     i2__tdiv_to_l_:
 21149                           	opt stack 15
 21150                           
 21151                           ;incstack = 0
 21152  013D70  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 21153  013D74  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 21154  013D76  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 21155  013D78  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 21156  013D7A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 21157  013D7C  E301               	bnc	u1111_41
 21158  013D7E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 21159  013D80                     u1111_41:
 21160  013D80  5007               	movf	??i2__tdiv_to_l_,w,c
 21161  013D82  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 21162  013D84  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21163  013D86  A4D8               	btfss	status,2,c
 21164  013D88  D009               	goto	i2l1506
 21165  013D8A  0E00               	movlw	0
 21166  013D8C  6E01               	movwf	?i2__tdiv_to_l_,c
 21167  013D8E  0E00               	movlw	0
 21168  013D90  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21169  013D92  0E00               	movlw	0
 21170  013D94  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21171  013D96  0E00               	movlw	0
 21172  013D98  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21173  013D9A  0012               	return	
 21174  013D9C                     i2l1506:
 21175  013D9C  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 21176  013DA0  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 21177  013DA2  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 21178  013DA4  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 21179  013DA6  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 21180  013DA8  E301               	bnc	u1113_41
 21181  013DAA  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 21182  013DAC                     u1113_41:
 21183  013DAC  5007               	movf	??i2__tdiv_to_l_,w,c
 21184  013DAE  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 21185  013DB0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 21186  013DB2  A4D8               	btfss	status,2,c
 21187  013DB4  D009               	goto	i2l1508
 21188  013DB6  0E00               	movlw	0
 21189  013DB8  6E01               	movwf	?i2__tdiv_to_l_,c
 21190  013DBA  0E00               	movlw	0
 21191  013DBC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21192  013DBE  0E00               	movlw	0
 21193  013DC0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21194  013DC2  0E00               	movlw	0
 21195  013DC4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21196  013DC6  0012               	return	
 21197  013DC8                     i2l1508:
 21198  013DC8  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 21199  013DCA  0EFF               	movlw	255
 21200  013DCC  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 21201  013DCE  0EFF               	movlw	255
 21202  013DD0  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 21203  013DD2  0E00               	movlw	0
 21204  013DD4  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 21205  013DD6  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 21206  013DD8  0EFF               	movlw	255
 21207  013DDA  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 21208  013DDC  0EFF               	movlw	255
 21209  013DDE  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 21210  013DE0  0E00               	movlw	0
 21211  013DE2  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 21212  013DE4  0E00               	movlw	0
 21213  013DE6  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 21214  013DE8  0E00               	movlw	0
 21215  013DEA  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 21216  013DEC  0E00               	movlw	0
 21217  013DEE  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 21218  013DF0  0E00               	movlw	0
 21219  013DF2  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 21220  013DF4  0E7F               	movlw	127
 21221  013DF6  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 21222  013DF8  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 21223  013DFA  0F98               	addlw	152
 21224  013DFC  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 21225  013DFE  0E18               	movlw	24
 21226  013E00  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 21227  013E02                     i2l1509:
 21228  013E02  90D8               	bcf	status,0,c
 21229  013E04  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 21230  013E06  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 21231  013E08  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 21232  013E0A  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 21233  013E0C  5004               	movf	i2__tdiv_to_l_@f2,w,c
 21234  013E0E  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 21235  013E10  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 21236  013E12  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 21237  013E14  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 21238  013E16  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 21239  013E18  A0D8               	btfss	status,0,c
 21240  013E1A  D007               	goto	i2l1510
 21241  013E1C  5004               	movf	i2__tdiv_to_l_@f2,w,c
 21242  013E1E  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 21243  013E20  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 21244  013E22  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 21245  013E24  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 21246  013E26  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 21247  013E28  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 21248  013E2A                     i2l1510:
 21249  013E2A  90D8               	bcf	status,0,c
 21250  013E2C  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 21251  013E2E  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 21252  013E30  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 21253  013E32  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 21254  013E34  D7E6               	goto	i2l1509
 21255  013E36  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 21256  013E38  D016               	goto	i2l1512
 21257  013E3A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21258  013E3C  0A80               	xorlw	128
 21259  013E3E  0F97               	addlw	151
 21260  013E40  B0D8               	btfsc	status,0,c
 21261  013E42  D009               	goto	i2l1513
 21262  013E44  0E00               	movlw	0
 21263  013E46  6E01               	movwf	?i2__tdiv_to_l_,c
 21264  013E48  0E00               	movlw	0
 21265  013E4A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21266  013E4C  0E00               	movlw	0
 21267  013E4E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21268  013E50  0E00               	movlw	0
 21269  013E52  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21270  013E54  0012               	return	
 21271  013E56                     i2l1513:
 21272  013E56  90D8               	bcf	status,0,c
 21273  013E58  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 21274  013E5A  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 21275  013E5C  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 21276  013E5E  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 21277  013E60  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 21278  013E62  D7F9               	goto	i2l1513
 21279  013E64  D015               	goto	i2u1119_40
 21280  013E66                     i2l1512:
 21281  013E66  0E17               	movlw	23
 21282  013E68  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 21283  013E6A  D00F               	goto	i2l1518
 21284  013E6C  0E00               	movlw	0
 21285  013E6E  6E01               	movwf	?i2__tdiv_to_l_,c
 21286  013E70  0E00               	movlw	0
 21287  013E72  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21288  013E74  0E00               	movlw	0
 21289  013E76  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21290  013E78  0E00               	movlw	0
 21291  013E7A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21292  013E7C  0012               	return	
 21293  013E7E  90D8               	bcf	status,0,c
 21294  013E80  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 21295  013E82  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 21296  013E84  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 21297  013E86  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 21298  013E88  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 21299  013E8A                     i2l1518:
 21300  013E8A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21301  013E8C  A4D8               	btfss	status,2,c
 21302  013E8E  D7F7               	goto	i2l1519
 21303  013E90                     i2u1119_40:
 21304  013E90  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 21305  013E94  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 21306  013E98  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 21307  013E9C  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 21308  013EA0  0012               	return		;funcret
 21309  013EA2                     __end_ofi2__tdiv_to_l_:
 21310                           	opt stack 0
 21311                           tosu	equ	0xFFF
 21312                           tosh	equ	0xFFE
 21313                           tosl	equ	0xFFD
 21314                           pclatu	equ	0xFFB
 21315                           pclath	equ	0xFFA
 21316                           tblptru	equ	0xFF8
 21317                           tblptrh	equ	0xFF7
 21318                           tblptrl	equ	0xFF6
 21319                           tablat	equ	0xFF5
 21320                           prodh	equ	0xFF4
 21321                           prodl	equ	0xFF3
 21322                           intcon	equ	0xFF2
 21323                           postinc0	equ	0xFEE
 21324                           fsr0h	equ	0xFEA
 21325                           fsr0l	equ	0xFE9
 21326                           wreg	equ	0xFE8
 21327                           indf1	equ	0xFE7
 21328                           postdec1	equ	0xFE5
 21329                           fsr1h	equ	0xFE2
 21330                           fsr1l	equ	0xFE1
 21331                           bsr	equ	0xFE0
 21332                           indf2	equ	0xFDF
 21333                           postinc2	equ	0xFDE
 21334                           postdec2	equ	0xFDD
 21335                           fsr2h	equ	0xFDA
 21336                           fsr2l	equ	0xFD9
 21337                           status	equ	0xFD8
 21338                           
 21339 ;; *************** function i2__div_to_l_ *****************
 21340 ;; Defined at:
 21341 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 21342 ;; Parameters:    Size  Location     Type
 21343 ;;  f1              3    0[COMRAM] unsigned long 
 21344 ;;  f2              3    3[COMRAM] unsigned long 
 21345 ;; Auto vars:     Size  Location     Type
 21346 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 21347 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 21348 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 21349 ;; Return value:  Size  Location     Type
 21350 ;;                  4    0[COMRAM] unsigned long 
 21351 ;; Registers used:
 21352 ;;		wreg, status,2, status,0
 21353 ;; Tracked objects:
 21354 ;;		On entry : 0/0
 21355 ;;		On exit  : 0/0
 21356 ;;		Unchanged: 0/0
 21357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21358 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21359 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21361 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21362 ;;Total ram usage:       12 bytes
 21363 ;; Hardware stack levels used:    1
 21364 ;; This function calls:
 21365 ;;		Nothing
 21366 ;; This function is called by:
 21367 ;;		i2_printf
 21368 ;; This function uses a non-reentrant model
 21369 ;;
 21370                           
 21371                           	psect	text82
 21372  013FCC                     __ptext82:
 21373                           	opt stack 0
 21374  013FCC                     i2__div_to_l_:
 21375                           	opt stack 15
 21376                           
 21377                           ;incstack = 0
 21378  013FCC  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 21379  013FCE  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 21380  013FD0  6E0C               	movwf	i2__div_to_l_@exp1,c
 21381  013FD2  500C               	movf	i2__div_to_l_@exp1,w,c
 21382  013FD4  A4D8               	btfss	status,2,c
 21383  013FD6  D009               	goto	i2l1402
 21384  013FD8  0E00               	movlw	0
 21385  013FDA  6E01               	movwf	?i2__div_to_l_,c
 21386  013FDC  0E00               	movlw	0
 21387  013FDE  6E02               	movwf	?i2__div_to_l_+1,c
 21388  013FE0  0E00               	movlw	0
 21389  013FE2  6E03               	movwf	?i2__div_to_l_+2,c
 21390  013FE4  0E00               	movlw	0
 21391  013FE6  6E04               	movwf	?i2__div_to_l_+3,c
 21392  013FE8  0012               	return	
 21393  013FEA                     i2l1402:
 21394  013FEA  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 21395  013FEC  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 21396  013FEE  6E0B               	movwf	i2__div_to_l_@cntr,c
 21397  013FF0  500B               	movf	i2__div_to_l_@cntr,w,c
 21398  013FF2  A4D8               	btfss	status,2,c
 21399  013FF4  D009               	goto	i2l1404
 21400  013FF6  0E00               	movlw	0
 21401  013FF8  6E01               	movwf	?i2__div_to_l_,c
 21402  013FFA  0E00               	movlw	0
 21403  013FFC  6E02               	movwf	?i2__div_to_l_+1,c
 21404  013FFE  0E00               	movlw	0
 21405  014000  6E03               	movwf	?i2__div_to_l_+2,c
 21406  014002  0E00               	movlw	0
 21407  014004  6E04               	movwf	?i2__div_to_l_+3,c
 21408  014006  0012               	return	
 21409  014008                     i2l1404:
 21410  014008  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 21411  01400A  0EFF               	movlw	255
 21412  01400C  1601               	andwf	i2__div_to_l_@f1,f,c
 21413  01400E  0EFF               	movlw	255
 21414  014010  1602               	andwf	i2__div_to_l_@f1+1,f,c
 21415  014012  0EFF               	movlw	255
 21416  014014  1603               	andwf	i2__div_to_l_@f1+2,f,c
 21417  014016  0E00               	movlw	0
 21418  014018  1604               	andwf	i2__div_to_l_@f1+3,f,c
 21419  01401A  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 21420  01401C  0EFF               	movlw	255
 21421  01401E  1604               	andwf	i2__div_to_l_@f2,f,c
 21422  014020  0EFF               	movlw	255
 21423  014022  1605               	andwf	i2__div_to_l_@f2+1,f,c
 21424  014024  0EFF               	movlw	255
 21425  014026  1606               	andwf	i2__div_to_l_@f2+2,f,c
 21426  014028  0E00               	movlw	0
 21427  01402A  1607               	andwf	i2__div_to_l_@f2+3,f,c
 21428  01402C  0E00               	movlw	0
 21429  01402E  6E07               	movwf	i2__div_to_l_@quot,c
 21430  014030  0E00               	movlw	0
 21431  014032  6E08               	movwf	i2__div_to_l_@quot+1,c
 21432  014034  0E00               	movlw	0
 21433  014036  6E09               	movwf	i2__div_to_l_@quot+2,c
 21434  014038  0E00               	movlw	0
 21435  01403A  6E0A               	movwf	i2__div_to_l_@quot+3,c
 21436  01403C  0E7F               	movlw	127
 21437  01403E  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 21438  014040  500B               	movf	i2__div_to_l_@cntr,w,c
 21439  014042  0FA0               	addlw	160
 21440  014044  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 21441  014046  0E20               	movlw	32
 21442  014048  6E0B               	movwf	i2__div_to_l_@cntr,c
 21443  01404A  90D8               	bcf	status,0,c
 21444  01404C  3607               	rlcf	i2__div_to_l_@quot,f,c
 21445  01404E  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 21446  014050  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 21447  014052  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 21448  014054  5004               	movf	i2__div_to_l_@f2,w,c
 21449  014056  5C01               	subwf	i2__div_to_l_@f1,w,c
 21450  014058  5005               	movf	i2__div_to_l_@f2+1,w,c
 21451  01405A  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 21452  01405C  5006               	movf	i2__div_to_l_@f2+2,w,c
 21453  01405E  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 21454  014060  5007               	movf	i2__div_to_l_@f2+3,w,c
 21455  014062  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 21456  014064  A0D8               	btfss	status,0,c
 21457  014066  D009               	goto	i2l1406
 21458  014068  5004               	movf	i2__div_to_l_@f2,w,c
 21459  01406A  5E01               	subwf	i2__div_to_l_@f1,f,c
 21460  01406C  5005               	movf	i2__div_to_l_@f2+1,w,c
 21461  01406E  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 21462  014070  5006               	movf	i2__div_to_l_@f2+2,w,c
 21463  014072  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 21464  014074  5007               	movf	i2__div_to_l_@f2+3,w,c
 21465  014076  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 21466  014078  8007               	bsf	i2__div_to_l_@quot,0,c
 21467  01407A                     i2l1406:
 21468  01407A  90D8               	bcf	status,0,c
 21469  01407C  3601               	rlcf	i2__div_to_l_@f1,f,c
 21470  01407E  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 21471  014080  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 21472  014082  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 21473  014084  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 21474  014086  D7E1               	goto	i2l1405
 21475  014088  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 21476  01408A  D016               	goto	i2l1408
 21477  01408C  500C               	movf	i2__div_to_l_@exp1,w,c
 21478  01408E  0A80               	xorlw	128
 21479  014090  0F9F               	addlw	159
 21480  014092  B0D8               	btfsc	status,0,c
 21481  014094  D009               	goto	i2l1409
 21482  014096  0E00               	movlw	0
 21483  014098  6E01               	movwf	?i2__div_to_l_,c
 21484  01409A  0E00               	movlw	0
 21485  01409C  6E02               	movwf	?i2__div_to_l_+1,c
 21486  01409E  0E00               	movlw	0
 21487  0140A0  6E03               	movwf	?i2__div_to_l_+2,c
 21488  0140A2  0E00               	movlw	0
 21489  0140A4  6E04               	movwf	?i2__div_to_l_+3,c
 21490  0140A6  0012               	return	
 21491  0140A8                     i2l1409:
 21492  0140A8  90D8               	bcf	status,0,c
 21493  0140AA  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 21494  0140AC  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 21495  0140AE  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 21496  0140B0  3207               	rrcf	i2__div_to_l_@quot,f,c
 21497  0140B2  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 21498  0140B4  D7F9               	goto	i2l1409
 21499  0140B6  D015               	goto	i2u1110_40
 21500  0140B8                     i2l1408:
 21501  0140B8  0E1F               	movlw	31
 21502  0140BA  640C               	cpfsgt	i2__div_to_l_@exp1,c
 21503  0140BC  D00F               	goto	i2l1414
 21504  0140BE  0E00               	movlw	0
 21505  0140C0  6E01               	movwf	?i2__div_to_l_,c
 21506  0140C2  0E00               	movlw	0
 21507  0140C4  6E02               	movwf	?i2__div_to_l_+1,c
 21508  0140C6  0E00               	movlw	0
 21509  0140C8  6E03               	movwf	?i2__div_to_l_+2,c
 21510  0140CA  0E00               	movlw	0
 21511  0140CC  6E04               	movwf	?i2__div_to_l_+3,c
 21512  0140CE  0012               	return	
 21513  0140D0  90D8               	bcf	status,0,c
 21514  0140D2  3607               	rlcf	i2__div_to_l_@quot,f,c
 21515  0140D4  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 21516  0140D6  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 21517  0140D8  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 21518  0140DA  060C               	decf	i2__div_to_l_@exp1,f,c
 21519  0140DC                     i2l1414:
 21520  0140DC  500C               	movf	i2__div_to_l_@exp1,w,c
 21521  0140DE  A4D8               	btfss	status,2,c
 21522  0140E0  D7F7               	goto	i2l1415
 21523  0140E2                     i2u1110_40:
 21524  0140E2  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 21525  0140E6  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 21526  0140EA  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 21527  0140EE  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 21528  0140F2  0012               	return		;funcret
 21529  0140F4                     __end_ofi2__div_to_l_:
 21530                           	opt stack 0
 21531                           tosu	equ	0xFFF
 21532                           tosh	equ	0xFFE
 21533                           tosl	equ	0xFFD
 21534                           pclatu	equ	0xFFB
 21535                           pclath	equ	0xFFA
 21536                           tblptru	equ	0xFF8
 21537                           tblptrh	equ	0xFF7
 21538                           tblptrl	equ	0xFF6
 21539                           tablat	equ	0xFF5
 21540                           prodh	equ	0xFF4
 21541                           prodl	equ	0xFF3
 21542                           intcon	equ	0xFF2
 21543                           postinc0	equ	0xFEE
 21544                           fsr0h	equ	0xFEA
 21545                           fsr0l	equ	0xFE9
 21546                           wreg	equ	0xFE8
 21547                           indf1	equ	0xFE7
 21548                           postdec1	equ	0xFE5
 21549                           fsr1h	equ	0xFE2
 21550                           fsr1l	equ	0xFE1
 21551                           bsr	equ	0xFE0
 21552                           indf2	equ	0xFDF
 21553                           postinc2	equ	0xFDE
 21554                           postdec2	equ	0xFDD
 21555                           fsr2h	equ	0xFDA
 21556                           fsr2l	equ	0xFD9
 21557                           status	equ	0xFD8
 21558                           
 21559 ;; *************** function i2___lltoft *****************
 21560 ;; Defined at:
 21561 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 21562 ;; Parameters:    Size  Location     Type
 21563 ;;  c               4    8[COMRAM] unsigned long 
 21564 ;; Auto vars:     Size  Location     Type
 21565 ;;  __lltoft        1   16[COMRAM] unsigned char 
 21566 ;; Return value:  Size  Location     Type
 21567 ;;                  3    8[COMRAM] float 
 21568 ;; Registers used:
 21569 ;;		wreg, status,2, status,0, cstack
 21570 ;; Tracked objects:
 21571 ;;		On entry : 0/0
 21572 ;;		On exit  : 0/0
 21573 ;;		Unchanged: 0/0
 21574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21575 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21577 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21578 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21579 ;;Total ram usage:        9 bytes
 21580 ;; Hardware stack levels used:    1
 21581 ;; Hardware stack levels required when called:    1
 21582 ;; This function calls:
 21583 ;;		i2___ftpack
 21584 ;; This function is called by:
 21585 ;;		i2_printf
 21586 ;; This function uses a non-reentrant model
 21587 ;;
 21588                           
 21589                           	psect	text83
 21590  01570A                     __ptext83:
 21591                           	opt stack 0
 21592  01570A                     i2___lltoft:
 21593                           	opt stack 14
 21594                           
 21595                           ;incstack = 0
 21596  01570A  0E8E               	movlw	142
 21597  01570C  6E11               	movwf	i2___lltoft@exp,c
 21598  01570E  D006               	goto	i2l1613
 21599  015710  90D8               	bcf	status,0,c
 21600  015712  320C               	rrcf	i2___lltoft@c+3,f,c
 21601  015714  320B               	rrcf	i2___lltoft@c+2,f,c
 21602  015716  320A               	rrcf	i2___lltoft@c+1,f,c
 21603  015718  3209               	rrcf	i2___lltoft@c,f,c
 21604  01571A  2A11               	incf	i2___lltoft@exp,f,c
 21605  01571C                     i2l1613:
 21606  01571C  0E00               	movlw	0
 21607  01571E  1409               	andwf	i2___lltoft@c,w,c
 21608  015720  6E0D               	movwf	??i2___lltoft& (0+255),c
 21609  015722  0E00               	movlw	0
 21610  015724  140A               	andwf	i2___lltoft@c+1,w,c
 21611  015726  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 21612  015728  0E00               	movlw	0
 21613  01572A  140B               	andwf	i2___lltoft@c+2,w,c
 21614  01572C  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 21615  01572E  0EFF               	movlw	255
 21616  015730  140C               	andwf	i2___lltoft@c+3,w,c
 21617  015732  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 21618  015734  500D               	movf	??i2___lltoft,w,c
 21619  015736  100E               	iorwf	??i2___lltoft+1,w,c
 21620  015738  100F               	iorwf	??i2___lltoft+2,w,c
 21621  01573A  1010               	iorwf	??i2___lltoft+3,w,c
 21622  01573C  A4D8               	btfss	status,2,c
 21623  01573E  D7E8               	goto	i2l1614
 21624  015740  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 21625  015744  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 21626  015748  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 21627  01574C  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 21628  015750  0E00               	movlw	0
 21629  015752  6E05               	movwf	i2___ftpack@sign,c
 21630  015754  ECE0  F0A5         	call	i2___ftpack	;wreg free
 21631  015758  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 21632  01575C  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 21633  015760  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 21634  015764  0012               	return	
 21635  015766                     __end_ofi2___lltoft:
 21636                           	opt stack 0
 21637                           tosu	equ	0xFFF
 21638                           tosh	equ	0xFFE
 21639                           tosl	equ	0xFFD
 21640                           pclatu	equ	0xFFB
 21641                           pclath	equ	0xFFA
 21642                           tblptru	equ	0xFF8
 21643                           tblptrh	equ	0xFF7
 21644                           tblptrl	equ	0xFF6
 21645                           tablat	equ	0xFF5
 21646                           prodh	equ	0xFF4
 21647                           prodl	equ	0xFF3
 21648                           intcon	equ	0xFF2
 21649                           postinc0	equ	0xFEE
 21650                           fsr0h	equ	0xFEA
 21651                           fsr0l	equ	0xFE9
 21652                           wreg	equ	0xFE8
 21653                           indf1	equ	0xFE7
 21654                           postdec1	equ	0xFE5
 21655                           fsr1h	equ	0xFE2
 21656                           fsr1l	equ	0xFE1
 21657                           bsr	equ	0xFE0
 21658                           indf2	equ	0xFDF
 21659                           postinc2	equ	0xFDE
 21660                           postdec2	equ	0xFDD
 21661                           fsr2h	equ	0xFDA
 21662                           fsr2l	equ	0xFD9
 21663                           status	equ	0xFD8
 21664                           
 21665 ;; *************** function i2___llmod *****************
 21666 ;; Defined at:
 21667 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 21668 ;; Parameters:    Size  Location     Type
 21669 ;;  dividend        4   13[COMRAM] unsigned long 
 21670 ;;  divisor         4   17[COMRAM] unsigned long 
 21671 ;; Auto vars:     Size  Location     Type
 21672 ;;  __llmod         1   21[COMRAM] unsigned char 
 21673 ;; Return value:  Size  Location     Type
 21674 ;;                  4   13[COMRAM] unsigned long 
 21675 ;; Registers used:
 21676 ;;		wreg, status,2, status,0
 21677 ;; Tracked objects:
 21678 ;;		On entry : 0/0
 21679 ;;		On exit  : 0/0
 21680 ;;		Unchanged: 0/0
 21681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21682 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21685 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21686 ;;Total ram usage:        9 bytes
 21687 ;; Hardware stack levels used:    1
 21688 ;; This function calls:
 21689 ;;		Nothing
 21690 ;; This function is called by:
 21691 ;;		i2_printf
 21692 ;; This function uses a non-reentrant model
 21693 ;;
 21694                           
 21695                           	psect	text84
 21696  015582                     __ptext84:
 21697                           	opt stack 0
 21698  015582                     i2___llmod:
 21699                           	opt stack 15
 21700                           
 21701                           ;incstack = 0
 21702  015582  5012               	movf	i2___llmod@divisor,w,c
 21703  015584  1013               	iorwf	i2___llmod@divisor+1,w,c
 21704  015586  1014               	iorwf	i2___llmod@divisor+2,w,c
 21705  015588  1015               	iorwf	i2___llmod@divisor+3,w,c
 21706  01558A  B4D8               	btfsc	status,2,c
 21707  01558C  D024               	goto	i2l1607
 21708  01558E  0E01               	movlw	1
 21709  015590  6E16               	movwf	i2___llmod@counter,c
 21710  015592  D006               	goto	i2l1602
 21711  015594  90D8               	bcf	status,0,c
 21712  015596  3612               	rlcf	i2___llmod@divisor,f,c
 21713  015598  3613               	rlcf	i2___llmod@divisor+1,f,c
 21714  01559A  3614               	rlcf	i2___llmod@divisor+2,f,c
 21715  01559C  3615               	rlcf	i2___llmod@divisor+3,f,c
 21716  01559E  2A16               	incf	i2___llmod@counter,f,c
 21717  0155A0                     i2l1602:
 21718  0155A0  AE15               	btfss	i2___llmod@divisor+3,7,c
 21719  0155A2  D7F8               	goto	i2l1603
 21720  0155A4                     i2u1126_40:
 21721  0155A4  5012               	movf	i2___llmod@divisor,w,c
 21722  0155A6  5C0E               	subwf	i2___llmod@dividend,w,c
 21723  0155A8  5013               	movf	i2___llmod@divisor+1,w,c
 21724  0155AA  580F               	subwfb	i2___llmod@dividend+1,w,c
 21725  0155AC  5014               	movf	i2___llmod@divisor+2,w,c
 21726  0155AE  5810               	subwfb	i2___llmod@dividend+2,w,c
 21727  0155B0  5015               	movf	i2___llmod@divisor+3,w,c
 21728  0155B2  5811               	subwfb	i2___llmod@dividend+3,w,c
 21729  0155B4  A0D8               	btfss	status,0,c
 21730  0155B6  D008               	goto	i2l1606
 21731  0155B8  5012               	movf	i2___llmod@divisor,w,c
 21732  0155BA  5E0E               	subwf	i2___llmod@dividend,f,c
 21733  0155BC  5013               	movf	i2___llmod@divisor+1,w,c
 21734  0155BE  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 21735  0155C0  5014               	movf	i2___llmod@divisor+2,w,c
 21736  0155C2  5A10               	subwfb	i2___llmod@dividend+2,f,c
 21737  0155C4  5015               	movf	i2___llmod@divisor+3,w,c
 21738  0155C6  5A11               	subwfb	i2___llmod@dividend+3,f,c
 21739  0155C8                     i2l1606:
 21740  0155C8  90D8               	bcf	status,0,c
 21741  0155CA  3215               	rrcf	i2___llmod@divisor+3,f,c
 21742  0155CC  3214               	rrcf	i2___llmod@divisor+2,f,c
 21743  0155CE  3213               	rrcf	i2___llmod@divisor+1,f,c
 21744  0155D0  3212               	rrcf	i2___llmod@divisor,f,c
 21745  0155D2  2E16               	decfsz	i2___llmod@counter,f,c
 21746  0155D4  D7E7               	goto	i2u1126_40
 21747  0155D6                     i2l1607:
 21748  0155D6  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 21749  0155DA  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 21750  0155DE  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 21751  0155E2  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 21752  0155E6  0012               	return		;funcret
 21753  0155E8                     __end_ofi2___llmod:
 21754                           	opt stack 0
 21755                           tosu	equ	0xFFF
 21756                           tosh	equ	0xFFE
 21757                           tosl	equ	0xFFD
 21758                           pclatu	equ	0xFFB
 21759                           pclath	equ	0xFFA
 21760                           tblptru	equ	0xFF8
 21761                           tblptrh	equ	0xFF7
 21762                           tblptrl	equ	0xFF6
 21763                           tablat	equ	0xFF5
 21764                           prodh	equ	0xFF4
 21765                           prodl	equ	0xFF3
 21766                           intcon	equ	0xFF2
 21767                           postinc0	equ	0xFEE
 21768                           fsr0h	equ	0xFEA
 21769                           fsr0l	equ	0xFE9
 21770                           wreg	equ	0xFE8
 21771                           indf1	equ	0xFE7
 21772                           postdec1	equ	0xFE5
 21773                           fsr1h	equ	0xFE2
 21774                           fsr1l	equ	0xFE1
 21775                           bsr	equ	0xFE0
 21776                           indf2	equ	0xFDF
 21777                           postinc2	equ	0xFDE
 21778                           postdec2	equ	0xFDD
 21779                           fsr2h	equ	0xFDA
 21780                           fsr2l	equ	0xFD9
 21781                           status	equ	0xFD8
 21782                           
 21783 ;; *************** function i2___lldiv *****************
 21784 ;; Defined at:
 21785 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 21786 ;; Parameters:    Size  Location     Type
 21787 ;;  dividend        4    0[COMRAM] unsigned long 
 21788 ;;  divisor         4    4[COMRAM] unsigned long 
 21789 ;; Auto vars:     Size  Location     Type
 21790 ;;  __lldiv         4    8[COMRAM] unsigned long 
 21791 ;;  __lldiv         1   12[COMRAM] unsigned char 
 21792 ;; Return value:  Size  Location     Type
 21793 ;;                  4    0[COMRAM] unsigned long 
 21794 ;; Registers used:
 21795 ;;		wreg, status,2, status,0
 21796 ;; Tracked objects:
 21797 ;;		On entry : 0/0
 21798 ;;		On exit  : 0/0
 21799 ;;		Unchanged: 0/0
 21800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21801 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21802 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21804 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21805 ;;Total ram usage:       13 bytes
 21806 ;; Hardware stack levels used:    1
 21807 ;; This function calls:
 21808 ;;		Nothing
 21809 ;; This function is called by:
 21810 ;;		i2_printf
 21811 ;; This function uses a non-reentrant model
 21812 ;;
 21813                           
 21814                           	psect	text85
 21815  015186                     __ptext85:
 21816                           	opt stack 0
 21817  015186                     i2___lldiv:
 21818                           	opt stack 15
 21819                           
 21820                           ;incstack = 0
 21821  015186  0E00               	movlw	0
 21822  015188  6E09               	movwf	i2___lldiv@quotient,c
 21823  01518A  0E00               	movlw	0
 21824  01518C  6E0A               	movwf	i2___lldiv@quotient+1,c
 21825  01518E  0E00               	movlw	0
 21826  015190  6E0B               	movwf	i2___lldiv@quotient+2,c
 21827  015192  0E00               	movlw	0
 21828  015194  6E0C               	movwf	i2___lldiv@quotient+3,c
 21829  015196  5005               	movf	i2___lldiv@divisor,w,c
 21830  015198  1006               	iorwf	i2___lldiv@divisor+1,w,c
 21831  01519A  1007               	iorwf	i2___lldiv@divisor+2,w,c
 21832  01519C  1008               	iorwf	i2___lldiv@divisor+3,w,c
 21833  01519E  B4D8               	btfsc	status,2,c
 21834  0151A0  D02A               	goto	i2l1597
 21835  0151A2  0E01               	movlw	1
 21836  0151A4  6E0D               	movwf	i2___lldiv@counter,c
 21837  0151A6  D006               	goto	i2l1592
 21838  0151A8  90D8               	bcf	status,0,c
 21839  0151AA  3605               	rlcf	i2___lldiv@divisor,f,c
 21840  0151AC  3606               	rlcf	i2___lldiv@divisor+1,f,c
 21841  0151AE  3607               	rlcf	i2___lldiv@divisor+2,f,c
 21842  0151B0  3608               	rlcf	i2___lldiv@divisor+3,f,c
 21843  0151B2  2A0D               	incf	i2___lldiv@counter,f,c
 21844  0151B4                     i2l1592:
 21845  0151B4  AE08               	btfss	i2___lldiv@divisor+3,7,c
 21846  0151B6  D7F8               	goto	i2l1593
 21847  0151B8                     i2u1123_40:
 21848  0151B8  90D8               	bcf	status,0,c
 21849  0151BA  3609               	rlcf	i2___lldiv@quotient,f,c
 21850  0151BC  360A               	rlcf	i2___lldiv@quotient+1,f,c
 21851  0151BE  360B               	rlcf	i2___lldiv@quotient+2,f,c
 21852  0151C0  360C               	rlcf	i2___lldiv@quotient+3,f,c
 21853  0151C2  5005               	movf	i2___lldiv@divisor,w,c
 21854  0151C4  5C01               	subwf	i2___lldiv@dividend,w,c
 21855  0151C6  5006               	movf	i2___lldiv@divisor+1,w,c
 21856  0151C8  5802               	subwfb	i2___lldiv@dividend+1,w,c
 21857  0151CA  5007               	movf	i2___lldiv@divisor+2,w,c
 21858  0151CC  5803               	subwfb	i2___lldiv@dividend+2,w,c
 21859  0151CE  5008               	movf	i2___lldiv@divisor+3,w,c
 21860  0151D0  5804               	subwfb	i2___lldiv@dividend+3,w,c
 21861  0151D2  A0D8               	btfss	status,0,c
 21862  0151D4  D009               	goto	i2l1596
 21863  0151D6  5005               	movf	i2___lldiv@divisor,w,c
 21864  0151D8  5E01               	subwf	i2___lldiv@dividend,f,c
 21865  0151DA  5006               	movf	i2___lldiv@divisor+1,w,c
 21866  0151DC  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 21867  0151DE  5007               	movf	i2___lldiv@divisor+2,w,c
 21868  0151E0  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 21869  0151E2  5008               	movf	i2___lldiv@divisor+3,w,c
 21870  0151E4  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 21871  0151E6  8009               	bsf	i2___lldiv@quotient,0,c
 21872  0151E8                     i2l1596:
 21873  0151E8  90D8               	bcf	status,0,c
 21874  0151EA  3208               	rrcf	i2___lldiv@divisor+3,f,c
 21875  0151EC  3207               	rrcf	i2___lldiv@divisor+2,f,c
 21876  0151EE  3206               	rrcf	i2___lldiv@divisor+1,f,c
 21877  0151F0  3205               	rrcf	i2___lldiv@divisor,f,c
 21878  0151F2  2E0D               	decfsz	i2___lldiv@counter,f,c
 21879  0151F4  D7E1               	goto	i2u1123_40
 21880  0151F6                     i2l1597:
 21881  0151F6  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 21882  0151FA  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 21883  0151FE  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 21884  015202  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 21885  015206  0012               	return		;funcret
 21886  015208                     __end_ofi2___lldiv:
 21887                           	opt stack 0
 21888                           tosu	equ	0xFFF
 21889                           tosh	equ	0xFFE
 21890                           tosl	equ	0xFFD
 21891                           pclatu	equ	0xFFB
 21892                           pclath	equ	0xFFA
 21893                           tblptru	equ	0xFF8
 21894                           tblptrh	equ	0xFF7
 21895                           tblptrl	equ	0xFF6
 21896                           tablat	equ	0xFF5
 21897                           prodh	equ	0xFF4
 21898                           prodl	equ	0xFF3
 21899                           intcon	equ	0xFF2
 21900                           postinc0	equ	0xFEE
 21901                           fsr0h	equ	0xFEA
 21902                           fsr0l	equ	0xFE9
 21903                           wreg	equ	0xFE8
 21904                           indf1	equ	0xFE7
 21905                           postdec1	equ	0xFE5
 21906                           fsr1h	equ	0xFE2
 21907                           fsr1l	equ	0xFE1
 21908                           bsr	equ	0xFE0
 21909                           indf2	equ	0xFDF
 21910                           postinc2	equ	0xFDE
 21911                           postdec2	equ	0xFDD
 21912                           fsr2h	equ	0xFDA
 21913                           fsr2l	equ	0xFD9
 21914                           status	equ	0xFD8
 21915                           
 21916 ;; *************** function _ADCC_ISR *****************
 21917 ;; Defined at:
 21918 ;;		line 297 in file "mcc_generated_files/adcc.c"
 21919 ;; Parameters:    Size  Location     Type
 21920 ;;		None
 21921 ;; Auto vars:     Size  Location     Type
 21922 ;;		None
 21923 ;; Return value:  Size  Location     Type
 21924 ;;                  1    wreg      void 
 21925 ;; Registers used:
 21926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21927 ;; Tracked objects:
 21928 ;;		On entry : 0/0
 21929 ;;		On exit  : 0/0
 21930 ;;		Unchanged: 0/0
 21931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21936 ;;Total ram usage:        0 bytes
 21937 ;; Hardware stack levels used:    1
 21938 ;; Hardware stack levels required when called:    8
 21939 ;; This function calls:
 21940 ;;		Absolute function
 21941 ;;		_ADCC_DefaultInterruptHandler
 21942 ;;		_ADC_postProcessingCallback
 21943 ;; This function is called by:
 21944 ;;		_INTERRUPT_InterruptManagerHigh
 21945 ;; This function uses a non-reentrant model
 21946 ;;
 21947                           
 21948                           	psect	text86
 21949  015D64                     __ptext86:
 21950                           	opt stack 0
 21951  015D64                     _ADCC_ISR:
 21952                           	opt stack 9
 21953                           
 21954                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 21955                           
 21956                           ;incstack = 0
 21957  015D64  010E               	movlb	14	; () banked
 21958  015D66  9134               	bcf	52,0,b	;volatile
 21959                           
 21960                           ; BSR set to: 14
 21961                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 21962  015D68  0100               	movlb	0	; () banked
 21963  015D6A  51D1               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21964  015D6C  11D2               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21965  015D6E  11D3               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21966  015D70  B4D8               	btfsc	status,2,c
 21967  015D72  0012               	return	
 21968                           
 21969                           ; BSR set to: 0
 21970                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 21971  015D74  D801               	call	i2u1559_48
 21972  015D76  0012               	return	
 21973  015D78                     i2u1559_48:
 21974  015D78  0005               	push	
 21975  015D7A  6EFA               	movwf	pclath,c
 21976  015D7C  51D1               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 21977  015D7E  6EFD               	movwf	tosl,c
 21978  015D80  51D2               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 21979  015D82  6EFE               	movwf	tosh,c
 21980  015D84  51D3               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 21981  015D86  6EFF               	movwf	tosu,c
 21982  015D88  50FA               	movf	pclath,w,c
 21983  015D8A  0012               	return		;indir
 21984  015D8C                     __end_of_ADCC_ISR:
 21985                           	opt stack 0
 21986                           tosu	equ	0xFFF
 21987                           tosh	equ	0xFFE
 21988                           tosl	equ	0xFFD
 21989                           pclatu	equ	0xFFB
 21990                           pclath	equ	0xFFA
 21991                           tblptru	equ	0xFF8
 21992                           tblptrh	equ	0xFF7
 21993                           tblptrl	equ	0xFF6
 21994                           tablat	equ	0xFF5
 21995                           prodh	equ	0xFF4
 21996                           prodl	equ	0xFF3
 21997                           intcon	equ	0xFF2
 21998                           postinc0	equ	0xFEE
 21999                           fsr0h	equ	0xFEA
 22000                           fsr0l	equ	0xFE9
 22001                           wreg	equ	0xFE8
 22002                           indf1	equ	0xFE7
 22003                           postdec1	equ	0xFE5
 22004                           fsr1h	equ	0xFE2
 22005                           fsr1l	equ	0xFE1
 22006                           bsr	equ	0xFE0
 22007                           indf2	equ	0xFDF
 22008                           postinc2	equ	0xFDE
 22009                           postdec2	equ	0xFDD
 22010                           fsr2h	equ	0xFDA
 22011                           fsr2l	equ	0xFD9
 22012                           status	equ	0xFD8
 22013                           
 22014 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 22015 ;; Defined at:
 22016 ;;		line 310 in file "mcc_generated_files/adcc.c"
 22017 ;; Parameters:    Size  Location     Type
 22018 ;;		None
 22019 ;; Auto vars:     Size  Location     Type
 22020 ;;		None
 22021 ;; Return value:  Size  Location     Type
 22022 ;;                  1    wreg      void 
 22023 ;; Registers used:
 22024 ;;		None
 22025 ;; Tracked objects:
 22026 ;;		On entry : 0/0
 22027 ;;		On exit  : 0/0
 22028 ;;		Unchanged: 0/0
 22029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22034 ;;Total ram usage:        0 bytes
 22035 ;; Hardware stack levels used:    1
 22036 ;; This function calls:
 22037 ;;		Nothing
 22038 ;; This function is called by:
 22039 ;;		_ADCC_Initialize
 22040 ;;		_ADCC_ISR
 22041 ;; This function uses a non-reentrant model
 22042 ;;
 22043                           
 22044                           	psect	text87
 22045  015FDC                     __ptext87:
 22046                           	opt stack 0
 22047  015FDC                     _ADCC_DefaultInterruptHandler:
 22048                           	opt stack 16
 22049                           
 22050                           ;incstack = 0
 22051  015FDC  0012               	return		;funcret
 22052  015FDE                     __end_of_ADCC_DefaultInterruptHandler:
 22053                           	opt stack 0
 22054                           tosu	equ	0xFFF
 22055                           tosh	equ	0xFFE
 22056                           tosl	equ	0xFFD
 22057                           pclatu	equ	0xFFB
 22058                           pclath	equ	0xFFA
 22059                           tblptru	equ	0xFF8
 22060                           tblptrh	equ	0xFF7
 22061                           tblptrl	equ	0xFF6
 22062                           tablat	equ	0xFF5
 22063                           prodh	equ	0xFF4
 22064                           prodl	equ	0xFF3
 22065                           intcon	equ	0xFF2
 22066                           postinc0	equ	0xFEE
 22067                           fsr0h	equ	0xFEA
 22068                           fsr0l	equ	0xFE9
 22069                           wreg	equ	0xFE8
 22070                           indf1	equ	0xFE7
 22071                           postdec1	equ	0xFE5
 22072                           fsr1h	equ	0xFE2
 22073                           fsr1l	equ	0xFE1
 22074                           bsr	equ	0xFE0
 22075                           indf2	equ	0xFDF
 22076                           postinc2	equ	0xFDE
 22077                           postdec2	equ	0xFDD
 22078                           fsr2h	equ	0xFDA
 22079                           fsr2l	equ	0xFD9
 22080                           status	equ	0xFD8
 22081                           
 22082 ;; *************** function _ADC_postProcessingCallback *****************
 22083 ;; Defined at:
 22084 ;;		line 136 in file "main.c"
 22085 ;; Parameters:    Size  Location     Type
 22086 ;;		None
 22087 ;; Auto vars:     Size  Location     Type
 22088 ;;  currentADCCh    1   79[BANK0 ] enum E17343
 22089 ;; Return value:  Size  Location     Type
 22090 ;;                  1    wreg      void 
 22091 ;; Registers used:
 22092 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22093 ;; Tracked objects:
 22094 ;;		On entry : 0/0
 22095 ;;		On exit  : 0/0
 22096 ;;		Unchanged: 0/0
 22097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22099 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22101 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22102 ;;Total ram usage:       13 bytes
 22103 ;; Hardware stack levels used:    1
 22104 ;; Hardware stack levels required when called:    7
 22105 ;; This function calls:
 22106 ;;		_ADCC_GetConversionResult
 22107 ;;		___lwtoft
 22108 ;;		_currentMeasuredToPeak
 22109 ;;		_peakToRMS
 22110 ;;		i2___ftadd
 22111 ;;		i2___ftdiv
 22112 ;;		i2___ftmul
 22113 ;;		i2___ftneg
 22114 ;; This function is called by:
 22115 ;;		_main
 22116 ;;		_ADCC_ISR
 22117 ;; This function uses a non-reentrant model
 22118 ;;
 22119                           
 22120                           	psect	text88
 22121  012280                     __ptext88:
 22122                           	opt stack 0
 22123  012280                     _ADC_postProcessingCallback:
 22124                           	opt stack 9
 22125                           
 22126                           ;main.c: 138: adcc_channel_t currentADCChannel = ADPCH;
 22127                           
 22128                           ;incstack = 0
 22129  012280  CF5F F0AF          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 22130                           
 22131                           ;main.c: 140: switch (currentADCChannel) {
 22132  012284  D1F2               	goto	i2l743
 22133  012286                     
 22134                           ;main.c: 144: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 22135  012286  EC6D  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22136  01228A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22137  01228E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22138  012292  EC11  F0AF         	call	___lwtoft	;wreg free
 22139  012296  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22140  01229A  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22141  01229E  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22142  0122A2  0E68               	movlw	104
 22143  0122A4  6E2A               	movwf	i2___ftmul@f2,c
 22144  0122A6  0E53               	movlw	83
 22145  0122A8  6E2B               	movwf	i2___ftmul@f2+1,c
 22146  0122AA  0E3B               	movlw	59
 22147  0122AC  6E2C               	movwf	i2___ftmul@f2+2,c
 22148  0122AE  EC79  F0A2         	call	i2___ftmul	;wreg free
 22149  0122B2  C027  F0E2         	movff	?i2___ftmul,_FVR_ADC_Result
 22150  0122B6  C028  F0E3         	movff	?i2___ftmul+1,_FVR_ADC_Result+1
 22151  0122BA  C029  F0E4         	movff	?i2___ftmul+2,_FVR_ADC_Result+2
 22152                           
 22153                           ;main.c: 145: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 22154  0122BE  0E12               	movlw	18
 22155  0122C0  6E15               	movwf	i2___ftdiv@f1,c
 22156  0122C2  0E03               	movlw	3
 22157  0122C4  6E16               	movwf	i2___ftdiv@f1+1,c
 22158  0122C6  0E40               	movlw	64
 22159  0122C8  6E17               	movwf	i2___ftdiv@f1+2,c
 22160  0122CA  C0E2  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2
 22161  0122CE  C0E3  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1
 22162  0122D2  C0E4  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2
 22163  0122D6  EC67  F0A3         	call	i2___ftdiv	;wreg free
 22164  0122DA  C015  F0CE         	movff	?i2___ftdiv,_ADC_Result_Scaling
 22165  0122DE  C016  F0CF         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1
 22166  0122E2  C017  F0D0         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2
 22167                           
 22168                           ;main.c: 146: break;
 22169  0122E6  0012               	return	
 22170  0122E8                     
 22171                           ;main.c: 150: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 22172  0122E8  C0CE  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2
 22173  0122EC  C0CF  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1
 22174  0122F0  C0D0  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2
 22175  0122F4  EC6D  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22176  0122F8  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22177  0122FC  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22178  012300  EC11  F0AF         	call	___lwtoft	;wreg free
 22179  012304  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22180  012308  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22181  01230C  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22182  012310  EC79  F0A2         	call	i2___ftmul	;wreg free
 22183  012314  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3312
 22184  012318  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3312+1
 22185  01231C  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3312+2
 22186                           
 22187                           ;main.c: 150: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 22188  012320  C0B0  F027         	movff	_ADC_postProcessingCallback$3312,i2___ftmul@f1
 22189  012324  C0B1  F028         	movff	_ADC_postProcessingCallback$3312+1,i2___ftmul@f1+1
 22190  012328  C0B2  F029         	movff	_ADC_postProcessingCallback$3312+2,i2___ftmul@f1+2
 22191  01232C  0E68               	movlw	104
 22192  01232E  6E2A               	movwf	i2___ftmul@f2,c
 22193  012330  0ED3               	movlw	211
 22194  012332  6E2B               	movwf	i2___ftmul@f2+1,c
 22195  012334  0E3B               	movlw	59
 22196  012336  6E2C               	movwf	i2___ftmul@f2+2,c
 22197  012338  EC79  F0A2         	call	i2___ftmul	;wreg free
 22198  01233C  C027  F0CB         	movff	?i2___ftmul,_POS3P3_ADC_Result
 22199  012340  C028  F0CC         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1
 22200  012344  C029  F0CD         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2
 22201                           
 22202                           ;main.c: 151: break;
 22203  012348  0012               	return	
 22204  01234A                     
 22205                           ;main.c: 154: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 22206  01234A  0EC0               	movlw	192
 22207  01234C  6E18               	movwf	i2___ftdiv@f2,c
 22208  01234E  0E7F               	movlw	127
 22209  012350  6E19               	movwf	i2___ftdiv@f2+1,c
 22210  012352  0E44               	movlw	68
 22211  012354  6E1A               	movwf	i2___ftdiv@f2+2,c
 22212  012356  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22213  01235A  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22214  01235E  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22215  012362  EC67  F0A3         	call	i2___ftdiv	;wreg free
 22216  012366  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22217  01236A  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22218  01236E  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22219  012372  EC6D  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22220  012376  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22221  01237A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22222  01237E  EC11  F0AF         	call	___lwtoft	;wreg free
 22223  012382  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22224  012386  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22225  01238A  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22226  01238E  EC79  F0A2         	call	i2___ftmul	;wreg free
 22227  012392  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3312
 22228  012396  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3312+1
 22229  01239A  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3312+2
 22230                           
 22231                           ;main.c: 154: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 22232  01239E  C0B0  F027         	movff	_ADC_postProcessingCallback$3312,i2___ftmul@f1
 22233  0123A2  C0B1  F028         	movff	_ADC_postProcessingCallback$3312+1,i2___ftmul@f1+1
 22234  0123A6  C0B2  F029         	movff	_ADC_postProcessingCallback$3312+2,i2___ftmul@f1+2
 22235  0123AA  0E5E               	movlw	94
 22236  0123AC  6E2A               	movwf	i2___ftmul@f2,c
 22237  0123AE  0EF2               	movlw	242
 22238  0123B0  6E2B               	movwf	i2___ftmul@f2+1,c
 22239  0123B2  0E3F               	movlw	63
 22240  0123B4  6E2C               	movwf	i2___ftmul@f2+2,c
 22241  0123B6  EC79  F0A2         	call	i2___ftmul	;wreg free
 22242  0123BA  C027  F0C5         	movff	?i2___ftmul,_Imeas
 22243  0123BE  C028  F0C6         	movff	?i2___ftmul+1,_Imeas+1
 22244  0123C2  C029  F0C7         	movff	?i2___ftmul+2,_Imeas+2
 22245                           
 22246                           ;main.c: 158: if (LATGbits.LATG0 != 1) {
 22247  0123C6  B07F               	btfsc	3967,0,c	;volatile
 22248  0123C8  D03D               	goto	i2l748
 22249                           
 22250                           ;main.c: 160: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 22251  0123CA  C0C5  F073         	movff	_Imeas,currentMeasuredToPeak@Measured
 22252  0123CE  C0C6  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1
 22253  0123D2  C0C7  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2
 22254  0123D6  C0DF  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle
 22255  0123DA  C0E0  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1
 22256  0123DE  C0E1  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2
 22257  0123E2  EC26  F0AB         	call	_currentMeasuredToPeak	;wreg free
 22258  0123E6  C073  F0C8         	movff	?_currentMeasuredToPeak,_Ipk
 22259  0123EA  C074  F0C9         	movff	?_currentMeasuredToPeak+1,_Ipk+1
 22260  0123EE  C075  F0CA         	movff	?_currentMeasuredToPeak+2,_Ipk+2
 22261                           
 22262                           ;main.c: 161: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 22263  0123F2  C0C8  F094         	movff	_Ipk,peakToRMS@Peak
 22264  0123F6  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1
 22265  0123FA  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2
 22266  0123FE  C0DF  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle
 22267  012402  C0E0  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1
 22268  012406  C0E1  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2
 22269  01240A  ECE4  F099         	call	_peakToRMS	;wreg free
 22270  01240E  C094  F1C4         	movff	?_peakToRMS,_Irms
 22271  012412  C095  F1C5         	movff	?_peakToRMS+1,_Irms+1
 22272  012416  C096  F1C6         	movff	?_peakToRMS+2,_Irms+2
 22273                           
 22274                           ;main.c: 162: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 22275  01241A  C0E5  F094         	movff	_Vpk,peakToRMS@Peak
 22276  01241E  C0E6  F095         	movff	_Vpk+1,peakToRMS@Peak+1
 22277  012422  C0E7  F096         	movff	_Vpk+2,peakToRMS@Peak+2
 22278  012426  C0DF  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle
 22279  01242A  C0E0  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1
 22280  01242E  C0E1  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2
 22281  012432  ECE4  F099         	call	_peakToRMS	;wreg free
 22282  012436  C094  F1C1         	movff	?_peakToRMS,_Vrms
 22283  01243A  C095  F1C2         	movff	?_peakToRMS+1,_Vrms+1
 22284  01243E  C096  F1C3         	movff	?_peakToRMS+2,_Vrms+2
 22285                           
 22286                           ;main.c: 164: }
 22287  012442  0012               	return	
 22288  012444                     i2l748:
 22289                           
 22290                           ;main.c: 167: else {
 22291                           ;main.c: 169: Ipk = Imeas;
 22292  012444  C0C5  F0C8         	movff	_Imeas,_Ipk
 22293  012448  C0C6  F0C9         	movff	_Imeas+1,_Ipk+1
 22294  01244C  C0C7  F0CA         	movff	_Imeas+2,_Ipk+2
 22295                           
 22296                           ;main.c: 170: Irms = peakToRMS(Ipk, 0.0);
 22297  012450  C0C8  F094         	movff	_Ipk,peakToRMS@Peak
 22298  012454  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1
 22299  012458  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2
 22300  01245C  0E00               	movlw	0
 22301  01245E  0100               	movlb	0	; () banked
 22302  012460  6F97               	movwf	peakToRMS@Angle& (0+255),b
 22303  012462  0E00               	movlw	0
 22304  012464  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 22305  012466  0E00               	movlw	0
 22306  012468  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 22307  01246A  ECE4  F099         	call	_peakToRMS	;wreg free
 22308  01246E  C094  F1C4         	movff	?_peakToRMS,_Irms
 22309  012472  C095  F1C5         	movff	?_peakToRMS+1,_Irms+1
 22310  012476  C096  F1C6         	movff	?_peakToRMS+2,_Irms+2
 22311                           
 22312                           ;main.c: 171: Vrms = peakToRMS(Vpk, 0.0);
 22313  01247A  C0E5  F094         	movff	_Vpk,peakToRMS@Peak
 22314  01247E  C0E6  F095         	movff	_Vpk+1,peakToRMS@Peak+1
 22315  012482  C0E7  F096         	movff	_Vpk+2,peakToRMS@Peak+2
 22316  012486  0E00               	movlw	0
 22317  012488  0100               	movlb	0	; () banked
 22318  01248A  6F97               	movwf	peakToRMS@Angle& (0+255),b
 22319  01248C  0E00               	movlw	0
 22320  01248E  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 22321  012490  0E00               	movlw	0
 22322  012492  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 22323  012494  ECE4  F099         	call	_peakToRMS	;wreg free
 22324  012498  C094  F1C1         	movff	?_peakToRMS,_Vrms
 22325  01249C  C095  F1C2         	movff	?_peakToRMS+1,_Vrms+1
 22326  0124A0  C096  F1C3         	movff	?_peakToRMS+2,_Vrms+2
 22327                           
 22328                           ;main.c: 173: }
 22329                           ;main.c: 177: break;
 22330  0124A4  0012               	return	
 22331  0124A6                     
 22332                           ;main.c: 181: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 22333  0124A6  0EC0               	movlw	192
 22334  0124A8  6E18               	movwf	i2___ftdiv@f2,c
 22335  0124AA  0E7F               	movlw	127
 22336  0124AC  6E19               	movwf	i2___ftdiv@f2+1,c
 22337  0124AE  0E44               	movlw	68
 22338  0124B0  6E1A               	movwf	i2___ftdiv@f2+2,c
 22339  0124B2  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22340  0124B6  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22341  0124BA  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22342  0124BE  EC67  F0A3         	call	i2___ftdiv	;wreg free
 22343  0124C2  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22344  0124C6  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22345  0124CA  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22346  0124CE  EC6D  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22347  0124D2  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22348  0124D6  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22349  0124DA  EC11  F0AF         	call	___lwtoft	;wreg free
 22350  0124DE  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22351  0124E2  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22352  0124E6  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22353  0124EA  EC79  F0A2         	call	i2___ftmul	;wreg free
 22354  0124EE  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3312
 22355  0124F2  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3312+1
 22356  0124F6  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3312+2
 22357                           
 22358                           ;main.c: 181: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 22359  0124FA  C0B0  F027         	movff	_ADC_postProcessingCallback$3312,i2___ftmul@f1
 22360  0124FE  C0B1  F028         	movff	_ADC_postProcessingCallback$3312+1,i2___ftmul@f1+1
 22361  012502  C0B2  F029         	movff	_ADC_postProcessingCallback$3312+2,i2___ftmul@f1+2
 22362  012506  0EF8               	movlw	248
 22363  012508  6E2A               	movwf	i2___ftmul@f2,c
 22364  01250A  0E80               	movlw	128
 22365  01250C  6E2B               	movwf	i2___ftmul@f2+1,c
 22366  01250E  0E40               	movlw	64
 22367  012510  6E2C               	movwf	i2___ftmul@f2+2,c
 22368  012512  EC79  F0A2         	call	i2___ftmul	;wreg free
 22369  012516  C027  F1CA         	movff	?i2___ftmul,_POS12_ADC_Result
 22370  01251A  C028  F1CB         	movff	?i2___ftmul+1,_POS12_ADC_Result+1
 22371  01251E  C029  F1CC         	movff	?i2___ftmul+2,_POS12_ADC_Result+2
 22372                           
 22373                           ;main.c: 182: break;
 22374  012522  0012               	return	
 22375  012524                     
 22376                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22377  012524  0E00               	movlw	0
 22378  012526  6E18               	movwf	i2___ftdiv@f2,c
 22379  012528  0E00               	movlw	0
 22380  01252A  6E19               	movwf	i2___ftdiv@f2+1,c
 22381  01252C  0E40               	movlw	64
 22382  01252E  6E1A               	movwf	i2___ftdiv@f2+2,c
 22383  012530  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22384  012534  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22385  012538  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22386  01253C  EC67  F0A3         	call	i2___ftdiv	;wreg free
 22387  012540  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22388  012544  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22389  012548  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22390  01254C  0E00               	movlw	0
 22391  01254E  6E43               	movwf	i2___ftadd@f2,c
 22392  012550  0E80               	movlw	128
 22393  012552  6E44               	movwf	i2___ftadd@f2+1,c
 22394  012554  0E3F               	movlw	63
 22395  012556  6E45               	movwf	i2___ftadd@f2+2,c
 22396  012558  0EC0               	movlw	192
 22397  01255A  6E18               	movwf	i2___ftdiv@f2,c
 22398  01255C  0E7F               	movlw	127
 22399  01255E  6E19               	movwf	i2___ftdiv@f2+1,c
 22400  012560  0E44               	movlw	68
 22401  012562  6E1A               	movwf	i2___ftdiv@f2+2,c
 22402  012564  EC6D  F0AF         	call	_ADCC_GetConversionResult	;wreg free
 22403  012568  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22404  01256C  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22405  012570  EC11  F0AF         	call	___lwtoft	;wreg free
 22406  012574  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 22407  012578  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 22408  01257C  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 22409  012580  EC67  F0A3         	call	i2___ftdiv	;wreg free
 22410  012584  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 22411  012588  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 22412  01258C  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 22413  012590  ECFF  F0AE         	call	i2___ftneg	;wreg free
 22414  012594  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22415  012598  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22416  01259C  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22417  0125A0  EC7F  F09C         	call	i2___ftadd	;wreg free
 22418  0125A4  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 22419  0125A8  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 22420  0125AC  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 22421  0125B0  EC79  F0A2         	call	i2___ftmul	;wreg free
 22422  0125B4  C027  F0A6         	movff	?i2___ftmul,_ADC_postProcessingCallback$3313
 22423  0125B8  C028  F0A7         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3313+1
 22424  0125BC  C029  F0A8         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3313+2
 22425                           
 22426                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22427  0125C0  0E04               	movlw	4
 22428  0125C2  6E18               	movwf	i2___ftdiv@f2,c
 22429  0125C4  0EAD               	movlw	173
 22430  0125C6  6E19               	movwf	i2___ftdiv@f2+1,c
 22431  0125C8  0E3A               	movlw	58
 22432  0125CA  6E1A               	movwf	i2___ftdiv@f2+2,c
 22433  0125CC  0EB4               	movlw	180
 22434  0125CE  6E43               	movwf	i2___ftadd@f2,c
 22435  0125D0  0E28               	movlw	40
 22436  0125D2  6E44               	movwf	i2___ftadd@f2+1,c
 22437  0125D4  0E3F               	movlw	63
 22438  0125D6  6E45               	movwf	i2___ftadd@f2+2,c
 22439  0125D8  C0A6  F024         	movff	_ADC_postProcessingCallback$3313,i2___ftneg@f1
 22440  0125DC  C0A7  F025         	movff	_ADC_postProcessingCallback$3313+1,i2___ftneg@f1+1
 22441  0125E0  C0A8  F026         	movff	_ADC_postProcessingCallback$3313+2,i2___ftneg@f1+2
 22442  0125E4  ECFF  F0AE         	call	i2___ftneg	;wreg free
 22443  0125E8  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22444  0125EC  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22445  0125F0  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22446  0125F4  EC7F  F09C         	call	i2___ftadd	;wreg free
 22447  0125F8  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 22448  0125FC  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 22449  012600  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 22450  012604  EC67  F0A3         	call	i2___ftdiv	;wreg free
 22451  012608  C015  F0A9         	movff	?i2___ftdiv,_ADC_postProcessingCallback$3314
 22452  01260C  C016  F0AA         	movff	?i2___ftdiv+1,_ADC_postProcessingCallback$3314+1
 22453  012610  C017  F0AB         	movff	?i2___ftdiv+2,_ADC_postProcessingCallback$3314+2
 22454                           
 22455                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22456  012614  C0E8  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2
 22457  012618  C0E9  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1
 22458  01261C  C0EA  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2
 22459  012620  C0A9  F040         	movff	_ADC_postProcessingCallback$3314,i2___ftadd@f1
 22460  012624  C0AA  F041         	movff	_ADC_postProcessingCallback$3314+1,i2___ftadd@f1+1
 22461  012628  C0AB  F042         	movff	_ADC_postProcessingCallback$3314+2,i2___ftadd@f1+2
 22462  01262C  EC7F  F09C         	call	i2___ftadd	;wreg free
 22463  012630  C040  F0AC         	movff	?i2___ftadd,_ADC_postProcessingCallback$3315
 22464  012634  C041  F0AD         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$3315+1
 22465  012638  C042  F0AE         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$3315+2
 22466                           
 22467                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22468  01263C  C0AC  F040         	movff	_ADC_postProcessingCallback$3315,i2___ftadd@f1
 22469  012640  C0AD  F041         	movff	_ADC_postProcessingCallback$3315+1,i2___ftadd@f1+1
 22470  012644  C0AE  F042         	movff	_ADC_postProcessingCallback$3315+2,i2___ftadd@f1+2
 22471  012648  0E00               	movlw	0
 22472  01264A  6E43               	movwf	i2___ftadd@f2,c
 22473  01264C  0E20               	movlw	32
 22474  01264E  6E44               	movwf	i2___ftadd@f2+1,c
 22475  012650  0EC2               	movlw	194
 22476  012652  6E45               	movwf	i2___ftadd@f2+2,c
 22477  012654  EC7F  F09C         	call	i2___ftadd	;wreg free
 22478  012658  C040  F1C7         	movff	?i2___ftadd,_Temp_ADC_Result
 22479  01265C  C041  F1C8         	movff	?i2___ftadd+1,_Temp_ADC_Result+1
 22480  012660  C042  F1C9         	movff	?i2___ftadd+2,_Temp_ADC_Result+2
 22481                           
 22482                           ;main.c: 187: break;
 22483  012664  0012               	return	
 22484  012666                     i2l752:
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;main.c: 191: LATFbits.LATF3 = 1;
 22488  012666  867E               	bsf	3966,3,c	;volatile
 22489                           
 22490                           ; BSR set to: 0
 22491                           ;main.c: 194: }
 22492                           
 22493                           ;main.c: 192: break;
 22494  012668  0012               	return	
 22495  01266A                     i2l743:
 22496                           
 22497                           ; BSR set to: 0
 22498  01266A  0100               	movlb	0	; () banked
 22499  01266C  51AF               	movf	ADC_postProcessingCallback@currentADCChannel& (0+255),w,b
 22500                           
 22501                           ; Switch size 1, requested type "space"
 22502                           ; Number of cases is 5, Range of values is 0 to 63
 22503                           ; switch strategies available:
 22504                           ; Name         Instructions Cycles
 22505                           ; simple_byte           16     9 (average)
 22506                           ;	Chosen strategy is simple_byte
 22507  01266E  0A00               	xorlw	0	; case 0
 22508  012670  B4D8               	btfsc	status,2,c
 22509  012672  D66B               	goto	i2l747
 22510  012674  0A04               	xorlw	4	; case 4
 22511  012676  B4D8               	btfsc	status,2,c
 22512  012678  D716               	goto	i2l750
 22513  01267A  0A26               	xorlw	38	; case 34
 22514  01267C  B4D8               	btfsc	status,2,c
 22515  01267E  D634               	goto	i2l746
 22516  012680  0A1F               	xorlw	31	; case 61
 22517  012682  B4D8               	btfsc	status,2,c
 22518  012684  D74F               	goto	i2l751
 22519  012686  0A02               	xorlw	2	; case 63
 22520  012688  B4D8               	btfsc	status,2,c
 22521  01268A  D5FD               	goto	i2l744
 22522  01268C  D7EC               	goto	i2l752
 22523  01268E                     __end_of_ADC_postProcessingCallback:
 22524                           	opt stack 0
 22525                           tosu	equ	0xFFF
 22526                           tosh	equ	0xFFE
 22527                           tosl	equ	0xFFD
 22528                           pclatu	equ	0xFFB
 22529                           pclath	equ	0xFFA
 22530                           tblptru	equ	0xFF8
 22531                           tblptrh	equ	0xFF7
 22532                           tblptrl	equ	0xFF6
 22533                           tablat	equ	0xFF5
 22534                           prodh	equ	0xFF4
 22535                           prodl	equ	0xFF3
 22536                           intcon	equ	0xFF2
 22537                           postinc0	equ	0xFEE
 22538                           fsr0h	equ	0xFEA
 22539                           fsr0l	equ	0xFE9
 22540                           wreg	equ	0xFE8
 22541                           indf1	equ	0xFE7
 22542                           postdec1	equ	0xFE5
 22543                           fsr1h	equ	0xFE2
 22544                           fsr1l	equ	0xFE1
 22545                           bsr	equ	0xFE0
 22546                           indf2	equ	0xFDF
 22547                           postinc2	equ	0xFDE
 22548                           postdec2	equ	0xFDD
 22549                           fsr2h	equ	0xFDA
 22550                           fsr2l	equ	0xFD9
 22551                           status	equ	0xFD8
 22552                           
 22553 ;; *************** function _peakToRMS *****************
 22554 ;; Defined at:
 22555 ;;		line 86 in file "main.c"
 22556 ;; Parameters:    Size  Location     Type
 22557 ;;  Peak            3   52[BANK0 ] void 
 22558 ;;  Angle           3   55[BANK0 ] void 
 22559 ;; Auto vars:     Size  Location     Type
 22560 ;;  RMS             3   67[BANK0 ] void 
 22561 ;; Return value:  Size  Location     Type
 22562 ;;                  3   52[BANK0 ] void 
 22563 ;; Registers used:
 22564 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22565 ;; Tracked objects:
 22566 ;;		On entry : 0/0
 22567 ;;		On exit  : 0/0
 22568 ;;		Unchanged: 0/0
 22569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22570 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22571 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22573 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22574 ;;Total ram usage:       18 bytes
 22575 ;; Hardware stack levels used:    1
 22576 ;; Hardware stack levels required when called:    6
 22577 ;; This function calls:
 22578 ;;		_acos
 22579 ;;		_sin
 22580 ;;		_sqrt
 22581 ;;		i2___ftadd
 22582 ;;		i2___ftdiv
 22583 ;;		i2___ftmul
 22584 ;;		i2___ftneg
 22585 ;; This function is called by:
 22586 ;;		_ADC_postProcessingCallback
 22587 ;; This function uses a non-reentrant model
 22588 ;;
 22589                           
 22590                           	psect	text89
 22591  0133C8                     __ptext89:
 22592                           	opt stack 0
 22593  0133C8                     _peakToRMS:
 22594                           	opt stack 9
 22595                           
 22596                           ;main.c: 89: double RMS = 0.0;
 22597                           
 22598                           ;incstack = 0
 22599  0133C8  0E00               	movlw	0
 22600  0133CA  0100               	movlb	0	; () banked
 22601  0133CC  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 22602  0133CE  0E00               	movlw	0
 22603  0133D0  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 22604  0133D2  0E00               	movlw	0
 22605  0133D4  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 22606                           
 22607                           ; BSR set to: 0
 22608                           ;main.c: 92: RMS = 2.0 * acos(-1.0);
 22609  0133D6  0E00               	movlw	0
 22610  0133D8  6F8E               	movwf	acos@x& (0+255),b
 22611  0133DA  0E80               	movlw	128
 22612  0133DC  6F8F               	movwf	(acos@x+1)& (0+255),b
 22613  0133DE  0EBF               	movlw	191
 22614  0133E0  6F90               	movwf	(acos@x+2)& (0+255),b
 22615  0133E2  EC0C  F0AC         	call	_acos	;wreg free
 22616  0133E6  C08E  F0A0         	movff	?_acos,_peakToRMS$3309
 22617  0133EA  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3309+1
 22618  0133EE  C090  F0A2         	movff	?_acos+2,_peakToRMS$3309+2
 22619                           
 22620                           ;main.c: 92: RMS = 2.0 * acos(-1.0);
 22621  0133F2  C0A0  F027         	movff	_peakToRMS$3309,i2___ftmul@f1
 22622  0133F6  C0A1  F028         	movff	_peakToRMS$3309+1,i2___ftmul@f1+1
 22623  0133FA  C0A2  F029         	movff	_peakToRMS$3309+2,i2___ftmul@f1+2
 22624  0133FE  0E00               	movlw	0
 22625  013400  6E2A               	movwf	i2___ftmul@f2,c
 22626  013402  0E00               	movlw	0
 22627  013404  6E2B               	movwf	i2___ftmul@f2+1,c
 22628  013406  0E40               	movlw	64
 22629  013408  6E2C               	movwf	i2___ftmul@f2+2,c
 22630  01340A  EC79  F0A2         	call	i2___ftmul	;wreg free
 22631  01340E  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 22632  013412  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 22633  013416  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 22634                           
 22635                           ;main.c: 93: RMS = RMS - (2.0 * Angle);
 22636  01341A  0E00               	movlw	0
 22637  01341C  6E2A               	movwf	i2___ftmul@f2,c
 22638  01341E  0E00               	movlw	0
 22639  013420  6E2B               	movwf	i2___ftmul@f2+1,c
 22640  013422  0E40               	movlw	64
 22641  013424  6E2C               	movwf	i2___ftmul@f2+2,c
 22642  013426  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 22643  01342A  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 22644  01342E  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 22645  013432  EC79  F0A2         	call	i2___ftmul	;wreg free
 22646  013436  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 22647  01343A  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 22648  01343E  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 22649  013442  ECFF  F0AE         	call	i2___ftneg	;wreg free
 22650  013446  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22651  01344A  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22652  01344E  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22653  013452  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 22654  013456  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 22655  01345A  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 22656  01345E  EC7F  F09C         	call	i2___ftadd	;wreg free
 22657  013462  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 22658  013466  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 22659  01346A  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 22660                           
 22661                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 22662  01346E  0E00               	movlw	0
 22663  013470  6E2A               	movwf	i2___ftmul@f2,c
 22664  013472  0E00               	movlw	0
 22665  013474  6E2B               	movwf	i2___ftmul@f2+1,c
 22666  013476  0E40               	movlw	64
 22667  013478  6E2C               	movwf	i2___ftmul@f2+2,c
 22668  01347A  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 22669  01347E  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 22670  013482  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 22671  013486  EC79  F0A2         	call	i2___ftmul	;wreg free
 22672  01348A  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3310
 22673  01348E  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3310+1
 22674  013492  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3310+2
 22675                           
 22676                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 22677  013496  C09A  F066         	movff	_peakToRMS$3310,sin@f
 22678  01349A  C09B  F067         	movff	_peakToRMS$3310+1,sin@f+1
 22679  01349E  C09C  F068         	movff	_peakToRMS$3310+2,sin@f+2
 22680  0134A2  ECB5  F098         	call	_sin	;wreg free
 22681  0134A6  C066  F09D         	movff	?_sin,_peakToRMS$3311
 22682  0134AA  C067  F09E         	movff	?_sin+1,_peakToRMS$3311+1
 22683  0134AE  C068  F09F         	movff	?_sin+2,_peakToRMS$3311+2
 22684                           
 22685                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 22686  0134B2  C09D  F040         	movff	_peakToRMS$3311,i2___ftadd@f1
 22687  0134B6  C09E  F041         	movff	_peakToRMS$3311+1,i2___ftadd@f1+1
 22688  0134BA  C09F  F042         	movff	_peakToRMS$3311+2,i2___ftadd@f1+2
 22689  0134BE  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 22690  0134C2  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 22691  0134C6  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 22692  0134CA  EC7F  F09C         	call	i2___ftadd	;wreg free
 22693  0134CE  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 22694  0134D2  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 22695  0134D6  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 22696                           
 22697                           ;main.c: 95: RMS = RMS / (4.0 * acos(-1.0));
 22698  0134DA  0E00               	movlw	0
 22699  0134DC  0100               	movlb	0	; () banked
 22700  0134DE  6F8E               	movwf	acos@x& (0+255),b
 22701  0134E0  0E80               	movlw	128
 22702  0134E2  6F8F               	movwf	(acos@x+1)& (0+255),b
 22703  0134E4  0EBF               	movlw	191
 22704  0134E6  6F90               	movwf	(acos@x+2)& (0+255),b
 22705  0134E8  EC0C  F0AC         	call	_acos	;wreg free
 22706  0134EC  C08E  F0A0         	movff	?_acos,_peakToRMS$3309
 22707  0134F0  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3309+1
 22708  0134F4  C090  F0A2         	movff	?_acos+2,_peakToRMS$3309+2
 22709                           
 22710                           ;main.c: 95: RMS = RMS / (4.0 * acos(-1.0));
 22711  0134F8  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 22712  0134FC  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 22713  013500  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 22714  013504  0E00               	movlw	0
 22715  013506  6E2A               	movwf	i2___ftmul@f2,c
 22716  013508  0E80               	movlw	128
 22717  01350A  6E2B               	movwf	i2___ftmul@f2+1,c
 22718  01350C  0E40               	movlw	64
 22719  01350E  6E2C               	movwf	i2___ftmul@f2+2,c
 22720  013510  C0A0  F027         	movff	_peakToRMS$3309,i2___ftmul@f1
 22721  013514  C0A1  F028         	movff	_peakToRMS$3309+1,i2___ftmul@f1+1
 22722  013518  C0A2  F029         	movff	_peakToRMS$3309+2,i2___ftmul@f1+2
 22723  01351C  EC79  F0A2         	call	i2___ftmul	;wreg free
 22724  013520  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 22725  013524  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 22726  013528  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 22727  01352C  EC67  F0A3         	call	i2___ftdiv	;wreg free
 22728  013530  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 22729  013534  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 22730  013538  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 22731                           
 22732                           ;main.c: 96: RMS = sqrt(RMS);
 22733  01353C  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 22734  013540  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 22735  013544  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 22736  013548  EC55  F09D         	call	_sqrt	;wreg free
 22737  01354C  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 22738  013550  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 22739  013554  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 22740                           
 22741                           ;main.c: 97: RMS = Peak * RMS;
 22742  013558  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 22743  01355C  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 22744  013560  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 22745  013564  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 22746  013568  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 22747  01356C  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 22748  013570  EC79  F0A2         	call	i2___ftmul	;wreg free
 22749  013574  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 22750  013578  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 22751  01357C  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 22752                           
 22753                           ;main.c: 98: return RMS;
 22754  013580  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 22755  013584  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 22756  013588  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 22757  01358C  0012               	return	
 22758  01358E                     __end_of_peakToRMS:
 22759                           	opt stack 0
 22760                           tosu	equ	0xFFF
 22761                           tosh	equ	0xFFE
 22762                           tosl	equ	0xFFD
 22763                           pclatu	equ	0xFFB
 22764                           pclath	equ	0xFFA
 22765                           tblptru	equ	0xFF8
 22766                           tblptrh	equ	0xFF7
 22767                           tblptrl	equ	0xFF6
 22768                           tablat	equ	0xFF5
 22769                           prodh	equ	0xFF4
 22770                           prodl	equ	0xFF3
 22771                           intcon	equ	0xFF2
 22772                           postinc0	equ	0xFEE
 22773                           fsr0h	equ	0xFEA
 22774                           fsr0l	equ	0xFE9
 22775                           wreg	equ	0xFE8
 22776                           indf1	equ	0xFE7
 22777                           postdec1	equ	0xFE5
 22778                           fsr1h	equ	0xFE2
 22779                           fsr1l	equ	0xFE1
 22780                           bsr	equ	0xFE0
 22781                           indf2	equ	0xFDF
 22782                           postinc2	equ	0xFDE
 22783                           postdec2	equ	0xFDD
 22784                           fsr2h	equ	0xFDA
 22785                           fsr2l	equ	0xFD9
 22786                           status	equ	0xFD8
 22787                           
 22788 ;; *************** function _acos *****************
 22789 ;; Defined at:
 22790 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 22791 ;; Parameters:    Size  Location     Type
 22792 ;;  x               3   46[BANK0 ] void 
 22793 ;; Auto vars:     Size  Location     Type
 22794 ;;		None
 22795 ;; Return value:  Size  Location     Type
 22796 ;;                  3   46[BANK0 ] void 
 22797 ;; Registers used:
 22798 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22799 ;; Tracked objects:
 22800 ;;		On entry : 0/0
 22801 ;;		On exit  : 0/0
 22802 ;;		Unchanged: 0/0
 22803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22804 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22805 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22807 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22808 ;;Total ram usage:        6 bytes
 22809 ;; Hardware stack levels used:    1
 22810 ;; Hardware stack levels required when called:    5
 22811 ;; This function calls:
 22812 ;;		_asin
 22813 ;;		i2___ftadd
 22814 ;;		i2___ftneg
 22815 ;; This function is called by:
 22816 ;;		_peakToRMS
 22817 ;; This function uses a non-reentrant model
 22818 ;;
 22819                           
 22820                           	psect	text90
 22821  015818                     __ptext90:
 22822                           	opt stack 0
 22823  015818                     _acos:
 22824                           	opt stack 9
 22825                           
 22826                           ;incstack = 0
 22827  015818  C08E  F079         	movff	acos@x,asin@x
 22828  01581C  C08F  F07A         	movff	acos@x+1,asin@x+1
 22829  015820  C090  F07B         	movff	acos@x+2,asin@x+2
 22830  015824  EC80  F097         	call	_asin	;wreg free
 22831  015828  C079  F091         	movff	?_asin,_acos$3316
 22832  01582C  C07A  F092         	movff	?_asin+1,_acos$3316+1
 22833  015830  C07B  F093         	movff	?_asin+2,_acos$3316+2
 22834  015834  C091  F024         	movff	_acos$3316,i2___ftneg@f1
 22835  015838  C092  F025         	movff	_acos$3316+1,i2___ftneg@f1+1
 22836  01583C  C093  F026         	movff	_acos$3316+2,i2___ftneg@f1+2
 22837  015840  ECFF  F0AE         	call	i2___ftneg	;wreg free
 22838  015844  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22839  015848  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22840  01584C  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22841  015850  0E10               	movlw	16
 22842  015852  6E43               	movwf	i2___ftadd@f2,c
 22843  015854  0EC9               	movlw	201
 22844  015856  6E44               	movwf	i2___ftadd@f2+1,c
 22845  015858  0E3F               	movlw	63
 22846  01585A  6E45               	movwf	i2___ftadd@f2+2,c
 22847  01585C  EC7F  F09C         	call	i2___ftadd	;wreg free
 22848  015860  C040  F08E         	movff	?i2___ftadd,?_acos
 22849  015864  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 22850  015868  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 22851  01586C  0012               	return	
 22852  01586E                     __end_of_acos:
 22853                           	opt stack 0
 22854                           tosu	equ	0xFFF
 22855                           tosh	equ	0xFFE
 22856                           tosl	equ	0xFFD
 22857                           pclatu	equ	0xFFB
 22858                           pclath	equ	0xFFA
 22859                           tblptru	equ	0xFF8
 22860                           tblptrh	equ	0xFF7
 22861                           tblptrl	equ	0xFF6
 22862                           tablat	equ	0xFF5
 22863                           prodh	equ	0xFF4
 22864                           prodl	equ	0xFF3
 22865                           intcon	equ	0xFF2
 22866                           postinc0	equ	0xFEE
 22867                           fsr0h	equ	0xFEA
 22868                           fsr0l	equ	0xFE9
 22869                           wreg	equ	0xFE8
 22870                           indf1	equ	0xFE7
 22871                           postdec1	equ	0xFE5
 22872                           fsr1h	equ	0xFE2
 22873                           fsr1l	equ	0xFE1
 22874                           bsr	equ	0xFE0
 22875                           indf2	equ	0xFDF
 22876                           postinc2	equ	0xFDE
 22877                           postdec2	equ	0xFDD
 22878                           fsr2h	equ	0xFDA
 22879                           fsr2l	equ	0xFD9
 22880                           status	equ	0xFD8
 22881                           
 22882 ;; *************** function _asin *****************
 22883 ;; Defined at:
 22884 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 22885 ;; Parameters:    Size  Location     Type
 22886 ;;  x               3   25[BANK0 ] void 
 22887 ;; Auto vars:     Size  Location     Type
 22888 ;;  y               3   40[BANK0 ] void 
 22889 ;;  sgn             3   28[BANK0 ] void 
 22890 ;; Return value:  Size  Location     Type
 22891 ;;                  3   25[BANK0 ] void 
 22892 ;; Registers used:
 22893 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22894 ;; Tracked objects:
 22895 ;;		On entry : 0/0
 22896 ;;		On exit  : 0/0
 22897 ;;		Unchanged: 0/0
 22898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22899 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22900 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22902 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22903 ;;Total ram usage:       21 bytes
 22904 ;; Hardware stack levels used:    1
 22905 ;; Hardware stack levels required when called:    4
 22906 ;; This function calls:
 22907 ;;		_atan
 22908 ;;		_fabs
 22909 ;;		_sqrt
 22910 ;;		i2___ftadd
 22911 ;;		i2___ftdiv
 22912 ;;		i2___ftge
 22913 ;;		i2___ftmul
 22914 ;;		i2___ftneg
 22915 ;; This function is called by:
 22916 ;;		_acos
 22917 ;; This function uses a non-reentrant model
 22918 ;;
 22919                           
 22920                           	psect	text91
 22921  012F00                     __ptext91:
 22922                           	opt stack 0
 22923  012F00                     _asin:
 22924                           	opt stack 9
 22925                           
 22926                           ;incstack = 0
 22927  012F00  0E00               	movlw	0
 22928  012F02  6E2A               	movwf	i2___ftge@ff1,c
 22929  012F04  0E80               	movlw	128
 22930  012F06  6E2B               	movwf	i2___ftge@ff1+1,c
 22931  012F08  0E3F               	movlw	63
 22932  012F0A  6E2C               	movwf	i2___ftge@ff1+2,c
 22933  012F0C  C079  F027         	movff	asin@x,fabs@d
 22934  012F10  C07A  F028         	movff	asin@x+1,fabs@d+1
 22935  012F14  C07B  F029         	movff	asin@x+2,fabs@d+2
 22936  012F18  EC46  F0AE         	call	_fabs	;wreg free
 22937  012F1C  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 22938  012F20  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 22939  012F24  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 22940  012F28  EC6E  F0A7         	call	i2___ftge	;wreg free
 22941  012F2C  B0D8               	btfsc	status,0,c
 22942  012F2E  D00C               	goto	i2l1282
 22943  012F30  0E00               	movlw	0
 22944  012F32  0100               	movlb	0	; () banked
 22945  012F34  6FD8               	movwf	(_errno+1)& (0+255),b
 22946  012F36  0E21               	movlw	33
 22947  012F38  6FD7               	movwf	_errno& (0+255),b
 22948  012F3A  0E00               	movlw	0
 22949  012F3C  6F79               	movwf	?_asin& (0+255),b
 22950  012F3E  0E00               	movlw	0
 22951  012F40  6F7A               	movwf	(?_asin+1)& (0+255),b
 22952  012F42  0E00               	movlw	0
 22953  012F44  6F7B               	movwf	(?_asin+2)& (0+255),b
 22954                           
 22955                           ; BSR set to: 0
 22956  012F46  0012               	return	
 22957  012F48                     i2l1282:
 22958                           
 22959                           ; BSR set to: 0
 22960  012F48  0E00               	movlw	0
 22961  012F4A  0100               	movlb	0	; () banked
 22962  012F4C  6F7C               	movwf	asin@sgn& (0+255),b
 22963  012F4E  0E80               	movlw	128
 22964  012F50  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 22965  012F52  0E3F               	movlw	63
 22966  012F54  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 22967                           
 22968                           ; BSR set to: 0
 22969  012F56  C079  F02A         	movff	asin@x,i2___ftmul@f2
 22970  012F5A  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 22971  012F5E  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 22972  012F62  C079  F027         	movff	asin@x,i2___ftmul@f1
 22973  012F66  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 22974  012F6A  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 22975  012F6E  EC79  F0A2         	call	i2___ftmul	;wreg free
 22976  012F72  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 22977  012F76  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 22978  012F7A  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 22979  012F7E  ECFF  F0AE         	call	i2___ftneg	;wreg free
 22980  012F82  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22981  012F86  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22982  012F8A  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22983  012F8E  0E00               	movlw	0
 22984  012F90  6E43               	movwf	i2___ftadd@f2,c
 22985  012F92  0E80               	movlw	128
 22986  012F94  6E44               	movwf	i2___ftadd@f2+1,c
 22987  012F96  0E3F               	movlw	63
 22988  012F98  6E45               	movwf	i2___ftadd@f2+2,c
 22989  012F9A  EC7F  F09C         	call	i2___ftadd	;wreg free
 22990  012F9E  C040  F07F         	movff	?i2___ftadd,_asin$3317
 22991  012FA2  C041  F080         	movff	?i2___ftadd+1,_asin$3317+1
 22992  012FA6  C042  F081         	movff	?i2___ftadd+2,_asin$3317+2
 22993  012FAA  C07F  F066         	movff	_asin$3317,sqrt@a
 22994  012FAE  C080  F067         	movff	_asin$3317+1,sqrt@a+1
 22995  012FB2  C081  F068         	movff	_asin$3317+2,sqrt@a+2
 22996  012FB6  EC55  F09D         	call	_sqrt	;wreg free
 22997  012FBA  C066  F088         	movff	?_sqrt,asin@y
 22998  012FBE  C067  F089         	movff	?_sqrt+1,asin@y+1
 22999  012FC2  C068  F08A         	movff	?_sqrt+2,asin@y+2
 23000  012FC6  C079  F027         	movff	asin@x,fabs@d
 23001  012FCA  C07A  F028         	movff	asin@x+1,fabs@d+1
 23002  012FCE  C07B  F029         	movff	asin@x+2,fabs@d+2
 23003  012FD2  EC46  F0AE         	call	_fabs	;wreg free
 23004  012FD6  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 23005  012FDA  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 23006  012FDE  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 23007  012FE2  0EC3               	movlw	195
 23008  012FE4  6E2D               	movwf	i2___ftge@ff2,c
 23009  012FE6  0E35               	movlw	53
 23010  012FE8  6E2E               	movwf	i2___ftge@ff2+1,c
 23011  012FEA  0E3F               	movlw	63
 23012  012FEC  6E2F               	movwf	i2___ftge@ff2+2,c
 23013  012FEE  EC6E  F0A7         	call	i2___ftge	;wreg free
 23014  012FF2  B0D8               	btfsc	status,0,c
 23015  012FF4  D023               	goto	i2l1284
 23016  012FF6  C079  F015         	movff	asin@x,i2___ftdiv@f1
 23017  012FFA  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 23018  012FFE  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 23019  013002  C088  F018         	movff	asin@y,i2___ftdiv@f2
 23020  013006  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 23021  01300A  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 23022  01300E  EC67  F0A3         	call	i2___ftdiv	;wreg free
 23023  013012  C015  F08B         	movff	?i2___ftdiv,_asin$3318
 23024  013016  C016  F08C         	movff	?i2___ftdiv+1,_asin$3318+1
 23025  01301A  C017  F08D         	movff	?i2___ftdiv+2,_asin$3318+2
 23026  01301E  C08B  F058         	movff	_asin$3318,atan@f
 23027  013022  C08C  F059         	movff	_asin$3318+1,atan@f+1
 23028  013026  C08D  F05A         	movff	_asin$3318+2,atan@f+2
 23029  01302A  ECC7  F09A         	call	_atan	;wreg free
 23030  01302E  C058  F079         	movff	?_atan,?_asin
 23031  013032  C059  F07A         	movff	?_atan+1,?_asin+1
 23032  013036  C05A  F07B         	movff	?_atan+2,?_asin+2
 23033  01303A  0012               	return	
 23034  01303C                     i2l1284:
 23035  01303C  0100               	movlb	0	; () banked
 23036  01303E  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 23037  013040  D055               	goto	i2l1285
 23038                           
 23039                           ; BSR set to: 0
 23040  013042  C079  F018         	movff	asin@x,i2___ftdiv@f2
 23041  013046  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 23042  01304A  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 23043  01304E  C088  F024         	movff	asin@y,i2___ftneg@f1
 23044  013052  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 23045  013056  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 23046  01305A  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23047  01305E  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 23048  013062  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 23049  013066  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 23050  01306A  EC67  F0A3         	call	i2___ftdiv	;wreg free
 23051  01306E  C015  F08B         	movff	?i2___ftdiv,_asin$3318
 23052  013072  C016  F08C         	movff	?i2___ftdiv+1,_asin$3318+1
 23053  013076  C017  F08D         	movff	?i2___ftdiv+2,_asin$3318+2
 23054  01307A  C08B  F058         	movff	_asin$3318,atan@f
 23055  01307E  C08C  F059         	movff	_asin$3318+1,atan@f+1
 23056  013082  C08D  F05A         	movff	_asin$3318+2,atan@f+2
 23057  013086  ECC7  F09A         	call	_atan	;wreg free
 23058  01308A  C058  F085         	movff	?_atan,_asin$3319
 23059  01308E  C059  F086         	movff	?_atan+1,_asin$3319+1
 23060  013092  C05A  F087         	movff	?_atan+2,_asin$3319+2
 23061  013096  0E10               	movlw	16
 23062  013098  6E43               	movwf	i2___ftadd@f2,c
 23063  01309A  0EC9               	movlw	201
 23064  01309C  6E44               	movwf	i2___ftadd@f2+1,c
 23065  01309E  0E3F               	movlw	63
 23066  0130A0  6E45               	movwf	i2___ftadd@f2+2,c
 23067  0130A2  C085  F024         	movff	_asin$3319,i2___ftneg@f1
 23068  0130A6  C086  F025         	movff	_asin$3319+1,i2___ftneg@f1+1
 23069  0130AA  C087  F026         	movff	_asin$3319+2,i2___ftneg@f1+2
 23070  0130AE  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23071  0130B2  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23072  0130B6  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23073  0130BA  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23074  0130BE  EC7F  F09C         	call	i2___ftadd	;wreg free
 23075  0130C2  C040  F082         	movff	?i2___ftadd,_asin$3320
 23076  0130C6  C041  F083         	movff	?i2___ftadd+1,_asin$3320+1
 23077  0130CA  C042  F084         	movff	?i2___ftadd+2,_asin$3320+2
 23078  0130CE  C082  F024         	movff	_asin$3320,i2___ftneg@f1
 23079  0130D2  C083  F025         	movff	_asin$3320+1,i2___ftneg@f1+1
 23080  0130D6  C084  F026         	movff	_asin$3320+2,i2___ftneg@f1+2
 23081  0130DA  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23082  0130DE  C024  F079         	movff	?i2___ftneg,?_asin
 23083  0130E2  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 23084  0130E6  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 23085  0130EA  0012               	return	
 23086  0130EC                     i2l1285:
 23087  0130EC  C079  F018         	movff	asin@x,i2___ftdiv@f2
 23088  0130F0  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 23089  0130F4  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 23090  0130F8  C088  F015         	movff	asin@y,i2___ftdiv@f1
 23091  0130FC  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 23092  013100  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 23093  013104  EC67  F0A3         	call	i2___ftdiv	;wreg free
 23094  013108  C015  F08B         	movff	?i2___ftdiv,_asin$3318
 23095  01310C  C016  F08C         	movff	?i2___ftdiv+1,_asin$3318+1
 23096  013110  C017  F08D         	movff	?i2___ftdiv+2,_asin$3318+2
 23097  013114  C08B  F058         	movff	_asin$3318,atan@f
 23098  013118  C08C  F059         	movff	_asin$3318+1,atan@f+1
 23099  01311C  C08D  F05A         	movff	_asin$3318+2,atan@f+2
 23100  013120  ECC7  F09A         	call	_atan	;wreg free
 23101  013124  C058  F085         	movff	?_atan,_asin$3319
 23102  013128  C059  F086         	movff	?_atan+1,_asin$3319+1
 23103  01312C  C05A  F087         	movff	?_atan+2,_asin$3319+2
 23104  013130  C085  F024         	movff	_asin$3319,i2___ftneg@f1
 23105  013134  C086  F025         	movff	_asin$3319+1,i2___ftneg@f1+1
 23106  013138  C087  F026         	movff	_asin$3319+2,i2___ftneg@f1+2
 23107  01313C  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23108  013140  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23109  013144  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23110  013148  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23111  01314C  0E10               	movlw	16
 23112  01314E  6E43               	movwf	i2___ftadd@f2,c
 23113  013150  0EC9               	movlw	201
 23114  013152  6E44               	movwf	i2___ftadd@f2+1,c
 23115  013154  0E3F               	movlw	63
 23116  013156  6E45               	movwf	i2___ftadd@f2+2,c
 23117  013158  EC7F  F09C         	call	i2___ftadd	;wreg free
 23118  01315C  C040  F079         	movff	?i2___ftadd,?_asin
 23119  013160  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 23120  013164  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 23121  013168  0012               	return	
 23122  01316A                     __end_of_asin:
 23123                           	opt stack 0
 23124                           tosu	equ	0xFFF
 23125                           tosh	equ	0xFFE
 23126                           tosl	equ	0xFFD
 23127                           pclatu	equ	0xFFB
 23128                           pclath	equ	0xFFA
 23129                           tblptru	equ	0xFF8
 23130                           tblptrh	equ	0xFF7
 23131                           tblptrl	equ	0xFF6
 23132                           tablat	equ	0xFF5
 23133                           prodh	equ	0xFF4
 23134                           prodl	equ	0xFF3
 23135                           intcon	equ	0xFF2
 23136                           postinc0	equ	0xFEE
 23137                           fsr0h	equ	0xFEA
 23138                           fsr0l	equ	0xFE9
 23139                           wreg	equ	0xFE8
 23140                           indf1	equ	0xFE7
 23141                           postdec1	equ	0xFE5
 23142                           fsr1h	equ	0xFE2
 23143                           fsr1l	equ	0xFE1
 23144                           bsr	equ	0xFE0
 23145                           indf2	equ	0xFDF
 23146                           postinc2	equ	0xFDE
 23147                           postdec2	equ	0xFDD
 23148                           fsr2h	equ	0xFDA
 23149                           fsr2l	equ	0xFD9
 23150                           status	equ	0xFD8
 23151                           
 23152 ;; *************** function _sqrt *****************
 23153 ;; Defined at:
 23154 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 23155 ;; Parameters:    Size  Location     Type
 23156 ;;  a               3    6[BANK0 ] void 
 23157 ;; Auto vars:     Size  Location     Type
 23158 ;;  x               3   22[BANK0 ] void 
 23159 ;;  q               3   19[BANK0 ] void 
 23160 ;;  z               3   16[BANK0 ] void 
 23161 ;;  og              3   12[BANK0 ] void 
 23162 ;;  i               1   15[BANK0 ] unsigned char 
 23163 ;; Return value:  Size  Location     Type
 23164 ;;                  3    6[BANK0 ] unsigned char 
 23165 ;; Registers used:
 23166 ;;		wreg, status,2, status,0, cstack
 23167 ;; Tracked objects:
 23168 ;;		On entry : 0/0
 23169 ;;		On exit  : 0/0
 23170 ;;		Unchanged: 0/0
 23171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23172 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23173 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23174 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23175 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23176 ;;Total ram usage:       19 bytes
 23177 ;; Hardware stack levels used:    1
 23178 ;; Hardware stack levels required when called:    3
 23179 ;; This function calls:
 23180 ;;		i2___ftge
 23181 ;;		i2___ftmul
 23182 ;;		i2___ftsub
 23183 ;; This function is called by:
 23184 ;;		_peakToRMS
 23185 ;;		_asin
 23186 ;; This function uses a non-reentrant model
 23187 ;;
 23188                           
 23189                           	psect	text92
 23190  013AAA                     __ptext92:
 23191                           	opt stack 0
 23192  013AAA                     _sqrt:
 23193                           	opt stack 11
 23194                           
 23195                           ;incstack = 0
 23196  013AAA  0E00               	movlw	0
 23197  013AAC  6E2A               	movwf	i2___ftge@ff1,c
 23198  013AAE  0E00               	movlw	0
 23199  013AB0  6E2B               	movwf	i2___ftge@ff1+1,c
 23200  013AB2  0E00               	movlw	0
 23201  013AB4  6E2C               	movwf	i2___ftge@ff1+2,c
 23202  013AB6  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 23203  013ABA  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 23204  013ABE  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 23205  013AC2  EC6E  F0A7         	call	i2___ftge	;wreg free
 23206  013AC6  A0D8               	btfss	status,0,c
 23207  013AC8  D00E               	goto	i2l1810
 23208  013ACA  0100               	movlb	0	; () banked
 23209  013ACC  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 23210  013ACE  D004               	goto	i2l1811
 23211                           
 23212                           ; BSR set to: 0
 23213  013AD0  0E00               	movlw	0
 23214  013AD2  6FD8               	movwf	(_errno+1)& (0+255),b
 23215  013AD4  0E21               	movlw	33
 23216  013AD6  6FD7               	movwf	_errno& (0+255),b
 23217  013AD8                     i2l1811:
 23218                           
 23219                           ; BSR set to: 0
 23220  013AD8  0E00               	movlw	0
 23221  013ADA  6F66               	movwf	?_sqrt& (0+255),b
 23222  013ADC  0E00               	movlw	0
 23223  013ADE  6F67               	movwf	(?_sqrt+1)& (0+255),b
 23224  013AE0  0E00               	movlw	0
 23225  013AE2  6F68               	movwf	(?_sqrt+2)& (0+255),b
 23226                           
 23227                           ; BSR set to: 0
 23228  013AE4  0012               	return	
 23229  013AE6                     i2l1810:
 23230  013AE6  C066  F070         	movff	sqrt@a,sqrt@z
 23231  013AEA  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 23232  013AEE  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 23233  013AF2  C066  F069         	movff	sqrt@a,??_sqrt
 23234  013AF6  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 23235  013AFA  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 23236  013AFE  0100               	movlb	0	; () banked
 23237  013B00  1F69               	comf	??_sqrt& (0+255),f,b
 23238  013B02  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 23239  013B04  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 23240  013B06  2B69               	incf	??_sqrt& (0+255),f,b
 23241  013B08  0E00               	movlw	0
 23242  013B0A  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 23243  013B0C  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 23244  013B0E  0EC8               	movlw	200
 23245  013B10  2569               	addwf	??_sqrt& (0+255),w,b
 23246  013B12  6F76               	movwf	sqrt@x& (0+255),b
 23247  013B14  0E6E               	movlw	110
 23248  013B16  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 23249  013B18  6F77               	movwf	(sqrt@x+1)& (0+255),b
 23250  013B1A  0EBE               	movlw	190
 23251  013B1C  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 23252  013B1E  6F78               	movwf	(sqrt@x+2)& (0+255),b
 23253                           
 23254                           ; BSR set to: 0
 23255  013B20  90D8               	bcf	status,0,c
 23256  013B22  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 23257  013B24  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 23258  013B26  3376               	rrcf	sqrt@x& (0+255),f,b
 23259                           
 23260                           ; BSR set to: 0
 23261  013B28  0E00               	movlw	0
 23262  013B2A  5F70               	subwf	sqrt@z& (0+255),f,b
 23263  013B2C  0E80               	movlw	128
 23264  013B2E  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 23265  013B30  0E00               	movlw	0
 23266  013B32  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 23267                           
 23268                           ; BSR set to: 0
 23269  013B34  0E04               	movlw	4
 23270  013B36  6F6F               	movwf	sqrt@i& (0+255),b
 23271  013B38                     
 23272                           ; BSR set to: 0
 23273                           
 23274                           ; BSR set to: 0
 23275  013B38  C076  F06C         	movff	sqrt@x,sqrt@og
 23276  013B3C  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 23277  013B40  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 23278                           
 23279                           ; BSR set to: 0
 23280  013B44  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23281  013B48  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23282  013B4C  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23283  013B50  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 23284  013B54  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 23285  013B58  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 23286  013B5C  EC79  F0A2         	call	i2___ftmul	;wreg free
 23287  013B60  C027  F073         	movff	?i2___ftmul,sqrt@q
 23288  013B64  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23289  013B68  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23290  013B6C  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 23291  013B70  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 23292  013B74  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 23293  013B78  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 23294  013B7C  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 23295  013B80  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 23296  013B84  EC79  F0A2         	call	i2___ftmul	;wreg free
 23297  013B88  C027  F073         	movff	?i2___ftmul,sqrt@q
 23298  013B8C  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23299  013B90  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23300  013B94  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 23301  013B98  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 23302  013B9C  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 23303  013BA0  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 23304  013BA4  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 23305  013BA8  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 23306  013BAC  EC79  F0A2         	call	i2___ftmul	;wreg free
 23307  013BB0  C027  F073         	movff	?i2___ftmul,sqrt@q
 23308  013BB4  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23309  013BB8  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23310  013BBC  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23311  013BC0  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23312  013BC4  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23313  013BC8  0E00               	movlw	0
 23314  013BCA  6E2A               	movwf	i2___ftmul@f2,c
 23315  013BCC  0EC0               	movlw	192
 23316  013BCE  6E2B               	movwf	i2___ftmul@f2+1,c
 23317  013BD0  0E3F               	movlw	63
 23318  013BD2  6E2C               	movwf	i2___ftmul@f2+2,c
 23319  013BD4  EC79  F0A2         	call	i2___ftmul	;wreg free
 23320  013BD8  C027  F076         	movff	?i2___ftmul,sqrt@x
 23321  013BDC  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 23322  013BE0  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 23323  013BE4  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 23324  013BE8  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 23325  013BEC  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 23326  013BF0  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 23327  013BF4  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 23328  013BF8  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 23329  013BFC  EC84  F0AD         	call	i2___ftsub	;wreg free
 23330  013C00  C060  F076         	movff	?i2___ftsub,sqrt@x
 23331  013C04  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 23332  013C08  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 23333  013C0C  0100               	movlb	0	; () banked
 23334  013C0E  2F6F               	decfsz	sqrt@i& (0+255),f,b
 23335  013C10  D793               	goto	i2l1813
 23336                           
 23337                           ; BSR set to: 0
 23338                           
 23339                           ; BSR set to: 0
 23340  013C12  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23341  013C16  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23342  013C1A  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23343  013C1E  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 23344  013C22  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 23345  013C26  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 23346  013C2A  EC79  F0A2         	call	i2___ftmul	;wreg free
 23347  013C2E  C027  F066         	movff	?i2___ftmul,?_sqrt
 23348  013C32  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 23349  013C36  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 23350  013C3A  0012               	return	
 23351  013C3C                     __end_of_sqrt:
 23352                           	opt stack 0
 23353                           tosu	equ	0xFFF
 23354                           tosh	equ	0xFFE
 23355                           tosl	equ	0xFFD
 23356                           pclatu	equ	0xFFB
 23357                           pclath	equ	0xFFA
 23358                           tblptru	equ	0xFF8
 23359                           tblptrh	equ	0xFF7
 23360                           tblptrl	equ	0xFF6
 23361                           tablat	equ	0xFF5
 23362                           prodh	equ	0xFF4
 23363                           prodl	equ	0xFF3
 23364                           intcon	equ	0xFF2
 23365                           postinc0	equ	0xFEE
 23366                           fsr0h	equ	0xFEA
 23367                           fsr0l	equ	0xFE9
 23368                           wreg	equ	0xFE8
 23369                           indf1	equ	0xFE7
 23370                           postdec1	equ	0xFE5
 23371                           fsr1h	equ	0xFE2
 23372                           fsr1l	equ	0xFE1
 23373                           bsr	equ	0xFE0
 23374                           indf2	equ	0xFDF
 23375                           postinc2	equ	0xFDE
 23376                           postdec2	equ	0xFDD
 23377                           fsr2h	equ	0xFDA
 23378                           fsr2l	equ	0xFD9
 23379                           status	equ	0xFD8
 23380                           
 23381 ;; *************** function _atan *****************
 23382 ;; Defined at:
 23383 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 23384 ;; Parameters:    Size  Location     Type
 23385 ;;  f               3   87[COMRAM] unsigned char 
 23386 ;; Auto vars:     Size  Location     Type
 23387 ;;  val             3   10[BANK0 ] unsigned char 
 23388 ;;  val_squared     3    7[BANK0 ] unsigned char 
 23389 ;;  x               3    3[BANK0 ] unsigned char 
 23390 ;;  y               3    0[BANK0 ] unsigned char 
 23391 ;;  recip           1    6[BANK0 ] unsigned char 
 23392 ;; Return value:  Size  Location     Type
 23393 ;;                  3   87[COMRAM] unsigned char 
 23394 ;; Registers used:
 23395 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23396 ;; Tracked objects:
 23397 ;;		On entry : 0/0
 23398 ;;		On exit  : 0/0
 23399 ;;		Unchanged: 0/0
 23400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23401 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23402 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23404 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23405 ;;Total ram usage:       16 bytes
 23406 ;; Hardware stack levels used:    1
 23407 ;; Hardware stack levels required when called:    3
 23408 ;; This function calls:
 23409 ;;		_eval_poly
 23410 ;;		_fabs
 23411 ;;		i2___ftadd
 23412 ;;		i2___ftdiv
 23413 ;;		i2___ftge
 23414 ;;		i2___ftmul
 23415 ;;		i2___ftneg
 23416 ;; This function is called by:
 23417 ;;		_asin
 23418 ;; This function uses a non-reentrant model
 23419 ;;
 23420                           
 23421                           	psect	text93
 23422  01358E                     __ptext93:
 23423                           	opt stack 0
 23424  01358E                     _atan:
 23425                           	opt stack 9
 23426                           
 23427                           ;incstack = 0
 23428  01358E  C058  F027         	movff	atan@f,fabs@d
 23429  013592  C059  F028         	movff	atan@f+1,fabs@d+1
 23430  013596  C05A  F029         	movff	atan@f+2,fabs@d+2
 23431  01359A  EC46  F0AE         	call	_fabs	;wreg free
 23432  01359E  C027  F06A         	movff	?_fabs,atan@val
 23433  0135A2  C028  F06B         	movff	?_fabs+1,atan@val+1
 23434  0135A6  C029  F06C         	movff	?_fabs+2,atan@val+2
 23435  0135AA  0100               	movlb	0	; () banked
 23436  0135AC  516A               	movf	atan@val& (0+255),w,b
 23437  0135AE  116B               	iorwf	(atan@val+1)& (0+255),w,b
 23438  0135B0  116C               	iorwf	(atan@val+2)& (0+255),w,b
 23439  0135B2  A4D8               	btfss	status,2,c
 23440  0135B4  D007               	goto	i2l1301
 23441                           
 23442                           ; BSR set to: 0
 23443  0135B6  0E00               	movlw	0
 23444  0135B8  6E58               	movwf	?_atan,c
 23445  0135BA  0E00               	movlw	0
 23446  0135BC  6E59               	movwf	?_atan+1,c
 23447  0135BE  0E00               	movlw	0
 23448  0135C0  6E5A               	movwf	?_atan+2,c
 23449                           
 23450                           ; BSR set to: 0
 23451  0135C2  0012               	return	
 23452  0135C4                     i2l1301:
 23453                           
 23454                           ; BSR set to: 0
 23455                           
 23456                           ; BSR set to: 0
 23457  0135C4  0E00               	movlw	0
 23458  0135C6  6E2A               	movwf	i2___ftge@ff1,c
 23459  0135C8  0E80               	movlw	128
 23460  0135CA  6E2B               	movwf	i2___ftge@ff1+1,c
 23461  0135CC  0E3F               	movlw	63
 23462  0135CE  6E2C               	movwf	i2___ftge@ff1+2,c
 23463  0135D0  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 23464  0135D4  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 23465  0135D8  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 23466  0135DC  EC6E  F0A7         	call	i2___ftge	;wreg free
 23467  0135E0  B0D8               	btfsc	status,0,c
 23468  0135E2  D002               	goto	i2u1473_40
 23469  0135E4  0E01               	movlw	1
 23470  0135E6  D001               	goto	i2u1474_40
 23471  0135E8                     i2u1473_40:
 23472  0135E8  0E00               	movlw	0
 23473  0135EA                     i2u1474_40:
 23474  0135EA  0100               	movlb	0	; () banked
 23475  0135EC  6F66               	movwf	atan@recip& (0+255),b
 23476  0135EE  5166               	movf	atan@recip& (0+255),w,b
 23477  0135F0  B4D8               	btfsc	status,2,c
 23478  0135F2  D014               	goto	i2l1303
 23479                           
 23480                           ; BSR set to: 0
 23481  0135F4  0E00               	movlw	0
 23482  0135F6  6E15               	movwf	i2___ftdiv@f1,c
 23483  0135F8  0E80               	movlw	128
 23484  0135FA  6E16               	movwf	i2___ftdiv@f1+1,c
 23485  0135FC  0E3F               	movlw	63
 23486  0135FE  6E17               	movwf	i2___ftdiv@f1+2,c
 23487  013600  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 23488  013604  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 23489  013608  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 23490  01360C  EC67  F0A3         	call	i2___ftdiv	;wreg free
 23491  013610  C015  F06A         	movff	?i2___ftdiv,atan@val
 23492  013614  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 23493  013618  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 23494  01361C                     i2l1303:
 23495  01361C  C06A  F027         	movff	atan@val,i2___ftmul@f1
 23496  013620  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 23497  013624  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 23498  013628  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 23499  01362C  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 23500  013630  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 23501  013634  EC79  F0A2         	call	i2___ftmul	;wreg free
 23502  013638  C027  F067         	movff	?i2___ftmul,atan@val_squared
 23503  01363C  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 23504  013640  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 23505  013644  C067  F04C         	movff	atan@val_squared,eval_poly@x
 23506  013648  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 23507  01364C  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 23508  013650  0EA8               	movlw	low atan@coeff_b
 23509  013652  6E4F               	movwf	eval_poly@d,c
 23510  013654  0EF4               	movlw	high atan@coeff_b
 23511  013656  6E50               	movwf	eval_poly@d+1,c
 23512  013658  0E00               	movlw	0
 23513  01365A  6E52               	movwf	eval_poly@n+1,c
 23514  01365C  0E04               	movlw	4
 23515  01365E  6E51               	movwf	eval_poly@n,c
 23516  013660  EC49  F0A4         	call	_eval_poly	;wreg free
 23517  013664  C04C  F060         	movff	?_eval_poly,atan@y
 23518  013668  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 23519  01366C  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 23520  013670  C067  F04C         	movff	atan@val_squared,eval_poly@x
 23521  013674  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 23522  013678  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 23523  01367C  0E87               	movlw	low atan@coeff_a
 23524  01367E  6E4F               	movwf	eval_poly@d,c
 23525  013680  0EF4               	movlw	high atan@coeff_a
 23526  013682  6E50               	movwf	eval_poly@d+1,c
 23527  013684  0E00               	movlw	0
 23528  013686  6E52               	movwf	eval_poly@n+1,c
 23529  013688  0E05               	movlw	5
 23530  01368A  6E51               	movwf	eval_poly@n,c
 23531  01368C  EC49  F0A4         	call	_eval_poly	;wreg free
 23532  013690  C04C  F063         	movff	?_eval_poly,atan@x
 23533  013694  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 23534  013698  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 23535  01369C  C06A  F027         	movff	atan@val,i2___ftmul@f1
 23536  0136A0  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 23537  0136A4  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 23538  0136A8  C060  F018         	movff	atan@y,i2___ftdiv@f2
 23539  0136AC  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 23540  0136B0  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 23541  0136B4  C063  F015         	movff	atan@x,i2___ftdiv@f1
 23542  0136B8  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 23543  0136BC  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 23544  0136C0  EC67  F0A3         	call	i2___ftdiv	;wreg free
 23545  0136C4  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 23546  0136C8  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 23547  0136CC  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 23548  0136D0  EC79  F0A2         	call	i2___ftmul	;wreg free
 23549  0136D4  C027  F06A         	movff	?i2___ftmul,atan@val
 23550  0136D8  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 23551  0136DC  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 23552  0136E0  0100               	movlb	0	; () banked
 23553  0136E2  5166               	movf	atan@recip& (0+255),w,b
 23554  0136E4  B4D8               	btfsc	status,2,c
 23555  0136E6  D01C               	goto	i2l1304
 23556                           
 23557                           ; BSR set to: 0
 23558  0136E8  C06A  F024         	movff	atan@val,i2___ftneg@f1
 23559  0136EC  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 23560  0136F0  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 23561  0136F4  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23562  0136F8  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23563  0136FC  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23564  013700  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23565  013704  0E10               	movlw	16
 23566  013706  6E43               	movwf	i2___ftadd@f2,c
 23567  013708  0EC9               	movlw	201
 23568  01370A  6E44               	movwf	i2___ftadd@f2+1,c
 23569  01370C  0E3F               	movlw	63
 23570  01370E  6E45               	movwf	i2___ftadd@f2+2,c
 23571  013710  EC7F  F09C         	call	i2___ftadd	;wreg free
 23572  013714  C040  F06A         	movff	?i2___ftadd,atan@val
 23573  013718  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 23574  01371C  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 23575  013720                     i2l1304:
 23576  013720  BE5A               	btfsc	atan@f+2,7,c
 23577  013722  D007               	goto	i2l1306
 23578  013724  C06A  F058         	movff	atan@val,?_atan
 23579  013728  C06B  F059         	movff	atan@val+1,?_atan+1
 23580  01372C  C06C  F05A         	movff	atan@val+2,?_atan+2
 23581  013730  0012               	return	
 23582  013732                     i2l1306:
 23583  013732  C06A  F024         	movff	atan@val,i2___ftneg@f1
 23584  013736  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 23585  01373A  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 23586  01373E  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23587  013742  C024  F058         	movff	?i2___ftneg,?_atan
 23588  013746  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 23589  01374A  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 23590  01374E  0012               	return	
 23591  013750                     __end_of_atan:
 23592                           	opt stack 0
 23593                           tosu	equ	0xFFF
 23594                           tosh	equ	0xFFE
 23595                           tosl	equ	0xFFD
 23596                           pclatu	equ	0xFFB
 23597                           pclath	equ	0xFFA
 23598                           tblptru	equ	0xFF8
 23599                           tblptrh	equ	0xFF7
 23600                           tblptrl	equ	0xFF6
 23601                           tablat	equ	0xFF5
 23602                           prodh	equ	0xFF4
 23603                           prodl	equ	0xFF3
 23604                           intcon	equ	0xFF2
 23605                           postinc0	equ	0xFEE
 23606                           fsr0h	equ	0xFEA
 23607                           fsr0l	equ	0xFE9
 23608                           wreg	equ	0xFE8
 23609                           indf1	equ	0xFE7
 23610                           postdec1	equ	0xFE5
 23611                           fsr1h	equ	0xFE2
 23612                           fsr1l	equ	0xFE1
 23613                           bsr	equ	0xFE0
 23614                           indf2	equ	0xFDF
 23615                           postinc2	equ	0xFDE
 23616                           postdec2	equ	0xFDD
 23617                           fsr2h	equ	0xFDA
 23618                           fsr2l	equ	0xFD9
 23619                           status	equ	0xFD8
 23620                           
 23621 ;; *************** function _fabs *****************
 23622 ;; Defined at:
 23623 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 23624 ;; Parameters:    Size  Location     Type
 23625 ;;  d               3   38[COMRAM] unsigned char 
 23626 ;; Auto vars:     Size  Location     Type
 23627 ;;		None
 23628 ;; Return value:  Size  Location     Type
 23629 ;;                  3   38[COMRAM] unsigned char 
 23630 ;; Registers used:
 23631 ;;		wreg, status,2, status,0, cstack
 23632 ;; Tracked objects:
 23633 ;;		On entry : 0/0
 23634 ;;		On exit  : 0/0
 23635 ;;		Unchanged: 0/0
 23636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23637 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23640 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23641 ;;Total ram usage:        3 bytes
 23642 ;; Hardware stack levels used:    1
 23643 ;; Hardware stack levels required when called:    1
 23644 ;; This function calls:
 23645 ;;		i2___ftneg
 23646 ;; This function is called by:
 23647 ;;		_asin
 23648 ;;		_atan
 23649 ;; This function uses a non-reentrant model
 23650 ;;
 23651                           
 23652                           	psect	text94
 23653  015C8C                     __ptext94:
 23654                           	opt stack 0
 23655  015C8C                     _fabs:
 23656                           	opt stack 11
 23657                           
 23658                           ;incstack = 0
 23659  015C8C  AE29               	btfss	fabs@d+2,7,c
 23660  015C8E  D00F               	goto	i2l1398
 23661  015C90  C027  F024         	movff	fabs@d,i2___ftneg@f1
 23662  015C94  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 23663  015C98  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 23664  015C9C  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23665  015CA0  C024  F027         	movff	?i2___ftneg,?_fabs
 23666  015CA4  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 23667  015CA8  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 23668  015CAC  0012               	return	
 23669  015CAE                     i2l1398:
 23670  015CAE  C027  F027         	movff	fabs@d,?_fabs
 23671  015CB2  C028  F028         	movff	fabs@d+1,?_fabs+1
 23672  015CB6  C029  F029         	movff	fabs@d+2,?_fabs+2
 23673  015CBA  0012               	return		;funcret
 23674  015CBC                     __end_of_fabs:
 23675                           	opt stack 0
 23676                           tosu	equ	0xFFF
 23677                           tosh	equ	0xFFE
 23678                           tosl	equ	0xFFD
 23679                           pclatu	equ	0xFFB
 23680                           pclath	equ	0xFFA
 23681                           tblptru	equ	0xFF8
 23682                           tblptrh	equ	0xFF7
 23683                           tblptrl	equ	0xFF6
 23684                           tablat	equ	0xFF5
 23685                           prodh	equ	0xFF4
 23686                           prodl	equ	0xFF3
 23687                           intcon	equ	0xFF2
 23688                           postinc0	equ	0xFEE
 23689                           fsr0h	equ	0xFEA
 23690                           fsr0l	equ	0xFE9
 23691                           wreg	equ	0xFE8
 23692                           indf1	equ	0xFE7
 23693                           postdec1	equ	0xFE5
 23694                           fsr1h	equ	0xFE2
 23695                           fsr1l	equ	0xFE1
 23696                           bsr	equ	0xFE0
 23697                           indf2	equ	0xFDF
 23698                           postinc2	equ	0xFDE
 23699                           postdec2	equ	0xFDD
 23700                           fsr2h	equ	0xFDA
 23701                           fsr2l	equ	0xFD9
 23702                           status	equ	0xFD8
 23703                           
 23704 ;; *************** function _currentMeasuredToPeak *****************
 23705 ;; Defined at:
 23706 ;;		line 103 in file "main.c"
 23707 ;; Parameters:    Size  Location     Type
 23708 ;;  Measured        3   19[BANK0 ] unsigned char 
 23709 ;;  Angle           3   22[BANK0 ] unsigned char 
 23710 ;; Auto vars:     Size  Location     Type
 23711 ;;  Peak            3   25[BANK0 ] unsigned char 
 23712 ;; Return value:  Size  Location     Type
 23713 ;;                  3   19[BANK0 ] unsigned char 
 23714 ;; Registers used:
 23715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23716 ;; Tracked objects:
 23717 ;;		On entry : 0/0
 23718 ;;		On exit  : 0/0
 23719 ;;		Unchanged: 0/0
 23720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23721 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23722 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23724 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23725 ;;Total ram usage:        9 bytes
 23726 ;; Hardware stack levels used:    1
 23727 ;; Hardware stack levels required when called:    4
 23728 ;; This function calls:
 23729 ;;		_sin
 23730 ;;		i2___ftdiv
 23731 ;; This function is called by:
 23732 ;;		_ADC_postProcessingCallback
 23733 ;; This function uses a non-reentrant model
 23734 ;;
 23735                           
 23736                           	psect	text95
 23737  01564C                     __ptext95:
 23738                           	opt stack 0
 23739  01564C                     _currentMeasuredToPeak:
 23740                           	opt stack 11
 23741                           
 23742                           ;main.c: 106: double Peak = 0.0;
 23743                           
 23744                           ;incstack = 0
 23745  01564C  0E00               	movlw	0
 23746  01564E  0100               	movlb	0	; () banked
 23747  015650  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 23748  015652  0E00               	movlw	0
 23749  015654  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 23750  015656  0E00               	movlw	0
 23751  015658  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 23752                           
 23753                           ; BSR set to: 0
 23754                           ;main.c: 109: Peak = sin(Angle);
 23755  01565A  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 23756  01565E  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 23757  015662  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 23758  015666  ECB5  F098         	call	_sin	;wreg free
 23759  01566A  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 23760  01566E  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 23761  015672  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 23762                           
 23763                           ;main.c: 110: Peak = Measured / Peak;
 23764  015676  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 23765  01567A  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 23766  01567E  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 23767  015682  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 23768  015686  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 23769  01568A  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 23770  01568E  EC67  F0A3         	call	i2___ftdiv	;wreg free
 23771  015692  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 23772  015696  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 23773  01569A  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 23774                           
 23775                           ;main.c: 111: return Peak;
 23776  01569E  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 23777  0156A2  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 23778  0156A6  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 23779  0156AA  0012               	return	
 23780  0156AC                     __end_of_currentMeasuredToPeak:
 23781                           	opt stack 0
 23782                           tosu	equ	0xFFF
 23783                           tosh	equ	0xFFE
 23784                           tosl	equ	0xFFD
 23785                           pclatu	equ	0xFFB
 23786                           pclath	equ	0xFFA
 23787                           tblptru	equ	0xFF8
 23788                           tblptrh	equ	0xFF7
 23789                           tblptrl	equ	0xFF6
 23790                           tablat	equ	0xFF5
 23791                           prodh	equ	0xFF4
 23792                           prodl	equ	0xFF3
 23793                           intcon	equ	0xFF2
 23794                           postinc0	equ	0xFEE
 23795                           fsr0h	equ	0xFEA
 23796                           fsr0l	equ	0xFE9
 23797                           wreg	equ	0xFE8
 23798                           indf1	equ	0xFE7
 23799                           postdec1	equ	0xFE5
 23800                           fsr1h	equ	0xFE2
 23801                           fsr1l	equ	0xFE1
 23802                           bsr	equ	0xFE0
 23803                           indf2	equ	0xFDF
 23804                           postinc2	equ	0xFDE
 23805                           postdec2	equ	0xFDD
 23806                           fsr2h	equ	0xFDA
 23807                           fsr2l	equ	0xFD9
 23808                           status	equ	0xFD8
 23809                           
 23810 ;; *************** function _sin *****************
 23811 ;; Defined at:
 23812 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 23813 ;; Parameters:    Size  Location     Type
 23814 ;;  f               3    6[BANK0 ] unsigned char 
 23815 ;; Auto vars:     Size  Location     Type
 23816 ;;  x2              3   15[BANK0 ] unsigned char 
 23817 ;;  y               3    9[BANK0 ] unsigned char 
 23818 ;;  sgn             1   18[BANK0 ] unsigned char 
 23819 ;; Return value:  Size  Location     Type
 23820 ;;                  3    6[BANK0 ] unsigned char 
 23821 ;; Registers used:
 23822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23823 ;; Tracked objects:
 23824 ;;		On entry : 0/0
 23825 ;;		On exit  : 0/0
 23826 ;;		Unchanged: 0/0
 23827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23828 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23829 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23831 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23832 ;;Total ram usage:       13 bytes
 23833 ;; Hardware stack levels used:    1
 23834 ;; Hardware stack levels required when called:    3
 23835 ;; This function calls:
 23836 ;;		_eval_poly
 23837 ;;		_floor
 23838 ;;		i2___ftadd
 23839 ;;		i2___ftdiv
 23840 ;;		i2___ftge
 23841 ;;		i2___ftmul
 23842 ;;		i2___ftneg
 23843 ;;		i2___ftsub
 23844 ;; This function is called by:
 23845 ;;		_peakToRMS
 23846 ;;		_currentMeasuredToPeak
 23847 ;; This function uses a non-reentrant model
 23848 ;;
 23849                           
 23850                           	psect	text96
 23851  01316A                     __ptext96:
 23852                           	opt stack 0
 23853  01316A                     _sin:
 23854                           	opt stack 11
 23855                           
 23856                           ;incstack = 0
 23857  01316A  0E00               	movlw	0
 23858  01316C  0100               	movlb	0	; () banked
 23859  01316E  6F72               	movwf	sin@sgn& (0+255),b
 23860                           
 23861                           ; BSR set to: 0
 23862  013170  AF68               	btfss	(sin@f+2)& (0+255),7,b
 23863  013172  D011               	goto	i2l1681
 23864                           
 23865                           ; BSR set to: 0
 23866  013174  C066  F024         	movff	sin@f,i2___ftneg@f1
 23867  013178  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 23868  01317C  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 23869  013180  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23870  013184  C024  F066         	movff	?i2___ftneg,sin@f
 23871  013188  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 23872  01318C  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 23873  013190  0E01               	movlw	1
 23874  013192  0100               	movlb	0	; () banked
 23875  013194  6F72               	movwf	sin@sgn& (0+255),b
 23876  013196                     i2l1681:
 23877                           
 23878                           ; BSR set to: 0
 23879                           
 23880                           ; BSR set to: 0
 23881  013196  C066  F027         	movff	sin@f,i2___ftmul@f1
 23882  01319A  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 23883  01319E  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 23884  0131A2  0EFA               	movlw	250
 23885  0131A4  6E2A               	movwf	i2___ftmul@f2,c
 23886  0131A6  0E22               	movlw	34
 23887  0131A8  6E2B               	movwf	i2___ftmul@f2+1,c
 23888  0131AA  0E3E               	movlw	62
 23889  0131AC  6E2C               	movwf	i2___ftmul@f2+2,c
 23890  0131AE  EC79  F0A2         	call	i2___ftmul	;wreg free
 23891  0131B2  C027  F066         	movff	?i2___ftmul,sin@f
 23892  0131B6  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 23893  0131BA  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 23894  0131BE  C066  F060         	movff	sin@f,i2___ftsub@f1
 23895  0131C2  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 23896  0131C6  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 23897  0131CA  C066  F056         	movff	sin@f,floor@x
 23898  0131CE  C067  F057         	movff	sin@f+1,floor@x+1
 23899  0131D2  C068  F058         	movff	sin@f+2,floor@x+2
 23900  0131D6  ECDA  F0A3         	call	_floor	;wreg free
 23901  0131DA  C056  F063         	movff	?_floor,i2___ftsub@f2
 23902  0131DE  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 23903  0131E2  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 23904  0131E6  EC84  F0AD         	call	i2___ftsub	;wreg free
 23905  0131EA  C060  F066         	movff	?i2___ftsub,sin@f
 23906  0131EE  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 23907  0131F2  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 23908  0131F6  C066  F027         	movff	sin@f,i2___ftmul@f1
 23909  0131FA  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 23910  0131FE  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 23911  013202  0E00               	movlw	0
 23912  013204  6E2A               	movwf	i2___ftmul@f2,c
 23913  013206  0E80               	movlw	128
 23914  013208  6E2B               	movwf	i2___ftmul@f2+1,c
 23915  01320A  0E40               	movlw	64
 23916  01320C  6E2C               	movwf	i2___ftmul@f2+2,c
 23917  01320E  EC79  F0A2         	call	i2___ftmul	;wreg free
 23918  013212  C027  F066         	movff	?i2___ftmul,sin@f
 23919  013216  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 23920  01321A  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 23921  01321E  0E00               	movlw	0
 23922  013220  6E2A               	movwf	i2___ftge@ff1,c
 23923  013222  0E00               	movlw	0
 23924  013224  6E2B               	movwf	i2___ftge@ff1+1,c
 23925  013226  0E40               	movlw	64
 23926  013228  6E2C               	movwf	i2___ftge@ff1+2,c
 23927  01322A  C066  F02D         	movff	sin@f,i2___ftge@ff2
 23928  01322E  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 23929  013232  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 23930  013236  EC6E  F0A7         	call	i2___ftge	;wreg free
 23931  01323A  B0D8               	btfsc	status,0,c
 23932  01323C  D01D               	goto	i2l1682
 23933  01323E  C066  F060         	movff	sin@f,i2___ftsub@f1
 23934  013242  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 23935  013246  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 23936  01324A  0E00               	movlw	0
 23937  01324C  0100               	movlb	0	; () banked
 23938  01324E  6F63               	movwf	i2___ftsub@f2& (0+255),b
 23939  013250  0E00               	movlw	0
 23940  013252  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 23941  013254  0E40               	movlw	64
 23942  013256  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 23943  013258  EC84  F0AD         	call	i2___ftsub	;wreg free
 23944  01325C  C060  F066         	movff	?i2___ftsub,sin@f
 23945  013260  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 23946  013264  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 23947  013268  0100               	movlb	0	; () banked
 23948  01326A  5172               	movf	sin@sgn& (0+255),w,b
 23949  01326C  A4D8               	btfss	status,2,c
 23950  01326E  D002               	goto	i2u1497_40
 23951  013270  0E01               	movlw	1
 23952  013272  D001               	goto	i2u1498_40
 23953  013274                     i2u1497_40:
 23954  013274  0E00               	movlw	0
 23955  013276                     i2u1498_40:
 23956  013276  6F72               	movwf	sin@sgn& (0+255),b
 23957  013278                     i2l1682:
 23958                           
 23959                           ; BSR set to: 0
 23960  013278  0E00               	movlw	0
 23961  01327A  6E2A               	movwf	i2___ftge@ff1,c
 23962  01327C  0E80               	movlw	128
 23963  01327E  6E2B               	movwf	i2___ftge@ff1+1,c
 23964  013280  0E3F               	movlw	63
 23965  013282  6E2C               	movwf	i2___ftge@ff1+2,c
 23966  013284  C066  F02D         	movff	sin@f,i2___ftge@ff2
 23967  013288  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 23968  01328C  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 23969  013290  EC6E  F0A7         	call	i2___ftge	;wreg free
 23970  013294  B0D8               	btfsc	status,0,c
 23971  013296  D01C               	goto	i2l1683
 23972  013298  C066  F024         	movff	sin@f,i2___ftneg@f1
 23973  01329C  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 23974  0132A0  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 23975  0132A4  ECFF  F0AE         	call	i2___ftneg	;wreg free
 23976  0132A8  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23977  0132AC  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23978  0132B0  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23979  0132B4  0E00               	movlw	0
 23980  0132B6  6E43               	movwf	i2___ftadd@f2,c
 23981  0132B8  0E00               	movlw	0
 23982  0132BA  6E44               	movwf	i2___ftadd@f2+1,c
 23983  0132BC  0E40               	movlw	64
 23984  0132BE  6E45               	movwf	i2___ftadd@f2+2,c
 23985  0132C0  EC7F  F09C         	call	i2___ftadd	;wreg free
 23986  0132C4  C040  F066         	movff	?i2___ftadd,sin@f
 23987  0132C8  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 23988  0132CC  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 23989  0132D0                     i2l1683:
 23990  0132D0  C066  F027         	movff	sin@f,i2___ftmul@f1
 23991  0132D4  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 23992  0132D8  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 23993  0132DC  C066  F02A         	movff	sin@f,i2___ftmul@f2
 23994  0132E0  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 23995  0132E4  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 23996  0132E8  EC79  F0A2         	call	i2___ftmul	;wreg free
 23997  0132EC  C027  F06F         	movff	?i2___ftmul,sin@x2
 23998  0132F0  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 23999  0132F4  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 24000  0132F8  C06F  F04C         	movff	sin@x2,eval_poly@x
 24001  0132FC  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 24002  013300  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 24003  013304  0EB7               	movlw	low sin@coeff_b
 24004  013306  6E4F               	movwf	eval_poly@d,c
 24005  013308  0EF4               	movlw	high sin@coeff_b
 24006  01330A  6E50               	movwf	eval_poly@d+1,c
 24007  01330C  0E00               	movlw	0
 24008  01330E  6E52               	movwf	eval_poly@n+1,c
 24009  013310  0E03               	movlw	3
 24010  013312  6E51               	movwf	eval_poly@n,c
 24011  013314  EC49  F0A4         	call	_eval_poly	;wreg free
 24012  013318  C04C  F069         	movff	?_eval_poly,sin@y
 24013  01331C  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 24014  013320  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 24015  013324  C069  F018         	movff	sin@y,i2___ftdiv@f2
 24016  013328  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 24017  01332C  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 24018  013330  0E00               	movlw	0
 24019  013332  6E52               	movwf	eval_poly@n+1,c
 24020  013334  0E04               	movlw	4
 24021  013336  6E51               	movwf	eval_poly@n,c
 24022  013338  0E99               	movlw	low sin@coeff_a
 24023  01333A  6E4F               	movwf	eval_poly@d,c
 24024  01333C  0EF4               	movlw	high sin@coeff_a
 24025  01333E  6E50               	movwf	eval_poly@d+1,c
 24026  013340  C06F  F04C         	movff	sin@x2,eval_poly@x
 24027  013344  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 24028  013348  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 24029  01334C  EC49  F0A4         	call	_eval_poly	;wreg free
 24030  013350  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 24031  013354  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 24032  013358  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 24033  01335C  EC67  F0A3         	call	i2___ftdiv	;wreg free
 24034  013360  C015  F06C         	movff	?i2___ftdiv,_sin$3321
 24035  013364  C016  F06D         	movff	?i2___ftdiv+1,_sin$3321+1
 24036  013368  C017  F06E         	movff	?i2___ftdiv+2,_sin$3321+2
 24037  01336C  C066  F027         	movff	sin@f,i2___ftmul@f1
 24038  013370  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24039  013374  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24040  013378  C06C  F02A         	movff	_sin$3321,i2___ftmul@f2
 24041  01337C  C06D  F02B         	movff	_sin$3321+1,i2___ftmul@f2+1
 24042  013380  C06E  F02C         	movff	_sin$3321+2,i2___ftmul@f2+2
 24043  013384  EC79  F0A2         	call	i2___ftmul	;wreg free
 24044  013388  C027  F066         	movff	?i2___ftmul,sin@f
 24045  01338C  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 24046  013390  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 24047  013394  0100               	movlb	0	; () banked
 24048  013396  5172               	movf	sin@sgn& (0+255),w,b
 24049  013398  B4D8               	btfsc	status,2,c
 24050  01339A  D00F               	goto	i2l1684
 24051                           
 24052                           ; BSR set to: 0
 24053  01339C  C066  F024         	movff	sin@f,i2___ftneg@f1
 24054  0133A0  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 24055  0133A4  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 24056  0133A8  ECFF  F0AE         	call	i2___ftneg	;wreg free
 24057  0133AC  C024  F066         	movff	?i2___ftneg,?_sin
 24058  0133B0  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 24059  0133B4  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 24060  0133B8  0012               	return	
 24061  0133BA                     i2l1684:
 24062                           
 24063                           ; BSR set to: 0
 24064  0133BA  C066  F066         	movff	sin@f,?_sin
 24065  0133BE  C067  F067         	movff	sin@f+1,?_sin+1
 24066  0133C2  C068  F068         	movff	sin@f+2,?_sin+2
 24067  0133C6  0012               	return		;funcret
 24068  0133C8                     __end_of_sin:
 24069                           	opt stack 0
 24070                           tosu	equ	0xFFF
 24071                           tosh	equ	0xFFE
 24072                           tosl	equ	0xFFD
 24073                           pclatu	equ	0xFFB
 24074                           pclath	equ	0xFFA
 24075                           tblptru	equ	0xFF8
 24076                           tblptrh	equ	0xFF7
 24077                           tblptrl	equ	0xFF6
 24078                           tablat	equ	0xFF5
 24079                           prodh	equ	0xFF4
 24080                           prodl	equ	0xFF3
 24081                           intcon	equ	0xFF2
 24082                           postinc0	equ	0xFEE
 24083                           fsr0h	equ	0xFEA
 24084                           fsr0l	equ	0xFE9
 24085                           wreg	equ	0xFE8
 24086                           indf1	equ	0xFE7
 24087                           postdec1	equ	0xFE5
 24088                           fsr1h	equ	0xFE2
 24089                           fsr1l	equ	0xFE1
 24090                           bsr	equ	0xFE0
 24091                           indf2	equ	0xFDF
 24092                           postinc2	equ	0xFDE
 24093                           postdec2	equ	0xFDD
 24094                           fsr2h	equ	0xFDA
 24095                           fsr2l	equ	0xFD9
 24096                           status	equ	0xFD8
 24097                           
 24098 ;; *************** function i2___ftsub *****************
 24099 ;; Defined at:
 24100 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 24101 ;; Parameters:    Size  Location     Type
 24102 ;;  f1              3    0[BANK0 ] float 
 24103 ;;  f2              3    3[BANK0 ] float 
 24104 ;; Auto vars:     Size  Location     Type
 24105 ;;		None
 24106 ;; Return value:  Size  Location     Type
 24107 ;;                  3    0[BANK0 ] float 
 24108 ;; Registers used:
 24109 ;;		wreg, status,2, status,0, cstack
 24110 ;; Tracked objects:
 24111 ;;		On entry : 0/0
 24112 ;;		On exit  : 0/0
 24113 ;;		Unchanged: 0/0
 24114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24115 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24118 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24119 ;;Total ram usage:        6 bytes
 24120 ;; Hardware stack levels used:    1
 24121 ;; Hardware stack levels required when called:    2
 24122 ;; This function calls:
 24123 ;;		i2___ftadd
 24124 ;; This function is called by:
 24125 ;;		_sin
 24126 ;;		_sqrt
 24127 ;;		i2_printf
 24128 ;; This function uses a non-reentrant model
 24129 ;;
 24130                           
 24131                           	psect	text97
 24132  015B08                     __ptext97:
 24133                           	opt stack 0
 24134  015B08                     i2___ftsub:
 24135                           	opt stack 13
 24136                           
 24137                           ;incstack = 0
 24138  015B08  0100               	movlb	0	; () banked
 24139  015B0A  5163               	movf	i2___ftsub@f2& (0+255),w,b
 24140  015B0C  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 24141  015B0E  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 24142  015B10  B4D8               	btfsc	status,2,c
 24143  015B12  D006               	goto	i2l1547
 24144                           
 24145                           ; BSR set to: 0
 24146  015B14  0E00               	movlw	0
 24147  015B16  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 24148  015B18  0E00               	movlw	0
 24149  015B1A  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 24150  015B1C  0E80               	movlw	128
 24151  015B1E  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 24152  015B20                     i2l1547:
 24153                           
 24154                           ; BSR set to: 0
 24155                           
 24156                           ; BSR set to: 0
 24157  015B20  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 24158  015B24  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 24159  015B28  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 24160  015B2C  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 24161  015B30  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 24162  015B34  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 24163  015B38  EC7F  F09C         	call	i2___ftadd	;wreg free
 24164  015B3C  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 24165  015B40  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 24166  015B44  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 24167  015B48  0012               	return	
 24168  015B4A                     __end_ofi2___ftsub:
 24169                           	opt stack 0
 24170                           tosu	equ	0xFFF
 24171                           tosh	equ	0xFFE
 24172                           tosl	equ	0xFFD
 24173                           pclatu	equ	0xFFB
 24174                           pclath	equ	0xFFA
 24175                           tblptru	equ	0xFF8
 24176                           tblptrh	equ	0xFF7
 24177                           tblptrl	equ	0xFF6
 24178                           tablat	equ	0xFF5
 24179                           prodh	equ	0xFF4
 24180                           prodl	equ	0xFF3
 24181                           intcon	equ	0xFF2
 24182                           postinc0	equ	0xFEE
 24183                           fsr0h	equ	0xFEA
 24184                           fsr0l	equ	0xFE9
 24185                           wreg	equ	0xFE8
 24186                           indf1	equ	0xFE7
 24187                           postdec1	equ	0xFE5
 24188                           fsr1h	equ	0xFE2
 24189                           fsr1l	equ	0xFE1
 24190                           bsr	equ	0xFE0
 24191                           indf2	equ	0xFDF
 24192                           postinc2	equ	0xFDE
 24193                           postdec2	equ	0xFDD
 24194                           fsr2h	equ	0xFDA
 24195                           fsr2l	equ	0xFD9
 24196                           status	equ	0xFD8
 24197                           
 24198 ;; *************** function i2___ftneg *****************
 24199 ;; Defined at:
 24200 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 24201 ;; Parameters:    Size  Location     Type
 24202 ;;  f1              3   35[COMRAM] float 
 24203 ;; Auto vars:     Size  Location     Type
 24204 ;;		None
 24205 ;; Return value:  Size  Location     Type
 24206 ;;                  3   35[COMRAM] float 
 24207 ;; Registers used:
 24208 ;;		wreg, status,2, status,0
 24209 ;; Tracked objects:
 24210 ;;		On entry : 0/0
 24211 ;;		On exit  : 0/0
 24212 ;;		Unchanged: 0/0
 24213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24217 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24218 ;;Total ram usage:        3 bytes
 24219 ;; Hardware stack levels used:    1
 24220 ;; This function calls:
 24221 ;;		Nothing
 24222 ;; This function is called by:
 24223 ;;		_peakToRMS
 24224 ;;		_ADC_postProcessingCallback
 24225 ;;		_acos
 24226 ;;		_asin
 24227 ;;		_atan
 24228 ;;		_fabs
 24229 ;;		_sin
 24230 ;;		i2_printf
 24231 ;; This function uses a non-reentrant model
 24232 ;;
 24233                           
 24234                           	psect	text98
 24235  015DFE                     __ptext98:
 24236                           	opt stack 0
 24237  015DFE                     i2___ftneg:
 24238                           	opt stack 15
 24239                           
 24240                           ;incstack = 0
 24241  015DFE  5024               	movf	i2___ftneg@f1,w,c
 24242  015E00  1025               	iorwf	i2___ftneg@f1+1,w,c
 24243  015E02  1026               	iorwf	i2___ftneg@f1+2,w,c
 24244  015E04  B4D8               	btfsc	status,2,c
 24245  015E06  D006               	goto	i2l1541
 24246  015E08  0E00               	movlw	0
 24247  015E0A  1A24               	xorwf	i2___ftneg@f1,f,c
 24248  015E0C  0E00               	movlw	0
 24249  015E0E  1A25               	xorwf	i2___ftneg@f1+1,f,c
 24250  015E10  0E80               	movlw	128
 24251  015E12  1A26               	xorwf	i2___ftneg@f1+2,f,c
 24252  015E14                     i2l1541:
 24253  015E14  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 24254  015E18  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 24255  015E1C  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 24256  015E20  0012               	return		;funcret
 24257  015E22                     __end_ofi2___ftneg:
 24258                           	opt stack 0
 24259                           tosu	equ	0xFFF
 24260                           tosh	equ	0xFFE
 24261                           tosl	equ	0xFFD
 24262                           pclatu	equ	0xFFB
 24263                           pclath	equ	0xFFA
 24264                           tblptru	equ	0xFF8
 24265                           tblptrh	equ	0xFF7
 24266                           tblptrl	equ	0xFF6
 24267                           tablat	equ	0xFF5
 24268                           prodh	equ	0xFF4
 24269                           prodl	equ	0xFF3
 24270                           intcon	equ	0xFF2
 24271                           postinc0	equ	0xFEE
 24272                           fsr0h	equ	0xFEA
 24273                           fsr0l	equ	0xFE9
 24274                           wreg	equ	0xFE8
 24275                           indf1	equ	0xFE7
 24276                           postdec1	equ	0xFE5
 24277                           fsr1h	equ	0xFE2
 24278                           fsr1l	equ	0xFE1
 24279                           bsr	equ	0xFE0
 24280                           indf2	equ	0xFDF
 24281                           postinc2	equ	0xFDE
 24282                           postdec2	equ	0xFDD
 24283                           fsr2h	equ	0xFDA
 24284                           fsr2l	equ	0xFD9
 24285                           status	equ	0xFD8
 24286                           
 24287 ;; *************** function i2___ftdiv *****************
 24288 ;; Defined at:
 24289 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 24290 ;; Parameters:    Size  Location     Type
 24291 ;;  f1              3   20[COMRAM] float 
 24292 ;;  f2              3   23[COMRAM] float 
 24293 ;; Auto vars:     Size  Location     Type
 24294 ;;  __ftdiv         3   31[COMRAM] float 
 24295 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 24296 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 24297 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 24298 ;; Return value:  Size  Location     Type
 24299 ;;                  3   20[COMRAM] float 
 24300 ;; Registers used:
 24301 ;;		wreg, status,2, status,0, cstack
 24302 ;; Tracked objects:
 24303 ;;		On entry : 0/0
 24304 ;;		On exit  : 0/0
 24305 ;;		Unchanged: 0/0
 24306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24307 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24308 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24309 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24310 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24311 ;;Total ram usage:       15 bytes
 24312 ;; Hardware stack levels used:    1
 24313 ;; Hardware stack levels required when called:    1
 24314 ;; This function calls:
 24315 ;;		i2___ftpack
 24316 ;; This function is called by:
 24317 ;;		_peakToRMS
 24318 ;;		_currentMeasuredToPeak
 24319 ;;		_ADC_postProcessingCallback
 24320 ;;		_asin
 24321 ;;		_atan
 24322 ;;		_sin
 24323 ;; This function uses a non-reentrant model
 24324 ;;
 24325                           
 24326                           	psect	text99
 24327  0146CE                     __ptext99:
 24328                           	opt stack 0
 24329  0146CE                     i2___ftdiv:
 24330                           	opt stack 14
 24331                           
 24332                           ;incstack = 0
 24333  0146CE  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 24334  0146D2  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 24335  0146D4  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 24336  0146D6  3416               	rlcf	i2___ftdiv@f1+1,w,c
 24337  0146D8  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 24338  0146DA  E301               	bnc	u1459_41
 24339  0146DC  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 24340  0146DE                     u1459_41:
 24341  0146DE  501B               	movf	??i2___ftdiv,w,c
 24342  0146E0  6E1F               	movwf	i2___ftdiv@exp,c
 24343  0146E2  501F               	movf	i2___ftdiv@exp,w,c
 24344  0146E4  A4D8               	btfss	status,2,c
 24345  0146E6  D007               	goto	i2l1498
 24346  0146E8  0E00               	movlw	0
 24347  0146EA  6E15               	movwf	?i2___ftdiv,c
 24348  0146EC  0E00               	movlw	0
 24349  0146EE  6E16               	movwf	?i2___ftdiv+1,c
 24350  0146F0  0E00               	movlw	0
 24351  0146F2  6E17               	movwf	?i2___ftdiv+2,c
 24352  0146F4  0012               	return	
 24353  0146F6                     i2l1498:
 24354  0146F6  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 24355  0146FA  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 24356  0146FC  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 24357  0146FE  3419               	rlcf	i2___ftdiv@f2+1,w,c
 24358  014700  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 24359  014702  E301               	bnc	u1461_41
 24360  014704  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 24361  014706                     u1461_41:
 24362  014706  501B               	movf	??i2___ftdiv,w,c
 24363  014708  6E23               	movwf	i2___ftdiv@sign,c
 24364  01470A  5023               	movf	i2___ftdiv@sign,w,c
 24365  01470C  A4D8               	btfss	status,2,c
 24366  01470E  D007               	goto	i2l1500
 24367  014710  0E00               	movlw	0
 24368  014712  6E15               	movwf	?i2___ftdiv,c
 24369  014714  0E00               	movlw	0
 24370  014716  6E16               	movwf	?i2___ftdiv+1,c
 24371  014718  0E00               	movlw	0
 24372  01471A  6E17               	movwf	?i2___ftdiv+2,c
 24373  01471C  0012               	return	
 24374  01471E                     i2l1500:
 24375  01471E  0E00               	movlw	0
 24376  014720  6E20               	movwf	i2___ftdiv@f3,c
 24377  014722  0E00               	movlw	0
 24378  014724  6E21               	movwf	i2___ftdiv@f3+1,c
 24379  014726  0E00               	movlw	0
 24380  014728  6E22               	movwf	i2___ftdiv@f3+2,c
 24381  01472A  5023               	movf	i2___ftdiv@sign,w,c
 24382  01472C  0F89               	addlw	137
 24383  01472E  5E1F               	subwf	i2___ftdiv@exp,f,c
 24384  014730  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 24385  014734  501A               	movf	i2___ftdiv@f2+2,w,c
 24386  014736  1A23               	xorwf	i2___ftdiv@sign,f,c
 24387  014738  0E80               	movlw	128
 24388  01473A  1623               	andwf	i2___ftdiv@sign,f,c
 24389  01473C  8E16               	bsf	i2___ftdiv@f1+1,7,c
 24390  01473E  0EFF               	movlw	255
 24391  014740  1615               	andwf	i2___ftdiv@f1,f,c
 24392  014742  0EFF               	movlw	255
 24393  014744  1616               	andwf	i2___ftdiv@f1+1,f,c
 24394  014746  0E00               	movlw	0
 24395  014748  1617               	andwf	i2___ftdiv@f1+2,f,c
 24396  01474A  8E19               	bsf	i2___ftdiv@f2+1,7,c
 24397  01474C  0EFF               	movlw	255
 24398  01474E  1618               	andwf	i2___ftdiv@f2,f,c
 24399  014750  0EFF               	movlw	255
 24400  014752  1619               	andwf	i2___ftdiv@f2+1,f,c
 24401  014754  0E00               	movlw	0
 24402  014756  161A               	andwf	i2___ftdiv@f2+2,f,c
 24403  014758  0E18               	movlw	24
 24404  01475A  6E1E               	movwf	i2___ftdiv@cntr,c
 24405  01475C  90D8               	bcf	status,0,c
 24406  01475E  3620               	rlcf	i2___ftdiv@f3,f,c
 24407  014760  3621               	rlcf	i2___ftdiv@f3+1,f,c
 24408  014762  3622               	rlcf	i2___ftdiv@f3+2,f,c
 24409  014764  5018               	movf	i2___ftdiv@f2,w,c
 24410  014766  5C15               	subwf	i2___ftdiv@f1,w,c
 24411  014768  5019               	movf	i2___ftdiv@f2+1,w,c
 24412  01476A  5816               	subwfb	i2___ftdiv@f1+1,w,c
 24413  01476C  501A               	movf	i2___ftdiv@f2+2,w,c
 24414  01476E  5817               	subwfb	i2___ftdiv@f1+2,w,c
 24415  014770  A0D8               	btfss	status,0,c
 24416  014772  D007               	goto	i2l1502
 24417  014774  5018               	movf	i2___ftdiv@f2,w,c
 24418  014776  5E15               	subwf	i2___ftdiv@f1,f,c
 24419  014778  5019               	movf	i2___ftdiv@f2+1,w,c
 24420  01477A  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 24421  01477C  501A               	movf	i2___ftdiv@f2+2,w,c
 24422  01477E  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 24423  014780  8020               	bsf	i2___ftdiv@f3,0,c
 24424  014782                     i2l1502:
 24425  014782  90D8               	bcf	status,0,c
 24426  014784  3615               	rlcf	i2___ftdiv@f1,f,c
 24427  014786  3616               	rlcf	i2___ftdiv@f1+1,f,c
 24428  014788  3617               	rlcf	i2___ftdiv@f1+2,f,c
 24429  01478A  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 24430  01478C  D7E7               	goto	i2l1501
 24431  01478E  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 24432  014792  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 24433  014796  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 24434  01479A  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 24435  01479E  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 24436  0147A2  ECE0  F0A5         	call	i2___ftpack	;wreg free
 24437  0147A6  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 24438  0147AA  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 24439  0147AE  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 24440  0147B2  0012               	return	
 24441  0147B4                     __end_ofi2___ftdiv:
 24442                           	opt stack 0
 24443                           tosu	equ	0xFFF
 24444                           tosh	equ	0xFFE
 24445                           tosl	equ	0xFFD
 24446                           pclatu	equ	0xFFB
 24447                           pclath	equ	0xFFA
 24448                           tblptru	equ	0xFF8
 24449                           tblptrh	equ	0xFF7
 24450                           tblptrl	equ	0xFF6
 24451                           tablat	equ	0xFF5
 24452                           prodh	equ	0xFF4
 24453                           prodl	equ	0xFF3
 24454                           intcon	equ	0xFF2
 24455                           postinc0	equ	0xFEE
 24456                           fsr0h	equ	0xFEA
 24457                           fsr0l	equ	0xFE9
 24458                           wreg	equ	0xFE8
 24459                           indf1	equ	0xFE7
 24460                           postdec1	equ	0xFE5
 24461                           fsr1h	equ	0xFE2
 24462                           fsr1l	equ	0xFE1
 24463                           bsr	equ	0xFE0
 24464                           indf2	equ	0xFDF
 24465                           postinc2	equ	0xFDE
 24466                           postdec2	equ	0xFDD
 24467                           fsr2h	equ	0xFDA
 24468                           fsr2l	equ	0xFD9
 24469                           status	equ	0xFD8
 24470                           
 24471 ;; *************** function _floor *****************
 24472 ;; Defined at:
 24473 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 24474 ;; Parameters:    Size  Location     Type
 24475 ;;  x               3   85[COMRAM] float 
 24476 ;; Auto vars:     Size  Location     Type
 24477 ;;  i               3   88[COMRAM] float 
 24478 ;;  expon           2   91[COMRAM] int 
 24479 ;; Return value:  Size  Location     Type
 24480 ;;                  3   85[COMRAM] int 
 24481 ;; Registers used:
 24482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24483 ;; Tracked objects:
 24484 ;;		On entry : 0/0
 24485 ;;		On exit  : 0/0
 24486 ;;		Unchanged: 0/0
 24487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24488 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24489 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24492 ;;Total ram usage:        8 bytes
 24493 ;; Hardware stack levels used:    1
 24494 ;; Hardware stack levels required when called:    2
 24495 ;; This function calls:
 24496 ;;		___altoft
 24497 ;;		_frexp
 24498 ;;		i2___ftadd
 24499 ;;		i2___ftge
 24500 ;;		i2___fttol
 24501 ;; This function is called by:
 24502 ;;		_sin
 24503 ;; This function uses a non-reentrant model
 24504 ;;
 24505                           
 24506                           	psect	text100
 24507  0147B4                     __ptext100:
 24508                           	opt stack 0
 24509  0147B4                     _floor:
 24510                           	opt stack 11
 24511                           
 24512                           ;incstack = 0
 24513  0147B4  C056  F001         	movff	floor@x,frexp@value
 24514  0147B8  C057  F002         	movff	floor@x+1,frexp@value+1
 24515  0147BC  C058  F003         	movff	floor@x+2,frexp@value+2
 24516  0147C0  0E5C               	movlw	low floor@expon
 24517  0147C2  6E04               	movwf	frexp@eptr,c
 24518  0147C4  0E00               	movlw	high floor@expon
 24519  0147C6  6E05               	movwf	frexp@eptr+1,c
 24520  0147C8  EC04  F0A9         	call	_frexp	;wreg free
 24521  0147CC  AE5D               	btfss	floor@expon+1,7,c
 24522  0147CE  D010               	goto	i2l1886
 24523  0147D0  AE58               	btfss	floor@x+2,7,c
 24524  0147D2  D007               	goto	i2l1887
 24525  0147D4  0E00               	movlw	0
 24526  0147D6  6E56               	movwf	?_floor,c
 24527  0147D8  0E80               	movlw	128
 24528  0147DA  6E57               	movwf	?_floor+1,c
 24529  0147DC  0EBF               	movlw	191
 24530  0147DE  6E58               	movwf	?_floor+2,c
 24531  0147E0  0012               	return	
 24532  0147E2                     i2l1887:
 24533  0147E2  0E00               	movlw	0
 24534  0147E4  6E56               	movwf	?_floor,c
 24535  0147E6  0E00               	movlw	0
 24536  0147E8  6E57               	movwf	?_floor+1,c
 24537  0147EA  0E00               	movlw	0
 24538  0147EC  6E58               	movwf	?_floor+2,c
 24539  0147EE  0012               	return	
 24540  0147F0                     i2l1886:
 24541  0147F0  505D               	movf	floor@expon+1,w,c
 24542  0147F2  E104               	bnz	i2u1493_40
 24543  0147F4  0E15               	movlw	21
 24544  0147F6  5C5C               	subwf	floor@expon,w,c
 24545  0147F8  A0D8               	btfss	status,0,c
 24546  0147FA  D007               	goto	i2l1889
 24547  0147FC                     i2u1493_40:
 24548  0147FC  C056  F056         	movff	floor@x,?_floor
 24549  014800  C057  F057         	movff	floor@x+1,?_floor+1
 24550  014804  C058  F058         	movff	floor@x+2,?_floor+2
 24551  014808  0012               	return	
 24552  01480A                     i2l1889:
 24553  01480A  C056  F03D         	movff	floor@x,i2___fttol@f1
 24554  01480E  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 24555  014812  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 24556  014816  ECFF  F0A1         	call	i2___fttol	;wreg free
 24557  01481A  C03D  F04C         	movff	?i2___fttol,___altoft@c
 24558  01481E  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 24559  014822  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 24560  014826  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 24561  01482A  EC40  F0A9         	call	___altoft	;wreg free
 24562  01482E  C04C  F059         	movff	?___altoft,floor@i
 24563  014832  C04D  F05A         	movff	?___altoft+1,floor@i+1
 24564  014836  C04E  F05B         	movff	?___altoft+2,floor@i+2
 24565  01483A  C056  F02A         	movff	floor@x,i2___ftge@ff1
 24566  01483E  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 24567  014842  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 24568  014846  C059  F02D         	movff	floor@i,i2___ftge@ff2
 24569  01484A  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 24570  01484E  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 24571  014852  EC6E  F0A7         	call	i2___ftge	;wreg free
 24572  014856  B0D8               	btfsc	status,0,c
 24573  014858  D015               	goto	i2l1890
 24574  01485A  C059  F040         	movff	floor@i,i2___ftadd@f1
 24575  01485E  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 24576  014862  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 24577  014866  0E00               	movlw	0
 24578  014868  6E43               	movwf	i2___ftadd@f2,c
 24579  01486A  0E80               	movlw	128
 24580  01486C  6E44               	movwf	i2___ftadd@f2+1,c
 24581  01486E  0EBF               	movlw	191
 24582  014870  6E45               	movwf	i2___ftadd@f2+2,c
 24583  014872  EC7F  F09C         	call	i2___ftadd	;wreg free
 24584  014876  C040  F056         	movff	?i2___ftadd,?_floor
 24585  01487A  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 24586  01487E  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 24587  014882  0012               	return	
 24588  014884                     i2l1890:
 24589  014884  C059  F056         	movff	floor@i,?_floor
 24590  014888  C05A  F057         	movff	floor@i+1,?_floor+1
 24591  01488C  C05B  F058         	movff	floor@i+2,?_floor+2
 24592  014890  0012               	return		;funcret
 24593  014892                     __end_of_floor:
 24594                           	opt stack 0
 24595                           tosu	equ	0xFFF
 24596                           tosh	equ	0xFFE
 24597                           tosl	equ	0xFFD
 24598                           pclatu	equ	0xFFB
 24599                           pclath	equ	0xFFA
 24600                           tblptru	equ	0xFF8
 24601                           tblptrh	equ	0xFF7
 24602                           tblptrl	equ	0xFF6
 24603                           tablat	equ	0xFF5
 24604                           prodh	equ	0xFF4
 24605                           prodl	equ	0xFF3
 24606                           intcon	equ	0xFF2
 24607                           postinc0	equ	0xFEE
 24608                           fsr0h	equ	0xFEA
 24609                           fsr0l	equ	0xFE9
 24610                           wreg	equ	0xFE8
 24611                           indf1	equ	0xFE7
 24612                           postdec1	equ	0xFE5
 24613                           fsr1h	equ	0xFE2
 24614                           fsr1l	equ	0xFE1
 24615                           bsr	equ	0xFE0
 24616                           indf2	equ	0xFDF
 24617                           postinc2	equ	0xFDE
 24618                           postdec2	equ	0xFDD
 24619                           fsr2h	equ	0xFDA
 24620                           fsr2l	equ	0xFD9
 24621                           status	equ	0xFD8
 24622                           
 24623 ;; *************** function i2___fttol *****************
 24624 ;; Defined at:
 24625 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 24626 ;; Parameters:    Size  Location     Type
 24627 ;;  f1              3   60[COMRAM] float 
 24628 ;; Auto vars:     Size  Location     Type
 24629 ;;  __fttol         4   70[COMRAM] unsigned long 
 24630 ;;  __fttol         1   74[COMRAM] unsigned char 
 24631 ;;  __fttol         1   69[COMRAM] unsigned char 
 24632 ;; Return value:  Size  Location     Type
 24633 ;;                  4   60[COMRAM] long 
 24634 ;; Registers used:
 24635 ;;		wreg, status,2, status,0
 24636 ;; Tracked objects:
 24637 ;;		On entry : 0/0
 24638 ;;		On exit  : 0/0
 24639 ;;		Unchanged: 0/0
 24640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24641 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24642 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24644 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24645 ;;Total ram usage:       15 bytes
 24646 ;; Hardware stack levels used:    1
 24647 ;; This function calls:
 24648 ;;		Nothing
 24649 ;; This function is called by:
 24650 ;;		_floor
 24651 ;;		i2_printf
 24652 ;; This function uses a non-reentrant model
 24653 ;;
 24654                           
 24655                           	psect	text101
 24656  0143FE                     __ptext101:
 24657                           	opt stack 0
 24658  0143FE                     i2___fttol:
 24659                           	opt stack 15
 24660                           
 24661                           ;incstack = 0
 24662  0143FE  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 24663  014402  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 24664  014404  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 24665  014406  343E               	rlcf	i2___fttol@f1+1,w,c
 24666  014408  3641               	rlcf	??i2___fttol& (0+255),f,c
 24667  01440A  E301               	bnc	u1480_41
 24668  01440C  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 24669  01440E                     u1480_41:
 24670  01440E  5041               	movf	??i2___fttol,w,c
 24671  014410  6E4B               	movwf	i2___fttol@exp1,c
 24672  014412  504B               	movf	i2___fttol@exp1,w,c
 24673  014414  A4D8               	btfss	status,2,c
 24674  014416  D009               	goto	i2l1551
 24675  014418  0E00               	movlw	0
 24676  01441A  6E3D               	movwf	?i2___fttol,c
 24677  01441C  0E00               	movlw	0
 24678  01441E  6E3E               	movwf	?i2___fttol+1,c
 24679  014420  0E00               	movlw	0
 24680  014422  6E3F               	movwf	?i2___fttol+2,c
 24681  014424  0E00               	movlw	0
 24682  014426  6E40               	movwf	?i2___fttol+3,c
 24683  014428  0012               	return	
 24684  01442A                     i2l1551:
 24685  01442A  0E17               	movlw	23
 24686  01442C  6E41               	movwf	??i2___fttol& (0+255),c
 24687  01442E  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 24688  014432  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 24689  014436  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 24690  01443A  2841               	incf	??i2___fttol,w,c
 24691  01443C  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 24692  01443E  D004               	goto	i2u1482_40
 24693  014440                     i2u1482_45:
 24694  014440  90D8               	bcf	status,0,c
 24695  014442  3244               	rrcf	??i2___fttol+3,f,c
 24696  014444  3243               	rrcf	??i2___fttol+2,f,c
 24697  014446  3242               	rrcf	??i2___fttol+1,f,c
 24698  014448                     i2u1482_40:
 24699  014448  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 24700  01444A  D7FA               	goto	i2u1482_45
 24701  01444C  5042               	movf	??i2___fttol+1,w,c
 24702  01444E  6E46               	movwf	i2___fttol@sign1,c
 24703  014450  8E3E               	bsf	i2___fttol@f1+1,7,c
 24704  014452  0EFF               	movlw	255
 24705  014454  163D               	andwf	i2___fttol@f1,f,c
 24706  014456  0EFF               	movlw	255
 24707  014458  163E               	andwf	i2___fttol@f1+1,f,c
 24708  01445A  0E00               	movlw	0
 24709  01445C  163F               	andwf	i2___fttol@f1+2,f,c
 24710  01445E  503D               	movf	i2___fttol@f1,w,c
 24711  014460  6E47               	movwf	i2___fttol@lval,c
 24712  014462  503E               	movf	i2___fttol@f1+1,w,c
 24713  014464  6E48               	movwf	i2___fttol@lval+1,c
 24714  014466  503F               	movf	i2___fttol@f1+2,w,c
 24715  014468  6E49               	movwf	i2___fttol@lval+2,c
 24716  01446A  6A4A               	clrf	i2___fttol@lval+3,c
 24717  01446C  0E8E               	movlw	142
 24718  01446E  5E4B               	subwf	i2___fttol@exp1,f,c
 24719  014470  AE4B               	btfss	i2___fttol@exp1,7,c
 24720  014472  D016               	goto	i2l1553
 24721  014474  504B               	movf	i2___fttol@exp1,w,c
 24722  014476  0A80               	xorlw	128
 24723  014478  0F8F               	addlw	143
 24724  01447A  B0D8               	btfsc	status,0,c
 24725  01447C  D009               	goto	i2l1554
 24726  01447E  0E00               	movlw	0
 24727  014480  6E3D               	movwf	?i2___fttol,c
 24728  014482  0E00               	movlw	0
 24729  014484  6E3E               	movwf	?i2___fttol+1,c
 24730  014486  0E00               	movlw	0
 24731  014488  6E3F               	movwf	?i2___fttol+2,c
 24732  01448A  0E00               	movlw	0
 24733  01448C  6E40               	movwf	?i2___fttol+3,c
 24734  01448E  0012               	return	
 24735  014490                     i2l1554:
 24736  014490  90D8               	bcf	status,0,c
 24737  014492  324A               	rrcf	i2___fttol@lval+3,f,c
 24738  014494  3249               	rrcf	i2___fttol@lval+2,f,c
 24739  014496  3248               	rrcf	i2___fttol@lval+1,f,c
 24740  014498  3247               	rrcf	i2___fttol@lval,f,c
 24741  01449A  3E4B               	incfsz	i2___fttol@exp1,f,c
 24742  01449C  D7F9               	goto	i2l1554
 24743  01449E  D015               	goto	i2u1486_40
 24744  0144A0                     i2l1553:
 24745  0144A0  0E17               	movlw	23
 24746  0144A2  644B               	cpfsgt	i2___fttol@exp1,c
 24747  0144A4  D00F               	goto	i2l1559
 24748  0144A6  0E00               	movlw	0
 24749  0144A8  6E3D               	movwf	?i2___fttol,c
 24750  0144AA  0E00               	movlw	0
 24751  0144AC  6E3E               	movwf	?i2___fttol+1,c
 24752  0144AE  0E00               	movlw	0
 24753  0144B0  6E3F               	movwf	?i2___fttol+2,c
 24754  0144B2  0E00               	movlw	0
 24755  0144B4  6E40               	movwf	?i2___fttol+3,c
 24756  0144B6  0012               	return	
 24757  0144B8  90D8               	bcf	status,0,c
 24758  0144BA  3647               	rlcf	i2___fttol@lval,f,c
 24759  0144BC  3648               	rlcf	i2___fttol@lval+1,f,c
 24760  0144BE  3649               	rlcf	i2___fttol@lval+2,f,c
 24761  0144C0  364A               	rlcf	i2___fttol@lval+3,f,c
 24762  0144C2  064B               	decf	i2___fttol@exp1,f,c
 24763  0144C4                     i2l1559:
 24764  0144C4  504B               	movf	i2___fttol@exp1,w,c
 24765  0144C6  A4D8               	btfss	status,2,c
 24766  0144C8  D7F7               	goto	i2l1560
 24767  0144CA                     i2u1486_40:
 24768  0144CA  5046               	movf	i2___fttol@sign1,w,c
 24769  0144CC  B4D8               	btfsc	status,2,c
 24770  0144CE  D008               	goto	i2l1562
 24771  0144D0  1E4A               	comf	i2___fttol@lval+3,f,c
 24772  0144D2  1E49               	comf	i2___fttol@lval+2,f,c
 24773  0144D4  1E48               	comf	i2___fttol@lval+1,f,c
 24774  0144D6  6C47               	negf	i2___fttol@lval,c
 24775  0144D8  0E00               	movlw	0
 24776  0144DA  2248               	addwfc	i2___fttol@lval+1,f,c
 24777  0144DC  2249               	addwfc	i2___fttol@lval+2,f,c
 24778  0144DE  224A               	addwfc	i2___fttol@lval+3,f,c
 24779  0144E0                     i2l1562:
 24780  0144E0  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 24781  0144E4  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 24782  0144E8  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 24783  0144EC  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 24784  0144F0  0012               	return	
 24785  0144F2                     __end_ofi2___fttol:
 24786                           	opt stack 0
 24787                           tosu	equ	0xFFF
 24788                           tosh	equ	0xFFE
 24789                           tosl	equ	0xFFD
 24790                           pclatu	equ	0xFFB
 24791                           pclath	equ	0xFFA
 24792                           tblptru	equ	0xFF8
 24793                           tblptrh	equ	0xFF7
 24794                           tblptrl	equ	0xFF6
 24795                           tablat	equ	0xFF5
 24796                           prodh	equ	0xFF4
 24797                           prodl	equ	0xFF3
 24798                           intcon	equ	0xFF2
 24799                           postinc0	equ	0xFEE
 24800                           fsr0h	equ	0xFEA
 24801                           fsr0l	equ	0xFE9
 24802                           wreg	equ	0xFE8
 24803                           indf1	equ	0xFE7
 24804                           postdec1	equ	0xFE5
 24805                           fsr1h	equ	0xFE2
 24806                           fsr1l	equ	0xFE1
 24807                           bsr	equ	0xFE0
 24808                           indf2	equ	0xFDF
 24809                           postinc2	equ	0xFDE
 24810                           postdec2	equ	0xFDD
 24811                           fsr2h	equ	0xFDA
 24812                           fsr2l	equ	0xFD9
 24813                           status	equ	0xFD8
 24814                           
 24815 ;; *************** function i2___ftge *****************
 24816 ;; Defined at:
 24817 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 24818 ;; Parameters:    Size  Location     Type
 24819 ;;  ff1             3   41[COMRAM] float 
 24820 ;;  ff2             3   44[COMRAM] float 
 24821 ;; Auto vars:     Size  Location     Type
 24822 ;;		None
 24823 ;; Return value:  Size  Location     Type
 24824 ;;		None               void
 24825 ;; Registers used:
 24826 ;;		wreg, status,2, status,0
 24827 ;; Tracked objects:
 24828 ;;		On entry : 0/0
 24829 ;;		On exit  : 0/0
 24830 ;;		Unchanged: 0/0
 24831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24832 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24834 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24835 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24836 ;;Total ram usage:        9 bytes
 24837 ;; Hardware stack levels used:    1
 24838 ;; This function calls:
 24839 ;;		Nothing
 24840 ;; This function is called by:
 24841 ;;		_asin
 24842 ;;		_atan
 24843 ;;		_sin
 24844 ;;		_sqrt
 24845 ;;		_floor
 24846 ;;		i2_printf
 24847 ;; This function uses a non-reentrant model
 24848 ;;
 24849                           
 24850                           	psect	text102
 24851  014EDC                     __ptext102:
 24852                           	opt stack 0
 24853  014EDC                     i2___ftge:
 24854                           	opt stack 15
 24855                           
 24856                           ;incstack = 0
 24857  014EDC  AE2C               	btfss	i2___ftge@ff1+2,7,c
 24858  014EDE  D016               	goto	i2l1523
 24859  014EE0  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 24860  014EE4  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 24861  014EE8  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 24862  014EEC  1E30               	comf	??i2___ftge,f,c
 24863  014EEE  1E31               	comf	??i2___ftge+1,f,c
 24864  014EF0  1E32               	comf	??i2___ftge+2,f,c
 24865  014EF2  2A30               	incf	??i2___ftge,f,c
 24866  014EF4  0E00               	movlw	0
 24867  014EF6  2231               	addwfc	??i2___ftge+1,f,c
 24868  014EF8  2232               	addwfc	??i2___ftge+2,f,c
 24869  014EFA  0E00               	movlw	0
 24870  014EFC  2430               	addwf	??i2___ftge,w,c
 24871  014EFE  6E2A               	movwf	i2___ftge@ff1,c
 24872  014F00  0E00               	movlw	0
 24873  014F02  2031               	addwfc	??i2___ftge+1,w,c
 24874  014F04  6E2B               	movwf	i2___ftge@ff1+1,c
 24875  014F06  0E80               	movlw	128
 24876  014F08  2032               	addwfc	??i2___ftge+2,w,c
 24877  014F0A  6E2C               	movwf	i2___ftge@ff1+2,c
 24878  014F0C                     i2l1523:
 24879  014F0C  AE2F               	btfss	i2___ftge@ff2+2,7,c
 24880  014F0E  D016               	goto	i2l1524
 24881  014F10  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 24882  014F14  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 24883  014F18  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 24884  014F1C  1E30               	comf	??i2___ftge,f,c
 24885  014F1E  1E31               	comf	??i2___ftge+1,f,c
 24886  014F20  1E32               	comf	??i2___ftge+2,f,c
 24887  014F22  2A30               	incf	??i2___ftge,f,c
 24888  014F24  0E00               	movlw	0
 24889  014F26  2231               	addwfc	??i2___ftge+1,f,c
 24890  014F28  2232               	addwfc	??i2___ftge+2,f,c
 24891  014F2A  0E00               	movlw	0
 24892  014F2C  2430               	addwf	??i2___ftge,w,c
 24893  014F2E  6E2D               	movwf	i2___ftge@ff2,c
 24894  014F30  0E00               	movlw	0
 24895  014F32  2031               	addwfc	??i2___ftge+1,w,c
 24896  014F34  6E2E               	movwf	i2___ftge@ff2+1,c
 24897  014F36  0E80               	movlw	128
 24898  014F38  2032               	addwfc	??i2___ftge+2,w,c
 24899  014F3A  6E2F               	movwf	i2___ftge@ff2+2,c
 24900  014F3C                     i2l1524:
 24901  014F3C  0E00               	movlw	0
 24902  014F3E  1A2A               	xorwf	i2___ftge@ff1,f,c
 24903  014F40  0E00               	movlw	0
 24904  014F42  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 24905  014F44  0E80               	movlw	128
 24906  014F46  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 24907  014F48  0E00               	movlw	0
 24908  014F4A  1A2D               	xorwf	i2___ftge@ff2,f,c
 24909  014F4C  0E00               	movlw	0
 24910  014F4E  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 24911  014F50  0E80               	movlw	128
 24912  014F52  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 24913  014F54  502D               	movf	i2___ftge@ff2,w,c
 24914  014F56  5C2A               	subwf	i2___ftge@ff1,w,c
 24915  014F58  502E               	movf	i2___ftge@ff2+1,w,c
 24916  014F5A  582B               	subwfb	i2___ftge@ff1+1,w,c
 24917  014F5C  502F               	movf	i2___ftge@ff2+2,w,c
 24918  014F5E  582C               	subwfb	i2___ftge@ff1+2,w,c
 24919  014F60  B0D8               	btfsc	status,0,c
 24920  014F62  D002               	goto	i2l11285
 24921  014F64  90D8               	bcf	status,0,c
 24922  014F66  0012               	return	
 24923  014F68                     i2l11285:
 24924  014F68  80D8               	bsf	status,0,c
 24925  014F6A  0012               	return	
 24926  014F6C                     __end_ofi2___ftge:
 24927                           	opt stack 0
 24928                           tosu	equ	0xFFF
 24929                           tosh	equ	0xFFE
 24930                           tosl	equ	0xFFD
 24931                           pclatu	equ	0xFFB
 24932                           pclath	equ	0xFFA
 24933                           tblptru	equ	0xFF8
 24934                           tblptrh	equ	0xFF7
 24935                           tblptrl	equ	0xFF6
 24936                           tablat	equ	0xFF5
 24937                           prodh	equ	0xFF4
 24938                           prodl	equ	0xFF3
 24939                           intcon	equ	0xFF2
 24940                           postinc0	equ	0xFEE
 24941                           fsr0h	equ	0xFEA
 24942                           fsr0l	equ	0xFE9
 24943                           wreg	equ	0xFE8
 24944                           indf1	equ	0xFE7
 24945                           postdec1	equ	0xFE5
 24946                           fsr1h	equ	0xFE2
 24947                           fsr1l	equ	0xFE1
 24948                           bsr	equ	0xFE0
 24949                           indf2	equ	0xFDF
 24950                           postinc2	equ	0xFDE
 24951                           postdec2	equ	0xFDD
 24952                           fsr2h	equ	0xFDA
 24953                           fsr2l	equ	0xFD9
 24954                           status	equ	0xFD8
 24955                           
 24956 ;; *************** function _frexp *****************
 24957 ;; Defined at:
 24958 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 24959 ;; Parameters:    Size  Location     Type
 24960 ;;  value           3    0[COMRAM] float 
 24961 ;;  eptr            2    3[COMRAM] PTR int 
 24962 ;;		 -> floor@expon(2), 
 24963 ;; Auto vars:     Size  Location     Type
 24964 ;;		None
 24965 ;; Return value:  Size  Location     Type
 24966 ;;                  3    0[COMRAM] PTR int 
 24967 ;; Registers used:
 24968 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24969 ;; Tracked objects:
 24970 ;;		On entry : 0/0
 24971 ;;		On exit  : 0/0
 24972 ;;		Unchanged: 0/0
 24973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24974 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24976 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24977 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24978 ;;Total ram usage:        7 bytes
 24979 ;; Hardware stack levels used:    1
 24980 ;; This function calls:
 24981 ;;		Nothing
 24982 ;; This function is called by:
 24983 ;;		_floor
 24984 ;; This function uses a non-reentrant model
 24985 ;;
 24986                           
 24987                           	psect	text103
 24988  015208                     __ptext103:
 24989                           	opt stack 0
 24990  015208                     _frexp:
 24991                           	opt stack 12
 24992                           
 24993                           ;incstack = 0
 24994  015208  5001               	movf	frexp@value,w,c
 24995  01520A  1002               	iorwf	frexp@value+1,w,c
 24996  01520C  1003               	iorwf	frexp@value+2,w,c
 24997  01520E  A4D8               	btfss	status,2,c
 24998  015210  D009               	goto	i2l1895
 24999  015212  C004  FFD9         	movff	frexp@eptr,fsr2l
 25000  015216  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25001  01521A  0E00               	movlw	0
 25002  01521C  6EDE               	movwf	postinc2,c
 25003  01521E  0E00               	movlw	0
 25004  015220  6EDD               	movwf	postdec2,c
 25005                           
 25006                           ;	Return value of _frexp is never used
 25007  015222  0012               	return	
 25008  015224                     i2l1895:
 25009  015224  5003               	movf	frexp@value+2,w,c
 25010  015226  0B7F               	andlw	127
 25011  015228  6E06               	movwf	??_frexp& (0+255),c
 25012  01522A  6A07               	clrf	(??_frexp+1)& (0+255),c
 25013  01522C  90D8               	bcf	status,0,c
 25014  01522E  3606               	rlcf	??_frexp,f,c
 25015  015230  3607               	rlcf	??_frexp+1,f,c
 25016  015232  C004  FFD9         	movff	frexp@eptr,fsr2l
 25017  015236  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25018  01523A  C006  FFDE         	movff	??_frexp,postinc2
 25019  01523E  C007  FFDD         	movff	??_frexp+1,postdec2
 25020  015242  AE02               	btfss	frexp@value+1,7,c
 25021  015244  D003               	goto	i2u1479_40
 25022  015246  6A06               	clrf	??_frexp& (0+255),c
 25023  015248  2A06               	incf	??_frexp& (0+255),f,c
 25024  01524A  D001               	goto	i2u1479_48
 25025  01524C                     i2u1479_40:
 25026  01524C  6A06               	clrf	??_frexp& (0+255),c
 25027  01524E                     i2u1479_48:
 25028  01524E  5006               	movf	??_frexp,w,c
 25029  015250  C004  FFD9         	movff	frexp@eptr,fsr2l
 25030  015254  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25031  015258  12DE               	iorwf	postinc2,f,c
 25032  01525A  0E00               	movlw	0
 25033  01525C  12DD               	iorwf	postdec2,f,c
 25034  01525E  C004  FFD9         	movff	frexp@eptr,fsr2l
 25035  015262  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25036  015266  0E82               	movlw	130
 25037  015268  26DE               	addwf	postinc2,f,c
 25038  01526A  0EFF               	movlw	255
 25039  01526C  22DD               	addwfc	postdec2,f,c
 25040  01526E  8003               	bsf	frexp@value+2,0,c
 25041  015270  8203               	bsf	frexp@value+2,1,c
 25042  015272  8403               	bsf	frexp@value+2,2,c
 25043  015274  8603               	bsf	frexp@value+2,3,c
 25044  015276  8803               	bsf	frexp@value+2,4,c
 25045  015278  8A03               	bsf	frexp@value+2,5,c
 25046  01527A  9C03               	bcf	frexp@value+2,6,c
 25047  01527C  9E02               	bcf	frexp@value+1,7,c
 25048  01527E  0012               	return	
 25049  015280                     __end_of_frexp:
 25050                           	opt stack 0
 25051                           tosu	equ	0xFFF
 25052                           tosh	equ	0xFFE
 25053                           tosl	equ	0xFFD
 25054                           pclatu	equ	0xFFB
 25055                           pclath	equ	0xFFA
 25056                           tblptru	equ	0xFF8
 25057                           tblptrh	equ	0xFF7
 25058                           tblptrl	equ	0xFF6
 25059                           tablat	equ	0xFF5
 25060                           prodh	equ	0xFF4
 25061                           prodl	equ	0xFF3
 25062                           intcon	equ	0xFF2
 25063                           postinc0	equ	0xFEE
 25064                           fsr0h	equ	0xFEA
 25065                           fsr0l	equ	0xFE9
 25066                           wreg	equ	0xFE8
 25067                           indf1	equ	0xFE7
 25068                           postdec1	equ	0xFE5
 25069                           fsr1h	equ	0xFE2
 25070                           fsr1l	equ	0xFE1
 25071                           bsr	equ	0xFE0
 25072                           indf2	equ	0xFDF
 25073                           postinc2	equ	0xFDE
 25074                           postdec2	equ	0xFDD
 25075                           fsr2h	equ	0xFDA
 25076                           fsr2l	equ	0xFD9
 25077                           status	equ	0xFD8
 25078                           
 25079 ;; *************** function ___altoft *****************
 25080 ;; Defined at:
 25081 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 25082 ;; Parameters:    Size  Location     Type
 25083 ;;  c               4   75[COMRAM] long 
 25084 ;; Auto vars:     Size  Location     Type
 25085 ;;  sign            1   84[COMRAM] unsigned char 
 25086 ;;  exp             1   83[COMRAM] unsigned char 
 25087 ;; Return value:  Size  Location     Type
 25088 ;;                  3   75[COMRAM] float 
 25089 ;; Registers used:
 25090 ;;		wreg, status,2, status,0, cstack
 25091 ;; Tracked objects:
 25092 ;;		On entry : 0/0
 25093 ;;		On exit  : 0/0
 25094 ;;		Unchanged: 0/0
 25095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25096 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25097 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25098 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25099 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25100 ;;Total ram usage:       10 bytes
 25101 ;; Hardware stack levels used:    1
 25102 ;; Hardware stack levels required when called:    1
 25103 ;; This function calls:
 25104 ;;		i2___ftpack
 25105 ;; This function is called by:
 25106 ;;		_floor
 25107 ;; This function uses a non-reentrant model
 25108 ;;
 25109                           
 25110                           	psect	text104
 25111  015280                     __ptext104:
 25112                           	opt stack 0
 25113  015280                     ___altoft:
 25114                           	opt stack 11
 25115                           
 25116                           ;incstack = 0
 25117  015280  0E00               	movlw	0
 25118  015282  6E55               	movwf	___altoft@sign,c
 25119  015284  0E8E               	movlw	142
 25120  015286  6E54               	movwf	___altoft@exp,c
 25121  015288  AE4F               	btfss	___altoft@c+3,7,c
 25122  01528A  D011               	goto	i2l1228
 25123  01528C  1E4F               	comf	___altoft@c+3,f,c
 25124  01528E  1E4E               	comf	___altoft@c+2,f,c
 25125  015290  1E4D               	comf	___altoft@c+1,f,c
 25126  015292  6C4C               	negf	___altoft@c,c
 25127  015294  0E00               	movlw	0
 25128  015296  224D               	addwfc	___altoft@c+1,f,c
 25129  015298  224E               	addwfc	___altoft@c+2,f,c
 25130  01529A  224F               	addwfc	___altoft@c+3,f,c
 25131  01529C  0E01               	movlw	1
 25132  01529E  6E55               	movwf	___altoft@sign,c
 25133  0152A0  D006               	goto	i2l1228
 25134  0152A2  90D8               	bcf	status,0,c
 25135  0152A4  324F               	rrcf	___altoft@c+3,f,c
 25136  0152A6  324E               	rrcf	___altoft@c+2,f,c
 25137  0152A8  324D               	rrcf	___altoft@c+1,f,c
 25138  0152AA  324C               	rrcf	___altoft@c,f,c
 25139  0152AC  2A54               	incf	___altoft@exp,f,c
 25140  0152AE                     i2l1228:
 25141  0152AE  0E00               	movlw	0
 25142  0152B0  144C               	andwf	___altoft@c,w,c
 25143  0152B2  6E50               	movwf	??___altoft& (0+255),c
 25144  0152B4  0E00               	movlw	0
 25145  0152B6  144D               	andwf	___altoft@c+1,w,c
 25146  0152B8  6E51               	movwf	(??___altoft+1)& (0+255),c
 25147  0152BA  0E00               	movlw	0
 25148  0152BC  144E               	andwf	___altoft@c+2,w,c
 25149  0152BE  6E52               	movwf	(??___altoft+2)& (0+255),c
 25150  0152C0  0EFF               	movlw	255
 25151  0152C2  144F               	andwf	___altoft@c+3,w,c
 25152  0152C4  6E53               	movwf	(??___altoft+3)& (0+255),c
 25153  0152C6  5050               	movf	??___altoft,w,c
 25154  0152C8  1051               	iorwf	??___altoft+1,w,c
 25155  0152CA  1052               	iorwf	??___altoft+2,w,c
 25156  0152CC  1053               	iorwf	??___altoft+3,w,c
 25157  0152CE  A4D8               	btfss	status,2,c
 25158  0152D0  D7E8               	goto	i2l1229
 25159  0152D2  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 25160  0152D6  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 25161  0152DA  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 25162  0152DE  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 25163  0152E2  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 25164  0152E6  ECE0  F0A5         	call	i2___ftpack	;wreg free
 25165  0152EA  C001  F04C         	movff	?i2___ftpack,?___altoft
 25166  0152EE  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 25167  0152F2  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 25168  0152F6  0012               	return	
 25169  0152F8                     __end_of___altoft:
 25170                           	opt stack 0
 25171                           tosu	equ	0xFFF
 25172                           tosh	equ	0xFFE
 25173                           tosl	equ	0xFFD
 25174                           pclatu	equ	0xFFB
 25175                           pclath	equ	0xFFA
 25176                           tblptru	equ	0xFF8
 25177                           tblptrh	equ	0xFF7
 25178                           tblptrl	equ	0xFF6
 25179                           tablat	equ	0xFF5
 25180                           prodh	equ	0xFF4
 25181                           prodl	equ	0xFF3
 25182                           intcon	equ	0xFF2
 25183                           postinc0	equ	0xFEE
 25184                           fsr0h	equ	0xFEA
 25185                           fsr0l	equ	0xFE9
 25186                           wreg	equ	0xFE8
 25187                           indf1	equ	0xFE7
 25188                           postdec1	equ	0xFE5
 25189                           fsr1h	equ	0xFE2
 25190                           fsr1l	equ	0xFE1
 25191                           bsr	equ	0xFE0
 25192                           indf2	equ	0xFDF
 25193                           postinc2	equ	0xFDE
 25194                           postdec2	equ	0xFDD
 25195                           fsr2h	equ	0xFDA
 25196                           fsr2l	equ	0xFD9
 25197                           status	equ	0xFD8
 25198                           
 25199 ;; *************** function _eval_poly *****************
 25200 ;; Defined at:
 25201 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 25202 ;; Parameters:    Size  Location     Type
 25203 ;;  x               3   75[COMRAM] float 
 25204 ;;  d               2   78[COMRAM] PTR const 
 25205 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 25206 ;;  n               2   80[COMRAM] int 
 25207 ;; Auto vars:     Size  Location     Type
 25208 ;;  res             3   84[COMRAM] int 
 25209 ;; Return value:  Size  Location     Type
 25210 ;;                  3   75[COMRAM] int 
 25211 ;; Registers used:
 25212 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25213 ;; Tracked objects:
 25214 ;;		On entry : 0/0
 25215 ;;		On exit  : 0/0
 25216 ;;		Unchanged: 0/0
 25217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25218 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25219 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25220 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25221 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25222 ;;Total ram usage:       12 bytes
 25223 ;; Hardware stack levels used:    1
 25224 ;; Hardware stack levels required when called:    2
 25225 ;; This function calls:
 25226 ;;		i2___ftadd
 25227 ;;		i2___ftmul
 25228 ;;		i2___wmul
 25229 ;; This function is called by:
 25230 ;;		_atan
 25231 ;;		_sin
 25232 ;; This function uses a non-reentrant model
 25233 ;;
 25234                           
 25235                           	psect	text105
 25236  014892                     __ptext105:
 25237                           	opt stack 0
 25238  014892                     _eval_poly:
 25239                           	opt stack 11
 25240                           
 25241                           ;incstack = 0
 25242  014892  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 25243  014896  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 25244  01489A  0E00               	movlw	0
 25245  01489C  6E12               	movwf	i2___wmul@multiplicand+1,c
 25246  01489E  0E03               	movlw	3
 25247  0148A0  6E11               	movwf	i2___wmul@multiplicand,c
 25248  0148A2  ECEC  F0AE         	call	i2___wmul	;wreg free
 25249  0148A6  C04F  F053         	movff	eval_poly@d,??_eval_poly
 25250  0148AA  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 25251  0148AE  500F               	movf	?i2___wmul,w,c
 25252  0148B0  2653               	addwf	??_eval_poly,f,c
 25253  0148B2  5010               	movf	?i2___wmul+1,w,c
 25254  0148B4  2254               	addwfc	??_eval_poly+1,f,c
 25255  0148B6  C053  FFF6         	movff	??_eval_poly,tblptrl
 25256  0148BA  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 25257  0148BE                     	if	0	;tblptru may be non-zero
 25258  0148BE                     	endif
 25259  0148BE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25260  0148BE  0E00               	movlw	low (__mediumconst shr (0+16))
 25261  0148C0  6EF8               	movwf	tblptru,c
 25262  0148C2                     	endif
 25263  0148C2  0009               	tblrd		*+
 25264  0148C4  CFF5 F055          	movff	tablat,eval_poly@res
 25265  0148C8  0009               	tblrd		*+
 25266  0148CA  CFF5 F056          	movff	tablat,eval_poly@res+1
 25267  0148CE  000A               	tblrd		*-
 25268  0148D0  CFF5 F057          	movff	tablat,eval_poly@res+2
 25269  0148D4  D040               	goto	i2l1392
 25270  0148D6  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 25271  0148DA  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 25272  0148DE  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 25273  0148E2  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 25274  0148E6  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 25275  0148EA  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 25276  0148EE  EC79  F0A2         	call	i2___ftmul	;wreg free
 25277  0148F2  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 25278  0148F6  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 25279  0148FA  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 25280  0148FE  0E00               	movlw	0
 25281  014900  6E12               	movwf	i2___wmul@multiplicand+1,c
 25282  014902  0E03               	movlw	3
 25283  014904  6E11               	movwf	i2___wmul@multiplicand,c
 25284  014906  0651               	decf	eval_poly@n,f,c
 25285  014908  A0D8               	btfss	status,0,c
 25286  01490A  0652               	decf	eval_poly@n+1,f,c
 25287  01490C  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 25288  014910  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 25289  014914  ECEC  F0AE         	call	i2___wmul	;wreg free
 25290  014918  C04F  F053         	movff	eval_poly@d,??_eval_poly
 25291  01491C  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 25292  014920  500F               	movf	?i2___wmul,w,c
 25293  014922  2653               	addwf	??_eval_poly,f,c
 25294  014924  5010               	movf	?i2___wmul+1,w,c
 25295  014926  2254               	addwfc	??_eval_poly+1,f,c
 25296  014928  C053  FFF6         	movff	??_eval_poly,tblptrl
 25297  01492C  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 25298  014930                     	if	0	;tblptru may be non-zero
 25299  014930                     	endif
 25300  014930                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25301  014930  0E00               	movlw	low (__mediumconst shr (0+16))
 25302  014932  6EF8               	movwf	tblptru,c
 25303  014934                     	endif
 25304  014934  0009               	tblrd		*+
 25305  014936  CFF5 F043          	movff	tablat,i2___ftadd@f2
 25306  01493A  0009               	tblrd		*+
 25307  01493C  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 25308  014940  000A               	tblrd		*-
 25309  014942  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 25310  014946  EC7F  F09C         	call	i2___ftadd	;wreg free
 25311  01494A  C040  F055         	movff	?i2___ftadd,eval_poly@res
 25312  01494E  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 25313  014952  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 25314  014956                     i2l1392:
 25315  014956  5051               	movf	eval_poly@n,w,c
 25316  014958  1052               	iorwf	eval_poly@n+1,w,c
 25317  01495A  A4D8               	btfss	status,2,c
 25318  01495C  D7BC               	goto	i2l1393
 25319  01495E  C055  F04C         	movff	eval_poly@res,?_eval_poly
 25320  014962  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 25321  014966  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 25322  01496A  0012               	return		;funcret
 25323  01496C                     __end_of_eval_poly:
 25324                           	opt stack 0
 25325                           tosu	equ	0xFFF
 25326                           tosh	equ	0xFFE
 25327                           tosl	equ	0xFFD
 25328                           pclatu	equ	0xFFB
 25329                           pclath	equ	0xFFA
 25330                           tblptru	equ	0xFF8
 25331                           tblptrh	equ	0xFF7
 25332                           tblptrl	equ	0xFF6
 25333                           tablat	equ	0xFF5
 25334                           prodh	equ	0xFF4
 25335                           prodl	equ	0xFF3
 25336                           intcon	equ	0xFF2
 25337                           postinc0	equ	0xFEE
 25338                           fsr0h	equ	0xFEA
 25339                           fsr0l	equ	0xFE9
 25340                           wreg	equ	0xFE8
 25341                           indf1	equ	0xFE7
 25342                           postdec1	equ	0xFE5
 25343                           fsr1h	equ	0xFE2
 25344                           fsr1l	equ	0xFE1
 25345                           bsr	equ	0xFE0
 25346                           indf2	equ	0xFDF
 25347                           postinc2	equ	0xFDE
 25348                           postdec2	equ	0xFDD
 25349                           fsr2h	equ	0xFDA
 25350                           fsr2l	equ	0xFD9
 25351                           status	equ	0xFD8
 25352                           
 25353 ;; *************** function i2___wmul *****************
 25354 ;; Defined at:
 25355 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 25356 ;; Parameters:    Size  Location     Type
 25357 ;;  multiplier      2   14[COMRAM] unsigned int 
 25358 ;;  multiplicand    2   16[COMRAM] unsigned int 
 25359 ;; Auto vars:     Size  Location     Type
 25360 ;;  __wmul          2   18[COMRAM] unsigned int 
 25361 ;; Return value:  Size  Location     Type
 25362 ;;                  2   14[COMRAM] unsigned int 
 25363 ;; Registers used:
 25364 ;;		wreg, status,2, status,0, prodl, prodh
 25365 ;; Tracked objects:
 25366 ;;		On entry : 0/0
 25367 ;;		On exit  : 0/0
 25368 ;;		Unchanged: 0/0
 25369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25370 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25373 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25374 ;;Total ram usage:        6 bytes
 25375 ;; Hardware stack levels used:    1
 25376 ;; This function calls:
 25377 ;;		Nothing
 25378 ;; This function is called by:
 25379 ;;		_eval_poly
 25380 ;;		i2_fround
 25381 ;;		i2_scale
 25382 ;;		i2_printf
 25383 ;; This function uses a non-reentrant model
 25384 ;;
 25385                           
 25386                           	psect	text106
 25387  015DD8                     __ptext106:
 25388                           	opt stack 0
 25389  015DD8                     i2___wmul:
 25390                           	opt stack 14
 25391                           
 25392                           ;incstack = 0
 25393  015DD8  500F               	movf	i2___wmul@multiplier,w,c
 25394  015DDA  0211               	mulwf	i2___wmul@multiplicand,c
 25395  015DDC  CFF3 F013          	movff	prodl,i2___wmul@product
 25396  015DE0  CFF4 F014          	movff	prodh,i2___wmul@product+1
 25397  015DE4  500F               	movf	i2___wmul@multiplier,w,c
 25398  015DE6  0212               	mulwf	i2___wmul@multiplicand+1,c
 25399  015DE8  50F3               	movf	prodl,w,c
 25400  015DEA  2614               	addwf	i2___wmul@product+1,f,c
 25401  015DEC  5010               	movf	i2___wmul@multiplier+1,w,c
 25402  015DEE  0211               	mulwf	i2___wmul@multiplicand,c
 25403  015DF0  50F3               	movf	prodl,w,c
 25404  015DF2  2614               	addwf	i2___wmul@product+1,f,c
 25405  015DF4  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 25406  015DF8  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 25407  015DFC  0012               	return	
 25408  015DFE                     __end_ofi2___wmul:
 25409                           	opt stack 0
 25410                           tosu	equ	0xFFF
 25411                           tosh	equ	0xFFE
 25412                           tosl	equ	0xFFD
 25413                           pclatu	equ	0xFFB
 25414                           pclath	equ	0xFFA
 25415                           tblptru	equ	0xFF8
 25416                           tblptrh	equ	0xFF7
 25417                           tblptrl	equ	0xFF6
 25418                           tablat	equ	0xFF5
 25419                           prodh	equ	0xFF4
 25420                           prodl	equ	0xFF3
 25421                           intcon	equ	0xFF2
 25422                           postinc0	equ	0xFEE
 25423                           fsr0h	equ	0xFEA
 25424                           fsr0l	equ	0xFE9
 25425                           wreg	equ	0xFE8
 25426                           indf1	equ	0xFE7
 25427                           postdec1	equ	0xFE5
 25428                           fsr1h	equ	0xFE2
 25429                           fsr1l	equ	0xFE1
 25430                           bsr	equ	0xFE0
 25431                           indf2	equ	0xFDF
 25432                           postinc2	equ	0xFDE
 25433                           postdec2	equ	0xFDD
 25434                           fsr2h	equ	0xFDA
 25435                           fsr2l	equ	0xFD9
 25436                           status	equ	0xFD8
 25437                           
 25438 ;; *************** function i2___ftmul *****************
 25439 ;; Defined at:
 25440 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 25441 ;; Parameters:    Size  Location     Type
 25442 ;;  f1              3   38[COMRAM] float 
 25443 ;;  f2              3   41[COMRAM] float 
 25444 ;; Auto vars:     Size  Location     Type
 25445 ;;  __ftmul         3   48[COMRAM] unsigned um
 25446 ;;  __ftmul         1   52[COMRAM] unsigned char 
 25447 ;;  __ftmul         1   51[COMRAM] unsigned char 
 25448 ;;  __ftmul         1   47[COMRAM] unsigned char 
 25449 ;; Return value:  Size  Location     Type
 25450 ;;                  3   38[COMRAM] float 
 25451 ;; Registers used:
 25452 ;;		wreg, status,2, status,0, cstack
 25453 ;; Tracked objects:
 25454 ;;		On entry : 0/0
 25455 ;;		On exit  : 0/0
 25456 ;;		Unchanged: 0/0
 25457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25458 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25459 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25460 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25461 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25462 ;;Total ram usage:       15 bytes
 25463 ;; Hardware stack levels used:    1
 25464 ;; Hardware stack levels required when called:    1
 25465 ;; This function calls:
 25466 ;;		i2___ftpack
 25467 ;; This function is called by:
 25468 ;;		_peakToRMS
 25469 ;;		_ADC_postProcessingCallback
 25470 ;;		_asin
 25471 ;;		_atan
 25472 ;;		_eval_poly
 25473 ;;		_sin
 25474 ;;		_sqrt
 25475 ;;		i2_fround
 25476 ;;		i2_scale
 25477 ;;		i2_printf
 25478 ;; This function uses a non-reentrant model
 25479 ;;
 25480                           
 25481                           	psect	text107
 25482  0144F2                     __ptext107:
 25483                           	opt stack 0
 25484  0144F2                     i2___ftmul:
 25485                           	opt stack 13
 25486                           
 25487                           ;incstack = 0
 25488  0144F2  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 25489  0144F6  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 25490  0144F8  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 25491  0144FA  3428               	rlcf	i2___ftmul@f1+1,w,c
 25492  0144FC  362D               	rlcf	??i2___ftmul& (0+255),f,c
 25493  0144FE  E301               	bnc	u1450_41
 25494  014500  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 25495  014502                     u1450_41:
 25496  014502  502D               	movf	??i2___ftmul,w,c
 25497  014504  6E30               	movwf	i2___ftmul@exp,c
 25498  014506  5030               	movf	i2___ftmul@exp,w,c
 25499  014508  A4D8               	btfss	status,2,c
 25500  01450A  D007               	goto	i2l1530
 25501  01450C  0E00               	movlw	0
 25502  01450E  6E27               	movwf	?i2___ftmul,c
 25503  014510  0E00               	movlw	0
 25504  014512  6E28               	movwf	?i2___ftmul+1,c
 25505  014514  0E00               	movlw	0
 25506  014516  6E29               	movwf	?i2___ftmul+2,c
 25507  014518  0012               	return	
 25508  01451A                     i2l1530:
 25509  01451A  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 25510  01451E  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 25511  014520  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 25512  014522  342B               	rlcf	i2___ftmul@f2+1,w,c
 25513  014524  362D               	rlcf	??i2___ftmul& (0+255),f,c
 25514  014526  E301               	bnc	u1452_41
 25515  014528  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 25516  01452A                     u1452_41:
 25517  01452A  502D               	movf	??i2___ftmul,w,c
 25518  01452C  6E35               	movwf	i2___ftmul@sign,c
 25519  01452E  5035               	movf	i2___ftmul@sign,w,c
 25520  014530  A4D8               	btfss	status,2,c
 25521  014532  D007               	goto	i2l1532
 25522  014534  0E00               	movlw	0
 25523  014536  6E27               	movwf	?i2___ftmul,c
 25524  014538  0E00               	movlw	0
 25525  01453A  6E28               	movwf	?i2___ftmul+1,c
 25526  01453C  0E00               	movlw	0
 25527  01453E  6E29               	movwf	?i2___ftmul+2,c
 25528  014540  0012               	return	
 25529  014542                     i2l1532:
 25530  014542  5035               	movf	i2___ftmul@sign,w,c
 25531  014544  0F7B               	addlw	123
 25532  014546  2630               	addwf	i2___ftmul@exp,f,c
 25533  014548  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 25534  01454C  502C               	movf	i2___ftmul@f2+2,w,c
 25535  01454E  1A35               	xorwf	i2___ftmul@sign,f,c
 25536  014550  0E80               	movlw	128
 25537  014552  1635               	andwf	i2___ftmul@sign,f,c
 25538  014554  8E28               	bsf	i2___ftmul@f1+1,7,c
 25539  014556  8E2B               	bsf	i2___ftmul@f2+1,7,c
 25540  014558  0EFF               	movlw	255
 25541  01455A  162A               	andwf	i2___ftmul@f2,f,c
 25542  01455C  0EFF               	movlw	255
 25543  01455E  162B               	andwf	i2___ftmul@f2+1,f,c
 25544  014560  0E00               	movlw	0
 25545  014562  162C               	andwf	i2___ftmul@f2+2,f,c
 25546  014564  0E00               	movlw	0
 25547  014566  6E31               	movwf	i2___ftmul@f3_as_product,c
 25548  014568  0E00               	movlw	0
 25549  01456A  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 25550  01456C  0E00               	movlw	0
 25551  01456E  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 25552  014570  0E07               	movlw	7
 25553  014572  6E34               	movwf	i2___ftmul@cntr,c
 25554  014574  A027               	btfss	i2___ftmul@f1,0,c
 25555  014576  D006               	goto	i2l1534
 25556  014578  502A               	movf	i2___ftmul@f2,w,c
 25557  01457A  2631               	addwf	i2___ftmul@f3_as_product,f,c
 25558  01457C  502B               	movf	i2___ftmul@f2+1,w,c
 25559  01457E  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 25560  014580  502C               	movf	i2___ftmul@f2+2,w,c
 25561  014582  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 25562  014584                     i2l1534:
 25563  014584  90D8               	bcf	status,0,c
 25564  014586  3229               	rrcf	i2___ftmul@f1+2,f,c
 25565  014588  3228               	rrcf	i2___ftmul@f1+1,f,c
 25566  01458A  3227               	rrcf	i2___ftmul@f1,f,c
 25567  01458C  90D8               	bcf	status,0,c
 25568  01458E  362A               	rlcf	i2___ftmul@f2,f,c
 25569  014590  362B               	rlcf	i2___ftmul@f2+1,f,c
 25570  014592  362C               	rlcf	i2___ftmul@f2+2,f,c
 25571  014594  2E34               	decfsz	i2___ftmul@cntr,f,c
 25572  014596  D7EE               	goto	i2l1533
 25573  014598  0E09               	movlw	9
 25574  01459A  6E34               	movwf	i2___ftmul@cntr,c
 25575  01459C  A027               	btfss	i2___ftmul@f1,0,c
 25576  01459E  D006               	goto	i2l1537
 25577  0145A0  502A               	movf	i2___ftmul@f2,w,c
 25578  0145A2  2631               	addwf	i2___ftmul@f3_as_product,f,c
 25579  0145A4  502B               	movf	i2___ftmul@f2+1,w,c
 25580  0145A6  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 25581  0145A8  502C               	movf	i2___ftmul@f2+2,w,c
 25582  0145AA  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 25583  0145AC                     i2l1537:
 25584  0145AC  90D8               	bcf	status,0,c
 25585  0145AE  3229               	rrcf	i2___ftmul@f1+2,f,c
 25586  0145B0  3228               	rrcf	i2___ftmul@f1+1,f,c
 25587  0145B2  3227               	rrcf	i2___ftmul@f1,f,c
 25588  0145B4  90D8               	bcf	status,0,c
 25589  0145B6  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 25590  0145B8  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 25591  0145BA  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 25592  0145BC  2E34               	decfsz	i2___ftmul@cntr,f,c
 25593  0145BE  D7EE               	goto	i2l1536
 25594  0145C0  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 25595  0145C4  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 25596  0145C8  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 25597  0145CC  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 25598  0145D0  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 25599  0145D4  ECE0  F0A5         	call	i2___ftpack	;wreg free
 25600  0145D8  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 25601  0145DC  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 25602  0145E0  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 25603  0145E4  0012               	return	
 25604  0145E6                     __end_ofi2___ftmul:
 25605                           	opt stack 0
 25606                           tosu	equ	0xFFF
 25607                           tosh	equ	0xFFE
 25608                           tosl	equ	0xFFD
 25609                           pclatu	equ	0xFFB
 25610                           pclath	equ	0xFFA
 25611                           tblptru	equ	0xFF8
 25612                           tblptrh	equ	0xFF7
 25613                           tblptrl	equ	0xFF6
 25614                           tablat	equ	0xFF5
 25615                           prodh	equ	0xFF4
 25616                           prodl	equ	0xFF3
 25617                           intcon	equ	0xFF2
 25618                           postinc0	equ	0xFEE
 25619                           fsr0h	equ	0xFEA
 25620                           fsr0l	equ	0xFE9
 25621                           wreg	equ	0xFE8
 25622                           indf1	equ	0xFE7
 25623                           postdec1	equ	0xFE5
 25624                           fsr1h	equ	0xFE2
 25625                           fsr1l	equ	0xFE1
 25626                           bsr	equ	0xFE0
 25627                           indf2	equ	0xFDF
 25628                           postinc2	equ	0xFDE
 25629                           postdec2	equ	0xFDD
 25630                           fsr2h	equ	0xFDA
 25631                           fsr2l	equ	0xFD9
 25632                           status	equ	0xFD8
 25633                           
 25634 ;; *************** function i2___ftadd *****************
 25635 ;; Defined at:
 25636 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 25637 ;; Parameters:    Size  Location     Type
 25638 ;;  f1              3   63[COMRAM] float 
 25639 ;;  f2              3   66[COMRAM] float 
 25640 ;; Auto vars:     Size  Location     Type
 25641 ;;  __ftadd         1   74[COMRAM] unsigned char 
 25642 ;;  __ftadd         1   73[COMRAM] unsigned char 
 25643 ;;  __ftadd         1   72[COMRAM] unsigned char 
 25644 ;; Return value:  Size  Location     Type
 25645 ;;                  3   63[COMRAM] float 
 25646 ;; Registers used:
 25647 ;;		wreg, status,2, status,0, cstack
 25648 ;; Tracked objects:
 25649 ;;		On entry : 0/0
 25650 ;;		On exit  : 0/0
 25651 ;;		Unchanged: 0/0
 25652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25653 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25654 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25655 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25656 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25657 ;;Total ram usage:       12 bytes
 25658 ;; Hardware stack levels used:    1
 25659 ;; Hardware stack levels required when called:    1
 25660 ;; This function calls:
 25661 ;;		i2___ftpack
 25662 ;; This function is called by:
 25663 ;;		_peakToRMS
 25664 ;;		_ADC_postProcessingCallback
 25665 ;;		_acos
 25666 ;;		_asin
 25667 ;;		_atan
 25668 ;;		_eval_poly
 25669 ;;		_sin
 25670 ;;		_floor
 25671 ;;		i2_printf
 25672 ;;		i2___ftsub
 25673 ;; This function uses a non-reentrant model
 25674 ;;
 25675                           
 25676                           	psect	text108
 25677  0138FE                     __ptext108:
 25678                           	opt stack 0
 25679  0138FE                     i2___ftadd:
 25680                           	opt stack 13
 25681                           
 25682                           ;incstack = 0
 25683  0138FE  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 25684  013902  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 25685  013904  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 25686  013906  3441               	rlcf	i2___ftadd@f1+1,w,c
 25687  013908  3646               	rlcf	??i2___ftadd& (0+255),f,c
 25688  01390A  E301               	bnc	u1429_41
 25689  01390C  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 25690  01390E                     u1429_41:
 25691  01390E  5046               	movf	??i2___ftadd,w,c
 25692  013910  6E4B               	movwf	i2___ftadd@exp1,c
 25693  013912  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 25694  013916  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 25695  013918  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 25696  01391A  3444               	rlcf	i2___ftadd@f2+1,w,c
 25697  01391C  3646               	rlcf	??i2___ftadd& (0+255),f,c
 25698  01391E  E301               	bnc	u1430_41
 25699  013920  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 25700  013922                     u1430_41:
 25701  013922  5046               	movf	??i2___ftadd,w,c
 25702  013924  6E4A               	movwf	i2___ftadd@exp2,c
 25703  013926  504B               	movf	i2___ftadd@exp1,w,c
 25704  013928  B4D8               	btfsc	status,2,c
 25705  01392A  D00B               	goto	i2u1433_40
 25706  01392C  504A               	movf	i2___ftadd@exp2,w,c
 25707  01392E  5C4B               	subwf	i2___ftadd@exp1,w,c
 25708  013930  B0D8               	btfsc	status,0,c
 25709  013932  D00E               	goto	i2l1465
 25710  013934  504B               	movf	i2___ftadd@exp1,w,c
 25711  013936  0800               	sublw	0
 25712  013938  244A               	addwf	i2___ftadd@exp2,w,c
 25713  01393A  6E46               	movwf	??i2___ftadd& (0+255),c
 25714  01393C  0E18               	movlw	24
 25715  01393E  6446               	cpfsgt	??i2___ftadd,c
 25716  013940  D007               	goto	i2l1465
 25717  013942                     i2u1433_40:
 25718  013942  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 25719  013946  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 25720  01394A  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 25721  01394E  0012               	return	
 25722  013950                     i2l1465:
 25723  013950  504A               	movf	i2___ftadd@exp2,w,c
 25724  013952  B4D8               	btfsc	status,2,c
 25725  013954  D00B               	goto	i2u1436_40
 25726  013956  504B               	movf	i2___ftadd@exp1,w,c
 25727  013958  5C4A               	subwf	i2___ftadd@exp2,w,c
 25728  01395A  B0D8               	btfsc	status,0,c
 25729  01395C  D00E               	goto	i2l1469
 25730  01395E  504A               	movf	i2___ftadd@exp2,w,c
 25731  013960  0800               	sublw	0
 25732  013962  244B               	addwf	i2___ftadd@exp1,w,c
 25733  013964  6E46               	movwf	??i2___ftadd& (0+255),c
 25734  013966  0E18               	movlw	24
 25735  013968  6446               	cpfsgt	??i2___ftadd,c
 25736  01396A  D007               	goto	i2l1469
 25737  01396C                     i2u1436_40:
 25738  01396C  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 25739  013970  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 25740  013974  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 25741  013978  0012               	return	
 25742  01397A                     i2l1469:
 25743  01397A  0E06               	movlw	6
 25744  01397C  6E49               	movwf	i2___ftadd@sign,c
 25745  01397E  BE42               	btfsc	i2___ftadd@f1+2,7,c
 25746  013980  8E49               	bsf	i2___ftadd@sign,7,c
 25747  013982  BE45               	btfsc	i2___ftadd@f2+2,7,c
 25748  013984  8C49               	bsf	i2___ftadd@sign,6,c
 25749  013986  8E41               	bsf	i2___ftadd@f1+1,7,c
 25750  013988  0EFF               	movlw	255
 25751  01398A  1640               	andwf	i2___ftadd@f1,f,c
 25752  01398C  0EFF               	movlw	255
 25753  01398E  1641               	andwf	i2___ftadd@f1+1,f,c
 25754  013990  0E00               	movlw	0
 25755  013992  1642               	andwf	i2___ftadd@f1+2,f,c
 25756  013994  8E44               	bsf	i2___ftadd@f2+1,7,c
 25757  013996  0EFF               	movlw	255
 25758  013998  1643               	andwf	i2___ftadd@f2,f,c
 25759  01399A  0EFF               	movlw	255
 25760  01399C  1644               	andwf	i2___ftadd@f2+1,f,c
 25761  01399E  0E00               	movlw	0
 25762  0139A0  1645               	andwf	i2___ftadd@f2+2,f,c
 25763  0139A2  504A               	movf	i2___ftadd@exp2,w,c
 25764  0139A4  5C4B               	subwf	i2___ftadd@exp1,w,c
 25765  0139A6  B0D8               	btfsc	status,0,c
 25766  0139A8  D01B               	goto	i2l1474
 25767  0139AA                     i2u1439_40:
 25768  0139AA  90D8               	bcf	status,0,c
 25769  0139AC  3643               	rlcf	i2___ftadd@f2,f,c
 25770  0139AE  3644               	rlcf	i2___ftadd@f2+1,f,c
 25771  0139B0  3645               	rlcf	i2___ftadd@f2+2,f,c
 25772  0139B2  064A               	decf	i2___ftadd@exp2,f,c
 25773  0139B4  504B               	movf	i2___ftadd@exp1,w,c
 25774  0139B6  184A               	xorwf	i2___ftadd@exp2,w,c
 25775  0139B8  B4D8               	btfsc	status,2,c
 25776  0139BA  D00D               	goto	i2l1479
 25777  0139BC  0649               	decf	i2___ftadd@sign,f,c
 25778  0139BE  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 25779  0139C2  0E07               	movlw	7
 25780  0139C4  1646               	andwf	??i2___ftadd,f,c
 25781  0139C6  B4D8               	btfsc	status,2,c
 25782  0139C8  D006               	goto	i2l1479
 25783  0139CA  D7EF               	goto	i2u1439_40
 25784  0139CC  90D8               	bcf	status,0,c
 25785  0139CE  3242               	rrcf	i2___ftadd@f1+2,f,c
 25786  0139D0  3241               	rrcf	i2___ftadd@f1+1,f,c
 25787  0139D2  3240               	rrcf	i2___ftadd@f1,f,c
 25788  0139D4  2A4B               	incf	i2___ftadd@exp1,f,c
 25789  0139D6                     i2l1479:
 25790  0139D6  504A               	movf	i2___ftadd@exp2,w,c
 25791  0139D8  184B               	xorwf	i2___ftadd@exp1,w,c
 25792  0139DA  B4D8               	btfsc	status,2,c
 25793  0139DC  D01F               	goto	i2u1446_40
 25794  0139DE  D7F6               	goto	i2l1480
 25795  0139E0                     i2l1474:
 25796  0139E0  504B               	movf	i2___ftadd@exp1,w,c
 25797  0139E2  5C4A               	subwf	i2___ftadd@exp2,w,c
 25798  0139E4  B0D8               	btfsc	status,0,c
 25799  0139E6  D01A               	goto	i2u1446_40
 25800  0139E8                     i2u1443_40:
 25801  0139E8  90D8               	bcf	status,0,c
 25802  0139EA  3640               	rlcf	i2___ftadd@f1,f,c
 25803  0139EC  3641               	rlcf	i2___ftadd@f1+1,f,c
 25804  0139EE  3642               	rlcf	i2___ftadd@f1+2,f,c
 25805  0139F0  064B               	decf	i2___ftadd@exp1,f,c
 25806  0139F2  504B               	movf	i2___ftadd@exp1,w,c
 25807  0139F4  184A               	xorwf	i2___ftadd@exp2,w,c
 25808  0139F6  B4D8               	btfsc	status,2,c
 25809  0139F8  D00D               	goto	i2l1488
 25810  0139FA  0649               	decf	i2___ftadd@sign,f,c
 25811  0139FC  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 25812  013A00  0E07               	movlw	7
 25813  013A02  1646               	andwf	??i2___ftadd,f,c
 25814  013A04  B4D8               	btfsc	status,2,c
 25815  013A06  D006               	goto	i2l1488
 25816  013A08  D7EF               	goto	i2u1443_40
 25817  013A0A  90D8               	bcf	status,0,c
 25818  013A0C  3245               	rrcf	i2___ftadd@f2+2,f,c
 25819  013A0E  3244               	rrcf	i2___ftadd@f2+1,f,c
 25820  013A10  3243               	rrcf	i2___ftadd@f2,f,c
 25821  013A12  2A4A               	incf	i2___ftadd@exp2,f,c
 25822  013A14                     i2l1488:
 25823  013A14  504A               	movf	i2___ftadd@exp2,w,c
 25824  013A16  184B               	xorwf	i2___ftadd@exp1,w,c
 25825  013A18  A4D8               	btfss	status,2,c
 25826  013A1A  D7F7               	goto	i2l1489
 25827  013A1C                     i2u1446_40:
 25828  013A1C  AE49               	btfss	i2___ftadd@sign,7,c
 25829  013A1E  D00C               	goto	i2l1491
 25830  013A20  0EFF               	movlw	255
 25831  013A22  1A40               	xorwf	i2___ftadd@f1,f,c
 25832  013A24  0EFF               	movlw	255
 25833  013A26  1A41               	xorwf	i2___ftadd@f1+1,f,c
 25834  013A28  0EFF               	movlw	255
 25835  013A2A  1A42               	xorwf	i2___ftadd@f1+2,f,c
 25836  013A2C  0E01               	movlw	1
 25837  013A2E  2640               	addwf	i2___ftadd@f1,f,c
 25838  013A30  0E00               	movlw	0
 25839  013A32  2241               	addwfc	i2___ftadd@f1+1,f,c
 25840  013A34  0E00               	movlw	0
 25841  013A36  2242               	addwfc	i2___ftadd@f1+2,f,c
 25842  013A38                     i2l1491:
 25843  013A38  AC49               	btfss	i2___ftadd@sign,6,c
 25844  013A3A  D00C               	goto	i2l1492
 25845  013A3C  0EFF               	movlw	255
 25846  013A3E  1A43               	xorwf	i2___ftadd@f2,f,c
 25847  013A40  0EFF               	movlw	255
 25848  013A42  1A44               	xorwf	i2___ftadd@f2+1,f,c
 25849  013A44  0EFF               	movlw	255
 25850  013A46  1A45               	xorwf	i2___ftadd@f2+2,f,c
 25851  013A48  0E01               	movlw	1
 25852  013A4A  2643               	addwf	i2___ftadd@f2,f,c
 25853  013A4C  0E00               	movlw	0
 25854  013A4E  2244               	addwfc	i2___ftadd@f2+1,f,c
 25855  013A50  0E00               	movlw	0
 25856  013A52  2245               	addwfc	i2___ftadd@f2+2,f,c
 25857  013A54                     i2l1492:
 25858  013A54  0E00               	movlw	0
 25859  013A56  6E49               	movwf	i2___ftadd@sign,c
 25860  013A58  5040               	movf	i2___ftadd@f1,w,c
 25861  013A5A  2643               	addwf	i2___ftadd@f2,f,c
 25862  013A5C  5041               	movf	i2___ftadd@f1+1,w,c
 25863  013A5E  2244               	addwfc	i2___ftadd@f2+1,f,c
 25864  013A60  5042               	movf	i2___ftadd@f1+2,w,c
 25865  013A62  2245               	addwfc	i2___ftadd@f2+2,f,c
 25866  013A64  AE45               	btfss	i2___ftadd@f2+2,7,c
 25867  013A66  D00E               	goto	i2l1493
 25868  013A68  0EFF               	movlw	255
 25869  013A6A  1A43               	xorwf	i2___ftadd@f2,f,c
 25870  013A6C  0EFF               	movlw	255
 25871  013A6E  1A44               	xorwf	i2___ftadd@f2+1,f,c
 25872  013A70  0EFF               	movlw	255
 25873  013A72  1A45               	xorwf	i2___ftadd@f2+2,f,c
 25874  013A74  0E01               	movlw	1
 25875  013A76  2643               	addwf	i2___ftadd@f2,f,c
 25876  013A78  0E00               	movlw	0
 25877  013A7A  2244               	addwfc	i2___ftadd@f2+1,f,c
 25878  013A7C  0E00               	movlw	0
 25879  013A7E  2245               	addwfc	i2___ftadd@f2+2,f,c
 25880  013A80  0E01               	movlw	1
 25881  013A82  6E49               	movwf	i2___ftadd@sign,c
 25882  013A84                     i2l1493:
 25883  013A84  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 25884  013A88  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 25885  013A8C  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 25886  013A90  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 25887  013A94  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 25888  013A98  ECE0  F0A5         	call	i2___ftpack	;wreg free
 25889  013A9C  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 25890  013AA0  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 25891  013AA4  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 25892  013AA8  0012               	return	
 25893  013AAA                     __end_ofi2___ftadd:
 25894                           	opt stack 0
 25895                           tosu	equ	0xFFF
 25896                           tosh	equ	0xFFE
 25897                           tosl	equ	0xFFD
 25898                           pclatu	equ	0xFFB
 25899                           pclath	equ	0xFFA
 25900                           tblptru	equ	0xFF8
 25901                           tblptrh	equ	0xFF7
 25902                           tblptrl	equ	0xFF6
 25903                           tablat	equ	0xFF5
 25904                           prodh	equ	0xFF4
 25905                           prodl	equ	0xFF3
 25906                           intcon	equ	0xFF2
 25907                           postinc0	equ	0xFEE
 25908                           fsr0h	equ	0xFEA
 25909                           fsr0l	equ	0xFE9
 25910                           wreg	equ	0xFE8
 25911                           indf1	equ	0xFE7
 25912                           postdec1	equ	0xFE5
 25913                           fsr1h	equ	0xFE2
 25914                           fsr1l	equ	0xFE1
 25915                           bsr	equ	0xFE0
 25916                           indf2	equ	0xFDF
 25917                           postinc2	equ	0xFDE
 25918                           postdec2	equ	0xFDD
 25919                           fsr2h	equ	0xFDA
 25920                           fsr2l	equ	0xFD9
 25921                           status	equ	0xFD8
 25922                           
 25923 ;; *************** function ___lwtoft *****************
 25924 ;; Defined at:
 25925 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 25926 ;; Parameters:    Size  Location     Type
 25927 ;;  c               2    8[COMRAM] unsigned int 
 25928 ;; Auto vars:     Size  Location     Type
 25929 ;;		None
 25930 ;; Return value:  Size  Location     Type
 25931 ;;                  3    8[COMRAM] float 
 25932 ;; Registers used:
 25933 ;;		wreg, status,2, status,0, cstack
 25934 ;; Tracked objects:
 25935 ;;		On entry : 0/0
 25936 ;;		On exit  : 0/0
 25937 ;;		Unchanged: 0/0
 25938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25939 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25942 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25943 ;;Total ram usage:        3 bytes
 25944 ;; Hardware stack levels used:    1
 25945 ;; Hardware stack levels required when called:    1
 25946 ;; This function calls:
 25947 ;;		i2___ftpack
 25948 ;; This function is called by:
 25949 ;;		_ADC_postProcessingCallback
 25950 ;; This function uses a non-reentrant model
 25951 ;;
 25952                           
 25953                           	psect	text109
 25954  015E22                     __ptext109:
 25955                           	opt stack 0
 25956  015E22                     ___lwtoft:
 25957                           	opt stack 14
 25958                           
 25959                           ;incstack = 0
 25960  015E22  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 25961  015E26  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 25962  015E2A  6A03               	clrf	i2___ftpack@arg+2,c
 25963  015E2C  0E8E               	movlw	142
 25964  015E2E  6E04               	movwf	i2___ftpack@exp,c
 25965  015E30  0E00               	movlw	0
 25966  015E32  6E05               	movwf	i2___ftpack@sign,c
 25967  015E34  ECE0  F0A5         	call	i2___ftpack	;wreg free
 25968  015E38  C001  F009         	movff	?i2___ftpack,?___lwtoft
 25969  015E3C  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 25970  015E40  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 25971  015E44  0012               	return	
 25972  015E46                     __end_of___lwtoft:
 25973                           	opt stack 0
 25974                           tosu	equ	0xFFF
 25975                           tosh	equ	0xFFE
 25976                           tosl	equ	0xFFD
 25977                           pclatu	equ	0xFFB
 25978                           pclath	equ	0xFFA
 25979                           tblptru	equ	0xFF8
 25980                           tblptrh	equ	0xFF7
 25981                           tblptrl	equ	0xFF6
 25982                           tablat	equ	0xFF5
 25983                           prodh	equ	0xFF4
 25984                           prodl	equ	0xFF3
 25985                           intcon	equ	0xFF2
 25986                           postinc0	equ	0xFEE
 25987                           fsr0h	equ	0xFEA
 25988                           fsr0l	equ	0xFE9
 25989                           wreg	equ	0xFE8
 25990                           indf1	equ	0xFE7
 25991                           postdec1	equ	0xFE5
 25992                           fsr1h	equ	0xFE2
 25993                           fsr1l	equ	0xFE1
 25994                           bsr	equ	0xFE0
 25995                           indf2	equ	0xFDF
 25996                           postinc2	equ	0xFDE
 25997                           postdec2	equ	0xFDD
 25998                           fsr2h	equ	0xFDA
 25999                           fsr2l	equ	0xFD9
 26000                           status	equ	0xFD8
 26001                           
 26002 ;; *************** function i2___ftpack *****************
 26003 ;; Defined at:
 26004 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 26005 ;; Parameters:    Size  Location     Type
 26006 ;;  arg             3    0[COMRAM] unsigned um
 26007 ;;  exp             1    3[COMRAM] unsigned char 
 26008 ;;  sign            1    4[COMRAM] unsigned char 
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;		None
 26011 ;; Return value:  Size  Location     Type
 26012 ;;                  3    0[COMRAM] float 
 26013 ;; Registers used:
 26014 ;;		wreg, status,2, status,0
 26015 ;; Tracked objects:
 26016 ;;		On entry : 0/0
 26017 ;;		On exit  : 0/0
 26018 ;;		Unchanged: 0/0
 26019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26020 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26022 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26023 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26024 ;;Total ram usage:        8 bytes
 26025 ;; Hardware stack levels used:    1
 26026 ;; This function calls:
 26027 ;;		Nothing
 26028 ;; This function is called by:
 26029 ;;		___altoft
 26030 ;;		___lwtoft
 26031 ;;		i2___ftadd
 26032 ;;		i2___ftdiv
 26033 ;;		i2___ftmul
 26034 ;;		i2___lltoft
 26035 ;; This function uses a non-reentrant model
 26036 ;;
 26037                           
 26038                           	psect	text110
 26039  014BC0                     __ptext110:
 26040                           	opt stack 0
 26041  014BC0                     i2___ftpack:
 26042                           	opt stack 13
 26043                           
 26044                           ;incstack = 0
 26045  014BC0  5004               	movf	i2___ftpack@exp,w,c
 26046  014BC2  B4D8               	btfsc	status,2,c
 26047  014BC4  D005               	goto	i2u1422_40
 26048  014BC6  5001               	movf	i2___ftpack@arg,w,c
 26049  014BC8  1002               	iorwf	i2___ftpack@arg+1,w,c
 26050  014BCA  1003               	iorwf	i2___ftpack@arg+2,w,c
 26051  014BCC  A4D8               	btfss	status,2,c
 26052  014BCE  D00C               	goto	i2l1434
 26053  014BD0                     i2u1422_40:
 26054  014BD0  0E00               	movlw	0
 26055  014BD2  6E01               	movwf	?i2___ftpack,c
 26056  014BD4  0E00               	movlw	0
 26057  014BD6  6E02               	movwf	?i2___ftpack+1,c
 26058  014BD8  0E00               	movlw	0
 26059  014BDA  6E03               	movwf	?i2___ftpack+2,c
 26060  014BDC  0012               	return	
 26061  014BDE  2A04               	incf	i2___ftpack@exp,f,c
 26062  014BE0  90D8               	bcf	status,0,c
 26063  014BE2  3203               	rrcf	i2___ftpack@arg+2,f,c
 26064  014BE4  3202               	rrcf	i2___ftpack@arg+1,f,c
 26065  014BE6  3201               	rrcf	i2___ftpack@arg,f,c
 26066  014BE8                     i2l1434:
 26067  014BE8  0E00               	movlw	0
 26068  014BEA  1401               	andwf	i2___ftpack@arg,w,c
 26069  014BEC  6E06               	movwf	??i2___ftpack& (0+255),c
 26070  014BEE  0E00               	movlw	0
 26071  014BF0  1402               	andwf	i2___ftpack@arg+1,w,c
 26072  014BF2  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 26073  014BF4  0EFE               	movlw	254
 26074  014BF6  1403               	andwf	i2___ftpack@arg+2,w,c
 26075  014BF8  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 26076  014BFA  5006               	movf	??i2___ftpack,w,c
 26077  014BFC  1007               	iorwf	??i2___ftpack+1,w,c
 26078  014BFE  1008               	iorwf	??i2___ftpack+2,w,c
 26079  014C00  B4D8               	btfsc	status,2,c
 26080  014C02  D00C               	goto	i2l1437
 26081  014C04  D7EC               	goto	i2l1435
 26082  014C06  2A04               	incf	i2___ftpack@exp,f,c
 26083  014C08  0E01               	movlw	1
 26084  014C0A  2601               	addwf	i2___ftpack@arg,f,c
 26085  014C0C  0E00               	movlw	0
 26086  014C0E  2202               	addwfc	i2___ftpack@arg+1,f,c
 26087  014C10  0E00               	movlw	0
 26088  014C12  2203               	addwfc	i2___ftpack@arg+2,f,c
 26089  014C14  90D8               	bcf	status,0,c
 26090  014C16  3203               	rrcf	i2___ftpack@arg+2,f,c
 26091  014C18  3202               	rrcf	i2___ftpack@arg+1,f,c
 26092  014C1A  3201               	rrcf	i2___ftpack@arg,f,c
 26093  014C1C                     i2l1437:
 26094  014C1C  0E00               	movlw	0
 26095  014C1E  1401               	andwf	i2___ftpack@arg,w,c
 26096  014C20  6E06               	movwf	??i2___ftpack& (0+255),c
 26097  014C22  0E00               	movlw	0
 26098  014C24  1402               	andwf	i2___ftpack@arg+1,w,c
 26099  014C26  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 26100  014C28  0EFF               	movlw	255
 26101  014C2A  1403               	andwf	i2___ftpack@arg+2,w,c
 26102  014C2C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 26103  014C2E  5006               	movf	??i2___ftpack,w,c
 26104  014C30  1007               	iorwf	??i2___ftpack+1,w,c
 26105  014C32  1008               	iorwf	??i2___ftpack+2,w,c
 26106  014C34  B4D8               	btfsc	status,2,c
 26107  014C36  D006               	goto	i2l1440
 26108  014C38  D7E6               	goto	i2l1438
 26109  014C3A  0604               	decf	i2___ftpack@exp,f,c
 26110  014C3C  90D8               	bcf	status,0,c
 26111  014C3E  3601               	rlcf	i2___ftpack@arg,f,c
 26112  014C40  3602               	rlcf	i2___ftpack@arg+1,f,c
 26113  014C42  3603               	rlcf	i2___ftpack@arg+2,f,c
 26114  014C44                     i2l1440:
 26115  014C44  BE02               	btfsc	i2___ftpack@arg+1,7,c
 26116  014C46  D003               	goto	i2u1426_40
 26117  014C48  0E02               	movlw	2
 26118  014C4A  6004               	cpfslt	i2___ftpack@exp,c
 26119  014C4C  D7F6               	goto	i2l1441
 26120  014C4E                     i2u1426_40:
 26121  014C4E  A004               	btfss	i2___ftpack@exp,0,c
 26122  014C50  9E02               	bcf	i2___ftpack@arg+1,7,c
 26123  014C52  90D8               	bcf	status,0,c
 26124  014C54  3204               	rrcf	i2___ftpack@exp,f,c
 26125  014C56  5004               	movf	i2___ftpack@exp,w,c
 26126  014C58  1203               	iorwf	i2___ftpack@arg+2,f,c
 26127  014C5A  5005               	movf	i2___ftpack@sign,w,c
 26128  014C5C  A4D8               	btfss	status,2,c
 26129  014C5E  8E03               	bsf	i2___ftpack@arg+2,7,c
 26130  014C60  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 26131  014C64  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 26132  014C68  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 26133  014C6C  0012               	return	
 26134  014C6E                     __end_ofi2___ftpack:
 26135                           	opt stack 0
 26136                           tosu	equ	0xFFF
 26137                           tosh	equ	0xFFE
 26138                           tosl	equ	0xFFD
 26139                           pclatu	equ	0xFFB
 26140                           pclath	equ	0xFFA
 26141                           tblptru	equ	0xFF8
 26142                           tblptrh	equ	0xFF7
 26143                           tblptrl	equ	0xFF6
 26144                           tablat	equ	0xFF5
 26145                           prodh	equ	0xFF4
 26146                           prodl	equ	0xFF3
 26147                           intcon	equ	0xFF2
 26148                           postinc0	equ	0xFEE
 26149                           fsr0h	equ	0xFEA
 26150                           fsr0l	equ	0xFE9
 26151                           wreg	equ	0xFE8
 26152                           indf1	equ	0xFE7
 26153                           postdec1	equ	0xFE5
 26154                           fsr1h	equ	0xFE2
 26155                           fsr1l	equ	0xFE1
 26156                           bsr	equ	0xFE0
 26157                           indf2	equ	0xFDF
 26158                           postinc2	equ	0xFDE
 26159                           postdec2	equ	0xFDD
 26160                           fsr2h	equ	0xFDA
 26161                           fsr2l	equ	0xFD9
 26162                           status	equ	0xFD8
 26163                           
 26164 ;; *************** function _ADCC_GetConversionResult *****************
 26165 ;; Defined at:
 26166 ;;		line 130 in file "mcc_generated_files/adcc.c"
 26167 ;; Parameters:    Size  Location     Type
 26168 ;;		None
 26169 ;; Auto vars:     Size  Location     Type
 26170 ;;		None
 26171 ;; Return value:  Size  Location     Type
 26172 ;;                  2    0[COMRAM] unsigned int 
 26173 ;; Registers used:
 26174 ;;		wreg, status,2, status,0
 26175 ;; Tracked objects:
 26176 ;;		On entry : 0/0
 26177 ;;		On exit  : 0/0
 26178 ;;		Unchanged: 0/0
 26179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26180 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26182 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26183 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26184 ;;Total ram usage:        4 bytes
 26185 ;; Hardware stack levels used:    1
 26186 ;; This function calls:
 26187 ;;		Nothing
 26188 ;; This function is called by:
 26189 ;;		_ADC_postProcessingCallback
 26190 ;; This function uses a non-reentrant model
 26191 ;;
 26192                           
 26193                           	psect	text111
 26194  015EDA                     __ptext111:
 26195                           	opt stack 0
 26196  015EDA                     _ADCC_GetConversionResult:
 26197                           	opt stack 15
 26198                           
 26199                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 26200                           
 26201                           ;incstack = 0
 26202  015EDA  5064               	movf	3940,w,c	;volatile
 26203  015EDC  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 26204  015EDE  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 26205  015EE0  5063               	movf	3939,w,c	;volatile
 26206  015EE2  2403               	addwf	??_ADCC_GetConversionResult,w,c
 26207  015EE4  6E01               	movwf	?_ADCC_GetConversionResult,c
 26208  015EE6  0E00               	movlw	0
 26209  015EE8  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 26210  015EEA  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 26211  015EEC  0012               	return	
 26212  015EEE                     __end_of_ADCC_GetConversionResult:
 26213                           	opt stack 0
 26214                           tosu	equ	0xFFF
 26215                           tosh	equ	0xFFE
 26216                           tosl	equ	0xFFD
 26217                           pclatu	equ	0xFFB
 26218                           pclath	equ	0xFFA
 26219                           tblptru	equ	0xFF8
 26220                           tblptrh	equ	0xFF7
 26221                           tblptrl	equ	0xFF6
 26222                           tablat	equ	0xFF5
 26223                           prodh	equ	0xFF4
 26224                           prodl	equ	0xFF3
 26225                           intcon	equ	0xFF2
 26226                           postinc0	equ	0xFEE
 26227                           fsr0h	equ	0xFEA
 26228                           fsr0l	equ	0xFE9
 26229                           wreg	equ	0xFE8
 26230                           indf1	equ	0xFE7
 26231                           postdec1	equ	0xFE5
 26232                           fsr1h	equ	0xFE2
 26233                           fsr1l	equ	0xFE1
 26234                           bsr	equ	0xFE0
 26235                           indf2	equ	0xFDF
 26236                           postinc2	equ	0xFDE
 26237                           postdec2	equ	0xFDD
 26238                           fsr2h	equ	0xFDA
 26239                           fsr2l	equ	0xFD9
 26240                           status	equ	0xFD8
 26241                           tosu	equ	0xFFF
 26242                           tosh	equ	0xFFE
 26243                           tosl	equ	0xFFD
 26244                           pclatu	equ	0xFFB
 26245                           pclath	equ	0xFFA
 26246                           tblptru	equ	0xFF8
 26247                           tblptrh	equ	0xFF7
 26248                           tblptrl	equ	0xFF6
 26249                           tablat	equ	0xFF5
 26250                           prodh	equ	0xFF4
 26251                           prodl	equ	0xFF3
 26252                           intcon	equ	0xFF2
 26253                           postinc0	equ	0xFEE
 26254                           fsr0h	equ	0xFEA
 26255                           fsr0l	equ	0xFE9
 26256                           wreg	equ	0xFE8
 26257                           indf1	equ	0xFE7
 26258                           postdec1	equ	0xFE5
 26259                           fsr1h	equ	0xFE2
 26260                           fsr1l	equ	0xFE1
 26261                           bsr	equ	0xFE0
 26262                           indf2	equ	0xFDF
 26263                           postinc2	equ	0xFDE
 26264                           postdec2	equ	0xFDD
 26265                           fsr2h	equ	0xFDA
 26266                           fsr2l	equ	0xFD9
 26267                           status	equ	0xFD8
 26268                           
 26269                           	psect	text112
 26270  000000                     __ptext112:
 26271                           	opt stack 0
 26272                           tosu	equ	0xFFF
 26273                           tosh	equ	0xFFE
 26274                           tosl	equ	0xFFD
 26275                           pclatu	equ	0xFFB
 26276                           pclath	equ	0xFFA
 26277                           tblptru	equ	0xFF8
 26278                           tblptrh	equ	0xFF7
 26279                           tblptrl	equ	0xFF6
 26280                           tablat	equ	0xFF5
 26281                           prodh	equ	0xFF4
 26282                           prodl	equ	0xFF3
 26283                           intcon	equ	0xFF2
 26284                           postinc0	equ	0xFEE
 26285                           fsr0h	equ	0xFEA
 26286                           fsr0l	equ	0xFE9
 26287                           wreg	equ	0xFE8
 26288                           indf1	equ	0xFE7
 26289                           postdec1	equ	0xFE5
 26290                           fsr1h	equ	0xFE2
 26291                           fsr1l	equ	0xFE1
 26292                           bsr	equ	0xFE0
 26293                           indf2	equ	0xFDF
 26294                           postinc2	equ	0xFDE
 26295                           postdec2	equ	0xFDD
 26296                           fsr2h	equ	0xFDA
 26297                           fsr2l	equ	0xFD9
 26298                           status	equ	0xFD8
 26299                           
 26300                           	psect	rparam
 26301  0000                     tosu	equ	0xFFF
 26302                           tosh	equ	0xFFE
 26303                           tosl	equ	0xFFD
 26304                           pclatu	equ	0xFFB
 26305                           pclath	equ	0xFFA
 26306                           tblptru	equ	0xFF8
 26307                           tblptrh	equ	0xFF7
 26308                           tblptrl	equ	0xFF6
 26309                           tablat	equ	0xFF5
 26310                           prodh	equ	0xFF4
 26311                           prodl	equ	0xFF3
 26312                           intcon	equ	0xFF2
 26313                           postinc0	equ	0xFEE
 26314                           fsr0h	equ	0xFEA
 26315                           fsr0l	equ	0xFE9
 26316                           wreg	equ	0xFE8
 26317                           indf1	equ	0xFE7
 26318                           postdec1	equ	0xFE5
 26319                           fsr1h	equ	0xFE2
 26320                           fsr1l	equ	0xFE1
 26321                           bsr	equ	0xFE0
 26322                           indf2	equ	0xFDF
 26323                           postinc2	equ	0xFDE
 26324                           postdec2	equ	0xFDD
 26325                           fsr2h	equ	0xFDA
 26326                           fsr2l	equ	0xFD9
 26327                           status	equ	0xFD8
 26328                           
 26329                           	psect	temp
 26330  00005E                     btemp:
 26331                           	opt stack 0
 26332  00005E                     	ds	1
 26333  0000                     int$flags	set	btemp
 26334  0000                     wtemp6	set	btemp+1
 26335                           tosu	equ	0xFFF
 26336                           tosh	equ	0xFFE
 26337                           tosl	equ	0xFFD
 26338                           pclatu	equ	0xFFB
 26339                           pclath	equ	0xFFA
 26340                           tblptru	equ	0xFF8
 26341                           tblptrh	equ	0xFF7
 26342                           tblptrl	equ	0xFF6
 26343                           tablat	equ	0xFF5
 26344                           prodh	equ	0xFF4
 26345                           prodl	equ	0xFF3
 26346                           intcon	equ	0xFF2
 26347                           postinc0	equ	0xFEE
 26348                           fsr0h	equ	0xFEA
 26349                           fsr0l	equ	0xFE9
 26350                           wreg	equ	0xFE8
 26351                           indf1	equ	0xFE7
 26352                           postdec1	equ	0xFE5
 26353                           fsr1h	equ	0xFE2
 26354                           fsr1l	equ	0xFE1
 26355                           bsr	equ	0xFE0
 26356                           indf2	equ	0xFDF
 26357                           postinc2	equ	0xFDE
 26358                           postdec2	equ	0xFDD
 26359                           fsr2h	equ	0xFDA
 26360                           fsr2l	equ	0xFD9
 26361                           status	equ	0xFD8


Data Sizes:
    Strings     2876
    Constant    178
    Data        6
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    101     140
    BANK1           256    186     223
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_73(CODE[24]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_73(CODE[24]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_73(CODE[24]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_73(CODE[24]), line(BANK2[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_81(CODE[5]), STR_79(CODE[9]), STR_71(CODE[13]), STR_69(CODE[12]), 
		 -> STR_67(CODE[16]), STR_65(CODE[15]), STR_63(CODE[21]), STR_61(CODE[21]), 
		 -> STR_59(CODE[26]), STR_57(CODE[13]), STR_55(CODE[18]), STR_53(CODE[15]), 
		 -> STR_51(CODE[16]), STR_48(CODE[4]), STR_47(CODE[6]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK1[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1152
		 -> STR_87(CODE[30]), STR_86(CODE[23]), STR_85(CODE[40]), STR_84(CODE[30]), 
		 -> STR_83(CODE[33]), STR_82(CODE[1152]), STR_80(CODE[58]), STR_78(CODE[73]), 
		 -> STR_77(CODE[63]), STR_76(CODE[37]), STR_75(CODE[102]), STR_74(CODE[86]), 
		 -> STR_72(CODE[25]), STR_70(CODE[24]), STR_68(CODE[41]), STR_66(CODE[40]), 
		 -> STR_64(CODE[34]), STR_62(CODE[34]), STR_60(CODE[32]), STR_58(CODE[56]), 
		 -> STR_56(CODE[34]), STR_54(CODE[34]), STR_52(CODE[35]), STR_50(CODE[47]), 
		 -> STR_49(CODE[17]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  640107
                                            184 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   81015
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  384924
                                            175 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       16    14      2  384196
                                            159 BANK1     16    14      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                             _printf
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   91524
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   91524
                                            141 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   81015
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    3193
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4401
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   81015
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              44    36      8   81015
                                            100 BANK1     41    33      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18036
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   17757
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3878
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9231
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     781
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7054
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6308
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1508
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  331332
                                             83 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   63601
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           38    36      2   63601
                                              6 BANK0     35    33      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13387
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   12892
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     451
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  267491
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         13    13      0  267491
                                             70 BANK0     13    13      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  183235
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   87919
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   80582
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   16787
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   40885
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   62849
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   58157
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6552
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   12065
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    1550
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   17902
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7392
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    5905
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2397
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     BA      DF       7       87.1%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     65      8C       5       87.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C8       8        0.0%
DATA                 0      0     2C8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 01 18:01:06 2018

                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 5F7A  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 5EB8                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 5FD0                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 4BC0  
               __end_of_heartbeatTimerCallback 5CEA                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 570A  
                                 ___ftadd@sign 0134                                            l370 5AB4  
                                          l374 59FC                                            l375 59FA  
                                          l367 5A8C                                            l368 5A8A  
                                          l377 5A10                                            l378 5A36  
                                          l379 5A34                                            l820 4198  
                                          l821 416A                                            l815 4114  
                                          l817 4150                                            l850 2712  
                                          l818 4134                                            l851 272A  
                                          l860 2814                                            l844 275A  
                                          l852 2742                                            l940 1474  
                                          l932 1314                                            l924 1208  
                                          l853 2874                                            l861 282C  
                                          l845 26B2                                            l870 2922  
                                          l862 2844                                            l854 279C  
                                          l846 2784                                            l950 160E  
                                          l942 14CC                                            l934 136C  
                                          l926 1244                                            l871 293A  
                                          l855 28AA                                            l863 285C  
                                          l847 26CA                                            l864 299A  
                                          l872 2952                                            l856 27B4  
                                          l848 26E2                                            l952 165E  
                                          l944 1524                                            l936 13C4  
                                          l928 12BC                                            l776 535E  
                                          l873 296A                                            l865 28C2  
                                          l857 27CC                                            l849 26FA  
                                          l866 29D0                                            l874 2982  
                                          l858 27E4                                            l962 18EA  
                                          l954 188E                                            l946 1572  
                                          l938 141C                                            l867 28DA  
                                          l859 27FC                                            l955 1696  
                                          l868 28F2                                            l948 15C2  
                                          l869 290A                                            l957 1742  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00C8                                            _Vpk 00E5  
                                          _sin 316A                     currentMeasuredToPeak@Angle 0076  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000            __size_of_ADC_postProcessingCallback 040E  
                                 __CFG_ZCD$OFF 000000                                   ___ftdiv@cntr 0140  
                                 ___ftdiv@sign 0145                                           l1110 056C  
                                         l1111 04D8                                           l1120 0618  
                                         l1113 0586                                           l1105 047A  
                                         l1050 2B60                                           l1130 07D4  
                                         l1122 071A                                           l1114 0578  
                                         l1123 070C                                           l1060 1BCA  
                                         l1132 07F4                                           l1116 05AA  
                                         l1053 2C42                                           l1061 1D40  
                                         l1125 075E                                           l1117 05AE  
                                         l1134 0898                                           l1126 0776  
                                         l1118 05C6                                           l1070 00B8  
                                         l1063 1E04                                           l1135 0810  
                                         l1119 0700                                           l1071 0064  
                                         l1056 1BF6                                           l1057 1B06  
                                         l1081 00F6                                           l1402 3EC2  
                                         l1074 014C                                           l1091 0284  
                                         l1083 0128                                           l1067 000E  
                                         l1404 3EE0                                           l1092 02EC  
                                         l1084 0114                                           l1068 0020  
                                         l1500 4638                                           l1340 496E  
                                         l1405 3F22                                           l1077 00F2  
                                         l1069 00E4                                           l1501 4676  
                                         l1414 3FB4                                           l1406 3F52  
                                         l1510 3CF8                                           l1094 0312  
                                         l1078 019A                                           l1086 013A  
                                         l1502 469C                                           l1342 49B6  
                                         l1415 3FA8                                           l1087 0724  
                                         l1095 0350                                           l1440 4B96  
                                         l1408 3F90                                           l1512 3D34  
                                         l1096 0414                                           l1088 01AE  
                                         l1441 4B8C                                           l1409 3F80  
                                         l1513 3D24                                           l1361 503C  
                                         l1089 01F0                                           l1345 4A06  
                                         l1434 4B3A                                           l1602 54D4  
                                         l1506 3C6A                                           l1362 5034  
                                         l1530 4332                                           l1346 49C8  
                                         l1523 4DEC                                           l1435 4B30  
                                         l1603 54C8                                           l1371 5380  
                                         l1099 03BE                                           l1339 4974  
                                         l1524 4E1C                                           l1508 3C96  
                                         l1380 53D2                                           l1372 538C  
                                         l1532 435A                                           l1348 4A3A  
                                         l1541 5DA4                                           l1437 4B6E  
                                         l1613 56C0                                           l1509 3CD0  
                                         l1365 505C                                           l1533 438C  
                                         l1438 4B58                                           l1606 54FC  
                                         l1614 56B4                                           l1518 3D58  
                                         l1366 5066                                           l1358 500E  
                                         l1374 53A2                                           l1534 439C  
                                         l1551 423E                                           l1607 550A  
                                         l1519 3D4C                                           l1367 5074  
                                         l1359 501E                                           l1375 539A  
                                         l1480 3820                                           l1560 42CE  
                                         l1536 43B4                                           l1465 37A4  
                                         l1553 42B6                                           l1537 43C4  
                                         l1474 3834                                           l1562 42F6  
                                         l1554 42A6                                           l1378 53BA  
                                         l1386 5B60                                           l1491 388C  
                                         l1547 5ADE                                           l1379 53C4  
                                         l1492 38A8                                           l1820 5988  
                                         l1493 38D8                                           l1469 37CE  
                                         l1821 597E                                           l1566 5E60  
                                         l1910 5BA0                                           l1479 382A  
                                         l1559 42DA                                           l1488 3868  
                                         l1592 50AE                                           l1489 385E  
                                         l1593 50A2                                           l1817 596E  
                                         l1841 5456                                           l1498 4610  
                                         l1826 58CC                                           l1834 57D0  
                                         l1818 5968                                           l1842 5486  
                                         l1827 58C2                                           l1835 57CA  
                                         l1915 4EC0                                           l1596 50E2  
                                         l1916 4E4E                                           l1844 54A2  
                                         l1597 50F0                                           l1917 4EB8  
                                         l1845 5492                           _ADCC_StartConversion 5FA4  
                                         l1856 4FD6                                           l1857 4F6E  
                                         l1858 4FAA                                           l9207 4A02  
                                         l7585 4E48                                           ?_sin 0066  
                                         l8637 0398                                           l8629 0350  
                                         l8735 077A                                           l8567 0114  
                                         l8681 0578                                           l8657 047E  
                                         l8759 0810                                           l8777 5492  
                                         l9761 16F8                                           l9745 1686  
                                         l9763 1742                                           l9755 16C4  
                                         l8981 4E4E                          __size_ofi2__div_to_l_ 0128  
                                         STR_1 FFC2                                           STR_2 FFAD  
                                         STR_3 FFB6                                           STR_4 F943  
                                         STR_6 FFAD                                           STR_7 FFB6  
                                         STR_9 FFBA                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 017F  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           u9021 431A  
                                         u9041 4342                                           u9130 5040  
                                         u8430 4B22                                           u9500 3D5E  
                                         u9421 3C4E                                           u8470 4BA0  
                                         u9190 53A6                                           u9441 3C7A  
                                         u8811 3762                                           u8821 3776  
                                         u8910 37FE                                           u9711 4222  
                                         u9800 50B2                                           u8850 3796  
                                         u9730 425C                                           u9570 3FBA  
                                         _PLLR 007230                                           u8950 383C  
                                         u9830 54D8                                           u9735 4254  
                                         u8880 37C0                                           u9770 42E0  
                                         u8980 3870                                           u9950 004C  
                                         u9970 009C                                           u9980 00DA  
                                         u9957 0042                                           _TMR6 000FAF  
                                         u9977 0092                                           u9987 00D0  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                               __end_of_ADCC_ISR 5D8C  
                                         _Irms 01C4                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 59F4                                           _Vrms 01C1  
                                         _acos 5818                                           _fabs 5C8C  
                                         _atan 358E                                           _asin 2F00  
                                         _atoi 496C                                           _main 52F8  
                                         _line 02C0                                   ___ftpack@arg 0117  
                                 ___ftpack@exp 011A                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005E                                           _sqrt 3AAA  
                                 i2___ftadd@f1 0040                                   i2___ftadd@f2 0043  
                                         sin@f 0066                                   i2___ftge@ff1 002A  
                                         sin@y 0069                                   i2___ftge@ff2 002D  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 01D6  
                                 i2___ftdiv@f1 0015                                   i2___ftdiv@f2 0018  
                                 i2___ftdiv@f3 0020                                __end_ofi2_scale 2280  
                 __end_of_EUSART2_Transmit_ISR 5BF2                                   i2___ftneg@f1 0024  
                              __end_ofi2_putch 5FC8                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 0153                                   i2___ftmul@f1 0027  
                                 i2___ftmul@f2 002A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                                   ___ftmul@sign 0154  
                                 i2___ftsub@f1 0060                                   i2___ftsub@f2 0063  
                                 i2___fttol@f1 003D                       __size_ofi2_EUSART2_Write 0046  
                                 ___fttol@exp1 0163                                _timer7ReloadVal 01D8  
                                 i2___lltoft@c 0009                                   ___fttol@lval 015F  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 5EBE  
                     ?_terminal_textAttributes 018D                              ??_TMR7_WriteTimer 0102  
                                        l10113 4104                                          l10123 412A  
                                        ?_acos 008E                                          ?_fabs 0027  
                                        ?_atan 0058                                          ?_asin 0079  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 012B  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                __end_of___awdiv 507E  
                                        _ADPRE 000F5E                                __end_of___ftadd 38FE  
                                        STR_10 FFBE                                          STR_11 FFF6  
                                        STR_12 FFC7                                          STR_20 FFC6  
                                        STR_13 FFCD                                          STR_21 FFCC  
                                        STR_14 FFDF                                          STR_22 FFD2  
                                        STR_30 FFC9                                          STR_15 FFE5  
                                        STR_23 FFD8                                          STR_31 FFCF  
                                        STR_40 FBF8                                          STR_16 FFF1  
                                        STR_24 FFDE                                          STR_32 FFD5  
                                        STR_17 FFF9                                          STR_25 FFE4  
                                        STR_33 FFDB                                          STR_41 FFA2  
                                        STR_18 FFC7                                          STR_42 FFAD  
                                        STR_26 FFEA                                          STR_34 FFE1  
                                        STR_50 FC6D                                          STR_43 FFB6  
                                        STR_19 FFFB                                          STR_27 FFF0  
                                        STR_35 FFE7                                          STR_51 FF29  
                                        STR_28 FFF0                                          STR_36 FFED  
                                        STR_44 FF9C                                          STR_60 FE06  
                                        STR_52 FD3A                                __end_of___awmod 53DC  
                                        STR_29 FFFB                                          STR_45 FFAD  
                                        STR_37 FFF3                                          STR_53 FF49  
                                        STR_61 FEF1                                          STR_38 FFF3  
                                        STR_46 FFB6                                          STR_70 FE95  
                                        STR_54 FDC3                                          STR_62 FD7F  
                                        STR_39 FFFD                                          STR_47 FF96  
                                        STR_71 FF74                                          STR_55 FF06  
                                        STR_63 FEDC                                          STR_48 FFB2  
                                        STR_72 FE7C                                          STR_64 FDA1  
                                        STR_56 FD5D                                          STR_80 FBFB  
                                        _ADRPT 000F66                                          STR_81 FFA8  
                                        STR_57 FF67                                          STR_65 FF58  
                                        STR_49 FF18                                          STR_73 FEAD  
                                        STR_66 FCC5                                          STR_58 FC35  
                                        STR_74 FB1D                                          STR_82 F4C3  
                                        STR_67 FF39                                          STR_59 FE62  
                                        STR_83 FDE5                                          STR_75 FAB7  
                                        STR_84 FE44                                          STR_76 FD15  
                                        STR_68 FC9C                                          STR_69 FF81  
                                        STR_85 FCED                                          STR_77 FBBC  
                                        STR_86 FEC5                                          STR_78 FB73  
                                        STR_79 FF8D                                          STR_87 FE26  
                              __end_of___ftdiv 46CE                                __end_of___ftneg 5DB2  
                              __end_of___lldiv 5102                                          ?_sqrt 0066  
                                        u10030 017C                                          u10200 04BC  
                                        u10120 0322                                          u10130 0362  
                                        u10037 0172                                          u10230 0594  
                                        u10240 05A4                                          u10160 0398  
                                        u10080 0228                                          u10330 07B8  
                              __end_of___ftmul 43FE                                          u10085 021E  
                                        u10370 08AA                                          u10610 4E80  
                                        u10380 08DA                                          u11500 16C4  
                              ___awdiv@divisor 011F                                          u11510 16EA  
                                        u11520 16F8                                          u11360 1282  
                                        u12160 412A                                __end_of___llmod 551C  
                                        u10810 5904                                __end_of___ftsub 5B08  
                                        u10387 08D0                                          u10580 57F2  
                              __end_of___fttol 4308                                          u10911 45F8  
                                        u10840 4FEE                                          u10931 4620  
                                        u10587 57E8                                          _T5CLK 000FC6  
                                        _T5CON 000FC3                                          _T7CLK 000F33  
                                        _T6CON 000FB1                                 __CFG_DEBUG$OFF 000000  
                                        _T7CON 000F30                                          u15857 5304  
                                        _T6HLT 000FB2                                          i1l213 007C  
                                        i1l215 009C                                          i1l217 00A6  
                                        i2l202 4AAE                                          i2l204 4ABA  
                                        i2l206 4AC4                                          i1l390 5BE8  
                                        i2l400 4CC0                                          i2l402 4D10  
                                        i1l626 5DCA                                          i1l389 5BEC  
                                        i1l760 5884                                          i1l763 5894  
                                        _T6TMR 000FAF                                          i1l757 5874  
                                        i2l374 5A42                                          i1l766 58A4  
                                        i2l375 5A40                                          i2l377 5A56  
                                        i1l769 58B4                                          i2l378 5A7C  
                                        _T6RST 000FB4                                          i2l379 5A7A  
                                        i2l395 4C78                                          i2l396 4C9A  
                                        i2l397 4CBC                                          i2l750 24A6  
                                        i2l743 266A                                          i2l751 2524  
                                        i2l752 2666                                          i2l744 2286  
                                        i2l746 22E8                                          i2l747 234A  
                                        i2l748 2444                                ___awdiv@counter 0121  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 3FCC  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a F4A8                             __end_ofsin@coeff_b F4C3  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 00C5  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                 ___lltoft@exp 0127                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 5C5A  
                             __end_of_TMR6_ISR 5D64                               __end_of_TMR7_ISR 5C26  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                                ___awtoft@sign 0122                      ??_terminal_ringBufferPull 01AF  
                              __end_of_dpowers F439                                          acos@x 008E  
                                        fabs@d 0027                                     i2scale@scl 003C  
                                        _floor 47B4                                          _frexp 5208  
                                        _errno 00D7                          ?_ADCC_StartConversion 0001  
                                        _scale 19B0                                __end_of_isdigit 5E68  
                                        atan@f 0058                                          atan@x 0063  
                                        atan@y 0060                             __CFG_MCLRE$EXTMCLR 000000  
                                ___ftpack@sign 011B                                          asin@x 0079  
                                        asin@y 0088                                          atoi@a 0130  
                                        atoi@s 012B                                          _putch 5F42  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        sin@x2 006F                                          tablat 000FF5  
                             __end_ofi2___ftge 4F6C                               __end_ofi2___wmul 5DFE  
                               ??_EUSART2_Read 0117                                          sqrt@a 0066  
                                        sqrt@i 006F                                          sqrt@q 0073  
                                        sqrt@x 0076                                          sqrt@z 0070  
                                        status 000FD8                                          wtemp6 005F  
                              __end_of_strncmp 4EDC                                __end_of_strncpy 54B4  
                             __end_ofi2_fround 2F00                 ?_INTERRUPT_InterruptManagerLow 0001  
                                i2___ftdiv@exp 001F                             __size_ofi2___awdiv 0084  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___awmod 0070  
                           __size_ofi2___ftdiv 00E6                             __size_ofi2___ftneg 0024  
                           __size_ofi2___lldiv 0082                             __size_ofi2___ftmul 00F4  
                           __size_ofi2___llmod 0066                             __size_ofi2___ftsub 0042  
                           __size_ofi2___fttol 00F4                               __end_ofi2_printf 11CA  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 5F88  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 5F7A  
                              _TMR5_Initialize 59AA                                __initialization 5766  
                            i2___lldiv@divisor 0005                                   __end_of_acos 586E  
                                 __end_of_fabs 5CBC                                   __end_of_atan 3750  
                                 __end_of_asin 316A                                   __end_of_atoi 4A44  
                                 __end_of_main 536A                              i2___lldiv@counter 000D  
                                i2___ftmul@exp 0030                                   __end_of_sqrt 3C3C  
                                   i2printf@ap 0075                                     i2printf@cp 0071  
                        __end_of_ringBufferLUT 19B0                                 __CFG_SCANE$OFF 000000  
                           __size_ofi2_isdigit 001E                                    ?i2___ftpack 0001  
                                       ??_acos 005E                                         ??_fabs 002A  
                                       ??_atan 005B                                    ?i2___lltoft 0009  
                                       ??_asin 005E                                         ??_atoi 012D  
                                       ??_main 01B8                                  ___fttol@sign1 015E  
                     _TMR5_SetInterruptHandler 5F6C                                         ??_sqrt 0069  
                                __activetblptr 000003                           __size_of__tdiv_to_l_ 0134  
                              _TMR6_Initialize 5C5A                             _TRIAC_Firing_Angle 00DF  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 5582                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01DC  
                                       ?_floor 0056                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             __end_of___altoft 52F8                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 0155  
                                       _ADLTHL 000F6A                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                               __end_of___awtoft 5B84  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                             __end_of___ftpack 4BC0                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                               __end_of___lltoft 570A  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1110 0E52  
                                       i2l1111 0DC0                                         i2l1120 0EFE  
                                       i2l1008 5ED0                                         i2l1113 0E6C  
                                       i2l1105 0D62                                         i2l1050 2DE2  
                                       i2l1130 10B8                                         i2l1122 0FFE  
                                       i2l1114 0E5E                                         i2l1123 0FF0  
                                       i2l1060 2032                                         i2l1132 10D8  
                                       i2l1116 0E90                                         i2l1301 35C4  
                                       i2l1053 2EBA                                         i2l1061 219A  
                                       i2l1125 1042                                         i2l1117 0E94  
                                       i2l1134 117A                                         i2l1126 105A  
                                       i2l1118 0EAC                                         i2l1070 099E  
                                       i2l1303 361C                                         i2l1063 2256  
                                       i2l1135 10F4                                         i2l1119 0FE4  
                                       i2l1071 094C                                         i2l1304 3720  
                                       i2l1056 205C                                         i2l1057 1F76  
                                       i2l1081 09DC                                         i2l1306 3732  
                                       i2l1402 3FEA                                         i2l1074 0A32  
                                       i2l1091 0B68                                         i2l1083 0A0E  
                                       i2l1067 08F6                                         i2l1228 52AE  
                                       i2l1500 471E                                         i2l1404 4008  
                                       i2l1092 0BCE                                         i2l1084 09FA  
                                       i2l1068 0908                                         i2l1229 52A2  
                                       i2l1501 475C                                         i2l1405 404A  
                                       i2l1077 09D8                                         i2l1069 09CA  
                                       i2l1502 4782                                         i2l1414 40DC  
                                       i2l1406 407A                                         i2l1510 3E2A  
                                       i2l1094 0BF4                                         i2l1078 0A80  
                                       i2l1086 0A20                                         i2l1415 40D0  
                                       i2l1087 1008                                         i2l1095 0C34  
                                       i2l1440 4C44                                         i2l1408 40B8  
                                       i2l1512 3E66                                         i2l1096 0CFC  
                                       i2l1088 0A94                                         i2l1441 4C3A  
                                       i2l1409 40A8                                         i2l1513 3E56  
                                       i2l1361 5144                                         i2l1089 0AD6  
                                       i2l1434 4BE8                                         i2l1530 451A  
                                       i2l1282 2F48                                         i2l1602 55A0  
                                       i2l1506 3D9C                                         i2l1362 513C  
                                       i2l1435 4BDE                                         i2l1523 4F0C  
                                       i2l1603 5594                                         i2l1371 53F0  
                                       i2l1099 0CA4                                         i2l1532 4542  
                                       i2l1524 4F3C                                         i2l1284 303C  
                                       i2l1508 3DC8                                         i2l1380 5442  
                                       i2l1372 53FC                                         i2l1437 4C1C  
                                       i2l1533 4574                                         i2l1541 5E14  
                                       i2l1285 30EC                                         i2l1613 571C  
                                       i2l1509 3E02                                         i2l1365 5164  
                                       i2l1438 4C06                                         i2l1534 4584  
                                       i2l1606 55C8                                         i2l1614 5710  
                                       i2l1518 3E8A                                         i2l1366 516E  
                                       i2l1358 5116                                         i2l1374 5412  
                                       i2l1551 442A                                         i2l1607 55D6  
                                       i2l1519 3E7E                                         i2l1367 517C  
                                       i2l1359 5126                                         i2l1375 540A  
                                       i2l1480 39CC                                         i2l1536 459C  
                                       i2l1392 4956                                         i2l1560 44B8  
                                       i2l1465 3950                                         i2l1537 45AC  
                                       i2l1393 48D6                                         i2l1553 44A0  
                                       i2l1474 39E0                                         i2l1562 44E0  
                                       i2l1554 4490                                         i2l1810 3AE6  
                                       i2l1378 542A                                         i2l1491 3A38  
                                       i2l1547 5B20                                         i2l1811 3AD8  
                                       i2l1379 5434                                         i2l1492 3A54  
                                       i2l1493 3A84                                         i2l1469 397A  
                                       i2l1813 3B38                                         i2l1398 5CAE  
                                       i2l1566 5E7E                                         i2l1479 39D6  
                                       i2l1559 44C4                                         i2l1488 3A14  
                                       i2l1592 51B4                                         i2l1489 3A0A  
                                       i2l1681 3196                                         i2l1593 51A8  
                                       i2l1498 46F6                                         i2l1682 3278  
                                       i2l1683 32D0                                         i2l1684 33BA  
                                       i2l1596 51E8                                         i2l1597 51F6  
                                       i2l1890 4884                                         i2l1886 47F0  
                                       i2l1895 5224                                         i2l1887 47E2  
                                       i2l1889 480A                                         _RG7PPS 000E89  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 0039                               __end_of___lwtoft 5E46  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                    ??i2_putch 0002                                         _RX2PPS 000E11  
                                       _TX2REG 000EF2                                         _TX2STA 000EF6  
           __end_of_ADC_postProcessingCallback 268E                     _ADC_postProcessingCallback 2280  
                   ??_ADCC_GetConversionResult 0003                         __size_ofi2__tdiv_to_l_ 0132  
                               __CFG_XINST$OFF 000000                                _TMR7_Initialize 5910  
                                 i2_scale$3324 0039                               __end_of__powers_ F460  
         __size_of_ADCC_SetADIInterruptHandler 000E                __end_of_terminal_ringBufferPull 4210  
                                       ___ftge 4DBA                                         ___wmul 5D14  
                                    ??___awdiv 0121                                      ??___ftadd 0131  
                               __CFG_STVREN$ON 000000                                      ??___awmod 011B  
                                    ??___ftdiv 013D                                      ??___ftneg 0126  
                                    ??___lldiv 011F                                      ??___ftmul 014C  
                                    ??___llmod 012C                                      ??___ftsub 013D  
                                    ??___fttol 0159                       ??_terminal_setCursorHome 018D  
                                       _fround 29F6                                         clear_0 578E  
                                       clear_1 57A0                                         clear_2 57B0  
                         _eusart2RxStringReady 0758                               ___awdiv@quotient 0123  
                              ___awmod@divisor 0119                                ___awmod@counter 011B  
                                       _printf 0000                                         _strcat 595E  
                                       _strchr 5B84                                         _strcmp 58C0  
                                    ?_ADCC_ISR 0001                                         _strlen 57C0  
                               i2___awdiv@sign 000C                                         _strstr 4F6C  
                                       floor@i 0059                                         floor@x 0056  
                        ___ftmul@f3_as_product 0150                               _background_color 00DB  
                              _ADCC_Initialize 55E8                              ??i2_EUSART2_Write 0001  
                               _PMD_Initialize 5E86                                      ??_isdigit 0117  
                            __end_ofi2___awdiv 5186                              __end_ofi2___ftadd 3AAA  
                            __end_ofi2___awmod 544C                              __end_ofi2___ftdiv 47B4  
                               i2___ftadd@exp1 004B                                 i2___ftadd@exp2 004A  
                            __end_ofi2___ftneg 5E22                              __end_ofi2___lldiv 5208  
                                       sin@sgn 0072                              __end_ofi2___ftmul 45E6  
                            __end_ofi2___llmod 55E8                              __end_ofi2___ftsub 5B4A  
                            __end_ofi2___fttol 44F2                                 i2___ftadd@sign 0049  
                                 __mediumconst F410                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 5BBC                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                         sqrt@og 006C  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117    ADCC_SetADIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 0097  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 018D                  __size_of_INTERRUPT_Initialize 0012  
                              _eusart2RxBuffer 0280                        __end_of_TMR5_Initialize 59F4  
                            __end_ofi2_isdigit 5E86                ?_INTERRUPT_InterruptManagerHigh 0001  
             ??_INTERRUPT_InterruptManagerHigh 00B3                              _SYSTEM_Initialize 5CEA  
         __end_of_TMR7_DefaultInterruptHandler 5FD8          __size_of_TMR7_DefaultInterruptHandler 0002  
                 _TMR7_DefaultInterruptHandler 5FD6                                 i2___ftdiv@cntr 001E  
                              _eusart2TxBuffer 0200                                     __accesstop 0060  
                      __end_of__initialization 57B6                                     ___altoft@c 004C  
                               i2___ftdiv@sign 0023                                     ___ftadd@f1 012B  
                                   ___ftadd@f2 012E                            __size_ofi2___ftpack 00AE  
                               i2printf@tmpval 007B                                     ___ftge@ff1 0117  
                                   ___ftge@ff2 011A                             ?_SYSTEM_Initialize 0001  
                          __size_ofi2___lltoft 005C                                   eval_poly@res 0055  
                                ___rparam_used 000001                                     ___ftdiv@f1 0137  
                                   ___ftdiv@f2 013A                                     ___ftdiv@f3 0141  
                              _TMR5_WriteTimer 5EBE                                     ___ftneg@f1 0123  
                                   ___awtoft@c 011F                                 i2___ftpack@arg 0001  
                           i2__tdiv_to_l_@exp1 000F                              i2___llmod@divisor 0012  
                               i2___ftpack@exp 0004                             i2__tdiv_to_l_@cntr 000E  
                            i2___llmod@counter 0016                             i2__tdiv_to_l_@quot 000A  
                                   ___ftmul@f1 0146                                     ___ftmul@f2 0149  
            terminal_ringBufferPull@charNumber 01B2                                     ___ftsub@f1 0137  
                                   ___ftsub@f2 013A                                     ___fttol@f1 0155  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 018D                                   __pidataBANK0 5FD0  
                          ??_SYSTEM_Initialize 011C                                     ___lltoft@c 011F  
                                    ?_TMR5_ISR 0001                                      ?_TMR6_ISR 0001  
                                    ?_TMR7_ISR 0001                                  __end_of_floor 4892  
                                __end_of_frexp 5280                                 i2___ftmul@cntr 0034  
                                __end_of_scale 1E30                                 i2___ftmul@sign 0035  
               ?_EUSART2_SetTxInterruptHandler 0117                                  __end_of_putch 5F50  
                     ??_terminal_clearTerminal 018D                                    i2printf@len 0073  
                                  i2printf@exp 0079                                    i2printf@val 007F  
                      __end_of_TMR6_Initialize 5C8C                         __end_of_PMD_Initialize 5EA2  
                               i2___fttol@exp1 004B                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0047                                      ?i2___ftge 002A  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 5AC6  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 3D70  
                                   __div_to_l_ 3EA2                                      ?i2_fround 0036  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0066  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0122  
                                      ??_floor 0059                                __div_to_l_@cntr 0121  
                                      ??_frexp 0006                                        ??_scale 0158  
                    __end_of_SYSTEM_Initialize 5D14                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 011D                                        ??_putch 0118  
                                 peakToRMS@RMS 00A3                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00DE                                  _eusart2TxHead 01DE  
                                   __pbssBANK0 00C5                                     __pbssBANK1 01BA  
                                   __pbssBANK2 0200                                  _eusart2RxTail 01DB  
                                _eusart2TxTail 01DD                             __size_of_eval_poly 00DA  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 595E                             __size_of_peakToRMS 01C6  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011A                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 5DB2                               ??_FVR_Initialize 0117  
                               _peakToRMS$3310 009A                                 _peakToRMS$3311 009D  
                               _peakToRMS$3309 00A0                          ringBufferLUT@arg_buff 01A8  
                                      ?___ftge 0117              terminal_ringBufferPull@index_1778 01B4  
                                      ?___wmul 0125                          _currentMeasuredToPeak 564C  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 5F6C  
                      __end_of_ADCC_Initialize 564C                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                    ?___altoft 004C                                        ?_fround 0155  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                    ?___awtoft 011F                                      ?___ftpack 0117  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0164  
                              ?_PMD_Initialize 0001                                      ?___lltoft 011F  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___ftge 0030  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strlen 0117  
                                    ?___lwtoft 0009                                        u1111_41 3D80  
                                      ?_strstr 0126                                        u1113_41 3DAC  
                                   ??i2___wmul 0013                                        u1430_41 3922  
                                      u1450_41 4502                                        u1452_41 452A  
                                      u1429_41 390E                                        u1461_41 4706  
                                      u1480_41 440E                                        u1459_41 46DE  
                                      i2l12043 0C7E                                        i2l12035 0C34  
                                      i2l12141 105E                                        i2l12063 0D66  
                                      i2l11285 4F68                                        i2l12165 10F4  
                                      i2l12087 0E5E                                        i2l11973 09FA  
                                      _SP2BRGH 000EF4                                     ??i2_fround 0039  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 4D18  
                                   ??i2_printf 0068                                        _OSCTUNE 000E48  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
               __size_of_ADCC_IsConversionDone 000C                  __end_of_ADCC_IsConversionDone 5FBE  
                     _acquisitionTimerCallback 586E                        __end_of_TMR5_WriteTimer 5EDA  
             __size_of_terminal_textAttributes 0368                      ringBufferLUT@period_value 01A6  
                                      i2_scale 1E30                               ?_TMR5_Initialize 0001  
                                      i2_putch 5FBE           __end_of_terminal_textAttributesReset 5F00  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 5EEE  
                            __end_of__npowers_ F487                                        __Hparam 0000  
                                   _scale$3130 0158                                        __Lparam 0000  
                   ??_TMR5_SetInterruptHandler 011A                                __size_of___ftge 0092  
                                      ___awdiv 4FF8                                        ___ftadd 3750  
                                      ___awmod 536A                                        ___ftdiv 45E6  
                                      ___ftneg 5D8C                                        ___lldiv 507E  
                              __size_of___wmul 0028                                        ___ftmul 4308  
                                      ___llmod 54B4                                        ___ftsub 5AC6  
                                      ___fttol 4210                                     ??___altoft 0050  
                                      __pcinit 5766                                   ??i2___ftpack 0006  
                                   ??___awtoft 0122                                     ??___ftpack 011C  
                            __end_of_eval_poly 496C                                __size_of_fround 0294  
                             ?_TMR6_Initialize 0001                        i2___ftmul@f3_as_product 0031  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                 ??i2___lltoft 000D                                     ??___lltoft 0123  
                                      __ptext0 52F8                                        __ptext1 5F12  
                                      __ptext2 40F4                                        __ptext3 11CA  
                                      __ptext4 5EEE                                        __ptext5 268E  
                                      __ptext6 544C                                        __ptext7 595E  
                                      __ptext8 5F22                                        __ptext9 4F6C  
                            __end_of_peakToRMS 358E                                __size_of_printf 08E8  
                currentMeasuredToPeak@Measured 0073                                     ??___lwtoft 000C  
                   ringBufferLUT@angle_degrees 01A3                                  i2_fround$3322 003C  
                              __size_of_strcat 004C                                  i2_fround$3323 0039  
                              __size_of_strchr 0038                                __size_of_strcmp 0050  
                              __size_of_strlen 0058                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers F411  
                        _OSCILLATOR_Initialize 5EA2                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 003F                                        _isdigit 5E46  
                              atan@val_squared 0067                                   __size_of_sin 025E  
                             ___awmod@dividend 0117    ADC_postProcessingCallback@currentADCChannel 00AF  
                                      _on_time 01BA                       ??_PIN_MANAGER_Initialize 0117  
                                      atan@val 006A                                      _T5CONbits 000FC3  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 007C  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 01AD  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 002A  
                        i2EUSART2_Write@txData 0001                                        _strncmp 4E4C  
                               __pintcode_body 4A44                                        _strncpy 544C  
                         end_of_initialization 57B6                        __end_of_TMR7_WriteTimer 5DD8  
                       _terminal_setCursorHome 5F12                               ?_TMR7_Initialize 0001  
                                      int_func 4A44                            i2___wmul@multiplier 000F  
                                    _T6RSTbits 000FB4                                      i1u1561_28 5D50  
                                    i1u1563_28 5C12                    ?_ADC_postProcessingCallback 0001  
                                    i1u1581_28 0086                                      i2u1110_40 40E2  
                                    i2u1123_40 51B8                                      i2u1126_40 55A4  
                                    i2u1119_40 3E90                                      i2u1071_40 5148  
                                    i2u1077_40 5416                                      i2u1422_40 4BD0  
                                    i2u1511_40 0934                                      i2u1511_47 092A  
                           __end_ofi2___ftpack 4C6E                                      i2u1433_40 3942  
                                    i2u1513_40 0982                                      i2u1513_47 0978  
                                    i2u1426_40 4C4E                                      i2u1514_40 09C0  
                                    i2u1514_47 09B6                                      i2u1443_40 39E8  
                                    i2u1436_40 396C                                      i2u1540_40 0E8A  
                                    i2u1532_40 0C7E                                      i2u1524_40 0B0E  
                                    i2u1524_45 0B04                                      i2u1446_40 3A1C  
                                    i2u1439_40 39AA                                      i2u1519_40 0A62  
                                    i2u1519_47 0A58                                      i2u1536_40 0DA4  
                                    i2u1528_40 0C06                                      i2u1473_40 35E8  
                                    i2u1553_40 118C                                      i2u1529_40 0C46  
                                    i2u1482_40 4448                                      i2u1474_40 35EA  
                                    i2u1554_40 11BC                                      i2u1482_45 4440  
                                    i2u1554_47 11B2                                      i2u1539_40 0E7A  
                                    i2u1493_40 47FC                                      i2u1549_40 109C  
                                    i2u1572_48 4A98                                      i2u1486_40 44CA  
                                    i2u1557_48 5C46                                      i2u1479_40 524C  
                                    i2u1567_40 4CB0                                      i2u1479_48 524E  
                                    i2u1559_48 5D78                                      i2u1497_40 3274  
                                    i2u1498_40 3276                             __end_ofi2___lltoft 5766  
                              ___lldiv@divisor 011B                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 551C                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0073                                i2_EUSART2_Write 5A3C  
                                      printf@c 018C                                        printf@f 0164  
                     ??_heartbeatTimerCallback 0100                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0044                               ?_ADCC_Initialize 0001  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01B6  
                                ??__tdiv_to_l_ 011D                       _TMR6_SetInterruptHandler 5F5E  
                        _TMR5_InterruptHandler 01BE                       ?_terminal_ringBufferPull 0001  
                         __CFG_WDTCCS$LFINTOSC 000000                              __size_of_ADCC_ISR 0028  
          __end_of_ADCC_SetADIInterruptHandler 5FA4                    _ADCC_SetADIInterruptHandler 5F96  
                                    i2___awdiv 5102                                      i2___ftadd 38FE  
                                    i2___awmod 53DC                               __CFG_FEXTOSC$ECH 000000  
                                    i2___ftdiv 46CE                                      i2___ftneg 5DFE  
                                    i2___lldiv 5186                                      i2___ftmul 44F2  
                                    i2___llmod 5582                                      i2___ftsub 5B08  
                                    i2___fttol 43FE                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 5F32  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 07E6  
                ??_ADCC_SetADIInterruptHandler 011A                                    ___ftdiv@exp 0144  
                                 _EUSART2_Read 5A82                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                                    i2_isdigit 5E68                            __size_of__div_to_l_ 012A  
                                  ___ftmul@exp 014F                   __end_of_INTERRUPT_Initialize 5F12  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___ftge 4E4C                  __end_of_terminal_printNewline 5F32  
                               __end_of___wmul 5D3C                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 0758  
                               __end_of_fround 2C8A              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 005C  
                             i2___wmul@product 0013                                 __end_of_printf 08E8  
                                i2_printf$3325 006E                                 __end_of_strcat 59AA  
                               __end_of_strchr 5BBC                                 __end_of_strcmp 5910  
                                 i2printf@flag 0077                                 __end_of_strlen 5818  
                                 i2printf@fval 0083                                 __end_of_strstr 4FF8  
                                 i2printf@prec 0086                            start_initialization 5766  
                            __size_ofi2___ftge 0090                                     eval_poly@d 004F  
                                   eval_poly@n 0051                                     eval_poly@x 004C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 5FDC          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 5FDA                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 3D70                                    __end_of_sin 33C8  
                                    i2printf@c 0088                                      i2printf@f 0066  
              _ADC_postProcessingCallback$3312 00B0                _ADC_postProcessingCallback$3313 00A6  
              _ADC_postProcessingCallback$3314 00A9                _ADC_postProcessingCallback$3315 00AC  
                              i2___fttol@sign1 0046                        _terminal_textAttributes 268E  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                            __size_ofi2_fround 0276                                     ?i2___awdiv 0007  
                                   ?i2___ftadd 0040                                     ?i2___awmod 0001  
                                   ?i2___ftdiv 0015                                     ?i2___ftneg 0024  
                                   ?i2___lldiv 0001                                     ?i2___ftmul 0027  
                                   ?i2___llmod 000E                                     ?i2___ftsub 0060  
                                   ?i2___fttol 003D                  __size_of_ADCC_StartConversion 000E  
                                  putch@txData 0118                              __size_ofi2_printf 08E2  
                        __end_of_EUSART2_Write 5A3C                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0190  
                      __end_ofi2_EUSART2_Write 5A82                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 00E2                               __CFG_LPBOREN$OFF 000000  
                             ??_PMD_Initialize 0117                                       ??___ftge 011D  
                                     ??___wmul 0129                __size_of_heartbeatTimerCallback 002E  
                                  __pdataBANK0 00E5                                       ??_fround 0158  
                                _ringBufferLUT 11CA                 ??_terminal_textAttributesReset 019F  
                                     ??_printf 016C                              _POS3P3_ADC_Result 00CB  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 0094  
                                     ??_strstr 012A                              __size_of___altoft 0078  
                                   fround@prec 015E                                 _eusart2RxCount 01DA  
                                ?i2__div_to_l_ 0001                              __size_of___awtoft 003A  
                            __size_of___ftpack 00B0                                      _acos$3316 0091  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                 _isdigit$2486 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                          EUSART2_Write@txData 0117                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$3320 0082  
                                    _asin$3317 007F                                      _asin$3318 008B  
                                    _asin$3319 0085                                       ?i2_putch 0001  
                                   sin@coeff_a F499                                     sin@coeff_b F4B7  
                        _TMR6_InterruptHandler 01D0                         _PIN_MANAGER_Initialize 4D18  
                                    __pintcode 0008                                  __pmediumconst F410  
                                     ?___awdiv 011D                                      __ptext100 47B4  
                                    __ptext101 43FE                                      __ptext110 4BC0  
                                    __ptext102 4EDC                                      __ptext111 5EDA  
                                    __ptext103 5208                                      __ptext112 0000  
                                    __ptext104 5280                                      __ptext105 4892  
                                    __ptext106 5DD8                                      __ptext107 44F2  
                                    __ptext108 38FE                                      __ptext109 5E22  
                                     ?___ftadd 012B                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 5F5E  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ F460  
                                     ?___fttol 0155                                 ?_ringBufferLUT 019F  
            _EUSART2_TxDefaultInterruptHandler 01D3                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 3C3C                                       _ADCC_ISR 5D64  
                               ??i2__div_to_l_ 0007                                   ??__div_to_l_ 011D  
                             _POS12_ADC_Result 01CA                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                      _eval_poly 4892  
                    ??_terminal_textAttributes 018F                                      _attribute 00DD  
                                    _peakToRMS 33C8                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                         _heartbeatTimerCallback 5CBC  
                               _dimming_period 00D9                                    ??i2___awdiv 000B  
                                  ??i2___ftadd 0046                                    ??i2___awmod 0005  
                               __size_of_floor 00DE                                    ??i2___ftdiv 001B  
                               __size_of_frexp 0078                                    ??i2___ftneg 0027  
                                  ??i2___lldiv 0009                                    ??i2___ftmul 002D  
                               __size_of_scale 0480                                    ??i2___llmod 0016  
                                  ??i2___ftsub 005E                                    ??i2___fttol 0041  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 5F00  
                                     _T6CLKCON 000FB3                          _ADCC_IsConversionDone 5FB2  
       terminal_textAttributes@input_attribute 018E                   __size_of_EUSART2_Receive_ISR 00AA  
                               ___wmul@product 0129                      currentMeasuredToPeak@Peak 0079  
                             ?i2_EUSART2_Write 0001                                       _LATFbits 000F7E  
                                     _LATGbits 000F7F                        ??_currentMeasuredToPeak 005E  
                                  strncpy@from 0119                                      atan@recip 0066  
                                     _IPR1bits 000E20                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                                    strncpy@size 011B  
                                     _IPR5bits 000E24                                       _PIE3bits 000E2C  
                                     _PIE5bits 000E2E                                    ??i2_isdigit 0001  
                                     i1u721_20 5CC8                                       i1u722_28 5CCC  
                                     _PIR1bits 000E34                                       i1u666_20 5FBA  
                           __end_of__div_to_l_ 3FCC                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                                       _TMR5_ISR 5C26  
                                     _TMR6_ISR 5D3C                                       _TMR7_ISR 5BF2  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   _ADCON0bits 000F60                                     _ADCON1bits 000F59  
                                   _ADCON2bits 000F5A                                     _ADCON3bits 000F5B  
                            ___wmul@multiplier 0125                                       i2___ftge 4EDC  
                                     i2___wmul 5DD8                        __size_of_FVR_Initialize 0008  
                                   printf@flag 017B                                     printf@fval 0187  
                                   printf@prec 018A                                     ?_eval_poly 004C  
               __end_of_terminal_setCursorHome 5F22                              i2___awdiv@divisor 0009  
                                     i2_fround 2C8A              __size_of_TMR5_SetInterruptHandler 000E  
                                   ?_peakToRMS 0094                              i2___awdiv@counter 000B  
                    ?_TMR5_SetInterruptHandler 0117                  __size_of_EUSART2_Transmit_ISR 0036  
                                     i2_printf 08E8                            __end_ofatan@coeff_a F499  
                          __end_ofatan@coeff_b F4B7                       __size_of_TMR6_Initialize 0032  
                      ?_terminal_clearTerminal 0001                                      copy_data0 577A  
                        ?_INTERRUPT_Initialize 0001                             i2___awmod@dividend 0001  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0450  
               ??_TMR5_DefaultInterruptHandler 0001                               __size_ofi2_putch 000A  
                                    frexp@eptr 0004                __end_of_terminal_textAttributes 29F6  
                                   _ADSTATbits 000F65                                       __Hrparam 0000  
             __end_of_ADCC_GetConversionResult 5EEE                        __CFG_RSTOSC$EXTOSC_4PLL 000000  
        __end_of_EUSART2_SetRxInterruptHandler 5F96         __size_of_EUSART2_SetRxInterruptHandler 000E  
                _EUSART2_SetRxInterruptHandler 5F88                                       __Lrparam 0000  
                           __CFG_BOREN$SBORDIS 000000                                ??_ringBufferLUT 01A1  
                     __size_of_TMR7_Initialize 004E                               _foreground_color 00DC  
                      ??_OSCILLATOR_Initialize 0117                               __size_of___awdiv 0086  
                             __size_of___ftadd 01AE                               __size_of___awmod 0072  
                             __size_of___ftdiv 00E8                               __size_of___ftneg 0026  
                        i2___wmul@multiplicand 0011                               __size_of___lldiv 0084  
                                     ___altoft 5280                               __size_of___ftmul 00F6  
                             __size_of___llmod 0068                               __size_of___ftsub 0042  
                             __size_of___fttol 00F8                                       ___awtoft 5B4A  
                                     ___ftpack 4B10               __end_of_acquisitionTimerCallback 58C0  
                                  _fround$3128 015B                                    _fround$3129 0158  
                                     ___lltoft 56AC                          __end_ofi2__tdiv_to_l_ 3EA2  
                                     ___lwtoft 5E22                       _TMR7_SetInterruptHandler 5F50  
                        _TMR7_InterruptHandler 01CD                             _ADC_Result_Scaling 00CE  
      terminal_textAttributes@foreground_color 018F                       __size_of_ADCC_Initialize 0064  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 5F42                               __size_of_isdigit 0022  
                                     __ptext10 4E4C                                       __ptext11 57C0  
                                     __ptext20 19B0                                       __ptext12 5B84  
                                     __ptext21 5F42                                       __ptext13 58C0  
                                     __ptext30 3EA2                                       __ptext22 59F4  
                                     __ptext14 496C                                       __ptext31 56AC  
                                     __ptext23 5E46                                       __ptext15 45E6  
                                     __ptext40 5CEA                                       __ptext32 54B4  
                                     __ptext24 29F6                                       __ptext16 5B4A  
                                     __ptext41 5910                                       __ptext33 507E  
                                     __ptext25 5D14                                       __ptext17 5A82  
                                     __ptext50 5F00                                       __ptext42 5F50  
                                     __ptext34 4210                                       __ptext26 4308  
                                     __ptext18 5F32                                       __ptext51 5FC8  
                                     __ptext43 5C5A                                       __ptext35 5AC6  
                                     __ptext27 536A                                       __ptext19 0000  
                                     __ptext60 586E                                       __ptext52 551C  
                                     __ptext44 5F5E                                       __ptext36 3750  
                                     __ptext28 4FF8                                       __ptext61 5FA4  
                                     __ptext53 5F7A                                       __ptext45 59AA  
                                     __ptext37 4B10                                       __ptext29 3C3C  
                                     __ptext70 5EBE                                       __ptext62 5FB2  
                                     __ptext54 5F88                                       __ptext46 5F6C  
                                     __ptext38 5D8C                                       __ptext71 5FDA  
                                     __ptext63 5DB2                                       __ptext55 55E8  
                                     __ptext47 5E86                                       __ptext39 4DBA  
                                     __ptext80 5102                                       __ptext72 4C6E  
                                     __ptext64 5D3C                                       __ptext56 5F96  
                                     __ptext48 4D18                                       __ptext81 3D70  
                                     __ptext73 08E8                                       __ptext65 5FD8  
                                     __ptext49 5EA2                                       __ptext90 5818  
                                     __ptext82 3FCC                                       __ptext74 1E30  
                                     __ptext66 5CBC                                       __ptext58 5BF2  
                                     __ptext91 2F00                                       __ptext83 570A  
                                     __ptext75 5FBE                                       __ptext67 5BBC  
                                     __ptext59 5FD6                                       __ptext92 3AAA  
                                     __ptext84 5582                                       __ptext76 5A3C  
                                     __ptext93 358E                                       __ptext85 5186  
                                     __ptext77 5E68                                       __ptext69 5C26  
                                     __ptext94 5C8C                                       __ptext86 5D64  
                                     __ptext78 2C8A                                       __ptext95 564C  
                                     __ptext87 5FDC                                       __ptext79 53DC  
                                     __ptext96 316A                                       __ptext88 2280  
                                     __ptext97 5B08                                       __ptext89 33C8  
                                     __ptext98 5DFE                                       __ptext99 46CE  
                                     _sin$3321 006C                                       __powers_ F439  
                       ?_ADCC_IsConversionDone 0001                                _Temp_ADC_Offset 00E8  
                             __size_of_strncmp 0090                               __size_of_strncpy 0068  
                  __size_of_EUSART2_Initialize 0066                                 i2_isdigit$2486 0002  
                              _Temp_ADC_Result 01C7                                  __size_of_acos 0056  
                                __size_of_fabs 0030                                  __size_of_atan 01C2  
                                __size_of_asin 026A                                  __size_of_atoi 00D8  
                                __size_of_main 0072                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 0192                           __end_ofi2__div_to_l_ 40F4  
                                   strncmp@len 0121                           __CFG_WDTCWS$WDTCWS_7 000000  
                                   _T7GCONbits 000F31                             __CFG_BORV$VBOR_190 000000  
                     __size_of_TMR5_WriteTimer 001C                      _ADCC_ADI_InterruptHandler 00D1  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 5FB2  
                                     int$flags 005E                                       atoi@sign 012F  
                                    printf@len 0177                                      printf@exp 017D  
                                    printf@val 0183                                    atan@coeff_a F487  
                                  atan@coeff_b F4A8                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 5F22                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0053                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 015B  
         __end_of_TMR6_DefaultInterruptHandler 5FDA          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 5FD8           __end_of_ADCC_DefaultInterruptHandler 5FDE  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 5FDC  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                             __tdiv_to_l_@quot 0120                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 01AB  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                       printf@ap 0179  
                                     printf@cp 0175                       _ADCC_GetConversionResult 5EDA  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 4C6E  
       __end_of_INTERRUPT_InterruptManagerHigh 4B10        __size_of_INTERRUPT_InterruptManagerHigh 4B08  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 011A  
                                  _printf$3131 0172                                 _FVR_Initialize 5FC8  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 019F  
                             ___lldiv@quotient 011F                                       strlen@cp 011B  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 4DBA                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 40F4                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0052  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                 ??_ADC_postProcessingCallback 005E              _EUSART2_RxDefaultInterruptHandler 00D4  
               __size_of_currentMeasuredToPeak 0060                  __end_of_currentMeasuredToPeak 56AC  
