

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Nov 04 10:33:48 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bitbssCOMRAM,global,bit,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    18                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   106                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   107                           	psect	text85,global,reloc=2,class=CODE,delta=1
   108                           	psect	text86,global,reloc=2,class=CODE,delta=1
   109                           	psect	text87,global,reloc=2,class=CODE,delta=1
   110                           	psect	text88,global,reloc=2,class=CODE,delta=1
   111                           	psect	text89,global,reloc=2,class=CODE,delta=1
   112                           	psect	text90,global,reloc=2,class=CODE,delta=1
   113                           	psect	text91,global,reloc=2,class=CODE,delta=1
   114                           	psect	text92,global,reloc=2,class=CODE,delta=1
   115                           	psect	text93,global,reloc=2,class=CODE,delta=1
   116                           	psect	text94,global,reloc=2,class=CODE,delta=1
   117                           	psect	text95,global,reloc=2,class=CODE,delta=1
   118                           	psect	text96,global,reloc=2,class=CODE,delta=1
   119                           	psect	text97,global,reloc=2,class=CODE,delta=1
   120                           	psect	text98,global,reloc=2,class=CODE,delta=1
   121                           	psect	text99,global,reloc=2,class=CODE,delta=1
   122                           	psect	text100,global,reloc=2,class=CODE,delta=1
   123                           	psect	text101,global,reloc=2,class=CODE,delta=1
   124                           	psect	text102,global,reloc=2,class=CODE,delta=1
   125                           	psect	text103,global,reloc=2,class=CODE,delta=1
   126                           	psect	text104,global,reloc=2,class=CODE,delta=1
   127                           	psect	text105,global,reloc=2,class=CODE,delta=1
   128                           	psect	text106,global,reloc=2,class=CODE,delta=1
   129                           	psect	text107,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   132                           	psect	text110,global,reloc=2,class=CODE,delta=1,group=1
   133                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=1
   134                           	psect	text112,global,reloc=2,class=CODE,delta=1
   135                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text114,global,reloc=2,class=CODE,delta=1
   137                           	psect	text115,global,reloc=2,class=CODE,delta=1
   138                           	psect	text116,global,reloc=2,class=CODE,delta=1
   139                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text118,global,reloc=2,class=CODE,delta=1
   141                           	psect	text119,global,reloc=2,class=CODE,delta=1
   142                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text123,global,reloc=2,class=CODE,delta=1
   146                           	psect	text124,global,reloc=2,class=CODE,delta=1
   147                           	psect	text125,global,reloc=2,class=CODE,delta=1
   148                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   149                           	psect	text127,global,reloc=2,class=CODE,delta=1
   150                           	psect	text128,global,reloc=2,class=CODE,delta=1
   151                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   154                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   155  0000                     
   156                           ; Version 1.45 (B)
   157                           ; Generated 30/01/2018 GMT
   158                           ; 
   159                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   160                           ; All rights reserved.
   161                           ; 
   162                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   163                           ; 
   164                           ; Redistribution and use in source and binary forms, with or without modification, are
   165                           ; permitted provided that the following conditions are met:
   166                           ; 
   167                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   168                           ;        conditions and the following disclaimer.
   169                           ; 
   170                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   171                           ;        of conditions and the following disclaimer in the documentation and/or other
   172                           ;        materials provided with the distribution.
   173                           ; 
   174                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   175                           ;        software without specific prior written permission.
   176                           ; 
   177                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   178                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   179                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   180                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   181                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   182                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   183                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   184                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   185                           ; 
   186                           ; 
   187                           ; Code-generator required, PIC18LF67K40 Definitions
   188                           ; 
   189                           ; SFR Addresses
   190  0000                     
   191                           	psect	idataBANK0
   192  01700C                     __pidataBANK0:
   193                           	opt stack 0
   194                           
   195                           ;initializer for _Irms_offset
   196  01700C  6D                 	db	109
   197  01700D  E7                 	db	231
   198  01700E  BD                 	db	189
   199                           
   200                           ;initializer for _Vpk_const
   201                           ;main.c: 61: volatile double FVR_ADC_Result;
   202                           ;main.c: 62: volatile double AVSS_ADC_Result;
   203                           ;main.c: 63: volatile double ADC_Result_Scaling;
   204                           ;main.c: 64: volatile double POS3P3_ADC_Result;
   205                           ;main.c: 65: volatile double POS12_ADC_Result;
   206                           ;main.c: 66: volatile double Temp_ADC_Result;
   207                           ;main.c: 67: volatile double Temp_ADC_Offset = -267.409;
   208  01700F  B5                 	db	181
   209  017010  29                 	db	41
   210  017011  43                 	db	67
   211                           
   212                           ;initializer for _Temp_ADC_Offset
   213  017012  B4                 	db	180
   214  017013  85                 	db	133
   215  017014  C3                 	db	195
   216                           
   217                           ;initializer for _dimming_period
   218  017015  7FEE               	dw	32750
   219                           
   220                           ;initializer for _TRIAC_Firing_Angle
   221                           ;main.c: 61: volatile double FVR_ADC_Result;
   222                           ;main.c: 62: volatile double AVSS_ADC_Result;
   223                           ;main.c: 63: volatile double ADC_Result_Scaling;
   224                           ;main.c: 64: volatile double POS3P3_ADC_Result;
   225                           ;main.c: 65: volatile double POS12_ADC_Result;
   226                           ;main.c: 66: volatile double Temp_ADC_Result;
   227                           ;main.c: 67: volatile double Temp_ADC_Offset = -267.409;
   228                           ;main.c: 68: double Vpk_const = 169.7056274847714;
   229                           ;main.c: 69: volatile double Vpk;
   230                           ;main.c: 70: volatile double Ipk;
   231                           ;main.c: 71: volatile double Imeas;
   232                           ;main.c: 72: double Irms_offset = -0.113;
   233  017017  00                 	db	0
   234  017018  B4                 	db	180
   235  017019  42                 	db	66
   236                           
   237                           	psect	idataBANK2
   238  016F8C                     __pidataBANK2:
   239                           	opt stack 0
   240                           
   241                           ;initializer for getCauseOfResetString@F17476
   242  016F8C  8D                 	db	low STR_120
   243  016F8D  FE                 	db	high STR_120
   244  016F8E  2D                 	db	low STR_121
   245  016F8F  FE                 	db	high STR_121
   246  016F90  D5                 	db	low STR_122
   247  016F91  FD                 	db	high STR_122
   248  016F92  DB                 	db	low STR_123
   249  016F93  FC                 	db	high STR_123
   250  016F94  1C                 	db	low (STR_126+9)
   251  016F95  FA                 	db	high (STR_126+9)
   252  016F96  8A                 	db	low STR_125
   253  016F97  FC                 	db	high STR_125
   254  016F98  13                 	db	low STR_126
   255  016F99  FA                 	db	high STR_126
   256  016F9A  6D                 	db	low STR_127
   257  016F9B  FC                 	db	high STR_127
   258  016F9C  A6                 	db	low STR_128
   259  016F9D  FC                 	db	high STR_128
   260  016F9E  81                 	db	low STR_129
   261  016F9F  FD                 	db	high STR_129
   262  016FA0  55                 	db	low STR_130
   263  016FA1  FD                 	db	high STR_130
   264  016FA2  31                 	db	low STR_131
   265  016FA3  FC                 	db	high STR_131
   266                           
   267                           	psect	mediumconst
   268  00EC5E                     __pmediumconst:
   269                           	opt stack 0
   270  00EC5E  00                 	db	0
   271  00EC5F                     _dpowers:
   272                           	opt stack 0
   273  00EC5F  0001               	dw	1
   274  00EC61  0000               	dw	0
   275  00EC63  000A               	dw	10
   276  00EC65  0000               	dw	0
   277  00EC67  0064               	dw	100
   278  00EC69  0000               	dw	0
   279  00EC6B  03E8               	dw	1000
   280  00EC6D  0000               	dw	0
   281  00EC6F  2710               	dw	10000
   282  00EC71  0000               	dw	0
   283  00EC73  86A0               	dw	34464
   284  00EC75  0001               	dw	1
   285  00EC77  4240               	dw	16960
   286  00EC79  000F               	dw	15
   287  00EC7B  9680               	dw	38528
   288  00EC7D  0098               	dw	152
   289  00EC7F  E100               	dw	57600
   290  00EC81  05F5               	dw	1525
   291  00EC83  CA00               	dw	51712
   292  00EC85  3B9A               	dw	15258
   293  00EC87                     __end_of_dpowers:
   294                           	opt stack 0
   295  00EC87                     __powers_:
   296                           	opt stack 0
   297  00EC87  00                 	db	0
   298  00EC88  80                 	db	128
   299  00EC89  3F                 	db	63
   300  00EC8A  00                 	db	0
   301  00EC8B  20                 	db	32
   302  00EC8C  41                 	db	65
   303  00EC8D  00                 	db	0
   304  00EC8E  C8                 	db	200
   305  00EC8F  42                 	db	66
   306  00EC90  00                 	db	0
   307  00EC91  7A                 	db	122
   308  00EC92  44                 	db	68
   309  00EC93  40                 	db	64
   310  00EC94  1C                 	db	28
   311  00EC95  46                 	db	70
   312  00EC96  50                 	db	80
   313  00EC97  C3                 	db	195
   314  00EC98  47                 	db	71
   315  00EC99  24                 	db	36
   316  00EC9A  74                 	db	116
   317  00EC9B  49                 	db	73
   318  00EC9C  97                 	db	151
   319  00EC9D  18                 	db	24
   320  00EC9E  4B                 	db	75
   321  00EC9F  BC                 	db	188
   322  00ECA0  BE                 	db	190
   323  00ECA1  4C                 	db	76
   324  00ECA2  6B                 	db	107
   325  00ECA3  6E                 	db	110
   326  00ECA4  4E                 	db	78
   327  00ECA5  03                 	db	3
   328  00ECA6  15                 	db	21
   329  00ECA7  50                 	db	80
   330  00ECA8  79                 	db	121
   331  00ECA9  AD                 	db	173
   332  00ECAA  60                 	db	96
   333  00ECAB  F3                 	db	243
   334  00ECAC  49                 	db	73
   335  00ECAD  71                 	db	113
   336  00ECAE                     __end_of__powers_:
   337                           	opt stack 0
   338  00ECAE                     __npowers_:
   339                           	opt stack 0
   340  00ECAE  00                 	db	0
   341  00ECAF  80                 	db	128
   342  00ECB0  3F                 	db	63
   343  00ECB1  CD                 	db	205
   344  00ECB2  CC                 	db	204
   345  00ECB3  3D                 	db	61
   346  00ECB4  D7                 	db	215
   347  00ECB5  23                 	db	35
   348  00ECB6  3C                 	db	60
   349  00ECB7  12                 	db	18
   350  00ECB8  83                 	db	131
   351  00ECB9  3A                 	db	58
   352  00ECBA  B7                 	db	183
   353  00ECBB  D1                 	db	209
   354  00ECBC  38                 	db	56
   355  00ECBD  C6                 	db	198
   356  00ECBE  27                 	db	39
   357  00ECBF  37                 	db	55
   358  00ECC0  38                 	db	56
   359  00ECC1  86                 	db	134
   360  00ECC2  35                 	db	53
   361  00ECC3  C0                 	db	192
   362  00ECC4  D6                 	db	214
   363  00ECC5  33                 	db	51
   364  00ECC6  CC                 	db	204
   365  00ECC7  2B                 	db	43
   366  00ECC8  32                 	db	50
   367  00ECC9  70                 	db	112
   368  00ECCA  89                 	db	137
   369  00ECCB  30                 	db	48
   370  00ECCC  E7                 	db	231
   371  00ECCD  DB                 	db	219
   372  00ECCE  2E                 	db	46
   373  00ECCF  E5                 	db	229
   374  00ECD0  3C                 	db	60
   375  00ECD1  1E                 	db	30
   376  00ECD2  42                 	db	66
   377  00ECD3  A2                 	db	162
   378  00ECD4  0D                 	db	13
   379  00ECD5                     __end_of__npowers_:
   380                           	opt stack 0
   381  00ECD5                     _hexpowers:
   382                           	opt stack 0
   383  00ECD5  0001               	dw	1
   384  00ECD7  0000               	dw	0
   385  00ECD9  0010               	dw	16
   386  00ECDB  0000               	dw	0
   387  00ECDD  0100               	dw	256
   388  00ECDF  0000               	dw	0
   389  00ECE1  1000               	dw	4096
   390  00ECE3  0000               	dw	0
   391  00ECE5  0000               	dw	0
   392  00ECE7  0001               	dw	1
   393  00ECE9  0000               	dw	0
   394  00ECEB  0010               	dw	16
   395  00ECED  0000               	dw	0
   396  00ECEF  0100               	dw	256
   397  00ECF1  0000               	dw	0
   398  00ECF3  1000               	dw	4096
   399  00ECF5                     __end_of_hexpowers:
   400                           	opt stack 0
   401  00ECF5                     atan@coeff_a:
   402                           	opt stack 0
   403  00ECF5  3C                 	db	60
   404  00ECF6  04                 	db	4
   405  00ECF7  42                 	db	66
   406  00ECF8  9F                 	db	159
   407  00ECF9  6A                 	db	106
   408  00ECFA  42                 	db	66
   409  00ECFB  90                 	db	144
   410  00ECFC  01                 	db	1
   411  00ECFD  42                 	db	66
   412  00ECFE  4D                 	db	77
   413  00ECFF  BB                 	db	187
   414  00ED00  40                 	db	64
   415  00ED01  EC                 	db	236
   416  00ED02  47                 	db	71
   417  00ED03  3E                 	db	62
   418  00ED04  8E                 	db	142
   419  00ED05  1F                 	db	31
   420  00ED06  BB                 	db	187
   421  00ED07                     __end_ofatan@coeff_a:
   422                           	opt stack 0
   423  00ED07                     sin@coeff_a:
   424                           	opt stack 0
   425  00ED07  F4                 	db	244
   426  00ED08  4A                 	db	74
   427  00ED09  48                 	db	72
   428  00ED0A  95                 	db	149
   429  00ED0B  95                 	db	149
   430  00ED0C  C7                 	db	199
   431  00ED0D  C1                 	db	193
   432  00ED0E  DC                 	db	220
   433  00ED0F  45                 	db	69
   434  00ED10  DC                 	db	220
   435  00ED11  6D                 	db	109
   436  00ED12  C3                 	db	195
   437  00ED13  B3                 	db	179
   438  00ED14  33                 	db	51
   439  00ED15  40                 	db	64
   440  00ED16                     __end_ofsin@coeff_a:
   441                           	opt stack 0
   442  00ED16                     atan@coeff_b:
   443                           	opt stack 0
   444  00ED16  3C                 	db	60
   445  00ED17  04                 	db	4
   446  00ED18  42                 	db	66
   447  00ED19  5A                 	db	90
   448  00ED1A  8B                 	db	139
   449  00ED1B  42                 	db	66
   450  00ED1C  04                 	db	4
   451  00ED1D  44                 	db	68
   452  00ED1E  42                 	db	66
   453  00ED1F  9C                 	db	156
   454  00ED20  4F                 	db	79
   455  00ED21  41                 	db	65
   456  00ED22  00                 	db	0
   457  00ED23  80                 	db	128
   458  00ED24  3F                 	db	63
   459  00ED25                     __end_ofatan@coeff_b:
   460                           	opt stack 0
   461  00ED25                     sin@coeff_b:
   462                           	opt stack 0
   463  00ED25  34                 	db	52
   464  00ED26  01                 	db	1
   465  00ED27  48                 	db	72
   466  00ED28  9D                 	db	157
   467  00ED29  B0                 	db	176
   468  00ED2A  45                 	db	69
   469  00ED2B  00                 	db	0
   470  00ED2C  DA                 	db	218
   471  00ED2D  42                 	db	66
   472  00ED2E  00                 	db	0
   473  00ED2F  80                 	db	128
   474  00ED30  3F                 	db	63
   475  00ED31                     __end_ofsin@coeff_b:
   476                           	opt stack 0
   477  0000                     _PIR8bits	set	3643
   478  0000                     _FVRCONbits	set	3780
   479  0000                     _FVRCON	set	3780
   480  0000                     _RC2REG	set	3825
   481  0000                     _RC2STAbits	set	3829
   482  0000                     _TX2REG	set	3826
   483  0000                     _TX2STAbits	set	3830
   484  0000                     _SP2BRGH	set	3828
   485  0000                     _SP2BRGL	set	3827
   486  0000                     _TX2STA	set	3830
   487  0000                     _RC2STA	set	3829
   488  0000                     _BAUD2CON	set	3831
   489  0000                     _PIR1bits	set	3636
   490  0000                     _PIE1bits	set	3626
   491  0000                     _PIR5bits	set	3640
   492  0000                     _PIE5bits	set	3630
   493  0000                     _PIR3bits	set	3638
   494  0000                     _PIE3bits	set	3628
   495  0000                     _IPR1bits	set	3616
   496  0000                     _IPR5bits	set	3620
   497  0000                     _IPR3bits	set	3618
   498  0000                     _RX2PPS	set	3601
   499  0000                     _RG7PPS	set	3721
   500  0000                     _SLRCONH	set	3774
   501  0000                     _SLRCONG	set	3769
   502  0000                     _SLRCONF	set	3761
   503  0000                     _SLRCONE	set	3756
   504  0000                     _SLRCOND	set	3748
   505  0000                     _SLRCONC	set	3743
   506  0000                     _SLRCONB	set	3735
   507  0000                     _SLRCONA	set	3727
   508  0000                     _ODCOND	set	3749
   509  0000                     _ODCONC	set	3744
   510  0000                     _ODCONH	set	3775
   511  0000                     _ODCONB	set	3736
   512  0000                     _ODCONG	set	3770
   513  0000                     _ODCONA	set	3728
   514  0000                     _ODCONF	set	3762
   515  0000                     _ODCONE	set	3757
   516  0000                     _WPUH	set	3776
   517  0000                     _WPUC	set	3745
   518  0000                     _WPUA	set	3729
   519  0000                     _WPUG	set	3771
   520  0000                     _WPUB	set	3737
   521  0000                     _WPUE	set	3758
   522  0000                     _WPUF	set	3763
   523  0000                     _WPUD	set	3750
   524  0000                     _ANSELA	set	3730
   525  0000                     _ANSELF	set	3764
   526  0000                     _ANSELG	set	3772
   527  0000                     _ANSELE	set	3759
   528  0000                     _ANSELB	set	3738
   529  0000                     _ANSELD	set	3751
   530  0000                     _PMD5	set	3665
   531  0000                     _PMD4	set	3664
   532  0000                     _PMD3	set	3663
   533  0000                     _PMD2	set	3662
   534  0000                     _PMD1	set	3661
   535  0000                     _PMD0	set	3660
   536  0000                     _OSCTUNE	set	3656
   537  0000                     _OSCFRQ	set	3657
   538  0000                     _OSCEN	set	3655
   539  0000                     _OSCCON3	set	3653
   540  0000                     _OSCCON1	set	3651
   541  0000                     _PLLR	set	29232
   542  0000                     _T7GCONbits	set	3889
   543  0000                     _T7CONbits	set	3888
   544  0000                     _T7CON	set	3888
   545  0000                     _TMR7L	set	3886
   546  0000                     _TMR7H	set	3887
   547  0000                     _T7CLK	set	3891
   548  0000                     _T7GATE	set	3890
   549  0000                     _T7GCON	set	3889
   550  0000                     _ADCON1bits	set	3929
   551  0000                     _ADCON2bits	set	3930
   552  0000                     _ADPRE	set	3934
   553  0000                     _ADCON3bits	set	3931
   554  0000                     _ADACQ	set	3932
   555  0000                     _ADCLK	set	3927
   556  0000                     _ADACT	set	3926
   557  0000                     _ADREF	set	3928
   558  0000                     _ADCON3	set	3931
   559  0000                     _ADCON2	set	3930
   560  0000                     _ADCON1	set	3929
   561  0000                     _ADCAP	set	3933
   562  0000                     _ADPCH	set	3935
   563  0000                     _PCON0bits	set	4055
   564  0000                     _STATUSbits	set	4056
   565  0000                     _LATGbits	set	3967
   566  0000                     _NVMDAT	set	3958
   567  0000                     _NVMADRL	set	3956
   568  0000                     _NVMADRH	set	3957
   569  0000                     _NVMCON2	set	3960
   570  0000                     _TABLAT	set	4085
   571  0000                     _TBLPTRL	set	4086
   572  0000                     _TBLPTRH	set	4087
   573  0000                     _TBLPTRU	set	4088
   574  0000                     _NVMCON1bits	set	3959
   575  0000                     _T5GCONbits	set	4036
   576  0000                     _T5CONbits	set	4035
   577  0000                     _T5CON	set	4035
   578  0000                     _TMR5L	set	4033
   579  0000                     _TMR5H	set	4034
   580  0000                     _T5CLK	set	4038
   581  0000                     _T5GATE	set	4037
   582  0000                     _T5GCON	set	4036
   583  0000                     _ADERRL	set	3950
   584  0000                     _ADERRH	set	3951
   585  0000                     _ADPREVL	set	3937
   586  0000                     _ADPREVH	set	3938
   587  0000                     _ADFLTRL	set	3954
   588  0000                     _ADFLTRH	set	3955
   589  0000                     _ADSTATbits	set	3941
   590  0000                     _ADACCL	set	3952
   591  0000                     _ADACCH	set	3953
   592  0000                     _ADCNT	set	3943
   593  0000                     _ADRESL	set	3939
   594  0000                     _ADRESH	set	3940
   595  0000                     _ADCON0bits	set	3936
   596  0000                     _ADCON0	set	3936
   597  0000                     _ADSTAT	set	3941
   598  0000                     _ADRPT	set	3942
   599  0000                     _ADSTPTH	set	3945
   600  0000                     _ADSTPTL	set	3944
   601  0000                     _ADUTHH	set	3949
   602  0000                     _ADUTHL	set	3948
   603  0000                     _ADLTHH	set	3947
   604  0000                     _ADLTHL	set	3946
   605  0000                     _LATFbits	set	3966
   606  0000                     _PR6	set	4016
   607  0000                     _TMR6	set	4015
   608  0000                     _T6CONbits	set	4017
   609  0000                     _T6RSTbits	set	4020
   610  0000                     _T6HLTbits	set	4018
   611  0000                     _T6CON	set	4017
   612  0000                     _T6TMR	set	4015
   613  0000                     _T6PR	set	4016
   614  0000                     _T6RST	set	4020
   615  0000                     _T6HLT	set	4018
   616  0000                     _T6CLKCON	set	4019
   617  0000                     _INTCONbits	set	4082
   618  0000                     _TRISD	set	3972
   619  0000                     _TRISC	set	3971
   620  0000                     _TRISH	set	3976
   621  0000                     _TRISB	set	3970
   622  0000                     _TRISG	set	3975
   623  0000                     _TRISA	set	3969
   624  0000                     _TRISF	set	3974
   625  0000                     _TRISE	set	3973
   626  0000                     _LATH	set	3968
   627  0000                     _LATC	set	3963
   628  0000                     _LATG	set	3967
   629  0000                     _LATB	set	3962
   630  0000                     _LATF	set	3966
   631  0000                     _LATA	set	3961
   632  0000                     _LATD	set	3964
   633  0000                     _LATE	set	3965
   634  00ED31                     STR_111:
   635  00ED31  4C                 	db	76	;'L'
   636  00ED32  69                 	db	105	;'i'
   637  00ED33  73                 	db	115	;'s'
   638  00ED34  74                 	db	116	;'t'
   639  00ED35  20                 	db	32
   640  00ED36  6F                 	db	111	;'o'
   641  00ED37  66                 	db	102	;'f'
   642  00ED38  20                 	db	32
   643  00ED39  73                 	db	115	;'s'
   644  00ED3A  75                 	db	117	;'u'
   645  00ED3B  70                 	db	112	;'p'
   646  00ED3C  70                 	db	112	;'p'
   647  00ED3D  6F                 	db	111	;'o'
   648  00ED3E  72                 	db	114	;'r'
   649  00ED3F  74                 	db	116	;'t'
   650  00ED40  65                 	db	101	;'e'
   651  00ED41  64                 	db	100	;'d'
   652  00ED42  20                 	db	32
   653  00ED43  63                 	db	99	;'c'
   654  00ED44  6F                 	db	111	;'o'
   655  00ED45  6D                 	db	109	;'m'
   656  00ED46  6D                 	db	109	;'m'
   657  00ED47  61                 	db	97	;'a'
   658  00ED48  6E                 	db	110	;'n'
   659  00ED49  64                 	db	100	;'d'
   660  00ED4A  73                 	db	115	;'s'
   661  00ED4B  3A                 	db	58	;':'
   662  00ED4C  0A                 	db	10
   663  00ED4D  0D                 	db	13
   664  00ED4E  0A                 	db	10
   665  00ED4F  0D                 	db	13
   666  00ED50  44                 	db	68	;'D'
   667  00ED51  65                 	db	101	;'e'
   668  00ED52  76                 	db	118	;'v'
   669  00ED53  69                 	db	105	;'i'
   670  00ED54  63                 	db	99	;'c'
   671  00ED55  65                 	db	101	;'e'
   672  00ED56  20                 	db	32
   673  00ED57  43                 	db	67	;'C'
   674  00ED58  6F                 	db	111	;'o'
   675  00ED59  6D                 	db	109	;'m'
   676  00ED5A  6D                 	db	109	;'m'
   677  00ED5B  61                 	db	97	;'a'
   678  00ED5C  6E                 	db	110	;'n'
   679  00ED5D  64                 	db	100	;'d'
   680  00ED5E  73                 	db	115	;'s'
   681  00ED5F  3A                 	db	58	;':'
   682  00ED60  0A                 	db	10
   683  00ED61  0D                 	db	13
   684  00ED62  20                 	db	32
   685  00ED63  20                 	db	32
   686  00ED64  20                 	db	32
   687  00ED65  52                 	db	82	;'R'
   688  00ED66  65                 	db	101	;'e'
   689  00ED67  73                 	db	115	;'s'
   690  00ED68  65                 	db	101	;'e'
   691  00ED69  74                 	db	116	;'t'
   692  00ED6A  3A                 	db	58	;':'
   693  00ED6B  20                 	db	32
   694  00ED6C  43                 	db	67	;'C'
   695  00ED6D  6C                 	db	108	;'l'
   696  00ED6E  65                 	db	101	;'e'
   697  00ED6F  61                 	db	97	;'a'
   698  00ED70  72                 	db	114	;'r'
   699  00ED71  73                 	db	115	;'s'
   700  00ED72  20                 	db	32
   701  00ED73  74                 	db	116	;'t'
   702  00ED74  68                 	db	104	;'h'
   703  00ED75  65                 	db	101	;'e'
   704  00ED76  20                 	db	32
   705  00ED77  74                 	db	116	;'t'
   706  00ED78  65                 	db	101	;'e'
   707  00ED79  72                 	db	114	;'r'
   708  00ED7A  6D                 	db	109	;'m'
   709  00ED7B  69                 	db	105	;'i'
   710  00ED7C  6E                 	db	110	;'n'
   711  00ED7D  61                 	db	97	;'a'
   712  00ED7E  6C                 	db	108	;'l'
   713  00ED7F  20                 	db	32
   714  00ED80  61                 	db	97	;'a'
   715  00ED81  6E                 	db	110	;'n'
   716  00ED82  64                 	db	100	;'d'
   717  00ED83  20                 	db	32
   718  00ED84  72                 	db	114	;'r'
   719  00ED85  65                 	db	101	;'e'
   720  00ED86  73                 	db	115	;'s'
   721  00ED87  65                 	db	101	;'e'
   722  00ED88  74                 	db	116	;'t'
   723  00ED89  73                 	db	115	;'s'
   724  00ED8A  20                 	db	32
   725  00ED8B  74                 	db	116	;'t'
   726  00ED8C  68                 	db	104	;'h'
   727  00ED8D  65                 	db	101	;'e'
   728  00ED8E  20                 	db	32
   729  00ED8F  6D                 	db	109	;'m'
   730  00ED90  69                 	db	105	;'i'
   731  00ED91  63                 	db	99	;'c'
   732  00ED92  72                 	db	114	;'r'
   733  00ED93  6F                 	db	111	;'o'
   734  00ED94  0A                 	db	10
   735  00ED95  0D                 	db	13
   736  00ED96  20                 	db	32
   737  00ED97  20                 	db	32
   738  00ED98  20                 	db	32
   739  00ED99  43                 	db	67	;'C'
   740  00ED9A  6C                 	db	108	;'l'
   741  00ED9B  65                 	db	101	;'e'
   742  00ED9C  61                 	db	97	;'a'
   743  00ED9D  72                 	db	114	;'r'
   744  00ED9E  3A                 	db	58	;':'
   745  00ED9F  20                 	db	32
   746  00EDA0  43                 	db	67	;'C'
   747  00EDA1  6C                 	db	108	;'l'
   748  00EDA2  65                 	db	101	;'e'
   749  00EDA3  61                 	db	97	;'a'
   750  00EDA4  72                 	db	114	;'r'
   751  00EDA5  73                 	db	115	;'s'
   752  00EDA6  20                 	db	32
   753  00EDA7  74                 	db	116	;'t'
   754  00EDA8  68                 	db	104	;'h'
   755  00EDA9  65                 	db	101	;'e'
   756  00EDAA  20                 	db	32
   757  00EDAB  74                 	db	116	;'t'
   758  00EDAC  65                 	db	101	;'e'
   759  00EDAD  72                 	db	114	;'r'
   760  00EDAE  6D                 	db	109	;'m'
   761  00EDAF  69                 	db	105	;'i'
   762  00EDB0  6E                 	db	110	;'n'
   763  00EDB1  61                 	db	97	;'a'
   764  00EDB2  6C                 	db	108	;'l'
   765  00EDB3  20                 	db	32
   766  00EDB4  62                 	db	98	;'b'
   767  00EDB5  75                 	db	117	;'u'
   768  00EDB6  74                 	db	116	;'t'
   769  00EDB7  20                 	db	32
   770  00EDB8  64                 	db	100	;'d'
   771  00EDB9  6F                 	db	111	;'o'
   772  00EDBA  65                 	db	101	;'e'
   773  00EDBB  73                 	db	115	;'s'
   774  00EDBC  6E                 	db	110	;'n'
   775  00EDBD  27                 	db	39
   776  00EDBE  74                 	db	116	;'t'
   777  00EDBF  20                 	db	32
   778  00EDC0  72                 	db	114	;'r'
   779  00EDC1  65                 	db	101	;'e'
   780  00EDC2  73                 	db	115	;'s'
   781  00EDC3  65                 	db	101	;'e'
   782  00EDC4  74                 	db	116	;'t'
   783  00EDC5  20                 	db	32
   784  00EDC6  74                 	db	116	;'t'
   785  00EDC7  68                 	db	104	;'h'
   786  00EDC8  65                 	db	101	;'e'
   787  00EDC9  20                 	db	32
   788  00EDCA  6D                 	db	109	;'m'
   789  00EDCB  69                 	db	105	;'i'
   790  00EDCC  63                 	db	99	;'c'
   791  00EDCD  72                 	db	114	;'r'
   792  00EDCE  6F                 	db	111	;'o'
   793  00EDCF  0A                 	db	10
   794  00EDD0  0D                 	db	13
   795  00EDD1  20                 	db	32
   796  00EDD2  20                 	db	32
   797  00EDD3  20                 	db	32
   798  00EDD4  43                 	db	67	;'C'
   799  00EDD5  61                 	db	97	;'a'
   800  00EDD6  75                 	db	117	;'u'
   801  00EDD7  73                 	db	115	;'s'
   802  00EDD8  65                 	db	101	;'e'
   803  00EDD9  20                 	db	32
   804  00EDDA  6F                 	db	111	;'o'
   805  00EDDB  66                 	db	102	;'f'
   806  00EDDC  20                 	db	32
   807  00EDDD  52                 	db	82	;'R'
   808  00EDDE  65                 	db	101	;'e'
   809  00EDDF  73                 	db	115	;'s'
   810  00EDE0  65                 	db	101	;'e'
   811  00EDE1  74                 	db	116	;'t'
   812  00EDE2  3F                 	db	63	;'?'
   813  00EDE3  3A                 	db	58	;':'
   814  00EDE4  20                 	db	32
   815  00EDE5  52                 	db	82	;'R'
   816  00EDE6  65                 	db	101	;'e'
   817  00EDE7  74                 	db	116	;'t'
   818  00EDE8  75                 	db	117	;'u'
   819  00EDE9  72                 	db	114	;'r'
   820  00EDEA  6E                 	db	110	;'n'
   821  00EDEB  73                 	db	115	;'s'
   822  00EDEC  20                 	db	32
   823  00EDED  74                 	db	116	;'t'
   824  00EDEE  68                 	db	104	;'h'
   825  00EDEF  65                 	db	101	;'e'
   826  00EDF0  20                 	db	32
   827  00EDF1  63                 	db	99	;'c'
   828  00EDF2  61                 	db	97	;'a'
   829  00EDF3  75                 	db	117	;'u'
   830  00EDF4  73                 	db	115	;'s'
   831  00EDF5  65                 	db	101	;'e'
   832  00EDF6  20                 	db	32
   833  00EDF7  6F                 	db	111	;'o'
   834  00EDF8  66                 	db	102	;'f'
   835  00EDF9  20                 	db	32
   836  00EDFA  74                 	db	116	;'t'
   837  00EDFB  68                 	db	104	;'h'
   838  00EDFC  65                 	db	101	;'e'
   839  00EDFD  20                 	db	32
   840  00EDFE  6D                 	db	109	;'m'
   841  00EDFF  6F                 	db	111	;'o'
   842  00EE00  73                 	db	115	;'s'
   843  00EE01  74                 	db	116	;'t'
   844  00EE02  20                 	db	32
   845  00EE03  72                 	db	114	;'r'
   846  00EE04  65                 	db	101	;'e'
   847  00EE05  63                 	db	99	;'c'
   848  00EE06  65                 	db	101	;'e'
   849  00EE07  6E                 	db	110	;'n'
   850  00EE08  74                 	db	116	;'t'
   851  00EE09  20                 	db	32
   852  00EE0A  64                 	db	100	;'d'
   853  00EE0B  65                 	db	101	;'e'
   854  00EE0C  76                 	db	118	;'v'
   855  00EE0D  69                 	db	105	;'i'
   856  00EE0E  63                 	db	99	;'c'
   857  00EE0F  65                 	db	101	;'e'
   858  00EE10  20                 	db	32
   859  00EE11  72                 	db	114	;'r'
   860  00EE12  65                 	db	101	;'e'
   861  00EE13  73                 	db	115	;'s'
   862  00EE14  65                 	db	101	;'e'
   863  00EE15  74                 	db	116	;'t'
   864  00EE16  0A                 	db	10
   865  00EE17  0D                 	db	13
   866  00EE18  20                 	db	32
   867  00EE19  20                 	db	32
   868  00EE1A  20                 	db	32
   869  00EE1B  2A                 	db	42
   870  00EE1C  49                 	db	73	;'I'
   871  00EE1D  44                 	db	68	;'D'
   872  00EE1E  4E                 	db	78	;'N'
   873  00EE1F  3F                 	db	63	;'?'
   874  00EE20  3A                 	db	58	;':'
   875  00EE21  20                 	db	32
   876  00EE22  52                 	db	82	;'R'
   877  00EE23  65                 	db	101	;'e'
   878  00EE24  74                 	db	116	;'t'
   879  00EE25  75                 	db	117	;'u'
   880  00EE26  72                 	db	114	;'r'
   881  00EE27  6E                 	db	110	;'n'
   882  00EE28  73                 	db	115	;'s'
   883  00EE29  20                 	db	32
   884  00EE2A  64                 	db	100	;'d'
   885  00EE2B  65                 	db	101	;'e'
   886  00EE2C  76                 	db	118	;'v'
   887  00EE2D  69                 	db	105	;'i'
   888  00EE2E  63                 	db	99	;'c'
   889  00EE2F  65                 	db	101	;'e'
   890  00EE30  20                 	db	32
   891  00EE31  69                 	db	105	;'i'
   892  00EE32  64                 	db	100	;'d'
   893  00EE33  65                 	db	101	;'e'
   894  00EE34  6E                 	db	110	;'n'
   895  00EE35  74                 	db	116	;'t'
   896  00EE36  69                 	db	105	;'i'
   897  00EE37  66                 	db	102	;'f'
   898  00EE38  69                 	db	105	;'i'
   899  00EE39  63                 	db	99	;'c'
   900  00EE3A  61                 	db	97	;'a'
   901  00EE3B  74                 	db	116	;'t'
   902  00EE3C  69                 	db	105	;'i'
   903  00EE3D  6F                 	db	111	;'o'
   904  00EE3E  6E                 	db	110	;'n'
   905  00EE3F  20                 	db	32
   906  00EE40  73                 	db	115	;'s'
   907  00EE41  74                 	db	116	;'t'
   908  00EE42  72                 	db	114	;'r'
   909  00EE43  69                 	db	105	;'i'
   910  00EE44  6E                 	db	110	;'n'
   911  00EE45  67                 	db	103	;'g'
   912  00EE46  0A                 	db	10
   913  00EE47  0D                 	db	13
   914  00EE48  20                 	db	32
   915  00EE49  20                 	db	32
   916  00EE4A  20                 	db	32
   917  00EE4B  44                 	db	68	;'D'
   918  00EE4C  65                 	db	101	;'e'
   919  00EE4D  76                 	db	118	;'v'
   920  00EE4E  69                 	db	105	;'i'
   921  00EE4F  63                 	db	99	;'c'
   922  00EE50  65                 	db	101	;'e'
   923  00EE51  20                 	db	32
   924  00EE52  4F                 	db	79	;'O'
   925  00EE53  6E                 	db	110	;'n'
   926  00EE54  20                 	db	32
   927  00EE55  54                 	db	84	;'T'
   928  00EE56  69                 	db	105	;'i'
   929  00EE57  6D                 	db	109	;'m'
   930  00EE58  65                 	db	101	;'e'
   931  00EE59  3F                 	db	63	;'?'
   932  00EE5A  3A                 	db	58	;':'
   933  00EE5B  20                 	db	32
   934  00EE5C  52                 	db	82	;'R'
   935  00EE5D  65                 	db	101	;'e'
   936  00EE5E  74                 	db	116	;'t'
   937  00EE5F  75                 	db	117	;'u'
   938  00EE60  72                 	db	114	;'r'
   939  00EE61  6E                 	db	110	;'n'
   940  00EE62  73                 	db	115	;'s'
   941  00EE63  20                 	db	32
   942  00EE64  64                 	db	100	;'d'
   943  00EE65  65                 	db	101	;'e'
   944  00EE66  76                 	db	118	;'v'
   945  00EE67  69                 	db	105	;'i'
   946  00EE68  63                 	db	99	;'c'
   947  00EE69  65                 	db	101	;'e'
   948  00EE6A  20                 	db	32
   949  00EE6B  6F                 	db	111	;'o'
   950  00EE6C  6E                 	db	110	;'n'
   951  00EE6D  20                 	db	32
   952  00EE6E  74                 	db	116	;'t'
   953  00EE6F  69                 	db	105	;'i'
   954  00EE70  6D                 	db	109	;'m'
   955  00EE71  65                 	db	101	;'e'
   956  00EE72  20                 	db	32
   957  00EE73  73                 	db	115	;'s'
   958  00EE74  69                 	db	105	;'i'
   959  00EE75  6E                 	db	110	;'n'
   960  00EE76  63                 	db	99	;'c'
   961  00EE77  65                 	db	101	;'e'
   962  00EE78  20                 	db	32
   963  00EE79  6C                 	db	108	;'l'
   964  00EE7A  61                 	db	97	;'a'
   965  00EE7B  73                 	db	115	;'s'
   966  00EE7C  74                 	db	116	;'t'
   967  00EE7D  20                 	db	32
   968  00EE7E  64                 	db	100	;'d'
   969  00EE7F  65                 	db	101	;'e'
   970  00EE80  76                 	db	118	;'v'
   971  00EE81  69                 	db	105	;'i'
   972  00EE82  63                 	db	99	;'c'
   973  00EE83  65                 	db	101	;'e'
   974  00EE84  20                 	db	32
   975  00EE85  72                 	db	114	;'r'
   976  00EE86  65                 	db	101	;'e'
   977  00EE87  73                 	db	115	;'s'
   978  00EE88  65                 	db	101	;'e'
   979  00EE89  74                 	db	116	;'t'
   980  00EE8A  0A                 	db	10
   981  00EE8B  0D                 	db	13
   982  00EE8C  20                 	db	32
   983  00EE8D  20                 	db	32
   984  00EE8E  20                 	db	32
   985  00EE8F  44                 	db	68	;'D'
   986  00EE90  65                 	db	101	;'e'
   987  00EE91  76                 	db	118	;'v'
   988  00EE92  69                 	db	105	;'i'
   989  00EE93  63                 	db	99	;'c'
   990  00EE94  65                 	db	101	;'e'
   991  00EE95  20                 	db	32
   992  00EE96  49                 	db	73	;'I'
   993  00EE97  44                 	db	68	;'D'
   994  00EE98  3F                 	db	63	;'?'
   995  00EE99  3A                 	db	58	;':'
   996  00EE9A  20                 	db	32
   997  00EE9B  52                 	db	82	;'R'
   998  00EE9C  65                 	db	101	;'e'
   999  00EE9D  74                 	db	116	;'t'
  1000  00EE9E  75                 	db	117	;'u'
  1001  00EE9F  72                 	db	114	;'r'
  1002  00EEA0  6E                 	db	110	;'n'
  1003  00EEA1  73                 	db	115	;'s'
  1004  00EEA2  20                 	db	32
  1005  00EEA3  64                 	db	100	;'d'
  1006  00EEA4  65                 	db	101	;'e'
  1007  00EEA5  76                 	db	118	;'v'
  1008  00EEA6  69                 	db	105	;'i'
  1009  00EEA7  63                 	db	99	;'c'
  1010  00EEA8  65                 	db	101	;'e'
  1011  00EEA9  20                 	db	32
  1012  00EEAA  49                 	db	73	;'I'
  1013  00EEAB  44                 	db	68	;'D'
  1014  00EEAC  20                 	db	32
  1015  00EEAD  61                 	db	97	;'a'
  1016  00EEAE  73                 	db	115	;'s'
  1017  00EEAF  20                 	db	32
  1018  00EEB0  70                 	db	112	;'p'
  1019  00EEB1  72                 	db	114	;'r'
  1020  00EEB2  65                 	db	101	;'e'
  1021  00EEB3  2D                 	db	45
  1022  00EEB4  70                 	db	112	;'p'
  1023  00EEB5  72                 	db	114	;'r'
  1024  00EEB6  6F                 	db	111	;'o'
  1025  00EEB7  67                 	db	103	;'g'
  1026  00EEB8  72                 	db	114	;'r'
  1027  00EEB9  61                 	db	97	;'a'
  1028  00EEBA  6D                 	db	109	;'m'
  1029  00EEBB  6D                 	db	109	;'m'
  1030  00EEBC  65                 	db	101	;'e'
  1031  00EEBD  64                 	db	100	;'d'
  1032  00EEBE  20                 	db	32
  1033  00EEBF  69                 	db	105	;'i'
  1034  00EEC0  6E                 	db	110	;'n'
  1035  00EEC1  20                 	db	32
  1036  00EEC2  66                 	db	102	;'f'
  1037  00EEC3  6C                 	db	108	;'l'
  1038  00EEC4  61                 	db	97	;'a'
  1039  00EEC5  73                 	db	115	;'s'
  1040  00EEC6  68                 	db	104	;'h'
  1041  00EEC7  20                 	db	32
  1042  00EEC8  6D                 	db	109	;'m'
  1043  00EEC9  65                 	db	101	;'e'
  1044  00EECA  6D                 	db	109	;'m'
  1045  00EECB  6F                 	db	111	;'o'
  1046  00EECC  72                 	db	114	;'r'
  1047  00EECD  79                 	db	121	;'y'
  1048  00EECE  0A                 	db	10
  1049  00EECF  0D                 	db	13
  1050  00EED0  20                 	db	32
  1051  00EED1  20                 	db	32
  1052  00EED2  20                 	db	32
  1053  00EED3  52                 	db	82	;'R'
  1054  00EED4  65                 	db	101	;'e'
  1055  00EED5  76                 	db	118	;'v'
  1056  00EED6  69                 	db	105	;'i'
  1057  00EED7  73                 	db	115	;'s'
  1058  00EED8  69                 	db	105	;'i'
  1059  00EED9  6F                 	db	111	;'o'
  1060  00EEDA  6E                 	db	110	;'n'
  1061  00EEDB  20                 	db	32
  1062  00EEDC  49                 	db	73	;'I'
  1063  00EEDD  44                 	db	68	;'D'
  1064  00EEDE  3F                 	db	63	;'?'
  1065  00EEDF  3A                 	db	58	;':'
  1066  00EEE0  20                 	db	32
  1067  00EEE1  52                 	db	82	;'R'
  1068  00EEE2  65                 	db	101	;'e'
  1069  00EEE3  74                 	db	116	;'t'
  1070  00EEE4  75                 	db	117	;'u'
  1071  00EEE5  72                 	db	114	;'r'
  1072  00EEE6  6E                 	db	110	;'n'
  1073  00EEE7  73                 	db	115	;'s'
  1074  00EEE8  20                 	db	32
  1075  00EEE9  64                 	db	100	;'d'
  1076  00EEEA  65                 	db	101	;'e'
  1077  00EEEB  76                 	db	118	;'v'
  1078  00EEEC  69                 	db	105	;'i'
  1079  00EEED  63                 	db	99	;'c'
  1080  00EEEE  65                 	db	101	;'e'
  1081  00EEEF  20                 	db	32
  1082  00EEF0  73                 	db	115	;'s'
  1083  00EEF1  69                 	db	105	;'i'
  1084  00EEF2  6C                 	db	108	;'l'
  1085  00EEF3  69                 	db	105	;'i'
  1086  00EEF4  63                 	db	99	;'c'
  1087  00EEF5  6F                 	db	111	;'o'
  1088  00EEF6  6E                 	db	110	;'n'
  1089  00EEF7  20                 	db	32
  1090  00EEF8  72                 	db	114	;'r'
  1091  00EEF9  65                 	db	101	;'e'
  1092  00EEFA  76                 	db	118	;'v'
  1093  00EEFB  69                 	db	105	;'i'
  1094  00EEFC  73                 	db	115	;'s'
  1095  00EEFD  69                 	db	105	;'i'
  1096  00EEFE  6F                 	db	111	;'o'
  1097  00EEFF  6E                 	db	110	;'n'
  1098  00EF00  20                 	db	32
  1099  00EF01  49                 	db	73	;'I'
  1100  00EF02  44                 	db	68	;'D'
  1101  00EF03  20                 	db	32
  1102  00EF04  61                 	db	97	;'a'
  1103  00EF05  73                 	db	115	;'s'
  1104  00EF06  20                 	db	32
  1105  00EF07  70                 	db	112	;'p'
  1106  00EF08  72                 	db	114	;'r'
  1107  00EF09  65                 	db	101	;'e'
  1108  00EF0A  2D                 	db	45
  1109  00EF0B  70                 	db	112	;'p'
  1110  00EF0C  72                 	db	114	;'r'
  1111  00EF0D  6F                 	db	111	;'o'
  1112  00EF0E  67                 	db	103	;'g'
  1113  00EF0F  72                 	db	114	;'r'
  1114  00EF10  61                 	db	97	;'a'
  1115  00EF11  6D                 	db	109	;'m'
  1116  00EF12  6D                 	db	109	;'m'
  1117  00EF13  65                 	db	101	;'e'
  1118  00EF14  64                 	db	100	;'d'
  1119  00EF15  20                 	db	32
  1120  00EF16  69                 	db	105	;'i'
  1121  00EF17  6E                 	db	110	;'n'
  1122  00EF18  20                 	db	32
  1123  00EF19  66                 	db	102	;'f'
  1124  00EF1A  6C                 	db	108	;'l'
  1125  00EF1B  61                 	db	97	;'a'
  1126  00EF1C  73                 	db	115	;'s'
  1127  00EF1D  68                 	db	104	;'h'
  1128  00EF1E  20                 	db	32
  1129  00EF1F  6D                 	db	109	;'m'
  1130  00EF20  65                 	db	101	;'e'
  1131  00EF21  6D                 	db	109	;'m'
  1132  00EF22  6F                 	db	111	;'o'
  1133  00EF23  72                 	db	114	;'r'
  1134  00EF24  79                 	db	121	;'y'
  1135  00EF25  0A                 	db	10
  1136  00EF26  0D                 	db	13
  1137  00EF27  20                 	db	32
  1138  00EF28  20                 	db	32
  1139  00EF29  20                 	db	32
  1140  00EF2A  55                 	db	85	;'U'
  1141  00EF2B  73                 	db	115	;'s'
  1142  00EF2C  65                 	db	101	;'e'
  1143  00EF2D  72                 	db	114	;'r'
  1144  00EF2E  20                 	db	32
  1145  00EF2F  49                 	db	73	;'I'
  1146  00EF30  44                 	db	68	;'D'
  1147  00EF31  73                 	db	115	;'s'
  1148  00EF32  3F                 	db	63	;'?'
  1149  00EF33  3A                 	db	58	;':'
  1150  00EF34  20                 	db	32
  1151  00EF35  52                 	db	82	;'R'
  1152  00EF36  65                 	db	101	;'e'
  1153  00EF37  74                 	db	116	;'t'
  1154  00EF38  75                 	db	117	;'u'
  1155  00EF39  72                 	db	114	;'r'
  1156  00EF3A  6E                 	db	110	;'n'
  1157  00EF3B  73                 	db	115	;'s'
  1158  00EF3C  20                 	db	32
  1159  00EF3D  61                 	db	97	;'a'
  1160  00EF3E  20                 	db	32
  1161  00EF3F  6C                 	db	108	;'l'
  1162  00EF40  69                 	db	105	;'i'
  1163  00EF41  73                 	db	115	;'s'
  1164  00EF42  74                 	db	116	;'t'
  1165  00EF43  20                 	db	32
  1166  00EF44  6F                 	db	111	;'o'
  1167  00EF45  66                 	db	102	;'f'
  1168  00EF46  20                 	db	32
  1169  00EF47  75                 	db	117	;'u'
  1170  00EF48  73                 	db	115	;'s'
  1171  00EF49  65                 	db	101	;'e'
  1172  00EF4A  72                 	db	114	;'r'
  1173  00EF4B  20                 	db	32
  1174  00EF4C  49                 	db	73	;'I'
  1175  00EF4D  44                 	db	68	;'D'
  1176  00EF4E  73                 	db	115	;'s'
  1177  00EF4F  20                 	db	32
  1178  00EF50  28                 	db	40
  1179  00EF51  64                 	db	100	;'d'
  1180  00EF52  69                 	db	105	;'i'
  1181  00EF53  73                 	db	115	;'s'
  1182  00EF54  70                 	db	112	;'p'
  1183  00EF55  6C                 	db	108	;'l'
  1184  00EF56  61                 	db	97	;'a'
  1185  00EF57  79                 	db	121	;'y'
  1186  00EF58  65                 	db	101	;'e'
  1187  00EF59  64                 	db	100	;'d'
  1188  00EF5A  20                 	db	32
  1189  00EF5B  69                 	db	105	;'i'
  1190  00EF5C  6E                 	db	110	;'n'
  1191  00EF5D  20                 	db	32
  1192  00EF5E  68                 	db	104	;'h'
  1193  00EF5F  65                 	db	101	;'e'
  1194  00EF60  78                 	db	120	;'x'
  1195  00EF61  29                 	db	41
  1196  00EF62  20                 	db	32
  1197  00EF63  61                 	db	97	;'a'
  1198  00EF64  73                 	db	115	;'s'
  1199  00EF65  20                 	db	32
  1200  00EF66  73                 	db	115	;'s'
  1201  00EF67  74                 	db	116	;'t'
  1202  00EF68  6F                 	db	111	;'o'
  1203  00EF69  72                 	db	114	;'r'
  1204  00EF6A  65                 	db	101	;'e'
  1205  00EF6B  64                 	db	100	;'d'
  1206  00EF6C  20                 	db	32
  1207  00EF6D  69                 	db	105	;'i'
  1208  00EF6E  6E                 	db	110	;'n'
  1209  00EF6F  20                 	db	32
  1210  00EF70  66                 	db	102	;'f'
  1211  00EF71  6C                 	db	108	;'l'
  1212  00EF72  61                 	db	97	;'a'
  1213  00EF73  73                 	db	115	;'s'
  1214  00EF74  68                 	db	104	;'h'
  1215  00EF75  20                 	db	32
  1216  00EF76  6D                 	db	109	;'m'
  1217  00EF77  65                 	db	101	;'e'
  1218  00EF78  6D                 	db	109	;'m'
  1219  00EF79  6F                 	db	111	;'o'
  1220  00EF7A  72                 	db	114	;'r'
  1221  00EF7B  79                 	db	121	;'y'
  1222  00EF7C  0A                 	db	10
  1223  00EF7D  0D                 	db	13
  1224  00EF7E  20                 	db	32
  1225  00EF7F  20                 	db	32
  1226  00EF80  20                 	db	32
  1227  00EF81  41                 	db	65	;'A'
  1228  00EF82  44                 	db	68	;'D'
  1229  00EF83  43                 	db	67	;'C'
  1230  00EF84  20                 	db	32
  1231  00EF85  45                 	db	69	;'E'
  1232  00EF86  72                 	db	114	;'r'
  1233  00EF87  72                 	db	114	;'r'
  1234  00EF88  6F                 	db	111	;'o'
  1235  00EF89  72                 	db	114	;'r'
  1236  00EF8A  3F                 	db	63	;'?'
  1237  00EF8B  3A                 	db	58	;':'
  1238  00EF8C  20                 	db	32
  1239  00EF8D  52                 	db	82	;'R'
  1240  00EF8E  65                 	db	101	;'e'
  1241  00EF8F  74                 	db	116	;'t'
  1242  00EF90  75                 	db	117	;'u'
  1243  00EF91  72                 	db	114	;'r'
  1244  00EF92  6E                 	db	110	;'n'
  1245  00EF93  73                 	db	115	;'s'
  1246  00EF94  20                 	db	32
  1247  00EF95  74                 	db	116	;'t'
  1248  00EF96  68                 	db	104	;'h'
  1249  00EF97  65                 	db	101	;'e'
  1250  00EF98  20                 	db	32
  1251  00EF99  63                 	db	99	;'c'
  1252  00EF9A  61                 	db	97	;'a'
  1253  00EF9B  75                 	db	117	;'u'
  1254  00EF9C  73                 	db	115	;'s'
  1255  00EF9D  65                 	db	101	;'e'
  1256  00EF9E  20                 	db	32
  1257  00EF9F  6F                 	db	111	;'o'
  1258  00EFA0  66                 	db	102	;'f'
  1259  00EFA1  20                 	db	32
  1260  00EFA2  61                 	db	97	;'a'
  1261  00EFA3  6E                 	db	110	;'n'
  1262  00EFA4  20                 	db	32
  1263  00EFA5  41                 	db	65	;'A'
  1264  00EFA6  44                 	db	68	;'D'
  1265  00EFA7  43                 	db	67	;'C'
  1266  00EFA8  20                 	db	32
  1267  00EFA9  65                 	db	101	;'e'
  1268  00EFAA  72                 	db	114	;'r'
  1269  00EFAB  72                 	db	114	;'r'
  1270  00EFAC  6F                 	db	111	;'o'
  1271  00EFAD  72                 	db	114	;'r'
  1272  00EFAE  20                 	db	32
  1273  00EFAF  69                 	db	105	;'i'
  1274  00EFB0  66                 	db	102	;'f'
  1275  00EFB1  20                 	db	32
  1276  00EFB2  61                 	db	97	;'a'
  1277  00EFB3  6E                 	db	110	;'n'
  1278  00EFB4  20                 	db	32
  1279  00EFB5  65                 	db	101	;'e'
  1280  00EFB6  72                 	db	114	;'r'
  1281  00EFB7  72                 	db	114	;'r'
  1282  00EFB8  6F                 	db	111	;'o'
  1283  00EFB9  72                 	db	114	;'r'
  1284  00EFBA  20                 	db	32
  1285  00EFBB  6F                 	db	111	;'o'
  1286  00EFBC  63                 	db	99	;'c'
  1287  00EFBD  63                 	db	99	;'c'
  1288  00EFBE  75                 	db	117	;'u'
  1289  00EFBF  72                 	db	114	;'r'
  1290  00EFC0  72                 	db	114	;'r'
  1291  00EFC1  65                 	db	101	;'e'
  1292  00EFC2  64                 	db	100	;'d'
  1293  00EFC3  0A                 	db	10
  1294  00EFC4  0D                 	db	13
  1295  00EFC5  20                 	db	32
  1296  00EFC6  20                 	db	32
  1297  00EFC7  20                 	db	32
  1298  00EFC8  43                 	db	67	;'C'
  1299  00EFC9  6C                 	db	108	;'l'
  1300  00EFCA  65                 	db	101	;'e'
  1301  00EFCB  61                 	db	97	;'a'
  1302  00EFCC  72                 	db	114	;'r'
  1303  00EFCD  20                 	db	32
  1304  00EFCE  41                 	db	65	;'A'
  1305  00EFCF  44                 	db	68	;'D'
  1306  00EFD0  43                 	db	67	;'C'
  1307  00EFD1  20                 	db	32
  1308  00EFD2  45                 	db	69	;'E'
  1309  00EFD3  72                 	db	114	;'r'
  1310  00EFD4  72                 	db	114	;'r'
  1311  00EFD5  6F                 	db	111	;'o'
  1312  00EFD6  72                 	db	114	;'r'
  1313  00EFD7  3A                 	db	58	;':'
  1314  00EFD8  20                 	db	32
  1315  00EFD9  43                 	db	67	;'C'
  1316  00EFDA  6C                 	db	108	;'l'
  1317  00EFDB  65                 	db	101	;'e'
  1318  00EFDC  61                 	db	97	;'a'
  1319  00EFDD  72                 	db	114	;'r'
  1320  00EFDE  73                 	db	115	;'s'
  1321  00EFDF  20                 	db	32
  1322  00EFE0  74                 	db	116	;'t'
  1323  00EFE1  68                 	db	104	;'h'
  1324  00EFE2  65                 	db	101	;'e'
  1325  00EFE3  20                 	db	32
  1326  00EFE4  41                 	db	65	;'A'
  1327  00EFE5  44                 	db	68	;'D'
  1328  00EFE6  43                 	db	67	;'C'
  1329  00EFE7  20                 	db	32
  1330  00EFE8  65                 	db	101	;'e'
  1331  00EFE9  72                 	db	114	;'r'
  1332  00EFEA  72                 	db	114	;'r'
  1333  00EFEB  6F                 	db	111	;'o'
  1334  00EFEC  72                 	db	114	;'r'
  1335  00EFED  20                 	db	32
  1336  00EFEE  61                 	db	97	;'a'
  1337  00EFEF  6E                 	db	110	;'n'
  1338  00EFF0  64                 	db	100	;'d'
  1339  00EFF1  20                 	db	32
  1340  00EFF2  72                 	db	114	;'r'
  1341  00EFF3  65                 	db	101	;'e'
  1342  00EFF4  73                 	db	115	;'s'
  1343  00EFF5  75                 	db	117	;'u'
  1344  00EFF6  6D                 	db	109	;'m'
  1345  00EFF7  65                 	db	101	;'e'
  1346  00EFF8  73                 	db	115	;'s'
  1347  00EFF9  20                 	db	32
  1348  00EFFA  41                 	db	65	;'A'
  1349  00EFFB  44                 	db	68	;'D'
  1350  00EFFC  43                 	db	67	;'C'
  1351  00EFFD  20                 	db	32
  1352  00EFFE  63                 	db	99	;'c'
  1353  00EFFF  6F                 	db	111	;'o'
  1354  00F000  6E                 	db	110	;'n'
  1355  00F001  76                 	db	118	;'v'
  1356  00F002  65                 	db	101	;'e'
  1357  00F003  72                 	db	114	;'r'
  1358  00F004  73                 	db	115	;'s'
  1359  00F005  69                 	db	105	;'i'
  1360  00F006  6F                 	db	111	;'o'
  1361  00F007  6E                 	db	110	;'n'
  1362  00F008  73                 	db	115	;'s'
  1363  00F009  0A                 	db	10
  1364  00F00A  0D                 	db	13
  1365  00F00B  20                 	db	32
  1366  00F00C  20                 	db	32
  1367  00F00D  20                 	db	32
  1368  00F00E  48                 	db	72	;'H'
  1369  00F00F  65                 	db	101	;'e'
  1370  00F010  6C                 	db	108	;'l'
  1371  00F011  70                 	db	112	;'p'
  1372  00F012  3A                 	db	58	;':'
  1373  00F013  20                 	db	32
  1374  00F014  54                 	db	84	;'T'
  1375  00F015  68                 	db	104	;'h'
  1376  00F016  69                 	db	105	;'i'
  1377  00F017  73                 	db	115	;'s'
  1378  00F018  20                 	db	32
  1379  00F019  6D                 	db	109	;'m'
  1380  00F01A  65                 	db	101	;'e'
  1381  00F01B  73                 	db	115	;'s'
  1382  00F01C  73                 	db	115	;'s'
  1383  00F01D  61                 	db	97	;'a'
  1384  00F01E  67                 	db	103	;'g'
  1385  00F01F  65                 	db	101	;'e'
  1386  00F020  2C                 	db	44
  1387  00F021  20                 	db	32
  1388  00F022  6C                 	db	108	;'l'
  1389  00F023  69                 	db	105	;'i'
  1390  00F024  73                 	db	115	;'s'
  1391  00F025  74                 	db	116	;'t'
  1392  00F026  73                 	db	115	;'s'
  1393  00F027  20                 	db	32
  1394  00F028  73                 	db	115	;'s'
  1395  00F029  75                 	db	117	;'u'
  1396  00F02A  70                 	db	112	;'p'
  1397  00F02B  70                 	db	112	;'p'
  1398  00F02C  6F                 	db	111	;'o'
  1399  00F02D  72                 	db	114	;'r'
  1400  00F02E  74                 	db	116	;'t'
  1401  00F02F  65                 	db	101	;'e'
  1402  00F030  64                 	db	100	;'d'
  1403  00F031  20                 	db	32
  1404  00F032  63                 	db	99	;'c'
  1405  00F033  6F                 	db	111	;'o'
  1406  00F034  6D                 	db	109	;'m'
  1407  00F035  6D                 	db	109	;'m'
  1408  00F036  61                 	db	97	;'a'
  1409  00F037  6E                 	db	110	;'n'
  1410  00F038  64                 	db	100	;'d'
  1411  00F039  73                 	db	115	;'s'
  1412  00F03A  0A                 	db	10
  1413  00F03B  0D                 	db	13
  1414  00F03C  0A                 	db	10
  1415  00F03D  0D                 	db	13
  1416  00F03E  44                 	db	68	;'D'
  1417  00F03F  65                 	db	101	;'e'
  1418  00F040  76                 	db	118	;'v'
  1419  00F041  69                 	db	105	;'i'
  1420  00F042  63                 	db	99	;'c'
  1421  00F043  65                 	db	101	;'e'
  1422  00F044  20                 	db	32
  1423  00F045  4D                 	db	77	;'M'
  1424  00F046  65                 	db	101	;'e'
  1425  00F047  61                 	db	97	;'a'
  1426  00F048  73                 	db	115	;'s'
  1427  00F049  75                 	db	117	;'u'
  1428  00F04A  72                 	db	114	;'r'
  1429  00F04B  65                 	db	101	;'e'
  1430  00F04C  6D                 	db	109	;'m'
  1431  00F04D  65                 	db	101	;'e'
  1432  00F04E  6E                 	db	110	;'n'
  1433  00F04F  74                 	db	116	;'t'
  1434  00F050  20                 	db	32
  1435  00F051  43                 	db	67	;'C'
  1436  00F052  6F                 	db	111	;'o'
  1437  00F053  6D                 	db	109	;'m'
  1438  00F054  6D                 	db	109	;'m'
  1439  00F055  61                 	db	97	;'a'
  1440  00F056  6E                 	db	110	;'n'
  1441  00F057  64                 	db	100	;'d'
  1442  00F058  73                 	db	115	;'s'
  1443  00F059  3A                 	db	58	;':'
  1444  00F05A  0A                 	db	10
  1445  00F05B  0D                 	db	13
  1446  00F05C  20                 	db	32
  1447  00F05D  20                 	db	32
  1448  00F05E  20                 	db	32
  1449  00F05F  4D                 	db	77	;'M'
  1450  00F060  65                 	db	101	;'e'
  1451  00F061  61                 	db	97	;'a'
  1452  00F062  73                 	db	115	;'s'
  1453  00F063  75                 	db	117	;'u'
  1454  00F064  72                 	db	114	;'r'
  1455  00F065  65                 	db	101	;'e'
  1456  00F066  20                 	db	32
  1457  00F067  50                 	db	80	;'P'
  1458  00F068  4F                 	db	79	;'O'
  1459  00F069  53                 	db	83	;'S'
  1460  00F06A  33                 	db	51	;'3'
  1461  00F06B  50                 	db	80	;'P'
  1462  00F06C  33                 	db	51	;'3'
  1463  00F06D  3F                 	db	63	;'?'
  1464  00F06E  3A                 	db	58	;':'
  1465  00F06F  20                 	db	32
  1466  00F070  52                 	db	82	;'R'
  1467  00F071  65                 	db	101	;'e'
  1468  00F072  74                 	db	116	;'t'
  1469  00F073  75                 	db	117	;'u'
  1470  00F074  72                 	db	114	;'r'
  1471  00F075  6E                 	db	110	;'n'
  1472  00F076  73                 	db	115	;'s'
  1473  00F077  20                 	db	32
  1474  00F078  2B                 	db	43
  1475  00F079  33                 	db	51	;'3'
  1476  00F07A  2E                 	db	46
  1477  00F07B  33                 	db	51	;'3'
  1478  00F07C  56                 	db	86	;'V'
  1479  00F07D  20                 	db	32
  1480  00F07E  41                 	db	65	;'A'
  1481  00F07F  44                 	db	68	;'D'
  1482  00F080  43                 	db	67	;'C'
  1483  00F081  20                 	db	32
  1484  00F082  43                 	db	67	;'C'
  1485  00F083  6F                 	db	111	;'o'
  1486  00F084  6E                 	db	110	;'n'
  1487  00F085  76                 	db	118	;'v'
  1488  00F086  65                 	db	101	;'e'
  1489  00F087  72                 	db	114	;'r'
  1490  00F088  73                 	db	115	;'s'
  1491  00F089  69                 	db	105	;'i'
  1492  00F08A  6F                 	db	111	;'o'
  1493  00F08B  6E                 	db	110	;'n'
  1494  00F08C  20                 	db	32
  1495  00F08D  69                 	db	105	;'i'
  1496  00F08E  6E                 	db	110	;'n'
  1497  00F08F  20                 	db	32
  1498  00F090  76                 	db	118	;'v'
  1499  00F091  6F                 	db	111	;'o'
  1500  00F092  6C                 	db	108	;'l'
  1501  00F093  74                 	db	116	;'t'
  1502  00F094  73                 	db	115	;'s'
  1503  00F095  0A                 	db	10
  1504  00F096  0D                 	db	13
  1505  00F097  20                 	db	32
  1506  00F098  20                 	db	32
  1507  00F099  20                 	db	32
  1508  00F09A  4D                 	db	77	;'M'
  1509  00F09B  65                 	db	101	;'e'
  1510  00F09C  61                 	db	97	;'a'
  1511  00F09D  73                 	db	115	;'s'
  1512  00F09E  75                 	db	117	;'u'
  1513  00F09F  72                 	db	114	;'r'
  1514  00F0A0  65                 	db	101	;'e'
  1515  00F0A1  20                 	db	32
  1516  00F0A2  50                 	db	80	;'P'
  1517  00F0A3  4F                 	db	79	;'O'
  1518  00F0A4  53                 	db	83	;'S'
  1519  00F0A5  31                 	db	49	;'1'
  1520  00F0A6  32                 	db	50	;'2'
  1521  00F0A7  3F                 	db	63	;'?'
  1522  00F0A8  3A                 	db	58	;':'
  1523  00F0A9  20                 	db	32
  1524  00F0AA  52                 	db	82	;'R'
  1525  00F0AB  65                 	db	101	;'e'
  1526  00F0AC  74                 	db	116	;'t'
  1527  00F0AD  75                 	db	117	;'u'
  1528  00F0AE  72                 	db	114	;'r'
  1529  00F0AF  6E                 	db	110	;'n'
  1530  00F0B0  73                 	db	115	;'s'
  1531  00F0B1  20                 	db	32
  1532  00F0B2  2B                 	db	43
  1533  00F0B3  31                 	db	49	;'1'
  1534  00F0B4  32                 	db	50	;'2'
  1535  00F0B5  56                 	db	86	;'V'
  1536  00F0B6  20                 	db	32
  1537  00F0B7  41                 	db	65	;'A'
  1538  00F0B8  44                 	db	68	;'D'
  1539  00F0B9  43                 	db	67	;'C'
  1540  00F0BA  20                 	db	32
  1541  00F0BB  43                 	db	67	;'C'
  1542  00F0BC  6F                 	db	111	;'o'
  1543  00F0BD  6E                 	db	110	;'n'
  1544  00F0BE  76                 	db	118	;'v'
  1545  00F0BF  65                 	db	101	;'e'
  1546  00F0C0  72                 	db	114	;'r'
  1547  00F0C1  73                 	db	115	;'s'
  1548  00F0C2  69                 	db	105	;'i'
  1549  00F0C3  6F                 	db	111	;'o'
  1550  00F0C4  6E                 	db	110	;'n'
  1551  00F0C5  20                 	db	32
  1552  00F0C6  69                 	db	105	;'i'
  1553  00F0C7  6E                 	db	110	;'n'
  1554  00F0C8  20                 	db	32
  1555  00F0C9  76                 	db	118	;'v'
  1556  00F0CA  6F                 	db	111	;'o'
  1557  00F0CB  6C                 	db	108	;'l'
  1558  00F0CC  74                 	db	116	;'t'
  1559  00F0CD  73                 	db	115	;'s'
  1560  00F0CE  0A                 	db	10
  1561  00F0CF  0D                 	db	13
  1562  00F0D0  20                 	db	32
  1563  00F0D1  20                 	db	32
  1564  00F0D2  20                 	db	32
  1565  00F0D3  4D                 	db	77	;'M'
  1566  00F0D4  65                 	db	101	;'e'
  1567  00F0D5  61                 	db	97	;'a'
  1568  00F0D6  73                 	db	115	;'s'
  1569  00F0D7  75                 	db	117	;'u'
  1570  00F0D8  72                 	db	114	;'r'
  1571  00F0D9  65                 	db	101	;'e'
  1572  00F0DA  20                 	db	32
  1573  00F0DB  44                 	db	68	;'D'
  1574  00F0DC  69                 	db	105	;'i'
  1575  00F0DD  65                 	db	101	;'e'
  1576  00F0DE  20                 	db	32
  1577  00F0DF  54                 	db	84	;'T'
  1578  00F0E0  65                 	db	101	;'e'
  1579  00F0E1  6D                 	db	109	;'m'
  1580  00F0E2  70                 	db	112	;'p'
  1581  00F0E3  3F                 	db	63	;'?'
  1582  00F0E4  3A                 	db	58	;':'
  1583  00F0E5  20                 	db	32
  1584  00F0E6  52                 	db	82	;'R'
  1585  00F0E7  65                 	db	101	;'e'
  1586  00F0E8  74                 	db	116	;'t'
  1587  00F0E9  75                 	db	117	;'u'
  1588  00F0EA  72                 	db	114	;'r'
  1589  00F0EB  6E                 	db	110	;'n'
  1590  00F0EC  73                 	db	115	;'s'
  1591  00F0ED  20                 	db	32
  1592  00F0EE  74                 	db	116	;'t'
  1593  00F0EF  68                 	db	104	;'h'
  1594  00F0F0  65                 	db	101	;'e'
  1595  00F0F1  20                 	db	32
  1596  00F0F2  6D                 	db	109	;'m'
  1597  00F0F3  69                 	db	105	;'i'
  1598  00F0F4  63                 	db	99	;'c'
  1599  00F0F5  72                 	db	114	;'r'
  1600  00F0F6  6F                 	db	111	;'o'
  1601  00F0F7  63                 	db	99	;'c'
  1602  00F0F8  6F                 	db	111	;'o'
  1603  00F0F9  6E                 	db	110	;'n'
  1604  00F0FA  74                 	db	116	;'t'
  1605  00F0FB  72                 	db	114	;'r'
  1606  00F0FC  6F                 	db	111	;'o'
  1607  00F0FD  6C                 	db	108	;'l'
  1608  00F0FE  6C                 	db	108	;'l'
  1609  00F0FF  65                 	db	101	;'e'
  1610  00F100  72                 	db	114	;'r'
  1611  00F101  20                 	db	32
  1612  00F102  64                 	db	100	;'d'
  1613  00F103  69                 	db	105	;'i'
  1614  00F104  65                 	db	101	;'e'
  1615  00F105  20                 	db	32
  1616  00F106  74                 	db	116	;'t'
  1617  00F107  65                 	db	101	;'e'
  1618  00F108  6D                 	db	109	;'m'
  1619  00F109  70                 	db	112	;'p'
  1620  00F10A  65                 	db	101	;'e'
  1621  00F10B  72                 	db	114	;'r'
  1622  00F10C  61                 	db	97	;'a'
  1623  00F10D  74                 	db	116	;'t'
  1624  00F10E  75                 	db	117	;'u'
  1625  00F10F  72                 	db	114	;'r'
  1626  00F110  65                 	db	101	;'e'
  1627  00F111  20                 	db	32
  1628  00F112  69                 	db	105	;'i'
  1629  00F113  6E                 	db	110	;'n'
  1630  00F114  20                 	db	32
  1631  00F115  64                 	db	100	;'d'
  1632  00F116  65                 	db	101	;'e'
  1633  00F117  67                 	db	103	;'g'
  1634  00F118  72                 	db	114	;'r'
  1635  00F119  65                 	db	101	;'e'
  1636  00F11A  65                 	db	101	;'e'
  1637  00F11B  73                 	db	115	;'s'
  1638  00F11C  20                 	db	32
  1639  00F11D  43                 	db	67	;'C'
  1640  00F11E  0A                 	db	10
  1641  00F11F  0D                 	db	13
  1642  00F120  20                 	db	32
  1643  00F121  20                 	db	32
  1644  00F122  20                 	db	32
  1645  00F123  4D                 	db	77	;'M'
  1646  00F124  65                 	db	101	;'e'
  1647  00F125  61                 	db	97	;'a'
  1648  00F126  73                 	db	115	;'s'
  1649  00F127  75                 	db	117	;'u'
  1650  00F128  72                 	db	114	;'r'
  1651  00F129  65                 	db	101	;'e'
  1652  00F12A  20                 	db	32
  1653  00F12B  46                 	db	70	;'F'
  1654  00F12C  56                 	db	86	;'V'
  1655  00F12D  52                 	db	82	;'R'
  1656  00F12E  3F                 	db	63	;'?'
  1657  00F12F  3A                 	db	58	;':'
  1658  00F130  20                 	db	32
  1659  00F131  52                 	db	82	;'R'
  1660  00F132  65                 	db	101	;'e'
  1661  00F133  74                 	db	116	;'t'
  1662  00F134  75                 	db	117	;'u'
  1663  00F135  72                 	db	114	;'r'
  1664  00F136  6E                 	db	110	;'n'
  1665  00F137  73                 	db	115	;'s'
  1666  00F138  20                 	db	32
  1667  00F139  74                 	db	116	;'t'
  1668  00F13A  68                 	db	104	;'h'
  1669  00F13B  65                 	db	101	;'e'
  1670  00F13C  20                 	db	32
  1671  00F13D  69                 	db	105	;'i'
  1672  00F13E  6E                 	db	110	;'n'
  1673  00F13F  74                 	db	116	;'t'
  1674  00F140  65                 	db	101	;'e'
  1675  00F141  72                 	db	114	;'r'
  1676  00F142  6E                 	db	110	;'n'
  1677  00F143  61                 	db	97	;'a'
  1678  00F144  6C                 	db	108	;'l'
  1679  00F145  20                 	db	32
  1680  00F146  66                 	db	102	;'f'
  1681  00F147  69                 	db	105	;'i'
  1682  00F148  78                 	db	120	;'x'
  1683  00F149  65                 	db	101	;'e'
  1684  00F14A  64                 	db	100	;'d'
  1685  00F14B  20                 	db	32
  1686  00F14C  76                 	db	118	;'v'
  1687  00F14D  6F                 	db	111	;'o'
  1688  00F14E  6C                 	db	108	;'l'
  1689  00F14F  74                 	db	116	;'t'
  1690  00F150  61                 	db	97	;'a'
  1691  00F151  67                 	db	103	;'g'
  1692  00F152  65                 	db	101	;'e'
  1693  00F153  20                 	db	32
  1694  00F154  72                 	db	114	;'r'
  1695  00F155  65                 	db	101	;'e'
  1696  00F156  66                 	db	102	;'f'
  1697  00F157  65                 	db	101	;'e'
  1698  00F158  72                 	db	114	;'r'
  1699  00F159  65                 	db	101	;'e'
  1700  00F15A  6E                 	db	110	;'n'
  1701  00F15B  63                 	db	99	;'c'
  1702  00F15C  65                 	db	101	;'e'
  1703  00F15D  20                 	db	32
  1704  00F15E  62                 	db	98	;'b'
  1705  00F15F  75                 	db	117	;'u'
  1706  00F160  66                 	db	102	;'f'
  1707  00F161  66                 	db	102	;'f'
  1708  00F162  65                 	db	101	;'e'
  1709  00F163  72                 	db	114	;'r'
  1710  00F164  20                 	db	32
  1711  00F165  31                 	db	49	;'1'
  1712  00F166  20                 	db	32
  1713  00F167  6F                 	db	111	;'o'
  1714  00F168  75                 	db	117	;'u'
  1715  00F169  74                 	db	116	;'t'
  1716  00F16A  70                 	db	112	;'p'
  1717  00F16B  75                 	db	117	;'u'
  1718  00F16C  74                 	db	116	;'t'
  1719  00F16D  20                 	db	32
  1720  00F16E  69                 	db	105	;'i'
  1721  00F16F  6E                 	db	110	;'n'
  1722  00F170  20                 	db	32
  1723  00F171  76                 	db	118	;'v'
  1724  00F172  6F                 	db	111	;'o'
  1725  00F173  6C                 	db	108	;'l'
  1726  00F174  74                 	db	116	;'t'
  1727  00F175  73                 	db	115	;'s'
  1728  00F176  0A                 	db	10
  1729  00F177  0D                 	db	13
  1730  00F178  20                 	db	32
  1731  00F179  20                 	db	32
  1732  00F17A  20                 	db	32
  1733  00F17B  4D                 	db	77	;'M'
  1734  00F17C  65                 	db	101	;'e'
  1735  00F17D  61                 	db	97	;'a'
  1736  00F17E  73                 	db	115	;'s'
  1737  00F17F  75                 	db	117	;'u'
  1738  00F180  72                 	db	114	;'r'
  1739  00F181  65                 	db	101	;'e'
  1740  00F182  20                 	db	32
  1741  00F183  41                 	db	65	;'A'
  1742  00F184  56                 	db	86	;'V'
  1743  00F185  53                 	db	83	;'S'
  1744  00F186  53                 	db	83	;'S'
  1745  00F187  3F                 	db	63	;'?'
  1746  00F188  3A                 	db	58	;':'
  1747  00F189  20                 	db	32
  1748  00F18A  52                 	db	82	;'R'
  1749  00F18B  65                 	db	101	;'e'
  1750  00F18C  74                 	db	116	;'t'
  1751  00F18D  75                 	db	117	;'u'
  1752  00F18E  72                 	db	114	;'r'
  1753  00F18F  6E                 	db	110	;'n'
  1754  00F190  73                 	db	115	;'s'
  1755  00F191  20                 	db	32
  1756  00F192  74                 	db	116	;'t'
  1757  00F193  68                 	db	104	;'h'
  1758  00F194  65                 	db	101	;'e'
  1759  00F195  20                 	db	32
  1760  00F196  6D                 	db	109	;'m'
  1761  00F197  65                 	db	101	;'e'
  1762  00F198  61                 	db	97	;'a'
  1763  00F199  73                 	db	115	;'s'
  1764  00F19A  75                 	db	117	;'u'
  1765  00F19B  72                 	db	114	;'r'
  1766  00F19C  65                 	db	101	;'e'
  1767  00F19D  64                 	db	100	;'d'
  1768  00F19E  20                 	db	32
  1769  00F19F  76                 	db	118	;'v'
  1770  00F1A0  61                 	db	97	;'a'
  1771  00F1A1  6C                 	db	108	;'l'
  1772  00F1A2  75                 	db	117	;'u'
  1773  00F1A3  65                 	db	101	;'e'
  1774  00F1A4  20                 	db	32
  1775  00F1A5  6F                 	db	111	;'o'
  1776  00F1A6  66                 	db	102	;'f'
  1777  00F1A7  20                 	db	32
  1778  00F1A8  41                 	db	65	;'A'
  1779  00F1A9  6E                 	db	110	;'n'
  1780  00F1AA  61                 	db	97	;'a'
  1781  00F1AB  6C                 	db	108	;'l'
  1782  00F1AC  6F                 	db	111	;'o'
  1783  00F1AD  67                 	db	103	;'g'
  1784  00F1AE  20                 	db	32
  1785  00F1AF  56                 	db	86	;'V'
  1786  00F1B0  53                 	db	83	;'S'
  1787  00F1B1  53                 	db	83	;'S'
  1788  00F1B2  20                 	db	32
  1789  00F1B3  69                 	db	105	;'i'
  1790  00F1B4  6E                 	db	110	;'n'
  1791  00F1B5  20                 	db	32
  1792  00F1B6  76                 	db	118	;'v'
  1793  00F1B7  6F                 	db	111	;'o'
  1794  00F1B8  6C                 	db	108	;'l'
  1795  00F1B9  74                 	db	116	;'t'
  1796  00F1BA  73                 	db	115	;'s'
  1797  00F1BB  0A                 	db	10
  1798  00F1BC  0D                 	db	13
  1799  00F1BD  0A                 	db	10
  1800  00F1BE  0D                 	db	13
  1801  00F1BF  50                 	db	80	;'P'
  1802  00F1C0  72                 	db	114	;'r'
  1803  00F1C1  69                 	db	105	;'i'
  1804  00F1C2  6D                 	db	109	;'m'
  1805  00F1C3  61                 	db	97	;'a'
  1806  00F1C4  72                 	db	114	;'r'
  1807  00F1C5  79                 	db	121	;'y'
  1808  00F1C6  20                 	db	32
  1809  00F1C7  4D                 	db	77	;'M'
  1810  00F1C8  65                 	db	101	;'e'
  1811  00F1C9  61                 	db	97	;'a'
  1812  00F1CA  73                 	db	115	;'s'
  1813  00F1CB  75                 	db	117	;'u'
  1814  00F1CC  72                 	db	114	;'r'
  1815  00F1CD  65                 	db	101	;'e'
  1816  00F1CE  6D                 	db	109	;'m'
  1817  00F1CF  65                 	db	101	;'e'
  1818  00F1D0  6E                 	db	110	;'n'
  1819  00F1D1  74                 	db	116	;'t'
  1820  00F1D2  20                 	db	32
  1821  00F1D3  43                 	db	67	;'C'
  1822  00F1D4  6F                 	db	111	;'o'
  1823  00F1D5  6D                 	db	109	;'m'
  1824  00F1D6  6D                 	db	109	;'m'
  1825  00F1D7  61                 	db	97	;'a'
  1826  00F1D8  6E                 	db	110	;'n'
  1827  00F1D9  64                 	db	100	;'d'
  1828  00F1DA  73                 	db	115	;'s'
  1829  00F1DB  3A                 	db	58	;':'
  1830  00F1DC  0A                 	db	10
  1831  00F1DD  0D                 	db	13
  1832  00F1DE  20                 	db	32
  1833  00F1DF  20                 	db	32
  1834  00F1E0  20                 	db	32
  1835  00F1E1  4D                 	db	77	;'M'
  1836  00F1E2  65                 	db	101	;'e'
  1837  00F1E3  61                 	db	97	;'a'
  1838  00F1E4  73                 	db	115	;'s'
  1839  00F1E5  75                 	db	117	;'u'
  1840  00F1E6  72                 	db	114	;'r'
  1841  00F1E7  65                 	db	101	;'e'
  1842  00F1E8  20                 	db	32
  1843  00F1E9  44                 	db	68	;'D'
  1844  00F1EA  65                 	db	101	;'e'
  1845  00F1EB  74                 	db	116	;'t'
  1846  00F1EC  65                 	db	101	;'e'
  1847  00F1ED  63                 	db	99	;'c'
  1848  00F1EE  74                 	db	116	;'t'
  1849  00F1EF  65                 	db	101	;'e'
  1850  00F1F0  64                 	db	100	;'d'
  1851  00F1F1  20                 	db	32
  1852  00F1F2  43                 	db	67	;'C'
  1853  00F1F3  75                 	db	117	;'u'
  1854  00F1F4  72                 	db	114	;'r'
  1855  00F1F5  72                 	db	114	;'r'
  1856  00F1F6  65                 	db	101	;'e'
  1857  00F1F7  6E                 	db	110	;'n'
  1858  00F1F8  74                 	db	116	;'t'
  1859  00F1F9  3F                 	db	63	;'?'
  1860  00F1FA  3A                 	db	58	;':'
  1861  00F1FB  20                 	db	32
  1862  00F1FC  52                 	db	82	;'R'
  1863  00F1FD  65                 	db	101	;'e'
  1864  00F1FE  74                 	db	116	;'t'
  1865  00F1FF  75                 	db	117	;'u'
  1866  00F200  72                 	db	114	;'r'
  1867  00F201  6E                 	db	110	;'n'
  1868  00F202  73                 	db	115	;'s'
  1869  00F203  20                 	db	32
  1870  00F204  6D                 	db	109	;'m'
  1871  00F205  65                 	db	101	;'e'
  1872  00F206  61                 	db	97	;'a'
  1873  00F207  73                 	db	115	;'s'
  1874  00F208  75                 	db	117	;'u'
  1875  00F209  72                 	db	114	;'r'
  1876  00F20A  65                 	db	101	;'e'
  1877  00F20B  64                 	db	100	;'d'
  1878  00F20C  20                 	db	32
  1879  00F20D  6F                 	db	111	;'o'
  1880  00F20E  75                 	db	117	;'u'
  1881  00F20F  74                 	db	116	;'t'
  1882  00F210  70                 	db	112	;'p'
  1883  00F211  75                 	db	117	;'u'
  1884  00F212  74                 	db	116	;'t'
  1885  00F213  20                 	db	32
  1886  00F214  63                 	db	99	;'c'
  1887  00F215  75                 	db	117	;'u'
  1888  00F216  72                 	db	114	;'r'
  1889  00F217  72                 	db	114	;'r'
  1890  00F218  65                 	db	101	;'e'
  1891  00F219  6E                 	db	110	;'n'
  1892  00F21A  74                 	db	116	;'t'
  1893  00F21B  20                 	db	32
  1894  00F21C  69                 	db	105	;'i'
  1895  00F21D  6E                 	db	110	;'n'
  1896  00F21E  20                 	db	32
  1897  00F21F  61                 	db	97	;'a'
  1898  00F220  6D                 	db	109	;'m'
  1899  00F221  70                 	db	112	;'p'
  1900  00F222  73                 	db	115	;'s'
  1901  00F223  20                 	db	32
  1902  00F224  61                 	db	97	;'a'
  1903  00F225  73                 	db	115	;'s'
  1904  00F226  20                 	db	32
  1905  00F227  73                 	db	115	;'s'
  1906  00F228  65                 	db	101	;'e'
  1907  00F229  65                 	db	101	;'e'
  1908  00F22A  6E                 	db	110	;'n'
  1909  00F22B  20                 	db	32
  1910  00F22C  62                 	db	98	;'b'
  1911  00F22D  79                 	db	121	;'y'
  1912  00F22E  20                 	db	32
  1913  00F22F  41                 	db	65	;'A'
  1914  00F230  44                 	db	68	;'D'
  1915  00F231  43                 	db	67	;'C'
  1916  00F232  0A                 	db	10
  1917  00F233  0D                 	db	13
  1918  00F234  20                 	db	32
  1919  00F235  20                 	db	32
  1920  00F236  20                 	db	32
  1921  00F237  4D                 	db	77	;'M'
  1922  00F238  65                 	db	101	;'e'
  1923  00F239  61                 	db	97	;'a'
  1924  00F23A  73                 	db	115	;'s'
  1925  00F23B  75                 	db	117	;'u'
  1926  00F23C  72                 	db	114	;'r'
  1927  00F23D  65                 	db	101	;'e'
  1928  00F23E  20                 	db	32
  1929  00F23F  52                 	db	82	;'R'
  1930  00F240  4D                 	db	77	;'M'
  1931  00F241  53                 	db	83	;'S'
  1932  00F242  20                 	db	32
  1933  00F243  43                 	db	67	;'C'
  1934  00F244  75                 	db	117	;'u'
  1935  00F245  72                 	db	114	;'r'
  1936  00F246  72                 	db	114	;'r'
  1937  00F247  65                 	db	101	;'e'
  1938  00F248  6E                 	db	110	;'n'
  1939  00F249  74                 	db	116	;'t'
  1940  00F24A  3F                 	db	63	;'?'
  1941  00F24B  3A                 	db	58	;':'
  1942  00F24C  20                 	db	32
  1943  00F24D  52                 	db	82	;'R'
  1944  00F24E  65                 	db	101	;'e'
  1945  00F24F  74                 	db	116	;'t'
  1946  00F250  75                 	db	117	;'u'
  1947  00F251  72                 	db	114	;'r'
  1948  00F252  6E                 	db	110	;'n'
  1949  00F253  73                 	db	115	;'s'
  1950  00F254  20                 	db	32
  1951  00F255  74                 	db	116	;'t'
  1952  00F256  68                 	db	104	;'h'
  1953  00F257  65                 	db	101	;'e'
  1954  00F258  20                 	db	32
  1955  00F259  63                 	db	99	;'c'
  1956  00F25A  61                 	db	97	;'a'
  1957  00F25B  6C                 	db	108	;'l'
  1958  00F25C  63                 	db	99	;'c'
  1959  00F25D  75                 	db	117	;'u'
  1960  00F25E  6C                 	db	108	;'l'
  1961  00F25F  61                 	db	97	;'a'
  1962  00F260  74                 	db	116	;'t'
  1963  00F261  65                 	db	101	;'e'
  1964  00F262  64                 	db	100	;'d'
  1965  00F263  20                 	db	32
  1966  00F264  52                 	db	82	;'R'
  1967  00F265  4D                 	db	77	;'M'
  1968  00F266  53                 	db	83	;'S'
  1969  00F267  20                 	db	32
  1970  00F268  6F                 	db	111	;'o'
  1971  00F269  75                 	db	117	;'u'
  1972  00F26A  74                 	db	116	;'t'
  1973  00F26B  70                 	db	112	;'p'
  1974  00F26C  75                 	db	117	;'u'
  1975  00F26D  74                 	db	116	;'t'
  1976  00F26E  20                 	db	32
  1977  00F26F  63                 	db	99	;'c'
  1978  00F270  75                 	db	117	;'u'
  1979  00F271  72                 	db	114	;'r'
  1980  00F272  72                 	db	114	;'r'
  1981  00F273  65                 	db	101	;'e'
  1982  00F274  6E                 	db	110	;'n'
  1983  00F275  74                 	db	116	;'t'
  1984  00F276  20                 	db	32
  1985  00F277  66                 	db	102	;'f'
  1986  00F278  72                 	db	114	;'r'
  1987  00F279  6F                 	db	111	;'o'
  1988  00F27A  6D                 	db	109	;'m'
  1989  00F27B  20                 	db	32
  1990  00F27C  6D                 	db	109	;'m'
  1991  00F27D  65                 	db	101	;'e'
  1992  00F27E  61                 	db	97	;'a'
  1993  00F27F  73                 	db	115	;'s'
  1994  00F280  75                 	db	117	;'u'
  1995  00F281  72                 	db	114	;'r'
  1996  00F282  65                 	db	101	;'e'
  1997  00F283  6D                 	db	109	;'m'
  1998  00F284  65                 	db	101	;'e'
  1999  00F285  6E                 	db	110	;'n'
  2000  00F286  74                 	db	116	;'t'
  2001  00F287  73                 	db	115	;'s'
  2002  00F288  20                 	db	32
  2003  00F289  61                 	db	97	;'a'
  2004  00F28A  6E                 	db	110	;'n'
  2005  00F28B  64                 	db	100	;'d'
  2006  00F28C  20                 	db	32
  2007  00F28D  54                 	db	84	;'T'
  2008  00F28E  52                 	db	82	;'R'
  2009  00F28F  49                 	db	73	;'I'
  2010  00F290  41                 	db	65	;'A'
  2011  00F291  43                 	db	67	;'C'
  2012  00F292  20                 	db	32
  2013  00F293  66                 	db	102	;'f'
  2014  00F294  69                 	db	105	;'i'
  2015  00F295  72                 	db	114	;'r'
  2016  00F296  69                 	db	105	;'i'
  2017  00F297  6E                 	db	110	;'n'
  2018  00F298  67                 	db	103	;'g'
  2019  00F299  20                 	db	32
  2020  00F29A  61                 	db	97	;'a'
  2021  00F29B  6E                 	db	110	;'n'
  2022  00F29C  67                 	db	103	;'g'
  2023  00F29D  6C                 	db	108	;'l'
  2024  00F29E  65                 	db	101	;'e'
  2025  00F29F  0A                 	db	10
  2026  00F2A0  0D                 	db	13
  2027  00F2A1  20                 	db	32
  2028  00F2A2  20                 	db	32
  2029  00F2A3  20                 	db	32
  2030  00F2A4  4D                 	db	77	;'M'
  2031  00F2A5  65                 	db	101	;'e'
  2032  00F2A6  61                 	db	97	;'a'
  2033  00F2A7  73                 	db	115	;'s'
  2034  00F2A8  75                 	db	117	;'u'
  2035  00F2A9  72                 	db	114	;'r'
  2036  00F2AA  65                 	db	101	;'e'
  2037  00F2AB  20                 	db	32
  2038  00F2AC  52                 	db	82	;'R'
  2039  00F2AD  4D                 	db	77	;'M'
  2040  00F2AE  53                 	db	83	;'S'
  2041  00F2AF  20                 	db	32
  2042  00F2B0  56                 	db	86	;'V'
  2043  00F2B1  6F                 	db	111	;'o'
  2044  00F2B2  6C                 	db	108	;'l'
  2045  00F2B3  74                 	db	116	;'t'
  2046  00F2B4  61                 	db	97	;'a'
  2047  00F2B5  67                 	db	103	;'g'
  2048  00F2B6  65                 	db	101	;'e'
  2049  00F2B7  3F                 	db	63	;'?'
  2050  00F2B8  3A                 	db	58	;':'
  2051  00F2B9  20                 	db	32
  2052  00F2BA  52                 	db	82	;'R'
  2053  00F2BB  65                 	db	101	;'e'
  2054  00F2BC  74                 	db	116	;'t'
  2055  00F2BD  75                 	db	117	;'u'
  2056  00F2BE  72                 	db	114	;'r'
  2057  00F2BF  6E                 	db	110	;'n'
  2058  00F2C0  73                 	db	115	;'s'
  2059  00F2C1  20                 	db	32
  2060  00F2C2  74                 	db	116	;'t'
  2061  00F2C3  68                 	db	104	;'h'
  2062  00F2C4  65                 	db	101	;'e'
  2063  00F2C5  20                 	db	32
  2064  00F2C6  63                 	db	99	;'c'
  2065  00F2C7  61                 	db	97	;'a'
  2066  00F2C8  6C                 	db	108	;'l'
  2067  00F2C9  63                 	db	99	;'c'
  2068  00F2CA  75                 	db	117	;'u'
  2069  00F2CB  6C                 	db	108	;'l'
  2070  00F2CC  61                 	db	97	;'a'
  2071  00F2CD  74                 	db	116	;'t'
  2072  00F2CE  65                 	db	101	;'e'
  2073  00F2CF  64                 	db	100	;'d'
  2074  00F2D0  20                 	db	32
  2075  00F2D1  52                 	db	82	;'R'
  2076  00F2D2  4D                 	db	77	;'M'
  2077  00F2D3  53                 	db	83	;'S'
  2078  00F2D4  20                 	db	32
  2079  00F2D5  6F                 	db	111	;'o'
  2080  00F2D6  75                 	db	117	;'u'
  2081  00F2D7  74                 	db	116	;'t'
  2082  00F2D8  70                 	db	112	;'p'
  2083  00F2D9  75                 	db	117	;'u'
  2084  00F2DA  74                 	db	116	;'t'
  2085  00F2DB  20                 	db	32
  2086  00F2DC  76                 	db	118	;'v'
  2087  00F2DD  6F                 	db	111	;'o'
  2088  00F2DE  6C                 	db	108	;'l'
  2089  00F2DF  74                 	db	116	;'t'
  2090  00F2E0  61                 	db	97	;'a'
  2091  00F2E1  67                 	db	103	;'g'
  2092  00F2E2  65                 	db	101	;'e'
  2093  00F2E3  20                 	db	32
  2094  00F2E4  66                 	db	102	;'f'
  2095  00F2E5  72                 	db	114	;'r'
  2096  00F2E6  6F                 	db	111	;'o'
  2097  00F2E7  6D                 	db	109	;'m'
  2098  00F2E8  20                 	db	32
  2099  00F2E9  54                 	db	84	;'T'
  2100  00F2EA  52                 	db	82	;'R'
  2101  00F2EB  49                 	db	73	;'I'
  2102  00F2EC  41                 	db	65	;'A'
  2103  00F2ED  43                 	db	67	;'C'
  2104  00F2EE  20                 	db	32
  2105  00F2EF  66                 	db	102	;'f'
  2106  00F2F0  69                 	db	105	;'i'
  2107  00F2F1  72                 	db	114	;'r'
  2108  00F2F2  69                 	db	105	;'i'
  2109  00F2F3  6E                 	db	110	;'n'
  2110  00F2F4  67                 	db	103	;'g'
  2111  00F2F5  20                 	db	32
  2112  00F2F6  61                 	db	97	;'a'
  2113  00F2F7  6E                 	db	110	;'n'
  2114  00F2F8  67                 	db	103	;'g'
  2115  00F2F9  6C                 	db	108	;'l'
  2116  00F2FA  65                 	db	101	;'e'
  2117  00F2FB  0A                 	db	10
  2118  00F2FC  0D                 	db	13
  2119  00F2FD  20                 	db	32
  2120  00F2FE  20                 	db	32
  2121  00F2FF  20                 	db	32
  2122  00F300  4D                 	db	77	;'M'
  2123  00F301  65                 	db	101	;'e'
  2124  00F302  61                 	db	97	;'a'
  2125  00F303  73                 	db	115	;'s'
  2126  00F304  75                 	db	117	;'u'
  2127  00F305  72                 	db	114	;'r'
  2128  00F306  65                 	db	101	;'e'
  2129  00F307  20                 	db	32
  2130  00F308  50                 	db	80	;'P'
  2131  00F309  6F                 	db	111	;'o'
  2132  00F30A  77                 	db	119	;'w'
  2133  00F30B  65                 	db	101	;'e'
  2134  00F30C  72                 	db	114	;'r'
  2135  00F30D  3F                 	db	63	;'?'
  2136  00F30E  3A                 	db	58	;':'
  2137  00F30F  20                 	db	32
  2138  00F310  52                 	db	82	;'R'
  2139  00F311  65                 	db	101	;'e'
  2140  00F312  74                 	db	116	;'t'
  2141  00F313  75                 	db	117	;'u'
  2142  00F314  72                 	db	114	;'r'
  2143  00F315  6E                 	db	110	;'n'
  2144  00F316  73                 	db	115	;'s'
  2145  00F317  20                 	db	32
  2146  00F318  74                 	db	116	;'t'
  2147  00F319  68                 	db	104	;'h'
  2148  00F31A  65                 	db	101	;'e'
  2149  00F31B  20                 	db	32
  2150  00F31C  63                 	db	99	;'c'
  2151  00F31D  61                 	db	97	;'a'
  2152  00F31E  6C                 	db	108	;'l'
  2153  00F31F  63                 	db	99	;'c'
  2154  00F320  75                 	db	117	;'u'
  2155  00F321  6C                 	db	108	;'l'
  2156  00F322  61                 	db	97	;'a'
  2157  00F323  74                 	db	116	;'t'
  2158  00F324  65                 	db	101	;'e'
  2159  00F325  64                 	db	100	;'d'
  2160  00F326  20                 	db	32
  2161  00F327  6F                 	db	111	;'o'
  2162  00F328  75                 	db	117	;'u'
  2163  00F329  74                 	db	116	;'t'
  2164  00F32A  70                 	db	112	;'p'
  2165  00F32B  75                 	db	117	;'u'
  2166  00F32C  74                 	db	116	;'t'
  2167  00F32D  20                 	db	32
  2168  00F32E  70                 	db	112	;'p'
  2169  00F32F  6F                 	db	111	;'o'
  2170  00F330  77                 	db	119	;'w'
  2171  00F331  65                 	db	101	;'e'
  2172  00F332  72                 	db	114	;'r'
  2173  00F333  20                 	db	32
  2174  00F334  69                 	db	105	;'i'
  2175  00F335  6E                 	db	110	;'n'
  2176  00F336  20                 	db	32
  2177  00F337  57                 	db	87	;'W'
  2178  00F338  61                 	db	97	;'a'
  2179  00F339  74                 	db	116	;'t'
  2180  00F33A  74                 	db	116	;'t'
  2181  00F33B  73                 	db	115	;'s'
  2182  00F33C  0A                 	db	10
  2183  00F33D  0D                 	db	13
  2184  00F33E  20                 	db	32
  2185  00F33F  20                 	db	32
  2186  00F340  20                 	db	32
  2187  00F341  4C                 	db	76	;'L'
  2188  00F342  6F                 	db	111	;'o'
  2189  00F343  61                 	db	97	;'a'
  2190  00F344  64                 	db	100	;'d'
  2191  00F345  20                 	db	32
  2192  00F346  4F                 	db	79	;'O'
  2193  00F347  6E                 	db	110	;'n'
  2194  00F348  20                 	db	32
  2195  00F349  54                 	db	84	;'T'
  2196  00F34A  69                 	db	105	;'i'
  2197  00F34B  6D                 	db	109	;'m'
  2198  00F34C  65                 	db	101	;'e'
  2199  00F34D  3F                 	db	63	;'?'
  2200  00F34E  3A                 	db	58	;':'
  2201  00F34F  20                 	db	32
  2202  00F350  52                 	db	82	;'R'
  2203  00F351  65                 	db	101	;'e'
  2204  00F352  74                 	db	116	;'t'
  2205  00F353  75                 	db	117	;'u'
  2206  00F354  72                 	db	114	;'r'
  2207  00F355  6E                 	db	110	;'n'
  2208  00F356  73                 	db	115	;'s'
  2209  00F357  20                 	db	32
  2210  00F358  6C                 	db	108	;'l'
  2211  00F359  6F                 	db	111	;'o'
  2212  00F35A  61                 	db	97	;'a'
  2213  00F35B  64                 	db	100	;'d'
  2214  00F35C  20                 	db	32
  2215  00F35D  6F                 	db	111	;'o'
  2216  00F35E  6E                 	db	110	;'n'
  2217  00F35F  20                 	db	32
  2218  00F360  74                 	db	116	;'t'
  2219  00F361  69                 	db	105	;'i'
  2220  00F362  6D                 	db	109	;'m'
  2221  00F363  65                 	db	101	;'e'
  2222  00F364  20                 	db	32
  2223  00F365  73                 	db	115	;'s'
  2224  00F366  69                 	db	105	;'i'
  2225  00F367  6E                 	db	110	;'n'
  2226  00F368  63                 	db	99	;'c'
  2227  00F369  65                 	db	101	;'e'
  2228  00F36A  20                 	db	32
  2229  00F36B  6C                 	db	108	;'l'
  2230  00F36C  61                 	db	97	;'a'
  2231  00F36D  73                 	db	115	;'s'
  2232  00F36E  74                 	db	116	;'t'
  2233  00F36F  20                 	db	32
  2234  00F370  64                 	db	100	;'d'
  2235  00F371  65                 	db	101	;'e'
  2236  00F372  76                 	db	118	;'v'
  2237  00F373  69                 	db	105	;'i'
  2238  00F374  63                 	db	99	;'c'
  2239  00F375  65                 	db	101	;'e'
  2240  00F376  20                 	db	32
  2241  00F377  72                 	db	114	;'r'
  2242  00F378  65                 	db	101	;'e'
  2243  00F379  73                 	db	115	;'s'
  2244  00F37A  65                 	db	101	;'e'
  2245  00F37B  74                 	db	116	;'t'
  2246  00F37C  20                 	db	32
  2247  00F37D  69                 	db	105	;'i'
  2248  00F37E  6E                 	db	110	;'n'
  2249  00F37F  20                 	db	32
  2250  00F380  73                 	db	115	;'s'
  2251  00F381  65                 	db	101	;'e'
  2252  00F382  63                 	db	99	;'c'
  2253  00F383  6F                 	db	111	;'o'
  2254  00F384  6E                 	db	110	;'n'
  2255  00F385  64                 	db	100	;'d'
  2256  00F386  73                 	db	115	;'s'
  2257  00F387  0A                 	db	10
  2258  00F388  0D                 	db	13
  2259  00F389  0A                 	db	10
  2260  00F38A  0D                 	db	13
  2261  00F38B  4F                 	db	79	;'O'
  2262  00F38C  75                 	db	117	;'u'
  2263  00F38D  74                 	db	116	;'t'
  2264  00F38E  70                 	db	112	;'p'
  2265  00F38F  75                 	db	117	;'u'
  2266  00F390  74                 	db	116	;'t'
  2267  00F391  20                 	db	32
  2268  00F392  43                 	db	67	;'C'
  2269  00F393  6F                 	db	111	;'o'
  2270  00F394  6E                 	db	110	;'n'
  2271  00F395  74                 	db	116	;'t'
  2272  00F396  72                 	db	114	;'r'
  2273  00F397  6F                 	db	111	;'o'
  2274  00F398  6C                 	db	108	;'l'
  2275  00F399  20                 	db	32
  2276  00F39A  43                 	db	67	;'C'
  2277  00F39B  6F                 	db	111	;'o'
  2278  00F39C  6D                 	db	109	;'m'
  2279  00F39D  6D                 	db	109	;'m'
  2280  00F39E  61                 	db	97	;'a'
  2281  00F39F  6E                 	db	110	;'n'
  2282  00F3A0  64                 	db	100	;'d'
  2283  00F3A1  73                 	db	115	;'s'
  2284  00F3A2  3A                 	db	58	;':'
  2285  00F3A3  0A                 	db	10
  2286  00F3A4  0D                 	db	13
  2287  00F3A5  20                 	db	32
  2288  00F3A6  20                 	db	32
  2289  00F3A7  20                 	db	32
  2290  00F3A8  45                 	db	69	;'E'
  2291  00F3A9  6E                 	db	110	;'n'
  2292  00F3AA  61                 	db	97	;'a'
  2293  00F3AB  62                 	db	98	;'b'
  2294  00F3AC  6C                 	db	108	;'l'
  2295  00F3AD  65                 	db	101	;'e'
  2296  00F3AE  20                 	db	32
  2297  00F3AF  44                 	db	68	;'D'
  2298  00F3B0  69                 	db	105	;'i'
  2299  00F3B1  6D                 	db	109	;'m'
  2300  00F3B2  6D                 	db	109	;'m'
  2301  00F3B3  69                 	db	105	;'i'
  2302  00F3B4  6E                 	db	110	;'n'
  2303  00F3B5  67                 	db	103	;'g'
  2304  00F3B6  3A                 	db	58	;':'
  2305  00F3B7  20                 	db	32
  2306  00F3B8  45                 	db	69	;'E'
  2307  00F3B9  6E                 	db	110	;'n'
  2308  00F3BA  61                 	db	97	;'a'
  2309  00F3BB  62                 	db	98	;'b'
  2310  00F3BC  6C                 	db	108	;'l'
  2311  00F3BD  65                 	db	101	;'e'
  2312  00F3BE  20                 	db	32
  2313  00F3BF  54                 	db	84	;'T'
  2314  00F3C0  52                 	db	82	;'R'
  2315  00F3C1  49                 	db	73	;'I'
  2316  00F3C2  41                 	db	65	;'A'
  2317  00F3C3  43                 	db	67	;'C'
  2318  00F3C4  20                 	db	32
  2319  00F3C5  6F                 	db	111	;'o'
  2320  00F3C6  75                 	db	117	;'u'
  2321  00F3C7  74                 	db	116	;'t'
  2322  00F3C8  70                 	db	112	;'p'
  2323  00F3C9  75                 	db	117	;'u'
  2324  00F3CA  74                 	db	116	;'t'
  2325  00F3CB  20                 	db	32
  2326  00F3CC  64                 	db	100	;'d'
  2327  00F3CD  69                 	db	105	;'i'
  2328  00F3CE  6D                 	db	109	;'m'
  2329  00F3CF  6D                 	db	109	;'m'
  2330  00F3D0  69                 	db	105	;'i'
  2331  00F3D1  6E                 	db	110	;'n'
  2332  00F3D2  67                 	db	103	;'g'
  2333  00F3D3  0A                 	db	10
  2334  00F3D4  0D                 	db	13
  2335  00F3D5  20                 	db	32
  2336  00F3D6  20                 	db	32
  2337  00F3D7  20                 	db	32
  2338  00F3D8  44                 	db	68	;'D'
  2339  00F3D9  69                 	db	105	;'i'
  2340  00F3DA  73                 	db	115	;'s'
  2341  00F3DB  61                 	db	97	;'a'
  2342  00F3DC  62                 	db	98	;'b'
  2343  00F3DD  6C                 	db	108	;'l'
  2344  00F3DE  65                 	db	101	;'e'
  2345  00F3DF  20                 	db	32
  2346  00F3E0  44                 	db	68	;'D'
  2347  00F3E1  69                 	db	105	;'i'
  2348  00F3E2  6D                 	db	109	;'m'
  2349  00F3E3  6D                 	db	109	;'m'
  2350  00F3E4  69                 	db	105	;'i'
  2351  00F3E5  6E                 	db	110	;'n'
  2352  00F3E6  67                 	db	103	;'g'
  2353  00F3E7  3A                 	db	58	;':'
  2354  00F3E8  20                 	db	32
  2355  00F3E9  44                 	db	68	;'D'
  2356  00F3EA  69                 	db	105	;'i'
  2357  00F3EB  73                 	db	115	;'s'
  2358  00F3EC  61                 	db	97	;'a'
  2359  00F3ED  62                 	db	98	;'b'
  2360  00F3EE  6C                 	db	108	;'l'
  2361  00F3EF  65                 	db	101	;'e'
  2362  00F3F0  20                 	db	32
  2363  00F3F1  54                 	db	84	;'T'
  2364  00F3F2  52                 	db	82	;'R'
  2365  00F3F3  49                 	db	73	;'I'
  2366  00F3F4  41                 	db	65	;'A'
  2367  00F3F5  43                 	db	67	;'C'
  2368  00F3F6  20                 	db	32
  2369  00F3F7  6F                 	db	111	;'o'
  2370  00F3F8  75                 	db	117	;'u'
  2371  00F3F9  74                 	db	116	;'t'
  2372  00F3FA  70                 	db	112	;'p'
  2373  00F3FB  75                 	db	117	;'u'
  2374  00F3FC  74                 	db	116	;'t'
  2375  00F3FD  20                 	db	32
  2376  00F3FE  64                 	db	100	;'d'
  2377  00F3FF  69                 	db	105	;'i'
  2378  00F400  6D                 	db	109	;'m'
  2379  00F401  6D                 	db	109	;'m'
  2380  00F402  69                 	db	105	;'i'
  2381  00F403  6E                 	db	110	;'n'
  2382  00F404  67                 	db	103	;'g'
  2383  00F405  0A                 	db	10
  2384  00F406  0D                 	db	13
  2385  00F407  20                 	db	32
  2386  00F408  20                 	db	32
  2387  00F409  20                 	db	32
  2388  00F40A  45                 	db	69	;'E'
  2389  00F40B  6E                 	db	110	;'n'
  2390  00F40C  61                 	db	97	;'a'
  2391  00F40D  62                 	db	98	;'b'
  2392  00F40E  6C                 	db	108	;'l'
  2393  00F40F  65                 	db	101	;'e'
  2394  00F410  20                 	db	32
  2395  00F411  4C                 	db	76	;'L'
  2396  00F412  6F                 	db	111	;'o'
  2397  00F413  61                 	db	97	;'a'
  2398  00F414  64                 	db	100	;'d'
  2399  00F415  3A                 	db	58	;':'
  2400  00F416  20                 	db	32
  2401  00F417  45                 	db	69	;'E'
  2402  00F418  6E                 	db	110	;'n'
  2403  00F419  61                 	db	97	;'a'
  2404  00F41A  62                 	db	98	;'b'
  2405  00F41B  6C                 	db	108	;'l'
  2406  00F41C  65                 	db	101	;'e'
  2407  00F41D  73                 	db	115	;'s'
  2408  00F41E  20                 	db	32
  2409  00F41F  74                 	db	116	;'t'
  2410  00F420  68                 	db	104	;'h'
  2411  00F421  65                 	db	101	;'e'
  2412  00F422  20                 	db	32
  2413  00F423  6F                 	db	111	;'o'
  2414  00F424  75                 	db	117	;'u'
  2415  00F425  74                 	db	116	;'t'
  2416  00F426  70                 	db	112	;'p'
  2417  00F427  75                 	db	117	;'u'
  2418  00F428  74                 	db	116	;'t'
  2419  00F429  20                 	db	32
  2420  00F42A  54                 	db	84	;'T'
  2421  00F42B  52                 	db	82	;'R'
  2422  00F42C  49                 	db	73	;'I'
  2423  00F42D  41                 	db	65	;'A'
  2424  00F42E  43                 	db	67	;'C'
  2425  00F42F  20                 	db	32
  2426  00F430  77                 	db	119	;'w'
  2427  00F431  69                 	db	105	;'i'
  2428  00F432  74                 	db	116	;'t'
  2429  00F433  68                 	db	104	;'h'
  2430  00F434  20                 	db	32
  2431  00F435  64                 	db	100	;'d'
  2432  00F436  69                 	db	105	;'i'
  2433  00F437  6D                 	db	109	;'m'
  2434  00F438  6D                 	db	109	;'m'
  2435  00F439  69                 	db	105	;'i'
  2436  00F43A  6E                 	db	110	;'n'
  2437  00F43B  67                 	db	103	;'g'
  2438  00F43C  20                 	db	32
  2439  00F43D  64                 	db	100	;'d'
  2440  00F43E  69                 	db	105	;'i'
  2441  00F43F  73                 	db	115	;'s'
  2442  00F440  61                 	db	97	;'a'
  2443  00F441  62                 	db	98	;'b'
  2444  00F442  6C                 	db	108	;'l'
  2445  00F443  65                 	db	101	;'e'
  2446  00F444  64                 	db	100	;'d'
  2447  00F445  0A                 	db	10
  2448  00F446  0D                 	db	13
  2449  00F447  20                 	db	32
  2450  00F448  20                 	db	32
  2451  00F449  20                 	db	32
  2452  00F44A  44                 	db	68	;'D'
  2453  00F44B  69                 	db	105	;'i'
  2454  00F44C  73                 	db	115	;'s'
  2455  00F44D  61                 	db	97	;'a'
  2456  00F44E  62                 	db	98	;'b'
  2457  00F44F  6C                 	db	108	;'l'
  2458  00F450  65                 	db	101	;'e'
  2459  00F451  20                 	db	32
  2460  00F452  4C                 	db	76	;'L'
  2461  00F453  6F                 	db	111	;'o'
  2462  00F454  61                 	db	97	;'a'
  2463  00F455  64                 	db	100	;'d'
  2464  00F456  3A                 	db	58	;':'
  2465  00F457  20                 	db	32
  2466  00F458  44                 	db	68	;'D'
  2467  00F459  69                 	db	105	;'i'
  2468  00F45A  73                 	db	115	;'s'
  2469  00F45B  61                 	db	97	;'a'
  2470  00F45C  62                 	db	98	;'b'
  2471  00F45D  6C                 	db	108	;'l'
  2472  00F45E  65                 	db	101	;'e'
  2473  00F45F  73                 	db	115	;'s'
  2474  00F460  20                 	db	32
  2475  00F461  74                 	db	116	;'t'
  2476  00F462  68                 	db	104	;'h'
  2477  00F463  65                 	db	101	;'e'
  2478  00F464  20                 	db	32
  2479  00F465  6F                 	db	111	;'o'
  2480  00F466  75                 	db	117	;'u'
  2481  00F467  74                 	db	116	;'t'
  2482  00F468  70                 	db	112	;'p'
  2483  00F469  75                 	db	117	;'u'
  2484  00F46A  74                 	db	116	;'t'
  2485  00F46B  20                 	db	32
  2486  00F46C  54                 	db	84	;'T'
  2487  00F46D  52                 	db	82	;'R'
  2488  00F46E  49                 	db	73	;'I'
  2489  00F46F  41                 	db	65	;'A'
  2490  00F470  43                 	db	67	;'C'
  2491  00F471  20                 	db	32
  2492  00F472  63                 	db	99	;'c'
  2493  00F473  6F                 	db	111	;'o'
  2494  00F474  6D                 	db	109	;'m'
  2495  00F475  70                 	db	112	;'p'
  2496  00F476  6C                 	db	108	;'l'
  2497  00F477  65                 	db	101	;'e'
  2498  00F478  74                 	db	116	;'t'
  2499  00F479  65                 	db	101	;'e'
  2500  00F47A  6C                 	db	108	;'l'
  2501  00F47B  79                 	db	121	;'y'
  2502  00F47C  0A                 	db	10
  2503  00F47D  0D                 	db	13
  2504  00F47E  20                 	db	32
  2505  00F47F  20                 	db	32
  2506  00F480  20                 	db	32
  2507  00F481  53                 	db	83	;'S'
  2508  00F482  65                 	db	101	;'e'
  2509  00F483  74                 	db	116	;'t'
  2510  00F484  20                 	db	32
  2511  00F485  44                 	db	68	;'D'
  2512  00F486  69                 	db	105	;'i'
  2513  00F487  6D                 	db	109	;'m'
  2514  00F488  6D                 	db	109	;'m'
  2515  00F489  69                 	db	105	;'i'
  2516  00F48A  6E                 	db	110	;'n'
  2517  00F48B  67                 	db	103	;'g'
  2518  00F48C  20                 	db	32
  2519  00F48D  50                 	db	80	;'P'
  2520  00F48E  65                 	db	101	;'e'
  2521  00F48F  72                 	db	114	;'r'
  2522  00F490  63                 	db	99	;'c'
  2523  00F491  65                 	db	101	;'e'
  2524  00F492  6E                 	db	110	;'n'
  2525  00F493  74                 	db	116	;'t'
  2526  00F494  61                 	db	97	;'a'
  2527  00F495  67                 	db	103	;'g'
  2528  00F496  65                 	db	101	;'e'
  2529  00F497  3A                 	db	58	;':'
  2530  00F498  20                 	db	32
  2531  00F499  3C                 	db	60	;'<'
  2532  00F49A  78                 	db	120	;'x'
  2533  00F49B  3E                 	db	62	;'>'
  2534  00F49C  3A                 	db	58	;':'
  2535  00F49D  20                 	db	32
  2536  00F49E  53                 	db	83	;'S'
  2537  00F49F  65                 	db	101	;'e'
  2538  00F4A0  74                 	db	116	;'t'
  2539  00F4A1  73                 	db	115	;'s'
  2540  00F4A2  20                 	db	32
  2541  00F4A3  74                 	db	116	;'t'
  2542  00F4A4  68                 	db	104	;'h'
  2543  00F4A5  65                 	db	101	;'e'
  2544  00F4A6  20                 	db	32
  2545  00F4A7  6F                 	db	111	;'o'
  2546  00F4A8  75                 	db	117	;'u'
  2547  00F4A9  74                 	db	116	;'t'
  2548  00F4AA  70                 	db	112	;'p'
  2549  00F4AB  75                 	db	117	;'u'
  2550  00F4AC  74                 	db	116	;'t'
  2551  00F4AD  20                 	db	32
  2552  00F4AE  64                 	db	100	;'d'
  2553  00F4AF  69                 	db	105	;'i'
  2554  00F4B0  6D                 	db	109	;'m'
  2555  00F4B1  6D                 	db	109	;'m'
  2556  00F4B2  69                 	db	105	;'i'
  2557  00F4B3  6E                 	db	110	;'n'
  2558  00F4B4  67                 	db	103	;'g'
  2559  00F4B5  20                 	db	32
  2560  00F4B6  70                 	db	112	;'p'
  2561  00F4B7  65                 	db	101	;'e'
  2562  00F4B8  72                 	db	114	;'r'
  2563  00F4B9  63                 	db	99	;'c'
  2564  00F4BA  65                 	db	101	;'e'
  2565  00F4BB  6E                 	db	110	;'n'
  2566  00F4BC  74                 	db	116	;'t'
  2567  00F4BD  61                 	db	97	;'a'
  2568  00F4BE  67                 	db	103	;'g'
  2569  00F4BF  65                 	db	101	;'e'
  2570  00F4C0  20                 	db	32
  2571  00F4C1  61                 	db	97	;'a'
  2572  00F4C2  73                 	db	115	;'s'
  2573  00F4C3  20                 	db	32
  2574  00F4C4  78                 	db	120	;'x'
  2575  00F4C5  20                 	db	32
  2576  00F4C6  70                 	db	112	;'p'
  2577  00F4C7  65                 	db	101	;'e'
  2578  00F4C8  72                 	db	114	;'r'
  2579  00F4C9  63                 	db	99	;'c'
  2580  00F4CA  65                 	db	101	;'e'
  2581  00F4CB  6E                 	db	110	;'n'
  2582  00F4CC  74                 	db	116	;'t'
  2583  00F4CD  0A                 	db	10
  2584  00F4CE  0D                 	db	13
  2585  00F4CF  00                 	db	0
  2586  00F4D0  20                 	db	32
  2587  00F4D1  20                 	db	32
  2588  00F4D2  20                 	db	32
  2589  00F4D3  20                 	db	32
  2590  00F4D4  42                 	db	66	;'B'
  2591  00F4D5  6F                 	db	111	;'o'
  2592  00F4D6  6F                 	db	111	;'o'
  2593  00F4D7  74                 	db	116	;'t'
  2594  00F4D8  20                 	db	32
  2595  00F4D9  63                 	db	99	;'c'
  2596  00F4DA  6F                 	db	111	;'o'
  2597  00F4DB  6D                 	db	109	;'m'
  2598  00F4DC  70                 	db	112	;'p'
  2599  00F4DD  6C                 	db	108	;'l'
  2600  00F4DE  65                 	db	101	;'e'
  2601  00F4DF  74                 	db	116	;'t'
  2602  00F4E0  65                 	db	101	;'e'
  2603  00F4E1  0A                 	db	10
  2604  00F4E2  0D                 	db	13
  2605  00F4E3  20                 	db	32
  2606  00F4E4  20                 	db	32
  2607  00F4E5  20                 	db	32
  2608  00F4E6  20                 	db	32
  2609  00F4E7  50                 	db	80	;'P'
  2610  00F4E8  49                 	db	73	;'I'
  2611  00F4E9  43                 	db	67	;'C'
  2612  00F4EA  31                 	db	49	;'1'
  2613  00F4EB  38                 	db	56	;'8'
  2614  00F4EC  46                 	db	70	;'F'
  2615  00F4ED  36                 	db	54	;'6'
  2616  00F4EE  37                 	db	55	;'7'
  2617  00F4EF  4B                 	db	75	;'K'
  2618  00F4F0  34                 	db	52	;'4'
  2619  00F4F1  30                 	db	48	;'0'
  2620  00F4F2  20                 	db	32
  2621  00F4F3  6D                 	db	109	;'m'
  2622  00F4F4  54                 	db	84	;'T'
  2623  00F4F5  6F                 	db	111	;'o'
  2624  00F4F6  75                 	db	117	;'u'
  2625  00F4F7  63                 	db	99	;'c'
  2626  00F4F8  68                 	db	104	;'h'
  2627  00F4F9  20                 	db	32
  2628  00F4FA  54                 	db	84	;'T'
  2629  00F4FB  65                 	db	101	;'e'
  2630  00F4FC  73                 	db	115	;'s'
  2631  00F4FD  74                 	db	116	;'t'
  2632  00F4FE  20                 	db	32
  2633  00F4FF  42                 	db	66	;'B'
  2634  00F500  6F                 	db	111	;'o'
  2635  00F501  61                 	db	97	;'a'
  2636  00F502  72                 	db	114	;'r'
  2637  00F503  64                 	db	100	;'d'
  2638  00F504  0A                 	db	10
  2639  00F505  0D                 	db	13
  2640  00F506  20                 	db	32
  2641  00F507  20                 	db	32
  2642  00F508  20                 	db	32
  2643  00F509  20                 	db	32
  2644  00F50A  45                 	db	69	;'E'
  2645  00F50B  76                 	db	118	;'v'
  2646  00F50C  61                 	db	97	;'a'
  2647  00F50D  6C                 	db	108	;'l'
  2648  00F50E  75                 	db	117	;'u'
  2649  00F50F  61                 	db	97	;'a'
  2650  00F510  74                 	db	116	;'t'
  2651  00F511  65                 	db	101	;'e'
  2652  00F512  73                 	db	115	;'s'
  2653  00F513  20                 	db	32
  2654  00F514  74                 	db	116	;'t'
  2655  00F515  68                 	db	104	;'h'
  2656  00F516  65                 	db	101	;'e'
  2657  00F517  20                 	db	32
  2658  00F518  6D                 	db	109	;'m'
  2659  00F519  54                 	db	84	;'T'
  2660  00F51A  6F                 	db	111	;'o'
  2661  00F51B  75                 	db	117	;'u'
  2662  00F51C  63                 	db	99	;'c'
  2663  00F51D  68                 	db	104	;'h'
  2664  00F51E  20                 	db	32
  2665  00F51F  63                 	db	99	;'c'
  2666  00F520  61                 	db	97	;'a'
  2667  00F521  70                 	db	112	;'p'
  2668  00F522  61                 	db	97	;'a'
  2669  00F523  63                 	db	99	;'c'
  2670  00F524  69                 	db	105	;'i'
  2671  00F525  74                 	db	116	;'t'
  2672  00F526  69                 	db	105	;'i'
  2673  00F527  76                 	db	118	;'v'
  2674  00F528  65                 	db	101	;'e'
  2675  00F529  20                 	db	32
  2676  00F52A  74                 	db	116	;'t'
  2677  00F52B  6F                 	db	111	;'o'
  2678  00F52C  75                 	db	117	;'u'
  2679  00F52D  63                 	db	99	;'c'
  2680  00F52E  68                 	db	104	;'h'
  2681  00F52F  20                 	db	32
  2682  00F530  6C                 	db	108	;'l'
  2683  00F531  69                 	db	105	;'i'
  2684  00F532  62                 	db	98	;'b'
  2685  00F533  72                 	db	114	;'r'
  2686  00F534  61                 	db	97	;'a'
  2687  00F535  72                 	db	114	;'r'
  2688  00F536  79                 	db	121	;'y'
  2689  00F537  20                 	db	32
  2690  00F538  64                 	db	100	;'d'
  2691  00F539  69                 	db	105	;'i'
  2692  00F53A  73                 	db	115	;'s'
  2693  00F53B  74                 	db	116	;'t'
  2694  00F53C  72                 	db	114	;'r'
  2695  00F53D  69                 	db	105	;'i'
  2696  00F53E  62                 	db	98	;'b'
  2697  00F53F  75                 	db	117	;'u'
  2698  00F540  74                 	db	116	;'t'
  2699  00F541  65                 	db	101	;'e'
  2700  00F542  64                 	db	100	;'d'
  2701  00F543  20                 	db	32
  2702  00F544  62                 	db	98	;'b'
  2703  00F545  79                 	db	121	;'y'
  2704  00F546  20                 	db	32
  2705  00F547  4D                 	db	77	;'M'
  2706  00F548  69                 	db	105	;'i'
  2707  00F549  63                 	db	99	;'c'
  2708  00F54A  72                 	db	114	;'r'
  2709  00F54B  6F                 	db	111	;'o'
  2710  00F54C  63                 	db	99	;'c'
  2711  00F54D  68                 	db	104	;'h'
  2712  00F54E  69                 	db	105	;'i'
  2713  00F54F  70                 	db	112	;'p'
  2714  00F550  0A                 	db	10
  2715  00F551  0D                 	db	13
  2716  00F552  20                 	db	32
  2717  00F553  20                 	db	32
  2718  00F554  20                 	db	32
  2719  00F555  20                 	db	32
  2720  00F556  53                 	db	83	;'S'
  2721  00F557  65                 	db	101	;'e'
  2722  00F558  74                 	db	116	;'t'
  2723  00F559  73                 	db	115	;'s'
  2724  00F55A  20                 	db	32
  2725  00F55B  74                 	db	116	;'t'
  2726  00F55C  68                 	db	104	;'h'
  2727  00F55D  65                 	db	101	;'e'
  2728  00F55E  20                 	db	32
  2729  00F55F  73                 	db	115	;'s'
  2730  00F560  74                 	db	116	;'t'
  2731  00F561  61                 	db	97	;'a'
  2732  00F562  74                 	db	116	;'t'
  2733  00F563  65                 	db	101	;'e'
  2734  00F564  20                 	db	32
  2735  00F565  6F                 	db	111	;'o'
  2736  00F566  66                 	db	102	;'f'
  2737  00F567  20                 	db	32
  2738  00F568  66                 	db	102	;'f'
  2739  00F569  69                 	db	105	;'i'
  2740  00F56A  76                 	db	118	;'v'
  2741  00F56B  65                 	db	101	;'e'
  2742  00F56C  20                 	db	32
  2743  00F56D  4C                 	db	76	;'L'
  2744  00F56E  45                 	db	69	;'E'
  2745  00F56F  44                 	db	68	;'D'
  2746  00F570  73                 	db	115	;'s'
  2747  00F571  20                 	db	32
  2748  00F572  62                 	db	98	;'b'
  2749  00F573  61                 	db	97	;'a'
  2750  00F574  73                 	db	115	;'s'
  2751  00F575  65                 	db	101	;'e'
  2752  00F576  64                 	db	100	;'d'
  2753  00F577  20                 	db	32
  2754  00F578  6F                 	db	111	;'o'
  2755  00F579  6E                 	db	110	;'n'
  2756  00F57A  20                 	db	32
  2757  00F57B  6D                 	db	109	;'m'
  2758  00F57C  54                 	db	84	;'T'
  2759  00F57D  6F                 	db	111	;'o'
  2760  00F57E  75                 	db	117	;'u'
  2761  00F57F  63                 	db	99	;'c'
  2762  00F580  68                 	db	104	;'h'
  2763  00F581  20                 	db	32
  2764  00F582  63                 	db	99	;'c'
  2765  00F583  61                 	db	97	;'a'
  2766  00F584  70                 	db	112	;'p'
  2767  00F585  61                 	db	97	;'a'
  2768  00F586  63                 	db	99	;'c'
  2769  00F587  69                 	db	105	;'i'
  2770  00F588  74                 	db	116	;'t'
  2771  00F589  69                 	db	105	;'i'
  2772  00F58A  76                 	db	118	;'v'
  2773  00F58B  65                 	db	101	;'e'
  2774  00F58C  20                 	db	32
  2775  00F58D  70                 	db	112	;'p'
  2776  00F58E  75                 	db	117	;'u'
  2777  00F58F  73                 	db	115	;'s'
  2778  00F590  68                 	db	104	;'h'
  2779  00F591  62                 	db	98	;'b'
  2780  00F592  75                 	db	117	;'u'
  2781  00F593  74                 	db	116	;'t'
  2782  00F594  74                 	db	116	;'t'
  2783  00F595  6F                 	db	111	;'o'
  2784  00F596  6E                 	db	110	;'n'
  2785  00F597  73                 	db	115	;'s'
  2786  00F598  0A                 	db	10
  2787  00F599  0D                 	db	13
  2788  00F59A  20                 	db	32
  2789  00F59B  20                 	db	32
  2790  00F59C  20                 	db	32
  2791  00F59D  20                 	db	32
  2792  00F59E  42                 	db	66	;'B'
  2793  00F59F  61                 	db	97	;'a'
  2794  00F5A0  75                 	db	117	;'u'
  2795  00F5A1  64                 	db	100	;'d'
  2796  00F5A2  20                 	db	32
  2797  00F5A3  72                 	db	114	;'r'
  2798  00F5A4  61                 	db	97	;'a'
  2799  00F5A5  74                 	db	116	;'t'
  2800  00F5A6  65                 	db	101	;'e'
  2801  00F5A7  3A                 	db	58	;':'
  2802  00F5A8  20                 	db	32
  2803  00F5A9  31                 	db	49	;'1'
  2804  00F5AA  31                 	db	49	;'1'
  2805  00F5AB  35                 	db	53	;'5'
  2806  00F5AC  32                 	db	50	;'2'
  2807  00F5AD  30                 	db	48	;'0'
  2808  00F5AE  30                 	db	48	;'0'
  2809  00F5AF  20                 	db	32
  2810  00F5B0  62                 	db	98	;'b'
  2811  00F5B1  70                 	db	112	;'p'
  2812  00F5B2  73                 	db	115	;'s'
  2813  00F5B3  0A                 	db	10
  2814  00F5B4  0D                 	db	13
  2815  00F5B5  20                 	db	32
  2816  00F5B6  20                 	db	32
  2817  00F5B7  20                 	db	32
  2818  00F5B8  20                 	db	32
  2819  00F5B9  4E                 	db	78	;'N'
  2820  00F5BA  6F                 	db	111	;'o'
  2821  00F5BB  20                 	db	32
  2822  00F5BC  70                 	db	112	;'p'
  2823  00F5BD  61                 	db	97	;'a'
  2824  00F5BE  72                 	db	114	;'r'
  2825  00F5BF  69                 	db	105	;'i'
  2826  00F5C0  74                 	db	116	;'t'
  2827  00F5C1  79                 	db	121	;'y'
  2828  00F5C2  2C                 	db	44
  2829  00F5C3  20                 	db	32
  2830  00F5C4  38                 	db	56	;'8'
  2831  00F5C5  20                 	db	32
  2832  00F5C6  62                 	db	98	;'b'
  2833  00F5C7  69                 	db	105	;'i'
  2834  00F5C8  74                 	db	116	;'t'
  2835  00F5C9  73                 	db	115	;'s'
  2836  00F5CA  2C                 	db	44
  2837  00F5CB  20                 	db	32
  2838  00F5CC  6E                 	db	110	;'n'
  2839  00F5CD  6F                 	db	111	;'o'
  2840  00F5CE  20                 	db	32
  2841  00F5CF  66                 	db	102	;'f'
  2842  00F5D0  6C                 	db	108	;'l'
  2843  00F5D1  6F                 	db	111	;'o'
  2844  00F5D2  77                 	db	119	;'w'
  2845  00F5D3  20                 	db	32
  2846  00F5D4  63                 	db	99	;'c'
  2847  00F5D5  6F                 	db	111	;'o'
  2848  00F5D6  6E                 	db	110	;'n'
  2849  00F5D7  74                 	db	116	;'t'
  2850  00F5D8  72                 	db	114	;'r'
  2851  00F5D9  6F                 	db	111	;'o'
  2852  00F5DA  6C                 	db	108	;'l'
  2853  00F5DB  2C                 	db	44
  2854  00F5DC  20                 	db	32
  2855  00F5DD  31                 	db	49	;'1'
  2856  00F5DE  20                 	db	32
  2857  00F5DF  73                 	db	115	;'s'
  2858  00F5E0  74                 	db	116	;'t'
  2859  00F5E1  6F                 	db	111	;'o'
  2860  00F5E2  70                 	db	112	;'p'
  2861  00F5E3  20                 	db	32
  2862  00F5E4  62                 	db	98	;'b'
  2863  00F5E5  69                 	db	105	;'i'
  2864  00F5E6  74                 	db	116	;'t'
  2865  00F5E7  0A                 	db	10
  2866  00F5E8  0D                 	db	13
  2867  00F5E9  20                 	db	32
  2868  00F5EA  20                 	db	32
  2869  00F5EB  20                 	db	32
  2870  00F5EC  20                 	db	32
  2871  00F5ED  43                 	db	67	;'C'
  2872  00F5EE  6F                 	db	111	;'o'
  2873  00F5EF  6D                 	db	109	;'m'
  2874  00F5F0  6D                 	db	109	;'m'
  2875  00F5F1  61                 	db	97	;'a'
  2876  00F5F2  6E                 	db	110	;'n'
  2877  00F5F3  64                 	db	100	;'d'
  2878  00F5F4  73                 	db	115	;'s'
  2879  00F5F5  20                 	db	32
  2880  00F5F6  61                 	db	97	;'a'
  2881  00F5F7  72                 	db	114	;'r'
  2882  00F5F8  65                 	db	101	;'e'
  2883  00F5F9  20                 	db	32
  2884  00F5FA  63                 	db	99	;'c'
  2885  00F5FB  61                 	db	97	;'a'
  2886  00F5FC  73                 	db	115	;'s'
  2887  00F5FD  65                 	db	101	;'e'
  2888  00F5FE  20                 	db	32
  2889  00F5FF  73                 	db	115	;'s'
  2890  00F600  65                 	db	101	;'e'
  2891  00F601  6E                 	db	110	;'n'
  2892  00F602  73                 	db	115	;'s'
  2893  00F603  69                 	db	105	;'i'
  2894  00F604  74                 	db	116	;'t'
  2895  00F605  69                 	db	105	;'i'
  2896  00F606  76                 	db	118	;'v'
  2897  00F607  65                 	db	101	;'e'
  2898  00F608  0A                 	db	10
  2899  00F609  0D                 	db	13
  2900  00F60A  20                 	db	32
  2901  00F60B  20                 	db	32
  2902  00F60C  20                 	db	32
  2903  00F60D  20                 	db	32
  2904  00F60E  45                 	db	69	;'E'
  2905  00F60F  6E                 	db	110	;'n'
  2906  00F610  74                 	db	116	;'t'
  2907  00F611  65                 	db	101	;'e'
  2908  00F612  72                 	db	114	;'r'
  2909  00F613  20                 	db	32
  2910  00F614  61                 	db	97	;'a'
  2911  00F615  20                 	db	32
  2912  00F616  63                 	db	99	;'c'
  2913  00F617  6F                 	db	111	;'o'
  2914  00F618  6D                 	db	109	;'m'
  2915  00F619  6D                 	db	109	;'m'
  2916  00F61A  61                 	db	97	;'a'
  2917  00F61B  6E                 	db	110	;'n'
  2918  00F61C  64                 	db	100	;'d'
  2919  00F61D  2C                 	db	44
  2920  00F61E  20                 	db	32
  2921  00F61F  6F                 	db	111	;'o'
  2922  00F620  72                 	db	114	;'r'
  2923  00F621  20                 	db	32
  2924  00F622  65                 	db	101	;'e'
  2925  00F623  6E                 	db	110	;'n'
  2926  00F624  74                 	db	116	;'t'
  2927  00F625  65                 	db	101	;'e'
  2928  00F626  72                 	db	114	;'r'
  2929  00F627  20                 	db	32
  2930  00F628  48                 	db	72	;'H'
  2931  00F629  65                 	db	101	;'e'
  2932  00F62A  6C                 	db	108	;'l'
  2933  00F62B  70                 	db	112	;'p'
  2934  00F62C  20                 	db	32
  2935  00F62D  66                 	db	102	;'f'
  2936  00F62E  6F                 	db	111	;'o'
  2937  00F62F  72                 	db	114	;'r'
  2938  00F630  20                 	db	32
  2939  00F631  6C                 	db	108	;'l'
  2940  00F632  69                 	db	105	;'i'
  2941  00F633  73                 	db	115	;'s'
  2942  00F634  74                 	db	116	;'t'
  2943  00F635  20                 	db	32
  2944  00F636  6F                 	db	111	;'o'
  2945  00F637  66                 	db	102	;'f'
  2946  00F638  20                 	db	32
  2947  00F639  63                 	db	99	;'c'
  2948  00F63A  6F                 	db	111	;'o'
  2949  00F63B  6D                 	db	109	;'m'
  2950  00F63C  6D                 	db	109	;'m'
  2951  00F63D  61                 	db	97	;'a'
  2952  00F63E  6E                 	db	110	;'n'
  2953  00F63F  64                 	db	100	;'d'
  2954  00F640  73                 	db	115	;'s'
  2955  00F641  0A                 	db	10
  2956  00F642  0D                 	db	13
  2957  00F643  00                 	db	0
  2958  00F644                     STR_101:
  2959  00F644  49                 	db	73	;'I'
  2960  00F645  66                 	db	102	;'f'
  2961  00F646  20                 	db	32
  2962  00F647  79                 	db	121	;'y'
  2963  00F648  6F                 	db	111	;'o'
  2964  00F649  75                 	db	117	;'u'
  2965  00F64A  27                 	db	39
  2966  00F64B  64                 	db	100	;'d'
  2967  00F64C  20                 	db	32
  2968  00F64D  6C                 	db	108	;'l'
  2969  00F64E  69                 	db	105	;'i'
  2970  00F64F  6B                 	db	107	;'k'
  2971  00F650  65                 	db	101	;'e'
  2972  00F651  20                 	db	32
  2973  00F652  74                 	db	116	;'t'
  2974  00F653  6F                 	db	111	;'o'
  2975  00F654  20                 	db	32
  2976  00F655  63                 	db	99	;'c'
  2977  00F656  6F                 	db	111	;'o'
  2978  00F657  6D                 	db	109	;'m'
  2979  00F658  70                 	db	112	;'p'
  2980  00F659  6C                 	db	108	;'l'
  2981  00F65A  65                 	db	101	;'e'
  2982  00F65B  74                 	db	116	;'t'
  2983  00F65C  65                 	db	101	;'e'
  2984  00F65D  6C                 	db	108	;'l'
  2985  00F65E  79                 	db	121	;'y'
  2986  00F65F  20                 	db	32
  2987  00F660  65                 	db	101	;'e'
  2988  00F661  6E                 	db	110	;'n'
  2989  00F662  61                 	db	97	;'a'
  2990  00F663  62                 	db	98	;'b'
  2991  00F664  6C                 	db	108	;'l'
  2992  00F665  65                 	db	101	;'e'
  2993  00F666  20                 	db	32
  2994  00F667  6F                 	db	111	;'o'
  2995  00F668  72                 	db	114	;'r'
  2996  00F669  20                 	db	32
  2997  00F66A  64                 	db	100	;'d'
  2998  00F66B  69                 	db	105	;'i'
  2999  00F66C  73                 	db	115	;'s'
  3000  00F66D  61                 	db	97	;'a'
  3001  00F66E  62                 	db	98	;'b'
  3002  00F66F  6C                 	db	108	;'l'
  3003  00F670  65                 	db	101	;'e'
  3004  00F671  20                 	db	32
  3005  00F672  74                 	db	116	;'t'
  3006  00F673  68                 	db	104	;'h'
  3007  00F674  65                 	db	101	;'e'
  3008  00F675  20                 	db	32
  3009  00F676  6C                 	db	108	;'l'
  3010  00F677  6F                 	db	111	;'o'
  3011  00F678  61                 	db	97	;'a'
  3012  00F679  64                 	db	100	;'d'
  3013  00F67A  2C                 	db	44
  3014  00F67B  20                 	db	32
  3015  00F67C  64                 	db	100	;'d'
  3016  00F67D  69                 	db	105	;'i'
  3017  00F67E  73                 	db	115	;'s'
  3018  00F67F  61                 	db	97	;'a'
  3019  00F680  62                 	db	98	;'b'
  3020  00F681  6C                 	db	108	;'l'
  3021  00F682  65                 	db	101	;'e'
  3022  00F683  20                 	db	32
  3023  00F684  64                 	db	100	;'d'
  3024  00F685  69                 	db	105	;'i'
  3025  00F686  6D                 	db	109	;'m'
  3026  00F687  6D                 	db	109	;'m'
  3027  00F688  69                 	db	105	;'i'
  3028  00F689  6E                 	db	110	;'n'
  3029  00F68A  67                 	db	103	;'g'
  3030  00F68B  20                 	db	32
  3031  00F68C  61                 	db	97	;'a'
  3032  00F68D  6E                 	db	110	;'n'
  3033  00F68E  64                 	db	100	;'d'
  3034  00F68F  20                 	db	32
  3035  00F690  75                 	db	117	;'u'
  3036  00F691  73                 	db	115	;'s'
  3037  00F692  65                 	db	101	;'e'
  3038  00F693  20                 	db	32
  3039  00F694  72                 	db	114	;'r'
  3040  00F695  65                 	db	101	;'e'
  3041  00F696  73                 	db	115	;'s'
  3042  00F697  70                 	db	112	;'p'
  3043  00F698  65                 	db	101	;'e'
  3044  00F699  63                 	db	99	;'c'
  3045  00F69A  74                 	db	116	;'t'
  3046  00F69B  69                 	db	105	;'i'
  3047  00F69C  76                 	db	118	;'v'
  3048  00F69D  65                 	db	101	;'e'
  3049  00F69E  20                 	db	32
  3050  00F69F  63                 	db	99	;'c'
  3051  00F6A0  6F                 	db	111	;'o'
  3052  00F6A1  6D                 	db	109	;'m'
  3053  00F6A2  6D                 	db	109	;'m'
  3054  00F6A3  61                 	db	97	;'a'
  3055  00F6A4  6E                 	db	110	;'n'
  3056  00F6A5  64                 	db	100	;'d'
  3057  00F6A6  73                 	db	115	;'s'
  3058  00F6A7  0A                 	db	10
  3059  00F6A8  0D                 	db	13
  3060  00F6A9  00                 	db	0
  3061  00F6AA                     STR_100:
  3062  00F6AA  45                 	db	69	;'E'
  3063  00F6AB  52                 	db	82	;'R'
  3064  00F6AC  52                 	db	82	;'R'
  3065  00F6AD  4F                 	db	79	;'O'
  3066  00F6AE  52                 	db	82	;'R'
  3067  00F6AF  3A                 	db	58	;':'
  3068  00F6B0  20                 	db	32
  3069  00F6B1  50                 	db	80	;'P'
  3070  00F6B2  6C                 	db	108	;'l'
  3071  00F6B3  65                 	db	101	;'e'
  3072  00F6B4  61                 	db	97	;'a'
  3073  00F6B5  73                 	db	115	;'s'
  3074  00F6B6  65                 	db	101	;'e'
  3075  00F6B7  20                 	db	32
  3076  00F6B8  73                 	db	115	;'s'
  3077  00F6B9  65                 	db	101	;'e'
  3078  00F6BA  74                 	db	116	;'t'
  3079  00F6BB  20                 	db	32
  3080  00F6BC  64                 	db	100	;'d'
  3081  00F6BD  69                 	db	105	;'i'
  3082  00F6BE  6D                 	db	109	;'m'
  3083  00F6BF  6D                 	db	109	;'m'
  3084  00F6C0  69                 	db	105	;'i'
  3085  00F6C1  6E                 	db	110	;'n'
  3086  00F6C2  67                 	db	103	;'g'
  3087  00F6C3  20                 	db	32
  3088  00F6C4  70                 	db	112	;'p'
  3089  00F6C5  65                 	db	101	;'e'
  3090  00F6C6  72                 	db	114	;'r'
  3091  00F6C7  63                 	db	99	;'c'
  3092  00F6C8  65                 	db	101	;'e'
  3093  00F6C9  6E                 	db	110	;'n'
  3094  00F6CA  74                 	db	116	;'t'
  3095  00F6CB  61                 	db	97	;'a'
  3096  00F6CC  67                 	db	103	;'g'
  3097  00F6CD  65                 	db	101	;'e'
  3098  00F6CE  20                 	db	32
  3099  00F6CF  74                 	db	116	;'t'
  3100  00F6D0  6F                 	db	111	;'o'
  3101  00F6D1  20                 	db	32
  3102  00F6D2  61                 	db	97	;'a'
  3103  00F6D3  6E                 	db	110	;'n'
  3104  00F6D4  20                 	db	32
  3105  00F6D5  69                 	db	105	;'i'
  3106  00F6D6  6E                 	db	110	;'n'
  3107  00F6D7  74                 	db	116	;'t'
  3108  00F6D8  65                 	db	101	;'e'
  3109  00F6D9  67                 	db	103	;'g'
  3110  00F6DA  65                 	db	101	;'e'
  3111  00F6DB  72                 	db	114	;'r'
  3112  00F6DC  20                 	db	32
  3113  00F6DD  67                 	db	103	;'g'
  3114  00F6DE  72                 	db	114	;'r'
  3115  00F6DF  65                 	db	101	;'e'
  3116  00F6E0  61                 	db	97	;'a'
  3117  00F6E1  74                 	db	116	;'t'
  3118  00F6E2  65                 	db	101	;'e'
  3119  00F6E3  72                 	db	114	;'r'
  3120  00F6E4  20                 	db	32
  3121  00F6E5  74                 	db	116	;'t'
  3122  00F6E6  68                 	db	104	;'h'
  3123  00F6E7  61                 	db	97	;'a'
  3124  00F6E8  6E                 	db	110	;'n'
  3125  00F6E9  20                 	db	32
  3126  00F6EA  30                 	db	48	;'0'
  3127  00F6EB  20                 	db	32
  3128  00F6EC  61                 	db	97	;'a'
  3129  00F6ED  6E                 	db	110	;'n'
  3130  00F6EE  64                 	db	100	;'d'
  3131  00F6EF  20                 	db	32
  3132  00F6F0  6C                 	db	108	;'l'
  3133  00F6F1  65                 	db	101	;'e'
  3134  00F6F2  73                 	db	115	;'s'
  3135  00F6F3  73                 	db	115	;'s'
  3136  00F6F4  20                 	db	32
  3137  00F6F5  74                 	db	116	;'t'
  3138  00F6F6  68                 	db	104	;'h'
  3139  00F6F7  61                 	db	97	;'a'
  3140  00F6F8  6E                 	db	110	;'n'
  3141  00F6F9  20                 	db	32
  3142  00F6FA  31                 	db	49	;'1'
  3143  00F6FB  30                 	db	48	;'0'
  3144  00F6FC  30                 	db	48	;'0'
  3145  00F6FD  0A                 	db	10
  3146  00F6FE  0D                 	db	13
  3147  00F6FF  00                 	db	0
  3148  00F700                     STR_54:
  3149  00F700  46                 	db	70	;'F'
  3150  00F701  6C                 	db	108	;'l'
  3151  00F702  61                 	db	97	;'a'
  3152  00F703  73                 	db	115	;'s'
  3153  00F704  68                 	db	104	;'h'
  3154  00F705  20                 	db	32
  3155  00F706  6D                 	db	109	;'m'
  3156  00F707  65                 	db	101	;'e'
  3157  00F708  6D                 	db	109	;'m'
  3158  00F709  6F                 	db	111	;'o'
  3159  00F70A  72                 	db	114	;'r'
  3160  00F70B  79                 	db	121	;'y'
  3161  00F70C  20                 	db	32
  3162  00F70D  64                 	db	100	;'d'
  3163  00F70E  65                 	db	101	;'e'
  3164  00F70F  76                 	db	118	;'v'
  3165  00F710  69                 	db	105	;'i'
  3166  00F711  63                 	db	99	;'c'
  3167  00F712  65                 	db	101	;'e'
  3168  00F713  20                 	db	32
  3169  00F714  49                 	db	73	;'I'
  3170  00F715  44                 	db	68	;'D'
  3171  00F716  20                 	db	32
  3172  00F717  69                 	db	105	;'i'
  3173  00F718  73                 	db	115	;'s'
  3174  00F719  3A                 	db	58	;':'
  3175  00F71A  20                 	db	32
  3176  00F71B  30                 	db	48	;'0'
  3177  00F71C  78                 	db	120	;'x'
  3178  00F71D  25                 	db	37
  3179  00F71E  58                 	db	88	;'X'
  3180  00F71F  2E                 	db	46
  3181  00F720  20                 	db	32
  3182  00F721  54                 	db	84	;'T'
  3183  00F722  68                 	db	104	;'h'
  3184  00F723  69                 	db	105	;'i'
  3185  00F724  73                 	db	115	;'s'
  3186  00F725  20                 	db	32
  3187  00F726  63                 	db	99	;'c'
  3188  00F727  6F                 	db	111	;'o'
  3189  00F728  72                 	db	114	;'r'
  3190  00F729  72                 	db	114	;'r'
  3191  00F72A  65                 	db	101	;'e'
  3192  00F72B  73                 	db	115	;'s'
  3193  00F72C  70                 	db	112	;'p'
  3194  00F72D  6F                 	db	111	;'o'
  3195  00F72E  6E                 	db	110	;'n'
  3196  00F72F  64                 	db	100	;'d'
  3197  00F730  73                 	db	115	;'s'
  3198  00F731  20                 	db	32
  3199  00F732  74                 	db	116	;'t'
  3200  00F733  6F                 	db	111	;'o'
  3201  00F734  20                 	db	32
  3202  00F735  61                 	db	97	;'a'
  3203  00F736  20                 	db	32
  3204  00F737  64                 	db	100	;'d'
  3205  00F738  65                 	db	101	;'e'
  3206  00F739  76                 	db	118	;'v'
  3207  00F73A  69                 	db	105	;'i'
  3208  00F73B  63                 	db	99	;'c'
  3209  00F73C  65                 	db	101	;'e'
  3210  00F73D  20                 	db	32
  3211  00F73E  70                 	db	112	;'p'
  3212  00F73F  61                 	db	97	;'a'
  3213  00F740  72                 	db	114	;'r'
  3214  00F741  74                 	db	116	;'t'
  3215  00F742  20                 	db	32
  3216  00F743  6E                 	db	110	;'n'
  3217  00F744  75                 	db	117	;'u'
  3218  00F745  6D                 	db	109	;'m'
  3219  00F746  62                 	db	98	;'b'
  3220  00F747  65                 	db	101	;'e'
  3221  00F748  72                 	db	114	;'r'
  3222  00F749  20                 	db	32
  3223  00F74A  6F                 	db	111	;'o'
  3224  00F74B  66                 	db	102	;'f'
  3225  00F74C  20                 	db	32
  3226  00F74D  25                 	db	37
  3227  00F74E  73                 	db	115	;'s'
  3228  00F74F  0A                 	db	10
  3229  00F750  0D                 	db	13
  3230  00F751  00                 	db	0
  3231  00F752                     STR_105:
  3232  00F752  54                 	db	84	;'T'
  3233  00F753  68                 	db	104	;'h'
  3234  00F754  69                 	db	105	;'i'
  3235  00F755  73                 	db	115	;'s'
  3236  00F756  20                 	db	32
  3237  00F757  63                 	db	99	;'c'
  3238  00F758  6F                 	db	111	;'o'
  3239  00F759  72                 	db	114	;'r'
  3240  00F75A  72                 	db	114	;'r'
  3241  00F75B  65                 	db	101	;'e'
  3242  00F75C  73                 	db	115	;'s'
  3243  00F75D  70                 	db	112	;'p'
  3244  00F75E  6F                 	db	111	;'o'
  3245  00F75F  6E                 	db	110	;'n'
  3246  00F760  64                 	db	100	;'d'
  3247  00F761  73                 	db	115	;'s'
  3248  00F762  20                 	db	32
  3249  00F763  74                 	db	116	;'t'
  3250  00F764  6F                 	db	111	;'o'
  3251  00F765  20                 	db	32
  3252  00F766  61                 	db	97	;'a'
  3253  00F767  20                 	db	32
  3254  00F768  31                 	db	49	;'1'
  3255  00F769  36                 	db	54	;'6'
  3256  00F76A  20                 	db	32
  3257  00F76B  62                 	db	98	;'b'
  3258  00F76C  69                 	db	105	;'i'
  3259  00F76D  74                 	db	116	;'t'
  3260  00F76E  20                 	db	32
  3261  00F76F  74                 	db	116	;'t'
  3262  00F770  69                 	db	105	;'i'
  3263  00F771  6D                 	db	109	;'m'
  3264  00F772  65                 	db	101	;'e'
  3265  00F773  72                 	db	114	;'r'
  3266  00F774  20                 	db	32
  3267  00F775  70                 	db	112	;'p'
  3268  00F776  72                 	db	114	;'r'
  3269  00F777  65                 	db	101	;'e'
  3270  00F778  2D                 	db	45
  3271  00F779  6C                 	db	108	;'l'
  3272  00F77A  6F                 	db	111	;'o'
  3273  00F77B  61                 	db	97	;'a'
  3274  00F77C  64                 	db	100	;'d'
  3275  00F77D  20                 	db	32
  3276  00F77E  76                 	db	118	;'v'
  3277  00F77F  61                 	db	97	;'a'
  3278  00F780  6C                 	db	108	;'l'
  3279  00F781  75                 	db	117	;'u'
  3280  00F782  65                 	db	101	;'e'
  3281  00F783  20                 	db	32
  3282  00F784  6F                 	db	111	;'o'
  3283  00F785  66                 	db	102	;'f'
  3284  00F786  20                 	db	32
  3285  00F787  30                 	db	48	;'0'
  3286  00F788  78                 	db	120	;'x'
  3287  00F789  25                 	db	37
  3288  00F78A  58                 	db	88	;'X'
  3289  00F78B  20                 	db	32
  3290  00F78C  28                 	db	40
  3291  00F78D  25                 	db	37
  3292  00F78E  75                 	db	117	;'u'
  3293  00F78F  20                 	db	32
  3294  00F790  4C                 	db	76	;'L'
  3295  00F791  53                 	db	83	;'S'
  3296  00F792  42                 	db	66	;'B'
  3297  00F793  73                 	db	115	;'s'
  3298  00F794  29                 	db	41
  3299  00F795  20                 	db	32
  3300  00F796  0A                 	db	10
  3301  00F797  0D                 	db	13
  3302  00F798  00                 	db	0
  3303  00F799                     STR_58:
  3304  00F799  54                 	db	84	;'T'
  3305  00F79A  68                 	db	104	;'h'
  3306  00F79B  65                 	db	101	;'e'
  3307  00F79C  20                 	db	32
  3308  00F79D  66                 	db	102	;'f'
  3309  00F79E  6F                 	db	111	;'o'
  3310  00F79F  6C                 	db	108	;'l'
  3311  00F7A0  6C                 	db	108	;'l'
  3312  00F7A1  6F                 	db	111	;'o'
  3313  00F7A2  77                 	db	119	;'w'
  3314  00F7A3  69                 	db	105	;'i'
  3315  00F7A4  6E                 	db	110	;'n'
  3316  00F7A5  67                 	db	103	;'g'
  3317  00F7A6  20                 	db	32
  3318  00F7A7  55                 	db	85	;'U'
  3319  00F7A8  73                 	db	115	;'s'
  3320  00F7A9  65                 	db	101	;'e'
  3321  00F7AA  72                 	db	114	;'r'
  3322  00F7AB  20                 	db	32
  3323  00F7AC  49                 	db	73	;'I'
  3324  00F7AD  44                 	db	68	;'D'
  3325  00F7AE  73                 	db	115	;'s'
  3326  00F7AF  20                 	db	32
  3327  00F7B0  68                 	db	104	;'h'
  3328  00F7B1  61                 	db	97	;'a'
  3329  00F7B2  76                 	db	118	;'v'
  3330  00F7B3  65                 	db	101	;'e'
  3331  00F7B4  20                 	db	32
  3332  00F7B5  62                 	db	98	;'b'
  3333  00F7B6  65                 	db	101	;'e'
  3334  00F7B7  65                 	db	101	;'e'
  3335  00F7B8  6E                 	db	110	;'n'
  3336  00F7B9  20                 	db	32
  3337  00F7BA  72                 	db	114	;'r'
  3338  00F7BB  65                 	db	101	;'e'
  3339  00F7BC  74                 	db	116	;'t'
  3340  00F7BD  72                 	db	114	;'r'
  3341  00F7BE  69                 	db	105	;'i'
  3342  00F7BF  65                 	db	101	;'e'
  3343  00F7C0  76                 	db	118	;'v'
  3344  00F7C1  65                 	db	101	;'e'
  3345  00F7C2  64                 	db	100	;'d'
  3346  00F7C3  20                 	db	32
  3347  00F7C4  66                 	db	102	;'f'
  3348  00F7C5  72                 	db	114	;'r'
  3349  00F7C6  6F                 	db	111	;'o'
  3350  00F7C7  6D                 	db	109	;'m'
  3351  00F7C8  20                 	db	32
  3352  00F7C9  66                 	db	102	;'f'
  3353  00F7CA  6C                 	db	108	;'l'
  3354  00F7CB  61                 	db	97	;'a'
  3355  00F7CC  73                 	db	115	;'s'
  3356  00F7CD  68                 	db	104	;'h'
  3357  00F7CE  20                 	db	32
  3358  00F7CF  6D                 	db	109	;'m'
  3359  00F7D0  65                 	db	101	;'e'
  3360  00F7D1  6D                 	db	109	;'m'
  3361  00F7D2  6F                 	db	111	;'o'
  3362  00F7D3  72                 	db	114	;'r'
  3363  00F7D4  79                 	db	121	;'y'
  3364  00F7D5  3A                 	db	58	;':'
  3365  00F7D6  0A                 	db	10
  3366  00F7D7  0D                 	db	13
  3367  00F7D8  00                 	db	0
  3368  00F7D9                     STR_104:
  3369  00F7D9  43                 	db	67	;'C'
  3370  00F7DA  61                 	db	97	;'a'
  3371  00F7DB  6C                 	db	108	;'l'
  3372  00F7DC  63                 	db	99	;'c'
  3373  00F7DD  75                 	db	117	;'u'
  3374  00F7DE  6C                 	db	108	;'l'
  3375  00F7DF  61                 	db	97	;'a'
  3376  00F7E0  74                 	db	116	;'t'
  3377  00F7E1  65                 	db	101	;'e'
  3378  00F7E2  64                 	db	100	;'d'
  3379  00F7E3  20                 	db	32
  3380  00F7E4  54                 	db	84	;'T'
  3381  00F7E5  52                 	db	82	;'R'
  3382  00F7E6  49                 	db	73	;'I'
  3383  00F7E7  41                 	db	65	;'A'
  3384  00F7E8  43                 	db	67	;'C'
  3385  00F7E9  20                 	db	32
  3386  00F7EA  66                 	db	102	;'f'
  3387  00F7EB  69                 	db	105	;'i'
  3388  00F7EC  72                 	db	114	;'r'
  3389  00F7ED  69                 	db	105	;'i'
  3390  00F7EE  6E                 	db	110	;'n'
  3391  00F7EF  67                 	db	103	;'g'
  3392  00F7F0  20                 	db	32
  3393  00F7F1  61                 	db	97	;'a'
  3394  00F7F2  6E                 	db	110	;'n'
  3395  00F7F3  67                 	db	103	;'g'
  3396  00F7F4  6C                 	db	108	;'l'
  3397  00F7F5  65                 	db	101	;'e'
  3398  00F7F6  20                 	db	32
  3399  00F7F7  69                 	db	105	;'i'
  3400  00F7F8  73                 	db	115	;'s'
  3401  00F7F9  20                 	db	32
  3402  00F7FA  25                 	db	37
  3403  00F7FB  2E                 	db	46
  3404  00F7FC  33                 	db	51	;'3'
  3405  00F7FD  66                 	db	102	;'f'
  3406  00F7FE  20                 	db	32
  3407  00F7FF  72                 	db	114	;'r'
  3408  00F800  61                 	db	97	;'a'
  3409  00F801  64                 	db	100	;'d'
  3410  00F802  69                 	db	105	;'i'
  3411  00F803  61                 	db	97	;'a'
  3412  00F804  6E                 	db	110	;'n'
  3413  00F805  73                 	db	115	;'s'
  3414  00F806  20                 	db	32
  3415  00F807  28                 	db	40
  3416  00F808  25                 	db	37
  3417  00F809  2E                 	db	46
  3418  00F80A  33                 	db	51	;'3'
  3419  00F80B  66                 	db	102	;'f'
  3420  00F80C  20                 	db	32
  3421  00F80D  64                 	db	100	;'d'
  3422  00F80E  65                 	db	101	;'e'
  3423  00F80F  67                 	db	103	;'g'
  3424  00F810  72                 	db	114	;'r'
  3425  00F811  65                 	db	101	;'e'
  3426  00F812  65                 	db	101	;'e'
  3427  00F813  73                 	db	115	;'s'
  3428  00F814  29                 	db	41
  3429  00F815  0A                 	db	10
  3430  00F816  0D                 	db	13
  3431  00F817  00                 	db	0
  3432  00F818                     STR_107:
  3433  00F818  44                 	db	68	;'D'
  3434  00F819  65                 	db	101	;'e'
  3435  00F81A  76                 	db	118	;'v'
  3436  00F81B  69                 	db	105	;'i'
  3437  00F81C  63                 	db	99	;'c'
  3438  00F81D  65                 	db	101	;'e'
  3439  00F81E  20                 	db	32
  3440  00F81F  6F                 	db	111	;'o'
  3441  00F820  6E                 	db	110	;'n'
  3442  00F821  20                 	db	32
  3443  00F822  74                 	db	116	;'t'
  3444  00F823  69                 	db	105	;'i'
  3445  00F824  6D                 	db	109	;'m'
  3446  00F825  65                 	db	101	;'e'
  3447  00F826  20                 	db	32
  3448  00F827  73                 	db	115	;'s'
  3449  00F828  69                 	db	105	;'i'
  3450  00F829  6E                 	db	110	;'n'
  3451  00F82A  63                 	db	99	;'c'
  3452  00F82B  65                 	db	101	;'e'
  3453  00F82C  20                 	db	32
  3454  00F82D  6C                 	db	108	;'l'
  3455  00F82E  61                 	db	97	;'a'
  3456  00F82F  73                 	db	115	;'s'
  3457  00F830  74                 	db	116	;'t'
  3458  00F831  20                 	db	32
  3459  00F832  72                 	db	114	;'r'
  3460  00F833  65                 	db	101	;'e'
  3461  00F834  73                 	db	115	;'s'
  3462  00F835  65                 	db	101	;'e'
  3463  00F836  74                 	db	116	;'t'
  3464  00F837  20                 	db	32
  3465  00F838  63                 	db	99	;'c'
  3466  00F839  6F                 	db	111	;'o'
  3467  00F83A  6E                 	db	110	;'n'
  3468  00F83B  64                 	db	100	;'d'
  3469  00F83C  69                 	db	105	;'i'
  3470  00F83D  74                 	db	116	;'t'
  3471  00F83E  69                 	db	105	;'i'
  3472  00F83F  6F                 	db	111	;'o'
  3473  00F840  6E                 	db	110	;'n'
  3474  00F841  20                 	db	32
  3475  00F842  69                 	db	105	;'i'
  3476  00F843  73                 	db	115	;'s'
  3477  00F844  20                 	db	32
  3478  00F845  25                 	db	37
  3479  00F846  64                 	db	100	;'d'
  3480  00F847  20                 	db	32
  3481  00F848  73                 	db	115	;'s'
  3482  00F849  65                 	db	101	;'e'
  3483  00F84A  63                 	db	99	;'c'
  3484  00F84B  6F                 	db	111	;'o'
  3485  00F84C  6E                 	db	110	;'n'
  3486  00F84D  64                 	db	100	;'d'
  3487  00F84E  73                 	db	115	;'s'
  3488  00F84F  0A                 	db	10
  3489  00F850  0D                 	db	13
  3490  00F851  00                 	db	0
  3491  00F852                     STR_90:
  3492  00F852  4F                 	db	79	;'O'
  3493  00F853  75                 	db	117	;'u'
  3494  00F854  74                 	db	116	;'t'
  3495  00F855  70                 	db	112	;'p'
  3496  00F856  75                 	db	117	;'u'
  3497  00F857  74                 	db	116	;'t'
  3498  00F858  20                 	db	32
  3499  00F859  70                 	db	112	;'p'
  3500  00F85A  6F                 	db	111	;'o'
  3501  00F85B  77                 	db	119	;'w'
  3502  00F85C  65                 	db	101	;'e'
  3503  00F85D  72                 	db	114	;'r'
  3504  00F85E  20                 	db	32
  3505  00F85F  63                 	db	99	;'c'
  3506  00F860  61                 	db	97	;'a'
  3507  00F861  6C                 	db	108	;'l'
  3508  00F862  63                 	db	99	;'c'
  3509  00F863  75                 	db	117	;'u'
  3510  00F864  6C                 	db	108	;'l'
  3511  00F865  61                 	db	97	;'a'
  3512  00F866  74                 	db	116	;'t'
  3513  00F867  65                 	db	101	;'e'
  3514  00F868  64                 	db	100	;'d'
  3515  00F869  20                 	db	32
  3516  00F86A  61                 	db	97	;'a'
  3517  00F86B  73                 	db	115	;'s'
  3518  00F86C  20                 	db	32
  3519  00F86D  25                 	db	37
  3520  00F86E  2E                 	db	46
  3521  00F86F  33                 	db	51	;'3'
  3522  00F870  66                 	db	102	;'f'
  3523  00F871  20                 	db	32
  3524  00F872  57                 	db	87	;'W'
  3525  00F873  61                 	db	97	;'a'
  3526  00F874  74                 	db	116	;'t'
  3527  00F875  74                 	db	116	;'t'
  3528  00F876  73                 	db	115	;'s'
  3529  00F877  20                 	db	32
  3530  00F878  66                 	db	102	;'f'
  3531  00F879  72                 	db	114	;'r'
  3532  00F87A  6F                 	db	111	;'o'
  3533  00F87B  6D                 	db	109	;'m'
  3534  00F87C  20                 	db	32
  3535  00F87D  52                 	db	82	;'R'
  3536  00F87E  4D                 	db	77	;'M'
  3537  00F87F  53                 	db	83	;'S'
  3538  00F880  20                 	db	32
  3539  00F881  76                 	db	118	;'v'
  3540  00F882  61                 	db	97	;'a'
  3541  00F883  6C                 	db	108	;'l'
  3542  00F884  75                 	db	117	;'u'
  3543  00F885  65                 	db	101	;'e'
  3544  00F886  73                 	db	115	;'s'
  3545  00F887  0A                 	db	10
  3546  00F888  0D                 	db	13
  3547  00F889  00                 	db	0
  3548  00F88A                     STR_80:
  3549  00F88A  46                 	db	70	;'F'
  3550  00F88B  69                 	db	105	;'i'
  3551  00F88C  78                 	db	120	;'x'
  3552  00F88D  65                 	db	101	;'e'
  3553  00F88E  64                 	db	100	;'d'
  3554  00F88F  20                 	db	32
  3555  00F890  56                 	db	86	;'V'
  3556  00F891  6F                 	db	111	;'o'
  3557  00F892  6C                 	db	108	;'l'
  3558  00F893  74                 	db	116	;'t'
  3559  00F894  61                 	db	97	;'a'
  3560  00F895  67                 	db	103	;'g'
  3561  00F896  65                 	db	101	;'e'
  3562  00F897  20                 	db	32
  3563  00F898  52                 	db	82	;'R'
  3564  00F899  65                 	db	101	;'e'
  3565  00F89A  66                 	db	102	;'f'
  3566  00F89B  65                 	db	101	;'e'
  3567  00F89C  72                 	db	114	;'r'
  3568  00F89D  65                 	db	101	;'e'
  3569  00F89E  6E                 	db	110	;'n'
  3570  00F89F  63                 	db	99	;'c'
  3571  00F8A0  65                 	db	101	;'e'
  3572  00F8A1  20                 	db	32
  3573  00F8A2  42                 	db	66	;'B'
  3574  00F8A3  75                 	db	117	;'u'
  3575  00F8A4  66                 	db	102	;'f'
  3576  00F8A5  66                 	db	102	;'f'
  3577  00F8A6  65                 	db	101	;'e'
  3578  00F8A7  72                 	db	114	;'r'
  3579  00F8A8  20                 	db	32
  3580  00F8A9  31                 	db	49	;'1'
  3581  00F8AA  20                 	db	32
  3582  00F8AB  6D                 	db	109	;'m'
  3583  00F8AC  65                 	db	101	;'e'
  3584  00F8AD  61                 	db	97	;'a'
  3585  00F8AE  73                 	db	115	;'s'
  3586  00F8AF  75                 	db	117	;'u'
  3587  00F8B0  72                 	db	114	;'r'
  3588  00F8B1  65                 	db	101	;'e'
  3589  00F8B2  64                 	db	100	;'d'
  3590  00F8B3  20                 	db	32
  3591  00F8B4  61                 	db	97	;'a'
  3592  00F8B5  73                 	db	115	;'s'
  3593  00F8B6  20                 	db	32
  3594  00F8B7  25                 	db	37
  3595  00F8B8  66                 	db	102	;'f'
  3596  00F8B9  20                 	db	32
  3597  00F8BA  56                 	db	86	;'V'
  3598  00F8BB  6F                 	db	111	;'o'
  3599  00F8BC  6C                 	db	108	;'l'
  3600  00F8BD  74                 	db	116	;'t'
  3601  00F8BE  73                 	db	115	;'s'
  3602  00F8BF  0A                 	db	10
  3603  00F8C0  0D                 	db	13
  3604  00F8C1  00                 	db	0
  3605  00F8C2                     STR_109:
  3606  00F8C2  4C                 	db	76	;'L'
  3607  00F8C3  6F                 	db	111	;'o'
  3608  00F8C4  61                 	db	97	;'a'
  3609  00F8C5  64                 	db	100	;'d'
  3610  00F8C6  20                 	db	32
  3611  00F8C7  6F                 	db	111	;'o'
  3612  00F8C8  6E                 	db	110	;'n'
  3613  00F8C9  20                 	db	32
  3614  00F8CA  74                 	db	116	;'t'
  3615  00F8CB  69                 	db	105	;'i'
  3616  00F8CC  6D                 	db	109	;'m'
  3617  00F8CD  65                 	db	101	;'e'
  3618  00F8CE  20                 	db	32
  3619  00F8CF  73                 	db	115	;'s'
  3620  00F8D0  69                 	db	105	;'i'
  3621  00F8D1  6E                 	db	110	;'n'
  3622  00F8D2  63                 	db	99	;'c'
  3623  00F8D3  65                 	db	101	;'e'
  3624  00F8D4  20                 	db	32
  3625  00F8D5  6C                 	db	108	;'l'
  3626  00F8D6  61                 	db	97	;'a'
  3627  00F8D7  73                 	db	115	;'s'
  3628  00F8D8  74                 	db	116	;'t'
  3629  00F8D9  20                 	db	32
  3630  00F8DA  64                 	db	100	;'d'
  3631  00F8DB  65                 	db	101	;'e'
  3632  00F8DC  76                 	db	118	;'v'
  3633  00F8DD  69                 	db	105	;'i'
  3634  00F8DE  63                 	db	99	;'c'
  3635  00F8DF  65                 	db	101	;'e'
  3636  00F8E0  20                 	db	32
  3637  00F8E1  72                 	db	114	;'r'
  3638  00F8E2  65                 	db	101	;'e'
  3639  00F8E3  73                 	db	115	;'s'
  3640  00F8E4  65                 	db	101	;'e'
  3641  00F8E5  74                 	db	116	;'t'
  3642  00F8E6  20                 	db	32
  3643  00F8E7  69                 	db	105	;'i'
  3644  00F8E8  73                 	db	115	;'s'
  3645  00F8E9  20                 	db	32
  3646  00F8EA  25                 	db	37
  3647  00F8EB  64                 	db	100	;'d'
  3648  00F8EC  20                 	db	32
  3649  00F8ED  73                 	db	115	;'s'
  3650  00F8EE  65                 	db	101	;'e'
  3651  00F8EF  63                 	db	99	;'c'
  3652  00F8F0  6F                 	db	111	;'o'
  3653  00F8F1  6E                 	db	110	;'n'
  3654  00F8F2  64                 	db	100	;'d'
  3655  00F8F3  73                 	db	115	;'s'
  3656  00F8F4  0A                 	db	10
  3657  00F8F5  0D                 	db	13
  3658  00F8F6  00                 	db	0
  3659  00F8F7                     STR_48:
  3660  00F8F7  54                 	db	84	;'T'
  3661  00F8F8  68                 	db	104	;'h'
  3662  00F8F9  65                 	db	101	;'e'
  3663  00F8FA  20                 	db	32
  3664  00F8FB  63                 	db	99	;'c'
  3665  00F8FC  61                 	db	97	;'a'
  3666  00F8FD  75                 	db	117	;'u'
  3667  00F8FE  73                 	db	115	;'s'
  3668  00F8FF  65                 	db	101	;'e'
  3669  00F900  20                 	db	32
  3670  00F901  6F                 	db	111	;'o'
  3671  00F902  66                 	db	102	;'f'
  3672  00F903  20                 	db	32
  3673  00F904  74                 	db	116	;'t'
  3674  00F905  68                 	db	104	;'h'
  3675  00F906  65                 	db	101	;'e'
  3676  00F907  20                 	db	32
  3677  00F908  6D                 	db	109	;'m'
  3678  00F909  6F                 	db	111	;'o'
  3679  00F90A  73                 	db	115	;'s'
  3680  00F90B  74                 	db	116	;'t'
  3681  00F90C  20                 	db	32
  3682  00F90D  72                 	db	114	;'r'
  3683  00F90E  65                 	db	101	;'e'
  3684  00F90F  63                 	db	99	;'c'
  3685  00F910  65                 	db	101	;'e'
  3686  00F911  6E                 	db	110	;'n'
  3687  00F912  74                 	db	116	;'t'
  3688  00F913  20                 	db	32
  3689  00F914  64                 	db	100	;'d'
  3690  00F915  65                 	db	101	;'e'
  3691  00F916  76                 	db	118	;'v'
  3692  00F917  69                 	db	105	;'i'
  3693  00F918  63                 	db	99	;'c'
  3694  00F919  65                 	db	101	;'e'
  3695  00F91A  20                 	db	32
  3696  00F91B  72                 	db	114	;'r'
  3697  00F91C  65                 	db	101	;'e'
  3698  00F91D  73                 	db	115	;'s'
  3699  00F91E  65                 	db	101	;'e'
  3700  00F91F  74                 	db	116	;'t'
  3701  00F920  20                 	db	32
  3702  00F921  77                 	db	119	;'w'
  3703  00F922  61                 	db	97	;'a'
  3704  00F923  73                 	db	115	;'s'
  3705  00F924  3A                 	db	58	;':'
  3706  00F925  20                 	db	32
  3707  00F926  25                 	db	37
  3708  00F927  73                 	db	115	;'s'
  3709  00F928  0A                 	db	10
  3710  00F929  0D                 	db	13
  3711  00F92A  00                 	db	0
  3712  00F92B                     STR_59:
  3713  00F92B  20                 	db	32
  3714  00F92C  20                 	db	32
  3715  00F92D  20                 	db	32
  3716  00F92E  20                 	db	32
  3717  00F92F  55                 	db	85	;'U'
  3718  00F930  73                 	db	115	;'s'
  3719  00F931  65                 	db	101	;'e'
  3720  00F932  72                 	db	114	;'r'
  3721  00F933  20                 	db	32
  3722  00F934  49                 	db	73	;'I'
  3723  00F935  44                 	db	68	;'D'
  3724  00F936  20                 	db	32
  3725  00F937  57                 	db	87	;'W'
  3726  00F938  6F                 	db	111	;'o'
  3727  00F939  72                 	db	114	;'r'
  3728  00F93A  64                 	db	100	;'d'
  3729  00F93B  20                 	db	32
  3730  00F93C  25                 	db	37
  3731  00F93D  64                 	db	100	;'d'
  3732  00F93E  20                 	db	32
  3733  00F93F  28                 	db	40
  3734  00F940  46                 	db	70	;'F'
  3735  00F941  6C                 	db	108	;'l'
  3736  00F942  61                 	db	97	;'a'
  3737  00F943  73                 	db	115	;'s'
  3738  00F944  68                 	db	104	;'h'
  3739  00F945  20                 	db	32
  3740  00F946  61                 	db	97	;'a'
  3741  00F947  64                 	db	100	;'d'
  3742  00F948  64                 	db	100	;'d'
  3743  00F949  72                 	db	114	;'r'
  3744  00F94A  65                 	db	101	;'e'
  3745  00F94B  73                 	db	115	;'s'
  3746  00F94C  73                 	db	115	;'s'
  3747  00F94D  20                 	db	32
  3748  00F94E  30                 	db	48	;'0'
  3749  00F94F  78                 	db	120	;'x'
  3750  00F950  25                 	db	37
  3751  00F951  58                 	db	88	;'X'
  3752  00F952  29                 	db	41
  3753  00F953  3A                 	db	58	;':'
  3754  00F954  20                 	db	32
  3755  00F955  30                 	db	48	;'0'
  3756  00F956  78                 	db	120	;'x'
  3757  00F957  25                 	db	37
  3758  00F958  58                 	db	88	;'X'
  3759  00F959  0A                 	db	10
  3760  00F95A  0D                 	db	13
  3761  00F95B  00                 	db	0
  3762  00F95C                     STR_69:
  3763  00F95C  54                 	db	84	;'T'
  3764  00F95D  68                 	db	104	;'h'
  3765  00F95E  65                 	db	101	;'e'
  3766  00F95F  20                 	db	32
  3767  00F960  66                 	db	102	;'f'
  3768  00F961  6F                 	db	111	;'o'
  3769  00F962  6C                 	db	108	;'l'
  3770  00F963  6C                 	db	108	;'l'
  3771  00F964  6F                 	db	111	;'o'
  3772  00F965  77                 	db	119	;'w'
  3773  00F966  69                 	db	105	;'i'
  3774  00F967  6E                 	db	110	;'n'
  3775  00F968  67                 	db	103	;'g'
  3776  00F969  20                 	db	32
  3777  00F96A  63                 	db	99	;'c'
  3778  00F96B  68                 	db	104	;'h'
  3779  00F96C  61                 	db	97	;'a'
  3780  00F96D  6E                 	db	110	;'n'
  3781  00F96E  6E                 	db	110	;'n'
  3782  00F96F  65                 	db	101	;'e'
  3783  00F970  6C                 	db	108	;'l'
  3784  00F971  20                 	db	32
  3785  00F972  63                 	db	99	;'c'
  3786  00F973  61                 	db	97	;'a'
  3787  00F974  75                 	db	117	;'u'
  3788  00F975  73                 	db	115	;'s'
  3789  00F976  65                 	db	101	;'e'
  3790  00F977  64                 	db	100	;'d'
  3791  00F978  20                 	db	32
  3792  00F979  61                 	db	97	;'a'
  3793  00F97A  6E                 	db	110	;'n'
  3794  00F97B  20                 	db	32
  3795  00F97C  41                 	db	65	;'A'
  3796  00F97D  44                 	db	68	;'D'
  3797  00F97E  43                 	db	67	;'C'
  3798  00F97F  20                 	db	32
  3799  00F980  65                 	db	101	;'e'
  3800  00F981  72                 	db	114	;'r'
  3801  00F982  72                 	db	114	;'r'
  3802  00F983  6F                 	db	111	;'o'
  3803  00F984  72                 	db	114	;'r'
  3804  00F985  3A                 	db	58	;':'
  3805  00F986  20                 	db	32
  3806  00F987  25                 	db	37
  3807  00F988  73                 	db	115	;'s'
  3808  00F989  0A                 	db	10
  3809  00F98A  0D                 	db	13
  3810  00F98B  00                 	db	0
  3811  00F98C                     STR_52:
  3812  00F98C  4D                 	db	77	;'M'
  3813  00F98D  61                 	db	97	;'a'
  3814  00F98E  72                 	db	114	;'r'
  3815  00F98F  71                 	db	113	;'q'
  3816  00F990  75                 	db	117	;'u'
  3817  00F991  65                 	db	101	;'e'
  3818  00F992  74                 	db	116	;'t'
  3819  00F993  74                 	db	116	;'t'
  3820  00F994  65                 	db	101	;'e'
  3821  00F995  20                 	db	32
  3822  00F996  55                 	db	85	;'U'
  3823  00F997  6E                 	db	110	;'n'
  3824  00F998  69                 	db	105	;'i'
  3825  00F999  76                 	db	118	;'v'
  3826  00F99A  65                 	db	101	;'e'
  3827  00F99B  72                 	db	114	;'r'
  3828  00F99C  73                 	db	115	;'s'
  3829  00F99D  69                 	db	105	;'i'
  3830  00F99E  74                 	db	116	;'t'
  3831  00F99F  79                 	db	121	;'y'
  3832  00F9A0  20                 	db	32
  3833  00F9A1  45                 	db	69	;'E'
  3834  00F9A2  4C                 	db	76	;'L'
  3835  00F9A3  45                 	db	69	;'E'
  3836  00F9A4  4E                 	db	78	;'N'
  3837  00F9A5  20                 	db	32
  3838  00F9A6  33                 	db	51	;'3'
  3839  00F9A7  30                 	db	48	;'0'
  3840  00F9A8  33                 	db	51	;'3'
  3841  00F9A9  35                 	db	53	;'5'
  3842  00F9AA  20                 	db	32
  3843  00F9AB  46                 	db	70	;'F'
  3844  00F9AC  69                 	db	105	;'i'
  3845  00F9AD  6E                 	db	110	;'n'
  3846  00F9AE  61                 	db	97	;'a'
  3847  00F9AF  6C                 	db	108	;'l'
  3848  00F9B0  20                 	db	32
  3849  00F9B1  50                 	db	80	;'P'
  3850  00F9B2  72                 	db	114	;'r'
  3851  00F9B3  6F                 	db	111	;'o'
  3852  00F9B4  6A                 	db	106	;'j'
  3853  00F9B5  65                 	db	101	;'e'
  3854  00F9B6  63                 	db	99	;'c'
  3855  00F9B7  74                 	db	116	;'t'
  3856  00F9B8  0A                 	db	10
  3857  00F9B9  0D                 	db	13
  3858  00F9BA  00                 	db	0
  3859  00F9BB                     STR_102:
  3860  00F9BB  45                 	db	69	;'E'
  3861  00F9BC  6E                 	db	110	;'n'
  3862  00F9BD  74                 	db	116	;'t'
  3863  00F9BE  65                 	db	101	;'e'
  3864  00F9BF  72                 	db	114	;'r'
  3865  00F9C0  20                 	db	32
  3866  00F9C1  27                 	db	39
  3867  00F9C2  48                 	db	72	;'H'
  3868  00F9C3  65                 	db	101	;'e'
  3869  00F9C4  6C                 	db	108	;'l'
  3870  00F9C5  70                 	db	112	;'p'
  3871  00F9C6  27                 	db	39
  3872  00F9C7  20                 	db	32
  3873  00F9C8  66                 	db	102	;'f'
  3874  00F9C9  6F                 	db	111	;'o'
  3875  00F9CA  72                 	db	114	;'r'
  3876  00F9CB  20                 	db	32
  3877  00F9CC  6C                 	db	108	;'l'
  3878  00F9CD  69                 	db	105	;'i'
  3879  00F9CE  73                 	db	115	;'s'
  3880  00F9CF  74                 	db	116	;'t'
  3881  00F9D0  20                 	db	32
  3882  00F9D1  6F                 	db	111	;'o'
  3883  00F9D2  66                 	db	102	;'f'
  3884  00F9D3  20                 	db	32
  3885  00F9D4  61                 	db	97	;'a'
  3886  00F9D5  76                 	db	118	;'v'
  3887  00F9D6  61                 	db	97	;'a'
  3888  00F9D7  69                 	db	105	;'i'
  3889  00F9D8  6C                 	db	108	;'l'
  3890  00F9D9  61                 	db	97	;'a'
  3891  00F9DA  62                 	db	98	;'b'
  3892  00F9DB  6C                 	db	108	;'l'
  3893  00F9DC  65                 	db	101	;'e'
  3894  00F9DD  20                 	db	32
  3895  00F9DE  63                 	db	99	;'c'
  3896  00F9DF  6F                 	db	111	;'o'
  3897  00F9E0  6D                 	db	109	;'m'
  3898  00F9E1  6D                 	db	109	;'m'
  3899  00F9E2  61                 	db	97	;'a'
  3900  00F9E3  6E                 	db	110	;'n'
  3901  00F9E4  64                 	db	100	;'d'
  3902  00F9E5  73                 	db	115	;'s'
  3903  00F9E6  0A                 	db	10
  3904  00F9E7  0D                 	db	13
  3905  00F9E8  00                 	db	0
  3906  00F9E9                     STR_96:
  3907  00F9E9  4C                 	db	76	;'L'
  3908  00F9EA  6F                 	db	111	;'o'
  3909  00F9EB  61                 	db	97	;'a'
  3910  00F9EC  64                 	db	100	;'d'
  3911  00F9ED  20                 	db	32
  3912  00F9EE  68                 	db	104	;'h'
  3913  00F9EF  61                 	db	97	;'a'
  3914  00F9F0  73                 	db	115	;'s'
  3915  00F9F1  20                 	db	32
  3916  00F9F2  62                 	db	98	;'b'
  3917  00F9F3  65                 	db	101	;'e'
  3918  00F9F4  65                 	db	101	;'e'
  3919  00F9F5  6E                 	db	110	;'n'
  3920  00F9F6  20                 	db	32
  3921  00F9F7  65                 	db	101	;'e'
  3922  00F9F8  6E                 	db	110	;'n'
  3923  00F9F9  61                 	db	97	;'a'
  3924  00F9FA  62                 	db	98	;'b'
  3925  00F9FB  6C                 	db	108	;'l'
  3926  00F9FC  65                 	db	101	;'e'
  3927  00F9FD  64                 	db	100	;'d'
  3928  00F9FE  2C                 	db	44
  3929  00F9FF  20                 	db	32
  3930  00FA00  64                 	db	100	;'d'
  3931  00FA01  69                 	db	105	;'i'
  3932  00FA02  6D                 	db	109	;'m'
  3933  00FA03  6D                 	db	109	;'m'
  3934  00FA04  69                 	db	105	;'i'
  3935  00FA05  6E                 	db	110	;'n'
  3936  00FA06  67                 	db	103	;'g'
  3937  00FA07  20                 	db	32
  3938  00FA08  64                 	db	100	;'d'
  3939  00FA09  69                 	db	105	;'i'
  3940  00FA0A  73                 	db	115	;'s'
  3941  00FA0B  61                 	db	97	;'a'
  3942  00FA0C  62                 	db	98	;'b'
  3943  00FA0D  6C                 	db	108	;'l'
  3944  00FA0E  65                 	db	101	;'e'
  3945  00FA0F  64                 	db	100	;'d'
  3946  00FA10  0A                 	db	10
  3947  00FA11  0D                 	db	13
  3948  00FA12  00                 	db	0
  3949  00FA13                     STR_126:
  3950  00FA13  57                 	db	87	;'W'
  3951  00FA14  69                 	db	105	;'i'
  3952  00FA15  6E                 	db	110	;'n'
  3953  00FA16  64                 	db	100	;'d'
  3954  00FA17  6F                 	db	111	;'o'
  3955  00FA18  77                 	db	119	;'w'
  3956  00FA19  65                 	db	101	;'e'
  3957  00FA1A  64                 	db	100	;'d'
  3958  00FA1B  20                 	db	32
  3959  00FA1C  57                 	db	87	;'W'
  3960  00FA1D  61                 	db	97	;'a'
  3961  00FA1E  74                 	db	116	;'t'
  3962  00FA1F  63                 	db	99	;'c'
  3963  00FA20  68                 	db	104	;'h'
  3964  00FA21  20                 	db	32
  3965  00FA22  44                 	db	68	;'D'
  3966  00FA23  6F                 	db	111	;'o'
  3967  00FA24  67                 	db	103	;'g'
  3968  00FA25  20                 	db	32
  3969  00FA26  54                 	db	84	;'T'
  3970  00FA27  69                 	db	105	;'i'
  3971  00FA28  6D                 	db	109	;'m'
  3972  00FA29  65                 	db	101	;'e'
  3973  00FA2A  72                 	db	114	;'r'
  3974  00FA2B  20                 	db	32
  3975  00FA2C  56                 	db	86	;'V'
  3976  00FA2D  69                 	db	105	;'i'
  3977  00FA2E  6F                 	db	111	;'o'
  3978  00FA2F  6C                 	db	108	;'l'
  3979  00FA30  61                 	db	97	;'a'
  3980  00FA31  74                 	db	116	;'t'
  3981  00FA32  69                 	db	105	;'i'
  3982  00FA33  6F                 	db	111	;'o'
  3983  00FA34  6E                 	db	110	;'n'
  3984  00FA35  20                 	db	32
  3985  00FA36  52                 	db	82	;'R'
  3986  00FA37  65                 	db	101	;'e'
  3987  00FA38  73                 	db	115	;'s'
  3988  00FA39  65                 	db	101	;'e'
  3989  00FA3A  74                 	db	116	;'t'
  3990  00FA3B  00                 	db	0
  3991  00FA3C                     STR_94:
  3992  00FA3C  54                 	db	84	;'T'
  3993  00FA3D  52                 	db	82	;'R'
  3994  00FA3E  49                 	db	73	;'I'
  3995  00FA3F  41                 	db	65	;'A'
  3996  00FA40  43                 	db	67	;'C'
  3997  00FA41  20                 	db	32
  3998  00FA42  6F                 	db	111	;'o'
  3999  00FA43  75                 	db	117	;'u'
  4000  00FA44  74                 	db	116	;'t'
  4001  00FA45  70                 	db	112	;'p'
  4002  00FA46  75                 	db	117	;'u'
  4003  00FA47  74                 	db	116	;'t'
  4004  00FA48  20                 	db	32
  4005  00FA49  64                 	db	100	;'d'
  4006  00FA4A  69                 	db	105	;'i'
  4007  00FA4B  6D                 	db	109	;'m'
  4008  00FA4C  6D                 	db	109	;'m'
  4009  00FA4D  69                 	db	105	;'i'
  4010  00FA4E  6E                 	db	110	;'n'
  4011  00FA4F  67                 	db	103	;'g'
  4012  00FA50  20                 	db	32
  4013  00FA51  68                 	db	104	;'h'
  4014  00FA52  61                 	db	97	;'a'
  4015  00FA53  73                 	db	115	;'s'
  4016  00FA54  20                 	db	32
  4017  00FA55  62                 	db	98	;'b'
  4018  00FA56  65                 	db	101	;'e'
  4019  00FA57  65                 	db	101	;'e'
  4020  00FA58  6E                 	db	110	;'n'
  4021  00FA59  20                 	db	32
  4022  00FA5A  64                 	db	100	;'d'
  4023  00FA5B  69                 	db	105	;'i'
  4024  00FA5C  73                 	db	115	;'s'
  4025  00FA5D  61                 	db	97	;'a'
  4026  00FA5E  62                 	db	98	;'b'
  4027  00FA5F  6C                 	db	108	;'l'
  4028  00FA60  65                 	db	101	;'e'
  4029  00FA61  64                 	db	100	;'d'
  4030  00FA62  0A                 	db	10
  4031  00FA63  0D                 	db	13
  4032  00FA64  00                 	db	0
  4033  00FA65                     STR_92:
  4034  00FA65  54                 	db	84	;'T'
  4035  00FA66  52                 	db	82	;'R'
  4036  00FA67  49                 	db	73	;'I'
  4037  00FA68  41                 	db	65	;'A'
  4038  00FA69  43                 	db	67	;'C'
  4039  00FA6A  20                 	db	32
  4040  00FA6B  6F                 	db	111	;'o'
  4041  00FA6C  75                 	db	117	;'u'
  4042  00FA6D  74                 	db	116	;'t'
  4043  00FA6E  70                 	db	112	;'p'
  4044  00FA6F  75                 	db	117	;'u'
  4045  00FA70  74                 	db	116	;'t'
  4046  00FA71  20                 	db	32
  4047  00FA72  64                 	db	100	;'d'
  4048  00FA73  69                 	db	105	;'i'
  4049  00FA74  6D                 	db	109	;'m'
  4050  00FA75  6D                 	db	109	;'m'
  4051  00FA76  69                 	db	105	;'i'
  4052  00FA77  6E                 	db	110	;'n'
  4053  00FA78  67                 	db	103	;'g'
  4054  00FA79  20                 	db	32
  4055  00FA7A  68                 	db	104	;'h'
  4056  00FA7B  61                 	db	97	;'a'
  4057  00FA7C  73                 	db	115	;'s'
  4058  00FA7D  20                 	db	32
  4059  00FA7E  62                 	db	98	;'b'
  4060  00FA7F  65                 	db	101	;'e'
  4061  00FA80  65                 	db	101	;'e'
  4062  00FA81  6E                 	db	110	;'n'
  4063  00FA82  20                 	db	32
  4064  00FA83  65                 	db	101	;'e'
  4065  00FA84  6E                 	db	110	;'n'
  4066  00FA85  61                 	db	97	;'a'
  4067  00FA86  62                 	db	98	;'b'
  4068  00FA87  6C                 	db	108	;'l'
  4069  00FA88  65                 	db	101	;'e'
  4070  00FA89  64                 	db	100	;'d'
  4071  00FA8A  0A                 	db	10
  4072  00FA8B  0D                 	db	13
  4073  00FA8C  00                 	db	0
  4074  00FA8D                     STR_114:
  4075  00FA8D  4D                 	db	77	;'M'
  4076  00FA8E  65                 	db	101	;'e'
  4077  00FA8F  61                 	db	97	;'a'
  4078  00FA90  73                 	db	115	;'s'
  4079  00FA91  75                 	db	117	;'u'
  4080  00FA92  72                 	db	114	;'r'
  4081  00FA93  65                 	db	101	;'e'
  4082  00FA94  6D                 	db	109	;'m'
  4083  00FA95  65                 	db	101	;'e'
  4084  00FA96  6E                 	db	110	;'n'
  4085  00FA97  74                 	db	116	;'t'
  4086  00FA98  20                 	db	32
  4087  00FA99  72                 	db	114	;'r'
  4088  00FA9A  65                 	db	101	;'e'
  4089  00FA9B  73                 	db	115	;'s'
  4090  00FA9C  70                 	db	112	;'p'
  4091  00FA9D  6F                 	db	111	;'o'
  4092  00FA9E  6E                 	db	110	;'n'
  4093  00FA9F  73                 	db	115	;'s'
  4094  00FAA0  65                 	db	101	;'e'
  4095  00FAA1  73                 	db	115	;'s'
  4096  00FAA2  20                 	db	32
  4097  00FAA3  61                 	db	97	;'a'
  4098  00FAA4  70                 	db	112	;'p'
  4099  00FAA5  70                 	db	112	;'p'
  4100  00FAA6  65                 	db	101	;'e'
  4101  00FAA7  61                 	db	97	;'a'
  4102  00FAA8  72                 	db	114	;'r'
  4103  00FAA9  20                 	db	32
  4104  00FAAA  69                 	db	105	;'i'
  4105  00FAAB  6E                 	db	110	;'n'
  4106  00FAAC  20                 	db	32
  4107  00FAAD  63                 	db	99	;'c'
  4108  00FAAE  79                 	db	121	;'y'
  4109  00FAAF  61                 	db	97	;'a'
  4110  00FAB0  6E                 	db	110	;'n'
  4111  00FAB1  0A                 	db	10
  4112  00FAB2  0D                 	db	13
  4113  00FAB3  00                 	db	0
  4114  00FAB4                     STR_82:
  4115  00FAB4  41                 	db	65	;'A'
  4116  00FAB5  56                 	db	86	;'V'
  4117  00FAB6  53                 	db	83	;'S'
  4118  00FAB7  53                 	db	83	;'S'
  4119  00FAB8  20                 	db	32
  4120  00FAB9  6D                 	db	109	;'m'
  4121  00FABA  65                 	db	101	;'e'
  4122  00FABB  61                 	db	97	;'a'
  4123  00FABC  73                 	db	115	;'s'
  4124  00FABD  75                 	db	117	;'u'
  4125  00FABE  72                 	db	114	;'r'
  4126  00FABF  65                 	db	101	;'e'
  4127  00FAC0  64                 	db	100	;'d'
  4128  00FAC1  20                 	db	32
  4129  00FAC2  61                 	db	97	;'a'
  4130  00FAC3  73                 	db	115	;'s'
  4131  00FAC4  20                 	db	32
  4132  00FAC5  25                 	db	37
  4133  00FAC6  2E                 	db	46
  4134  00FAC7  33                 	db	51	;'3'
  4135  00FAC8  66                 	db	102	;'f'
  4136  00FAC9  20                 	db	32
  4137  00FACA  56                 	db	86	;'V'
  4138  00FACB  6F                 	db	111	;'o'
  4139  00FACC  6C                 	db	108	;'l'
  4140  00FACD  74                 	db	116	;'t'
  4141  00FACE  73                 	db	115	;'s'
  4142  00FACF  20                 	db	32
  4143  00FAD0  62                 	db	98	;'b'
  4144  00FAD1  79                 	db	121	;'y'
  4145  00FAD2  20                 	db	32
  4146  00FAD3  41                 	db	65	;'A'
  4147  00FAD4  44                 	db	68	;'D'
  4148  00FAD5  43                 	db	67	;'C'
  4149  00FAD6  0A                 	db	10
  4150  00FAD7  0D                 	db	13
  4151  00FAD8  00                 	db	0
  4152  00FAD9                     STR_113:
  4153  00FAD9  53                 	db	83	;'S'
  4154  00FADA  79                 	db	121	;'y'
  4155  00FADB  73                 	db	115	;'s'
  4156  00FADC  74                 	db	116	;'t'
  4157  00FADD  65                 	db	101	;'e'
  4158  00FADE  6D                 	db	109	;'m'
  4159  00FADF  20                 	db	32
  4160  00FAE0  70                 	db	112	;'p'
  4161  00FAE1  61                 	db	97	;'a'
  4162  00FAE2  72                 	db	114	;'r'
  4163  00FAE3  61                 	db	97	;'a'
  4164  00FAE4  6D                 	db	109	;'m'
  4165  00FAE5  65                 	db	101	;'e'
  4166  00FAE6  74                 	db	116	;'t'
  4167  00FAE7  65                 	db	101	;'e'
  4168  00FAE8  72                 	db	114	;'r'
  4169  00FAE9  73                 	db	115	;'s'
  4170  00FAEA  20                 	db	32
  4171  00FAEB  61                 	db	97	;'a'
  4172  00FAEC  70                 	db	112	;'p'
  4173  00FAED  70                 	db	112	;'p'
  4174  00FAEE  65                 	db	101	;'e'
  4175  00FAEF  61                 	db	97	;'a'
  4176  00FAF0  72                 	db	114	;'r'
  4177  00FAF1  73                 	db	115	;'s'
  4178  00FAF2  20                 	db	32
  4179  00FAF3  69                 	db	105	;'i'
  4180  00FAF4  6E                 	db	110	;'n'
  4181  00FAF5  20                 	db	32
  4182  00FAF6  67                 	db	103	;'g'
  4183  00FAF7  72                 	db	114	;'r'
  4184  00FAF8  65                 	db	101	;'e'
  4185  00FAF9  65                 	db	101	;'e'
  4186  00FAFA  6E                 	db	110	;'n'
  4187  00FAFB  0A                 	db	10
  4188  00FAFC  0D                 	db	13
  4189  00FAFD  00                 	db	0
  4190  00FAFE                     STR_103:
  4191  00FAFE  44                 	db	68	;'D'
  4192  00FAFF  69                 	db	105	;'i'
  4193  00FB00  6D                 	db	109	;'m'
  4194  00FB01  6D                 	db	109	;'m'
  4195  00FB02  69                 	db	105	;'i'
  4196  00FB03  6E                 	db	110	;'n'
  4197  00FB04  67                 	db	103	;'g'
  4198  00FB05  20                 	db	32
  4199  00FB06  68                 	db	104	;'h'
  4200  00FB07  61                 	db	97	;'a'
  4201  00FB08  73                 	db	115	;'s'
  4202  00FB09  20                 	db	32
  4203  00FB0A  62                 	db	98	;'b'
  4204  00FB0B  65                 	db	101	;'e'
  4205  00FB0C  65                 	db	101	;'e'
  4206  00FB0D  6E                 	db	110	;'n'
  4207  00FB0E  20                 	db	32
  4208  00FB0F  73                 	db	115	;'s'
  4209  00FB10  65                 	db	101	;'e'
  4210  00FB11  74                 	db	116	;'t'
  4211  00FB12  20                 	db	32
  4212  00FB13  74                 	db	116	;'t'
  4213  00FB14  6F                 	db	111	;'o'
  4214  00FB15  20                 	db	32
  4215  00FB16  25                 	db	37
  4216  00FB17  64                 	db	100	;'d'
  4217  00FB18  20                 	db	32
  4218  00FB19  70                 	db	112	;'p'
  4219  00FB1A  65                 	db	101	;'e'
  4220  00FB1B  72                 	db	114	;'r'
  4221  00FB1C  63                 	db	99	;'c'
  4222  00FB1D  65                 	db	101	;'e'
  4223  00FB1E  6E                 	db	110	;'n'
  4224  00FB1F  74                 	db	116	;'t'
  4225  00FB20  0A                 	db	10
  4226  00FB21  0D                 	db	13
  4227  00FB22  00                 	db	0
  4228  00FB23                     STR_74:
  4229  00FB23  2B                 	db	43
  4230  00FB24  33                 	db	51	;'3'
  4231  00FB25  2E                 	db	46
  4232  00FB26  33                 	db	51	;'3'
  4233  00FB27  56                 	db	86	;'V'
  4234  00FB28  20                 	db	32
  4235  00FB29  72                 	db	114	;'r'
  4236  00FB2A  61                 	db	97	;'a'
  4237  00FB2B  69                 	db	105	;'i'
  4238  00FB2C  6C                 	db	108	;'l'
  4239  00FB2D  20                 	db	32
  4240  00FB2E  6D                 	db	109	;'m'
  4241  00FB2F  65                 	db	101	;'e'
  4242  00FB30  61                 	db	97	;'a'
  4243  00FB31  73                 	db	115	;'s'
  4244  00FB32  75                 	db	117	;'u'
  4245  00FB33  72                 	db	114	;'r'
  4246  00FB34  65                 	db	101	;'e'
  4247  00FB35  64                 	db	100	;'d'
  4248  00FB36  20                 	db	32
  4249  00FB37  61                 	db	97	;'a'
  4250  00FB38  73                 	db	115	;'s'
  4251  00FB39  20                 	db	32
  4252  00FB3A  2B                 	db	43
  4253  00FB3B  25                 	db	37
  4254  00FB3C  66                 	db	102	;'f'
  4255  00FB3D  20                 	db	32
  4256  00FB3E  56                 	db	86	;'V'
  4257  00FB3F  6F                 	db	111	;'o'
  4258  00FB40  6C                 	db	108	;'l'
  4259  00FB41  74                 	db	116	;'t'
  4260  00FB42  73                 	db	115	;'s'
  4261  00FB43  0A                 	db	10
  4262  00FB44  0D                 	db	13
  4263  00FB45  00                 	db	0
  4264  00FB46                     STR_78:
  4265  00FB46  44                 	db	68	;'D'
  4266  00FB47  69                 	db	105	;'i'
  4267  00FB48  65                 	db	101	;'e'
  4268  00FB49  20                 	db	32
  4269  00FB4A  54                 	db	84	;'T'
  4270  00FB4B  65                 	db	101	;'e'
  4271  00FB4C  6D                 	db	109	;'m'
  4272  00FB4D  70                 	db	112	;'p'
  4273  00FB4E  65                 	db	101	;'e'
  4274  00FB4F  72                 	db	114	;'r'
  4275  00FB50  61                 	db	97	;'a'
  4276  00FB51  74                 	db	116	;'t'
  4277  00FB52  75                 	db	117	;'u'
  4278  00FB53  72                 	db	114	;'r'
  4279  00FB54  65                 	db	101	;'e'
  4280  00FB55  20                 	db	32
  4281  00FB56  6D                 	db	109	;'m'
  4282  00FB57  65                 	db	101	;'e'
  4283  00FB58  61                 	db	97	;'a'
  4284  00FB59  73                 	db	115	;'s'
  4285  00FB5A  75                 	db	117	;'u'
  4286  00FB5B  72                 	db	114	;'r'
  4287  00FB5C  65                 	db	101	;'e'
  4288  00FB5D  64                 	db	100	;'d'
  4289  00FB5E  20                 	db	32
  4290  00FB5F  61                 	db	97	;'a'
  4291  00FB60  73                 	db	115	;'s'
  4292  00FB61  20                 	db	32
  4293  00FB62  25                 	db	37
  4294  00FB63  66                 	db	102	;'f'
  4295  00FB64  43                 	db	67	;'C'
  4296  00FB65  0A                 	db	10
  4297  00FB66  0D                 	db	13
  4298  00FB67  00                 	db	0
  4299  00FB68                     STR_56:
  4300  00FB68  46                 	db	70	;'F'
  4301  00FB69  6C                 	db	108	;'l'
  4302  00FB6A  61                 	db	97	;'a'
  4303  00FB6B  73                 	db	115	;'s'
  4304  00FB6C  68                 	db	104	;'h'
  4305  00FB6D  20                 	db	32
  4306  00FB6E  6D                 	db	109	;'m'
  4307  00FB6F  65                 	db	101	;'e'
  4308  00FB70  6D                 	db	109	;'m'
  4309  00FB71  6F                 	db	111	;'o'
  4310  00FB72  72                 	db	114	;'r'
  4311  00FB73  79                 	db	121	;'y'
  4312  00FB74  20                 	db	32
  4313  00FB75  72                 	db	114	;'r'
  4314  00FB76  65                 	db	101	;'e'
  4315  00FB77  76                 	db	118	;'v'
  4316  00FB78  69                 	db	105	;'i'
  4317  00FB79  73                 	db	115	;'s'
  4318  00FB7A  69                 	db	105	;'i'
  4319  00FB7B  6F                 	db	111	;'o'
  4320  00FB7C  6E                 	db	110	;'n'
  4321  00FB7D  20                 	db	32
  4322  00FB7E  49                 	db	73	;'I'
  4323  00FB7F  44                 	db	68	;'D'
  4324  00FB80  20                 	db	32
  4325  00FB81  69                 	db	105	;'i'
  4326  00FB82  73                 	db	115	;'s'
  4327  00FB83  3A                 	db	58	;':'
  4328  00FB84  20                 	db	32
  4329  00FB85  25                 	db	37
  4330  00FB86  73                 	db	115	;'s'
  4331  00FB87  0A                 	db	10
  4332  00FB88  0D                 	db	13
  4333  00FB89  00                 	db	0
  4334  00FB8A                     STR_86:
  4335  00FB8A  52                 	db	82	;'R'
  4336  00FB8B  4D                 	db	77	;'M'
  4337  00FB8C  53                 	db	83	;'S'
  4338  00FB8D  20                 	db	32
  4339  00FB8E  4F                 	db	79	;'O'
  4340  00FB8F  75                 	db	117	;'u'
  4341  00FB90  74                 	db	116	;'t'
  4342  00FB91  70                 	db	112	;'p'
  4343  00FB92  75                 	db	117	;'u'
  4344  00FB93  74                 	db	116	;'t'
  4345  00FB94  20                 	db	32
  4346  00FB95  43                 	db	67	;'C'
  4347  00FB96  75                 	db	117	;'u'
  4348  00FB97  72                 	db	114	;'r'
  4349  00FB98  72                 	db	114	;'r'
  4350  00FB99  65                 	db	101	;'e'
  4351  00FB9A  6E                 	db	110	;'n'
  4352  00FB9B  74                 	db	116	;'t'
  4353  00FB9C  20                 	db	32
  4354  00FB9D  69                 	db	105	;'i'
  4355  00FB9E  73                 	db	115	;'s'
  4356  00FB9F  20                 	db	32
  4357  00FBA0  25                 	db	37
  4358  00FBA1  2E                 	db	46
  4359  00FBA2  33                 	db	51	;'3'
  4360  00FBA3  66                 	db	102	;'f'
  4361  00FBA4  20                 	db	32
  4362  00FBA5  41                 	db	65	;'A'
  4363  00FBA6  72                 	db	114	;'r'
  4364  00FBA7  6D                 	db	109	;'m'
  4365  00FBA8  73                 	db	115	;'s'
  4366  00FBA9  0A                 	db	10
  4367  00FBAA  0D                 	db	13
  4368  00FBAB  00                 	db	0
  4369  00FBAC                     STR_88:
  4370  00FBAC  52                 	db	82	;'R'
  4371  00FBAD  4D                 	db	77	;'M'
  4372  00FBAE  53                 	db	83	;'S'
  4373  00FBAF  20                 	db	32
  4374  00FBB0  4F                 	db	79	;'O'
  4375  00FBB1  75                 	db	117	;'u'
  4376  00FBB2  74                 	db	116	;'t'
  4377  00FBB3  70                 	db	112	;'p'
  4378  00FBB4  75                 	db	117	;'u'
  4379  00FBB5  74                 	db	116	;'t'
  4380  00FBB6  20                 	db	32
  4381  00FBB7  56                 	db	86	;'V'
  4382  00FBB8  6F                 	db	111	;'o'
  4383  00FBB9  6C                 	db	108	;'l'
  4384  00FBBA  74                 	db	116	;'t'
  4385  00FBBB  61                 	db	97	;'a'
  4386  00FBBC  67                 	db	103	;'g'
  4387  00FBBD  65                 	db	101	;'e'
  4388  00FBBE  20                 	db	32
  4389  00FBBF  69                 	db	105	;'i'
  4390  00FBC0  73                 	db	115	;'s'
  4391  00FBC1  20                 	db	32
  4392  00FBC2  25                 	db	37
  4393  00FBC3  2E                 	db	46
  4394  00FBC4  33                 	db	51	;'3'
  4395  00FBC5  66                 	db	102	;'f'
  4396  00FBC6  20                 	db	32
  4397  00FBC7  56                 	db	86	;'V'
  4398  00FBC8  72                 	db	114	;'r'
  4399  00FBC9  6D                 	db	109	;'m'
  4400  00FBCA  73                 	db	115	;'s'
  4401  00FBCB  0A                 	db	10
  4402  00FBCC  0D                 	db	13
  4403  00FBCD  00                 	db	0
  4404  00FBCE                     STR_76:
  4405  00FBCE  2B                 	db	43
  4406  00FBCF  31                 	db	49	;'1'
  4407  00FBD0  32                 	db	50	;'2'
  4408  00FBD1  56                 	db	86	;'V'
  4409  00FBD2  20                 	db	32
  4410  00FBD3  72                 	db	114	;'r'
  4411  00FBD4  61                 	db	97	;'a'
  4412  00FBD5  69                 	db	105	;'i'
  4413  00FBD6  6C                 	db	108	;'l'
  4414  00FBD7  20                 	db	32
  4415  00FBD8  6D                 	db	109	;'m'
  4416  00FBD9  65                 	db	101	;'e'
  4417  00FBDA  61                 	db	97	;'a'
  4418  00FBDB  73                 	db	115	;'s'
  4419  00FBDC  75                 	db	117	;'u'
  4420  00FBDD  72                 	db	114	;'r'
  4421  00FBDE  65                 	db	101	;'e'
  4422  00FBDF  64                 	db	100	;'d'
  4423  00FBE0  20                 	db	32
  4424  00FBE1  61                 	db	97	;'a'
  4425  00FBE2  73                 	db	115	;'s'
  4426  00FBE3  20                 	db	32
  4427  00FBE4  2B                 	db	43
  4428  00FBE5  25                 	db	37
  4429  00FBE6  66                 	db	102	;'f'
  4430  00FBE7  20                 	db	32
  4431  00FBE8  56                 	db	86	;'V'
  4432  00FBE9  6F                 	db	111	;'o'
  4433  00FBEA  6C                 	db	108	;'l'
  4434  00FBEB  74                 	db	116	;'t'
  4435  00FBEC  73                 	db	115	;'s'
  4436  00FBED  0A                 	db	10
  4437  00FBEE  0D                 	db	13
  4438  00FBEF  00                 	db	0
  4439  00FBF0                     STR_112:
  4440  00FBF0  48                 	db	72	;'H'
  4441  00FBF1  65                 	db	101	;'e'
  4442  00FBF2  6C                 	db	108	;'l'
  4443  00FBF3  70                 	db	112	;'p'
  4444  00FBF4  20                 	db	32
  4445  00FBF5  6D                 	db	109	;'m'
  4446  00FBF6  65                 	db	101	;'e'
  4447  00FBF7  73                 	db	115	;'s'
  4448  00FBF8  73                 	db	115	;'s'
  4449  00FBF9  61                 	db	97	;'a'
  4450  00FBFA  67                 	db	103	;'g'
  4451  00FBFB  65                 	db	101	;'e'
  4452  00FBFC  73                 	db	115	;'s'
  4453  00FBFD  20                 	db	32
  4454  00FBFE  61                 	db	97	;'a'
  4455  00FBFF  70                 	db	112	;'p'
  4456  00FC00  70                 	db	112	;'p'
  4457  00FC01  65                 	db	101	;'e'
  4458  00FC02  61                 	db	97	;'a'
  4459  00FC03  72                 	db	114	;'r'
  4460  00FC04  20                 	db	32
  4461  00FC05  69                 	db	105	;'i'
  4462  00FC06  6E                 	db	110	;'n'
  4463  00FC07  20                 	db	32
  4464  00FC08  79                 	db	121	;'y'
  4465  00FC09  65                 	db	101	;'e'
  4466  00FC0A  6C                 	db	108	;'l'
  4467  00FC0B  6C                 	db	108	;'l'
  4468  00FC0C  6F                 	db	111	;'o'
  4469  00FC0D  77                 	db	119	;'w'
  4470  00FC0E  0A                 	db	10
  4471  00FC0F  0D                 	db	13
  4472  00FC10  00                 	db	0
  4473  00FC11                     STR_84:
  4474  00FC11  4D                 	db	77	;'M'
  4475  00FC12  65                 	db	101	;'e'
  4476  00FC13  61                 	db	97	;'a'
  4477  00FC14  73                 	db	115	;'s'
  4478  00FC15  75                 	db	117	;'u'
  4479  00FC16  72                 	db	114	;'r'
  4480  00FC17  65                 	db	101	;'e'
  4481  00FC18  64                 	db	100	;'d'
  4482  00FC19  20                 	db	32
  4483  00FC1A  43                 	db	67	;'C'
  4484  00FC1B  75                 	db	117	;'u'
  4485  00FC1C  72                 	db	114	;'r'
  4486  00FC1D  72                 	db	114	;'r'
  4487  00FC1E  65                 	db	101	;'e'
  4488  00FC1F  6E                 	db	110	;'n'
  4489  00FC20  74                 	db	116	;'t'
  4490  00FC21  20                 	db	32
  4491  00FC22  69                 	db	105	;'i'
  4492  00FC23  73                 	db	115	;'s'
  4493  00FC24  20                 	db	32
  4494  00FC25  25                 	db	37
  4495  00FC26  2E                 	db	46
  4496  00FC27  33                 	db	51	;'3'
  4497  00FC28  66                 	db	102	;'f'
  4498  00FC29  20                 	db	32
  4499  00FC2A  41                 	db	65	;'A'
  4500  00FC2B  6D                 	db	109	;'m'
  4501  00FC2C  70                 	db	112	;'p'
  4502  00FC2D  73                 	db	115	;'s'
  4503  00FC2E  0A                 	db	10
  4504  00FC2F  0D                 	db	13
  4505  00FC30  00                 	db	0
  4506  00FC31                     STR_131:
  4507  00FC31  56                 	db	86	;'V'
  4508  00FC32  52                 	db	82	;'R'
  4509  00FC33  45                 	db	69	;'E'
  4510  00FC34  47                 	db	71	;'G'
  4511  00FC35  20                 	db	32
  4512  00FC36  6F                 	db	111	;'o'
  4513  00FC37  72                 	db	114	;'r'
  4514  00FC38  20                 	db	32
  4515  00FC39  55                 	db	85	;'U'
  4516  00FC3A  4C                 	db	76	;'L'
  4517  00FC3B  50                 	db	80	;'P'
  4518  00FC3C  20                 	db	32
  4519  00FC3D  52                 	db	82	;'R'
  4520  00FC3E  65                 	db	101	;'e'
  4521  00FC3F  61                 	db	97	;'a'
  4522  00FC40  64                 	db	100	;'d'
  4523  00FC41  79                 	db	121	;'y'
  4524  00FC42  20                 	db	32
  4525  00FC43  46                 	db	70	;'F'
  4526  00FC44  61                 	db	97	;'a'
  4527  00FC45  75                 	db	117	;'u'
  4528  00FC46  6C                 	db	108	;'l'
  4529  00FC47  74                 	db	116	;'t'
  4530  00FC48  20                 	db	32
  4531  00FC49  52                 	db	82	;'R'
  4532  00FC4A  65                 	db	101	;'e'
  4533  00FC4B  73                 	db	115	;'s'
  4534  00FC4C  65                 	db	101	;'e'
  4535  00FC4D  74                 	db	116	;'t'
  4536  00FC4E  00                 	db	0
  4537  00FC4F                     STR_116:
  4538  00FC4F  55                 	db	85	;'U'
  4539  00FC50  73                 	db	115	;'s'
  4540  00FC51  65                 	db	101	;'e'
  4541  00FC52  72                 	db	114	;'r'
  4542  00FC53  20                 	db	32
  4543  00FC54  69                 	db	105	;'i'
  4544  00FC55  6E                 	db	110	;'n'
  4545  00FC56  70                 	db	112	;'p'
  4546  00FC57  75                 	db	117	;'u'
  4547  00FC58  74                 	db	116	;'t'
  4548  00FC59  20                 	db	32
  4549  00FC5A  61                 	db	97	;'a'
  4550  00FC5B  70                 	db	112	;'p'
  4551  00FC5C  70                 	db	112	;'p'
  4552  00FC5D  65                 	db	101	;'e'
  4553  00FC5E  61                 	db	97	;'a'
  4554  00FC5F  72                 	db	114	;'r'
  4555  00FC60  73                 	db	115	;'s'
  4556  00FC61  20                 	db	32
  4557  00FC62  69                 	db	105	;'i'
  4558  00FC63  6E                 	db	110	;'n'
  4559  00FC64  20                 	db	32
  4560  00FC65  77                 	db	119	;'w'
  4561  00FC66  68                 	db	104	;'h'
  4562  00FC67  69                 	db	105	;'i'
  4563  00FC68  74                 	db	116	;'t'
  4564  00FC69  65                 	db	101	;'e'
  4565  00FC6A  0A                 	db	10
  4566  00FC6B  0D                 	db	13
  4567  00FC6C  00                 	db	0
  4568  00FC6D                     STR_127:
  4569  00FC6D  49                 	db	73	;'I'
  4570  00FC6E  6E                 	db	110	;'n'
  4571  00FC6F  74                 	db	116	;'t'
  4572  00FC70  65                 	db	101	;'e'
  4573  00FC71  72                 	db	114	;'r'
  4574  00FC72  72                 	db	114	;'r'
  4575  00FC73  75                 	db	117	;'u'
  4576  00FC74  70                 	db	112	;'p'
  4577  00FC75  74                 	db	116	;'t'
  4578  00FC76  20                 	db	32
  4579  00FC77  57                 	db	87	;'W'
  4580  00FC78  61                 	db	97	;'a'
  4581  00FC79  6B                 	db	107	;'k'
  4582  00FC7A  65                 	db	101	;'e'
  4583  00FC7B  20                 	db	32
  4584  00FC7C  55                 	db	85	;'U'
  4585  00FC7D  70                 	db	112	;'p'
  4586  00FC7E  20                 	db	32
  4587  00FC7F  46                 	db	70	;'F'
  4588  00FC80  72                 	db	114	;'r'
  4589  00FC81  6F                 	db	111	;'o'
  4590  00FC82  6D                 	db	109	;'m'
  4591  00FC83  20                 	db	32
  4592  00FC84  53                 	db	83	;'S'
  4593  00FC85  6C                 	db	108	;'l'
  4594  00FC86  65                 	db	101	;'e'
  4595  00FC87  65                 	db	101	;'e'
  4596  00FC88  70                 	db	112	;'p'
  4597  00FC89  00                 	db	0
  4598  00FC8A                     STR_125:
  4599  00FC8A  57                 	db	87	;'W'
  4600  00FC8B  61                 	db	97	;'a'
  4601  00FC8C  74                 	db	116	;'t'
  4602  00FC8D  63                 	db	99	;'c'
  4603  00FC8E  68                 	db	104	;'h'
  4604  00FC8F  20                 	db	32
  4605  00FC90  44                 	db	68	;'D'
  4606  00FC91  6F                 	db	111	;'o'
  4607  00FC92  67                 	db	103	;'g'
  4608  00FC93  20                 	db	32
  4609  00FC94  54                 	db	84	;'T'
  4610  00FC95  69                 	db	105	;'i'
  4611  00FC96  6D                 	db	109	;'m'
  4612  00FC97  65                 	db	101	;'e'
  4613  00FC98  72                 	db	114	;'r'
  4614  00FC99  20                 	db	32
  4615  00FC9A  53                 	db	83	;'S'
  4616  00FC9B  6C                 	db	108	;'l'
  4617  00FC9C  65                 	db	101	;'e'
  4618  00FC9D  65                 	db	101	;'e'
  4619  00FC9E  70                 	db	112	;'p'
  4620  00FC9F  20                 	db	32
  4621  00FCA0  52                 	db	82	;'R'
  4622  00FCA1  65                 	db	101	;'e'
  4623  00FCA2  73                 	db	115	;'s'
  4624  00FCA3  65                 	db	101	;'e'
  4625  00FCA4  74                 	db	116	;'t'
  4626  00FCA5  00                 	db	0
  4627  00FCA6                     STR_128:
  4628  00FCA6  52                 	db	82	;'R'
  4629  00FCA7  45                 	db	69	;'E'
  4630  00FCA8  53                 	db	83	;'S'
  4631  00FCA9  45                 	db	69	;'E'
  4632  00FCAA  54                 	db	84	;'T'
  4633  00FCAB  20                 	db	32
  4634  00FCAC  49                 	db	73	;'I'
  4635  00FCAD  6E                 	db	110	;'n'
  4636  00FCAE  73                 	db	115	;'s'
  4637  00FCAF  74                 	db	116	;'t'
  4638  00FCB0  72                 	db	114	;'r'
  4639  00FCB1  75                 	db	117	;'u'
  4640  00FCB2  63                 	db	99	;'c'
  4641  00FCB3  74                 	db	116	;'t'
  4642  00FCB4  69                 	db	105	;'i'
  4643  00FCB5  6F                 	db	111	;'o'
  4644  00FCB6  6E                 	db	110	;'n'
  4645  00FCB7  20                 	db	32
  4646  00FCB8  45                 	db	69	;'E'
  4647  00FCB9  78                 	db	120	;'x'
  4648  00FCBA  65                 	db	101	;'e'
  4649  00FCBB  63                 	db	99	;'c'
  4650  00FCBC  75                 	db	117	;'u'
  4651  00FCBD  74                 	db	116	;'t'
  4652  00FCBE  65                 	db	101	;'e'
  4653  00FCBF  64                 	db	100	;'d'
  4654  00FCC0  00                 	db	0
  4655  00FCC1                     STR_83:
  4656  00FCC1  4D                 	db	77	;'M'
  4657  00FCC2  65                 	db	101	;'e'
  4658  00FCC3  61                 	db	97	;'a'
  4659  00FCC4  73                 	db	115	;'s'
  4660  00FCC5  75                 	db	117	;'u'
  4661  00FCC6  72                 	db	114	;'r'
  4662  00FCC7  65                 	db	101	;'e'
  4663  00FCC8  20                 	db	32
  4664  00FCC9  44                 	db	68	;'D'
  4665  00FCCA  65                 	db	101	;'e'
  4666  00FCCB  74                 	db	116	;'t'
  4667  00FCCC  65                 	db	101	;'e'
  4668  00FCCD  63                 	db	99	;'c'
  4669  00FCCE  74                 	db	116	;'t'
  4670  00FCCF  65                 	db	101	;'e'
  4671  00FCD0  64                 	db	100	;'d'
  4672  00FCD1  20                 	db	32
  4673  00FCD2  43                 	db	67	;'C'
  4674  00FCD3  75                 	db	117	;'u'
  4675  00FCD4  72                 	db	114	;'r'
  4676  00FCD5  72                 	db	114	;'r'
  4677  00FCD6  65                 	db	101	;'e'
  4678  00FCD7  6E                 	db	110	;'n'
  4679  00FCD8  74                 	db	116	;'t'
  4680  00FCD9  3F                 	db	63	;'?'
  4681  00FCDA  00                 	db	0
  4682  00FCDB                     STR_123:
  4683  00FCDB  4D                 	db	77	;'M'
  4684  00FCDC  61                 	db	97	;'a'
  4685  00FCDD  73                 	db	115	;'s'
  4686  00FCDE  74                 	db	116	;'t'
  4687  00FCDF  65                 	db	101	;'e'
  4688  00FCE0  72                 	db	114	;'r'
  4689  00FCE1  20                 	db	32
  4690  00FCE2  43                 	db	67	;'C'
  4691  00FCE3  6C                 	db	108	;'l'
  4692  00FCE4  65                 	db	101	;'e'
  4693  00FCE5  61                 	db	97	;'a'
  4694  00FCE6  72                 	db	114	;'r'
  4695  00FCE7  20                 	db	32
  4696  00FCE8  53                 	db	83	;'S'
  4697  00FCE9  6C                 	db	108	;'l'
  4698  00FCEA  65                 	db	101	;'e'
  4699  00FCEB  65                 	db	101	;'e'
  4700  00FCEC  70                 	db	112	;'p'
  4701  00FCED  20                 	db	32
  4702  00FCEE  52                 	db	82	;'R'
  4703  00FCEF  65                 	db	101	;'e'
  4704  00FCF0  73                 	db	115	;'s'
  4705  00FCF1  65                 	db	101	;'e'
  4706  00FCF2  74                 	db	116	;'t'
  4707  00FCF3  00                 	db	0
  4708  00FCF4                     STR_98:
  4709  00FCF4  4C                 	db	76	;'L'
  4710  00FCF5  6F                 	db	111	;'o'
  4711  00FCF6  61                 	db	97	;'a'
  4712  00FCF7  64                 	db	100	;'d'
  4713  00FCF8  20                 	db	32
  4714  00FCF9  68                 	db	104	;'h'
  4715  00FCFA  61                 	db	97	;'a'
  4716  00FCFB  73                 	db	115	;'s'
  4717  00FCFC  20                 	db	32
  4718  00FCFD  62                 	db	98	;'b'
  4719  00FCFE  65                 	db	101	;'e'
  4720  00FCFF  65                 	db	101	;'e'
  4721  00FD00  6E                 	db	110	;'n'
  4722  00FD01  20                 	db	32
  4723  00FD02  64                 	db	100	;'d'
  4724  00FD03  69                 	db	105	;'i'
  4725  00FD04  73                 	db	115	;'s'
  4726  00FD05  61                 	db	97	;'a'
  4727  00FD06  62                 	db	98	;'b'
  4728  00FD07  6C                 	db	108	;'l'
  4729  00FD08  65                 	db	101	;'e'
  4730  00FD09  64                 	db	100	;'d'
  4731  00FD0A  0A                 	db	10
  4732  00FD0B  0D                 	db	13
  4733  00FD0C  00                 	db	0
  4734  00FD0D                     STR_99:
  4735  00FD0D  53                 	db	83	;'S'
  4736  00FD0E  65                 	db	101	;'e'
  4737  00FD0F  74                 	db	116	;'t'
  4738  00FD10  20                 	db	32
  4739  00FD11  44                 	db	68	;'D'
  4740  00FD12  69                 	db	105	;'i'
  4741  00FD13  6D                 	db	109	;'m'
  4742  00FD14  6D                 	db	109	;'m'
  4743  00FD15  69                 	db	105	;'i'
  4744  00FD16  6E                 	db	110	;'n'
  4745  00FD17  67                 	db	103	;'g'
  4746  00FD18  20                 	db	32
  4747  00FD19  50                 	db	80	;'P'
  4748  00FD1A  65                 	db	101	;'e'
  4749  00FD1B  72                 	db	114	;'r'
  4750  00FD1C  63                 	db	99	;'c'
  4751  00FD1D  65                 	db	101	;'e'
  4752  00FD1E  6E                 	db	110	;'n'
  4753  00FD1F  74                 	db	116	;'t'
  4754  00FD20  61                 	db	97	;'a'
  4755  00FD21  67                 	db	103	;'g'
  4756  00FD22  65                 	db	101	;'e'
  4757  00FD23  3A                 	db	58	;':'
  4758  00FD24  20                 	db	32
  4759  00FD25  00                 	db	0
  4760  00FD26                     STR_70:
  4761  00FD26  4E                 	db	78	;'N'
  4762  00FD27  6F                 	db	111	;'o'
  4763  00FD28  20                 	db	32
  4764  00FD29  41                 	db	65	;'A'
  4765  00FD2A  44                 	db	68	;'D'
  4766  00FD2B  43                 	db	67	;'C'
  4767  00FD2C  20                 	db	32
  4768  00FD2D  45                 	db	69	;'E'
  4769  00FD2E  72                 	db	114	;'r'
  4770  00FD2F  72                 	db	114	;'r'
  4771  00FD30  6F                 	db	111	;'o'
  4772  00FD31  72                 	db	114	;'r'
  4773  00FD32  20                 	db	32
  4774  00FD33  64                 	db	100	;'d'
  4775  00FD34  65                 	db	101	;'e'
  4776  00FD35  74                 	db	116	;'t'
  4777  00FD36  65                 	db	101	;'e'
  4778  00FD37  63                 	db	99	;'c'
  4779  00FD38  74                 	db	116	;'t'
  4780  00FD39  65                 	db	101	;'e'
  4781  00FD3A  64                 	db	100	;'d'
  4782  00FD3B  0A                 	db	10
  4783  00FD3C  0D                 	db	13
  4784  00FD3D  00                 	db	0
  4785  00FD3E                     STR_115:
  4786  00FD3E  45                 	db	69	;'E'
  4787  00FD3F  72                 	db	114	;'r'
  4788  00FD40  72                 	db	114	;'r'
  4789  00FD41  6F                 	db	111	;'o'
  4790  00FD42  72                 	db	114	;'r'
  4791  00FD43  73                 	db	115	;'s'
  4792  00FD44  20                 	db	32
  4793  00FD45  61                 	db	97	;'a'
  4794  00FD46  70                 	db	112	;'p'
  4795  00FD47  70                 	db	112	;'p'
  4796  00FD48  65                 	db	101	;'e'
  4797  00FD49  61                 	db	97	;'a'
  4798  00FD4A  72                 	db	114	;'r'
  4799  00FD4B  20                 	db	32
  4800  00FD4C  69                 	db	105	;'i'
  4801  00FD4D  6E                 	db	110	;'n'
  4802  00FD4E  20                 	db	32
  4803  00FD4F  72                 	db	114	;'r'
  4804  00FD50  65                 	db	101	;'e'
  4805  00FD51  64                 	db	100	;'d'
  4806  00FD52  0A                 	db	10
  4807  00FD53  0D                 	db	13
  4808  00FD54  00                 	db	0
  4809  00FD55                     STR_130:
  4810  00FD55  53                 	db	83	;'S'
  4811  00FD56  74                 	db	116	;'t'
  4812  00FD57  61                 	db	97	;'a'
  4813  00FD58  63                 	db	99	;'c'
  4814  00FD59  6B                 	db	107	;'k'
  4815  00FD5A  20                 	db	32
  4816  00FD5B  55                 	db	85	;'U'
  4817  00FD5C  6E                 	db	110	;'n'
  4818  00FD5D  64                 	db	100	;'d'
  4819  00FD5E  65                 	db	101	;'e'
  4820  00FD5F  72                 	db	114	;'r'
  4821  00FD60  66                 	db	102	;'f'
  4822  00FD61  6C                 	db	108	;'l'
  4823  00FD62  6F                 	db	111	;'o'
  4824  00FD63  77                 	db	119	;'w'
  4825  00FD64  20                 	db	32
  4826  00FD65  52                 	db	82	;'R'
  4827  00FD66  65                 	db	101	;'e'
  4828  00FD67  73                 	db	115	;'s'
  4829  00FD68  65                 	db	101	;'e'
  4830  00FD69  74                 	db	116	;'t'
  4831  00FD6A  00                 	db	0
  4832  00FD6B                     STR_67:
  4833  00FD6B  49                 	db	73	;'I'
  4834  00FD6C  6E                 	db	110	;'n'
  4835  00FD6D  74                 	db	116	;'t'
  4836  00FD6E  65                 	db	101	;'e'
  4837  00FD6F  72                 	db	114	;'r'
  4838  00FD70  6E                 	db	110	;'n'
  4839  00FD71  61                 	db	97	;'a'
  4840  00FD72  6C                 	db	108	;'l'
  4841  00FD73  20                 	db	32
  4842  00FD74  46                 	db	70	;'F'
  4843  00FD75  56                 	db	86	;'V'
  4844  00FD76  52                 	db	82	;'R'
  4845  00FD77  20                 	db	32
  4846  00FD78  42                 	db	66	;'B'
  4847  00FD79  75                 	db	117	;'u'
  4848  00FD7A  66                 	db	102	;'f'
  4849  00FD7B  66                 	db	102	;'f'
  4850  00FD7C  65                 	db	101	;'e'
  4851  00FD7D  72                 	db	114	;'r'
  4852  00FD7E  20                 	db	32
  4853  00FD7F  31                 	db	49	;'1'
  4854  00FD80  00                 	db	0
  4855  00FD81                     STR_129:
  4856  00FD81  53                 	db	83	;'S'
  4857  00FD82  74                 	db	116	;'t'
  4858  00FD83  61                 	db	97	;'a'
  4859  00FD84  63                 	db	99	;'c'
  4860  00FD85  6B                 	db	107	;'k'
  4861  00FD86  20                 	db	32
  4862  00FD87  4F                 	db	79	;'O'
  4863  00FD88  76                 	db	118	;'v'
  4864  00FD89  65                 	db	101	;'e'
  4865  00FD8A  72                 	db	114	;'r'
  4866  00FD8B  66                 	db	102	;'f'
  4867  00FD8C  6C                 	db	108	;'l'
  4868  00FD8D  6F                 	db	111	;'o'
  4869  00FD8E  77                 	db	119	;'w'
  4870  00FD8F  20                 	db	32
  4871  00FD90  52                 	db	82	;'R'
  4872  00FD91  65                 	db	101	;'e'
  4873  00FD92  73                 	db	115	;'s'
  4874  00FD93  65                 	db	101	;'e'
  4875  00FD94  74                 	db	116	;'t'
  4876  00FD95  00                 	db	0
  4877  00FD96                     STR_72:
  4878  00FD96  43                 	db	67	;'C'
  4879  00FD97  6C                 	db	108	;'l'
  4880  00FD98  65                 	db	101	;'e'
  4881  00FD99  61                 	db	97	;'a'
  4882  00FD9A  72                 	db	114	;'r'
  4883  00FD9B  69                 	db	105	;'i'
  4884  00FD9C  6E                 	db	110	;'n'
  4885  00FD9D  67                 	db	103	;'g'
  4886  00FD9E  20                 	db	32
  4887  00FD9F  41                 	db	65	;'A'
  4888  00FDA0  44                 	db	68	;'D'
  4889  00FDA1  43                 	db	67	;'C'
  4890  00FDA2  20                 	db	32
  4891  00FDA3  45                 	db	69	;'E'
  4892  00FDA4  72                 	db	114	;'r'
  4893  00FDA5  72                 	db	114	;'r'
  4894  00FDA6  6F                 	db	111	;'o'
  4895  00FDA7  72                 	db	114	;'r'
  4896  00FDA8  0A                 	db	10
  4897  00FDA9  0D                 	db	13
  4898  00FDAA  00                 	db	0
  4899  00FDAB                     STR_87:
  4900  00FDAB  4D                 	db	77	;'M'
  4901  00FDAC  65                 	db	101	;'e'
  4902  00FDAD  61                 	db	97	;'a'
  4903  00FDAE  73                 	db	115	;'s'
  4904  00FDAF  75                 	db	117	;'u'
  4905  00FDB0  72                 	db	114	;'r'
  4906  00FDB1  65                 	db	101	;'e'
  4907  00FDB2  20                 	db	32
  4908  00FDB3  52                 	db	82	;'R'
  4909  00FDB4  4D                 	db	77	;'M'
  4910  00FDB5  53                 	db	83	;'S'
  4911  00FDB6  20                 	db	32
  4912  00FDB7  56                 	db	86	;'V'
  4913  00FDB8  6F                 	db	111	;'o'
  4914  00FDB9  6C                 	db	108	;'l'
  4915  00FDBA  74                 	db	116	;'t'
  4916  00FDBB  61                 	db	97	;'a'
  4917  00FDBC  67                 	db	103	;'g'
  4918  00FDBD  65                 	db	101	;'e'
  4919  00FDBE  3F                 	db	63	;'?'
  4920  00FDBF  00                 	db	0
  4921  00FDC0                     STR_85:
  4922  00FDC0  4D                 	db	77	;'M'
  4923  00FDC1  65                 	db	101	;'e'
  4924  00FDC2  61                 	db	97	;'a'
  4925  00FDC3  73                 	db	115	;'s'
  4926  00FDC4  75                 	db	117	;'u'
  4927  00FDC5  72                 	db	114	;'r'
  4928  00FDC6  65                 	db	101	;'e'
  4929  00FDC7  20                 	db	32
  4930  00FDC8  52                 	db	82	;'R'
  4931  00FDC9  4D                 	db	77	;'M'
  4932  00FDCA  53                 	db	83	;'S'
  4933  00FDCB  20                 	db	32
  4934  00FDCC  43                 	db	67	;'C'
  4935  00FDCD  75                 	db	117	;'u'
  4936  00FDCE  72                 	db	114	;'r'
  4937  00FDCF  72                 	db	114	;'r'
  4938  00FDD0  65                 	db	101	;'e'
  4939  00FDD1  6E                 	db	110	;'n'
  4940  00FDD2  74                 	db	116	;'t'
  4941  00FDD3  3F                 	db	63	;'?'
  4942  00FDD4  00                 	db	0
  4943  00FDD5                     STR_122:
  4944  00FDD5  4D                 	db	77	;'M'
  4945  00FDD6  61                 	db	97	;'a'
  4946  00FDD7  73                 	db	115	;'s'
  4947  00FDD8  74                 	db	116	;'t'
  4948  00FDD9  65                 	db	101	;'e'
  4949  00FDDA  72                 	db	114	;'r'
  4950  00FDDB  20                 	db	32
  4951  00FDDC  43                 	db	67	;'C'
  4952  00FDDD  6C                 	db	108	;'l'
  4953  00FDDE  65                 	db	101	;'e'
  4954  00FDDF  61                 	db	97	;'a'
  4955  00FDE0  72                 	db	114	;'r'
  4956  00FDE1  20                 	db	32
  4957  00FDE2  52                 	db	82	;'R'
  4958  00FDE3  65                 	db	101	;'e'
  4959  00FDE4  73                 	db	115	;'s'
  4960  00FDE5  65                 	db	101	;'e'
  4961  00FDE6  74                 	db	116	;'t'
  4962  00FDE7  00                 	db	0
  4963  00FDE8                     STR_77:
  4964  00FDE8  4D                 	db	77	;'M'
  4965  00FDE9  65                 	db	101	;'e'
  4966  00FDEA  61                 	db	97	;'a'
  4967  00FDEB  73                 	db	115	;'s'
  4968  00FDEC  75                 	db	117	;'u'
  4969  00FDED  72                 	db	114	;'r'
  4970  00FDEE  65                 	db	101	;'e'
  4971  00FDEF  20                 	db	32
  4972  00FDF0  44                 	db	68	;'D'
  4973  00FDF1  69                 	db	105	;'i'
  4974  00FDF2  65                 	db	101	;'e'
  4975  00FDF3  20                 	db	32
  4976  00FDF4  54                 	db	84	;'T'
  4977  00FDF5  65                 	db	101	;'e'
  4978  00FDF6  6D                 	db	109	;'m'
  4979  00FDF7  70                 	db	112	;'p'
  4980  00FDF8  3F                 	db	63	;'?'
  4981  00FDF9  00                 	db	0
  4982  00FDFA                     STR_133:
  4983  00FDFA  30                 	db	48	;'0'
  4984  00FDFB  31                 	db	49	;'1'
  4985  00FDFC  32                 	db	50	;'2'
  4986  00FDFD  33                 	db	51	;'3'
  4987  00FDFE  34                 	db	52	;'4'
  4988  00FDFF  35                 	db	53	;'5'
  4989  00FE00  36                 	db	54	;'6'
  4990  00FE01  37                 	db	55	;'7'
  4991  00FE02  38                 	db	56	;'8'
  4992  00FE03  39                 	db	57	;'9'
  4993  00FE04  41                 	db	65	;'A'
  4994  00FE05  42                 	db	66	;'B'
  4995  00FE06  43                 	db	67	;'C'
  4996  00FE07  44                 	db	68	;'D'
  4997  00FE08  45                 	db	69	;'E'
  4998  00FE09  46                 	db	70	;'F'
  4999  00FE0A  00                 	db	0
  5000  00FE0B                     STR_51:
  5001  00FE0B  41                 	db	65	;'A'
  5002  00FE0C  43                 	db	67	;'C'
  5003  00FE0D  20                 	db	32
  5004  00FE0E  50                 	db	80	;'P'
  5005  00FE0F  6F                 	db	111	;'o'
  5006  00FE10  77                 	db	119	;'w'
  5007  00FE11  65                 	db	101	;'e'
  5008  00FE12  72                 	db	114	;'r'
  5009  00FE13  20                 	db	32
  5010  00FE14  4D                 	db	77	;'M'
  5011  00FE15  65                 	db	101	;'e'
  5012  00FE16  74                 	db	116	;'t'
  5013  00FE17  65                 	db	101	;'e'
  5014  00FE18  72                 	db	114	;'r'
  5015  00FE19  0A                 	db	10
  5016  00FE1A  0D                 	db	13
  5017  00FE1B  00                 	db	0
  5018  00FE1C                     STR_68:
  5019  00FE1C  53                 	db	83	;'S'
  5020  00FE1D  70                 	db	112	;'p'
  5021  00FE1E  75                 	db	117	;'u'
  5022  00FE1F  72                 	db	114	;'r'
  5023  00FE20  69                 	db	105	;'i'
  5024  00FE21  6F                 	db	111	;'o'
  5025  00FE22  75                 	db	117	;'u'
  5026  00FE23  73                 	db	115	;'s'
  5027  00FE24  20                 	db	32
  5028  00FE25  63                 	db	99	;'c'
  5029  00FE26  68                 	db	104	;'h'
  5030  00FE27  61                 	db	97	;'a'
  5031  00FE28  6E                 	db	110	;'n'
  5032  00FE29  6E                 	db	110	;'n'
  5033  00FE2A  65                 	db	101	;'e'
  5034  00FE2B  6C                 	db	108	;'l'
  5035  00FE2C  00                 	db	0
  5036  00FE2D                     STR_121:
  5037  00FE2D  42                 	db	66	;'B'
  5038  00FE2E  72                 	db	114	;'r'
  5039  00FE2F  6F                 	db	111	;'o'
  5040  00FE30  77                 	db	119	;'w'
  5041  00FE31  6E                 	db	110	;'n'
  5042  00FE32  20                 	db	32
  5043  00FE33  4F                 	db	79	;'O'
  5044  00FE34  75                 	db	117	;'u'
  5045  00FE35  74                 	db	116	;'t'
  5046  00FE36  20                 	db	32
  5047  00FE37  52                 	db	82	;'R'
  5048  00FE38  65                 	db	101	;'e'
  5049  00FE39  73                 	db	115	;'s'
  5050  00FE3A  65                 	db	101	;'e'
  5051  00FE3B  74                 	db	116	;'t'
  5052  00FE3C  00                 	db	0
  5053  00FE3D                     STR_73:
  5054  00FE3D  4D                 	db	77	;'M'
  5055  00FE3E  65                 	db	101	;'e'
  5056  00FE3F  61                 	db	97	;'a'
  5057  00FE40  73                 	db	115	;'s'
  5058  00FE41  75                 	db	117	;'u'
  5059  00FE42  72                 	db	114	;'r'
  5060  00FE43  65                 	db	101	;'e'
  5061  00FE44  20                 	db	32
  5062  00FE45  50                 	db	80	;'P'
  5063  00FE46  4F                 	db	79	;'O'
  5064  00FE47  53                 	db	83	;'S'
  5065  00FE48  33                 	db	51	;'3'
  5066  00FE49  50                 	db	80	;'P'
  5067  00FE4A  33                 	db	51	;'3'
  5068  00FE4B  3F                 	db	63	;'?'
  5069  00FE4C  00                 	db	0
  5070  00FE4D                     STR_106:
  5071  00FE4D  44                 	db	68	;'D'
  5072  00FE4E  65                 	db	101	;'e'
  5073  00FE4F  76                 	db	118	;'v'
  5074  00FE50  69                 	db	105	;'i'
  5075  00FE51  63                 	db	99	;'c'
  5076  00FE52  65                 	db	101	;'e'
  5077  00FE53  20                 	db	32
  5078  00FE54  4F                 	db	79	;'O'
  5079  00FE55  6E                 	db	110	;'n'
  5080  00FE56  20                 	db	32
  5081  00FE57  54                 	db	84	;'T'
  5082  00FE58  69                 	db	105	;'i'
  5083  00FE59  6D                 	db	109	;'m'
  5084  00FE5A  65                 	db	101	;'e'
  5085  00FE5B  3F                 	db	63	;'?'
  5086  00FE5C  00                 	db	0
  5087  00FE5D                     STR_47:
  5088  00FE5D  43                 	db	67	;'C'
  5089  00FE5E  61                 	db	97	;'a'
  5090  00FE5F  75                 	db	117	;'u'
  5091  00FE60  73                 	db	115	;'s'
  5092  00FE61  65                 	db	101	;'e'
  5093  00FE62  20                 	db	32
  5094  00FE63  6F                 	db	111	;'o'
  5095  00FE64  66                 	db	102	;'f'
  5096  00FE65  20                 	db	32
  5097  00FE66  52                 	db	82	;'R'
  5098  00FE67  65                 	db	101	;'e'
  5099  00FE68  73                 	db	115	;'s'
  5100  00FE69  65                 	db	101	;'e'
  5101  00FE6A  74                 	db	116	;'t'
  5102  00FE6B  3F                 	db	63	;'?'
  5103  00FE6C  00                 	db	0
  5104  00FE6D                     STR_93:
  5105  00FE6D  44                 	db	68	;'D'
  5106  00FE6E  69                 	db	105	;'i'
  5107  00FE6F  73                 	db	115	;'s'
  5108  00FE70  61                 	db	97	;'a'
  5109  00FE71  62                 	db	98	;'b'
  5110  00FE72  6C                 	db	108	;'l'
  5111  00FE73  65                 	db	101	;'e'
  5112  00FE74  20                 	db	32
  5113  00FE75  44                 	db	68	;'D'
  5114  00FE76  69                 	db	105	;'i'
  5115  00FE77  6D                 	db	109	;'m'
  5116  00FE78  6D                 	db	109	;'m'
  5117  00FE79  69                 	db	105	;'i'
  5118  00FE7A  6E                 	db	110	;'n'
  5119  00FE7B  67                 	db	103	;'g'
  5120  00FE7C  00                 	db	0
  5121  00FE7D                     STR_71:
  5122  00FE7D  43                 	db	67	;'C'
  5123  00FE7E  6C                 	db	108	;'l'
  5124  00FE7F  65                 	db	101	;'e'
  5125  00FE80  61                 	db	97	;'a'
  5126  00FE81  72                 	db	114	;'r'
  5127  00FE82  20                 	db	32
  5128  00FE83  41                 	db	65	;'A'
  5129  00FE84  44                 	db	68	;'D'
  5130  00FE85  43                 	db	67	;'C'
  5131  00FE86  20                 	db	32
  5132  00FE87  45                 	db	69	;'E'
  5133  00FE88  72                 	db	114	;'r'
  5134  00FE89  72                 	db	114	;'r'
  5135  00FE8A  6F                 	db	111	;'o'
  5136  00FE8B  72                 	db	114	;'r'
  5137  00FE8C  00                 	db	0
  5138  00FE8D                     STR_120:
  5139  00FE8D  50                 	db	80	;'P'
  5140  00FE8E  6F                 	db	111	;'o'
  5141  00FE8F  77                 	db	119	;'w'
  5142  00FE90  65                 	db	101	;'e'
  5143  00FE91  72                 	db	114	;'r'
  5144  00FE92  20                 	db	32
  5145  00FE93  4F                 	db	79	;'O'
  5146  00FE94  6E                 	db	110	;'n'
  5147  00FE95  20                 	db	32
  5148  00FE96  52                 	db	82	;'R'
  5149  00FE97  65                 	db	101	;'e'
  5150  00FE98  73                 	db	115	;'s'
  5151  00FE99  65                 	db	101	;'e'
  5152  00FE9A  74                 	db	116	;'t'
  5153  00FE9B  00                 	db	0
  5154  00FE9C                     STR_75:
  5155  00FE9C  4D                 	db	77	;'M'
  5156  00FE9D  65                 	db	101	;'e'
  5157  00FE9E  61                 	db	97	;'a'
  5158  00FE9F  73                 	db	115	;'s'
  5159  00FEA0  75                 	db	117	;'u'
  5160  00FEA1  72                 	db	114	;'r'
  5161  00FEA2  65                 	db	101	;'e'
  5162  00FEA3  20                 	db	32
  5163  00FEA4  50                 	db	80	;'P'
  5164  00FEA5  4F                 	db	79	;'O'
  5165  00FEA6  53                 	db	83	;'S'
  5166  00FEA7  31                 	db	49	;'1'
  5167  00FEA8  32                 	db	50	;'2'
  5168  00FEA9  3F                 	db	63	;'?'
  5169  00FEAA  00                 	db	0
  5170  00FEAB                     STR_89:
  5171  00FEAB  4D                 	db	77	;'M'
  5172  00FEAC  65                 	db	101	;'e'
  5173  00FEAD  61                 	db	97	;'a'
  5174  00FEAE  73                 	db	115	;'s'
  5175  00FEAF  75                 	db	117	;'u'
  5176  00FEB0  72                 	db	114	;'r'
  5177  00FEB1  65                 	db	101	;'e'
  5178  00FEB2  20                 	db	32
  5179  00FEB3  50                 	db	80	;'P'
  5180  00FEB4  6F                 	db	111	;'o'
  5181  00FEB5  77                 	db	119	;'w'
  5182  00FEB6  65                 	db	101	;'e'
  5183  00FEB7  72                 	db	114	;'r'
  5184  00FEB8  3F                 	db	63	;'?'
  5185  00FEB9  00                 	db	0
  5186  00FEBA                     STR_91:
  5187  00FEBA  45                 	db	69	;'E'
  5188  00FEBB  6E                 	db	110	;'n'
  5189  00FEBC  61                 	db	97	;'a'
  5190  00FEBD  62                 	db	98	;'b'
  5191  00FEBE  6C                 	db	108	;'l'
  5192  00FEBF  65                 	db	101	;'e'
  5193  00FEC0  20                 	db	32
  5194  00FEC1  44                 	db	68	;'D'
  5195  00FEC2  69                 	db	105	;'i'
  5196  00FEC3  6D                 	db	109	;'m'
  5197  00FEC4  6D                 	db	109	;'m'
  5198  00FEC5  69                 	db	105	;'i'
  5199  00FEC6  6E                 	db	110	;'n'
  5200  00FEC7  67                 	db	103	;'g'
  5201  00FEC8  00                 	db	0
  5202  00FEC9                     STR_66:
  5203  00FEC9  49                 	db	73	;'I'
  5204  00FECA  6E                 	db	110	;'n'
  5205  00FECB  74                 	db	116	;'t'
  5206  00FECC  65                 	db	101	;'e'
  5207  00FECD  72                 	db	114	;'r'
  5208  00FECE  6E                 	db	110	;'n'
  5209  00FECF  61                 	db	97	;'a'
  5210  00FED0  6C                 	db	108	;'l'
  5211  00FED1  20                 	db	32
  5212  00FED2  44                 	db	68	;'D'
  5213  00FED3  41                 	db	65	;'A'
  5214  00FED4  43                 	db	67	;'C'
  5215  00FED5  31                 	db	49	;'1'
  5216  00FED6  00                 	db	0
  5217  00FED7                     STR_81:
  5218  00FED7  4D                 	db	77	;'M'
  5219  00FED8  65                 	db	101	;'e'
  5220  00FED9  61                 	db	97	;'a'
  5221  00FEDA  73                 	db	115	;'s'
  5222  00FEDB  75                 	db	117	;'u'
  5223  00FEDC  72                 	db	114	;'r'
  5224  00FEDD  65                 	db	101	;'e'
  5225  00FEDE  20                 	db	32
  5226  00FEDF  41                 	db	65	;'A'
  5227  00FEE0  56                 	db	86	;'V'
  5228  00FEE1  53                 	db	83	;'S'
  5229  00FEE2  53                 	db	83	;'S'
  5230  00FEE3  3F                 	db	63	;'?'
  5231  00FEE4  00                 	db	0
  5232  00FEE5                     STR_108:
  5233  00FEE5  4C                 	db	76	;'L'
  5234  00FEE6  6F                 	db	111	;'o'
  5235  00FEE7  61                 	db	97	;'a'
  5236  00FEE8  64                 	db	100	;'d'
  5237  00FEE9  20                 	db	32
  5238  00FEEA  4F                 	db	79	;'O'
  5239  00FEEB  6E                 	db	110	;'n'
  5240  00FEEC  20                 	db	32
  5241  00FEED  54                 	db	84	;'T'
  5242  00FEEE  69                 	db	105	;'i'
  5243  00FEEF  6D                 	db	109	;'m'
  5244  00FEF0  65                 	db	101	;'e'
  5245  00FEF1  3F                 	db	63	;'?'
  5246  00FEF2  00                 	db	0
  5247  00FEF3                     STR_64:
  5248  00FEF3  49                 	db	73	;'I'
  5249  00FEF4  6E                 	db	110	;'n'
  5250  00FEF5  74                 	db	116	;'t'
  5251  00FEF6  65                 	db	101	;'e'
  5252  00FEF7  72                 	db	114	;'r'
  5253  00FEF8  6E                 	db	110	;'n'
  5254  00FEF9  61                 	db	97	;'a'
  5255  00FEFA  6C                 	db	108	;'l'
  5256  00FEFB  20                 	db	32
  5257  00FEFC  41                 	db	65	;'A'
  5258  00FEFD  56                 	db	86	;'V'
  5259  00FEFE  53                 	db	83	;'S'
  5260  00FEFF  53                 	db	83	;'S'
  5261  00FF00  00                 	db	0
  5262  00FF01                     STR_65:
  5263  00FF01  49                 	db	73	;'I'
  5264  00FF02  6E                 	db	110	;'n'
  5265  00FF03  74                 	db	116	;'t'
  5266  00FF04  65                 	db	101	;'e'
  5267  00FF05  72                 	db	114	;'r'
  5268  00FF06  6E                 	db	110	;'n'
  5269  00FF07  61                 	db	97	;'a'
  5270  00FF08  6C                 	db	108	;'l'
  5271  00FF09  20                 	db	32
  5272  00FF0A  54                 	db	84	;'T'
  5273  00FF0B  65                 	db	101	;'e'
  5274  00FF0C  6D                 	db	109	;'m'
  5275  00FF0D  70                 	db	112	;'p'
  5276  00FF0E  00                 	db	0
  5277  00FF0F                     STR_118:
  5278  00FF0F  50                 	db	80	;'P'
  5279  00FF10  49                 	db	73	;'I'
  5280  00FF11  43                 	db	67	;'C'
  5281  00FF12  31                 	db	49	;'1'
  5282  00FF13  38                 	db	56	;'8'
  5283  00FF14  4C                 	db	76	;'L'
  5284  00FF15  46                 	db	70	;'F'
  5285  00FF16  36                 	db	54	;'6'
  5286  00FF17  37                 	db	55	;'7'
  5287  00FF18  4B                 	db	75	;'K'
  5288  00FF19  34                 	db	52	;'4'
  5289  00FF1A  30                 	db	48	;'0'
  5290  00FF1B  00                 	db	0
  5291  00FF1C                     STR_55:
  5292  00FF1C  52                 	db	82	;'R'
  5293  00FF1D  65                 	db	101	;'e'
  5294  00FF1E  76                 	db	118	;'v'
  5295  00FF1F  69                 	db	105	;'i'
  5296  00FF20  73                 	db	115	;'s'
  5297  00FF21  69                 	db	105	;'i'
  5298  00FF22  6F                 	db	111	;'o'
  5299  00FF23  6E                 	db	110	;'n'
  5300  00FF24  20                 	db	32
  5301  00FF25  49                 	db	73	;'I'
  5302  00FF26  44                 	db	68	;'D'
  5303  00FF27  3F                 	db	63	;'?'
  5304  00FF28  00                 	db	0
  5305  00FF29                     STR_79:
  5306  00FF29  4D                 	db	77	;'M'
  5307  00FF2A  65                 	db	101	;'e'
  5308  00FF2B  61                 	db	97	;'a'
  5309  00FF2C  73                 	db	115	;'s'
  5310  00FF2D  75                 	db	117	;'u'
  5311  00FF2E  72                 	db	114	;'r'
  5312  00FF2F  65                 	db	101	;'e'
  5313  00FF30  20                 	db	32
  5314  00FF31  46                 	db	70	;'F'
  5315  00FF32  56                 	db	86	;'V'
  5316  00FF33  52                 	db	82	;'R'
  5317  00FF34  3F                 	db	63	;'?'
  5318  00FF35  00                 	db	0
  5319  00FF36                     STR_97:
  5320  00FF36  44                 	db	68	;'D'
  5321  00FF37  69                 	db	105	;'i'
  5322  00FF38  73                 	db	115	;'s'
  5323  00FF39  61                 	db	97	;'a'
  5324  00FF3A  62                 	db	98	;'b'
  5325  00FF3B  6C                 	db	108	;'l'
  5326  00FF3C  65                 	db	101	;'e'
  5327  00FF3D  20                 	db	32
  5328  00FF3E  4C                 	db	76	;'L'
  5329  00FF3F  6F                 	db	111	;'o'
  5330  00FF40  61                 	db	97	;'a'
  5331  00FF41  64                 	db	100	;'d'
  5332  00FF42  00                 	db	0
  5333  00FF43                     STR_117:
  5334  00FF43  50                 	db	80	;'P'
  5335  00FF44  49                 	db	73	;'I'
  5336  00FF45  43                 	db	67	;'C'
  5337  00FF46  31                 	db	49	;'1'
  5338  00FF47  38                 	db	56	;'8'
  5339  00FF48  46                 	db	70	;'F'
  5340  00FF49  36                 	db	54	;'6'
  5341  00FF4A  37                 	db	55	;'7'
  5342  00FF4B  4B                 	db	75	;'K'
  5343  00FF4C  34                 	db	52	;'4'
  5344  00FF4D  30                 	db	48	;'0'
  5345  00FF4E  00                 	db	0
  5346  00FF4F                     STR_95:
  5347  00FF4F  45                 	db	69	;'E'
  5348  00FF50  6E                 	db	110	;'n'
  5349  00FF51  61                 	db	97	;'a'
  5350  00FF52  62                 	db	98	;'b'
  5351  00FF53  6C                 	db	108	;'l'
  5352  00FF54  65                 	db	101	;'e'
  5353  00FF55  20                 	db	32
  5354  00FF56  4C                 	db	76	;'L'
  5355  00FF57  6F                 	db	111	;'o'
  5356  00FF58  61                 	db	97	;'a'
  5357  00FF59  64                 	db	100	;'d'
  5358  00FF5A  00                 	db	0
  5359  00FF5B                     STR_53:
  5360  00FF5B  44                 	db	68	;'D'
  5361  00FF5C  65                 	db	101	;'e'
  5362  00FF5D  76                 	db	118	;'v'
  5363  00FF5E  69                 	db	105	;'i'
  5364  00FF5F  63                 	db	99	;'c'
  5365  00FF60  65                 	db	101	;'e'
  5366  00FF61  20                 	db	32
  5367  00FF62  49                 	db	73	;'I'
  5368  00FF63  44                 	db	68	;'D'
  5369  00FF64  3F                 	db	63	;'?'
  5370  00FF65  00                 	db	0
  5371  00FF66                     STR_60:
  5372  00FF66  41                 	db	65	;'A'
  5373  00FF67  44                 	db	68	;'D'
  5374  00FF68  43                 	db	67	;'C'
  5375  00FF69  20                 	db	32
  5376  00FF6A  45                 	db	69	;'E'
  5377  00FF6B  72                 	db	114	;'r'
  5378  00FF6C  72                 	db	114	;'r'
  5379  00FF6D  6F                 	db	111	;'o'
  5380  00FF6E  72                 	db	114	;'r'
  5381  00FF6F  3F                 	db	63	;'?'
  5382  00FF70  00                 	db	0
  5383  00FF71                     STR_119:
  5384  00FF71  55                 	db	85	;'U'
  5385  00FF72  6E                 	db	110	;'n'
  5386  00FF73  64                 	db	100	;'d'
  5387  00FF74  65                 	db	101	;'e'
  5388  00FF75  66                 	db	102	;'f'
  5389  00FF76  69                 	db	105	;'i'
  5390  00FF77  6E                 	db	110	;'n'
  5391  00FF78  65                 	db	101	;'e'
  5392  00FF79  64                 	db	100	;'d'
  5393  00FF7A  00                 	db	0
  5394  00FF7B                     STR_57:
  5395  00FF7B  55                 	db	85	;'U'
  5396  00FF7C  73                 	db	115	;'s'
  5397  00FF7D  65                 	db	101	;'e'
  5398  00FF7E  72                 	db	114	;'r'
  5399  00FF7F  20                 	db	32
  5400  00FF80  49                 	db	73	;'I'
  5401  00FF81  44                 	db	68	;'D'
  5402  00FF82  73                 	db	115	;'s'
  5403  00FF83  3F                 	db	63	;'?'
  5404  00FF84  00                 	db	0
  5405  00FF85                     STR_132:
  5406  00FF85  28                 	db	40
  5407  00FF86  6E                 	db	110	;'n'
  5408  00FF87  75                 	db	117	;'u'
  5409  00FF88  6C                 	db	108	;'l'
  5410  00FF89  6C                 	db	108	;'l'
  5411  00FF8A  29                 	db	41
  5412  00FF8B  00                 	db	0
  5413  00FF8C                     STR_63:
  5414  00FF8C  50                 	db	80	;'P'
  5415  00FF8D  4F                 	db	79	;'O'
  5416  00FF8E  53                 	db	83	;'S'
  5417  00FF8F  33                 	db	51	;'3'
  5418  00FF90  50                 	db	80	;'P'
  5419  00FF91  33                 	db	51	;'3'
  5420  00FF92  00                 	db	0
  5421  00FF93                     STR_62:
  5422  00FF93  50                 	db	80	;'P'
  5423  00FF94  4F                 	db	79	;'O'
  5424  00FF95  53                 	db	83	;'S'
  5425  00FF96  31                 	db	49	;'1'
  5426  00FF97  32                 	db	50	;'2'
  5427  00FF98  00                 	db	0
  5428  00FF99                     STR_49:
  5429  00FF99  2A                 	db	42
  5430  00FF9A  49                 	db	73	;'I'
  5431  00FF9B  44                 	db	68	;'D'
  5432  00FF9C  4E                 	db	78	;'N'
  5433  00FF9D  3F                 	db	63	;'?'
  5434  00FF9E  00                 	db	0
  5435  00FF9F                     STR_44:
  5436  00FF9F  43                 	db	67	;'C'
  5437  00FFA0  6C                 	db	108	;'l'
  5438  00FFA1  65                 	db	101	;'e'
  5439  00FFA2  61                 	db	97	;'a'
  5440  00FFA3  72                 	db	114	;'r'
  5441  00FFA4  00                 	db	0
  5442  00FFA5                     STR_61:
  5443  00FFA5  49                 	db	73	;'I'
  5444  00FFA6  53                 	db	83	;'S'
  5445  00FFA7  4E                 	db	78	;'N'
  5446  00FFA8  53                 	db	83	;'S'
  5447  00FFA9  00                 	db	0
  5448  00FFAA                     STR_110:
  5449  00FFAA  48                 	db	72	;'H'
  5450  00FFAB  65                 	db	101	;'e'
  5451  00FFAC  6C                 	db	108	;'l'
  5452  00FFAD  70                 	db	112	;'p'
  5453  00FFAE  00                 	db	0
  5454  00FFAF                     STR_2:
  5455  00FFAF  1B                 	db	27
  5456  00FFB0  5B                 	db	91	;'['
  5457  00FFB1  32                 	db	50	;'2'
  5458  00FFB2  4A                 	db	74	;'J'
  5459  00FFB3  00                 	db	0
  5460  00FFB4                     STR_50:
  5461  00FFB4  49                 	db	73	;'I'
  5462  00FFB5  44                 	db	68	;'D'
  5463  00FFB6  4E                 	db	78	;'N'
  5464  00FFB7  00                 	db	0
  5465  00FFB8                     STR_3:
  5466  00FFB8  1B                 	db	27
  5467  00FFB9  5B                 	db	91	;'['
  5468  00FFBA  48                 	db	72	;'H'
  5469  00FFBB  00                 	db	0
  5470  00FFBC  1B                 	db	27
  5471  00FFBD  5B                 	db	91	;'['
  5472  00FFBE  73                 	db	115	;'s'
  5473  00FFBF  00                 	db	0
  5474  00FFC0  1B                 	db	27
  5475  00FFC1  5B                 	db	91	;'['
  5476  00FFC2  75                 	db	117	;'u'
  5477  00FFC3  00                 	db	0
  5478  00FFC4                     STR_1:
  5479  00FFC4  1B                 	db	27
  5480  00FFC5  5B                 	db	91	;'['
  5481  00FFC6  4B                 	db	75	;'K'
  5482  00FFC7  00                 	db	0
  5483  00FFC8                     STR_20:
  5484  00FFC8  33                 	db	51	;'3'
  5485  00FFC9  30                 	db	48	;'0'
  5486  00FFCA  00                 	db	0
  5487  00FFCB                     STR_21:
  5488  00FFCB  33                 	db	51	;'3'
  5489  00FFCC  31                 	db	49	;'1'
  5490  00FFCD  00                 	db	0
  5491  00FFCE                     STR_31:
  5492  00FFCE  34                 	db	52	;'4'
  5493  00FFCF  31                 	db	49	;'1'
  5494  00FFD0  00                 	db	0
  5495  00FFD1                     STR_22:
  5496  00FFD1  33                 	db	51	;'3'
  5497  00FFD2  32                 	db	50	;'2'
  5498  00FFD3  00                 	db	0
  5499  00FFD4                     STR_32:
  5500  00FFD4  34                 	db	52	;'4'
  5501  00FFD5  32                 	db	50	;'2'
  5502  00FFD6  00                 	db	0
  5503  00FFD7                     STR_23:
  5504  00FFD7  33                 	db	51	;'3'
  5505  00FFD8  33                 	db	51	;'3'
  5506  00FFD9  00                 	db	0
  5507  00FFDA                     STR_33:
  5508  00FFDA  34                 	db	52	;'4'
  5509  00FFDB  33                 	db	51	;'3'
  5510  00FFDC  00                 	db	0
  5511  00FFDD                     STR_24:
  5512  00FFDD  33                 	db	51	;'3'
  5513  00FFDE  34                 	db	52	;'4'
  5514  00FFDF  00                 	db	0
  5515  00FFE0                     STR_34:
  5516  00FFE0  34                 	db	52	;'4'
  5517  00FFE1  34                 	db	52	;'4'
  5518  00FFE2  00                 	db	0
  5519  00FFE3                     STR_25:
  5520  00FFE3  33                 	db	51	;'3'
  5521  00FFE4  35                 	db	53	;'5'
  5522  00FFE5  00                 	db	0
  5523  00FFE6                     STR_35:
  5524  00FFE6  34                 	db	52	;'4'
  5525  00FFE7  35                 	db	53	;'5'
  5526  00FFE8  00                 	db	0
  5527  00FFE9                     STR_26:
  5528  00FFE9  33                 	db	51	;'3'
  5529  00FFEA  36                 	db	54	;'6'
  5530  00FFEB  00                 	db	0
  5531  00FFEC                     STR_36:
  5532  00FFEC  34                 	db	52	;'4'
  5533  00FFED  36                 	db	54	;'6'
  5534  00FFEE  00                 	db	0
  5535  00FFEF                     STR_27:
  5536  00FFEF  33                 	db	51	;'3'
  5537  00FFF0  37                 	db	55	;'7'
  5538  00FFF1  00                 	db	0
  5539  00FFF2                     STR_37:
  5540  00FFF2  34                 	db	52	;'4'
  5541  00FFF3  37                 	db	55	;'7'
  5542  00FFF4  00                 	db	0
  5543  00FFF5                     STR_11:
  5544  00FFF5  1B                 	db	27
  5545  00FFF6  5B                 	db	91	;'['
  5546  00FFF7  00                 	db	0
  5547  00FFF8                     STR_17:
  5548  00FFF8  38                 	db	56	;'8'
  5549  00FFF9  00                 	db	0
  5550  00FFFA                     STR_19:
  5551  00FFFA  3B                 	db	59	;';'
  5552  00FFFB  00                 	db	0
  5553  00FFFC                     STR_39:
  5554  00FFFC  6D                 	db	109	;'m'
  5555  00FFFD  00                 	db	0
  5556  0000                     
  5557                           ; #config settings
  5558  00FFFE  00                 	db	0	; dummy byte at the end
  5559  0000                     
  5560                           	psect	cinit
  5561  016084                     __pcinit:
  5562                           	opt stack 0
  5563  016084                     start_initialization:
  5564                           	opt stack 0
  5565  016084                     __initialization:
  5566                           	opt stack 0
  5567                           
  5568                           ; Initialize objects allocated to BANK2 (24 bytes)
  5569                           ; load TBLPTR registers with __pidataBANK2
  5570  016084  0E8C               	movlw	low __pidataBANK2
  5571  016086  6EF6               	movwf	tblptrl,c
  5572  016088  0E6F               	movlw	high __pidataBANK2
  5573  01608A  6EF7               	movwf	tblptrh,c
  5574  01608C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  5575  01608E  6EF8               	movwf	tblptru,c
  5576  016090  EE02  F0A4         	lfsr	0,__pdataBANK2
  5577  016094  EE10 F018          	lfsr	1,24
  5578  016098                     copy_data0:
  5579  016098  0009               	tblrd		*+
  5580  01609A  CFF5 FFEE          	movff	tablat,postinc0
  5581  01609E  50E5               	movf	postdec1,w,c
  5582  0160A0  50E1               	movf	fsr1l,w,c
  5583  0160A2  E1FA               	bnz	copy_data0
  5584                           
  5585                           ; Initialize objects allocated to BANK0 (14 bytes)
  5586                           ; load TBLPTR registers with __pidataBANK0
  5587  0160A4  0E0C               	movlw	low __pidataBANK0
  5588  0160A6  6EF6               	movwf	tblptrl,c
  5589  0160A8  0E70               	movlw	high __pidataBANK0
  5590  0160AA  6EF7               	movwf	tblptrh,c
  5591  0160AC  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  5592  0160AE  6EF8               	movwf	tblptru,c
  5593  0160B0  EE00  F0F1         	lfsr	0,__pdataBANK0
  5594  0160B4  EE10 F00E          	lfsr	1,14
  5595  0160B8                     copy_data1:
  5596  0160B8  0009               	tblrd		*+
  5597  0160BA  CFF5 FFEE          	movff	tablat,postinc0
  5598  0160BE  50E5               	movf	postdec1,w,c
  5599  0160C0  50E1               	movf	fsr1l,w,c
  5600  0160C2  E1FA               	bnz	copy_data1
  5601                           
  5602                           ; Clear objects allocated to BANK3 (128 bytes)
  5603  0160C4  EE03  F000         	lfsr	0,__pbssBANK3
  5604  0160C8  0E80               	movlw	128
  5605  0160CA                     clear_0:
  5606  0160CA  6AEE               	clrf	postinc0,c
  5607  0160CC  06E8               	decf	wreg,f,c
  5608  0160CE  E1FD               	bnz	clear_0
  5609                           
  5610                           ; Clear objects allocated to BANK2 (130 bytes)
  5611  0160D0  EE02  F000         	lfsr	0,__pbssBANK2
  5612  0160D4  0E82               	movlw	130
  5613  0160D6                     clear_1:
  5614  0160D6  6AEE               	clrf	postinc0,c
  5615  0160D8  06E8               	decf	wreg,f,c
  5616  0160DA  E1FD               	bnz	clear_1
  5617                           
  5618                           ; Clear objects allocated to BANK1 (36 bytes)
  5619  0160DC  EE01  F0B3         	lfsr	0,__pbssBANK1
  5620  0160E0  0E24               	movlw	36
  5621  0160E2                     clear_2:
  5622  0160E2  6AEE               	clrf	postinc0,c
  5623  0160E4  06E8               	decf	wreg,f,c
  5624  0160E6  E1FD               	bnz	clear_2
  5625                           
  5626                           ; Clear objects allocated to BITBANK0 (1 bytes)
  5627  0160E8  0100               	movlb	0
  5628  0160EA  6BFF               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  5629                           
  5630                           ; Clear objects allocated to BANK0 (41 bytes)
  5631  0160EC  EE00  F0C8         	lfsr	0,__pbssBANK0
  5632  0160F0  0E29               	movlw	41
  5633  0160F2                     clear_3:
  5634  0160F2  6AEE               	clrf	postinc0,c
  5635  0160F4  06E8               	decf	wreg,f,c
  5636  0160F6  E1FD               	bnz	clear_3
  5637                           
  5638                           ; Clear objects allocated to BITCOMRAM (1 bytes)
  5639  0160F8  6A5E               	clrf	(__pbitbssCOMRAM/(0+8))& (0+255),c
  5640  0160FA                     end_of_initialization:
  5641                           	opt stack 0
  5642  0160FA                     __end_of__initialization:
  5643                           	opt stack 0
  5644  0160FA  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5645  0160FC  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5646  0160FE  0100               	movlb	0
  5647  016100  EFFA  F0B0         	goto	_main	;jump to C main() function
  5648                           tblptru	equ	0xFF8
  5649                           tblptrh	equ	0xFF7
  5650                           tblptrl	equ	0xFF6
  5651                           tablat	equ	0xFF5
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           fsr1l	equ	0xFE1
  5656                           
  5657                           	psect	bitbssCOMRAM
  5658  0002F0                     __pbitbssCOMRAM:
  5659                           	opt stack 0
  5660  0002F0                     _adc_error_flag:
  5661                           	opt stack 0
  5662  0002F0                     	ds	1
  5663  0002F1                     _load_enable:
  5664                           	opt stack 0
  5665  0002F1                     	ds	1
  5666                           tblptru	equ	0xFF8
  5667                           tblptrh	equ	0xFF7
  5668                           tblptrl	equ	0xFF6
  5669                           tablat	equ	0xFF5
  5670                           postinc0	equ	0xFEE
  5671                           wreg	equ	0xFE8
  5672                           postdec1	equ	0xFE5
  5673                           fsr1l	equ	0xFE1
  5674                           
  5675                           	psect	bitbssBANK0
  5676  0007F8                     __pbitbssBANK0:
  5677                           	opt stack 0
  5678  0007F8                     _eusart2RxStringReady:
  5679                           	opt stack 0
  5680  0007F8                     	ds	1
  5681                           tblptru	equ	0xFF8
  5682                           tblptrh	equ	0xFF7
  5683                           tblptrl	equ	0xFF6
  5684                           tablat	equ	0xFF5
  5685                           postinc0	equ	0xFEE
  5686                           wreg	equ	0xFE8
  5687                           postdec1	equ	0xFE5
  5688                           fsr1l	equ	0xFE1
  5689                           
  5690                           	psect	bssBANK0
  5691  0000C8                     __pbssBANK0:
  5692                           	opt stack 0
  5693  0000C8                     _Vrms:
  5694                           	opt stack 0
  5695  0000C8                     	ds	3
  5696  0000CB                     _Irms:
  5697                           	opt stack 0
  5698  0000CB                     	ds	3
  5699  0000CE                     _Imeas:
  5700                           	opt stack 0
  5701  0000CE                     	ds	3
  5702  0000D1                     _Ipk:
  5703                           	opt stack 0
  5704  0000D1                     	ds	3
  5705  0000D4                     _Vpk:
  5706                           	opt stack 0
  5707  0000D4                     	ds	3
  5708  0000D7                     _Temp_ADC_Result:
  5709                           	opt stack 0
  5710  0000D7                     	ds	3
  5711  0000DA                     _POS12_ADC_Result:
  5712                           	opt stack 0
  5713  0000DA                     	ds	3
  5714  0000DD                     _POS3P3_ADC_Result:
  5715                           	opt stack 0
  5716  0000DD                     	ds	3
  5717  0000E0                     _ADC_Result_Scaling:
  5718                           	opt stack 0
  5719  0000E0                     	ds	3
  5720  0000E3                     _AVSS_ADC_Result:
  5721                           	opt stack 0
  5722  0000E3                     	ds	3
  5723  0000E6                     _ADCC_ADI_InterruptHandler:
  5724                           	opt stack 0
  5725  0000E6                     	ds	3
  5726  0000E9                     _reset_cause:
  5727                           	opt stack 0
  5728  0000E9                     	ds	1
  5729  0000EA                     _background_color:
  5730                           	opt stack 0
  5731  0000EA                     	ds	1
  5732  0000EB                     _foreground_color:
  5733                           	opt stack 0
  5734  0000EB                     	ds	1
  5735  0000EC                     _attribute:
  5736                           	opt stack 0
  5737  0000EC                     	ds	1
  5738  0000ED                     _eusart2RxHead:
  5739                           	opt stack 0
  5740  0000ED                     	ds	1
  5741  0000EE                     _FVR_ADC_Result:
  5742                           	opt stack 0
  5743  0000EE                     	ds	3
  5744                           tblptru	equ	0xFF8
  5745                           tblptrh	equ	0xFF7
  5746                           tblptrl	equ	0xFF6
  5747                           tablat	equ	0xFF5
  5748                           postinc0	equ	0xFEE
  5749                           wreg	equ	0xFE8
  5750                           postdec1	equ	0xFE5
  5751                           fsr1l	equ	0xFE1
  5752                           
  5753                           	psect	dataBANK0
  5754  0000F1                     __pdataBANK0:
  5755                           	opt stack 0
  5756  0000F1                     _Irms_offset:
  5757                           	opt stack 0
  5758  0000F1                     	ds	3
  5759  0000F4                     _Vpk_const:
  5760                           	opt stack 0
  5761  0000F4                     	ds	3
  5762  0000F7                     _Temp_ADC_Offset:
  5763                           	opt stack 0
  5764  0000F7                     	ds	3
  5765  0000FA                     _dimming_period:
  5766                           	opt stack 0
  5767  0000FA                     	ds	2
  5768  0000FC                     _TRIAC_Firing_Angle:
  5769                           	opt stack 0
  5770  0000FC                     	ds	3
  5771                           tblptru	equ	0xFF8
  5772                           tblptrh	equ	0xFF7
  5773                           tblptrl	equ	0xFF6
  5774                           tablat	equ	0xFF5
  5775                           postinc0	equ	0xFEE
  5776                           wreg	equ	0xFE8
  5777                           postdec1	equ	0xFE5
  5778                           fsr1l	equ	0xFE1
  5779                           
  5780                           	psect	bssBANK1
  5781  0001B3                     __pbssBANK1:
  5782                           	opt stack 0
  5783  0001B3                     _load_on_time:
  5784                           	opt stack 0
  5785  0001B3                     	ds	4
  5786  0001B7                     _dev_on_time:
  5787                           	opt stack 0
  5788  0001B7                     	ds	4
  5789  0001BB                     _Avg_Power:
  5790                           	opt stack 0
  5791  0001BB                     	ds	3
  5792  0001BE                     _TMR5_InterruptHandler:
  5793                           	opt stack 0
  5794  0001BE                     	ds	3
  5795  0001C1                     _TMR7_InterruptHandler:
  5796                           	opt stack 0
  5797  0001C1                     	ds	3
  5798  0001C4                     _TMR6_InterruptHandler:
  5799                           	opt stack 0
  5800  0001C4                     	ds	3
  5801  0001C7                     _EUSART2_RxDefaultInterruptHandler:
  5802                           	opt stack 0
  5803  0001C7                     	ds	3
  5804  0001CA                     _EUSART2_TxDefaultInterruptHandler:
  5805                           	opt stack 0
  5806  0001CA                     	ds	3
  5807  0001CD                     _timer5ReloadVal:
  5808                           	opt stack 0
  5809  0001CD                     	ds	2
  5810  0001CF                     _timer7ReloadVal:
  5811                           	opt stack 0
  5812  0001CF                     	ds	2
  5813  0001D1                     _current_adc_channel:
  5814                           	opt stack 0
  5815  0001D1                     	ds	1
  5816  0001D2                     _eusart2RxCount:
  5817                           	opt stack 0
  5818  0001D2                     	ds	1
  5819  0001D3                     _eusart2RxTail:
  5820                           	opt stack 0
  5821  0001D3                     	ds	1
  5822  0001D4                     _eusart2TxBufferRemaining:
  5823                           	opt stack 0
  5824  0001D4                     	ds	1
  5825  0001D5                     _eusart2TxTail:
  5826                           	opt stack 0
  5827  0001D5                     	ds	1
  5828  0001D6                     _eusart2TxHead:
  5829                           	opt stack 0
  5830  0001D6                     	ds	1
  5831                           tblptru	equ	0xFF8
  5832                           tblptrh	equ	0xFF7
  5833                           tblptrl	equ	0xFF6
  5834                           tablat	equ	0xFF5
  5835                           postinc0	equ	0xFEE
  5836                           wreg	equ	0xFE8
  5837                           postdec1	equ	0xFE5
  5838                           fsr1l	equ	0xFE1
  5839                           
  5840                           	psect	bssBANK2
  5841  000200                     __pbssBANK2:
  5842                           	opt stack 0
  5843  000200                     _eusart2RxBuffer:
  5844                           	opt stack 0
  5845  000200                     	ds	64
  5846  000240                     _errno:
  5847                           	opt stack 0
  5848  000240                     	ds	2
  5849  000242                     _line:
  5850                           	opt stack 0
  5851  000242                     	ds	64
  5852                           tblptru	equ	0xFF8
  5853                           tblptrh	equ	0xFF7
  5854                           tblptrl	equ	0xFF6
  5855                           tablat	equ	0xFF5
  5856                           postinc0	equ	0xFEE
  5857                           wreg	equ	0xFE8
  5858                           postdec1	equ	0xFE5
  5859                           fsr1l	equ	0xFE1
  5860                           
  5861                           	psect	dataBANK2
  5862  0002A4                     __pdataBANK2:
  5863                           	opt stack 0
  5864  0002A4                     getCauseOfResetString@F17476:
  5865                           	opt stack 0
  5866  0002A4                     	ds	24
  5867                           tblptru	equ	0xFF8
  5868                           tblptrh	equ	0xFF7
  5869                           tblptrl	equ	0xFF6
  5870                           tablat	equ	0xFF5
  5871                           postinc0	equ	0xFEE
  5872                           wreg	equ	0xFE8
  5873                           postdec1	equ	0xFE5
  5874                           fsr1l	equ	0xFE1
  5875                           
  5876                           	psect	bssBANK3
  5877  000300                     __pbssBANK3:
  5878                           	opt stack 0
  5879  000300                     _eusart2TxBuffer:
  5880                           	opt stack 0
  5881  000300                     	ds	128
  5882                           tblptru	equ	0xFF8
  5883                           tblptrh	equ	0xFF7
  5884                           tblptrl	equ	0xFF6
  5885                           tablat	equ	0xFF5
  5886                           postinc0	equ	0xFEE
  5887                           wreg	equ	0xFE8
  5888                           postdec1	equ	0xFE5
  5889                           fsr1l	equ	0xFE1
  5890                           
  5891                           	psect	cstackBANK2
  5892  000282                     __pcstackBANK2:
  5893                           	opt stack 0
  5894  000282                     ringBufferLUT@channel_name:
  5895                           	opt stack 0
  5896                           
  5897                           ; 22 bytes @ 0x0
  5898  000282                     	ds	22
  5899  000298                     ringBufferLUT@angle_degrees:
  5900                           	opt stack 0
  5901                           
  5902                           ; 3 bytes @ 0x16
  5903  000298                     	ds	3
  5904  00029B                     ringBufferLUT@arg_buff:
  5905                           	opt stack 0
  5906                           
  5907                           ; 3 bytes @ 0x19
  5908  00029B                     	ds	3
  5909  00029E                     ringBufferLUT@index:
  5910                           	opt stack 0
  5911                           
  5912                           ; 2 bytes @ 0x1C
  5913  00029E                     	ds	2
  5914  0002A0                     ringBufferLUT@percentage:
  5915                           	opt stack 0
  5916                           
  5917                           ; 2 bytes @ 0x1E
  5918  0002A0                     	ds	2
  5919  0002A2                     ringBufferLUT@userID:
  5920                           	opt stack 0
  5921                           
  5922                           ; 2 bytes @ 0x20
  5923  0002A2                     	ds	2
  5924                           tblptru	equ	0xFF8
  5925                           tblptrh	equ	0xFF7
  5926                           tblptrl	equ	0xFF6
  5927                           tablat	equ	0xFF5
  5928                           postinc0	equ	0xFEE
  5929                           wreg	equ	0xFE8
  5930                           postdec1	equ	0xFE5
  5931                           fsr1l	equ	0xFE1
  5932                           
  5933                           	psect	cstackBANK1
  5934  000100                     __pcstackBANK1:
  5935                           	opt stack 0
  5936  000100                     ??_heartbeatTimerCallback:
  5937  000100                     ADCC_StartConversion@channel:
  5938                           	opt stack 0
  5939  000100                     TMR7_WriteTimer@timerVal:
  5940                           	opt stack 0
  5941                           
  5942                           ; 2 bytes @ 0x0
  5943  000100                     	ds	1
  5944  000101                     
  5945                           ; 1 bytes @ 0x1
  5946  000101                     	ds	1
  5947  000102                     ??_INTERRUPT_InterruptManagerLow:
  5948  000102                     
  5949                           ; 1 bytes @ 0x2
  5950  000102                     	ds	21
  5951  000117                     ??_isdigit:
  5952  000117                     ?_strlen:
  5953                           	opt stack 0
  5954  000117                     ?_strcmp:
  5955                           	opt stack 0
  5956  000117                     ?_getCauseOfResetString:
  5957                           	opt stack 0
  5958  000117                     ?_strchr:
  5959                           	opt stack 0
  5960  000117                     ?___awmod:
  5961                           	opt stack 0
  5962  000117                     ?___lwdiv:
  5963                           	opt stack 0
  5964  000117                     ?___lwmod:
  5965                           	opt stack 0
  5966  000117                     ?___ftpack:
  5967                           	opt stack 0
  5968  000117                     ?__tdiv_to_l_:
  5969                           	opt stack 0
  5970  000117                     ?__div_to_l_:
  5971                           	opt stack 0
  5972  000117                     ?___lldiv:
  5973                           	opt stack 0
  5974  000117                     EUSART2_Read@readValue:
  5975                           	opt stack 0
  5976  000117                     EUSART2_Write@txData:
  5977                           	opt stack 0
  5978  000117                     ___awmod@dividend:
  5979                           	opt stack 0
  5980  000117                     ___lwdiv@dividend:
  5981                           	opt stack 0
  5982  000117                     ___lwmod@dividend:
  5983                           	opt stack 0
  5984  000117                     strcat@to:
  5985                           	opt stack 0
  5986  000117                     strcmp@s1:
  5987                           	opt stack 0
  5988  000117                     strcpy@to:
  5989                           	opt stack 0
  5990  000117                     strlen@s:
  5991                           	opt stack 0
  5992  000117                     strncpy@to:
  5993                           	opt stack 0
  5994  000117                     strchr@ptr:
  5995                           	opt stack 0
  5996  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  5997                           	opt stack 0
  5998  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  5999                           	opt stack 0
  6000  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  6001                           	opt stack 0
  6002  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  6003                           	opt stack 0
  6004  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  6005                           	opt stack 0
  6006  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  6007                           	opt stack 0
  6008  000117                     __div_to_l_@f1:
  6009                           	opt stack 0
  6010  000117                     ___ftpack@arg:
  6011                           	opt stack 0
  6012  000117                     __tdiv_to_l_@f1:
  6013                           	opt stack 0
  6014  000117                     ___ftge@ff1:
  6015                           	opt stack 0
  6016  000117                     FLASH_ReadByte@flashAddr:
  6017                           	opt stack 0
  6018  000117                     ___lldiv@dividend:
  6019                           	opt stack 0
  6020                           
  6021                           ; 4 bytes @ 0x17
  6022  000117                     	ds	1
  6023  000118                     putch@txData:
  6024                           	opt stack 0
  6025  000118                     _isdigit$3018:
  6026                           	opt stack 0
  6027                           
  6028                           ; 1 bytes @ 0x18
  6029  000118                     	ds	1
  6030  000119                     ??_strlen:
  6031  000119                     isdigit@c:
  6032                           	opt stack 0
  6033  000119                     ___awmod@divisor:
  6034                           	opt stack 0
  6035  000119                     ___lwdiv@divisor:
  6036                           	opt stack 0
  6037  000119                     ___lwmod@divisor:
  6038                           	opt stack 0
  6039  000119                     strcat@from:
  6040                           	opt stack 0
  6041  000119                     strcmp@s2:
  6042                           	opt stack 0
  6043  000119                     strcpy@from:
  6044                           	opt stack 0
  6045  000119                     strncpy@from:
  6046                           	opt stack 0
  6047  000119                     strchr@chr:
  6048                           	opt stack 0
  6049  000119                     getCauseOfResetString@strings:
  6050                           	opt stack 0
  6051                           
  6052                           ; 24 bytes @ 0x19
  6053  000119                     	ds	1
  6054  00011A                     ??_TMR7_Initialize:
  6055  00011A                     ??_TMR5_Initialize:
  6056  00011A                     ___ftpack@exp:
  6057                           	opt stack 0
  6058  00011A                     __div_to_l_@f2:
  6059                           	opt stack 0
  6060  00011A                     __tdiv_to_l_@f2:
  6061                           	opt stack 0
  6062  00011A                     ___ftge@ff2:
  6063                           	opt stack 0
  6064                           
  6065                           ; 3 bytes @ 0x1A
  6066  00011A                     	ds	1
  6067  00011B                     ??_strcmp:
  6068  00011B                     ?_FLASH_ReadWord:
  6069                           	opt stack 0
  6070  00011B                     ___awmod@counter:
  6071                           	opt stack 0
  6072  00011B                     ___ftpack@sign:
  6073                           	opt stack 0
  6074  00011B                     ___lwdiv@counter:
  6075                           	opt stack 0
  6076  00011B                     ___lwmod@counter:
  6077                           	opt stack 0
  6078  00011B                     strcat@cp:
  6079                           	opt stack 0
  6080  00011B                     strcpy@cp:
  6081                           	opt stack 0
  6082  00011B                     strlen@cp:
  6083                           	opt stack 0
  6084  00011B                     strncpy@size:
  6085                           	opt stack 0
  6086  00011B                     FLASH_ReadWord@flashAddr:
  6087                           	opt stack 0
  6088  00011B                     ___lldiv@divisor:
  6089                           	opt stack 0
  6090                           
  6091                           ; 4 bytes @ 0x1B
  6092  00011B                     	ds	1
  6093  00011C                     ??___ftpack:
  6094  00011C                     ___awmod@sign:
  6095                           	opt stack 0
  6096  00011C                     strcmp@r:
  6097                           	opt stack 0
  6098  00011C                     ___lwdiv@quotient:
  6099                           	opt stack 0
  6100                           
  6101                           ; 2 bytes @ 0x1C
  6102  00011C                     	ds	1
  6103  00011D                     ??__tdiv_to_l_:
  6104  00011D                     ??___ftge:
  6105  00011D                     ?_getDeviceIDString:
  6106                           	opt stack 0
  6107  00011D                     ?_strncmp:
  6108                           	opt stack 0
  6109  00011D                     ?___awdiv:
  6110                           	opt stack 0
  6111  00011D                     getDeviceIDString@inputDevID:
  6112                           	opt stack 0
  6113  00011D                     ___awdiv@dividend:
  6114                           	opt stack 0
  6115  00011D                     strncpy@cp:
  6116                           	opt stack 0
  6117  00011D                     strncmp@s1:
  6118                           	opt stack 0
  6119  00011D                     __div_to_l_@quot:
  6120                           	opt stack 0
  6121                           
  6122                           ; 4 bytes @ 0x1D
  6123  00011D                     	ds	1
  6124  00011E                     utoa@buf:
  6125                           	opt stack 0
  6126                           
  6127                           ; 2 bytes @ 0x1E
  6128  00011E                     	ds	1
  6129  00011F                     ??_getDeviceIDString:
  6130  00011F                     ??_FLASH_ReadWord:
  6131  00011F                     ?___awtoft:
  6132                           	opt stack 0
  6133  00011F                     ?___lltoft:
  6134                           	opt stack 0
  6135  00011F                     ___awdiv@divisor:
  6136                           	opt stack 0
  6137  00011F                     ___awtoft@c:
  6138                           	opt stack 0
  6139  00011F                     strncmp@s2:
  6140                           	opt stack 0
  6141  00011F                     ___lldiv@quotient:
  6142                           	opt stack 0
  6143  00011F                     ___lltoft@c:
  6144                           	opt stack 0
  6145                           
  6146                           ; 4 bytes @ 0x1F
  6147  00011F                     	ds	1
  6148  000120                     utoa@val:
  6149                           	opt stack 0
  6150  000120                     __tdiv_to_l_@quot:
  6151                           	opt stack 0
  6152                           
  6153                           ; 4 bytes @ 0x20
  6154  000120                     	ds	1
  6155  000121                     ___awdiv@counter:
  6156                           	opt stack 0
  6157  000121                     __div_to_l_@cntr:
  6158                           	opt stack 0
  6159  000121                     strncmp@len:
  6160                           	opt stack 0
  6161  000121                     getDeviceIDString@returnString:
  6162                           	opt stack 0
  6163                           
  6164                           ; 12 bytes @ 0x21
  6165  000121                     	ds	1
  6166  000122                     ??_getMajorRevisionID:
  6167  000122                     ?_getDeviceID:
  6168                           	opt stack 0
  6169  000122                     ?_getUserID:
  6170                           	opt stack 0
  6171  000122                     ___awdiv@sign:
  6172                           	opt stack 0
  6173  000122                     ___awtoft@sign:
  6174                           	opt stack 0
  6175  000122                     __div_to_l_@exp1:
  6176                           	opt stack 0
  6177  000122                     getMinorRevisionID@REVID_RAW:
  6178                           	opt stack 0
  6179  000122                     utoa@base:
  6180                           	opt stack 0
  6181                           
  6182                           ; 2 bytes @ 0x22
  6183  000122                     	ds	1
  6184  000123                     ??_strncmp:
  6185  000123                     ??___lltoft:
  6186  000123                     ?___ftneg:
  6187                           	opt stack 0
  6188  000123                     ___lldiv@counter:
  6189                           	opt stack 0
  6190  000123                     ___awdiv@quotient:
  6191                           	opt stack 0
  6192  000123                     ___ftneg@f1:
  6193                           	opt stack 0
  6194                           
  6195                           ; 3 bytes @ 0x23
  6196  000123                     	ds	1
  6197  000124                     ??_getUserID:
  6198  000124                     ?___llmod:
  6199                           	opt stack 0
  6200  000124                     __tdiv_to_l_@cntr:
  6201                           	opt stack 0
  6202  000124                     utoa@v:
  6203                           	opt stack 0
  6204  000124                     ___llmod@dividend:
  6205                           	opt stack 0
  6206                           
  6207                           ; 4 bytes @ 0x24
  6208  000124                     	ds	1
  6209  000125                     ?___wmul:
  6210                           	opt stack 0
  6211  000125                     __tdiv_to_l_@exp1:
  6212                           	opt stack 0
  6213  000125                     getMajorRevisionID@REVID_RAW:
  6214                           	opt stack 0
  6215  000125                     ___wmul@multiplier:
  6216                           	opt stack 0
  6217                           
  6218                           ; 2 bytes @ 0x25
  6219  000125                     	ds	1
  6220  000126                     ?_strstr:
  6221                           	opt stack 0
  6222  000126                     getUserID@inputUserID:
  6223                           	opt stack 0
  6224  000126                     utoa@c:
  6225                           	opt stack 0
  6226  000126                     strstr@s1:
  6227                           	opt stack 0
  6228                           
  6229                           ; 2 bytes @ 0x26
  6230  000126                     	ds	1
  6231  000127                     ?_getRevisionIDString:
  6232                           	opt stack 0
  6233  000127                     getRevisionIDString@inputMinRevID:
  6234                           	opt stack 0
  6235  000127                     ___lltoft@exp:
  6236                           	opt stack 0
  6237  000127                     getUserID@initialOffset:
  6238                           	opt stack 0
  6239  000127                     ___wmul@multiplicand:
  6240                           	opt stack 0
  6241                           
  6242                           ; 2 bytes @ 0x27
  6243  000127                     	ds	1
  6244  000128                     strstr@s2:
  6245                           	opt stack 0
  6246  000128                     ___llmod@divisor:
  6247                           	opt stack 0
  6248                           
  6249                           ; 4 bytes @ 0x28
  6250  000128                     	ds	1
  6251  000129                     ??_getRevisionIDString:
  6252  000129                     getUserID@IDOffset:
  6253                           	opt stack 0
  6254  000129                     ___wmul@product:
  6255                           	opt stack 0
  6256                           
  6257                           ; 2 bytes @ 0x29
  6258  000129                     	ds	1
  6259  00012A                     
  6260                           ; 1 bytes @ 0x2A
  6261  00012A                     	ds	1
  6262  00012B                     ?_atoi:
  6263                           	opt stack 0
  6264  00012B                     ?___ftadd:
  6265                           	opt stack 0
  6266  00012B                     atoi@s:
  6267                           	opt stack 0
  6268  00012B                     ___ftadd@f1:
  6269                           	opt stack 0
  6270  00012B                     getRevisionIDString@returnString:
  6271                           	opt stack 0
  6272                           
  6273                           ; 4 bytes @ 0x2B
  6274  00012B                     	ds	1
  6275  00012C                     ___llmod@counter:
  6276                           	opt stack 0
  6277                           
  6278                           ; 1 bytes @ 0x2C
  6279  00012C                     	ds	1
  6280  00012D                     ??_atoi:
  6281                           
  6282                           ; 1 bytes @ 0x2D
  6283  00012D                     	ds	1
  6284  00012E                     ___ftadd@f2:
  6285                           	opt stack 0
  6286                           
  6287                           ; 3 bytes @ 0x2E
  6288  00012E                     	ds	1
  6289  00012F                     atoi@sign:
  6290                           	opt stack 0
  6291  00012F                     getRevisionIDString@MinRevStr:
  6292                           	opt stack 0
  6293                           
  6294                           ; 2 bytes @ 0x2F
  6295  00012F                     	ds	1
  6296  000130                     atoi@a:
  6297                           	opt stack 0
  6298                           
  6299                           ; 2 bytes @ 0x30
  6300  000130                     	ds	1
  6301  000131                     ??___ftadd:
  6302  000131                     getRevisionIDString@inputMajRevID:
  6303                           	opt stack 0
  6304  000131                     getCauseOfResetString@r:
  6305                           	opt stack 0
  6306                           
  6307                           ; 1 bytes @ 0x31
  6308  000131                     	ds	1
  6309  000132                     getRevisionIDString@MajRevStr:
  6310                           	opt stack 0
  6311                           
  6312                           ; 1 bytes @ 0x32
  6313  000132                     	ds	2
  6314  000134                     ___ftadd@sign:
  6315                           	opt stack 0
  6316                           
  6317                           ; 1 bytes @ 0x34
  6318  000134                     	ds	1
  6319  000135                     ___ftadd@exp2:
  6320                           	opt stack 0
  6321                           
  6322                           ; 1 bytes @ 0x35
  6323  000135                     	ds	1
  6324  000136                     ___ftadd@exp1:
  6325                           	opt stack 0
  6326                           
  6327                           ; 1 bytes @ 0x36
  6328  000136                     	ds	1
  6329  000137                     ?___ftdiv:
  6330                           	opt stack 0
  6331  000137                     ?___ftsub:
  6332                           	opt stack 0
  6333  000137                     ___ftdiv@f1:
  6334                           	opt stack 0
  6335  000137                     ___ftsub@f1:
  6336                           	opt stack 0
  6337                           
  6338                           ; 3 bytes @ 0x37
  6339  000137                     	ds	3
  6340  00013A                     ___ftdiv@f2:
  6341                           	opt stack 0
  6342  00013A                     ___ftsub@f2:
  6343                           	opt stack 0
  6344                           
  6345                           ; 3 bytes @ 0x3A
  6346  00013A                     	ds	3
  6347  00013D                     ??___ftdiv:
  6348  00013D                     
  6349                           ; 1 bytes @ 0x3D
  6350  00013D                     	ds	3
  6351  000140                     ___ftdiv@cntr:
  6352                           	opt stack 0
  6353                           
  6354                           ; 1 bytes @ 0x40
  6355  000140                     	ds	1
  6356  000141                     ___ftdiv@f3:
  6357                           	opt stack 0
  6358                           
  6359                           ; 3 bytes @ 0x41
  6360  000141                     	ds	3
  6361  000144                     ___ftdiv@exp:
  6362                           	opt stack 0
  6363                           
  6364                           ; 1 bytes @ 0x44
  6365  000144                     	ds	1
  6366  000145                     ___ftdiv@sign:
  6367                           	opt stack 0
  6368                           
  6369                           ; 1 bytes @ 0x45
  6370  000145                     	ds	1
  6371  000146                     ?___ftmul:
  6372                           	opt stack 0
  6373  000146                     ___ftmul@f1:
  6374                           	opt stack 0
  6375                           
  6376                           ; 3 bytes @ 0x46
  6377  000146                     	ds	3
  6378  000149                     ___ftmul@f2:
  6379                           	opt stack 0
  6380                           
  6381                           ; 3 bytes @ 0x49
  6382  000149                     	ds	3
  6383  00014C                     ??___ftmul:
  6384                           
  6385                           ; 1 bytes @ 0x4C
  6386  00014C                     	ds	3
  6387  00014F                     ___ftmul@exp:
  6388                           	opt stack 0
  6389                           
  6390                           ; 1 bytes @ 0x4F
  6391  00014F                     	ds	1
  6392  000150                     ___ftmul@f3_as_product:
  6393                           	opt stack 0
  6394                           
  6395                           ; 3 bytes @ 0x50
  6396  000150                     	ds	3
  6397  000153                     ___ftmul@cntr:
  6398                           	opt stack 0
  6399                           
  6400                           ; 1 bytes @ 0x53
  6401  000153                     	ds	1
  6402  000154                     ___ftmul@sign:
  6403                           	opt stack 0
  6404                           
  6405                           ; 1 bytes @ 0x54
  6406  000154                     	ds	1
  6407  000155                     ?_fround:
  6408                           	opt stack 0
  6409  000155                     ?_scale:
  6410                           	opt stack 0
  6411  000155                     ?___fttol:
  6412                           	opt stack 0
  6413  000155                     ___fttol@f1:
  6414                           	opt stack 0
  6415                           
  6416                           ; 3 bytes @ 0x55
  6417  000155                     	ds	3
  6418  000158                     _fround$3694:
  6419                           	opt stack 0
  6420  000158                     _scale$3695:
  6421                           	opt stack 0
  6422                           
  6423                           ; 3 bytes @ 0x58
  6424  000158                     	ds	1
  6425  000159                     ??___fttol:
  6426                           
  6427                           ; 1 bytes @ 0x59
  6428  000159                     	ds	2
  6429  00015B                     scale@scl:
  6430                           	opt stack 0
  6431  00015B                     _fround$3693:
  6432                           	opt stack 0
  6433                           
  6434                           ; 3 bytes @ 0x5B
  6435  00015B                     	ds	3
  6436  00015E                     fround@prec:
  6437                           	opt stack 0
  6438  00015E                     ___fttol@sign1:
  6439                           	opt stack 0
  6440                           
  6441                           ; 1 bytes @ 0x5E
  6442  00015E                     	ds	1
  6443  00015F                     ___fttol@lval:
  6444                           	opt stack 0
  6445                           
  6446                           ; 4 bytes @ 0x5F
  6447  00015F                     	ds	4
  6448  000163                     ___fttol@exp1:
  6449                           	opt stack 0
  6450                           
  6451                           ; 1 bytes @ 0x63
  6452  000163                     	ds	1
  6453  000164                     ?_printf:
  6454                           	opt stack 0
  6455  000164                     printf@f:
  6456                           	opt stack 0
  6457                           
  6458                           ; 2 bytes @ 0x64
  6459  000164                     	ds	10
  6460  00016E                     ??_printf:
  6461                           
  6462                           ; 1 bytes @ 0x6E
  6463  00016E                     	ds	6
  6464  000174                     _printf$3696:
  6465                           	opt stack 0
  6466                           
  6467                           ; 3 bytes @ 0x74
  6468  000174                     	ds	3
  6469  000177                     printf@idx:
  6470                           	opt stack 0
  6471                           
  6472                           ; 1 bytes @ 0x77
  6473  000177                     	ds	1
  6474  000178                     printf@len:
  6475                           	opt stack 0
  6476                           
  6477                           ; 2 bytes @ 0x78
  6478  000178                     	ds	2
  6479  00017A                     printf@cp:
  6480                           	opt stack 0
  6481                           
  6482                           ; 2 bytes @ 0x7A
  6483  00017A                     	ds	2
  6484  00017C                     printf@ap:
  6485                           	opt stack 0
  6486                           
  6487                           ; 2 bytes @ 0x7C
  6488  00017C                     	ds	2
  6489  00017E                     printf@flag:
  6490                           	opt stack 0
  6491                           
  6492                           ; 2 bytes @ 0x7E
  6493  00017E                     	ds	2
  6494  000180                     printf@exp:
  6495                           	opt stack 0
  6496                           
  6497                           ; 2 bytes @ 0x80
  6498  000180                     	ds	2
  6499  000182                     printf@tmpval:
  6500                           	opt stack 0
  6501                           
  6502                           ; 4 bytes @ 0x82
  6503  000182                     	ds	4
  6504  000186                     printf@val:
  6505                           	opt stack 0
  6506                           
  6507                           ; 4 bytes @ 0x86
  6508  000186                     	ds	4
  6509  00018A                     printf@fval:
  6510                           	opt stack 0
  6511                           
  6512                           ; 3 bytes @ 0x8A
  6513  00018A                     	ds	3
  6514  00018D                     printf@prec:
  6515                           	opt stack 0
  6516                           
  6517                           ; 2 bytes @ 0x8D
  6518  00018D                     	ds	2
  6519  00018F                     printf@c:
  6520                           	opt stack 0
  6521                           
  6522                           ; 1 bytes @ 0x8F
  6523  00018F                     	ds	1
  6524  000190                     terminal_textAttributes@background_color:
  6525                           	opt stack 0
  6526                           
  6527                           ; 1 bytes @ 0x90
  6528  000190                     	ds	1
  6529  000191                     terminal_textAttributes@input_attribute:
  6530                           	opt stack 0
  6531                           
  6532                           ; 1 bytes @ 0x91
  6533  000191                     	ds	1
  6534  000192                     terminal_textAttributes@foreground_color:
  6535                           	opt stack 0
  6536                           
  6537                           ; 1 bytes @ 0x92
  6538  000192                     	ds	1
  6539  000193                     terminal_textAttributes@output_buff:
  6540                           	opt stack 0
  6541                           
  6542                           ; 15 bytes @ 0x93
  6543  000193                     	ds	15
  6544  0001A2                     ringBufferLUT@line:
  6545                           	opt stack 0
  6546                           
  6547                           ; 2 bytes @ 0xA2
  6548  0001A2                     	ds	2
  6549  0001A4                     ??_ringBufferLUT:
  6550                           
  6551                           ; 1 bytes @ 0xA4
  6552  0001A4                     	ds	4
  6553  0001A8                     ??_terminal_ringBufferPull:
  6554                           
  6555                           ; 1 bytes @ 0xA8
  6556  0001A8                     	ds	3
  6557  0001AB                     terminal_ringBufferPull@charNumber:
  6558                           	opt stack 0
  6559                           
  6560                           ; 2 bytes @ 0xAB
  6561  0001AB                     	ds	2
  6562  0001AD                     terminal_ringBufferPull@index_2151:
  6563                           	opt stack 0
  6564                           
  6565                           ; 2 bytes @ 0xAD
  6566  0001AD                     	ds	2
  6567  0001AF                     terminal_ringBufferPull@index:
  6568                           	opt stack 0
  6569                           
  6570                           ; 2 bytes @ 0xAF
  6571  0001AF                     	ds	2
  6572  0001B1                     ??_main:
  6573                           
  6574                           ; 1 bytes @ 0xB1
  6575  0001B1                     	ds	2
  6576                           tblptru	equ	0xFF8
  6577                           tblptrh	equ	0xFF7
  6578                           tblptrl	equ	0xFF6
  6579                           tablat	equ	0xFF5
  6580                           postinc0	equ	0xFEE
  6581                           wreg	equ	0xFE8
  6582                           postdec1	equ	0xFE5
  6583                           fsr1l	equ	0xFE1
  6584                           
  6585                           	psect	cstackBANK0
  6586  000060                     __pcstackBANK0:
  6587                           	opt stack 0
  6588  000060                     ?i2___ftsub:
  6589                           	opt stack 0
  6590  000060                     atan@y:
  6591                           	opt stack 0
  6592  000060                     i2___ftsub@f1:
  6593                           	opt stack 0
  6594                           
  6595                           ; 3 bytes @ 0x0
  6596  000060                     	ds	3
  6597  000063                     atan@x:
  6598                           	opt stack 0
  6599  000063                     i2___ftsub@f2:
  6600                           	opt stack 0
  6601                           
  6602                           ; 3 bytes @ 0x3
  6603  000063                     	ds	3
  6604  000066                     ?i2_printf:
  6605                           	opt stack 0
  6606  000066                     ?_sin:
  6607                           	opt stack 0
  6608  000066                     ?_sqrt:
  6609                           	opt stack 0
  6610  000066                     atan@recip:
  6611                           	opt stack 0
  6612  000066                     i2printf@f:
  6613                           	opt stack 0
  6614  000066                     sin@f:
  6615                           	opt stack 0
  6616  000066                     sqrt@a:
  6617                           	opt stack 0
  6618                           
  6619                           ; 3 bytes @ 0x6
  6620  000066                     	ds	1
  6621  000067                     atan@val_squared:
  6622                           	opt stack 0
  6623                           
  6624                           ; 3 bytes @ 0x7
  6625  000067                     	ds	1
  6626  000068                     ??i2_printf:
  6627                           
  6628                           ; 1 bytes @ 0x8
  6629  000068                     	ds	1
  6630  000069                     ??_sqrt:
  6631  000069                     sin@y:
  6632                           	opt stack 0
  6633                           
  6634                           ; 3 bytes @ 0x9
  6635  000069                     	ds	1
  6636  00006A                     atan@val:
  6637                           	opt stack 0
  6638                           
  6639                           ; 3 bytes @ 0xA
  6640  00006A                     	ds	2
  6641  00006C                     sqrt@og:
  6642                           	opt stack 0
  6643  00006C                     _sin$3892:
  6644                           	opt stack 0
  6645                           
  6646                           ; 3 bytes @ 0xC
  6647  00006C                     	ds	2
  6648  00006E                     i2_printf$3896:
  6649                           	opt stack 0
  6650                           
  6651                           ; 3 bytes @ 0xE
  6652  00006E                     	ds	1
  6653  00006F                     sqrt@i:
  6654                           	opt stack 0
  6655  00006F                     sin@x2:
  6656                           	opt stack 0
  6657                           
  6658                           ; 3 bytes @ 0xF
  6659  00006F                     	ds	1
  6660  000070                     sqrt@z:
  6661                           	opt stack 0
  6662                           
  6663                           ; 3 bytes @ 0x10
  6664  000070                     	ds	1
  6665  000071                     i2printf@idx:
  6666                           	opt stack 0
  6667                           
  6668                           ; 1 bytes @ 0x11
  6669  000071                     	ds	1
  6670  000072                     sin@sgn:
  6671                           	opt stack 0
  6672  000072                     i2printf@len:
  6673                           	opt stack 0
  6674                           
  6675                           ; 2 bytes @ 0x12
  6676  000072                     	ds	1
  6677  000073                     ?_currentMeasuredToPeak:
  6678                           	opt stack 0
  6679  000073                     currentMeasuredToPeak@Measured:
  6680                           	opt stack 0
  6681  000073                     sqrt@q:
  6682                           	opt stack 0
  6683                           
  6684                           ; 3 bytes @ 0x13
  6685  000073                     	ds	1
  6686  000074                     i2printf@cp:
  6687                           	opt stack 0
  6688                           
  6689                           ; 2 bytes @ 0x14
  6690  000074                     	ds	2
  6691  000076                     i2printf@ap:
  6692                           	opt stack 0
  6693  000076                     currentMeasuredToPeak@Angle:
  6694                           	opt stack 0
  6695  000076                     sqrt@x:
  6696                           	opt stack 0
  6697                           
  6698                           ; 3 bytes @ 0x16
  6699  000076                     	ds	2
  6700  000078                     i2printf@flag:
  6701                           	opt stack 0
  6702                           
  6703                           ; 2 bytes @ 0x18
  6704  000078                     	ds	1
  6705  000079                     ?_asin:
  6706                           	opt stack 0
  6707  000079                     currentMeasuredToPeak@Peak:
  6708                           	opt stack 0
  6709  000079                     asin@x:
  6710                           	opt stack 0
  6711                           
  6712                           ; 3 bytes @ 0x19
  6713  000079                     	ds	1
  6714  00007A                     i2printf@exp:
  6715                           	opt stack 0
  6716                           
  6717                           ; 2 bytes @ 0x1A
  6718  00007A                     	ds	2
  6719  00007C                     asin@sgn:
  6720                           	opt stack 0
  6721  00007C                     i2printf@tmpval:
  6722                           	opt stack 0
  6723                           
  6724                           ; 4 bytes @ 0x1C
  6725  00007C                     	ds	3
  6726  00007F                     _asin$3888:
  6727                           	opt stack 0
  6728                           
  6729                           ; 3 bytes @ 0x1F
  6730  00007F                     	ds	1
  6731  000080                     i2printf@fval:
  6732                           	opt stack 0
  6733                           
  6734                           ; 3 bytes @ 0x20
  6735  000080                     	ds	2
  6736  000082                     _asin$3891:
  6737                           	opt stack 0
  6738                           
  6739                           ; 3 bytes @ 0x22
  6740  000082                     	ds	1
  6741  000083                     i2printf@val:
  6742                           	opt stack 0
  6743                           
  6744                           ; 4 bytes @ 0x23
  6745  000083                     	ds	2
  6746  000085                     _asin$3890:
  6747                           	opt stack 0
  6748                           
  6749                           ; 3 bytes @ 0x25
  6750  000085                     	ds	2
  6751  000087                     i2printf@prec:
  6752                           	opt stack 0
  6753                           
  6754                           ; 2 bytes @ 0x27
  6755  000087                     	ds	1
  6756  000088                     asin@y:
  6757                           	opt stack 0
  6758                           
  6759                           ; 3 bytes @ 0x28
  6760  000088                     	ds	1
  6761  000089                     i2printf@c:
  6762                           	opt stack 0
  6763                           
  6764                           ; 1 bytes @ 0x29
  6765  000089                     	ds	2
  6766  00008B                     _asin$3889:
  6767                           	opt stack 0
  6768                           
  6769                           ; 3 bytes @ 0x2B
  6770  00008B                     	ds	3
  6771  00008E                     ?_acos:
  6772                           	opt stack 0
  6773  00008E                     acos@x:
  6774                           	opt stack 0
  6775                           
  6776                           ; 3 bytes @ 0x2E
  6777  00008E                     	ds	3
  6778  000091                     _acos$3887:
  6779                           	opt stack 0
  6780                           
  6781                           ; 3 bytes @ 0x31
  6782  000091                     	ds	3
  6783  000094                     ?_peakToRMS:
  6784                           	opt stack 0
  6785  000094                     peakToRMS@Peak:
  6786                           	opt stack 0
  6787                           
  6788                           ; 3 bytes @ 0x34
  6789  000094                     	ds	3
  6790  000097                     peakToRMS@Angle:
  6791                           	opt stack 0
  6792                           
  6793                           ; 3 bytes @ 0x37
  6794  000097                     	ds	3
  6795  00009A                     _peakToRMS$3880:
  6796                           	opt stack 0
  6797                           
  6798                           ; 3 bytes @ 0x3A
  6799  00009A                     	ds	3
  6800  00009D                     _peakToRMS$3881:
  6801                           	opt stack 0
  6802                           
  6803                           ; 3 bytes @ 0x3D
  6804  00009D                     	ds	3
  6805  0000A0                     _peakToRMS$3879:
  6806                           	opt stack 0
  6807                           
  6808                           ; 3 bytes @ 0x40
  6809  0000A0                     	ds	3
  6810  0000A3                     peakToRMS@RMS:
  6811                           	opt stack 0
  6812                           
  6813                           ; 3 bytes @ 0x43
  6814  0000A3                     	ds	3
  6815  0000A6                     _ADCPostProcessingCallback$3884:
  6816                           	opt stack 0
  6817                           
  6818                           ; 3 bytes @ 0x46
  6819  0000A6                     	ds	3
  6820  0000A9                     _ADCPostProcessingCallback$3885:
  6821                           	opt stack 0
  6822                           
  6823                           ; 3 bytes @ 0x49
  6824  0000A9                     	ds	3
  6825  0000AC                     _ADCPostProcessingCallback$3886:
  6826                           	opt stack 0
  6827                           
  6828                           ; 3 bytes @ 0x4C
  6829  0000AC                     	ds	3
  6830  0000AF                     ADCPostProcessingCallback@currentADCChannel:
  6831                           	opt stack 0
  6832                           
  6833                           ; 1 bytes @ 0x4F
  6834  0000AF                     	ds	1
  6835  0000B0                     _ADCPostProcessingCallback$3883:
  6836                           	opt stack 0
  6837                           
  6838                           ; 3 bytes @ 0x50
  6839  0000B0                     	ds	3
  6840  0000B3                     _ADCPostProcessingCallback$3882:
  6841                           	opt stack 0
  6842                           
  6843                           ; 3 bytes @ 0x53
  6844  0000B3                     	ds	3
  6845  0000B6                     ??_INTERRUPT_InterruptManagerHigh:
  6846                           
  6847                           ; 1 bytes @ 0x56
  6848  0000B6                     	ds	18
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           postinc0	equ	0xFEE
  6854                           wreg	equ	0xFE8
  6855                           postdec1	equ	0xFE5
  6856                           fsr1l	equ	0xFE1
  6857                           
  6858                           	psect	cstackCOMRAM
  6859  000001                     __pcstackCOMRAM:
  6860                           	opt stack 0
  6861  000001                     ??i2_isdigit:
  6862  000001                     ?_ADCC_GetConversionResult:
  6863                           	opt stack 0
  6864  000001                     ?i2___awmod:
  6865                           	opt stack 0
  6866  000001                     ?i2___ftpack:
  6867                           	opt stack 0
  6868  000001                     ?i2__div_to_l_:
  6869                           	opt stack 0
  6870  000001                     ?i2__tdiv_to_l_:
  6871                           	opt stack 0
  6872  000001                     ?i2___lldiv:
  6873                           	opt stack 0
  6874  000001                     i2EUSART2_Write@txData:
  6875                           	opt stack 0
  6876  000001                     TMR5_WriteTimer@timerVal:
  6877                           	opt stack 0
  6878  000001                     i2___awmod@dividend:
  6879                           	opt stack 0
  6880  000001                     frexp@value:
  6881                           	opt stack 0
  6882  000001                     i2__div_to_l_@f1:
  6883                           	opt stack 0
  6884  000001                     i2___ftpack@arg:
  6885                           	opt stack 0
  6886  000001                     i2__tdiv_to_l_@f1:
  6887                           	opt stack 0
  6888  000001                     i2___lldiv@dividend:
  6889                           	opt stack 0
  6890                           
  6891                           ; 4 bytes @ 0x0
  6892  000001                     	ds	1
  6893  000002                     i2putch@txData:
  6894                           	opt stack 0
  6895  000002                     i2_isdigit$3018:
  6896                           	opt stack 0
  6897                           
  6898                           ; 1 bytes @ 0x1
  6899  000002                     	ds	1
  6900  000003                     ??_ADCC_GetConversionResult:
  6901  000003                     i2isdigit@c:
  6902                           	opt stack 0
  6903  000003                     i2___awmod@divisor:
  6904                           	opt stack 0
  6905                           
  6906                           ; 2 bytes @ 0x2
  6907  000003                     	ds	1
  6908  000004                     i2___ftpack@exp:
  6909                           	opt stack 0
  6910  000004                     frexp@eptr:
  6911                           	opt stack 0
  6912  000004                     i2__div_to_l_@f2:
  6913                           	opt stack 0
  6914  000004                     i2__tdiv_to_l_@f2:
  6915                           	opt stack 0
  6916                           
  6917                           ; 3 bytes @ 0x3
  6918  000004                     	ds	1
  6919  000005                     i2___awmod@counter:
  6920                           	opt stack 0
  6921  000005                     i2___ftpack@sign:
  6922                           	opt stack 0
  6923  000005                     i2___lldiv@divisor:
  6924                           	opt stack 0
  6925                           
  6926                           ; 4 bytes @ 0x4
  6927  000005                     	ds	1
  6928  000006                     ??_frexp:
  6929  000006                     ??i2___ftpack:
  6930  000006                     i2___awmod@sign:
  6931                           	opt stack 0
  6932                           
  6933                           ; 1 bytes @ 0x5
  6934  000006                     	ds	1
  6935  000007                     ??i2__tdiv_to_l_:
  6936  000007                     ?i2___awdiv:
  6937                           	opt stack 0
  6938  000007                     i2___awdiv@dividend:
  6939                           	opt stack 0
  6940  000007                     i2__div_to_l_@quot:
  6941                           	opt stack 0
  6942                           
  6943                           ; 4 bytes @ 0x6
  6944  000007                     	ds	2
  6945  000009                     ?___lwtoft:
  6946                           	opt stack 0
  6947  000009                     ?i2___lltoft:
  6948                           	opt stack 0
  6949  000009                     ___lwtoft@c:
  6950                           	opt stack 0
  6951  000009                     i2___awdiv@divisor:
  6952                           	opt stack 0
  6953  000009                     i2___lldiv@quotient:
  6954                           	opt stack 0
  6955  000009                     i2___lltoft@c:
  6956                           	opt stack 0
  6957                           
  6958                           ; 4 bytes @ 0x8
  6959  000009                     	ds	1
  6960  00000A                     i2__tdiv_to_l_@quot:
  6961                           	opt stack 0
  6962                           
  6963                           ; 4 bytes @ 0x9
  6964  00000A                     	ds	1
  6965  00000B                     i2___awdiv@counter:
  6966                           	opt stack 0
  6967  00000B                     i2__div_to_l_@cntr:
  6968                           	opt stack 0
  6969                           
  6970                           ; 1 bytes @ 0xA
  6971  00000B                     	ds	1
  6972  00000C                     i2___awdiv@sign:
  6973                           	opt stack 0
  6974  00000C                     i2__div_to_l_@exp1:
  6975                           	opt stack 0
  6976                           
  6977                           ; 1 bytes @ 0xB
  6978  00000C                     	ds	1
  6979  00000D                     ??i2___lltoft:
  6980  00000D                     i2___lldiv@counter:
  6981                           	opt stack 0
  6982  00000D                     i2___awdiv@quotient:
  6983                           	opt stack 0
  6984                           
  6985                           ; 2 bytes @ 0xC
  6986  00000D                     	ds	1
  6987  00000E                     ?i2___llmod:
  6988                           	opt stack 0
  6989  00000E                     i2__tdiv_to_l_@cntr:
  6990                           	opt stack 0
  6991  00000E                     i2___llmod@dividend:
  6992                           	opt stack 0
  6993                           
  6994                           ; 4 bytes @ 0xD
  6995  00000E                     	ds	1
  6996  00000F                     ?i2___wmul:
  6997                           	opt stack 0
  6998  00000F                     i2__tdiv_to_l_@exp1:
  6999                           	opt stack 0
  7000  00000F                     i2___wmul@multiplier:
  7001                           	opt stack 0
  7002                           
  7003                           ; 2 bytes @ 0xE
  7004  00000F                     	ds	2
  7005  000011                     i2___lltoft@exp:
  7006                           	opt stack 0
  7007  000011                     i2___wmul@multiplicand:
  7008                           	opt stack 0
  7009                           
  7010                           ; 2 bytes @ 0x10
  7011  000011                     	ds	1
  7012  000012                     i2___llmod@divisor:
  7013                           	opt stack 0
  7014                           
  7015                           ; 4 bytes @ 0x11
  7016  000012                     	ds	1
  7017  000013                     i2___wmul@product:
  7018                           	opt stack 0
  7019                           
  7020                           ; 2 bytes @ 0x12
  7021  000013                     	ds	2
  7022  000015                     ?i2___ftdiv:
  7023                           	opt stack 0
  7024  000015                     i2___ftdiv@f1:
  7025                           	opt stack 0
  7026                           
  7027                           ; 3 bytes @ 0x14
  7028  000015                     	ds	1
  7029  000016                     i2___llmod@counter:
  7030                           	opt stack 0
  7031                           
  7032                           ; 1 bytes @ 0x15
  7033  000016                     	ds	2
  7034  000018                     i2___ftdiv@f2:
  7035                           	opt stack 0
  7036                           
  7037                           ; 3 bytes @ 0x17
  7038  000018                     	ds	3
  7039  00001B                     ??i2___ftdiv:
  7040                           
  7041                           ; 1 bytes @ 0x1A
  7042  00001B                     	ds	3
  7043  00001E                     i2___ftdiv@cntr:
  7044                           	opt stack 0
  7045                           
  7046                           ; 1 bytes @ 0x1D
  7047  00001E                     	ds	1
  7048  00001F                     i2___ftdiv@exp:
  7049                           	opt stack 0
  7050                           
  7051                           ; 1 bytes @ 0x1E
  7052  00001F                     	ds	1
  7053  000020                     i2___ftdiv@f3:
  7054                           	opt stack 0
  7055                           
  7056                           ; 3 bytes @ 0x1F
  7057  000020                     	ds	3
  7058  000023                     i2___ftdiv@sign:
  7059                           	opt stack 0
  7060                           
  7061                           ; 1 bytes @ 0x22
  7062  000023                     	ds	1
  7063  000024                     ?i2___ftneg:
  7064                           	opt stack 0
  7065  000024                     i2___ftneg@f1:
  7066                           	opt stack 0
  7067                           
  7068                           ; 3 bytes @ 0x23
  7069  000024                     	ds	3
  7070  000027                     ?_fabs:
  7071                           	opt stack 0
  7072  000027                     ?i2___ftmul:
  7073                           	opt stack 0
  7074  000027                     fabs@d:
  7075                           	opt stack 0
  7076  000027                     i2___ftmul@f1:
  7077                           	opt stack 0
  7078                           
  7079                           ; 3 bytes @ 0x26
  7080  000027                     	ds	3
  7081  00002A                     i2___ftge@ff1:
  7082                           	opt stack 0
  7083  00002A                     i2___ftmul@f2:
  7084                           	opt stack 0
  7085                           
  7086                           ; 3 bytes @ 0x29
  7087  00002A                     	ds	3
  7088  00002D                     ??i2___ftmul:
  7089  00002D                     i2___ftge@ff2:
  7090                           	opt stack 0
  7091                           
  7092                           ; 3 bytes @ 0x2C
  7093  00002D                     	ds	3
  7094  000030                     ??i2___ftge:
  7095  000030                     i2___ftmul@exp:
  7096                           	opt stack 0
  7097                           
  7098                           ; 1 bytes @ 0x2F
  7099  000030                     	ds	1
  7100  000031                     i2___ftmul@f3_as_product:
  7101                           	opt stack 0
  7102                           
  7103                           ; 3 bytes @ 0x30
  7104  000031                     	ds	3
  7105  000034                     i2___ftmul@cntr:
  7106                           	opt stack 0
  7107                           
  7108                           ; 1 bytes @ 0x33
  7109  000034                     	ds	1
  7110  000035                     i2___ftmul@sign:
  7111                           	opt stack 0
  7112                           
  7113                           ; 1 bytes @ 0x34
  7114  000035                     	ds	1
  7115  000036                     ?i2_fround:
  7116                           	opt stack 0
  7117  000036                     ?i2_scale:
  7118                           	opt stack 0
  7119                           
  7120                           ; 3 bytes @ 0x35
  7121  000036                     	ds	3
  7122  000039                     i2_fround$3894:
  7123                           	opt stack 0
  7124  000039                     i2_scale$3895:
  7125                           	opt stack 0
  7126                           
  7127                           ; 3 bytes @ 0x38
  7128  000039                     	ds	3
  7129  00003C                     i2scale@scl:
  7130                           	opt stack 0
  7131  00003C                     i2_fround$3893:
  7132                           	opt stack 0
  7133                           
  7134                           ; 3 bytes @ 0x3B
  7135  00003C                     	ds	1
  7136  00003D                     ?i2___fttol:
  7137                           	opt stack 0
  7138  00003D                     i2___fttol@f1:
  7139                           	opt stack 0
  7140                           
  7141                           ; 3 bytes @ 0x3C
  7142  00003D                     	ds	2
  7143  00003F                     i2fround@prec:
  7144                           	opt stack 0
  7145                           
  7146                           ; 1 bytes @ 0x3E
  7147  00003F                     	ds	1
  7148  000040                     ?i2___ftadd:
  7149                           	opt stack 0
  7150  000040                     i2___ftadd@f1:
  7151                           	opt stack 0
  7152                           
  7153                           ; 3 bytes @ 0x3F
  7154  000040                     	ds	1
  7155  000041                     ??i2___fttol:
  7156                           
  7157                           ; 1 bytes @ 0x40
  7158  000041                     	ds	2
  7159  000043                     i2___ftadd@f2:
  7160                           	opt stack 0
  7161                           
  7162                           ; 3 bytes @ 0x42
  7163  000043                     	ds	3
  7164  000046                     ??i2___ftadd:
  7165  000046                     i2___fttol@sign1:
  7166                           	opt stack 0
  7167                           
  7168                           ; 1 bytes @ 0x45
  7169  000046                     	ds	1
  7170  000047                     i2___fttol@lval:
  7171                           	opt stack 0
  7172                           
  7173                           ; 4 bytes @ 0x46
  7174  000047                     	ds	2
  7175  000049                     i2___ftadd@sign:
  7176                           	opt stack 0
  7177                           
  7178                           ; 1 bytes @ 0x48
  7179  000049                     	ds	1
  7180  00004A                     i2___ftadd@exp2:
  7181                           	opt stack 0
  7182                           
  7183                           ; 1 bytes @ 0x49
  7184  00004A                     	ds	1
  7185  00004B                     i2___ftadd@exp1:
  7186                           	opt stack 0
  7187  00004B                     i2___fttol@exp1:
  7188                           	opt stack 0
  7189                           
  7190                           ; 1 bytes @ 0x4A
  7191  00004B                     	ds	1
  7192  00004C                     ?_eval_poly:
  7193                           	opt stack 0
  7194  00004C                     ?___altoft:
  7195                           	opt stack 0
  7196  00004C                     eval_poly@x:
  7197                           	opt stack 0
  7198  00004C                     ___altoft@c:
  7199                           	opt stack 0
  7200                           
  7201                           ; 4 bytes @ 0x4B
  7202  00004C                     	ds	3
  7203  00004F                     eval_poly@d:
  7204                           	opt stack 0
  7205                           
  7206                           ; 2 bytes @ 0x4E
  7207  00004F                     	ds	1
  7208  000050                     ??___altoft:
  7209                           
  7210                           ; 1 bytes @ 0x4F
  7211  000050                     	ds	1
  7212  000051                     eval_poly@n:
  7213                           	opt stack 0
  7214                           
  7215                           ; 2 bytes @ 0x50
  7216  000051                     	ds	2
  7217  000053                     ??_eval_poly:
  7218                           
  7219                           ; 1 bytes @ 0x52
  7220  000053                     	ds	1
  7221  000054                     ___altoft@exp:
  7222                           	opt stack 0
  7223                           
  7224                           ; 1 bytes @ 0x53
  7225  000054                     	ds	1
  7226  000055                     ___altoft@sign:
  7227                           	opt stack 0
  7228  000055                     eval_poly@res:
  7229                           	opt stack 0
  7230                           
  7231                           ; 3 bytes @ 0x54
  7232  000055                     	ds	1
  7233  000056                     ?_floor:
  7234                           	opt stack 0
  7235  000056                     floor@x:
  7236                           	opt stack 0
  7237                           
  7238                           ; 3 bytes @ 0x55
  7239  000056                     	ds	2
  7240  000058                     ?_atan:
  7241                           	opt stack 0
  7242  000058                     atan@f:
  7243                           	opt stack 0
  7244                           
  7245                           ; 3 bytes @ 0x57
  7246  000058                     	ds	1
  7247  000059                     floor@i:
  7248                           	opt stack 0
  7249                           
  7250                           ; 3 bytes @ 0x58
  7251  000059                     	ds	2
  7252  00005B                     
  7253                           ; 1 bytes @ 0x5A
  7254  00005B                     	ds	1
  7255  00005C                     floor@expon:
  7256                           	opt stack 0
  7257                           
  7258                           ; 2 bytes @ 0x5B
  7259  00005C                     	ds	2
  7260  00005E                     tblptru	equ	0xFF8
  7261                           tblptrh	equ	0xFF7
  7262                           tblptrl	equ	0xFF6
  7263                           tablat	equ	0xFF5
  7264                           postinc0	equ	0xFEE
  7265                           wreg	equ	0xFE8
  7266                           postdec1	equ	0xFE5
  7267                           fsr1l	equ	0xFE1
  7268                           
  7269                           ; 1 bytes @ 0x5D
  7270 ;;
  7271 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7272 ;;
  7273 ;; *************** function _main *****************
  7274 ;; Defined at:
  7275 ;;		line 442 in file "main.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;		None
  7278 ;; Auto vars:     Size  Location     Type
  7279 ;;		None
  7280 ;; Return value:  Size  Location     Type
  7281 ;;                  1    wreg      void 
  7282 ;; Registers used:
  7283 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7284 ;; Tracked objects:
  7285 ;;		On entry : 0/0
  7286 ;;		On exit  : 0/0
  7287 ;;		Unchanged: 0/0
  7288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7291 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7292 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7293 ;;Total ram usage:        2 bytes
  7294 ;; Hardware stack levels required when called:   22
  7295 ;; This function calls:
  7296 ;;		_ADCC_SetADIInterruptHandler
  7297 ;;		_SYSTEM_Initialize
  7298 ;;		_TMR6_SetInterruptHandler
  7299 ;;		_TMR7_SetInterruptHandler
  7300 ;;		_terminal_clearTerminal
  7301 ;;		_terminal_ringBufferPull
  7302 ;;		_terminal_setCursorHome
  7303 ;;		_terminal_textAttributesReset
  7304 ;; This function is called by:
  7305 ;;		Startup code after reset
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           	psect	text0
  7310  0161F4                     __ptext0:
  7311                           	opt stack 0
  7312  0161F4                     _main:
  7313                           	opt stack 9
  7314                           
  7315                           ;main.c: 447: _delay((unsigned long)((250)*(64000000/4000.0)));
  7316                           
  7317                           ;incstack = 0
  7318  0161F4  0E15               	movlw	21
  7319  0161F6  0101               	movlb	1	; () banked
  7320  0161F8  6FB2               	movwf	(??_main+1)& (0+255),b
  7321  0161FA  0E4B               	movlw	75
  7322  0161FC  6FB1               	movwf	??_main& (0+255),b
  7323  0161FE  0EBE               	movlw	190
  7324  016200                     u19677:
  7325  016200  2EE8               	decfsz	wreg,f,c
  7326  016202  D7FE               	bra	u19677
  7327  016204  2FB1               	decfsz	??_main& (0+255),f,b
  7328  016206  D7FC               	bra	u19677
  7329  016208  2FB2               	decfsz	(??_main+1)& (0+255),f,b
  7330  01620A  D7FA               	bra	u19677
  7331  01620C  F000               	nop	
  7332                           
  7333                           ;main.c: 450: SYSTEM_Initialize();
  7334  01620E  EC9E  F0B6         	call	_SYSTEM_Initialize	;wreg free
  7335                           
  7336                           ;main.c: 453: LATGbits.LATG0 = 0;
  7337  016212  907F               	bcf	3967,0,c	;volatile
  7338                           
  7339                           ;main.c: 454: LATGbits.LATG1 = 0;
  7340  016214  927F               	bcf	3967,1,c	;volatile
  7341                           
  7342                           ;main.c: 455: load_enable = 0;
  7343  016216  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  7344                           
  7345                           ;main.c: 458: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  7346  016218  0EE2               	movlw	low _heartbeatTimerCallback
  7347  01621A  0101               	movlb	1	; () banked
  7348  01621C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  7349  01621E  0E6A               	movlw	high _heartbeatTimerCallback
  7350  016220  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7351  016222  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  7352  016224  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7353  016226  EC1B  F0B8         	call	_TMR6_SetInterruptHandler	;wreg free
  7354                           
  7355                           ;main.c: 461: ADCC_SetADIInterruptHandler(ADCPostProcessingCallback);
  7356  01622A  0E50               	movlw	low _ADCPostProcessingCallback
  7357  01622C  0101               	movlb	1	; () banked
  7358  01622E  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  7359  016230  0E22               	movlw	high _ADCPostProcessingCallback
  7360  016232  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  7361  016234  0E01               	movlw	low (_ADCPostProcessingCallback shr (0+16))
  7362  016236  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  7363  016238  EC37  F0B8         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7364                           
  7365                           ;main.c: 464: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  7366  01623C  0E04               	movlw	low _acquisitionTimerCallback
  7367  01623E  0101               	movlb	1	; () banked
  7368  016240  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  7369  016242  0E57               	movlw	high _acquisitionTimerCallback
  7370  016244  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  7371  016246  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  7372  016248  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  7373  01624A  EC14  F0B8         	call	_TMR7_SetInterruptHandler	;wreg free
  7374                           
  7375                           ;main.c: 467: (INTCONbits.GIEH = 1);
  7376  01624E  8EF2               	bsf	intcon,7,c	;volatile
  7377                           
  7378                           ;main.c: 470: (INTCONbits.GIEL = 1);
  7379  016250  8CF2               	bsf	intcon,6,c	;volatile
  7380                           
  7381                           ;main.c: 474: terminal_clearTerminal();
  7382  016252  ECFE  F0B7         	call	_terminal_clearTerminal	;wreg free
  7383                           
  7384                           ;main.c: 475: terminal_setCursorHome();
  7385  016256  ECEE  F0B7         	call	_terminal_setCursorHome	;wreg free
  7386                           
  7387                           ;main.c: 476: terminal_textAttributesReset();
  7388  01625A  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  7389  01625E                     
  7390                           ;main.c: 480: {
  7391                           ;main.c: 483: if (eusart2RxStringReady) {
  7392  01625E  0100               	movlb	0	; () banked
  7393  016260  A1FF               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7394  016262  D7FD               	goto	l945
  7395                           
  7396                           ; BSR set to: 0
  7397                           ;main.c: 485: terminal_ringBufferPull();
  7398  016264  EC02  F0A6         	call	_terminal_ringBufferPull	;wreg free
  7399  016268  D7FA               	goto	l945
  7400  01626A                     __end_of_main:
  7401                           	opt stack 0
  7402                           tblptru	equ	0xFF8
  7403                           tblptrh	equ	0xFF7
  7404                           tblptrl	equ	0xFF6
  7405                           tablat	equ	0xFF5
  7406                           intcon	equ	0xFF2
  7407                           postinc0	equ	0xFEE
  7408                           wreg	equ	0xFE8
  7409                           postdec1	equ	0xFE5
  7410                           fsr1l	equ	0xFE1
  7411                           
  7412 ;; *************** function _terminal_setCursorHome *****************
  7413 ;; Defined at:
  7414 ;;		line 85 in file "ring_buffer_interface.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;		None
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;		None
  7419 ;; Return value:  Size  Location     Type
  7420 ;;                  1    wreg      void 
  7421 ;; Registers used:
  7422 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7423 ;; Tracked objects:
  7424 ;;		On entry : 0/0
  7425 ;;		On exit  : 0/0
  7426 ;;		Unchanged: 0/0
  7427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7428 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7431 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7432 ;;Total ram usage:        0 bytes
  7433 ;; Hardware stack levels used:    1
  7434 ;; Hardware stack levels required when called:   18
  7435 ;; This function calls:
  7436 ;;		_printf
  7437 ;; This function is called by:
  7438 ;;		_main
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text1
  7443  016FDC                     __ptext1:
  7444                           	opt stack 0
  7445  016FDC                     _terminal_setCursorHome:
  7446                           	opt stack 12
  7447                           
  7448                           ;ring_buffer_interface.c: 86: printf("\033[H");
  7449                           
  7450                           ;incstack = 0
  7451  016FDC  0EB8               	movlw	low STR_3
  7452  016FDE  0101               	movlb	1	; () banked
  7453  016FE0  6F64               	movwf	printf@f& (0+255),b
  7454  016FE2  0EFF               	movlw	high STR_3
  7455  016FE4  6F65               	movwf	(printf@f+1)& (0+255),b
  7456  016FE6  EC71  F086         	call	_printf	;wreg free
  7457  016FEA  0012               	return		;funcret
  7458  016FEC                     __end_of_terminal_setCursorHome:
  7459                           	opt stack 0
  7460                           tblptru	equ	0xFF8
  7461                           tblptrh	equ	0xFF7
  7462                           tblptrl	equ	0xFF6
  7463                           tablat	equ	0xFF5
  7464                           intcon	equ	0xFF2
  7465                           postinc0	equ	0xFEE
  7466                           wreg	equ	0xFE8
  7467                           postdec1	equ	0xFE5
  7468                           fsr1l	equ	0xFE1
  7469                           
  7470 ;; *************** function _terminal_ringBufferPull *****************
  7471 ;; Defined at:
  7472 ;;		line 12 in file "ring_buffer_interface.c"
  7473 ;; Parameters:    Size  Location     Type
  7474 ;;		None
  7475 ;; Auto vars:     Size  Location     Type
  7476 ;;  index           2  173[BANK1 ] int 
  7477 ;;  index           2  175[BANK1 ] int 
  7478 ;;  charNumber      2  171[BANK1 ] int 
  7479 ;; Return value:  Size  Location     Type
  7480 ;;                  1    wreg      void 
  7481 ;; Registers used:
  7482 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7483 ;; Tracked objects:
  7484 ;;		On entry : 0/0
  7485 ;;		On exit  : 0/0
  7486 ;;		Unchanged: 0/0
  7487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7489 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7490 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7491 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7492 ;;Total ram usage:        9 bytes
  7493 ;; Hardware stack levels used:    1
  7494 ;; Hardware stack levels required when called:   21
  7495 ;; This function calls:
  7496 ;;		_EUSART2_Read
  7497 ;;		_ringBufferLUT
  7498 ;;		_strlen
  7499 ;; This function is called by:
  7500 ;;		_main
  7501 ;; This function uses a non-reentrant model
  7502 ;;
  7503                           
  7504                           	psect	text2
  7505  014C04                     __ptext2:
  7506                           	opt stack 0
  7507  014C04                     _terminal_ringBufferPull:
  7508                           	opt stack 9
  7509                           
  7510                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  7511                           
  7512                           ;incstack = 0
  7513  014C04  C1D2  F1AB         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  7514  014C08  0101               	movlb	1	; () banked
  7515  014C0A  6BAC               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  7516                           
  7517                           ; BSR set to: 1
  7518                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  7519  014C0C  0E00               	movlw	0
  7520  014C0E  6FB0               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  7521  014C10  0E00               	movlw	0
  7522  014C12  6FAF               	movwf	terminal_ringBufferPull@index& (0+255),b
  7523  014C14                     l12537:
  7524                           
  7525                           ; BSR set to: 1
  7526  014C14  BFB0               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  7527  014C16  D006               	goto	l984
  7528  014C18  51B0               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7529  014C1A  E10F               	bnz	l12547
  7530  014C1C  0E40               	movlw	64
  7531  014C1E  5DAF               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  7532  014C20  B0D8               	btfsc	status,0,c
  7533  014C22  D00B               	goto	u15620
  7534  014C24                     l984:
  7535                           
  7536                           ; BSR set to: 1
  7537                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  7538                           
  7539                           ; BSR set to: 1
  7540  014C24  0E42               	movlw	low _line
  7541  014C26  25AF               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  7542  014C28  6ED9               	movwf	fsr2l,c
  7543  014C2A  0E02               	movlw	high _line
  7544  014C2C  21B0               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  7545  014C2E  6EDA               	movwf	fsr2h,c
  7546  014C30  0E00               	movlw	0
  7547  014C32  6EDF               	movwf	indf2,c
  7548                           
  7549                           ; BSR set to: 1
  7550  014C34  4BAF               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  7551  014C36  2BB0               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  7552  014C38  D7ED               	goto	l12537
  7553  014C3A                     u15620:
  7554  014C3A                     l12547:
  7555                           
  7556                           ; BSR set to: 1
  7557                           ;ring_buffer_interface.c: 21: }
  7558                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  7559  014C3A  0E00               	movlw	0
  7560  014C3C  6FAE               	movwf	(terminal_ringBufferPull@index_2151+1)& (0+255),b
  7561  014C3E  0E00               	movlw	0
  7562  014C40  6FAD               	movwf	terminal_ringBufferPull@index_2151& (0+255),b
  7563  014C42  D00E               	goto	l986
  7564  014C44                     
  7565                           ; BSR set to: 1
  7566                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  7567                           
  7568                           ; BSR set to: 1
  7569  014C44  ECC8  F0B4         	call	_EUSART2_Read	;wreg free
  7570  014C48  0101               	movlb	1	; () banked
  7571  014C4A  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7572  014C4C  0E42               	movlw	low _line
  7573  014C4E  25AD               	addwf	terminal_ringBufferPull@index_2151& (0+255),w,b
  7574  014C50  6ED9               	movwf	fsr2l,c
  7575  014C52  0E02               	movlw	high _line
  7576  014C54  21AE               	addwfc	(terminal_ringBufferPull@index_2151+1)& (0+255),w,b
  7577  014C56  6EDA               	movwf	fsr2h,c
  7578  014C58  C1A8  FFDF         	movff	??_terminal_ringBufferPull,indf2
  7579                           
  7580                           ; BSR set to: 1
  7581  014C5C  4BAD               	infsnz	terminal_ringBufferPull@index_2151& (0+255),f,b
  7582  014C5E  2BAE               	incf	(terminal_ringBufferPull@index_2151+1)& (0+255),f,b
  7583  014C60                     l986:
  7584                           
  7585                           ; BSR set to: 1
  7586                           
  7587                           ; BSR set to: 1
  7588  014C60  51AB               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  7589  014C62  5DAD               	subwf	terminal_ringBufferPull@index_2151& (0+255),w,b
  7590  014C64  51AE               	movf	(terminal_ringBufferPull@index_2151+1)& (0+255),w,b
  7591  014C66  0A80               	xorlw	128
  7592  014C68  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7593  014C6A  51AC               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  7594  014C6C  0A80               	xorlw	128
  7595  014C6E  59A8               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  7596  014C70  A0D8               	btfss	status,0,c
  7597  014C72  D7E8               	goto	l987
  7598                           
  7599                           ; BSR set to: 1
  7600                           ;ring_buffer_interface.c: 28: }
  7601                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  7602  014C74  C0ED  F1D3         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  7603                           
  7604                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  7605                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  7606  014C78  D017               	goto	l989
  7607  014C7A                     
  7608                           ; BSR set to: 1
  7609                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  7610                           
  7611                           ; BSR set to: 1
  7612  014C7A  0EFF               	movlw	255
  7613  014C7C  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7614  014C7E  0EFF               	movlw	255
  7615  014C80  6FA9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7616  014C82  0E42               	movlw	low _line
  7617  014C84  6F17               	movwf	strlen@s& (0+255),b
  7618  014C86  0E02               	movlw	high _line
  7619  014C88  6F18               	movwf	(strlen@s+1)& (0+255),b
  7620  014C8A  EC64  F0B3         	call	_strlen	;wreg free
  7621  014C8E  0101               	movlb	1	; () banked
  7622  014C90  51A8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7623  014C92  2717               	addwf	?_strlen& (0+255),f,b
  7624  014C94  51A9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7625  014C96  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7626  014C98  0E42               	movlw	low _line
  7627  014C9A  2517               	addwf	?_strlen& (0+255),w,b
  7628  014C9C  6ED9               	movwf	fsr2l,c
  7629  014C9E  0E02               	movlw	high _line
  7630  014CA0  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7631  014CA2  6EDA               	movwf	fsr2h,c
  7632  014CA4  0E00               	movlw	0
  7633  014CA6  6EDF               	movwf	indf2,c
  7634  014CA8                     l989:
  7635                           
  7636                           ; BSR set to: 1
  7637  014CA8  0EFF               	movlw	255
  7638  014CAA  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7639  014CAC  0EFF               	movlw	255
  7640  014CAE  6FA9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7641  014CB0  0E42               	movlw	low _line
  7642  014CB2  6F17               	movwf	strlen@s& (0+255),b
  7643  014CB4  0E02               	movlw	high _line
  7644  014CB6  6F18               	movwf	(strlen@s+1)& (0+255),b
  7645  014CB8  EC64  F0B3         	call	_strlen	;wreg free
  7646  014CBC  0101               	movlb	1	; () banked
  7647  014CBE  51A8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7648  014CC0  2717               	addwf	?_strlen& (0+255),f,b
  7649  014CC2  51A9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7650  014CC4  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7651  014CC6  0E42               	movlw	low _line
  7652  014CC8  2517               	addwf	?_strlen& (0+255),w,b
  7653  014CCA  6ED9               	movwf	fsr2l,c
  7654  014CCC  0E02               	movlw	high _line
  7655  014CCE  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7656  014CD0  6EDA               	movwf	fsr2h,c
  7657  014CD2  0E0A               	movlw	10
  7658  014CD4  18DE               	xorwf	postinc2,w,c
  7659  014CD6  B4D8               	btfsc	status,2,c
  7660  014CD8  D7D0               	goto	l990
  7661                           
  7662                           ; BSR set to: 1
  7663  014CDA  0EFF               	movlw	255
  7664  014CDC  6FA8               	movwf	??_terminal_ringBufferPull& (0+255),b
  7665  014CDE  0EFF               	movlw	255
  7666  014CE0  6FA9               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  7667  014CE2  0E42               	movlw	low _line
  7668  014CE4  6F17               	movwf	strlen@s& (0+255),b
  7669  014CE6  0E02               	movlw	high _line
  7670  014CE8  6F18               	movwf	(strlen@s+1)& (0+255),b
  7671  014CEA  EC64  F0B3         	call	_strlen	;wreg free
  7672  014CEE  0101               	movlb	1	; () banked
  7673  014CF0  51A8               	movf	??_terminal_ringBufferPull& (0+255),w,b
  7674  014CF2  2717               	addwf	?_strlen& (0+255),f,b
  7675  014CF4  51A9               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  7676  014CF6  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  7677  014CF8  0E42               	movlw	low _line
  7678  014CFA  2517               	addwf	?_strlen& (0+255),w,b
  7679  014CFC  6ED9               	movwf	fsr2l,c
  7680  014CFE  0E02               	movlw	high _line
  7681  014D00  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  7682  014D02  6EDA               	movwf	fsr2h,c
  7683  014D04  0E0D               	movlw	13
  7684  014D06  18DE               	xorwf	postinc2,w,c
  7685  014D08  B4D8               	btfsc	status,2,c
  7686  014D0A  D7B7               	goto	l990
  7687                           
  7688                           ; BSR set to: 1
  7689                           ;ring_buffer_interface.c: 40: }
  7690                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  7691  014D0C  0100               	movlb	0	; () banked
  7692  014D0E  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  7696  014D10  0E42               	movlw	low _line
  7697  014D12  0101               	movlb	1	; () banked
  7698  014D14  6FA2               	movwf	ringBufferLUT@line& (0+255),b
  7699  014D16  0E02               	movlw	high _line
  7700  014D18  6FA3               	movwf	(ringBufferLUT@line+1)& (0+255),b
  7701  014D1A  EC00  F080         	call	_ringBufferLUT	;wreg free
  7702  014D1E  0012               	return		;funcret
  7703  014D20                     __end_of_terminal_ringBufferPull:
  7704                           	opt stack 0
  7705                           tblptru	equ	0xFF8
  7706                           tblptrh	equ	0xFF7
  7707                           tblptrl	equ	0xFF6
  7708                           tablat	equ	0xFF5
  7709                           intcon	equ	0xFF2
  7710                           postinc0	equ	0xFEE
  7711                           wreg	equ	0xFE8
  7712                           postdec1	equ	0xFE5
  7713                           fsr1l	equ	0xFE1
  7714                           indf2	equ	0xFDF
  7715                           postinc2	equ	0xFDE
  7716                           fsr2h	equ	0xFDA
  7717                           fsr2l	equ	0xFD9
  7718                           status	equ	0xFD8
  7719                           
  7720 ;; *************** function _ringBufferLUT *****************
  7721 ;; Defined at:
  7722 ;;		line 41 in file "ring_buffer_LUT.c"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  line            2  162[BANK1 ] PTR unsigned char 
  7725 ;;		 -> line(64), 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  angle_degree    3   22[BANK2 ] PTR unsigned char 
  7728 ;;  index           2   28[BANK2 ] int 
  7729 ;;  channel_name   22    0[BANK2 ] unsigned char [22]
  7730 ;;  userID          2   32[BANK2 ] int 
  7731 ;;  arg_buff        3   25[BANK2 ] unsigned char [3]
  7732 ;;  percentage      2   30[BANK2 ] int 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      void 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7742 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7743 ;;      Locals:         0       0       0      34       0       0       0       0       0       0       0       0       
      +0       0       0
  7744 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7745 ;;      Totals:         0       0       6      34       0       0       0       0       0       0       0       0       
      +0       0       0
  7746 ;;Total ram usage:       40 bytes
  7747 ;; Hardware stack levels used:    1
  7748 ;; Hardware stack levels required when called:   20
  7749 ;; This function calls:
  7750 ;;		_TMR7_StartTimer
  7751 ;;		___awtoft
  7752 ;;		___ftadd
  7753 ;;		___ftdiv
  7754 ;;		___ftmul
  7755 ;;		___ftneg
  7756 ;;		___wmul
  7757 ;;		_atoi
  7758 ;;		_getCauseOfReset
  7759 ;;		_getCauseOfResetString
  7760 ;;		_getDeviceID
  7761 ;;		_getDeviceIDString
  7762 ;;		_getMajorRevisionID
  7763 ;;		_getMinorRevisionID
  7764 ;;		_getRevisionIDString
  7765 ;;		_getUserID
  7766 ;;		_printf
  7767 ;;		_strcmp
  7768 ;;		_strcpy
  7769 ;;		_strstr
  7770 ;;		_terminal_printNewline
  7771 ;;		_terminal_textAttributes
  7772 ;;		_terminal_textAttributesReset
  7773 ;; This function is called by:
  7774 ;;		_terminal_ringBufferPull
  7775 ;; This function uses a non-reentrant model
  7776 ;;
  7777                           
  7778                           	psect	text3
  7779  010000                     __ptext3:
  7780                           	opt stack 0
  7781  010000                     _ringBufferLUT:
  7782                           	opt stack 9
  7783                           
  7784                           ;ring_buffer_LUT.c: 47: if((0 == strcmp(line, "Reset"))) {
  7785                           
  7786                           ;incstack = 0
  7787  010000  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  7788  010004  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7789  010008  0E96               	movlw	low (STR_120+9)
  7790  01000A  0101               	movlb	1	; () banked
  7791  01000C  6F19               	movwf	strcmp@s2& (0+255),b
  7792  01000E  0EFE               	movlw	high (STR_120+9)
  7793  010010  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7794  010012  ECE5  F0B3         	call	_strcmp	;wreg free
  7795  010016  0101               	movlb	1	; () banked
  7796  010018  5117               	movf	?_strcmp& (0+255),w,b
  7797  01001A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7798  01001C  A4D8               	btfss	status,2,c
  7799  01001E  D00F               	goto	l1133
  7800                           
  7801                           ; BSR set to: 1
  7802                           ;ring_buffer_LUT.c: 50: printf("\033[2J");
  7803  010020  0EAF               	movlw	low STR_2
  7804  010022  6F64               	movwf	printf@f& (0+255),b
  7805  010024  0EFF               	movlw	high STR_2
  7806  010026  6F65               	movwf	(printf@f+1)& (0+255),b
  7807  010028  EC71  F086         	call	_printf	;wreg free
  7808                           
  7809                           ;ring_buffer_LUT.c: 53: printf("\033[H");
  7810  01002C  0EB8               	movlw	low STR_3
  7811  01002E  0101               	movlb	1	; () banked
  7812  010030  6F64               	movwf	printf@f& (0+255),b
  7813  010032  0EFF               	movlw	high STR_3
  7814  010034  6F65               	movwf	(printf@f+1)& (0+255),b
  7815  010036  EC71  F086         	call	_printf	;wreg free
  7816  01003A  00FF               	reset		;# 
  7817                           
  7818                           ;ring_buffer_LUT.c: 58: }
  7819  01003C  0012               	return	
  7820  01003E                     l1133:
  7821                           
  7822                           ;ring_buffer_LUT.c: 61: else if((0 == strcmp(line, "Clear"))) {
  7823  01003E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  7824  010042  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7825  010046  0E9F               	movlw	low STR_44
  7826  010048  0101               	movlb	1	; () banked
  7827  01004A  6F19               	movwf	strcmp@s2& (0+255),b
  7828  01004C  0EFF               	movlw	high STR_44
  7829  01004E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7830  010050  ECE5  F0B3         	call	_strcmp	;wreg free
  7831  010054  0101               	movlb	1	; () banked
  7832  010056  5117               	movf	?_strcmp& (0+255),w,b
  7833  010058  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7834  01005A  A4D8               	btfss	status,2,c
  7835  01005C  D00E               	goto	l1135
  7836                           
  7837                           ; BSR set to: 1
  7838                           ;ring_buffer_LUT.c: 64: printf("\033[2J");
  7839  01005E  0EAF               	movlw	low STR_2
  7840  010060  6F64               	movwf	printf@f& (0+255),b
  7841  010062  0EFF               	movlw	high STR_2
  7842  010064  6F65               	movwf	(printf@f+1)& (0+255),b
  7843  010066  EC71  F086         	call	_printf	;wreg free
  7844                           
  7845                           ;ring_buffer_LUT.c: 67: printf("\033[H");
  7846  01006A  0EB8               	movlw	low STR_3
  7847  01006C  0101               	movlb	1	; () banked
  7848  01006E  6F64               	movwf	printf@f& (0+255),b
  7849  010070  0EFF               	movlw	high STR_3
  7850  010072  6F65               	movwf	(printf@f+1)& (0+255),b
  7851  010074  EC71  F086         	call	_printf	;wreg free
  7852                           
  7853                           ;ring_buffer_LUT.c: 69: }
  7854  010078  0012               	return	
  7855  01007A                     l1135:
  7856                           
  7857                           ;ring_buffer_LUT.c: 72: else if((0 == strcmp(line, "Cause of Reset?"))) {
  7858  01007A  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  7859  01007E  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7860  010082  0E5D               	movlw	low STR_47
  7861  010084  0101               	movlb	1	; () banked
  7862  010086  6F19               	movwf	strcmp@s2& (0+255),b
  7863  010088  0EFE               	movlw	high STR_47
  7864  01008A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7865  01008C  ECE5  F0B3         	call	_strcmp	;wreg free
  7866  010090  0101               	movlb	1	; () banked
  7867  010092  5117               	movf	?_strcmp& (0+255),w,b
  7868  010094  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7869  010096  A4D8               	btfss	status,2,c
  7870  010098  D01E               	goto	l1137
  7871                           
  7872                           ; BSR set to: 1
  7873                           ;ring_buffer_LUT.c: 75: terminal_printNewline();
  7874  01009A  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  7875                           
  7876                           ;ring_buffer_LUT.c: 77: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7877  01009E  0E00               	movlw	0
  7878  0100A0  0101               	movlb	1	; () banked
  7879  0100A2  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  7880  0100A4  0E00               	movlw	0
  7881  0100A6  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7882  0100A8  0E02               	movlw	2
  7883  0100AA  ECCC  F098         	call	_terminal_textAttributes
  7884                           
  7885                           ;ring_buffer_LUT.c: 80: printf("The cause of the most recent device reset was: %s\n\r",
  7886                           ;ring_buffer_LUT.c: 81: getCauseOfResetString(getCauseOfReset()));
  7887  0100AE  0EF7               	movlw	low STR_48
  7888  0100B0  0101               	movlb	1	; () banked
  7889  0100B2  6F64               	movwf	printf@f& (0+255),b
  7890  0100B4  0EF8               	movlw	high STR_48
  7891  0100B6  6F65               	movwf	(printf@f+1)& (0+255),b
  7892  0100B8  EC62  F0A9         	call	_getCauseOfReset	;wreg free
  7893  0100BC  EC54  F0B6         	call	_getCauseOfResetString
  7894  0100C0  C117  F166         	movff	?_getCauseOfResetString,?_printf+2
  7895  0100C4  C118  F167         	movff	?_getCauseOfResetString+1,?_printf+3
  7896  0100C8  EC71  F086         	call	_printf	;wreg free
  7897                           
  7898                           ;ring_buffer_LUT.c: 84: terminal_textAttributesReset();
  7899  0100CC  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  7900                           
  7901                           ;ring_buffer_LUT.c: 86: terminal_printNewline();
  7902  0100D0  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  7903                           
  7904                           ;ring_buffer_LUT.c: 88: }
  7905  0100D4  0012               	return	
  7906  0100D6                     l1137:
  7907                           
  7908                           ;ring_buffer_LUT.c: 91: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  7909  0100D6  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  7910  0100DA  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7911  0100DE  0E99               	movlw	low STR_49
  7912  0100E0  0101               	movlb	1	; () banked
  7913  0100E2  6F19               	movwf	strcmp@s2& (0+255),b
  7914  0100E4  0EFF               	movlw	high STR_49
  7915  0100E6  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7916  0100E8  ECE5  F0B3         	call	_strcmp	;wreg free
  7917  0100EC  0101               	movlb	1	; () banked
  7918  0100EE  5117               	movf	?_strcmp& (0+255),w,b
  7919  0100F0  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7920  0100F2  B4D8               	btfsc	status,2,c
  7921  0100F4  D00F               	goto	u14630
  7922                           
  7923                           ; BSR set to: 1
  7924  0100F6  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  7925  0100FA  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7926  0100FE  0EB4               	movlw	low STR_50
  7927  010100  6F19               	movwf	strcmp@s2& (0+255),b
  7928  010102  0EFF               	movlw	high STR_50
  7929  010104  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7930  010106  ECE5  F0B3         	call	_strcmp	;wreg free
  7931  01010A  0101               	movlb	1	; () banked
  7932  01010C  5117               	movf	?_strcmp& (0+255),w,b
  7933  01010E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7934  010110  A4D8               	btfss	status,2,c
  7935  010112  D01D               	goto	l1139
  7936  010114                     u14630:
  7937                           
  7938                           ; BSR set to: 1
  7939                           ;ring_buffer_LUT.c: 94: terminal_printNewline();
  7940                           
  7941                           ; BSR set to: 1
  7942  010114  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  7943                           
  7944                           ;ring_buffer_LUT.c: 96: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7945  010118  0E00               	movlw	0
  7946  01011A  0101               	movlb	1	; () banked
  7947  01011C  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  7948  01011E  0E00               	movlw	0
  7949  010120  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  7950  010122  0E02               	movlw	2
  7951  010124  ECCC  F098         	call	_terminal_textAttributes
  7952                           
  7953                           ;ring_buffer_LUT.c: 98: printf("AC Power Meter\n\r");
  7954  010128  0E0B               	movlw	low STR_51
  7955  01012A  0101               	movlb	1	; () banked
  7956  01012C  6F64               	movwf	printf@f& (0+255),b
  7957  01012E  0EFE               	movlw	high STR_51
  7958  010130  6F65               	movwf	(printf@f+1)& (0+255),b
  7959  010132  EC71  F086         	call	_printf	;wreg free
  7960                           
  7961                           ;ring_buffer_LUT.c: 99: printf("Marquette University ELEN 3035 Final Project\n\r");
  7962  010136  0E8C               	movlw	low STR_52
  7963  010138  0101               	movlb	1	; () banked
  7964  01013A  6F64               	movwf	printf@f& (0+255),b
  7965  01013C  0EF9               	movlw	high STR_52
  7966  01013E  6F65               	movwf	(printf@f+1)& (0+255),b
  7967  010140  EC71  F086         	call	_printf	;wreg free
  7968                           
  7969                           ;ring_buffer_LUT.c: 101: terminal_textAttributesReset();
  7970  010144  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  7971                           
  7972                           ;ring_buffer_LUT.c: 103: terminal_printNewline();
  7973  010148  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  7974                           
  7975                           ;ring_buffer_LUT.c: 105: }
  7976  01014C  0012               	return	
  7977  01014E                     l1139:
  7978                           
  7979                           ;ring_buffer_LUT.c: 108: else if((0 == strcmp(line, "Device ID?"))) {
  7980  01014E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  7981  010152  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  7982  010156  0E5B               	movlw	low STR_53
  7983  010158  0101               	movlb	1	; () banked
  7984  01015A  6F19               	movwf	strcmp@s2& (0+255),b
  7985  01015C  0EFF               	movlw	high STR_53
  7986  01015E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  7987  010160  ECE5  F0B3         	call	_strcmp	;wreg free
  7988  010164  0101               	movlb	1	; () banked
  7989  010166  5117               	movf	?_strcmp& (0+255),w,b
  7990  010168  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  7991  01016A  A4D8               	btfss	status,2,c
  7992  01016C  D027               	goto	l1143
  7993                           
  7994                           ; BSR set to: 1
  7995                           ;ring_buffer_LUT.c: 111: terminal_printNewline();
  7996  01016E  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  7997                           
  7998                           ;ring_buffer_LUT.c: 113: terminal_textAttributes(GREEN, BLACK, NORMAL);
  7999  010172  0E00               	movlw	0
  8000  010174  0101               	movlb	1	; () banked
  8001  010176  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8002  010178  0E00               	movlw	0
  8003  01017A  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8004  01017C  0E02               	movlw	2
  8005  01017E  ECCC  F098         	call	_terminal_textAttributes
  8006                           
  8007                           ;ring_buffer_LUT.c: 116: printf("Flash memory device ID is: 0x%X. This corresponds to a 
      +                          device "
  8008                           ;ring_buffer_LUT.c: 117: "part number of %s\n\r",
  8009                           ;ring_buffer_LUT.c: 118: getDeviceID(),
  8010                           ;ring_buffer_LUT.c: 119: getDeviceIDString(getDeviceID));
  8011  010182  0E00               	movlw	low STR_54
  8012  010184  0101               	movlb	1	; () banked
  8013  010186  6F64               	movwf	printf@f& (0+255),b
  8014  010188  0EF7               	movlw	high STR_54
  8015  01018A  6F65               	movwf	(printf@f+1)& (0+255),b
  8016  01018C  EC70  F0B7         	call	_getDeviceID	;wreg free
  8017  010190  C122  F166         	movff	?_getDeviceID,?_printf+2
  8018  010194  C123  F167         	movff	?_getDeviceID+1,?_printf+3
  8019  010198  0E6E               	movlw	high _getDeviceID
  8020  01019A  0101               	movlb	1	; () banked
  8021  01019C  6F1E               	movwf	(getDeviceIDString@inputDevID+1)& (0+255),b
  8022  01019E  0EE0               	movlw	low _getDeviceID
  8023  0101A0  6F1D               	movwf	getDeviceIDString@inputDevID& (0+255),b
  8024  0101A2  ECF5  F0AE         	call	_getDeviceIDString	;wreg free
  8025  0101A6  C11D  F168         	movff	?_getDeviceIDString,?_printf+4
  8026  0101AA  C11E  F169         	movff	?_getDeviceIDString+1,?_printf+5
  8027  0101AE  EC71  F086         	call	_printf	;wreg free
  8028                           
  8029                           ;ring_buffer_LUT.c: 122: terminal_textAttributesReset();
  8030  0101B2  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8031                           
  8032                           ;ring_buffer_LUT.c: 124: terminal_printNewline();
  8033  0101B6  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8034                           
  8035                           ;ring_buffer_LUT.c: 126: }
  8036  0101BA  0012               	return	
  8037  0101BC                     l1143:
  8038                           
  8039                           ;ring_buffer_LUT.c: 129: else if((0 == strcmp(line, "Revision ID?"))) {
  8040  0101BC  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8041  0101C0  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8042  0101C4  0E1C               	movlw	low STR_55
  8043  0101C6  0101               	movlb	1	; () banked
  8044  0101C8  6F19               	movwf	strcmp@s2& (0+255),b
  8045  0101CA  0EFF               	movlw	high STR_55
  8046  0101CC  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8047  0101CE  ECE5  F0B3         	call	_strcmp	;wreg free
  8048  0101D2  0101               	movlb	1	; () banked
  8049  0101D4  5117               	movf	?_strcmp& (0+255),w,b
  8050  0101D6  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8051  0101D8  A4D8               	btfss	status,2,c
  8052  0101DA  D022               	goto	l1145
  8053                           
  8054                           ; BSR set to: 1
  8055                           ;ring_buffer_LUT.c: 132: terminal_printNewline();
  8056  0101DC  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8057                           
  8058                           ;ring_buffer_LUT.c: 134: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8059  0101E0  0E00               	movlw	0
  8060  0101E2  0101               	movlb	1	; () banked
  8061  0101E4  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8062  0101E6  0E00               	movlw	0
  8063  0101E8  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8064  0101EA  0E02               	movlw	2
  8065  0101EC  ECCC  F098         	call	_terminal_textAttributes
  8066                           
  8067                           ;ring_buffer_LUT.c: 137: printf("Flash memory revision ID is: %s\n\r",
  8068                           ;ring_buffer_LUT.c: 138: getRevisionIDString(getMajorRevisionID(),getMinorRevisionID()))
      +                          ;
  8069  0101F0  0E68               	movlw	low STR_56
  8070  0101F2  0101               	movlb	1	; () banked
  8071  0101F4  6F64               	movwf	printf@f& (0+255),b
  8072  0101F6  0EFB               	movlw	high STR_56
  8073  0101F8  6F65               	movwf	(printf@f+1)& (0+255),b
  8074  0101FA  ECEF  F0B6         	call	_getMinorRevisionID	;wreg free
  8075  0101FE  0101               	movlb	1	; () banked
  8076  010200  6F27               	movwf	getRevisionIDString@inputMinRevID& (0+255),b
  8077  010202  ECAE  F0B5         	call	_getMajorRevisionID	;wreg free
  8078  010206  EC68  F0AE         	call	_getRevisionIDString
  8079  01020A  C127  F166         	movff	?_getRevisionIDString,?_printf+2
  8080  01020E  C128  F167         	movff	?_getRevisionIDString+1,?_printf+3
  8081  010212  EC71  F086         	call	_printf	;wreg free
  8082                           
  8083                           ;ring_buffer_LUT.c: 141: terminal_textAttributesReset();
  8084  010216  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8085                           
  8086                           ;ring_buffer_LUT.c: 143: terminal_printNewline();
  8087  01021A  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8088                           
  8089                           ;ring_buffer_LUT.c: 145: }
  8090  01021E  0012               	return	
  8091  010220                     l1145:
  8092                           
  8093                           ;ring_buffer_LUT.c: 148: else if((0 == strcmp(line, "User IDs?"))) {
  8094  010220  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8095  010224  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8096  010228  0E7B               	movlw	low STR_57
  8097  01022A  0101               	movlb	1	; () banked
  8098  01022C  6F19               	movwf	strcmp@s2& (0+255),b
  8099  01022E  0EFF               	movlw	high STR_57
  8100  010230  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8101  010232  ECE5  F0B3         	call	_strcmp	;wreg free
  8102  010236  0101               	movlb	1	; () banked
  8103  010238  5117               	movf	?_strcmp& (0+255),w,b
  8104  01023A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8105  01023C  A4D8               	btfss	status,2,c
  8106  01023E  D054               	goto	l1147
  8107                           
  8108                           ; BSR set to: 1
  8109                           ;ring_buffer_LUT.c: 151: terminal_printNewline();
  8110  010240  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8111                           
  8112                           ;ring_buffer_LUT.c: 153: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8113  010244  0E00               	movlw	0
  8114  010246  0101               	movlb	1	; () banked
  8115  010248  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8116  01024A  0E00               	movlw	0
  8117  01024C  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8118  01024E  0E02               	movlw	2
  8119  010250  ECCC  F098         	call	_terminal_textAttributes
  8120                           
  8121                           ;ring_buffer_LUT.c: 155: printf("The following User IDs have been retrieved from flash m
      +                          emory:\n\r");
  8122  010254  0E99               	movlw	low STR_58
  8123  010256  0101               	movlb	1	; () banked
  8124  010258  6F64               	movwf	printf@f& (0+255),b
  8125  01025A  0EF7               	movlw	high STR_58
  8126  01025C  6F65               	movwf	(printf@f+1)& (0+255),b
  8127  01025E  EC71  F086         	call	_printf	;wreg free
  8128                           
  8129                           ;ring_buffer_LUT.c: 158: for (int userID = 0; userID <= 7; userID++) {
  8130  010262  0E00               	movlw	0
  8131  010264  0102               	movlb	2	; () banked
  8132  010266  6FA3               	movwf	(ringBufferLUT@userID+1)& (0+255),b
  8133  010268  0E00               	movlw	0
  8134  01026A  6FA2               	movwf	ringBufferLUT@userID& (0+255),b
  8135  01026C                     l11989:
  8136                           
  8137                           ; BSR set to: 2
  8138  01026C  BFA3               	btfsc	(ringBufferLUT@userID+1)& (0+255),7,b
  8139  01026E  D006               	goto	l1148
  8140  010270  51A3               	movf	(ringBufferLUT@userID+1)& (0+255),w,b
  8141  010272  E135               	bnz	l11999
  8142  010274  0E08               	movlw	8
  8143  010276  5DA2               	subwf	ringBufferLUT@userID& (0+255),w,b
  8144  010278  B0D8               	btfsc	status,0,c
  8145  01027A  D031               	goto	u14680
  8146  01027C                     l1148:
  8147                           
  8148                           ; BSR set to: 2
  8149                           ;ring_buffer_LUT.c: 160: printf("    User ID Word %d (Flash address 0x%X): 0x%X\n\r",
  8150                           ;ring_buffer_LUT.c: 161: userID,
  8151                           ;ring_buffer_LUT.c: 162: (0x200000 + (2 * userID)),
  8152                           ;ring_buffer_LUT.c: 163: getUserID(userID));
  8153                           
  8154                           ; BSR set to: 2
  8155  01027C  0E2B               	movlw	low STR_59
  8156  01027E  0101               	movlb	1	; () banked
  8157  010280  6F64               	movwf	printf@f& (0+255),b
  8158  010282  0EF9               	movlw	high STR_59
  8159  010284  6F65               	movwf	(printf@f+1)& (0+255),b
  8160  010286  C2A2  F166         	movff	ringBufferLUT@userID,?_printf+2
  8161  01028A  C2A3  F167         	movff	ringBufferLUT@userID+1,?_printf+3
  8162  01028E  90D8               	bcf	status,0,c
  8163  010290  0102               	movlb	2	; () banked
  8164  010292  35A2               	rlcf	ringBufferLUT@userID& (0+255),w,b
  8165  010294  0101               	movlb	1	; () banked
  8166  010296  6FA4               	movwf	??_ringBufferLUT& (0+255),b
  8167  010298  0102               	movlb	2	; () banked
  8168  01029A  35A3               	rlcf	(ringBufferLUT@userID+1)& (0+255),w,b
  8169  01029C  0101               	movlb	1	; () banked
  8170  01029E  6FA5               	movwf	(??_ringBufferLUT+1)& (0+255),b
  8171  0102A0  6BA6               	clrf	(??_ringBufferLUT+2)& (0+255),b
  8172  0102A2  BFA5               	btfsc	(??_ringBufferLUT+1)& (0+255),7,b
  8173  0102A4  07A6               	decf	(??_ringBufferLUT+2)& (0+255),f,b
  8174  0102A6  51A6               	movf	(??_ringBufferLUT+2)& (0+255),w,b
  8175  0102A8  6FA7               	movwf	(??_ringBufferLUT+3)& (0+255),b
  8176  0102AA  0E00               	movlw	0
  8177  0102AC  25A4               	addwf	??_ringBufferLUT& (0+255),w,b
  8178  0102AE  6F68               	movwf	(?_printf+4)& (0+255),b
  8179  0102B0  0E00               	movlw	0
  8180  0102B2  21A5               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  8181  0102B4  6F69               	movwf	(?_printf+5)& (0+255),b
  8182  0102B6  0E20               	movlw	32
  8183  0102B8  21A6               	addwfc	(??_ringBufferLUT+2)& (0+255),w,b
  8184  0102BA  6F6A               	movwf	(?_printf+6)& (0+255),b
  8185  0102BC  0E00               	movlw	0
  8186  0102BE  21A7               	addwfc	(??_ringBufferLUT+3)& (0+255),w,b
  8187  0102C0  6F6B               	movwf	(?_printf+7)& (0+255),b
  8188  0102C2  0102               	movlb	2	; () banked
  8189  0102C4  51A2               	movf	ringBufferLUT@userID& (0+255),w,b
  8190  0102C6  EC90  F0B5         	call	_getUserID
  8191  0102CA  C122  F16C         	movff	?_getUserID,?_printf+8
  8192  0102CE  C123  F16D         	movff	?_getUserID+1,?_printf+9
  8193  0102D2  EC71  F086         	call	_printf	;wreg free
  8194  0102D6  0102               	movlb	2	; () banked
  8195  0102D8  4BA2               	infsnz	ringBufferLUT@userID& (0+255),f,b
  8196  0102DA  2BA3               	incf	(ringBufferLUT@userID+1)& (0+255),f,b
  8197  0102DC  D7C7               	goto	l11989
  8198  0102DE                     u14680:
  8199  0102DE                     l11999:
  8200                           
  8201                           ; BSR set to: 2
  8202                           ;ring_buffer_LUT.c: 165: }
  8203                           ;ring_buffer_LUT.c: 168: terminal_textAttributesReset();
  8204  0102DE  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8205                           
  8206                           ;ring_buffer_LUT.c: 170: terminal_printNewline();
  8207  0102E2  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8208                           
  8209                           ;ring_buffer_LUT.c: 172: }
  8210  0102E6  0012               	return	
  8211  0102E8                     l1147:
  8212                           
  8213                           ;ring_buffer_LUT.c: 175: else if((0 == strcmp(line, "ADC Error?"))) {
  8214  0102E8  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8215  0102EC  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8216  0102F0  0E66               	movlw	low STR_60
  8217  0102F2  0101               	movlb	1	; () banked
  8218  0102F4  6F19               	movwf	strcmp@s2& (0+255),b
  8219  0102F6  0EFF               	movlw	high STR_60
  8220  0102F8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8221  0102FA  ECE5  F0B3         	call	_strcmp	;wreg free
  8222  0102FE  0101               	movlb	1	; () banked
  8223  010300  5117               	movf	?_strcmp& (0+255),w,b
  8224  010302  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8225  010304  A4D8               	btfss	status,2,c
  8226  010306  D0AD               	goto	l1151
  8227                           
  8228                           ; BSR set to: 1
  8229                           ;ring_buffer_LUT.c: 177: if (adc_error_flag) {
  8230  010308  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8231  01030A  D095               	goto	l1152
  8232                           
  8233                           ; BSR set to: 1
  8234                           ;ring_buffer_LUT.c: 180: terminal_printNewline();
  8235  01030C  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8236                           
  8237                           ;ring_buffer_LUT.c: 182: terminal_textAttributes(RED, BLACK, NORMAL);
  8238  010310  0E00               	movlw	0
  8239  010312  0101               	movlb	1	; () banked
  8240  010314  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8241  010316  0E00               	movlw	0
  8242  010318  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8243  01031A  0E01               	movlw	1
  8244  01031C  ECCC  F098         	call	_terminal_textAttributes
  8245                           
  8246                           ;ring_buffer_LUT.c: 185: current_adc_channel = ADPCH;
  8247  010320  CF5F F1D1          	movff	3935,_current_adc_channel	;volatile
  8248                           
  8249                           ;ring_buffer_LUT.c: 188: char channel_name[22];
  8250                           ;ring_buffer_LUT.c: 190: switch (current_adc_channel) {
  8251  010324  D060               	goto	l1153
  8252  010326                     
  8253                           ;ring_buffer_LUT.c: 193: strcpy(channel_name, "ISNS");
  8254  010326  0E82               	movlw	low ringBufferLUT@channel_name
  8255  010328  0101               	movlb	1	; () banked
  8256  01032A  6F17               	movwf	strcpy@to& (0+255),b
  8257  01032C  0E02               	movlw	high ringBufferLUT@channel_name
  8258  01032E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8259  010330  0EA5               	movlw	low STR_61
  8260  010332  6F19               	movwf	strcpy@from& (0+255),b
  8261  010334  0EFF               	movlw	high STR_61
  8262  010336  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8263  010338  ECA4  F0B4         	call	_strcpy	;wreg free
  8264                           
  8265                           ;ring_buffer_LUT.c: 194: break;
  8266  01033C  D06C               	goto	l1155
  8267  01033E                     
  8268                           ;ring_buffer_LUT.c: 197: strcpy(channel_name, "POS12");
  8269  01033E  0E82               	movlw	low ringBufferLUT@channel_name
  8270  010340  0101               	movlb	1	; () banked
  8271  010342  6F17               	movwf	strcpy@to& (0+255),b
  8272  010344  0E02               	movlw	high ringBufferLUT@channel_name
  8273  010346  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8274  010348  0E93               	movlw	low STR_62
  8275  01034A  6F19               	movwf	strcpy@from& (0+255),b
  8276  01034C  0EFF               	movlw	high STR_62
  8277  01034E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8278  010350  ECA4  F0B4         	call	_strcpy	;wreg free
  8279                           
  8280                           ;ring_buffer_LUT.c: 198: break;
  8281  010354  D060               	goto	l1155
  8282  010356                     
  8283                           ;ring_buffer_LUT.c: 201: strcpy(channel_name, "POS3P3");
  8284  010356  0E82               	movlw	low ringBufferLUT@channel_name
  8285  010358  0101               	movlb	1	; () banked
  8286  01035A  6F17               	movwf	strcpy@to& (0+255),b
  8287  01035C  0E02               	movlw	high ringBufferLUT@channel_name
  8288  01035E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8289  010360  0E8C               	movlw	low STR_63
  8290  010362  6F19               	movwf	strcpy@from& (0+255),b
  8291  010364  0EFF               	movlw	high STR_63
  8292  010366  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8293  010368  ECA4  F0B4         	call	_strcpy	;wreg free
  8294                           
  8295                           ;ring_buffer_LUT.c: 202: break;
  8296  01036C  D054               	goto	l1155
  8297  01036E                     
  8298                           ;ring_buffer_LUT.c: 205: strcpy(channel_name, "Internal AVSS");
  8299  01036E  0E82               	movlw	low ringBufferLUT@channel_name
  8300  010370  0101               	movlb	1	; () banked
  8301  010372  6F17               	movwf	strcpy@to& (0+255),b
  8302  010374  0E02               	movlw	high ringBufferLUT@channel_name
  8303  010376  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8304  010378  0EF3               	movlw	low STR_64
  8305  01037A  6F19               	movwf	strcpy@from& (0+255),b
  8306  01037C  0EFE               	movlw	high STR_64
  8307  01037E  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8308  010380  ECA4  F0B4         	call	_strcpy	;wreg free
  8309                           
  8310                           ;ring_buffer_LUT.c: 206: break;
  8311  010384  D048               	goto	l1155
  8312  010386                     
  8313                           ;ring_buffer_LUT.c: 209: strcpy(channel_name, "Internal Temp");
  8314  010386  0E82               	movlw	low ringBufferLUT@channel_name
  8315  010388  0101               	movlb	1	; () banked
  8316  01038A  6F17               	movwf	strcpy@to& (0+255),b
  8317  01038C  0E02               	movlw	high ringBufferLUT@channel_name
  8318  01038E  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8319  010390  0E01               	movlw	low STR_65
  8320  010392  6F19               	movwf	strcpy@from& (0+255),b
  8321  010394  0EFF               	movlw	high STR_65
  8322  010396  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8323  010398  ECA4  F0B4         	call	_strcpy	;wreg free
  8324                           
  8325                           ;ring_buffer_LUT.c: 210: break;
  8326  01039C  D03C               	goto	l1155
  8327  01039E                     
  8328                           ;ring_buffer_LUT.c: 213: strcpy(channel_name, "Internal DAC1");
  8329  01039E  0E82               	movlw	low ringBufferLUT@channel_name
  8330  0103A0  0101               	movlb	1	; () banked
  8331  0103A2  6F17               	movwf	strcpy@to& (0+255),b
  8332  0103A4  0E02               	movlw	high ringBufferLUT@channel_name
  8333  0103A6  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8334  0103A8  0EC9               	movlw	low STR_66
  8335  0103AA  6F19               	movwf	strcpy@from& (0+255),b
  8336  0103AC  0EFE               	movlw	high STR_66
  8337  0103AE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8338  0103B0  ECA4  F0B4         	call	_strcpy	;wreg free
  8339                           
  8340                           ;ring_buffer_LUT.c: 214: break;
  8341  0103B4  D030               	goto	l1155
  8342  0103B6                     
  8343                           ;ring_buffer_LUT.c: 217: strcpy(channel_name, "Internal FVR Buffer 1");
  8344  0103B6  0E82               	movlw	low ringBufferLUT@channel_name
  8345  0103B8  0101               	movlb	1	; () banked
  8346  0103BA  6F17               	movwf	strcpy@to& (0+255),b
  8347  0103BC  0E02               	movlw	high ringBufferLUT@channel_name
  8348  0103BE  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8349  0103C0  0E6B               	movlw	low STR_67
  8350  0103C2  6F19               	movwf	strcpy@from& (0+255),b
  8351  0103C4  0EFD               	movlw	high STR_67
  8352  0103C6  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8353  0103C8  ECA4  F0B4         	call	_strcpy	;wreg free
  8354                           
  8355                           ;ring_buffer_LUT.c: 218: break;
  8356  0103CC  D024               	goto	l1155
  8357  0103CE                     
  8358                           ;ring_buffer_LUT.c: 221: strcpy(channel_name, "Spurious channel");
  8359  0103CE  0E82               	movlw	low ringBufferLUT@channel_name
  8360  0103D0  0101               	movlb	1	; () banked
  8361  0103D2  6F17               	movwf	strcpy@to& (0+255),b
  8362  0103D4  0E02               	movlw	high ringBufferLUT@channel_name
  8363  0103D6  6F18               	movwf	(strcpy@to+1)& (0+255),b
  8364  0103D8  0E1C               	movlw	low STR_68
  8365  0103DA  6F19               	movwf	strcpy@from& (0+255),b
  8366  0103DC  0EFE               	movlw	high STR_68
  8367  0103DE  6F1A               	movwf	(strcpy@from+1)& (0+255),b
  8368  0103E0  ECA4  F0B4         	call	_strcpy	;wreg free
  8369                           
  8370                           ;ring_buffer_LUT.c: 224: }
  8371                           
  8372                           ;ring_buffer_LUT.c: 222: break;
  8373  0103E4  D018               	goto	l1155
  8374  0103E6                     l1153:
  8375  0103E6  0101               	movlb	1	; () banked
  8376  0103E8  51D1               	movf	_current_adc_channel& (0+255),w,b
  8377                           
  8378                           ; Switch size 1, requested type "space"
  8379                           ; Number of cases is 7, Range of values is 0 to 63
  8380                           ; switch strategies available:
  8381                           ; Name         Instructions Cycles
  8382                           ; simple_byte           22    12 (average)
  8383                           ;	Chosen strategy is simple_byte
  8384  0103EA  0A00               	xorlw	0	; case 0
  8385  0103EC  B4D8               	btfsc	status,2,c
  8386  0103EE  D79B               	goto	l1154
  8387  0103F0  0A04               	xorlw	4	; case 4
  8388  0103F2  B4D8               	btfsc	status,2,c
  8389  0103F4  D7A4               	goto	l1156
  8390  0103F6  0A26               	xorlw	38	; case 34
  8391  0103F8  B4D8               	btfsc	status,2,c
  8392  0103FA  D7AD               	goto	l1157
  8393  0103FC  0A1E               	xorlw	30	; case 60
  8394  0103FE  B4D8               	btfsc	status,2,c
  8395  010400  D7B6               	goto	l1158
  8396  010402  0A01               	xorlw	1	; case 61
  8397  010404  B4D8               	btfsc	status,2,c
  8398  010406  D7BF               	goto	l1159
  8399  010408  0A03               	xorlw	3	; case 62
  8400  01040A  B4D8               	btfsc	status,2,c
  8401  01040C  D7C8               	goto	l1160
  8402  01040E  0A01               	xorlw	1	; case 63
  8403  010410  B4D8               	btfsc	status,2,c
  8404  010412  D7D1               	goto	l1161
  8405  010414  D7DC               	goto	l1162
  8406  010416                     l1155:
  8407                           
  8408                           ;ring_buffer_LUT.c: 227: printf("The following channel caused an ADC error: %s\n\r", cha
      +                          nnel_name);
  8409                           
  8410                           ; BSR set to: 1
  8411  010416  0E5C               	movlw	low STR_69
  8412  010418  0101               	movlb	1	; () banked
  8413  01041A  6F64               	movwf	printf@f& (0+255),b
  8414  01041C  0EF9               	movlw	high STR_69
  8415  01041E  6F65               	movwf	(printf@f+1)& (0+255),b
  8416  010420  0E82               	movlw	low ringBufferLUT@channel_name
  8417  010422  6F66               	movwf	(?_printf+2)& (0+255),b
  8418  010424  0E02               	movlw	high ringBufferLUT@channel_name
  8419  010426  6F67               	movwf	(?_printf+3)& (0+255),b
  8420  010428  EC71  F086         	call	_printf	;wreg free
  8421                           
  8422                           ;ring_buffer_LUT.c: 229: terminal_textAttributesReset();
  8423  01042C  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8424                           
  8425                           ;ring_buffer_LUT.c: 231: terminal_printNewline();
  8426  010430  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8427                           
  8428                           ;ring_buffer_LUT.c: 233: }
  8429  010434  0012               	return	
  8430  010436                     l1152:
  8431                           
  8432                           ;ring_buffer_LUT.c: 235: else {
  8433                           ;ring_buffer_LUT.c: 238: terminal_printNewline();
  8434  010436  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8435                           
  8436                           ;ring_buffer_LUT.c: 240: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8437  01043A  0E00               	movlw	0
  8438  01043C  0101               	movlb	1	; () banked
  8439  01043E  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8440  010440  0E00               	movlw	0
  8441  010442  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8442  010444  0E02               	movlw	2
  8443  010446  ECCC  F098         	call	_terminal_textAttributes
  8444                           
  8445                           ;ring_buffer_LUT.c: 241: printf("No ADC Error detected\n\r");
  8446  01044A  0E26               	movlw	low STR_70
  8447  01044C  0101               	movlb	1	; () banked
  8448  01044E  6F64               	movwf	printf@f& (0+255),b
  8449  010450  0EFD               	movlw	high STR_70
  8450  010452  6F65               	movwf	(printf@f+1)& (0+255),b
  8451  010454  EC71  F086         	call	_printf	;wreg free
  8452                           
  8453                           ;ring_buffer_LUT.c: 243: terminal_textAttributesReset();
  8454  010458  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8455                           
  8456                           ;ring_buffer_LUT.c: 245: terminal_printNewline();
  8457  01045C  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8458                           
  8459                           ;ring_buffer_LUT.c: 247: }
  8460                           ;ring_buffer_LUT.c: 249: }
  8461  010460  0012               	return	
  8462  010462                     l1151:
  8463                           
  8464                           ;ring_buffer_LUT.c: 252: else if((0 == strcmp(line, "Clear ADC Error"))) {
  8465  010462  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8466  010466  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8467  01046A  0E7D               	movlw	low STR_71
  8468  01046C  0101               	movlb	1	; () banked
  8469  01046E  6F19               	movwf	strcmp@s2& (0+255),b
  8470  010470  0EFE               	movlw	high STR_71
  8471  010472  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8472  010474  ECE5  F0B3         	call	_strcmp	;wreg free
  8473  010478  0101               	movlb	1	; () banked
  8474  01047A  5117               	movf	?_strcmp& (0+255),w,b
  8475  01047C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8476  01047E  A4D8               	btfss	status,2,c
  8477  010480  D01C               	goto	l1165
  8478                           
  8479                           ; BSR set to: 1
  8480                           ;ring_buffer_LUT.c: 254: LATFbits.LATF3 = 0;
  8481  010482  967E               	bcf	3966,3,c	;volatile
  8482                           
  8483                           ;ring_buffer_LUT.c: 255: adc_error_flag = 0;
  8484  010484  905E               	bcf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
  8485                           
  8486                           ; BSR set to: 1
  8487                           ;ring_buffer_LUT.c: 257: PIE5bits.TMR7IE == 1;
  8488  010486  010E               	movlb	14	; () banked
  8489  010488  512E               	movf	46,w,b	;volatile
  8490                           
  8491                           ; BSR set to: 14
  8492                           ;ring_buffer_LUT.c: 258: TMR7_StartTimer();
  8493  01048A  EC54  F0B8         	call	_TMR7_StartTimer	;wreg free
  8494                           
  8495                           ;ring_buffer_LUT.c: 261: terminal_printNewline();
  8496  01048E  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8497                           
  8498                           ;ring_buffer_LUT.c: 263: terminal_textAttributes(GREEN, BLACK, NORMAL);
  8499  010492  0E00               	movlw	0
  8500  010494  0101               	movlb	1	; () banked
  8501  010496  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8502  010498  0E00               	movlw	0
  8503  01049A  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8504  01049C  0E02               	movlw	2
  8505  01049E  ECCC  F098         	call	_terminal_textAttributes
  8506                           
  8507                           ;ring_buffer_LUT.c: 264: printf("Clearing ADC Error\n\r");
  8508  0104A2  0E96               	movlw	low STR_72
  8509  0104A4  0101               	movlb	1	; () banked
  8510  0104A6  6F64               	movwf	printf@f& (0+255),b
  8511  0104A8  0EFD               	movlw	high STR_72
  8512  0104AA  6F65               	movwf	(printf@f+1)& (0+255),b
  8513  0104AC  EC71  F086         	call	_printf	;wreg free
  8514                           
  8515                           ;ring_buffer_LUT.c: 266: terminal_textAttributesReset();
  8516  0104B0  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8517                           
  8518                           ;ring_buffer_LUT.c: 268: terminal_printNewline();
  8519  0104B4  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8520                           
  8521                           ;ring_buffer_LUT.c: 271: }
  8522  0104B8  0012               	return	
  8523  0104BA                     l1165:
  8524                           
  8525                           ;ring_buffer_LUT.c: 274: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  8526  0104BA  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8527  0104BE  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8528  0104C2  0E3D               	movlw	low STR_73
  8529  0104C4  0101               	movlb	1	; () banked
  8530  0104C6  6F19               	movwf	strcmp@s2& (0+255),b
  8531  0104C8  0EFE               	movlw	high STR_73
  8532  0104CA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8533  0104CC  ECE5  F0B3         	call	_strcmp	;wreg free
  8534  0104D0  0101               	movlb	1	; () banked
  8535  0104D2  5117               	movf	?_strcmp& (0+255),w,b
  8536  0104D4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8537  0104D6  A4D8               	btfss	status,2,c
  8538  0104D8  D01C               	goto	l1167
  8539                           
  8540                           ; BSR set to: 1
  8541                           ;ring_buffer_LUT.c: 277: terminal_printNewline();
  8542  0104DA  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8543                           
  8544                           ;ring_buffer_LUT.c: 279: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8545  0104DE  0E00               	movlw	0
  8546  0104E0  0101               	movlb	1	; () banked
  8547  0104E2  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8548  0104E4  0E00               	movlw	0
  8549  0104E6  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8550  0104E8  0E06               	movlw	6
  8551  0104EA  ECCC  F098         	call	_terminal_textAttributes
  8552                           
  8553                           ;ring_buffer_LUT.c: 280: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Resul
      +                          t);
  8554  0104EE  0E23               	movlw	low STR_74
  8555  0104F0  0101               	movlb	1	; () banked
  8556  0104F2  6F64               	movwf	printf@f& (0+255),b
  8557  0104F4  0EFB               	movlw	high STR_74
  8558  0104F6  6F65               	movwf	(printf@f+1)& (0+255),b
  8559  0104F8  C0DD  F166         	movff	_POS3P3_ADC_Result,?_printf+2	;volatile
  8560  0104FC  C0DE  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3	;volatile
  8561  010500  C0DF  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4	;volatile
  8562  010504  EC71  F086         	call	_printf	;wreg free
  8563                           
  8564                           ;ring_buffer_LUT.c: 282: terminal_textAttributesReset();
  8565  010508  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8566                           
  8567                           ;ring_buffer_LUT.c: 284: terminal_printNewline();
  8568  01050C  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8569                           
  8570                           ;ring_buffer_LUT.c: 287: }
  8571  010510  0012               	return	
  8572  010512                     l1167:
  8573                           
  8574                           ;ring_buffer_LUT.c: 290: else if((0 == strcmp(line, "Measure POS12?"))) {
  8575  010512  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8576  010516  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8577  01051A  0E9C               	movlw	low STR_75
  8578  01051C  0101               	movlb	1	; () banked
  8579  01051E  6F19               	movwf	strcmp@s2& (0+255),b
  8580  010520  0EFE               	movlw	high STR_75
  8581  010522  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8582  010524  ECE5  F0B3         	call	_strcmp	;wreg free
  8583  010528  0101               	movlb	1	; () banked
  8584  01052A  5117               	movf	?_strcmp& (0+255),w,b
  8585  01052C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8586  01052E  A4D8               	btfss	status,2,c
  8587  010530  D01C               	goto	l1169
  8588                           
  8589                           ; BSR set to: 1
  8590                           ;ring_buffer_LUT.c: 293: terminal_printNewline();
  8591  010532  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8592                           
  8593                           ;ring_buffer_LUT.c: 295: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8594  010536  0E00               	movlw	0
  8595  010538  0101               	movlb	1	; () banked
  8596  01053A  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8597  01053C  0E00               	movlw	0
  8598  01053E  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8599  010540  0E06               	movlw	6
  8600  010542  ECCC  F098         	call	_terminal_textAttributes
  8601                           
  8602                           ;ring_buffer_LUT.c: 296: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  8603  010546  0ECE               	movlw	low STR_76
  8604  010548  0101               	movlb	1	; () banked
  8605  01054A  6F64               	movwf	printf@f& (0+255),b
  8606  01054C  0EFB               	movlw	high STR_76
  8607  01054E  6F65               	movwf	(printf@f+1)& (0+255),b
  8608  010550  C0DA  F166         	movff	_POS12_ADC_Result,?_printf+2	;volatile
  8609  010554  C0DB  F167         	movff	_POS12_ADC_Result+1,?_printf+3	;volatile
  8610  010558  C0DC  F168         	movff	_POS12_ADC_Result+2,?_printf+4	;volatile
  8611  01055C  EC71  F086         	call	_printf	;wreg free
  8612                           
  8613                           ;ring_buffer_LUT.c: 298: terminal_textAttributesReset();
  8614  010560  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8615                           
  8616                           ;ring_buffer_LUT.c: 300: terminal_printNewline();
  8617  010564  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8618                           
  8619                           ;ring_buffer_LUT.c: 303: }
  8620  010568  0012               	return	
  8621  01056A                     l1169:
  8622                           
  8623                           ;ring_buffer_LUT.c: 306: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  8624  01056A  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8625  01056E  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8626  010572  0EE8               	movlw	low STR_77
  8627  010574  0101               	movlb	1	; () banked
  8628  010576  6F19               	movwf	strcmp@s2& (0+255),b
  8629  010578  0EFD               	movlw	high STR_77
  8630  01057A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8631  01057C  ECE5  F0B3         	call	_strcmp	;wreg free
  8632  010580  0101               	movlb	1	; () banked
  8633  010582  5117               	movf	?_strcmp& (0+255),w,b
  8634  010584  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8635  010586  A4D8               	btfss	status,2,c
  8636  010588  D01C               	goto	l1171
  8637                           
  8638                           ; BSR set to: 1
  8639                           ;ring_buffer_LUT.c: 309: terminal_printNewline();
  8640  01058A  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8641                           
  8642                           ;ring_buffer_LUT.c: 311: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8643  01058E  0E00               	movlw	0
  8644  010590  0101               	movlb	1	; () banked
  8645  010592  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8646  010594  0E00               	movlw	0
  8647  010596  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8648  010598  0E06               	movlw	6
  8649  01059A  ECCC  F098         	call	_terminal_textAttributes
  8650                           
  8651                           ;ring_buffer_LUT.c: 312: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  8652  01059E  0E46               	movlw	low STR_78
  8653  0105A0  0101               	movlb	1	; () banked
  8654  0105A2  6F64               	movwf	printf@f& (0+255),b
  8655  0105A4  0EFB               	movlw	high STR_78
  8656  0105A6  6F65               	movwf	(printf@f+1)& (0+255),b
  8657  0105A8  C0D7  F166         	movff	_Temp_ADC_Result,?_printf+2	;volatile
  8658  0105AC  C0D8  F167         	movff	_Temp_ADC_Result+1,?_printf+3	;volatile
  8659  0105B0  C0D9  F168         	movff	_Temp_ADC_Result+2,?_printf+4	;volatile
  8660  0105B4  EC71  F086         	call	_printf	;wreg free
  8661                           
  8662                           ;ring_buffer_LUT.c: 314: terminal_textAttributesReset();
  8663  0105B8  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8664                           
  8665                           ;ring_buffer_LUT.c: 316: terminal_printNewline();
  8666  0105BC  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8667                           
  8668                           ;ring_buffer_LUT.c: 319: }
  8669  0105C0  0012               	return	
  8670  0105C2                     l1171:
  8671                           
  8672                           ;ring_buffer_LUT.c: 322: else if((0 == strcmp(line, "Measure FVR?"))) {
  8673  0105C2  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8674  0105C6  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8675  0105CA  0E29               	movlw	low STR_79
  8676  0105CC  0101               	movlb	1	; () banked
  8677  0105CE  6F19               	movwf	strcmp@s2& (0+255),b
  8678  0105D0  0EFF               	movlw	high STR_79
  8679  0105D2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8680  0105D4  ECE5  F0B3         	call	_strcmp	;wreg free
  8681  0105D8  0101               	movlb	1	; () banked
  8682  0105DA  5117               	movf	?_strcmp& (0+255),w,b
  8683  0105DC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8684  0105DE  A4D8               	btfss	status,2,c
  8685  0105E0  D01C               	goto	l1173
  8686                           
  8687                           ; BSR set to: 1
  8688                           ;ring_buffer_LUT.c: 325: terminal_printNewline();
  8689  0105E2  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8690                           
  8691                           ;ring_buffer_LUT.c: 327: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8692  0105E6  0E00               	movlw	0
  8693  0105E8  0101               	movlb	1	; () banked
  8694  0105EA  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8695  0105EC  0E00               	movlw	0
  8696  0105EE  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8697  0105F0  0E06               	movlw	6
  8698  0105F2  ECCC  F098         	call	_terminal_textAttributes
  8699                           
  8700                           ;ring_buffer_LUT.c: 328: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  8701  0105F6  0E8A               	movlw	low STR_80
  8702  0105F8  0101               	movlb	1	; () banked
  8703  0105FA  6F64               	movwf	printf@f& (0+255),b
  8704  0105FC  0EF8               	movlw	high STR_80
  8705  0105FE  6F65               	movwf	(printf@f+1)& (0+255),b
  8706  010600  C0EE  F166         	movff	_FVR_ADC_Result,?_printf+2	;volatile
  8707  010604  C0EF  F167         	movff	_FVR_ADC_Result+1,?_printf+3	;volatile
  8708  010608  C0F0  F168         	movff	_FVR_ADC_Result+2,?_printf+4	;volatile
  8709  01060C  EC71  F086         	call	_printf	;wreg free
  8710                           
  8711                           ;ring_buffer_LUT.c: 330: terminal_textAttributesReset();
  8712  010610  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8713                           
  8714                           ;ring_buffer_LUT.c: 332: terminal_printNewline();
  8715  010614  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8716                           
  8717                           ;ring_buffer_LUT.c: 335: }
  8718  010618  0012               	return	
  8719  01061A                     l1173:
  8720                           
  8721                           ;ring_buffer_LUT.c: 338: else if((0 == strcmp(line, "Measure AVSS?"))) {
  8722  01061A  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8723  01061E  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8724  010622  0ED7               	movlw	low STR_81
  8725  010624  0101               	movlb	1	; () banked
  8726  010626  6F19               	movwf	strcmp@s2& (0+255),b
  8727  010628  0EFE               	movlw	high STR_81
  8728  01062A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8729  01062C  ECE5  F0B3         	call	_strcmp	;wreg free
  8730  010630  0101               	movlb	1	; () banked
  8731  010632  5117               	movf	?_strcmp& (0+255),w,b
  8732  010634  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8733  010636  A4D8               	btfss	status,2,c
  8734  010638  D01C               	goto	l1175
  8735                           
  8736                           ; BSR set to: 1
  8737                           ;ring_buffer_LUT.c: 341: terminal_printNewline();
  8738  01063A  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8739                           
  8740                           ;ring_buffer_LUT.c: 343: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8741  01063E  0E00               	movlw	0
  8742  010640  0101               	movlb	1	; () banked
  8743  010642  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8744  010644  0E00               	movlw	0
  8745  010646  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8746  010648  0E06               	movlw	6
  8747  01064A  ECCC  F098         	call	_terminal_textAttributes
  8748                           
  8749                           ;ring_buffer_LUT.c: 344: printf("AVSS measured as %.3f Volts by ADC\n\r", AVSS_ADC_Resul
      +                          t);
  8750  01064E  0EB4               	movlw	low STR_82
  8751  010650  0101               	movlb	1	; () banked
  8752  010652  6F64               	movwf	printf@f& (0+255),b
  8753  010654  0EFA               	movlw	high STR_82
  8754  010656  6F65               	movwf	(printf@f+1)& (0+255),b
  8755  010658  C0E3  F166         	movff	_AVSS_ADC_Result,?_printf+2	;volatile
  8756  01065C  C0E4  F167         	movff	_AVSS_ADC_Result+1,?_printf+3	;volatile
  8757  010660  C0E5  F168         	movff	_AVSS_ADC_Result+2,?_printf+4	;volatile
  8758  010664  EC71  F086         	call	_printf	;wreg free
  8759                           
  8760                           ;ring_buffer_LUT.c: 346: terminal_textAttributesReset();
  8761  010668  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8762                           
  8763                           ;ring_buffer_LUT.c: 348: terminal_printNewline();
  8764  01066C  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8765                           
  8766                           ;ring_buffer_LUT.c: 351: }
  8767  010670  0012               	return	
  8768  010672                     l1175:
  8769                           
  8770                           ;ring_buffer_LUT.c: 354: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  8771  010672  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8772  010676  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8773  01067A  0EC1               	movlw	low STR_83
  8774  01067C  0101               	movlb	1	; () banked
  8775  01067E  6F19               	movwf	strcmp@s2& (0+255),b
  8776  010680  0EFC               	movlw	high STR_83
  8777  010682  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8778  010684  ECE5  F0B3         	call	_strcmp	;wreg free
  8779  010688  0101               	movlb	1	; () banked
  8780  01068A  5117               	movf	?_strcmp& (0+255),w,b
  8781  01068C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8782  01068E  A4D8               	btfss	status,2,c
  8783  010690  D01C               	goto	l1177
  8784                           
  8785                           ; BSR set to: 1
  8786                           ;ring_buffer_LUT.c: 357: terminal_printNewline();
  8787  010692  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8788                           
  8789                           ;ring_buffer_LUT.c: 359: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8790  010696  0E00               	movlw	0
  8791  010698  0101               	movlb	1	; () banked
  8792  01069A  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8793  01069C  0E00               	movlw	0
  8794  01069E  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8795  0106A0  0E06               	movlw	6
  8796  0106A2  ECCC  F098         	call	_terminal_textAttributes
  8797                           
  8798                           ;ring_buffer_LUT.c: 360: printf("Measured Current is %.3f Amps\n\r", Imeas);
  8799  0106A6  0E11               	movlw	low STR_84
  8800  0106A8  0101               	movlb	1	; () banked
  8801  0106AA  6F64               	movwf	printf@f& (0+255),b
  8802  0106AC  0EFC               	movlw	high STR_84
  8803  0106AE  6F65               	movwf	(printf@f+1)& (0+255),b
  8804  0106B0  C0CE  F166         	movff	_Imeas,?_printf+2	;volatile
  8805  0106B4  C0CF  F167         	movff	_Imeas+1,?_printf+3	;volatile
  8806  0106B8  C0D0  F168         	movff	_Imeas+2,?_printf+4	;volatile
  8807  0106BC  EC71  F086         	call	_printf	;wreg free
  8808                           
  8809                           ;ring_buffer_LUT.c: 362: terminal_textAttributesReset();
  8810  0106C0  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8811                           
  8812                           ;ring_buffer_LUT.c: 364: terminal_printNewline();
  8813  0106C4  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8814                           
  8815                           ;ring_buffer_LUT.c: 366: }
  8816  0106C8  0012               	return	
  8817  0106CA                     l1177:
  8818                           
  8819                           ;ring_buffer_LUT.c: 369: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  8820  0106CA  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8821  0106CE  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8822  0106D2  0EC0               	movlw	low STR_85
  8823  0106D4  0101               	movlb	1	; () banked
  8824  0106D6  6F19               	movwf	strcmp@s2& (0+255),b
  8825  0106D8  0EFD               	movlw	high STR_85
  8826  0106DA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8827  0106DC  ECE5  F0B3         	call	_strcmp	;wreg free
  8828  0106E0  0101               	movlb	1	; () banked
  8829  0106E2  5117               	movf	?_strcmp& (0+255),w,b
  8830  0106E4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8831  0106E6  A4D8               	btfss	status,2,c
  8832  0106E8  D01C               	goto	l1179
  8833                           
  8834                           ; BSR set to: 1
  8835                           ;ring_buffer_LUT.c: 372: terminal_printNewline();
  8836  0106EA  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8837                           
  8838                           ;ring_buffer_LUT.c: 374: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8839  0106EE  0E00               	movlw	0
  8840  0106F0  0101               	movlb	1	; () banked
  8841  0106F2  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8842  0106F4  0E00               	movlw	0
  8843  0106F6  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8844  0106F8  0E06               	movlw	6
  8845  0106FA  ECCC  F098         	call	_terminal_textAttributes
  8846                           
  8847                           ;ring_buffer_LUT.c: 375: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  8848  0106FE  0E8A               	movlw	low STR_86
  8849  010700  0101               	movlb	1	; () banked
  8850  010702  6F64               	movwf	printf@f& (0+255),b
  8851  010704  0EFB               	movlw	high STR_86
  8852  010706  6F65               	movwf	(printf@f+1)& (0+255),b
  8853  010708  C0CB  F166         	movff	_Irms,?_printf+2	;volatile
  8854  01070C  C0CC  F167         	movff	_Irms+1,?_printf+3	;volatile
  8855  010710  C0CD  F168         	movff	_Irms+2,?_printf+4	;volatile
  8856  010714  EC71  F086         	call	_printf	;wreg free
  8857                           
  8858                           ;ring_buffer_LUT.c: 377: terminal_textAttributesReset();
  8859  010718  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8860                           
  8861                           ;ring_buffer_LUT.c: 379: terminal_printNewline();
  8862  01071C  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8863                           
  8864                           ;ring_buffer_LUT.c: 381: }
  8865  010720  0012               	return	
  8866  010722                     l1179:
  8867                           
  8868                           ;ring_buffer_LUT.c: 384: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  8869  010722  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8870  010726  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8871  01072A  0EAB               	movlw	low STR_87
  8872  01072C  0101               	movlb	1	; () banked
  8873  01072E  6F19               	movwf	strcmp@s2& (0+255),b
  8874  010730  0EFD               	movlw	high STR_87
  8875  010732  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8876  010734  ECE5  F0B3         	call	_strcmp	;wreg free
  8877  010738  0101               	movlb	1	; () banked
  8878  01073A  5117               	movf	?_strcmp& (0+255),w,b
  8879  01073C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8880  01073E  A4D8               	btfss	status,2,c
  8881  010740  D01C               	goto	l1181
  8882                           
  8883                           ; BSR set to: 1
  8884                           ;ring_buffer_LUT.c: 387: terminal_printNewline();
  8885  010742  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8886                           
  8887                           ;ring_buffer_LUT.c: 389: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8888  010746  0E00               	movlw	0
  8889  010748  0101               	movlb	1	; () banked
  8890  01074A  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8891  01074C  0E00               	movlw	0
  8892  01074E  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8893  010750  0E06               	movlw	6
  8894  010752  ECCC  F098         	call	_terminal_textAttributes
  8895                           
  8896                           ;ring_buffer_LUT.c: 390: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  8897  010756  0EAC               	movlw	low STR_88
  8898  010758  0101               	movlb	1	; () banked
  8899  01075A  6F64               	movwf	printf@f& (0+255),b
  8900  01075C  0EFB               	movlw	high STR_88
  8901  01075E  6F65               	movwf	(printf@f+1)& (0+255),b
  8902  010760  C0C8  F166         	movff	_Vrms,?_printf+2	;volatile
  8903  010764  C0C9  F167         	movff	_Vrms+1,?_printf+3	;volatile
  8904  010768  C0CA  F168         	movff	_Vrms+2,?_printf+4	;volatile
  8905  01076C  EC71  F086         	call	_printf	;wreg free
  8906                           
  8907                           ;ring_buffer_LUT.c: 392: terminal_textAttributesReset();
  8908  010770  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8909                           
  8910                           ;ring_buffer_LUT.c: 394: terminal_printNewline();
  8911  010774  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8912                           
  8913                           ;ring_buffer_LUT.c: 396: }
  8914  010778  0012               	return	
  8915  01077A                     l1181:
  8916                           
  8917                           ;ring_buffer_LUT.c: 399: else if ((0 == strcmp(line, "Measure Power?"))) {
  8918  01077A  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8919  01077E  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8920  010782  0EAB               	movlw	low STR_89
  8921  010784  0101               	movlb	1	; () banked
  8922  010786  6F19               	movwf	strcmp@s2& (0+255),b
  8923  010788  0EFE               	movlw	high STR_89
  8924  01078A  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8925  01078C  ECE5  F0B3         	call	_strcmp	;wreg free
  8926  010790  0101               	movlb	1	; () banked
  8927  010792  5117               	movf	?_strcmp& (0+255),w,b
  8928  010794  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8929  010796  A4D8               	btfss	status,2,c
  8930  010798  D01C               	goto	l1183
  8931                           
  8932                           ; BSR set to: 1
  8933                           ;ring_buffer_LUT.c: 402: terminal_printNewline();
  8934  01079A  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8935                           
  8936                           ;ring_buffer_LUT.c: 404: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8937  01079E  0E00               	movlw	0
  8938  0107A0  0101               	movlb	1	; () banked
  8939  0107A2  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8940  0107A4  0E00               	movlw	0
  8941  0107A6  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8942  0107A8  0E06               	movlw	6
  8943  0107AA  ECCC  F098         	call	_terminal_textAttributes
  8944                           
  8945                           ;ring_buffer_LUT.c: 405: printf("Output power calculated as %.3f Watts from RMS values\n
      +                          \r", Avg_Power);
  8946  0107AE  0E52               	movlw	low STR_90
  8947  0107B0  0101               	movlb	1	; () banked
  8948  0107B2  6F64               	movwf	printf@f& (0+255),b
  8949  0107B4  0EF8               	movlw	high STR_90
  8950  0107B6  6F65               	movwf	(printf@f+1)& (0+255),b
  8951  0107B8  C1BB  F166         	movff	_Avg_Power,?_printf+2	;volatile
  8952  0107BC  C1BC  F167         	movff	_Avg_Power+1,?_printf+3	;volatile
  8953  0107C0  C1BD  F168         	movff	_Avg_Power+2,?_printf+4	;volatile
  8954  0107C4  EC71  F086         	call	_printf	;wreg free
  8955                           
  8956                           ;ring_buffer_LUT.c: 407: terminal_textAttributesReset();
  8957  0107C8  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  8958                           
  8959                           ;ring_buffer_LUT.c: 409: terminal_printNewline();
  8960  0107CC  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8961                           
  8962                           ;ring_buffer_LUT.c: 411: }
  8963  0107D0  0012               	return	
  8964  0107D2                     l1183:
  8965                           
  8966                           ;ring_buffer_LUT.c: 414: else if ((0 == strcmp(line, "Enable Dimming"))) {
  8967  0107D2  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  8968  0107D6  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  8969  0107DA  0EBA               	movlw	low STR_91
  8970  0107DC  0101               	movlb	1	; () banked
  8971  0107DE  6F19               	movwf	strcmp@s2& (0+255),b
  8972  0107E0  0EFE               	movlw	high STR_91
  8973  0107E2  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  8974  0107E4  ECE5  F0B3         	call	_strcmp	;wreg free
  8975  0107E8  0101               	movlb	1	; () banked
  8976  0107EA  5117               	movf	?_strcmp& (0+255),w,b
  8977  0107EC  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  8978  0107EE  A4D8               	btfss	status,2,c
  8979  0107F0  D017               	goto	l1185
  8980                           
  8981                           ; BSR set to: 1
  8982                           ;ring_buffer_LUT.c: 417: LATGbits.LATG0 = 0;
  8983  0107F2  907F               	bcf	3967,0,c	;volatile
  8984                           
  8985                           ; BSR set to: 1
  8986                           ;ring_buffer_LUT.c: 420: terminal_printNewline();
  8987  0107F4  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  8988                           
  8989                           ;ring_buffer_LUT.c: 422: terminal_textAttributes(CYAN, BLACK, NORMAL);
  8990  0107F8  0E00               	movlw	0
  8991  0107FA  0101               	movlb	1	; () banked
  8992  0107FC  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  8993  0107FE  0E00               	movlw	0
  8994  010800  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  8995  010802  0E06               	movlw	6
  8996  010804  ECCC  F098         	call	_terminal_textAttributes
  8997                           
  8998                           ;ring_buffer_LUT.c: 423: printf("TRIAC output dimming has been enabled\n\r");
  8999  010808  0E65               	movlw	low STR_92
  9000  01080A  0101               	movlb	1	; () banked
  9001  01080C  6F64               	movwf	printf@f& (0+255),b
  9002  01080E  0EFA               	movlw	high STR_92
  9003  010810  6F65               	movwf	(printf@f+1)& (0+255),b
  9004  010812  EC71  F086         	call	_printf	;wreg free
  9005                           
  9006                           ;ring_buffer_LUT.c: 425: terminal_textAttributesReset();
  9007  010816  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9008                           
  9009                           ;ring_buffer_LUT.c: 427: terminal_printNewline();
  9010  01081A  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9011                           
  9012                           ;ring_buffer_LUT.c: 429: }
  9013  01081E  0012               	return	
  9014  010820                     l1185:
  9015                           
  9016                           ;ring_buffer_LUT.c: 432: else if ((0 == strcmp(line, "Disable Dimming"))) {
  9017  010820  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9018  010824  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9019  010828  0E6D               	movlw	low STR_93
  9020  01082A  0101               	movlb	1	; () banked
  9021  01082C  6F19               	movwf	strcmp@s2& (0+255),b
  9022  01082E  0EFE               	movlw	high STR_93
  9023  010830  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9024  010832  ECE5  F0B3         	call	_strcmp	;wreg free
  9025  010836  0101               	movlb	1	; () banked
  9026  010838  5117               	movf	?_strcmp& (0+255),w,b
  9027  01083A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9028  01083C  A4D8               	btfss	status,2,c
  9029  01083E  D017               	goto	l1187
  9030                           
  9031                           ; BSR set to: 1
  9032                           ;ring_buffer_LUT.c: 435: LATGbits.LATG0 = 1;
  9033  010840  807F               	bsf	3967,0,c	;volatile
  9034                           
  9035                           ; BSR set to: 1
  9036                           ;ring_buffer_LUT.c: 438: terminal_printNewline();
  9037  010842  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9038                           
  9039                           ;ring_buffer_LUT.c: 440: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9040  010846  0E00               	movlw	0
  9041  010848  0101               	movlb	1	; () banked
  9042  01084A  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9043  01084C  0E00               	movlw	0
  9044  01084E  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9045  010850  0E06               	movlw	6
  9046  010852  ECCC  F098         	call	_terminal_textAttributes
  9047                           
  9048                           ;ring_buffer_LUT.c: 441: printf("TRIAC output dimming has been disabled\n\r");
  9049  010856  0E3C               	movlw	low STR_94
  9050  010858  0101               	movlb	1	; () banked
  9051  01085A  6F64               	movwf	printf@f& (0+255),b
  9052  01085C  0EFA               	movlw	high STR_94
  9053  01085E  6F65               	movwf	(printf@f+1)& (0+255),b
  9054  010860  EC71  F086         	call	_printf	;wreg free
  9055                           
  9056                           ;ring_buffer_LUT.c: 443: terminal_textAttributesReset();
  9057  010864  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9058                           
  9059                           ;ring_buffer_LUT.c: 445: terminal_printNewline();
  9060  010868  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9061                           
  9062                           ;ring_buffer_LUT.c: 447: }
  9063  01086C  0012               	return	
  9064  01086E                     l1187:
  9065                           
  9066                           ;ring_buffer_LUT.c: 450: else if ((0 == strcmp(line, "Enable Load"))) {
  9067  01086E  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9068  010872  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9069  010876  0E4F               	movlw	low STR_95
  9070  010878  0101               	movlb	1	; () banked
  9071  01087A  6F19               	movwf	strcmp@s2& (0+255),b
  9072  01087C  0EFF               	movlw	high STR_95
  9073  01087E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9074  010880  ECE5  F0B3         	call	_strcmp	;wreg free
  9075  010884  0101               	movlb	1	; () banked
  9076  010886  5117               	movf	?_strcmp& (0+255),w,b
  9077  010888  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9078  01088A  A4D8               	btfss	status,2,c
  9079  01088C  D019               	goto	l1189
  9080                           
  9081                           ; BSR set to: 1
  9082                           ;ring_buffer_LUT.c: 452: LATGbits.LATG0 = 1;
  9083  01088E  807F               	bsf	3967,0,c	;volatile
  9084                           
  9085                           ;ring_buffer_LUT.c: 453: LATGbits.LATG1 = 0;
  9086  010890  927F               	bcf	3967,1,c	;volatile
  9087                           
  9088                           ;ring_buffer_LUT.c: 454: load_enable = 1;
  9089  010892  825E               	bsf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9090                           
  9091                           ; BSR set to: 1
  9092                           ;ring_buffer_LUT.c: 457: terminal_printNewline();
  9093  010894  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9094                           
  9095                           ;ring_buffer_LUT.c: 459: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9096  010898  0E00               	movlw	0
  9097  01089A  0101               	movlb	1	; () banked
  9098  01089C  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9099  01089E  0E00               	movlw	0
  9100  0108A0  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9101  0108A2  0E06               	movlw	6
  9102  0108A4  ECCC  F098         	call	_terminal_textAttributes
  9103                           
  9104                           ;ring_buffer_LUT.c: 460: printf("Load has been enabled, dimming disabled\n\r");
  9105  0108A8  0EE9               	movlw	low STR_96
  9106  0108AA  0101               	movlb	1	; () banked
  9107  0108AC  6F64               	movwf	printf@f& (0+255),b
  9108  0108AE  0EF9               	movlw	high STR_96
  9109  0108B0  6F65               	movwf	(printf@f+1)& (0+255),b
  9110  0108B2  EC71  F086         	call	_printf	;wreg free
  9111                           
  9112                           ;ring_buffer_LUT.c: 462: terminal_textAttributesReset();
  9113  0108B6  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9114                           
  9115                           ;ring_buffer_LUT.c: 464: terminal_printNewline();
  9116  0108BA  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9117                           
  9118                           ;ring_buffer_LUT.c: 466: }
  9119  0108BE  0012               	return	
  9120  0108C0                     l1189:
  9121                           
  9122                           ;ring_buffer_LUT.c: 469: else if ((0 == strcmp(line, "Disable Load"))) {
  9123  0108C0  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9124  0108C4  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9125  0108C8  0E36               	movlw	low STR_97
  9126  0108CA  0101               	movlb	1	; () banked
  9127  0108CC  6F19               	movwf	strcmp@s2& (0+255),b
  9128  0108CE  0EFF               	movlw	high STR_97
  9129  0108D0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9130  0108D2  ECE5  F0B3         	call	_strcmp	;wreg free
  9131  0108D6  0101               	movlb	1	; () banked
  9132  0108D8  5117               	movf	?_strcmp& (0+255),w,b
  9133  0108DA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9134  0108DC  A4D8               	btfss	status,2,c
  9135  0108DE  D019               	goto	l1191
  9136                           
  9137                           ; BSR set to: 1
  9138                           ;ring_buffer_LUT.c: 471: LATGbits.LATG1 = 0;
  9139  0108E0  927F               	bcf	3967,1,c	;volatile
  9140                           
  9141                           ;ring_buffer_LUT.c: 472: LATGbits.LATG0 = 0;
  9142  0108E2  907F               	bcf	3967,0,c	;volatile
  9143                           
  9144                           ;ring_buffer_LUT.c: 473: load_enable = 0;
  9145  0108E4  925E               	bcf	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
  9146                           
  9147                           ; BSR set to: 1
  9148                           ;ring_buffer_LUT.c: 476: terminal_printNewline();
  9149  0108E6  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9150                           
  9151                           ;ring_buffer_LUT.c: 478: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9152  0108EA  0E00               	movlw	0
  9153  0108EC  0101               	movlb	1	; () banked
  9154  0108EE  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9155  0108F0  0E00               	movlw	0
  9156  0108F2  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9157  0108F4  0E06               	movlw	6
  9158  0108F6  ECCC  F098         	call	_terminal_textAttributes
  9159                           
  9160                           ;ring_buffer_LUT.c: 479: printf("Load has been disabled\n\r");
  9161  0108FA  0EF4               	movlw	low STR_98
  9162  0108FC  0101               	movlb	1	; () banked
  9163  0108FE  6F64               	movwf	printf@f& (0+255),b
  9164  010900  0EFC               	movlw	high STR_98
  9165  010902  6F65               	movwf	(printf@f+1)& (0+255),b
  9166  010904  EC71  F086         	call	_printf	;wreg free
  9167                           
  9168                           ;ring_buffer_LUT.c: 481: terminal_textAttributesReset();
  9169  010908  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9170                           
  9171                           ;ring_buffer_LUT.c: 483: terminal_printNewline();
  9172  01090C  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9173                           
  9174                           ;ring_buffer_LUT.c: 485: }
  9175  010910  0012               	return	
  9176  010912                     l1191:
  9177                           
  9178                           ;ring_buffer_LUT.c: 488: else if ((strstr(line, "Set Dimming Percentage: "))) {
  9179  010912  C1A2  F126         	movff	ringBufferLUT@line,strstr@s1
  9180  010916  C1A3  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  9181  01091A  0E0D               	movlw	low STR_99
  9182  01091C  0101               	movlb	1	; () banked
  9183  01091E  6F28               	movwf	strstr@s2& (0+255),b
  9184  010920  0EFD               	movlw	high STR_99
  9185  010922  6F29               	movwf	(strstr@s2+1)& (0+255),b
  9186  010924  ECAF  F0AE         	call	_strstr	;wreg free
  9187  010928  0101               	movlb	1	; () banked
  9188  01092A  5126               	movf	?_strstr& (0+255),w,b
  9189  01092C  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  9190  01092E  B4D8               	btfsc	status,2,c
  9191  010930  D119               	goto	l1193
  9192                           
  9193                           ; BSR set to: 1
  9194                           ;ring_buffer_LUT.c: 491: char arg_buff[3];
  9195                           ;ring_buffer_LUT.c: 494: for (int index = 0; index < 3; index++) {
  9196  010932  0E00               	movlw	0
  9197  010934  0102               	movlb	2	; () banked
  9198  010936  6F9F               	movwf	(ringBufferLUT@index+1)& (0+255),b
  9199  010938  0E00               	movlw	0
  9200  01093A  6F9E               	movwf	ringBufferLUT@index& (0+255),b
  9201  01093C                     l12115:
  9202                           
  9203                           ; BSR set to: 2
  9204  01093C  BF9F               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  9205  01093E  D006               	goto	l1194
  9206  010940  519F               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  9207  010942  E11F               	bnz	l12125
  9208  010944  0E03               	movlw	3
  9209  010946  5D9E               	subwf	ringBufferLUT@index& (0+255),w,b
  9210  010948  B0D8               	btfsc	status,0,c
  9211  01094A  D01B               	goto	u14870
  9212  01094C                     l1194:
  9213                           
  9214                           ; BSR set to: 2
  9215                           ;ring_buffer_LUT.c: 496: arg_buff[index] = line[index + 24];
  9216                           
  9217                           ; BSR set to: 2
  9218  01094C  0E18               	movlw	24
  9219  01094E  259E               	addwf	ringBufferLUT@index& (0+255),w,b
  9220  010950  0101               	movlb	1	; () banked
  9221  010952  6FA4               	movwf	??_ringBufferLUT& (0+255),b
  9222  010954  0E00               	movlw	0
  9223  010956  0102               	movlb	2	; () banked
  9224  010958  219F               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9225  01095A  0101               	movlb	1	; () banked
  9226  01095C  6FA5               	movwf	(??_ringBufferLUT+1)& (0+255),b
  9227  01095E  51A4               	movf	??_ringBufferLUT& (0+255),w,b
  9228  010960  25A2               	addwf	ringBufferLUT@line& (0+255),w,b
  9229  010962  6ED9               	movwf	fsr2l,c
  9230  010964  51A5               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  9231  010966  21A3               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  9232  010968  6EDA               	movwf	fsr2h,c
  9233  01096A  0E9B               	movlw	low ringBufferLUT@arg_buff
  9234  01096C  0102               	movlb	2	; () banked
  9235  01096E  259E               	addwf	ringBufferLUT@index& (0+255),w,b
  9236  010970  6EE1               	movwf	fsr1l,c
  9237  010972  0E02               	movlw	high ringBufferLUT@arg_buff
  9238  010974  219F               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  9239  010976  6EE2               	movwf	fsr1h,c
  9240  010978  CFDF FFE7          	movff	indf2,indf1
  9241                           
  9242                           ; BSR set to: 2
  9243  01097C  4B9E               	infsnz	ringBufferLUT@index& (0+255),f,b
  9244  01097E  2B9F               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  9245  010980  D7DD               	goto	l12115
  9246  010982                     u14870:
  9247  010982                     l12125:
  9248                           
  9249                           ; BSR set to: 2
  9250                           ;ring_buffer_LUT.c: 498: }
  9251                           ;ring_buffer_LUT.c: 500: int percentage = atoi(arg_buff);
  9252  010982  0E9B               	movlw	low ringBufferLUT@arg_buff
  9253  010984  0101               	movlb	1	; () banked
  9254  010986  6F2B               	movwf	atoi@s& (0+255),b
  9255  010988  0E02               	movlw	high ringBufferLUT@arg_buff
  9256  01098A  6F2C               	movwf	(atoi@s+1)& (0+255),b
  9257  01098C  ECB0  F0AA         	call	_atoi	;wreg free
  9258  010990  C12B  F2A0         	movff	?_atoi,ringBufferLUT@percentage
  9259  010994  C12C  F2A1         	movff	?_atoi+1,ringBufferLUT@percentage+1
  9260                           
  9261                           ;ring_buffer_LUT.c: 503: if ( (percentage >= 100) ||
  9262                           ;ring_buffer_LUT.c: 504: (percentage <= 0)) {
  9263  010998  0102               	movlb	2	; () banked
  9264  01099A  BFA1               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9265  01099C  D006               	goto	u14880
  9266  01099E  51A1               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9267  0109A0  E10B               	bnz	l12131
  9268  0109A2  0E64               	movlw	100
  9269  0109A4  5DA0               	subwf	ringBufferLUT@percentage& (0+255),w,b
  9270  0109A6  B0D8               	btfsc	status,0,c
  9271  0109A8  D007               	goto	u14890
  9272  0109AA                     u14880:
  9273                           
  9274                           ; BSR set to: 2
  9275  0109AA  BFA1               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  9276  0109AC  D005               	goto	u14890
  9277  0109AE  51A1               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  9278  0109B0  E12F               	bnz	l12133
  9279  0109B2  05A0               	decf	ringBufferLUT@percentage& (0+255),w,b
  9280  0109B4  B0D8               	btfsc	status,0,c
  9281  0109B6  D02C               	goto	l1196
  9282  0109B8                     u14890:
  9283  0109B8                     l12131:
  9284                           
  9285                           ; BSR set to: 2
  9286                           ;ring_buffer_LUT.c: 507: terminal_printNewline();
  9287  0109B8  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9288                           
  9289                           ;ring_buffer_LUT.c: 509: terminal_textAttributes(RED, BLACK, NORMAL);
  9290  0109BC  0E00               	movlw	0
  9291  0109BE  0101               	movlb	1	; () banked
  9292  0109C0  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9293  0109C2  0E00               	movlw	0
  9294  0109C4  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9295  0109C6  0E01               	movlw	1
  9296  0109C8  ECCC  F098         	call	_terminal_textAttributes
  9297                           
  9298                           ;ring_buffer_LUT.c: 510: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  9299  0109CC  0EAA               	movlw	low STR_100
  9300  0109CE  0101               	movlb	1	; () banked
  9301  0109D0  6F64               	movwf	printf@f& (0+255),b
  9302  0109D2  0EF6               	movlw	high STR_100
  9303  0109D4  6F65               	movwf	(printf@f+1)& (0+255),b
  9304  0109D6  EC71  F086         	call	_printf	;wreg free
  9305                           
  9306                           ;ring_buffer_LUT.c: 512: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9307  0109DA  0E00               	movlw	0
  9308  0109DC  0101               	movlb	1	; () banked
  9309  0109DE  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9310  0109E0  0E00               	movlw	0
  9311  0109E2  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9312  0109E4  0E03               	movlw	3
  9313  0109E6  ECCC  F098         	call	_terminal_textAttributes
  9314                           
  9315                           ;ring_buffer_LUT.c: 513: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  9316  0109EA  0E44               	movlw	low STR_101
  9317  0109EC  0101               	movlb	1	; () banked
  9318  0109EE  6F64               	movwf	printf@f& (0+255),b
  9319  0109F0  0EF6               	movlw	high STR_101
  9320  0109F2  6F65               	movwf	(printf@f+1)& (0+255),b
  9321  0109F4  EC71  F086         	call	_printf	;wreg free
  9322                           
  9323                           ;ring_buffer_LUT.c: 514: printf("Enter 'Help' for list of available commands\n\r");
  9324  0109F8  0EBB               	movlw	low STR_102
  9325  0109FA  0101               	movlb	1	; () banked
  9326  0109FC  6F64               	movwf	printf@f& (0+255),b
  9327  0109FE  0EF9               	movlw	high STR_102
  9328  010A00  6F65               	movwf	(printf@f+1)& (0+255),b
  9329  010A02  EC71  F086         	call	_printf	;wreg free
  9330                           
  9331                           ;ring_buffer_LUT.c: 516: terminal_textAttributesReset();
  9332  010A06  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9333                           
  9334                           ;ring_buffer_LUT.c: 518: terminal_printNewline();
  9335  010A0A  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9336                           
  9337                           ;ring_buffer_LUT.c: 520: }
  9338  010A0E  0012               	return	
  9339  010A10                     l1196:
  9340  010A10                     l12133:
  9341                           
  9342                           ;ring_buffer_LUT.c: 523: else {
  9343                           ;ring_buffer_LUT.c: 526: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  9344  010A10  0E00               	movlw	0
  9345  010A12  0101               	movlb	1	; () banked
  9346  010A14  6F3A               	movwf	___ftdiv@f2& (0+255),b
  9347  010A16  0EC8               	movlw	200
  9348  010A18  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  9349  010A1A  0E42               	movlw	66
  9350  010A1C  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  9351  010A1E  0E00               	movlw	0
  9352  010A20  6F2E               	movwf	___ftadd@f2& (0+255),b
  9353  010A22  0EC8               	movlw	200
  9354  010A24  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  9355  010A26  0E42               	movlw	66
  9356  010A28  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  9357  010A2A  C2A0  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  9358  010A2E  C2A1  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  9359  010A32  ECCC  F0B5         	call	___awtoft	;wreg free
  9360  010A36  C11F  F123         	movff	?___awtoft,___ftneg@f1
  9361  010A3A  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  9362  010A3E  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  9363  010A42  EC02  F0B7         	call	___ftneg	;wreg free
  9364  010A46  C123  F12B         	movff	?___ftneg,___ftadd@f1
  9365  010A4A  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  9366  010A4E  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  9367  010A52  EC2E  F0A1         	call	___ftadd	;wreg free
  9368  010A56  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  9369  010A5A  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  9370  010A5E  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  9371  010A62  EC7B  F0A8         	call	___ftdiv	;wreg free
  9372  010A66  C137  F146         	movff	?___ftdiv,___ftmul@f1
  9373  010A6A  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  9374  010A6E  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  9375  010A72  0E10               	movlw	16
  9376  010A74  0101               	movlb	1	; () banked
  9377  010A76  6F49               	movwf	___ftmul@f2& (0+255),b
  9378  010A78  0E49               	movlw	73
  9379  010A7A  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  9380  010A7C  0E40               	movlw	64
  9381  010A7E  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  9382  010A80  EC0C  F0A7         	call	___ftmul	;wreg free
  9383  010A84  C146  F0FC         	movff	?___ftmul,_TRIAC_Firing_Angle	;volatile
  9384  010A88  C147  F0FD         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1	;volatile
  9385  010A8C  C148  F0FE         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2	;volatile
  9386                           
  9387                           ;ring_buffer_LUT.c: 527: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  9388  010A90  C0FC  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1	;volatile
  9389  010A94  C0FD  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1	;volatile
  9390  010A98  C0FE  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2	;volatile
  9391  010A9C  0E2F               	movlw	47
  9392  010A9E  0101               	movlb	1	; () banked
  9393  010AA0  6F49               	movwf	___ftmul@f2& (0+255),b
  9394  010AA2  0E65               	movlw	101
  9395  010AA4  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  9396  010AA6  0E42               	movlw	66
  9397  010AA8  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  9398  010AAA  EC0C  F0A7         	call	___ftmul	;wreg free
  9399  010AAE  C146  F298         	movff	?___ftmul,ringBufferLUT@angle_degrees
  9400  010AB2  C147  F299         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  9401  010AB6  C148  F29A         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  9402                           
  9403                           ;ring_buffer_LUT.c: 528: dimming_period = (100 - percentage) * (0xFFFF / 100);
  9404  010ABA  C2A0  F1A4         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  9405  010ABE  C2A1  F1A5         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  9406  010AC2  0101               	movlb	1	; () banked
  9407  010AC4  1FA4               	comf	??_ringBufferLUT& (0+255),f,b
  9408  010AC6  1FA5               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  9409  010AC8  4BA4               	infsnz	??_ringBufferLUT& (0+255),f,b
  9410  010ACA  2BA5               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  9411  010ACC  0E64               	movlw	100
  9412  010ACE  25A4               	addwf	??_ringBufferLUT& (0+255),w,b
  9413  010AD0  6F25               	movwf	___wmul@multiplier& (0+255),b
  9414  010AD2  0E00               	movlw	0
  9415  010AD4  21A5               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  9416  010AD6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  9417  010AD8  0E02               	movlw	2
  9418  010ADA  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9419  010ADC  0E8F               	movlw	143
  9420  010ADE  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9421  010AE0  ECB3  F0B6         	call	___wmul	;wreg free
  9422  010AE4  C125  F0FA         	movff	?___wmul,_dimming_period	;volatile
  9423  010AE8  C126  F0FB         	movff	?___wmul+1,_dimming_period+1	;volatile
  9424                           
  9425                           ;ring_buffer_LUT.c: 531: terminal_printNewline();
  9426  010AEC  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9427                           
  9428                           ;ring_buffer_LUT.c: 533: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9429  010AF0  0E00               	movlw	0
  9430  010AF2  0101               	movlb	1	; () banked
  9431  010AF4  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9432  010AF6  0E00               	movlw	0
  9433  010AF8  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9434  010AFA  0E06               	movlw	6
  9435  010AFC  ECCC  F098         	call	_terminal_textAttributes
  9436                           
  9437                           ;ring_buffer_LUT.c: 534: printf("Dimming has been set to %d percent\n\r", percentage);
  9438  010B00  0EFE               	movlw	low STR_103
  9439  010B02  0101               	movlb	1	; () banked
  9440  010B04  6F64               	movwf	printf@f& (0+255),b
  9441  010B06  0EFA               	movlw	high STR_103
  9442  010B08  6F65               	movwf	(printf@f+1)& (0+255),b
  9443  010B0A  C2A0  F166         	movff	ringBufferLUT@percentage,?_printf+2
  9444  010B0E  C2A1  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  9445  010B12  EC71  F086         	call	_printf	;wreg free
  9446                           
  9447                           ;ring_buffer_LUT.c: 535: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  9448  010B16  0ED9               	movlw	low STR_104
  9449  010B18  0101               	movlb	1	; () banked
  9450  010B1A  6F64               	movwf	printf@f& (0+255),b
  9451  010B1C  0EF7               	movlw	high STR_104
  9452  010B1E  6F65               	movwf	(printf@f+1)& (0+255),b
  9453  010B20  C0FC  F166         	movff	_TRIAC_Firing_Angle,?_printf+2	;volatile
  9454  010B24  C0FD  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3	;volatile
  9455  010B28  C0FE  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4	;volatile
  9456  010B2C  C298  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  9457  010B30  C299  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  9458  010B34  C29A  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  9459  010B38  EC71  F086         	call	_printf	;wreg free
  9460                           
  9461                           ;ring_buffer_LUT.c: 536: printf("This corresponds to a 16 bit timer pre-load value of 0x
      +                          %X (%u LSBs) \n\r", dimming_period, dimming_period);
  9462  010B3C  0E52               	movlw	low STR_105
  9463  010B3E  0101               	movlb	1	; () banked
  9464  010B40  6F64               	movwf	printf@f& (0+255),b
  9465  010B42  0EF7               	movlw	high STR_105
  9466  010B44  6F65               	movwf	(printf@f+1)& (0+255),b
  9467  010B46  C0FA  F166         	movff	_dimming_period,?_printf+2	;volatile
  9468  010B4A  C0FB  F167         	movff	_dimming_period+1,?_printf+3	;volatile
  9469  010B4E  C0FA  F168         	movff	_dimming_period,?_printf+4	;volatile
  9470  010B52  C0FB  F169         	movff	_dimming_period+1,?_printf+5	;volatile
  9471  010B56  EC71  F086         	call	_printf	;wreg free
  9472                           
  9473                           ;ring_buffer_LUT.c: 538: terminal_textAttributesReset();
  9474  010B5A  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9475                           
  9476                           ;ring_buffer_LUT.c: 540: terminal_printNewline();
  9477  010B5E  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9478                           
  9479                           ;ring_buffer_LUT.c: 542: }
  9480                           ;ring_buffer_LUT.c: 544: }
  9481  010B62  0012               	return	
  9482  010B64                     l1193:
  9483                           
  9484                           ;ring_buffer_LUT.c: 547: else if((0 == strcmp(line, "Device On Time?"))) {
  9485  010B64  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9486  010B68  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9487  010B6C  0E4D               	movlw	low STR_106
  9488  010B6E  0101               	movlb	1	; () banked
  9489  010B70  6F19               	movwf	strcmp@s2& (0+255),b
  9490  010B72  0EFE               	movlw	high STR_106
  9491  010B74  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9492  010B76  ECE5  F0B3         	call	_strcmp	;wreg free
  9493  010B7A  0101               	movlb	1	; () banked
  9494  010B7C  5117               	movf	?_strcmp& (0+255),w,b
  9495  010B7E  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9496  010B80  A4D8               	btfss	status,2,c
  9497  010B82  D01E               	goto	l1201
  9498                           
  9499                           ; BSR set to: 1
  9500                           ;ring_buffer_LUT.c: 550: terminal_printNewline();
  9501  010B84  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9502                           
  9503                           ;ring_buffer_LUT.c: 552: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9504  010B88  0E00               	movlw	0
  9505  010B8A  0101               	movlb	1	; () banked
  9506  010B8C  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9507  010B8E  0E00               	movlw	0
  9508  010B90  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9509  010B92  0E06               	movlw	6
  9510  010B94  ECCC  F098         	call	_terminal_textAttributes
  9511                           
  9512                           ;ring_buffer_LUT.c: 553: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", dev_on_time);
  9513  010B98  0E18               	movlw	low STR_107
  9514  010B9A  0101               	movlb	1	; () banked
  9515  010B9C  6F64               	movwf	printf@f& (0+255),b
  9516  010B9E  0EF8               	movlw	high STR_107
  9517  010BA0  6F65               	movwf	(printf@f+1)& (0+255),b
  9518  010BA2  C1B7  F166         	movff	_dev_on_time,?_printf+2	;volatile
  9519  010BA6  C1B8  F167         	movff	_dev_on_time+1,?_printf+3	;volatile
  9520  010BAA  C1B9  F168         	movff	_dev_on_time+2,?_printf+4	;volatile
  9521  010BAE  C1BA  F169         	movff	_dev_on_time+3,?_printf+5	;volatile
  9522  010BB2  EC71  F086         	call	_printf	;wreg free
  9523                           
  9524                           ;ring_buffer_LUT.c: 555: terminal_textAttributesReset();
  9525  010BB6  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9526                           
  9527                           ;ring_buffer_LUT.c: 557: terminal_printNewline();
  9528  010BBA  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9529                           
  9530                           ;ring_buffer_LUT.c: 559: }
  9531  010BBE  0012               	return	
  9532  010BC0                     l1201:
  9533                           
  9534                           ;ring_buffer_LUT.c: 562: else if((0 == strcmp(line, "Load On Time?"))) {
  9535  010BC0  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9536  010BC4  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9537  010BC8  0EE5               	movlw	low STR_108
  9538  010BCA  0101               	movlb	1	; () banked
  9539  010BCC  6F19               	movwf	strcmp@s2& (0+255),b
  9540  010BCE  0EFE               	movlw	high STR_108
  9541  010BD0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9542  010BD2  ECE5  F0B3         	call	_strcmp	;wreg free
  9543  010BD6  0101               	movlb	1	; () banked
  9544  010BD8  5117               	movf	?_strcmp& (0+255),w,b
  9545  010BDA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9546  010BDC  A4D8               	btfss	status,2,c
  9547  010BDE  D01E               	goto	l1203
  9548                           
  9549                           ; BSR set to: 1
  9550                           ;ring_buffer_LUT.c: 565: terminal_printNewline();
  9551  010BE0  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9552                           
  9553                           ;ring_buffer_LUT.c: 567: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9554  010BE4  0E00               	movlw	0
  9555  010BE6  0101               	movlb	1	; () banked
  9556  010BE8  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9557  010BEA  0E00               	movlw	0
  9558  010BEC  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9559  010BEE  0E06               	movlw	6
  9560  010BF0  ECCC  F098         	call	_terminal_textAttributes
  9561                           
  9562                           ;ring_buffer_LUT.c: 568: printf("Load on time since last device reset is %d seconds\n\r"
      +                          , load_on_time);
  9563  010BF4  0EC2               	movlw	low STR_109
  9564  010BF6  0101               	movlb	1	; () banked
  9565  010BF8  6F64               	movwf	printf@f& (0+255),b
  9566  010BFA  0EF8               	movlw	high STR_109
  9567  010BFC  6F65               	movwf	(printf@f+1)& (0+255),b
  9568  010BFE  C1B3  F166         	movff	_load_on_time,?_printf+2	;volatile
  9569  010C02  C1B4  F167         	movff	_load_on_time+1,?_printf+3	;volatile
  9570  010C06  C1B5  F168         	movff	_load_on_time+2,?_printf+4	;volatile
  9571  010C0A  C1B6  F169         	movff	_load_on_time+3,?_printf+5	;volatile
  9572  010C0E  EC71  F086         	call	_printf	;wreg free
  9573                           
  9574                           ;ring_buffer_LUT.c: 570: terminal_textAttributesReset();
  9575  010C12  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9576                           
  9577                           ;ring_buffer_LUT.c: 572: terminal_printNewline();
  9578  010C16  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9579                           
  9580                           ;ring_buffer_LUT.c: 574: }
  9581  010C1A  0012               	return	
  9582  010C1C                     l1203:
  9583                           
  9584                           ;ring_buffer_LUT.c: 579: else if((0 == strcmp(line, "Help"))) {
  9585  010C1C  C1A2  F117         	movff	ringBufferLUT@line,strcmp@s1
  9586  010C20  C1A3  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  9587  010C24  0EAA               	movlw	low STR_110
  9588  010C26  0101               	movlb	1	; () banked
  9589  010C28  6F19               	movwf	strcmp@s2& (0+255),b
  9590  010C2A  0EFF               	movlw	high STR_110
  9591  010C2C  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  9592  010C2E  ECE5  F0B3         	call	_strcmp	;wreg free
  9593  010C32  0101               	movlb	1	; () banked
  9594  010C34  5117               	movf	?_strcmp& (0+255),w,b
  9595  010C36  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  9596  010C38  A4D8               	btfss	status,2,c
  9597  010C3A  0012               	return	
  9598                           
  9599                           ; BSR set to: 1
  9600                           ;ring_buffer_LUT.c: 582: terminal_printNewline();
  9601  010C3C  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9602                           
  9603                           ;ring_buffer_LUT.c: 584: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  9604  010C40  0E00               	movlw	0
  9605  010C42  0101               	movlb	1	; () banked
  9606  010C44  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9607  010C46  0E00               	movlw	0
  9608  010C48  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9609  010C4A  0E03               	movlw	3
  9610  010C4C  ECCC  F098         	call	_terminal_textAttributes
  9611                           
  9612                           ;ring_buffer_LUT.c: 585: printf("List of supported commands:\n\r\n\r"
  9613                           ;ring_buffer_LUT.c: 587: "Device Commands:\n\r"
  9614                           ;ring_buffer_LUT.c: 588: "   Reset: Clears the terminal and resets the micro\n\r"
  9615                           ;ring_buffer_LUT.c: 589: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  9616                           ;ring_buffer_LUT.c: 590: "   Cause of Reset?: Returns the cause of the most recent devic
      +                          e reset\n\r"
  9617                           ;ring_buffer_LUT.c: 591: "   *IDN?: Returns device identification string\n\r"
  9618                           ;ring_buffer_LUT.c: 592: "   Device On Time?: Returns device on time since last device r
      +                          eset\n\r"
  9619  010C50  0E31               	movlw	low STR_111
  9620  010C52  0101               	movlb	1	; () banked
  9621  010C54  6F64               	movwf	printf@f& (0+255),b
  9622  010C56  0EED               	movlw	high STR_111
  9623  010C58  6F65               	movwf	(printf@f+1)& (0+255),b
  9624  010C5A  EC71  F086         	call	_printf	;wreg free
  9625                           
  9626                           ;ring_buffer_LUT.c: 623: terminal_printNewline();
  9627  010C5E  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9628                           
  9629                           ;ring_buffer_LUT.c: 624: printf("Help messages appear in yellow\n\r");
  9630  010C62  0EF0               	movlw	low STR_112
  9631  010C64  0101               	movlb	1	; () banked
  9632  010C66  6F64               	movwf	printf@f& (0+255),b
  9633  010C68  0EFB               	movlw	high STR_112
  9634  010C6A  6F65               	movwf	(printf@f+1)& (0+255),b
  9635  010C6C  EC71  F086         	call	_printf	;wreg free
  9636                           
  9637                           ;ring_buffer_LUT.c: 626: terminal_textAttributes(GREEN, BLACK, NORMAL);
  9638  010C70  0E00               	movlw	0
  9639  010C72  0101               	movlb	1	; () banked
  9640  010C74  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9641  010C76  0E00               	movlw	0
  9642  010C78  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9643  010C7A  0E02               	movlw	2
  9644  010C7C  ECCC  F098         	call	_terminal_textAttributes
  9645                           
  9646                           ;ring_buffer_LUT.c: 627: printf("System parameters appears in green\n\r");
  9647  010C80  0ED9               	movlw	low STR_113
  9648  010C82  0101               	movlb	1	; () banked
  9649  010C84  6F64               	movwf	printf@f& (0+255),b
  9650  010C86  0EFA               	movlw	high STR_113
  9651  010C88  6F65               	movwf	(printf@f+1)& (0+255),b
  9652  010C8A  EC71  F086         	call	_printf	;wreg free
  9653                           
  9654                           ;ring_buffer_LUT.c: 628: terminal_textAttributes(CYAN, BLACK, NORMAL);
  9655  010C8E  0E00               	movlw	0
  9656  010C90  0101               	movlb	1	; () banked
  9657  010C92  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9658  010C94  0E00               	movlw	0
  9659  010C96  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9660  010C98  0E06               	movlw	6
  9661  010C9A  ECCC  F098         	call	_terminal_textAttributes
  9662                           
  9663                           ;ring_buffer_LUT.c: 629: printf("Measurement responses appear in cyan\n\r");
  9664  010C9E  0E8D               	movlw	low STR_114
  9665  010CA0  0101               	movlb	1	; () banked
  9666  010CA2  6F64               	movwf	printf@f& (0+255),b
  9667  010CA4  0EFA               	movlw	high STR_114
  9668  010CA6  6F65               	movwf	(printf@f+1)& (0+255),b
  9669  010CA8  EC71  F086         	call	_printf	;wreg free
  9670                           
  9671                           ;ring_buffer_LUT.c: 630: terminal_textAttributes(RED, BLACK, NORMAL);
  9672  010CAC  0E00               	movlw	0
  9673  010CAE  0101               	movlb	1	; () banked
  9674  010CB0  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9675  010CB2  0E00               	movlw	0
  9676  010CB4  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9677  010CB6  0E01               	movlw	1
  9678  010CB8  ECCC  F098         	call	_terminal_textAttributes
  9679                           
  9680                           ;ring_buffer_LUT.c: 631: printf("Errors appear in red\n\r");
  9681  010CBC  0E3E               	movlw	low STR_115
  9682  010CBE  0101               	movlb	1	; () banked
  9683  010CC0  6F64               	movwf	printf@f& (0+255),b
  9684  010CC2  0EFD               	movlw	high STR_115
  9685  010CC4  6F65               	movwf	(printf@f+1)& (0+255),b
  9686  010CC6  EC71  F086         	call	_printf	;wreg free
  9687                           
  9688                           ;ring_buffer_LUT.c: 632: terminal_textAttributesReset();
  9689  010CCA  ECDC  F0B7         	call	_terminal_textAttributesReset	;wreg free
  9690                           
  9691                           ;ring_buffer_LUT.c: 633: printf("User input appears in white\n\r");
  9692  010CCE  0E4F               	movlw	low STR_116
  9693  010CD0  0101               	movlb	1	; () banked
  9694  010CD2  6F64               	movwf	printf@f& (0+255),b
  9695  010CD4  0EFC               	movlw	high STR_116
  9696  010CD6  6F65               	movwf	(printf@f+1)& (0+255),b
  9697  010CD8  EC71  F086         	call	_printf	;wreg free
  9698                           
  9699                           ;ring_buffer_LUT.c: 636: terminal_printNewline();
  9700  010CDC  ECF6  F0B7         	call	_terminal_printNewline	;wreg free
  9701  010CE0  0012               	return	
  9702  010CE2                     __end_of_ringBufferLUT:
  9703                           	opt stack 0
  9704                           tblptru	equ	0xFF8
  9705                           tblptrh	equ	0xFF7
  9706                           tblptrl	equ	0xFF6
  9707                           tablat	equ	0xFF5
  9708                           intcon	equ	0xFF2
  9709                           postinc0	equ	0xFEE
  9710                           wreg	equ	0xFE8
  9711                           indf1	equ	0xFE7
  9712                           postdec1	equ	0xFE5
  9713                           fsr1h	equ	0xFE2
  9714                           fsr1l	equ	0xFE1
  9715                           indf2	equ	0xFDF
  9716                           postinc2	equ	0xFDE
  9717                           fsr2h	equ	0xFDA
  9718                           fsr2l	equ	0xFD9
  9719                           status	equ	0xFD8
  9720                           
  9721 ;; *************** function _terminal_textAttributesReset *****************
  9722 ;; Defined at:
  9723 ;;		line 223 in file "ring_buffer_interface.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;		None
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;		None
  9728 ;; Return value:  Size  Location     Type
  9729 ;;                  1    wreg      void 
  9730 ;; Registers used:
  9731 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9732 ;; Tracked objects:
  9733 ;;		On entry : 0/0
  9734 ;;		On exit  : 0/0
  9735 ;;		Unchanged: 0/0
  9736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;Total ram usage:        0 bytes
  9742 ;; Hardware stack levels used:    1
  9743 ;; Hardware stack levels required when called:   19
  9744 ;; This function calls:
  9745 ;;		_terminal_textAttributes
  9746 ;; This function is called by:
  9747 ;;		_main
  9748 ;;		_ringBufferLUT
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           	psect	text4
  9753  016FB8                     __ptext4:
  9754                           	opt stack 0
  9755  016FB8                     _terminal_textAttributesReset:
  9756                           	opt stack 11
  9757                           
  9758                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  9759                           
  9760                           ;incstack = 0
  9761  016FB8  0E00               	movlw	0
  9762  016FBA  0101               	movlb	1	; () banked
  9763  016FBC  6F90               	movwf	terminal_textAttributes@background_color& (0+255),b
  9764  016FBE  0E00               	movlw	0
  9765  016FC0  6F91               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  9766  016FC2  0E07               	movlw	7
  9767  016FC4  ECCC  F098         	call	_terminal_textAttributes
  9768  016FC8  0012               	return		;funcret
  9769  016FCA                     __end_of_terminal_textAttributesReset:
  9770                           	opt stack 0
  9771                           tblptru	equ	0xFF8
  9772                           tblptrh	equ	0xFF7
  9773                           tblptrl	equ	0xFF6
  9774                           tablat	equ	0xFF5
  9775                           intcon	equ	0xFF2
  9776                           postinc0	equ	0xFEE
  9777                           wreg	equ	0xFE8
  9778                           indf1	equ	0xFE7
  9779                           postdec1	equ	0xFE5
  9780                           fsr1h	equ	0xFE2
  9781                           fsr1l	equ	0xFE1
  9782                           indf2	equ	0xFDF
  9783                           postinc2	equ	0xFDE
  9784                           fsr2h	equ	0xFDA
  9785                           fsr2l	equ	0xFD9
  9786                           status	equ	0xFD8
  9787                           
  9788 ;; *************** function _terminal_textAttributes *****************
  9789 ;; Defined at:
  9790 ;;		line 115 in file "ring_buffer_interface.c"
  9791 ;; Parameters:    Size  Location     Type
  9792 ;;  foreground_c    1    wreg     enum E17859
  9793 ;;  background_c    1  144[BANK1 ] enum E17859
  9794 ;;  input_attrib    1  145[BANK1 ] enum E17851
  9795 ;; Auto vars:     Size  Location     Type
  9796 ;;  foreground_c    1  146[BANK1 ] enum E17859
  9797 ;;  output_buff    15  147[BANK1 ] unsigned char [15]
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      void 
  9800 ;; Registers used:
  9801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  9807 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9810 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9811 ;;Total ram usage:       18 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; Hardware stack levels required when called:   18
  9814 ;; This function calls:
  9815 ;;		_printf
  9816 ;;		_strcat
  9817 ;;		_strncpy
  9818 ;; This function is called by:
  9819 ;;		_terminal_textAttributesReset
  9820 ;;		_ringBufferLUT
  9821 ;; This function uses a non-reentrant model
  9822 ;;
  9823                           
  9824                           	psect	text5
  9825  013198                     __ptext5:
  9826                           	opt stack 0
  9827  013198                     _terminal_textAttributes:
  9828                           	opt stack 11
  9829                           
  9830                           ;incstack = 0
  9831                           ;terminal_textAttributes@foreground_color stored from wreg
  9832  013198  0101               	movlb	1	; () banked
  9833  01319A  6F92               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  9834                           
  9835                           ;ring_buffer_interface.c: 119: char output_buff[15];
  9836                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  9837  01319C  0E93               	movlw	low terminal_textAttributes@output_buff
  9838  01319E  0101               	movlb	1	; () banked
  9839  0131A0  6F17               	movwf	strncpy@to& (0+255),b
  9840  0131A2  0E01               	movlw	high terminal_textAttributes@output_buff
  9841  0131A4  6F18               	movwf	(strncpy@to+1)& (0+255),b
  9842  0131A6  0EF5               	movlw	low STR_11
  9843  0131A8  6F19               	movwf	strncpy@from& (0+255),b
  9844  0131AA  0EFF               	movlw	high STR_11
  9845  0131AC  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  9846  0131AE  0E00               	movlw	0
  9847  0131B0  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  9848  0131B2  0E0F               	movlw	15
  9849  0131B4  6F1B               	movwf	strncpy@size& (0+255),b
  9850  0131B6  ECDB  F0B1         	call	_strncpy	;wreg free
  9851                           
  9852                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  9853  0131BA  D054               	goto	l1013
  9854  0131BC                     
  9855                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  9856  0131BC  0E93               	movlw	low terminal_textAttributes@output_buff
  9857  0131BE  0101               	movlb	1	; () banked
  9858  0131C0  6F17               	movwf	strcat@to& (0+255),b
  9859  0131C2  0E01               	movlw	high terminal_textAttributes@output_buff
  9860  0131C4  6F18               	movwf	(strcat@to+1)& (0+255),b
  9861  0131C6  0EC9               	movlw	low (STR_20+1)
  9862  0131C8  6F19               	movwf	strcat@from& (0+255),b
  9863  0131CA  0EFF               	movlw	high (STR_20+1)
  9864  0131CC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9865  0131CE  ECD8  F0B2         	call	_strcat	;wreg free
  9866                           
  9867                           ;ring_buffer_interface.c: 127: break;
  9868  0131D2  D05D               	goto	l1015
  9869  0131D4                     
  9870                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  9871  0131D4  0E93               	movlw	low terminal_textAttributes@output_buff
  9872  0131D6  0101               	movlb	1	; () banked
  9873  0131D8  6F17               	movwf	strcat@to& (0+255),b
  9874  0131DA  0E01               	movlw	high terminal_textAttributes@output_buff
  9875  0131DC  6F18               	movwf	(strcat@to+1)& (0+255),b
  9876  0131DE  0E7F               	movlw	low (STR_67+20)
  9877  0131E0  6F19               	movwf	strcat@from& (0+255),b
  9878  0131E2  0EFD               	movlw	high (STR_67+20)
  9879  0131E4  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9880  0131E6  ECD8  F0B2         	call	_strcat	;wreg free
  9881                           
  9882                           ;ring_buffer_interface.c: 130: break;
  9883  0131EA  D051               	goto	l1015
  9884  0131EC                     
  9885                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  9886  0131EC  0E93               	movlw	low terminal_textAttributes@output_buff
  9887  0131EE  0101               	movlb	1	; () banked
  9888  0131F0  6F17               	movwf	strcat@to& (0+255),b
  9889  0131F2  0E01               	movlw	high terminal_textAttributes@output_buff
  9890  0131F4  6F18               	movwf	(strcat@to+1)& (0+255),b
  9891  0131F6  0EDE               	movlw	low (STR_24+1)
  9892  0131F8  6F19               	movwf	strcat@from& (0+255),b
  9893  0131FA  0EFF               	movlw	high (STR_24+1)
  9894  0131FC  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9895  0131FE  ECD8  F0B2         	call	_strcat	;wreg free
  9896                           
  9897                           ;ring_buffer_interface.c: 133: break;
  9898  013202  D045               	goto	l1015
  9899  013204                     
  9900                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  9901  013204  0E93               	movlw	low terminal_textAttributes@output_buff
  9902  013206  0101               	movlb	1	; () banked
  9903  013208  6F17               	movwf	strcat@to& (0+255),b
  9904  01320A  0E01               	movlw	high terminal_textAttributes@output_buff
  9905  01320C  6F18               	movwf	(strcat@to+1)& (0+255),b
  9906  01320E  0EE4               	movlw	low (STR_25+1)
  9907  013210  6F19               	movwf	strcat@from& (0+255),b
  9908  013212  0EFF               	movlw	high (STR_25+1)
  9909  013214  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9910  013216  ECD8  F0B2         	call	_strcat	;wreg free
  9911                           
  9912                           ;ring_buffer_interface.c: 136: break;
  9913  01321A  D039               	goto	l1015
  9914  01321C                     
  9915                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  9916  01321C  0E93               	movlw	low terminal_textAttributes@output_buff
  9917  01321E  0101               	movlb	1	; () banked
  9918  013220  6F17               	movwf	strcat@to& (0+255),b
  9919  013222  0E01               	movlw	high terminal_textAttributes@output_buff
  9920  013224  6F18               	movwf	(strcat@to+1)& (0+255),b
  9921  013226  0EF0               	movlw	low (STR_27+1)
  9922  013228  6F19               	movwf	strcat@from& (0+255),b
  9923  01322A  0EFF               	movlw	high (STR_27+1)
  9924  01322C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9925  01322E  ECD8  F0B2         	call	_strcat	;wreg free
  9926                           
  9927                           ;ring_buffer_interface.c: 139: break;
  9928  013232  D02D               	goto	l1015
  9929  013234                     
  9930                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  9931  013234  0E93               	movlw	low terminal_textAttributes@output_buff
  9932  013236  0101               	movlb	1	; () banked
  9933  013238  6F17               	movwf	strcat@to& (0+255),b
  9934  01323A  0E01               	movlw	high terminal_textAttributes@output_buff
  9935  01323C  6F18               	movwf	(strcat@to+1)& (0+255),b
  9936  01323E  0EF8               	movlw	low STR_17
  9937  013240  6F19               	movwf	strcat@from& (0+255),b
  9938  013242  0EFF               	movlw	high STR_17
  9939  013244  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9940  013246  ECD8  F0B2         	call	_strcat	;wreg free
  9941                           
  9942                           ;ring_buffer_interface.c: 142: break;
  9943  01324A  D021               	goto	l1015
  9944  01324C                     
  9945                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  9946  01324C  0E93               	movlw	low terminal_textAttributes@output_buff
  9947  01324E  0101               	movlb	1	; () banked
  9948  013250  6F17               	movwf	strcat@to& (0+255),b
  9949  013252  0E01               	movlw	high terminal_textAttributes@output_buff
  9950  013254  6F18               	movwf	(strcat@to+1)& (0+255),b
  9951  013256  0EC9               	movlw	low (STR_20+1)
  9952  013258  6F19               	movwf	strcat@from& (0+255),b
  9953  01325A  0EFF               	movlw	high (STR_20+1)
  9954  01325C  6F1A               	movwf	(strcat@from+1)& (0+255),b
  9955  01325E  ECD8  F0B2         	call	_strcat	;wreg free
  9956                           
  9957                           ;ring_buffer_interface.c: 147: }
  9958                           
  9959                           ;ring_buffer_interface.c: 146: break;
  9960  013262  D015               	goto	l1015
  9961  013264                     l1013:
  9962  013264  0101               	movlb	1	; () banked
  9963  013266  5191               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  9964                           
  9965                           ; Switch size 1, requested type "space"
  9966                           ; Number of cases is 6, Range of values is 0 to 5
  9967                           ; switch strategies available:
  9968                           ; Name         Instructions Cycles
  9969                           ; simple_byte           19    10 (average)
  9970                           ;	Chosen strategy is simple_byte
  9971  013268  0A00               	xorlw	0	; case 0
  9972  01326A  B4D8               	btfsc	status,2,c
  9973  01326C  D7A7               	goto	l1014
  9974  01326E  0A01               	xorlw	1	; case 1
  9975  013270  B4D8               	btfsc	status,2,c
  9976  013272  D7B0               	goto	l1016
  9977  013274  0A03               	xorlw	3	; case 2
  9978  013276  B4D8               	btfsc	status,2,c
  9979  013278  D7B9               	goto	l1017
  9980  01327A  0A01               	xorlw	1	; case 3
  9981  01327C  B4D8               	btfsc	status,2,c
  9982  01327E  D7C2               	goto	l1018
  9983  013280  0A07               	xorlw	7	; case 4
  9984  013282  B4D8               	btfsc	status,2,c
  9985  013284  D7CB               	goto	l1019
  9986  013286  0A01               	xorlw	1	; case 5
  9987  013288  B4D8               	btfsc	status,2,c
  9988  01328A  D7D4               	goto	l1020
  9989  01328C  D7DF               	goto	l1021
  9990  01328E                     l1015:
  9991                           
  9992                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  9993                           
  9994                           ; BSR set to: 1
  9995  01328E  0E93               	movlw	low terminal_textAttributes@output_buff
  9996  013290  0101               	movlb	1	; () banked
  9997  013292  6F17               	movwf	strcat@to& (0+255),b
  9998  013294  0E01               	movlw	high terminal_textAttributes@output_buff
  9999  013296  6F18               	movwf	(strcat@to+1)& (0+255),b
 10000  013298  0EFA               	movlw	low STR_19
 10001  01329A  6F19               	movwf	strcat@from& (0+255),b
 10002  01329C  0EFF               	movlw	high STR_19
 10003  01329E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10004  0132A0  ECD8  F0B2         	call	_strcat	;wreg free
 10005                           
 10006                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
 10007  0132A4  D06C               	goto	l1022
 10008  0132A6                     
 10009                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
 10010  0132A6  0E93               	movlw	low terminal_textAttributes@output_buff
 10011  0132A8  0101               	movlb	1	; () banked
 10012  0132AA  6F17               	movwf	strcat@to& (0+255),b
 10013  0132AC  0E01               	movlw	high terminal_textAttributes@output_buff
 10014  0132AE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10015  0132B0  0EC8               	movlw	low STR_20
 10016  0132B2  6F19               	movwf	strcat@from& (0+255),b
 10017  0132B4  0EFF               	movlw	high STR_20
 10018  0132B6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10019  0132B8  ECD8  F0B2         	call	_strcat	;wreg free
 10020                           
 10021                           ;ring_buffer_interface.c: 155: break;
 10022  0132BC  D07B               	goto	l1024
 10023  0132BE                     
 10024                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
 10025  0132BE  0E93               	movlw	low terminal_textAttributes@output_buff
 10026  0132C0  0101               	movlb	1	; () banked
 10027  0132C2  6F17               	movwf	strcat@to& (0+255),b
 10028  0132C4  0E01               	movlw	high terminal_textAttributes@output_buff
 10029  0132C6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10030  0132C8  0ECB               	movlw	low STR_21
 10031  0132CA  6F19               	movwf	strcat@from& (0+255),b
 10032  0132CC  0EFF               	movlw	high STR_21
 10033  0132CE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10034  0132D0  ECD8  F0B2         	call	_strcat	;wreg free
 10035                           
 10036                           ;ring_buffer_interface.c: 158: break;
 10037  0132D4  D06F               	goto	l1024
 10038  0132D6                     
 10039                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
 10040  0132D6  0E93               	movlw	low terminal_textAttributes@output_buff
 10041  0132D8  0101               	movlb	1	; () banked
 10042  0132DA  6F17               	movwf	strcat@to& (0+255),b
 10043  0132DC  0E01               	movlw	high terminal_textAttributes@output_buff
 10044  0132DE  6F18               	movwf	(strcat@to+1)& (0+255),b
 10045  0132E0  0ED1               	movlw	low STR_22
 10046  0132E2  6F19               	movwf	strcat@from& (0+255),b
 10047  0132E4  0EFF               	movlw	high STR_22
 10048  0132E6  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10049  0132E8  ECD8  F0B2         	call	_strcat	;wreg free
 10050                           
 10051                           ;ring_buffer_interface.c: 161: break;
 10052  0132EC  D063               	goto	l1024
 10053  0132EE                     
 10054                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
 10055  0132EE  0E93               	movlw	low terminal_textAttributes@output_buff
 10056  0132F0  0101               	movlb	1	; () banked
 10057  0132F2  6F17               	movwf	strcat@to& (0+255),b
 10058  0132F4  0E01               	movlw	high terminal_textAttributes@output_buff
 10059  0132F6  6F18               	movwf	(strcat@to+1)& (0+255),b
 10060  0132F8  0ED7               	movlw	low STR_23
 10061  0132FA  6F19               	movwf	strcat@from& (0+255),b
 10062  0132FC  0EFF               	movlw	high STR_23
 10063  0132FE  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10064  013300  ECD8  F0B2         	call	_strcat	;wreg free
 10065                           
 10066                           ;ring_buffer_interface.c: 164: break;
 10067  013304  D057               	goto	l1024
 10068  013306                     
 10069                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
 10070  013306  0E93               	movlw	low terminal_textAttributes@output_buff
 10071  013308  0101               	movlb	1	; () banked
 10072  01330A  6F17               	movwf	strcat@to& (0+255),b
 10073  01330C  0E01               	movlw	high terminal_textAttributes@output_buff
 10074  01330E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10075  013310  0EDD               	movlw	low STR_24
 10076  013312  6F19               	movwf	strcat@from& (0+255),b
 10077  013314  0EFF               	movlw	high STR_24
 10078  013316  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10079  013318  ECD8  F0B2         	call	_strcat	;wreg free
 10080                           
 10081                           ;ring_buffer_interface.c: 167: break;
 10082  01331C  D04B               	goto	l1024
 10083  01331E                     
 10084                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
 10085  01331E  0E93               	movlw	low terminal_textAttributes@output_buff
 10086  013320  0101               	movlb	1	; () banked
 10087  013322  6F17               	movwf	strcat@to& (0+255),b
 10088  013324  0E01               	movlw	high terminal_textAttributes@output_buff
 10089  013326  6F18               	movwf	(strcat@to+1)& (0+255),b
 10090  013328  0EE3               	movlw	low STR_25
 10091  01332A  6F19               	movwf	strcat@from& (0+255),b
 10092  01332C  0EFF               	movlw	high STR_25
 10093  01332E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10094  013330  ECD8  F0B2         	call	_strcat	;wreg free
 10095                           
 10096                           ;ring_buffer_interface.c: 170: break;
 10097  013334  D03F               	goto	l1024
 10098  013336                     
 10099                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
 10100  013336  0E93               	movlw	low terminal_textAttributes@output_buff
 10101  013338  0101               	movlb	1	; () banked
 10102  01333A  6F17               	movwf	strcat@to& (0+255),b
 10103  01333C  0E01               	movlw	high terminal_textAttributes@output_buff
 10104  01333E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10105  013340  0EE9               	movlw	low STR_26
 10106  013342  6F19               	movwf	strcat@from& (0+255),b
 10107  013344  0EFF               	movlw	high STR_26
 10108  013346  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10109  013348  ECD8  F0B2         	call	_strcat	;wreg free
 10110                           
 10111                           ;ring_buffer_interface.c: 173: break;
 10112  01334C  D033               	goto	l1024
 10113  01334E                     
 10114                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
 10115  01334E  0E93               	movlw	low terminal_textAttributes@output_buff
 10116  013350  0101               	movlb	1	; () banked
 10117  013352  6F17               	movwf	strcat@to& (0+255),b
 10118  013354  0E01               	movlw	high terminal_textAttributes@output_buff
 10119  013356  6F18               	movwf	(strcat@to+1)& (0+255),b
 10120  013358  0EEF               	movlw	low STR_27
 10121  01335A  6F19               	movwf	strcat@from& (0+255),b
 10122  01335C  0EFF               	movlw	high STR_27
 10123  01335E  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10124  013360  ECD8  F0B2         	call	_strcat	;wreg free
 10125                           
 10126                           ;ring_buffer_interface.c: 176: break;
 10127  013364  D027               	goto	l1024
 10128  013366                     
 10129                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
 10130  013366  0E93               	movlw	low terminal_textAttributes@output_buff
 10131  013368  0101               	movlb	1	; () banked
 10132  01336A  6F17               	movwf	strcat@to& (0+255),b
 10133  01336C  0E01               	movlw	high terminal_textAttributes@output_buff
 10134  01336E  6F18               	movwf	(strcat@to+1)& (0+255),b
 10135  013370  0EEF               	movlw	low STR_27
 10136  013372  6F19               	movwf	strcat@from& (0+255),b
 10137  013374  0EFF               	movlw	high STR_27
 10138  013376  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10139  013378  ECD8  F0B2         	call	_strcat	;wreg free
 10140                           
 10141                           ;ring_buffer_interface.c: 181: }
 10142                           
 10143                           ;ring_buffer_interface.c: 180: break;
 10144  01337C  D01B               	goto	l1024
 10145  01337E                     l1022:
 10146  01337E  0101               	movlb	1	; () banked
 10147  013380  5192               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
 10148                           
 10149                           ; Switch size 1, requested type "space"
 10150                           ; Number of cases is 8, Range of values is 0 to 7
 10151                           ; switch strategies available:
 10152                           ; Name         Instructions Cycles
 10153                           ; simple_byte           25    13 (average)
 10154                           ;	Chosen strategy is simple_byte
 10155  013382  0A00               	xorlw	0	; case 0
 10156  013384  B4D8               	btfsc	status,2,c
 10157  013386  D78F               	goto	l1023
 10158  013388  0A01               	xorlw	1	; case 1
 10159  01338A  B4D8               	btfsc	status,2,c
 10160  01338C  D798               	goto	l1025
 10161  01338E  0A03               	xorlw	3	; case 2
 10162  013390  B4D8               	btfsc	status,2,c
 10163  013392  D7A1               	goto	l1026
 10164  013394  0A01               	xorlw	1	; case 3
 10165  013396  B4D8               	btfsc	status,2,c
 10166  013398  D7AA               	goto	l1027
 10167  01339A  0A07               	xorlw	7	; case 4
 10168  01339C  B4D8               	btfsc	status,2,c
 10169  01339E  D7B3               	goto	l1028
 10170  0133A0  0A01               	xorlw	1	; case 5
 10171  0133A2  B4D8               	btfsc	status,2,c
 10172  0133A4  D7BC               	goto	l1029
 10173  0133A6  0A03               	xorlw	3	; case 6
 10174  0133A8  B4D8               	btfsc	status,2,c
 10175  0133AA  D7C5               	goto	l1030
 10176  0133AC  0A01               	xorlw	1	; case 7
 10177  0133AE  B4D8               	btfsc	status,2,c
 10178  0133B0  D7CE               	goto	l1031
 10179  0133B2  D7D9               	goto	l1032
 10180  0133B4                     l1024:
 10181                           
 10182                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
 10183                           
 10184                           ; BSR set to: 1
 10185  0133B4  0E93               	movlw	low terminal_textAttributes@output_buff
 10186  0133B6  0101               	movlb	1	; () banked
 10187  0133B8  6F17               	movwf	strcat@to& (0+255),b
 10188  0133BA  0E01               	movlw	high terminal_textAttributes@output_buff
 10189  0133BC  6F18               	movwf	(strcat@to+1)& (0+255),b
 10190  0133BE  0EFA               	movlw	low STR_19
 10191  0133C0  6F19               	movwf	strcat@from& (0+255),b
 10192  0133C2  0EFF               	movlw	high STR_19
 10193  0133C4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10194  0133C6  ECD8  F0B2         	call	_strcat	;wreg free
 10195                           
 10196                           ;ring_buffer_interface.c: 185: switch (background_color) {
 10197  0133CA  D06C               	goto	l1033
 10198  0133CC                     
 10199                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
 10200  0133CC  0E93               	movlw	low terminal_textAttributes@output_buff
 10201  0133CE  0101               	movlb	1	; () banked
 10202  0133D0  6F17               	movwf	strcat@to& (0+255),b
 10203  0133D2  0E01               	movlw	high terminal_textAttributes@output_buff
 10204  0133D4  6F18               	movwf	(strcat@to+1)& (0+255),b
 10205  0133D6  0E4C               	movlw	low (STR_117+9)
 10206  0133D8  6F19               	movwf	strcat@from& (0+255),b
 10207  0133DA  0EFF               	movlw	high (STR_117+9)
 10208  0133DC  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10209  0133DE  ECD8  F0B2         	call	_strcat	;wreg free
 10210                           
 10211                           ;ring_buffer_interface.c: 189: break;
 10212  0133E2  D07B               	goto	l1035
 10213  0133E4                     
 10214                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
 10215  0133E4  0E93               	movlw	low terminal_textAttributes@output_buff
 10216  0133E6  0101               	movlb	1	; () banked
 10217  0133E8  6F17               	movwf	strcat@to& (0+255),b
 10218  0133EA  0E01               	movlw	high terminal_textAttributes@output_buff
 10219  0133EC  6F18               	movwf	(strcat@to+1)& (0+255),b
 10220  0133EE  0ECE               	movlw	low STR_31
 10221  0133F0  6F19               	movwf	strcat@from& (0+255),b
 10222  0133F2  0EFF               	movlw	high STR_31
 10223  0133F4  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10224  0133F6  ECD8  F0B2         	call	_strcat	;wreg free
 10225                           
 10226                           ;ring_buffer_interface.c: 192: break;
 10227  0133FA  D06F               	goto	l1035
 10228  0133FC                     
 10229                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
 10230  0133FC  0E93               	movlw	low terminal_textAttributes@output_buff
 10231  0133FE  0101               	movlb	1	; () banked
 10232  013400  6F17               	movwf	strcat@to& (0+255),b
 10233  013402  0E01               	movlw	high terminal_textAttributes@output_buff
 10234  013404  6F18               	movwf	(strcat@to+1)& (0+255),b
 10235  013406  0ED4               	movlw	low STR_32
 10236  013408  6F19               	movwf	strcat@from& (0+255),b
 10237  01340A  0EFF               	movlw	high STR_32
 10238  01340C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10239  01340E  ECD8  F0B2         	call	_strcat	;wreg free
 10240                           
 10241                           ;ring_buffer_interface.c: 195: break;
 10242  013412  D063               	goto	l1035
 10243  013414                     
 10244                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
 10245  013414  0E93               	movlw	low terminal_textAttributes@output_buff
 10246  013416  0101               	movlb	1	; () banked
 10247  013418  6F17               	movwf	strcat@to& (0+255),b
 10248  01341A  0E01               	movlw	high terminal_textAttributes@output_buff
 10249  01341C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10250  01341E  0EDA               	movlw	low STR_33
 10251  013420  6F19               	movwf	strcat@from& (0+255),b
 10252  013422  0EFF               	movlw	high STR_33
 10253  013424  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10254  013426  ECD8  F0B2         	call	_strcat	;wreg free
 10255                           
 10256                           ;ring_buffer_interface.c: 198: break;
 10257  01342A  D057               	goto	l1035
 10258  01342C                     
 10259                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
 10260  01342C  0E93               	movlw	low terminal_textAttributes@output_buff
 10261  01342E  0101               	movlb	1	; () banked
 10262  013430  6F17               	movwf	strcat@to& (0+255),b
 10263  013432  0E01               	movlw	high terminal_textAttributes@output_buff
 10264  013434  6F18               	movwf	(strcat@to+1)& (0+255),b
 10265  013436  0EE0               	movlw	low STR_34
 10266  013438  6F19               	movwf	strcat@from& (0+255),b
 10267  01343A  0EFF               	movlw	high STR_34
 10268  01343C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10269  01343E  ECD8  F0B2         	call	_strcat	;wreg free
 10270                           
 10271                           ;ring_buffer_interface.c: 201: break;
 10272  013442  D04B               	goto	l1035
 10273  013444                     
 10274                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
 10275  013444  0E93               	movlw	low terminal_textAttributes@output_buff
 10276  013446  0101               	movlb	1	; () banked
 10277  013448  6F17               	movwf	strcat@to& (0+255),b
 10278  01344A  0E01               	movlw	high terminal_textAttributes@output_buff
 10279  01344C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10280  01344E  0EE6               	movlw	low STR_35
 10281  013450  6F19               	movwf	strcat@from& (0+255),b
 10282  013452  0EFF               	movlw	high STR_35
 10283  013454  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10284  013456  ECD8  F0B2         	call	_strcat	;wreg free
 10285                           
 10286                           ;ring_buffer_interface.c: 204: break;
 10287  01345A  D03F               	goto	l1035
 10288  01345C                     
 10289                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
 10290  01345C  0E93               	movlw	low terminal_textAttributes@output_buff
 10291  01345E  0101               	movlb	1	; () banked
 10292  013460  6F17               	movwf	strcat@to& (0+255),b
 10293  013462  0E01               	movlw	high terminal_textAttributes@output_buff
 10294  013464  6F18               	movwf	(strcat@to+1)& (0+255),b
 10295  013466  0EEC               	movlw	low STR_36
 10296  013468  6F19               	movwf	strcat@from& (0+255),b
 10297  01346A  0EFF               	movlw	high STR_36
 10298  01346C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10299  01346E  ECD8  F0B2         	call	_strcat	;wreg free
 10300                           
 10301                           ;ring_buffer_interface.c: 207: break;
 10302  013472  D033               	goto	l1035
 10303  013474                     
 10304                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
 10305  013474  0E93               	movlw	low terminal_textAttributes@output_buff
 10306  013476  0101               	movlb	1	; () banked
 10307  013478  6F17               	movwf	strcat@to& (0+255),b
 10308  01347A  0E01               	movlw	high terminal_textAttributes@output_buff
 10309  01347C  6F18               	movwf	(strcat@to+1)& (0+255),b
 10310  01347E  0EF2               	movlw	low STR_37
 10311  013480  6F19               	movwf	strcat@from& (0+255),b
 10312  013482  0EFF               	movlw	high STR_37
 10313  013484  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10314  013486  ECD8  F0B2         	call	_strcat	;wreg free
 10315                           
 10316                           ;ring_buffer_interface.c: 210: break;
 10317  01348A  D027               	goto	l1035
 10318  01348C                     
 10319                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
 10320  01348C  0E93               	movlw	low terminal_textAttributes@output_buff
 10321  01348E  0101               	movlb	1	; () banked
 10322  013490  6F17               	movwf	strcat@to& (0+255),b
 10323  013492  0E01               	movlw	high terminal_textAttributes@output_buff
 10324  013494  6F18               	movwf	(strcat@to+1)& (0+255),b
 10325  013496  0EF2               	movlw	low STR_37
 10326  013498  6F19               	movwf	strcat@from& (0+255),b
 10327  01349A  0EFF               	movlw	high STR_37
 10328  01349C  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10329  01349E  ECD8  F0B2         	call	_strcat	;wreg free
 10330                           
 10331                           ;ring_buffer_interface.c: 215: }
 10332                           
 10333                           ;ring_buffer_interface.c: 214: break;
 10334  0134A2  D01B               	goto	l1035
 10335  0134A4                     l1033:
 10336  0134A4  0101               	movlb	1	; () banked
 10337  0134A6  5190               	movf	terminal_textAttributes@background_color& (0+255),w,b
 10338                           
 10339                           ; Switch size 1, requested type "space"
 10340                           ; Number of cases is 8, Range of values is 0 to 7
 10341                           ; switch strategies available:
 10342                           ; Name         Instructions Cycles
 10343                           ; simple_byte           25    13 (average)
 10344                           ;	Chosen strategy is simple_byte
 10345  0134A8  0A00               	xorlw	0	; case 0
 10346  0134AA  B4D8               	btfsc	status,2,c
 10347  0134AC  D78F               	goto	l1034
 10348  0134AE  0A01               	xorlw	1	; case 1
 10349  0134B0  B4D8               	btfsc	status,2,c
 10350  0134B2  D798               	goto	l1036
 10351  0134B4  0A03               	xorlw	3	; case 2
 10352  0134B6  B4D8               	btfsc	status,2,c
 10353  0134B8  D7A1               	goto	l1037
 10354  0134BA  0A01               	xorlw	1	; case 3
 10355  0134BC  B4D8               	btfsc	status,2,c
 10356  0134BE  D7AA               	goto	l1038
 10357  0134C0  0A07               	xorlw	7	; case 4
 10358  0134C2  B4D8               	btfsc	status,2,c
 10359  0134C4  D7B3               	goto	l1039
 10360  0134C6  0A01               	xorlw	1	; case 5
 10361  0134C8  B4D8               	btfsc	status,2,c
 10362  0134CA  D7BC               	goto	l1040
 10363  0134CC  0A03               	xorlw	3	; case 6
 10364  0134CE  B4D8               	btfsc	status,2,c
 10365  0134D0  D7C5               	goto	l1041
 10366  0134D2  0A01               	xorlw	1	; case 7
 10367  0134D4  B4D8               	btfsc	status,2,c
 10368  0134D6  D7CE               	goto	l1042
 10369  0134D8  D7D9               	goto	l1043
 10370  0134DA                     l1035:
 10371                           
 10372                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
 10373                           
 10374                           ; BSR set to: 1
 10375  0134DA  0E93               	movlw	low terminal_textAttributes@output_buff
 10376  0134DC  0101               	movlb	1	; () banked
 10377  0134DE  6F17               	movwf	strcat@to& (0+255),b
 10378  0134E0  0E01               	movlw	high terminal_textAttributes@output_buff
 10379  0134E2  6F18               	movwf	(strcat@to+1)& (0+255),b
 10380  0134E4  0EFC               	movlw	low STR_39
 10381  0134E6  6F19               	movwf	strcat@from& (0+255),b
 10382  0134E8  0EFF               	movlw	high STR_39
 10383  0134EA  6F1A               	movwf	(strcat@from+1)& (0+255),b
 10384  0134EC  ECD8  F0B2         	call	_strcat	;wreg free
 10385                           
 10386                           ;ring_buffer_interface.c: 219: printf(output_buff);
 10387  0134F0  0E93               	movlw	low terminal_textAttributes@output_buff
 10388  0134F2  0101               	movlb	1	; () banked
 10389  0134F4  6F64               	movwf	printf@f& (0+255),b
 10390  0134F6  0E01               	movlw	high terminal_textAttributes@output_buff
 10391  0134F8  6F65               	movwf	(printf@f+1)& (0+255),b
 10392  0134FA  EC71  F086         	call	_printf	;wreg free
 10393  0134FE  0012               	return		;funcret
 10394  013500                     __end_of_terminal_textAttributes:
 10395                           	opt stack 0
 10396                           tblptru	equ	0xFF8
 10397                           tblptrh	equ	0xFF7
 10398                           tblptrl	equ	0xFF6
 10399                           tablat	equ	0xFF5
 10400                           intcon	equ	0xFF2
 10401                           postinc0	equ	0xFEE
 10402                           wreg	equ	0xFE8
 10403                           indf1	equ	0xFE7
 10404                           postdec1	equ	0xFE5
 10405                           fsr1h	equ	0xFE2
 10406                           fsr1l	equ	0xFE1
 10407                           indf2	equ	0xFDF
 10408                           postinc2	equ	0xFDE
 10409                           fsr2h	equ	0xFDA
 10410                           fsr2l	equ	0xFD9
 10411                           status	equ	0xFD8
 10412                           
 10413 ;; *************** function _strncpy *****************
 10414 ;; Defined at:
 10415 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;  to              2   23[BANK1 ] PTR unsigned char 
 10418 ;;		 -> terminal_textAttributes@output_buff(15), 
 10419 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 10420 ;;		 -> STR_11(3), 
 10421 ;;  size            2   27[BANK1 ] unsigned int 
 10422 ;; Auto vars:     Size  Location     Type
 10423 ;;  cp              2   29[BANK1 ] PTR unsigned char 
 10424 ;;		 -> terminal_textAttributes@output_buff(15), 
 10425 ;; Return value:  Size  Location     Type
 10426 ;;                  2   23[BANK1 ] PTR unsigned char 
 10427 ;; Registers used:
 10428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10429 ;; Tracked objects:
 10430 ;;		On entry : 0/0
 10431 ;;		On exit  : 0/0
 10432 ;;		Unchanged: 0/0
 10433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10434 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10435 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10437 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10438 ;;Total ram usage:        8 bytes
 10439 ;; Hardware stack levels used:    1
 10440 ;; Hardware stack levels required when called:   14
 10441 ;; This function calls:
 10442 ;;		Nothing
 10443 ;; This function is called by:
 10444 ;;		_terminal_textAttributes
 10445 ;; This function uses a non-reentrant model
 10446 ;;
 10447                           
 10448                           	psect	text6
 10449  0163B6                     __ptext6:
 10450                           	opt stack 0
 10451  0163B6                     _strncpy:
 10452                           	opt stack 14
 10453                           
 10454                           ;incstack = 0
 10455  0163B6  C117  F11D         	movff	strncpy@to,strncpy@cp
 10456  0163BA  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
 10457  0163BE  D018               	goto	l2132
 10458  0163C0  0101               	movlb	1	; () banked
 10459  0163C2  071B               	decf	strncpy@size& (0+255),f,b
 10460  0163C4  A0D8               	btfss	status,0,c
 10461  0163C6  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10462                           
 10463                           ; BSR set to: 1
 10464  0163C8  C119  FFF6         	movff	strncpy@from,tblptrl
 10465  0163CC  C11A  FFF7         	movff	strncpy@from+1,tblptrh
 10466  0163D0  4B19               	infsnz	strncpy@from& (0+255),f,b
 10467  0163D2  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
 10468  0163D4                     	if	0	;tblptru may be non-zero
 10469  0163D4                     	endif
 10470  0163D4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10471  0163D4  0E00               	movlw	low (__mediumconst shr (0+16))
 10472  0163D6  6EF8               	movwf	tblptru,c
 10473  0163D8                     	endif
 10474  0163D8  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10475  0163DC  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10476  0163E0  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10477  0163E2  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10478  0163E4  0008               	tblrd		*
 10479  0163E6  CFF5 FFDF          	movff	tablat,indf2
 10480  0163EA  50DF               	movf	indf2,w,c
 10481  0163EC  B4D8               	btfsc	status,2,c
 10482  0163EE  D00E               	goto	l2134
 10483  0163F0                     l2132:
 10484                           
 10485                           ; BSR set to: 1
 10486                           
 10487                           ; BSR set to: 1
 10488  0163F0  0101               	movlb	1	; () banked
 10489  0163F2  511B               	movf	strncpy@size& (0+255),w,b
 10490  0163F4  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
 10491  0163F6  B4D8               	btfsc	status,2,c
 10492  0163F8  D009               	goto	l2134
 10493  0163FA  D7E2               	goto	l2131
 10494  0163FC                     l10711:
 10495                           
 10496                           ; BSR set to: 1
 10497  0163FC  C11D  FFD9         	movff	strncpy@cp,fsr2l
 10498  016400  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
 10499  016404  0E00               	movlw	0
 10500  016406  6EDF               	movwf	indf2,c
 10501                           
 10502                           ; BSR set to: 1
 10503  016408  4B1D               	infsnz	strncpy@cp& (0+255),f,b
 10504  01640A  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
 10505  01640C                     l2134:
 10506                           
 10507                           ; BSR set to: 1
 10508                           
 10509                           ; BSR set to: 1
 10510  01640C  071B               	decf	strncpy@size& (0+255),f,b
 10511  01640E  A0D8               	btfss	status,0,c
 10512  016410  071C               	decf	(strncpy@size+1)& (0+255),f,b
 10513  016412  291B               	incf	strncpy@size& (0+255),w,b
 10514  016414  E1F3               	bnz	l10711
 10515  016416  291C               	incf	(strncpy@size+1)& (0+255),w,b
 10516  016418  B4D8               	btfsc	status,2,c
 10517  01641A  0012               	return	
 10518  01641C  D7EF               	goto	l2135
 10519  01641E                     __end_of_strncpy:
 10520                           	opt stack 0
 10521                           tblptru	equ	0xFF8
 10522                           tblptrh	equ	0xFF7
 10523                           tblptrl	equ	0xFF6
 10524                           tablat	equ	0xFF5
 10525                           intcon	equ	0xFF2
 10526                           postinc0	equ	0xFEE
 10527                           wreg	equ	0xFE8
 10528                           indf1	equ	0xFE7
 10529                           postdec1	equ	0xFE5
 10530                           fsr1h	equ	0xFE2
 10531                           fsr1l	equ	0xFE1
 10532                           indf2	equ	0xFDF
 10533                           postinc2	equ	0xFDE
 10534                           fsr2h	equ	0xFDA
 10535                           fsr2l	equ	0xFD9
 10536                           status	equ	0xFD8
 10537                           
 10538 ;; *************** function _terminal_printNewline *****************
 10539 ;; Defined at:
 10540 ;;		line 230 in file "ring_buffer_interface.c"
 10541 ;; Parameters:    Size  Location     Type
 10542 ;;		None
 10543 ;; Auto vars:     Size  Location     Type
 10544 ;;		None
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  1    wreg      void 
 10547 ;; Registers used:
 10548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/0
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;Total ram usage:        0 bytes
 10559 ;; Hardware stack levels used:    1
 10560 ;; Hardware stack levels required when called:   18
 10561 ;; This function calls:
 10562 ;;		_printf
 10563 ;; This function is called by:
 10564 ;;		_ringBufferLUT
 10565 ;; This function uses a non-reentrant model
 10566 ;;
 10567                           
 10568                           	psect	text7
 10569  016FEC                     __ptext7:
 10570                           	opt stack 0
 10571  016FEC                     _terminal_printNewline:
 10572                           	opt stack 10
 10573                           
 10574                           ;ring_buffer_interface.c: 232: printf("\n\r");
 10575                           
 10576                           ; BSR set to: 1
 10577                           ;incstack = 0
 10578  016FEC  0E96               	movlw	low (STR_105+68)
 10579  016FEE  0101               	movlb	1	; () banked
 10580  016FF0  6F64               	movwf	printf@f& (0+255),b
 10581  016FF2  0EF7               	movlw	high (STR_105+68)
 10582  016FF4  6F65               	movwf	(printf@f+1)& (0+255),b
 10583  016FF6  EC71  F086         	call	_printf	;wreg free
 10584  016FFA  0012               	return		;funcret
 10585  016FFC                     __end_of_terminal_printNewline:
 10586                           	opt stack 0
 10587                           tblptru	equ	0xFF8
 10588                           tblptrh	equ	0xFF7
 10589                           tblptrl	equ	0xFF6
 10590                           tablat	equ	0xFF5
 10591                           intcon	equ	0xFF2
 10592                           postinc0	equ	0xFEE
 10593                           wreg	equ	0xFE8
 10594                           indf1	equ	0xFE7
 10595                           postdec1	equ	0xFE5
 10596                           fsr1h	equ	0xFE2
 10597                           fsr1l	equ	0xFE1
 10598                           indf2	equ	0xFDF
 10599                           postinc2	equ	0xFDE
 10600                           fsr2h	equ	0xFDA
 10601                           fsr2l	equ	0xFD9
 10602                           status	equ	0xFD8
 10603                           
 10604 ;; *************** function _strstr *****************
 10605 ;; Defined at:
 10606 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
 10609 ;;		 -> NULL(0), line(64), 
 10610 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
 10611 ;;		 -> STR_99(25), 
 10612 ;; Auto vars:     Size  Location     Type
 10613 ;;		None
 10614 ;; Return value:  Size  Location     Type
 10615 ;;                  2   38[BANK1 ] PTR unsigned char 
 10616 ;; Registers used:
 10617 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10618 ;; Tracked objects:
 10619 ;;		On entry : 0/0
 10620 ;;		On exit  : 0/0
 10621 ;;		Unchanged: 0/0
 10622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10623 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10626 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10627 ;;Total ram usage:        4 bytes
 10628 ;; Hardware stack levels used:    1
 10629 ;; Hardware stack levels required when called:   15
 10630 ;; This function calls:
 10631 ;;		_strchr
 10632 ;;		_strlen
 10633 ;;		_strncmp
 10634 ;; This function is called by:
 10635 ;;		_ringBufferLUT
 10636 ;; This function uses a non-reentrant model
 10637 ;;
 10638                           
 10639                           	psect	text8
 10640  015D5E                     __ptext8:
 10641                           	opt stack 0
 10642  015D5E                     _strstr:
 10643                           	opt stack 13
 10644                           
 10645                           ;incstack = 0
 10646  015D5E  D034               	goto	l2146
 10647  015D60  C126  F11D         	movff	strstr@s1,strncmp@s1
 10648  015D64  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
 10649  015D68  C128  F11F         	movff	strstr@s2,strncmp@s2
 10650  015D6C  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
 10651  015D70  C128  F117         	movff	strstr@s2,strlen@s
 10652  015D74  C129  F118         	movff	strstr@s2+1,strlen@s+1
 10653  015D78  EC64  F0B3         	call	_strlen	;wreg free
 10654  015D7C  C117  F121         	movff	?_strlen,strncmp@len
 10655  015D80  C118  F122         	movff	?_strlen+1,strncmp@len+1
 10656  015D84  ECD8  F0AD         	call	_strncmp	;wreg free
 10657  015D88  0101               	movlb	1	; () banked
 10658  015D8A  511D               	movf	?_strncmp& (0+255),w,b
 10659  015D8C  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
 10660  015D8E  A4D8               	btfss	status,2,c
 10661  015D90  D005               	goto	l2148
 10662                           
 10663                           ; BSR set to: 1
 10664  015D92  C126  F126         	movff	strstr@s1,?_strstr
 10665  015D96  C127  F127         	movff	strstr@s1+1,?_strstr+1
 10666                           
 10667                           ; BSR set to: 1
 10668  015D9A  0012               	return	
 10669  015D9C                     l2148:
 10670                           
 10671                           ; BSR set to: 1
 10672                           
 10673                           ; BSR set to: 1
 10674  015D9C  0E01               	movlw	1
 10675  015D9E  2526               	addwf	strstr@s1& (0+255),w,b
 10676  015DA0  6F17               	movwf	strchr@ptr& (0+255),b
 10677  015DA2  0E00               	movlw	0
 10678  015DA4  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
 10679  015DA6  6F18               	movwf	(strchr@ptr+1)& (0+255),b
 10680  015DA8  C128  FFF6         	movff	strstr@s2,tblptrl
 10681  015DAC  C129  FFF7         	movff	strstr@s2+1,tblptrh
 10682  015DB0                     	if	0	;tblptru may be non-zero
 10683  015DB0                     	endif
 10684  015DB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10685  015DB0  0E00               	movlw	low (__mediumconst shr (0+16))
 10686  015DB2  6EF8               	movwf	tblptru,c
 10687  015DB4                     	endif
 10688  015DB4  0008               	tblrd		*
 10689  015DB6  50F5               	movf	tablat,w,c
 10690  015DB8  6F19               	movwf	strchr@chr& (0+255),b
 10691  015DBA  6B1A               	clrf	(strchr@chr+1)& (0+255),b
 10692  015DBC  ECE9  F0B5         	call	_strchr	;wreg free
 10693  015DC0  C117  F126         	movff	?_strchr,strstr@s1
 10694  015DC4  C118  F127         	movff	?_strchr+1,strstr@s1+1
 10695  015DC8                     l2146:
 10696  015DC8  0101               	movlb	1	; () banked
 10697  015DCA  5126               	movf	strstr@s1& (0+255),w,b
 10698  015DCC  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
 10699  015DCE  B4D8               	btfsc	status,2,c
 10700  015DD0  D007               	goto	u14010
 10701                           
 10702                           ; BSR set to: 1
 10703  015DD2  C126  FFD9         	movff	strstr@s1,fsr2l
 10704  015DD6  C127  FFDA         	movff	strstr@s1+1,fsr2h
 10705  015DDA  50DF               	movf	indf2,w,c
 10706  015DDC  A4D8               	btfss	status,2,c
 10707  015DDE  D7C0               	goto	l2147
 10708  015DE0                     u14010:
 10709                           
 10710                           ; BSR set to: 1
 10711                           
 10712                           ; BSR set to: 1
 10713                           
 10714                           ; BSR set to: 1
 10715  015DE0  0E00               	movlw	0
 10716  015DE2  6F26               	movwf	?_strstr& (0+255),b
 10717  015DE4  0E00               	movlw	0
 10718  015DE6  6F27               	movwf	(?_strstr+1)& (0+255),b
 10719  015DE8  0012               	return	
 10720  015DEA                     __end_of_strstr:
 10721                           	opt stack 0
 10722                           tblptru	equ	0xFF8
 10723                           tblptrh	equ	0xFF7
 10724                           tblptrl	equ	0xFF6
 10725                           tablat	equ	0xFF5
 10726                           intcon	equ	0xFF2
 10727                           postinc0	equ	0xFEE
 10728                           wreg	equ	0xFE8
 10729                           indf1	equ	0xFE7
 10730                           postdec1	equ	0xFE5
 10731                           fsr1h	equ	0xFE2
 10732                           fsr1l	equ	0xFE1
 10733                           indf2	equ	0xFDF
 10734                           postinc2	equ	0xFDE
 10735                           fsr2h	equ	0xFDA
 10736                           fsr2l	equ	0xFD9
 10737                           status	equ	0xFD8
 10738                           
 10739 ;; *************** function _strncmp *****************
 10740 ;; Defined at:
 10741 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
 10744 ;;		 -> NULL(0), line(64), 
 10745 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
 10746 ;;		 -> STR_99(25), 
 10747 ;;  len             2   33[BANK1 ] unsigned int 
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;		None
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  2   29[BANK1 ] int 
 10752 ;; Registers used:
 10753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10759 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10761 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10762 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10763 ;;Total ram usage:        9 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; Hardware stack levels required when called:   14
 10766 ;; This function calls:
 10767 ;;		Nothing
 10768 ;; This function is called by:
 10769 ;;		_strstr
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           	psect	text9
 10774  015BB0                     __ptext9:
 10775                           	opt stack 0
 10776  015BB0                     _strncmp:
 10777                           	opt stack 13
 10778                           
 10779                           ; BSR set to: 1
 10780                           ;incstack = 0
 10781  015BB0  D039               	goto	l2205
 10782  015BB2                     l10993:
 10783  015BB2  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10784  015BB6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10785  015BBA  50DF               	movf	indf2,w,c
 10786  015BBC  B4D8               	btfsc	status,2,c
 10787  015BBE  D012               	goto	u13210
 10788  015BC0  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10789  015BC4  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10790  015BC8  50DF               	movf	indf2,w,c
 10791  015BCA  0101               	movlb	1	; () banked
 10792  015BCC  6F23               	movwf	??_strncmp& (0+255),b
 10793  015BCE  C11F  FFF6         	movff	strncmp@s2,tblptrl
 10794  015BD2  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 10795  015BD6                     	if	0	;tblptru may be non-zero
 10796  015BD6                     	endif
 10797  015BD6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10798  015BD6  0E00               	movlw	low (__mediumconst shr (0+16))
 10799  015BD8  6EF8               	movwf	tblptru,c
 10800  015BDA                     	endif
 10801  015BDA  0008               	tblrd		*
 10802  015BDC  50F5               	movf	tablat,w,c
 10803  015BDE  1923               	xorwf	??_strncmp& (0+255),w,b
 10804  015BE0  B4D8               	btfsc	status,2,c
 10805  015BE2  D01C               	goto	l2207
 10806  015BE4                     u13210:
 10807                           
 10808                           ; BSR set to: 1
 10809  015BE4  C11F  FFF6         	movff	strncmp@s2,tblptrl
 10810  015BE8  C120  FFF7         	movff	strncmp@s2+1,tblptrh
 10811  015BEC                     	if	0	;tblptru may be non-zero
 10812  015BEC                     	endif
 10813  015BEC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10814  015BEC  0E00               	movlw	low (__mediumconst shr (0+16))
 10815  015BEE  6EF8               	movwf	tblptru,c
 10816  015BF0                     	endif
 10817  015BF0  0008               	tblrd		*
 10818  015BF2  50F5               	movf	tablat,w,c
 10819  015BF4  0101               	movlb	1	; () banked
 10820  015BF6  6F23               	movwf	??_strncmp& (0+255),b
 10821  015BF8  6B24               	clrf	(??_strncmp+1)& (0+255),b
 10822  015BFA  1F23               	comf	??_strncmp& (0+255),f,b
 10823  015BFC  1F24               	comf	(??_strncmp+1)& (0+255),f,b
 10824  015BFE  4B23               	infsnz	??_strncmp& (0+255),f,b
 10825  015C00  2B24               	incf	(??_strncmp+1)& (0+255),f,b
 10826  015C02  C11D  FFD9         	movff	strncmp@s1,fsr2l
 10827  015C06  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
 10828  015C0A  50DF               	movf	indf2,w,c
 10829  015C0C  6F25               	movwf	(??_strncmp+2)& (0+255),b
 10830  015C0E  5125               	movf	(??_strncmp+2)& (0+255),w,b
 10831  015C10  2523               	addwf	??_strncmp& (0+255),w,b
 10832  015C12  6F1D               	movwf	?_strncmp& (0+255),b
 10833  015C14  0E00               	movlw	0
 10834  015C16  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
 10835  015C18  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 10836                           
 10837                           ; BSR set to: 1
 10838  015C1A  0012               	return	
 10839  015C1C                     l2207:
 10840                           
 10841                           ; BSR set to: 1
 10842                           
 10843                           ; BSR set to: 1
 10844  015C1C  4B1D               	infsnz	strncmp@s1& (0+255),f,b
 10845  015C1E  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
 10846  015C20  4B1F               	infsnz	strncmp@s2& (0+255),f,b
 10847  015C22  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
 10848  015C24                     l2205:
 10849                           
 10850                           ; BSR set to: 1
 10851  015C24  0101               	movlb	1	; () banked
 10852  015C26  0721               	decf	strncmp@len& (0+255),f,b
 10853  015C28  A0D8               	btfss	status,0,c
 10854  015C2A  0722               	decf	(strncmp@len+1)& (0+255),f,b
 10855  015C2C  2921               	incf	strncmp@len& (0+255),w,b
 10856  015C2E  E1C1               	bnz	l10993
 10857  015C30  2922               	incf	(strncmp@len+1)& (0+255),w,b
 10858  015C32  A4D8               	btfss	status,2,c
 10859  015C34  D7BE               	goto	l2206
 10860                           
 10861                           ; BSR set to: 1
 10862                           
 10863                           ; BSR set to: 1
 10864  015C36  0E00               	movlw	0
 10865  015C38  6F1E               	movwf	(?_strncmp+1)& (0+255),b
 10866  015C3A  0E00               	movlw	0
 10867  015C3C  6F1D               	movwf	?_strncmp& (0+255),b
 10868  015C3E  0012               	return	
 10869  015C40                     __end_of_strncmp:
 10870                           	opt stack 0
 10871                           tblptru	equ	0xFF8
 10872                           tblptrh	equ	0xFF7
 10873                           tblptrl	equ	0xFF6
 10874                           tablat	equ	0xFF5
 10875                           intcon	equ	0xFF2
 10876                           postinc0	equ	0xFEE
 10877                           wreg	equ	0xFE8
 10878                           indf1	equ	0xFE7
 10879                           postdec1	equ	0xFE5
 10880                           fsr1h	equ	0xFE2
 10881                           fsr1l	equ	0xFE1
 10882                           indf2	equ	0xFDF
 10883                           postinc2	equ	0xFDE
 10884                           fsr2h	equ	0xFDA
 10885                           fsr2l	equ	0xFD9
 10886                           status	equ	0xFD8
 10887                           
 10888 ;; *************** function _strlen *****************
 10889 ;; Defined at:
 10890 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
 10891 ;; Parameters:    Size  Location     Type
 10892 ;;  s               2   23[BANK1 ] PTR const unsigned char 
 10893 ;;		 -> STR_99(25), line(64), 
 10894 ;; Auto vars:     Size  Location     Type
 10895 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
 10896 ;;		 -> STR_99(25), line(64), 
 10897 ;; Return value:  Size  Location     Type
 10898 ;;                  2   23[BANK1 ] unsigned int 
 10899 ;; Registers used:
 10900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 10901 ;; Tracked objects:
 10902 ;;		On entry : 0/0
 10903 ;;		On exit  : 0/0
 10904 ;;		Unchanged: 0/0
 10905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10906 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10907 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10908 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10909 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10910 ;;Total ram usage:        6 bytes
 10911 ;; Hardware stack levels used:    1
 10912 ;; Hardware stack levels required when called:   14
 10913 ;; This function calls:
 10914 ;;		Nothing
 10915 ;; This function is called by:
 10916 ;;		_terminal_ringBufferPull
 10917 ;;		_strstr
 10918 ;; This function uses a non-reentrant model
 10919 ;;
 10920                           
 10921                           	psect	text10
 10922  0166C8                     __ptext10:
 10923                           	opt stack 0
 10924  0166C8                     _strlen:
 10925                           	opt stack 15
 10926                           
 10927                           ; BSR set to: 1
 10928                           ;incstack = 0
 10929  0166C8  C117  F11B         	movff	strlen@s,strlen@cp
 10930  0166CC  C118  F11C         	movff	strlen@s+1,strlen@cp+1
 10931  0166D0  D003               	goto	l2124
 10932  0166D2  0101               	movlb	1	; () banked
 10933  0166D4  4B1B               	infsnz	strlen@cp& (0+255),f,b
 10934  0166D6  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
 10935  0166D8                     l2124:
 10936                           
 10937                           ; BSR set to: 1
 10938  0166D8  C11B  FFF6         	movff	strlen@cp,tblptrl
 10939  0166DC  C11C  FFF7         	movff	strlen@cp+1,tblptrh
 10940  0166E0  0E00               	movlw	low (__mediumconst shr (0+16))
 10941  0166E2  6EF8               	movwf	tblptru,c
 10942  0166E4  0E0D               	movlw	(high __ramtop+-1)
 10943  0166E6  64F7               	cpfsgt	tblptrh,c
 10944  0166E8  D003               	bra	u13137
 10945  0166EA  0008               	tblrd		*
 10946  0166EC  50F5               	movf	tablat,w,c
 10947  0166EE  D005               	bra	u13130
 10948  0166F0                     u13137:
 10949  0166F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 10950  0166F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 10951  0166F8  50EF               	movf	indf0,w,c
 10952  0166FA                     u13130:
 10953  0166FA  0900               	iorlw	0
 10954  0166FC  A4D8               	btfss	status,2,c
 10955  0166FE  D7E9               	goto	l2125
 10956  016700  C117  F119         	movff	strlen@s,??_strlen
 10957  016704  C118  F11A         	movff	strlen@s+1,??_strlen+1
 10958  016708  0101               	movlb	1	; () banked
 10959  01670A  1F19               	comf	??_strlen& (0+255),f,b
 10960  01670C  1F1A               	comf	(??_strlen+1)& (0+255),f,b
 10961  01670E  4B19               	infsnz	??_strlen& (0+255),f,b
 10962  016710  2B1A               	incf	(??_strlen+1)& (0+255),f,b
 10963  016712  511B               	movf	strlen@cp& (0+255),w,b
 10964  016714  2519               	addwf	??_strlen& (0+255),w,b
 10965  016716  6F17               	movwf	?_strlen& (0+255),b
 10966  016718  511C               	movf	(strlen@cp+1)& (0+255),w,b
 10967  01671A  211A               	addwfc	(??_strlen+1)& (0+255),w,b
 10968  01671C  6F18               	movwf	(?_strlen+1)& (0+255),b
 10969  01671E  0012               	return	
 10970  016720                     __end_of_strlen:
 10971                           	opt stack 0
 10972                           tblptru	equ	0xFF8
 10973                           tblptrh	equ	0xFF7
 10974                           tblptrl	equ	0xFF6
 10975                           tablat	equ	0xFF5
 10976                           intcon	equ	0xFF2
 10977                           indf0	equ	0xFEF
 10978                           postinc0	equ	0xFEE
 10979                           fsr0h	equ	0xFEA
 10980                           fsr0l	equ	0xFE9
 10981                           wreg	equ	0xFE8
 10982                           indf1	equ	0xFE7
 10983                           postdec1	equ	0xFE5
 10984                           fsr1h	equ	0xFE2
 10985                           fsr1l	equ	0xFE1
 10986                           indf2	equ	0xFDF
 10987                           postinc2	equ	0xFDE
 10988                           fsr2h	equ	0xFDA
 10989                           fsr2l	equ	0xFD9
 10990                           status	equ	0xFD8
 10991                           
 10992 ;; *************** function _strchr *****************
 10993 ;; Defined at:
 10994 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
 10997 ;;		 -> NULL(0), line(64), 
 10998 ;;  chr             2   25[BANK1 ] int 
 10999 ;; Auto vars:     Size  Location     Type
 11000 ;;		None
 11001 ;; Return value:  Size  Location     Type
 11002 ;;                  2   23[BANK1 ] PTR unsigned char 
 11003 ;; Registers used:
 11004 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11005 ;; Tracked objects:
 11006 ;;		On entry : 0/0
 11007 ;;		On exit  : 0/0
 11008 ;;		Unchanged: 0/0
 11009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11010 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11012 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11013 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11014 ;;Total ram usage:        5 bytes
 11015 ;; Hardware stack levels used:    1
 11016 ;; Hardware stack levels required when called:   14
 11017 ;; This function calls:
 11018 ;;		Nothing
 11019 ;; This function is called by:
 11020 ;;		_strstr
 11021 ;; This function uses a non-reentrant model
 11022 ;;
 11023                           
 11024                           	psect	text11
 11025  016BD2                     __ptext11:
 11026                           	opt stack 0
 11027  016BD2                     _strchr:
 11028                           	opt stack 13
 11029                           
 11030                           ; BSR set to: 1
 11031                           ;incstack = 0
 11032  016BD2  C117  FFD9         	movff	strchr@ptr,fsr2l
 11033  016BD6  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11034  016BDA  0101               	movlb	1	; () banked
 11035  016BDC  5119               	movf	strchr@chr& (0+255),w,b
 11036  016BDE  18DE               	xorwf	postinc2,w,c
 11037  016BE0  A4D8               	btfss	status,2,c
 11038  016BE2  D005               	goto	l2200
 11039                           
 11040                           ; BSR set to: 1
 11041  016BE4  C117  F117         	movff	strchr@ptr,?_strchr
 11042  016BE8  C118  F118         	movff	strchr@ptr+1,?_strchr+1
 11043                           
 11044                           ; BSR set to: 1
 11045  016BEC  0012               	return	
 11046  016BEE                     l2200:
 11047                           
 11048                           ; BSR set to: 1
 11049                           
 11050                           ; BSR set to: 1
 11051  016BEE  C117  FFD9         	movff	strchr@ptr,fsr2l
 11052  016BF2  C118  FFDA         	movff	strchr@ptr+1,fsr2h
 11053  016BF6  4B17               	infsnz	strchr@ptr& (0+255),f,b
 11054  016BF8  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
 11055  016BFA  50DF               	movf	indf2,w,c
 11056  016BFC  A4D8               	btfss	status,2,c
 11057  016BFE  D7E9               	goto	_strchr
 11058                           
 11059                           ; BSR set to: 1
 11060                           
 11061                           ; BSR set to: 1
 11062  016C00  0E00               	movlw	0
 11063  016C02  6F17               	movwf	?_strchr& (0+255),b
 11064  016C04  0E00               	movlw	0
 11065  016C06  6F18               	movwf	(?_strchr+1)& (0+255),b
 11066  016C08  0012               	return	
 11067  016C0A                     __end_of_strchr:
 11068                           	opt stack 0
 11069                           tblptru	equ	0xFF8
 11070                           tblptrh	equ	0xFF7
 11071                           tblptrl	equ	0xFF6
 11072                           tablat	equ	0xFF5
 11073                           intcon	equ	0xFF2
 11074                           indf0	equ	0xFEF
 11075                           postinc0	equ	0xFEE
 11076                           fsr0h	equ	0xFEA
 11077                           fsr0l	equ	0xFE9
 11078                           wreg	equ	0xFE8
 11079                           indf1	equ	0xFE7
 11080                           postdec1	equ	0xFE5
 11081                           fsr1h	equ	0xFE2
 11082                           fsr1l	equ	0xFE1
 11083                           indf2	equ	0xFDF
 11084                           postinc2	equ	0xFDE
 11085                           fsr2h	equ	0xFDA
 11086                           fsr2l	equ	0xFD9
 11087                           status	equ	0xFD8
 11088                           
 11089 ;; *************** function _strcmp *****************
 11090 ;; Defined at:
 11091 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
 11092 ;; Parameters:    Size  Location     Type
 11093 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
 11094 ;;		 -> line(64), 
 11095 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
 11096 ;;		 -> STR_110(5), STR_108(14), STR_106(16), STR_97(13), 
 11097 ;;		 -> STR_95(12), STR_93(16), STR_91(15), STR_89(15), 
 11098 ;;		 -> STR_87(21), STR_85(21), STR_83(26), STR_81(14), 
 11099 ;;		 -> STR_79(13), STR_77(18), STR_75(15), STR_73(16), 
 11100 ;;		 -> STR_71(16), STR_60(11), STR_57(10), STR_55(13), 
 11101 ;;		 -> STR_53(11), STR_50(4), STR_49(6), STR_47(16), 
 11102 ;;		 -> STR_44(6), STR_41(6), 
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;  r               1   28[BANK1 ] char 
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  2   23[BANK1 ] int 
 11107 ;; Registers used:
 11108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11114 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;Total ram usage:        6 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:   14
 11121 ;; This function calls:
 11122 ;;		Nothing
 11123 ;; This function is called by:
 11124 ;;		_ringBufferLUT
 11125 ;; This function uses a non-reentrant model
 11126 ;;
 11127                           
 11128                           	psect	text12
 11129  0167CA                     __ptext12:
 11130                           	opt stack 0
 11131  0167CA                     _strcmp:
 11132                           	opt stack 14
 11133                           
 11134                           ; BSR set to: 1
 11135                           ;incstack = 0
 11136  0167CA  D005               	goto	l2110
 11137  0167CC  0101               	movlb	1	; () banked
 11138  0167CE  4B17               	infsnz	strcmp@s1& (0+255),f,b
 11139  0167D0  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
 11140  0167D2  4B19               	infsnz	strcmp@s2& (0+255),f,b
 11141  0167D4  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
 11142  0167D6                     l2110:
 11143                           
 11144                           ; BSR set to: 1
 11145  0167D6  C117  FFD9         	movff	strcmp@s1,fsr2l
 11146  0167DA  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11147  0167DE  50DF               	movf	indf2,w,c
 11148  0167E0  0101               	movlb	1	; () banked
 11149  0167E2  6F1B               	movwf	??_strcmp& (0+255),b
 11150  0167E4  C119  FFF6         	movff	strcmp@s2,tblptrl
 11151  0167E8  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
 11152  0167EC                     	if	0	;tblptru may be non-zero
 11153  0167EC                     	endif
 11154  0167EC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11155  0167EC  0E00               	movlw	low (__mediumconst shr (0+16))
 11156  0167EE  6EF8               	movwf	tblptru,c
 11157  0167F0                     	endif
 11158  0167F0  0008               	tblrd		*
 11159  0167F2  50F5               	movf	tablat,w,c
 11160  0167F4  0800               	sublw	0
 11161  0167F6  251B               	addwf	??_strcmp& (0+255),w,b
 11162  0167F8  6F1C               	movwf	strcmp@r& (0+255),b
 11163  0167FA  511C               	movf	strcmp@r& (0+255),w,b
 11164  0167FC  A4D8               	btfss	status,2,c
 11165  0167FE  D007               	goto	u13410
 11166                           
 11167                           ; BSR set to: 1
 11168  016800  C117  FFD9         	movff	strcmp@s1,fsr2l
 11169  016804  C118  FFDA         	movff	strcmp@s1+1,fsr2h
 11170  016808  50DF               	movf	indf2,w,c
 11171  01680A  A4D8               	btfss	status,2,c
 11172  01680C  D7DF               	goto	l2111
 11173  01680E                     u13410:
 11174                           
 11175                           ; BSR set to: 1
 11176                           
 11177                           ; BSR set to: 1
 11178                           
 11179                           ; BSR set to: 1
 11180  01680E  511C               	movf	strcmp@r& (0+255),w,b
 11181  016810  6F17               	movwf	?_strcmp& (0+255),b
 11182  016812  6B18               	clrf	(?_strcmp+1)& (0+255),b
 11183  016814  BF17               	btfsc	?_strcmp& (0+255),7,b
 11184  016816  0718               	decf	(?_strcmp+1)& (0+255),f,b
 11185  016818  0012               	return	
 11186  01681A                     __end_of_strcmp:
 11187                           	opt stack 0
 11188                           tblptru	equ	0xFF8
 11189                           tblptrh	equ	0xFF7
 11190                           tblptrl	equ	0xFF6
 11191                           tablat	equ	0xFF5
 11192                           intcon	equ	0xFF2
 11193                           indf0	equ	0xFEF
 11194                           postinc0	equ	0xFEE
 11195                           fsr0h	equ	0xFEA
 11196                           fsr0l	equ	0xFE9
 11197                           wreg	equ	0xFE8
 11198                           indf1	equ	0xFE7
 11199                           postdec1	equ	0xFE5
 11200                           fsr1h	equ	0xFE2
 11201                           fsr1l	equ	0xFE1
 11202                           indf2	equ	0xFDF
 11203                           postinc2	equ	0xFDE
 11204                           fsr2h	equ	0xFDA
 11205                           fsr2l	equ	0xFD9
 11206                           status	equ	0xFD8
 11207                           
 11208 ;; *************** function _getUserID *****************
 11209 ;; Defined at:
 11210 ;;		line 89 in file "device_IDs.c"
 11211 ;; Parameters:    Size  Location     Type
 11212 ;;  inputUserID     1    wreg     unsigned char 
 11213 ;; Auto vars:     Size  Location     Type
 11214 ;;  inputUserID     1   38[BANK1 ] unsigned char 
 11215 ;;  initialOffse    2   39[BANK1 ] unsigned int 
 11216 ;;  IDOffset        1   41[BANK1 ] unsigned char 
 11217 ;; Return value:  Size  Location     Type
 11218 ;;                  2   34[BANK1 ] unsigned int 
 11219 ;; Registers used:
 11220 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11221 ;; Tracked objects:
 11222 ;;		On entry : 0/0
 11223 ;;		On exit  : 0/0
 11224 ;;		Unchanged: 0/0
 11225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11226 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11227 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11228 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11229 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11230 ;;Total ram usage:        8 bytes
 11231 ;; Hardware stack levels used:    1
 11232 ;; Hardware stack levels required when called:   16
 11233 ;; This function calls:
 11234 ;;		_FLASH_ReadWord
 11235 ;; This function is called by:
 11236 ;;		_ringBufferLUT
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text13
 11241  016B20                     __ptext13:
 11242                           	opt stack 0
 11243  016B20                     _getUserID:
 11244                           	opt stack 12
 11245                           
 11246                           ; BSR set to: 1
 11247                           ;incstack = 0
 11248                           ;getUserID@inputUserID stored from wreg
 11249  016B20  0101               	movlb	1	; () banked
 11250  016B22  6F26               	movwf	getUserID@inputUserID& (0+255),b
 11251                           
 11252                           ;device_IDs.c: 92: uint16_t initialOffset = 0x200000;
 11253  016B24  0E00               	movlw	0
 11254  016B26  0101               	movlb	1	; () banked
 11255  016B28  6F28               	movwf	(getUserID@initialOffset+1)& (0+255),b
 11256  016B2A  0E00               	movlw	0
 11257  016B2C  6F27               	movwf	getUserID@initialOffset& (0+255),b
 11258                           
 11259                           ; BSR set to: 1
 11260                           ;device_IDs.c: 95: uint8_t IDOffset = inputUserID * 2;
 11261  016B2E  5126               	movf	getUserID@inputUserID& (0+255),w,b
 11262  016B30  0D02               	mullw	2
 11263  016B32  CFF3 F129          	movff	prodl,getUserID@IDOffset
 11264                           
 11265                           ; BSR set to: 1
 11266                           ;device_IDs.c: 97: return FLASH_ReadWord(initialOffset + IDOffset);
 11267  016B36  5129               	movf	getUserID@IDOffset& (0+255),w,b
 11268  016B38  2527               	addwf	getUserID@initialOffset& (0+255),w,b
 11269  016B3A  6F24               	movwf	??_getUserID& (0+255),b
 11270  016B3C  0E00               	movlw	0
 11271  016B3E  2128               	addwfc	(getUserID@initialOffset+1)& (0+255),w,b
 11272  016B40  6F25               	movwf	(??_getUserID+1)& (0+255),b
 11273  016B42  C124  F11B         	movff	??_getUserID,FLASH_ReadWord@flashAddr
 11274  016B46  C125  F11C         	movff	??_getUserID+1,FLASH_ReadWord@flashAddr+1
 11275  016B4A  6B1D               	clrf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 11276  016B4C  6B1E               	clrf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 11277  016B4E  EC0E  F0B5         	call	_FLASH_ReadWord	;wreg free
 11278  016B52  C11B  F122         	movff	?_FLASH_ReadWord,?_getUserID
 11279  016B56  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getUserID+1
 11280  016B5A  0012               	return	
 11281  016B5C                     __end_of_getUserID:
 11282                           	opt stack 0
 11283                           tblptru	equ	0xFF8
 11284                           tblptrh	equ	0xFF7
 11285                           tblptrl	equ	0xFF6
 11286                           tablat	equ	0xFF5
 11287                           prodl	equ	0xFF3
 11288                           intcon	equ	0xFF2
 11289                           indf0	equ	0xFEF
 11290                           postinc0	equ	0xFEE
 11291                           fsr0h	equ	0xFEA
 11292                           fsr0l	equ	0xFE9
 11293                           wreg	equ	0xFE8
 11294                           indf1	equ	0xFE7
 11295                           postdec1	equ	0xFE5
 11296                           fsr1h	equ	0xFE2
 11297                           fsr1l	equ	0xFE1
 11298                           indf2	equ	0xFDF
 11299                           postinc2	equ	0xFDE
 11300                           fsr2h	equ	0xFDA
 11301                           fsr2l	equ	0xFD9
 11302                           status	equ	0xFD8
 11303                           
 11304 ;; *************** function _getRevisionIDString *****************
 11305 ;; Defined at:
 11306 ;;		line 62 in file "device_IDs.c"
 11307 ;; Parameters:    Size  Location     Type
 11308 ;;  inputMajRevI    1    wreg     unsigned char 
 11309 ;;  inputMinRevI    1   39[BANK1 ] unsigned char 
 11310 ;; Auto vars:     Size  Location     Type
 11311 ;;  inputMajRevI    1   49[BANK1 ] unsigned char 
 11312 ;;  returnString    4   43[BANK1 ] unsigned char [4]
 11313 ;;  MinRevStr       2   47[BANK1 ] unsigned char [2]
 11314 ;;  MajRevStr       1   50[BANK1 ] unsigned char [1]
 11315 ;; Return value:  Size  Location     Type
 11316 ;;                  2   39[BANK1 ] PTR unsigned char 
 11317 ;; Registers used:
 11318 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11319 ;; Tracked objects:
 11320 ;;		On entry : 0/0
 11321 ;;		On exit  : 0/0
 11322 ;;		Unchanged: 0/0
 11323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11324 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11325 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11326 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11327 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;Total ram usage:       12 bytes
 11329 ;; Hardware stack levels used:    1
 11330 ;; Hardware stack levels required when called:   16
 11331 ;; This function calls:
 11332 ;;		_strcat
 11333 ;;		_strcpy
 11334 ;;		_utoa
 11335 ;; This function is called by:
 11336 ;;		_ringBufferLUT
 11337 ;; This function uses a non-reentrant model
 11338 ;;
 11339                           
 11340                           	psect	text14
 11341  015CD0                     __ptext14:
 11342                           	opt stack 0
 11343  015CD0                     _getRevisionIDString:
 11344                           	opt stack 12
 11345                           
 11346                           ;incstack = 0
 11347                           ;getRevisionIDString@inputMajRevID stored from wreg
 11348  015CD0  0101               	movlb	1	; () banked
 11349  015CD2  6F31               	movwf	getRevisionIDString@inputMajRevID& (0+255),b
 11350                           
 11351                           ;device_IDs.c: 64: char returnString[4];
 11352                           ;device_IDs.c: 70: char MajRevStr[1];
 11353                           ;device_IDs.c: 71: utoa(inputMajRevID, MajRevStr, 10);
 11354  015CD4  0101               	movlb	1	; () banked
 11355  015CD6  5131               	movf	getRevisionIDString@inputMajRevID& (0+255),w,b
 11356  015CD8  6F29               	movwf	??_getRevisionIDString& (0+255),b
 11357  015CDA  6B2A               	clrf	(??_getRevisionIDString+1)& (0+255),b
 11358  015CDC  C129  F11E         	movff	??_getRevisionIDString,utoa@buf
 11359  015CE0  C12A  F11F         	movff	??_getRevisionIDString+1,utoa@buf+1
 11360  015CE4  0E01               	movlw	high getRevisionIDString@MajRevStr
 11361  015CE6  6F21               	movwf	(utoa@val+1)& (0+255),b
 11362  015CE8  0E32               	movlw	low getRevisionIDString@MajRevStr
 11363  015CEA  6F20               	movwf	utoa@val& (0+255),b
 11364  015CEC  0E00               	movlw	0
 11365  015CEE  6F23               	movwf	(utoa@base+1)& (0+255),b
 11366  015CF0  0E0A               	movlw	10
 11367  015CF2  6F22               	movwf	utoa@base& (0+255),b
 11368  015CF4  ECE9  F0AC         	call	_utoa	;wreg free
 11369                           
 11370                           ;device_IDs.c: 72: MajRevStr[0] += 17;
 11371  015CF8  0E11               	movlw	17
 11372  015CFA  0101               	movlb	1	; () banked
 11373  015CFC  2732               	addwf	getRevisionIDString@MajRevStr& (0+255),f,b
 11374                           
 11375                           ; BSR set to: 1
 11376                           ;device_IDs.c: 75: char MinRevStr[2];
 11377                           ;device_IDs.c: 76: utoa(inputMinRevID, MinRevStr, 10);
 11378  015CFE  5127               	movf	getRevisionIDString@inputMinRevID& (0+255),w,b
 11379  015D00  6F29               	movwf	??_getRevisionIDString& (0+255),b
 11380  015D02  6B2A               	clrf	(??_getRevisionIDString+1)& (0+255),b
 11381  015D04  C129  F11E         	movff	??_getRevisionIDString,utoa@buf
 11382  015D08  C12A  F11F         	movff	??_getRevisionIDString+1,utoa@buf+1
 11383  015D0C  0E01               	movlw	high getRevisionIDString@MinRevStr
 11384  015D0E  6F21               	movwf	(utoa@val+1)& (0+255),b
 11385  015D10  0E2F               	movlw	low getRevisionIDString@MinRevStr
 11386  015D12  6F20               	movwf	utoa@val& (0+255),b
 11387  015D14  0E00               	movlw	0
 11388  015D16  6F23               	movwf	(utoa@base+1)& (0+255),b
 11389  015D18  0E0A               	movlw	10
 11390  015D1A  6F22               	movwf	utoa@base& (0+255),b
 11391  015D1C  ECE9  F0AC         	call	_utoa	;wreg free
 11392                           
 11393                           ;device_IDs.c: 79: strcpy(returnString, MajRevStr);
 11394  015D20  0E2B               	movlw	low getRevisionIDString@returnString
 11395  015D22  0101               	movlb	1	; () banked
 11396  015D24  6F17               	movwf	strcpy@to& (0+255),b
 11397  015D26  0E01               	movlw	high getRevisionIDString@returnString
 11398  015D28  6F18               	movwf	(strcpy@to+1)& (0+255),b
 11399  015D2A  0E32               	movlw	low getRevisionIDString@MajRevStr
 11400  015D2C  6F19               	movwf	strcpy@from& (0+255),b
 11401  015D2E  0E01               	movlw	high getRevisionIDString@MajRevStr
 11402  015D30  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 11403  015D32  ECA4  F0B4         	call	_strcpy	;wreg free
 11404                           
 11405                           ;device_IDs.c: 82: strcat(returnString, MinRevStr);
 11406  015D36  0E2B               	movlw	low getRevisionIDString@returnString
 11407  015D38  0101               	movlb	1	; () banked
 11408  015D3A  6F17               	movwf	strcat@to& (0+255),b
 11409  015D3C  0E01               	movlw	high getRevisionIDString@returnString
 11410  015D3E  6F18               	movwf	(strcat@to+1)& (0+255),b
 11411  015D40  0E2F               	movlw	low getRevisionIDString@MinRevStr
 11412  015D42  6F19               	movwf	strcat@from& (0+255),b
 11413  015D44  0E01               	movlw	high getRevisionIDString@MinRevStr
 11414  015D46  6F1A               	movwf	(strcat@from+1)& (0+255),b
 11415  015D48  ECD8  F0B2         	call	_strcat	;wreg free
 11416                           
 11417                           ;device_IDs.c: 85: return *returnString;
 11418  015D4C  0101               	movlb	1	; () banked
 11419  015D4E  512B               	movf	getRevisionIDString@returnString& (0+255),w,b
 11420  015D50  6F29               	movwf	??_getRevisionIDString& (0+255),b
 11421  015D52  6B2A               	clrf	(??_getRevisionIDString+1)& (0+255),b
 11422  015D54  C129  F127         	movff	??_getRevisionIDString,?_getRevisionIDString
 11423  015D58  C12A  F128         	movff	??_getRevisionIDString+1,?_getRevisionIDString+1
 11424  015D5C  0012               	return	
 11425  015D5E                     __end_of_getRevisionIDString:
 11426                           	opt stack 0
 11427                           tblptru	equ	0xFF8
 11428                           tblptrh	equ	0xFF7
 11429                           tblptrl	equ	0xFF6
 11430                           tablat	equ	0xFF5
 11431                           prodl	equ	0xFF3
 11432                           intcon	equ	0xFF2
 11433                           indf0	equ	0xFEF
 11434                           postinc0	equ	0xFEE
 11435                           fsr0h	equ	0xFEA
 11436                           fsr0l	equ	0xFE9
 11437                           wreg	equ	0xFE8
 11438                           indf1	equ	0xFE7
 11439                           postdec1	equ	0xFE5
 11440                           fsr1h	equ	0xFE2
 11441                           fsr1l	equ	0xFE1
 11442                           indf2	equ	0xFDF
 11443                           postinc2	equ	0xFDE
 11444                           fsr2h	equ	0xFDA
 11445                           fsr2l	equ	0xFD9
 11446                           status	equ	0xFD8
 11447                           
 11448 ;; *************** function _utoa *****************
 11449 ;; Defined at:
 11450 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\itoa.c"
 11451 ;; Parameters:    Size  Location     Type
 11452 ;;  buf             2   30[BANK1 ] PTR unsigned char 
 11453 ;;		 -> RAM(3561), 
 11454 ;;  val             2   32[BANK1 ] unsigned int 
 11455 ;;  base            2   34[BANK1 ] int 
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;  v               2   36[BANK1 ] unsigned int 
 11458 ;;  c               1   38[BANK1 ] unsigned char 
 11459 ;; Return value:  Size  Location     Type
 11460 ;;                  2   30[BANK1 ] PTR unsigned char 
 11461 ;; Registers used:
 11462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11463 ;; Tracked objects:
 11464 ;;		On entry : 0/0
 11465 ;;		On exit  : 0/0
 11466 ;;		Unchanged: 0/0
 11467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11468 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11469 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11471 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11472 ;;Total ram usage:        9 bytes
 11473 ;; Hardware stack levels used:    1
 11474 ;; Hardware stack levels required when called:   15
 11475 ;; This function calls:
 11476 ;;		___lwdiv
 11477 ;;		___lwmod
 11478 ;; This function is called by:
 11479 ;;		_getRevisionIDString
 11480 ;; This function uses a non-reentrant model
 11481 ;;
 11482                           
 11483                           	psect	text15
 11484  0159D2                     __ptext15:
 11485                           	opt stack 0
 11486  0159D2                     _utoa:
 11487                           	opt stack 12
 11488                           
 11489                           ; BSR set to: 1
 11490                           ;incstack = 0
 11491  0159D2  C120  F124         	movff	utoa@val,utoa@v
 11492  0159D6  C121  F125         	movff	utoa@val+1,utoa@v+1
 11493  0159DA  C124  F117         	movff	utoa@v,___lwdiv@dividend
 11494  0159DE  C125  F118         	movff	utoa@v+1,___lwdiv@dividend+1
 11495  0159E2  C122  F119         	movff	utoa@base,___lwdiv@divisor
 11496  0159E6  C123  F11A         	movff	utoa@base+1,___lwdiv@divisor+1
 11497  0159EA  ECBB  F0B3         	call	___lwdiv	;wreg free
 11498  0159EE  C117  F124         	movff	?___lwdiv,utoa@v
 11499  0159F2  C118  F125         	movff	?___lwdiv+1,utoa@v+1
 11500  0159F6  0101               	movlb	1	; () banked
 11501  0159F8  4B1E               	infsnz	utoa@buf& (0+255),f,b
 11502  0159FA  2B1F               	incf	(utoa@buf+1)& (0+255),f,b
 11503                           
 11504                           ; BSR set to: 1
 11505  0159FC  5124               	movf	utoa@v& (0+255),w,b
 11506  0159FE  1125               	iorwf	(utoa@v+1)& (0+255),w,b
 11507  015A00  A4D8               	btfss	status,2,c
 11508  015A02  D7EB               	goto	l1846
 11509                           
 11510                           ; BSR set to: 1
 11511                           
 11512                           ; BSR set to: 1
 11513  015A04  C11E  FFD9         	movff	utoa@buf,fsr2l
 11514  015A08  C11F  FFDA         	movff	utoa@buf+1,fsr2h
 11515  015A0C  0E00               	movlw	0
 11516  015A0E  6EDF               	movwf	indf2,c
 11517                           
 11518                           ; BSR set to: 1
 11519  015A10  071E               	decf	utoa@buf& (0+255),f,b
 11520  015A12  A0D8               	btfss	status,0,c
 11521  015A14  071F               	decf	(utoa@buf+1)& (0+255),f,b
 11522  015A16                     
 11523                           ; BSR set to: 1
 11524                           
 11525                           ; BSR set to: 1
 11526  015A16  C120  F117         	movff	utoa@val,___lwmod@dividend
 11527  015A1A  C121  F118         	movff	utoa@val+1,___lwmod@dividend+1
 11528  015A1E  C122  F119         	movff	utoa@base,___lwmod@divisor
 11529  015A22  C123  F11A         	movff	utoa@base+1,___lwmod@divisor+1
 11530  015A26  ECEC  F0B4         	call	___lwmod	;wreg free
 11531  015A2A  0101               	movlb	1	; () banked
 11532  015A2C  5117               	movf	?___lwmod& (0+255),w,b
 11533  015A2E  6F26               	movwf	utoa@c& (0+255),b
 11534                           
 11535                           ; BSR set to: 1
 11536  015A30  C120  F117         	movff	utoa@val,___lwdiv@dividend
 11537  015A34  C121  F118         	movff	utoa@val+1,___lwdiv@dividend+1
 11538  015A38  C122  F119         	movff	utoa@base,___lwdiv@divisor
 11539  015A3C  C123  F11A         	movff	utoa@base+1,___lwdiv@divisor+1
 11540  015A40  ECBB  F0B3         	call	___lwdiv	;wreg free
 11541  015A44  C117  F120         	movff	?___lwdiv,utoa@val
 11542  015A48  C118  F121         	movff	?___lwdiv+1,utoa@val+1
 11543  015A4C  0E09               	movlw	9
 11544  015A4E  0101               	movlb	1	; () banked
 11545  015A50  6526               	cpfsgt	utoa@c& (0+255),b
 11546  015A52  D002               	goto	l1849
 11547                           
 11548                           ; BSR set to: 1
 11549  015A54  0E07               	movlw	7
 11550  015A56  2726               	addwf	utoa@c& (0+255),f,b
 11551  015A58                     l1849:
 11552                           
 11553                           ; BSR set to: 1
 11554  015A58  0E30               	movlw	48
 11555  015A5A  2726               	addwf	utoa@c& (0+255),f,b
 11556                           
 11557                           ; BSR set to: 1
 11558  015A5C  C11E  FFD9         	movff	utoa@buf,fsr2l
 11559  015A60  C11F  FFDA         	movff	utoa@buf+1,fsr2h
 11560  015A64  C126  FFDF         	movff	utoa@c,indf2
 11561                           
 11562                           ; BSR set to: 1
 11563  015A68  071E               	decf	utoa@buf& (0+255),f,b
 11564  015A6A  A0D8               	btfss	status,0,c
 11565  015A6C  071F               	decf	(utoa@buf+1)& (0+255),f,b
 11566                           
 11567                           ; BSR set to: 1
 11568  015A6E  5120               	movf	utoa@val& (0+255),w,b
 11569  015A70  1121               	iorwf	(utoa@val+1)& (0+255),w,b
 11570  015A72  A4D8               	btfss	status,2,c
 11571  015A74  D7D0               	goto	l1848
 11572                           
 11573                           ; BSR set to: 1
 11574                           ;	Return value of _utoa is never used
 11575                           
 11576                           ; BSR set to: 1
 11577  015A76  4B1E               	infsnz	utoa@buf& (0+255),f,b
 11578  015A78  2B1F               	incf	(utoa@buf+1)& (0+255),f,b
 11579  015A7A  0012               	return	
 11580  015A7C                     __end_of_utoa:
 11581                           	opt stack 0
 11582                           tblptru	equ	0xFF8
 11583                           tblptrh	equ	0xFF7
 11584                           tblptrl	equ	0xFF6
 11585                           tablat	equ	0xFF5
 11586                           prodl	equ	0xFF3
 11587                           intcon	equ	0xFF2
 11588                           indf0	equ	0xFEF
 11589                           postinc0	equ	0xFEE
 11590                           fsr0h	equ	0xFEA
 11591                           fsr0l	equ	0xFE9
 11592                           wreg	equ	0xFE8
 11593                           indf1	equ	0xFE7
 11594                           postdec1	equ	0xFE5
 11595                           fsr1h	equ	0xFE2
 11596                           fsr1l	equ	0xFE1
 11597                           indf2	equ	0xFDF
 11598                           postinc2	equ	0xFDE
 11599                           fsr2h	equ	0xFDA
 11600                           fsr2l	equ	0xFD9
 11601                           status	equ	0xFD8
 11602                           
 11603 ;; *************** function ___lwmod *****************
 11604 ;; Defined at:
 11605 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
 11606 ;; Parameters:    Size  Location     Type
 11607 ;;  dividend        2   23[BANK1 ] unsigned int 
 11608 ;;  divisor         2   25[BANK1 ] unsigned int 
 11609 ;; Auto vars:     Size  Location     Type
 11610 ;;  counter         1   27[BANK1 ] unsigned char 
 11611 ;; Return value:  Size  Location     Type
 11612 ;;                  2   23[BANK1 ] unsigned int 
 11613 ;; Registers used:
 11614 ;;		wreg, status,2, status,0
 11615 ;; Tracked objects:
 11616 ;;		On entry : 0/0
 11617 ;;		On exit  : 0/0
 11618 ;;		Unchanged: 0/0
 11619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11620 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11621 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11623 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11624 ;;Total ram usage:        5 bytes
 11625 ;; Hardware stack levels used:    1
 11626 ;; Hardware stack levels required when called:   14
 11627 ;; This function calls:
 11628 ;;		Nothing
 11629 ;; This function is called by:
 11630 ;;		_utoa
 11631 ;; This function uses a non-reentrant model
 11632 ;;
 11633                           
 11634                           	psect	text16
 11635  0169D8                     __ptext16:
 11636                           	opt stack 0
 11637  0169D8                     ___lwmod:
 11638                           	opt stack 12
 11639                           
 11640                           ; BSR set to: 1
 11641                           ;incstack = 0
 11642  0169D8  0101               	movlb	1	; () banked
 11643  0169DA  5119               	movf	___lwmod@divisor& (0+255),w,b
 11644  0169DC  111A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 11645  0169DE  B4D8               	btfsc	status,2,c
 11646  0169E0  D018               	goto	l1944
 11647                           
 11648                           ; BSR set to: 1
 11649  0169E2  0E01               	movlw	1
 11650  0169E4  6F1B               	movwf	___lwmod@counter& (0+255),b
 11651  0169E6  D004               	goto	l1939
 11652  0169E8                     
 11653                           ; BSR set to: 1
 11654                           
 11655                           ; BSR set to: 1
 11656  0169E8  90D8               	bcf	status,0,c
 11657  0169EA  3719               	rlcf	___lwmod@divisor& (0+255),f,b
 11658  0169EC  371A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 11659  0169EE  2B1B               	incf	___lwmod@counter& (0+255),f,b
 11660  0169F0                     l1939:
 11661                           
 11662                           ; BSR set to: 1
 11663                           
 11664                           ; BSR set to: 1
 11665  0169F0  AF1A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 11666  0169F2  D7FA               	goto	l1940
 11667  0169F4                     u13010:
 11668                           
 11669                           ; BSR set to: 1
 11670                           
 11671                           ; BSR set to: 1
 11672                           
 11673                           ; BSR set to: 1
 11674  0169F4  5119               	movf	___lwmod@divisor& (0+255),w,b
 11675  0169F6  5D17               	subwf	___lwmod@dividend& (0+255),w,b
 11676  0169F8  511A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11677  0169FA  5918               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 11678  0169FC  A0D8               	btfss	status,0,c
 11679  0169FE  D004               	goto	l1943
 11680                           
 11681                           ; BSR set to: 1
 11682  016A00  5119               	movf	___lwmod@divisor& (0+255),w,b
 11683  016A02  5F17               	subwf	___lwmod@dividend& (0+255),f,b
 11684  016A04  511A               	movf	(___lwmod@divisor+1)& (0+255),w,b
 11685  016A06  5B18               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 11686  016A08                     l1943:
 11687                           
 11688                           ; BSR set to: 1
 11689                           
 11690                           ; BSR set to: 1
 11691  016A08  90D8               	bcf	status,0,c
 11692  016A0A  331A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 11693  016A0C  3319               	rrcf	___lwmod@divisor& (0+255),f,b
 11694                           
 11695                           ; BSR set to: 1
 11696  016A0E  2F1B               	decfsz	___lwmod@counter& (0+255),f,b
 11697  016A10  D7F1               	goto	u13010
 11698  016A12                     l1944:
 11699                           
 11700                           ; BSR set to: 1
 11701                           
 11702                           ; BSR set to: 1
 11703  016A12  C117  F117         	movff	___lwmod@dividend,?___lwmod
 11704  016A16  C118  F118         	movff	___lwmod@dividend+1,?___lwmod+1
 11705                           
 11706                           ; BSR set to: 1
 11707  016A1A  0012               	return		;funcret
 11708  016A1C                     __end_of___lwmod:
 11709                           	opt stack 0
 11710                           tblptru	equ	0xFF8
 11711                           tblptrh	equ	0xFF7
 11712                           tblptrl	equ	0xFF6
 11713                           tablat	equ	0xFF5
 11714                           prodl	equ	0xFF3
 11715                           intcon	equ	0xFF2
 11716                           indf0	equ	0xFEF
 11717                           postinc0	equ	0xFEE
 11718                           fsr0h	equ	0xFEA
 11719                           fsr0l	equ	0xFE9
 11720                           wreg	equ	0xFE8
 11721                           indf1	equ	0xFE7
 11722                           postdec1	equ	0xFE5
 11723                           fsr1h	equ	0xFE2
 11724                           fsr1l	equ	0xFE1
 11725                           indf2	equ	0xFDF
 11726                           postinc2	equ	0xFDE
 11727                           fsr2h	equ	0xFDA
 11728                           fsr2l	equ	0xFD9
 11729                           status	equ	0xFD8
 11730                           
 11731 ;; *************** function ___lwdiv *****************
 11732 ;; Defined at:
 11733 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
 11734 ;; Parameters:    Size  Location     Type
 11735 ;;  dividend        2   23[BANK1 ] unsigned int 
 11736 ;;  divisor         2   25[BANK1 ] unsigned int 
 11737 ;; Auto vars:     Size  Location     Type
 11738 ;;  quotient        2   28[BANK1 ] unsigned int 
 11739 ;;  counter         1   27[BANK1 ] unsigned char 
 11740 ;; Return value:  Size  Location     Type
 11741 ;;                  2   23[BANK1 ] unsigned int 
 11742 ;; Registers used:
 11743 ;;		wreg, status,2, status,0
 11744 ;; Tracked objects:
 11745 ;;		On entry : 0/0
 11746 ;;		On exit  : 0/0
 11747 ;;		Unchanged: 0/0
 11748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11749 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11750 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11752 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11753 ;;Total ram usage:        7 bytes
 11754 ;; Hardware stack levels used:    1
 11755 ;; Hardware stack levels required when called:   14
 11756 ;; This function calls:
 11757 ;;		Nothing
 11758 ;; This function is called by:
 11759 ;;		_utoa
 11760 ;; This function uses a non-reentrant model
 11761 ;;
 11762                           
 11763                           	psect	text17
 11764  016776                     __ptext17:
 11765                           	opt stack 0
 11766  016776                     ___lwdiv:
 11767                           	opt stack 12
 11768                           
 11769                           ; BSR set to: 1
 11770                           ;incstack = 0
 11771  016776  0E00               	movlw	0
 11772  016778  0101               	movlb	1	; () banked
 11773  01677A  6F1D               	movwf	(___lwdiv@quotient+1)& (0+255),b
 11774  01677C  0E00               	movlw	0
 11775  01677E  6F1C               	movwf	___lwdiv@quotient& (0+255),b
 11776                           
 11777                           ; BSR set to: 1
 11778  016780  5119               	movf	___lwdiv@divisor& (0+255),w,b
 11779  016782  111A               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 11780  016784  B4D8               	btfsc	status,2,c
 11781  016786  D01C               	goto	l1934
 11782                           
 11783                           ; BSR set to: 1
 11784  016788  0E01               	movlw	1
 11785  01678A  6F1B               	movwf	___lwdiv@counter& (0+255),b
 11786  01678C  D004               	goto	l1929
 11787  01678E                     
 11788                           ; BSR set to: 1
 11789                           
 11790                           ; BSR set to: 1
 11791  01678E  90D8               	bcf	status,0,c
 11792  016790  3719               	rlcf	___lwdiv@divisor& (0+255),f,b
 11793  016792  371A               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 11794  016794  2B1B               	incf	___lwdiv@counter& (0+255),f,b
 11795  016796                     l1929:
 11796                           
 11797                           ; BSR set to: 1
 11798                           
 11799                           ; BSR set to: 1
 11800  016796  AF1A               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 11801  016798  D7FA               	goto	l1930
 11802  01679A                     u12980:
 11803                           
 11804                           ; BSR set to: 1
 11805                           
 11806                           ; BSR set to: 1
 11807                           
 11808                           ; BSR set to: 1
 11809  01679A  90D8               	bcf	status,0,c
 11810  01679C  371C               	rlcf	___lwdiv@quotient& (0+255),f,b
 11811  01679E  371D               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 11812                           
 11813                           ; BSR set to: 1
 11814  0167A0  5119               	movf	___lwdiv@divisor& (0+255),w,b
 11815  0167A2  5D17               	subwf	___lwdiv@dividend& (0+255),w,b
 11816  0167A4  511A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11817  0167A6  5918               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 11818  0167A8  A0D8               	btfss	status,0,c
 11819  0167AA  D005               	goto	l1933
 11820                           
 11821                           ; BSR set to: 1
 11822  0167AC  5119               	movf	___lwdiv@divisor& (0+255),w,b
 11823  0167AE  5F17               	subwf	___lwdiv@dividend& (0+255),f,b
 11824  0167B0  511A               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 11825  0167B2  5B18               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 11826                           
 11827                           ; BSR set to: 1
 11828  0167B4  811C               	bsf	___lwdiv@quotient& (0+255),0,b
 11829  0167B6                     l1933:
 11830                           
 11831                           ; BSR set to: 1
 11832                           
 11833                           ; BSR set to: 1
 11834  0167B6  90D8               	bcf	status,0,c
 11835  0167B8  331A               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 11836  0167BA  3319               	rrcf	___lwdiv@divisor& (0+255),f,b
 11837                           
 11838                           ; BSR set to: 1
 11839  0167BC  2F1B               	decfsz	___lwdiv@counter& (0+255),f,b
 11840  0167BE  D7ED               	goto	u12980
 11841  0167C0                     l1934:
 11842                           
 11843                           ; BSR set to: 1
 11844                           
 11845                           ; BSR set to: 1
 11846  0167C0  C11C  F117         	movff	___lwdiv@quotient,?___lwdiv
 11847  0167C4  C11D  F118         	movff	___lwdiv@quotient+1,?___lwdiv+1
 11848                           
 11849                           ; BSR set to: 1
 11850  0167C8  0012               	return		;funcret
 11851  0167CA                     __end_of___lwdiv:
 11852                           	opt stack 0
 11853                           tblptru	equ	0xFF8
 11854                           tblptrh	equ	0xFF7
 11855                           tblptrl	equ	0xFF6
 11856                           tablat	equ	0xFF5
 11857                           prodl	equ	0xFF3
 11858                           intcon	equ	0xFF2
 11859                           indf0	equ	0xFEF
 11860                           postinc0	equ	0xFEE
 11861                           fsr0h	equ	0xFEA
 11862                           fsr0l	equ	0xFE9
 11863                           wreg	equ	0xFE8
 11864                           indf1	equ	0xFE7
 11865                           postdec1	equ	0xFE5
 11866                           fsr1h	equ	0xFE2
 11867                           fsr1l	equ	0xFE1
 11868                           indf2	equ	0xFDF
 11869                           postinc2	equ	0xFDE
 11870                           fsr2h	equ	0xFDA
 11871                           fsr2l	equ	0xFD9
 11872                           status	equ	0xFD8
 11873                           
 11874 ;; *************** function _strcat *****************
 11875 ;; Defined at:
 11876 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
 11877 ;; Parameters:    Size  Location     Type
 11878 ;;  to              2   23[BANK1 ] PTR unsigned char 
 11879 ;;		 -> getRevisionIDString@returnString(4), terminal_textAttributes@output_buff(15), 
 11880 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 11881 ;;		 -> getRevisionIDString@MinRevStr(2), STR_39(2), STR_38(3), STR_37(3), 
 11882 ;;		 -> STR_36(3), STR_35(3), STR_34(3), STR_33(3), 
 11883 ;;		 -> STR_32(3), STR_31(3), STR_30(3), STR_29(2), 
 11884 ;;		 -> STR_28(3), STR_27(3), STR_26(3), STR_25(3), 
 11885 ;;		 -> STR_24(3), STR_23(3), STR_22(3), STR_21(3), 
 11886 ;;		 -> STR_20(3), STR_19(2), STR_18(2), STR_17(2), 
 11887 ;;		 -> STR_16(2), STR_15(2), STR_14(2), STR_13(2), 
 11888 ;;		 -> STR_12(2), 
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 11891 ;;		 -> getRevisionIDString@returnString(4), terminal_textAttributes@output_buff(15), 
 11892 ;; Return value:  Size  Location     Type
 11893 ;;                  2   23[BANK1 ] PTR unsigned char 
 11894 ;; Registers used:
 11895 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 11896 ;; Tracked objects:
 11897 ;;		On entry : 0/0
 11898 ;;		On exit  : 0/0
 11899 ;;		Unchanged: 0/0
 11900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11901 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11902 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11904 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11905 ;;Total ram usage:        6 bytes
 11906 ;; Hardware stack levels used:    1
 11907 ;; Hardware stack levels required when called:   14
 11908 ;; This function calls:
 11909 ;;		Nothing
 11910 ;; This function is called by:
 11911 ;;		_terminal_textAttributes
 11912 ;;		_getRevisionIDString
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text18
 11917  0165B0                     __ptext18:
 11918                           	opt stack 0
 11919  0165B0                     _strcat:
 11920                           	opt stack 14
 11921                           
 11922                           ; BSR set to: 1
 11923                           ;incstack = 0
 11924  0165B0  C117  F11B         	movff	strcat@to,strcat@cp
 11925  0165B4  C118  F11C         	movff	strcat@to+1,strcat@cp+1
 11926  0165B8  D003               	goto	l2101
 11927  0165BA  0101               	movlb	1	; () banked
 11928  0165BC  4B1B               	infsnz	strcat@cp& (0+255),f,b
 11929  0165BE  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 11930  0165C0                     l2101:
 11931                           
 11932                           ; BSR set to: 1
 11933  0165C0  C11B  FFD9         	movff	strcat@cp,fsr2l
 11934  0165C4  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 11935  0165C8  50DF               	movf	indf2,w,c
 11936  0165CA  B4D8               	btfsc	status,2,c
 11937  0165CC  D006               	goto	l2104
 11938  0165CE  D7F5               	goto	l2102
 11939  0165D0  0101               	movlb	1	; () banked
 11940  0165D2  4B1B               	infsnz	strcat@cp& (0+255),f,b
 11941  0165D4  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
 11942  0165D6  4B19               	infsnz	strcat@from& (0+255),f,b
 11943  0165D8  2B1A               	incf	(strcat@from+1)& (0+255),f,b
 11944  0165DA                     l2104:
 11945                           
 11946                           ; BSR set to: 1
 11947  0165DA  C119  FFF6         	movff	strcat@from,tblptrl
 11948  0165DE  C11A  FFF7         	movff	strcat@from+1,tblptrh
 11949  0165E2  0E00               	movlw	low (__mediumconst shr (0+16))
 11950  0165E4  6EF8               	movwf	tblptru,c
 11951  0165E6  C11B  FFD9         	movff	strcat@cp,fsr2l
 11952  0165EA  C11C  FFDA         	movff	strcat@cp+1,fsr2h
 11953  0165EE  0E0D               	movlw	(high __ramtop+-1)
 11954  0165F0  64F7               	cpfsgt	tblptrh,c
 11955  0165F2  D003               	bra	u12927
 11956  0165F4  0008               	tblrd		*
 11957  0165F6  50F5               	movf	tablat,w,c
 11958  0165F8  D005               	bra	u12920
 11959  0165FA                     u12927:
 11960  0165FA  CFF6 FFE9          	movff	tblptrl,fsr0l
 11961  0165FE  CFF7 FFEA          	movff	tblptrh,fsr0h
 11962  016602  50EF               	movf	indf0,w,c
 11963  016604                     u12920:
 11964  016604  6EDF               	movwf	indf2,c
 11965  016606  50DF               	movf	indf2,w,c
 11966  016608  B4D8               	btfsc	status,2,c
 11967  01660A  0012               	return	
 11968  01660C  D7E1               	goto	l2105
 11969  01660E                     __end_of_strcat:
 11970                           	opt stack 0
 11971                           tblptru	equ	0xFF8
 11972                           tblptrh	equ	0xFF7
 11973                           tblptrl	equ	0xFF6
 11974                           tablat	equ	0xFF5
 11975                           prodl	equ	0xFF3
 11976                           intcon	equ	0xFF2
 11977                           indf0	equ	0xFEF
 11978                           postinc0	equ	0xFEE
 11979                           fsr0h	equ	0xFEA
 11980                           fsr0l	equ	0xFE9
 11981                           wreg	equ	0xFE8
 11982                           indf1	equ	0xFE7
 11983                           postdec1	equ	0xFE5
 11984                           fsr1h	equ	0xFE2
 11985                           fsr1l	equ	0xFE1
 11986                           indf2	equ	0xFDF
 11987                           postinc2	equ	0xFDE
 11988                           fsr2h	equ	0xFDA
 11989                           fsr2l	equ	0xFD9
 11990                           status	equ	0xFD8
 11991                           
 11992 ;; *************** function _getMinorRevisionID *****************
 11993 ;; Defined at:
 11994 ;;		line 23 in file "device_IDs.c"
 11995 ;; Parameters:    Size  Location     Type
 11996 ;;		None
 11997 ;; Auto vars:     Size  Location     Type
 11998 ;;  REVID_RAW       2   34[BANK1 ] unsigned int 
 11999 ;; Return value:  Size  Location     Type
 12000 ;;                  1    wreg      unsigned char 
 12001 ;; Registers used:
 12002 ;;		wreg, status,2, status,0, cstack
 12003 ;; Tracked objects:
 12004 ;;		On entry : 0/0
 12005 ;;		On exit  : 0/0
 12006 ;;		Unchanged: 0/0
 12007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12009 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12011 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12012 ;;Total ram usage:        2 bytes
 12013 ;; Hardware stack levels used:    1
 12014 ;; Hardware stack levels required when called:   16
 12015 ;; This function calls:
 12016 ;;		_FLASH_ReadWord
 12017 ;; This function is called by:
 12018 ;;		_ringBufferLUT
 12019 ;; This function uses a non-reentrant model
 12020 ;;
 12021                           
 12022                           	psect	text19
 12023  016DDE                     __ptext19:
 12024                           	opt stack 0
 12025  016DDE                     _getMinorRevisionID:
 12026                           	opt stack 12
 12027                           
 12028                           ;device_IDs.c: 26: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12029                           
 12030                           ;incstack = 0
 12031  016DDE  0EFC               	movlw	252
 12032  016DE0  0101               	movlb	1	; () banked
 12033  016DE2  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12034  016DE4  0EFF               	movlw	255
 12035  016DE6  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12036  016DE8  0E3F               	movlw	63
 12037  016DEA  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12038  016DEC  0E00               	movlw	0
 12039  016DEE  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12040  016DF0  EC0E  F0B5         	call	_FLASH_ReadWord	;wreg free
 12041  016DF4  C11B  F122         	movff	?_FLASH_ReadWord,getMinorRevisionID@REVID_RAW
 12042  016DF8  C11C  F123         	movff	?_FLASH_ReadWord+1,getMinorRevisionID@REVID_RAW+1
 12043                           
 12044                           ;device_IDs.c: 29: return REVID_RAW & 0b11111;
 12045  016DFC  0101               	movlb	1	; () banked
 12046  016DFE  5122               	movf	getMinorRevisionID@REVID_RAW& (0+255),w,b
 12047  016E00  0B1F               	andlw	31
 12048  016E02  0012               	return	
 12049  016E04                     __end_of_getMinorRevisionID:
 12050                           	opt stack 0
 12051                           tblptru	equ	0xFF8
 12052                           tblptrh	equ	0xFF7
 12053                           tblptrl	equ	0xFF6
 12054                           tablat	equ	0xFF5
 12055                           prodl	equ	0xFF3
 12056                           intcon	equ	0xFF2
 12057                           indf0	equ	0xFEF
 12058                           postinc0	equ	0xFEE
 12059                           fsr0h	equ	0xFEA
 12060                           fsr0l	equ	0xFE9
 12061                           wreg	equ	0xFE8
 12062                           indf1	equ	0xFE7
 12063                           postdec1	equ	0xFE5
 12064                           fsr1h	equ	0xFE2
 12065                           fsr1l	equ	0xFE1
 12066                           indf2	equ	0xFDF
 12067                           postinc2	equ	0xFDE
 12068                           fsr2h	equ	0xFDA
 12069                           fsr2l	equ	0xFD9
 12070                           status	equ	0xFD8
 12071                           
 12072 ;; *************** function _getMajorRevisionID *****************
 12073 ;; Defined at:
 12074 ;;		line 12 in file "device_IDs.c"
 12075 ;; Parameters:    Size  Location     Type
 12076 ;;		None
 12077 ;; Auto vars:     Size  Location     Type
 12078 ;;  REVID_RAW       2   37[BANK1 ] unsigned int 
 12079 ;; Return value:  Size  Location     Type
 12080 ;;                  1    wreg      unsigned char 
 12081 ;; Registers used:
 12082 ;;		wreg, status,2, status,0, cstack
 12083 ;; Tracked objects:
 12084 ;;		On entry : 0/0
 12085 ;;		On exit  : 0/0
 12086 ;;		Unchanged: 0/0
 12087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12089 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12090 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12091 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12092 ;;Total ram usage:        5 bytes
 12093 ;; Hardware stack levels used:    1
 12094 ;; Hardware stack levels required when called:   16
 12095 ;; This function calls:
 12096 ;;		_FLASH_ReadWord
 12097 ;; This function is called by:
 12098 ;;		_ringBufferLUT
 12099 ;; This function uses a non-reentrant model
 12100 ;;
 12101                           
 12102                           	psect	text20
 12103  016B5C                     __ptext20:
 12104                           	opt stack 0
 12105  016B5C                     _getMajorRevisionID:
 12106                           	opt stack 12
 12107                           
 12108                           ;device_IDs.c: 15: uint16_t REVID_RAW = FLASH_ReadWord(0x3FFFFC);
 12109                           
 12110                           ; BSR set to: 1
 12111                           ;incstack = 0
 12112  016B5C  0EFC               	movlw	252
 12113  016B5E  0101               	movlb	1	; () banked
 12114  016B60  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12115  016B62  0EFF               	movlw	255
 12116  016B64  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12117  016B66  0E3F               	movlw	63
 12118  016B68  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12119  016B6A  0E00               	movlw	0
 12120  016B6C  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12121  016B6E  EC0E  F0B5         	call	_FLASH_ReadWord	;wreg free
 12122  016B72  C11B  F125         	movff	?_FLASH_ReadWord,getMajorRevisionID@REVID_RAW
 12123  016B76  C11C  F126         	movff	?_FLASH_ReadWord+1,getMajorRevisionID@REVID_RAW+1
 12124                           
 12125                           ;device_IDs.c: 18: return (REVID_RAW >> 6) & 0b11111;
 12126  016B7A  C125  F122         	movff	getMajorRevisionID@REVID_RAW,??_getMajorRevisionID
 12127  016B7E  C126  F123         	movff	getMajorRevisionID@REVID_RAW+1,??_getMajorRevisionID+1
 12128  016B82  0E06               	movlw	6
 12129  016B84  0101               	movlb	1	; () banked
 12130  016B86  6F24               	movwf	(??_getMajorRevisionID+2)& (0+255),b
 12131  016B88                     u13985:
 12132  016B88  90D8               	bcf	status,0,c
 12133  016B8A  3323               	rrcf	(??_getMajorRevisionID+1)& (0+255),f,b
 12134  016B8C  3322               	rrcf	??_getMajorRevisionID& (0+255),f,b
 12135  016B8E  2F24               	decfsz	(??_getMajorRevisionID+2)& (0+255),f,b
 12136  016B90  D7FB               	goto	u13985
 12137  016B92  5122               	movf	??_getMajorRevisionID& (0+255),w,b
 12138  016B94  0B1F               	andlw	31
 12139  016B96  0012               	return	
 12140  016B98                     __end_of_getMajorRevisionID:
 12141                           	opt stack 0
 12142                           tblptru	equ	0xFF8
 12143                           tblptrh	equ	0xFF7
 12144                           tblptrl	equ	0xFF6
 12145                           tablat	equ	0xFF5
 12146                           prodl	equ	0xFF3
 12147                           intcon	equ	0xFF2
 12148                           indf0	equ	0xFEF
 12149                           postinc0	equ	0xFEE
 12150                           fsr0h	equ	0xFEA
 12151                           fsr0l	equ	0xFE9
 12152                           wreg	equ	0xFE8
 12153                           indf1	equ	0xFE7
 12154                           postdec1	equ	0xFE5
 12155                           fsr1h	equ	0xFE2
 12156                           fsr1l	equ	0xFE1
 12157                           indf2	equ	0xFDF
 12158                           postinc2	equ	0xFDE
 12159                           fsr2h	equ	0xFDA
 12160                           fsr2l	equ	0xFD9
 12161                           status	equ	0xFD8
 12162                           
 12163 ;; *************** function _getDeviceIDString *****************
 12164 ;; Defined at:
 12165 ;;		line 34 in file "device_IDs.c"
 12166 ;; Parameters:    Size  Location     Type
 12167 ;;  inputDevID      2   29[BANK1 ] unsigned int 
 12168 ;; Auto vars:     Size  Location     Type
 12169 ;;  returnString   12   33[BANK1 ] unsigned char [12]
 12170 ;; Return value:  Size  Location     Type
 12171 ;;                  2   29[BANK1 ] PTR unsigned char 
 12172 ;; Registers used:
 12173 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12174 ;; Tracked objects:
 12175 ;;		On entry : 0/0
 12176 ;;		On exit  : 0/0
 12177 ;;		Unchanged: 0/0
 12178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12179 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12180 ;;      Locals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12181 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12182 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12183 ;;Total ram usage:       16 bytes
 12184 ;; Hardware stack levels used:    1
 12185 ;; Hardware stack levels required when called:   15
 12186 ;; This function calls:
 12187 ;;		_strcpy
 12188 ;; This function is called by:
 12189 ;;		_ringBufferLUT
 12190 ;; This function uses a non-reentrant model
 12191 ;;
 12192                           
 12193                           	psect	text21
 12194  015DEA                     __ptext21:
 12195                           	opt stack 0
 12196  015DEA                     _getDeviceIDString:
 12197                           	opt stack 13
 12198                           
 12199                           ;device_IDs.c: 37: char returnString[12];
 12200                           ;device_IDs.c: 41: switch (inputDevID) {
 12201                           
 12202                           ; BSR set to: 1
 12203                           ;incstack = 0
 12204  015DEA  D024               	goto	l1226
 12205  015DEC                     
 12206                           ;device_IDs.c: 44: strcpy(returnString, "PIC18F67K40");
 12207  015DEC  0E21               	movlw	low getDeviceIDString@returnString
 12208  015DEE  0101               	movlb	1	; () banked
 12209  015DF0  6F17               	movwf	strcpy@to& (0+255),b
 12210  015DF2  0E01               	movlw	high getDeviceIDString@returnString
 12211  015DF4  6F18               	movwf	(strcpy@to+1)& (0+255),b
 12212  015DF6  0E43               	movlw	low STR_117
 12213  015DF8  6F19               	movwf	strcpy@from& (0+255),b
 12214  015DFA  0EFF               	movlw	high STR_117
 12215  015DFC  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 12216  015DFE  ECA4  F0B4         	call	_strcpy	;wreg free
 12217                           
 12218                           ;device_IDs.c: 45: break;
 12219  015E02  D02F               	goto	l1228
 12220  015E04                     
 12221                           ;device_IDs.c: 48: strcpy(returnString, "PIC18LF67K40");
 12222  015E04  0E21               	movlw	low getDeviceIDString@returnString
 12223  015E06  0101               	movlb	1	; () banked
 12224  015E08  6F17               	movwf	strcpy@to& (0+255),b
 12225  015E0A  0E01               	movlw	high getDeviceIDString@returnString
 12226  015E0C  6F18               	movwf	(strcpy@to+1)& (0+255),b
 12227  015E0E  0E0F               	movlw	low STR_118
 12228  015E10  6F19               	movwf	strcpy@from& (0+255),b
 12229  015E12  0EFF               	movlw	high STR_118
 12230  015E14  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 12231  015E16  ECA4  F0B4         	call	_strcpy	;wreg free
 12232                           
 12233                           ;device_IDs.c: 49: break;
 12234  015E1A  D023               	goto	l1228
 12235  015E1C                     
 12236                           ;device_IDs.c: 52: strcpy(returnString, "Undefined");
 12237  015E1C  0E21               	movlw	low getDeviceIDString@returnString
 12238  015E1E  0101               	movlb	1	; () banked
 12239  015E20  6F17               	movwf	strcpy@to& (0+255),b
 12240  015E22  0E01               	movlw	high getDeviceIDString@returnString
 12241  015E24  6F18               	movwf	(strcpy@to+1)& (0+255),b
 12242  015E26  0E71               	movlw	low STR_119
 12243  015E28  6F19               	movwf	strcpy@from& (0+255),b
 12244  015E2A  0EFF               	movlw	high STR_119
 12245  015E2C  6F1A               	movwf	(strcpy@from+1)& (0+255),b
 12246  015E2E  ECA4  F0B4         	call	_strcpy	;wreg free
 12247                           
 12248                           ;device_IDs.c: 55: }
 12249                           
 12250                           ;device_IDs.c: 53: break;
 12251  015E32  D017               	goto	l1228
 12252  015E34                     l1226:
 12253  015E34  C11D  F11F         	movff	getDeviceIDString@inputDevID,??_getDeviceIDString
 12254  015E38  C11E  F120         	movff	getDeviceIDString@inputDevID+1,??_getDeviceIDString+1
 12255                           
 12256                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 12257                           ; Switch size 1, requested type "space"
 12258                           ; Number of cases is 2, Range of values is 106 to 107
 12259                           ; switch strategies available:
 12260                           ; Name         Instructions Cycles
 12261                           ; simple_byte            7     4 (average)
 12262                           ;	Chosen strategy is simple_byte
 12263  015E3C  0101               	movlb	1	; () banked
 12264  015E3E  5120               	movf	(??_getDeviceIDString+1)& (0+255),w,b
 12265  015E40  0A6A               	xorlw	106	; case 106
 12266  015E42  B4D8               	btfsc	status,2,c
 12267  015E44  D004               	goto	l15179
 12268  015E46  0A01               	xorlw	1	; case 107
 12269  015E48  B4D8               	btfsc	status,2,c
 12270  015E4A  D006               	goto	l15181
 12271  015E4C  D7E7               	goto	l1230
 12272  015E4E                     l15179:
 12273                           
 12274                           ; BSR set to: 1
 12275                           ; Switch size 1, requested type "space"
 12276                           ; Number of cases is 1, Range of values is 192 to 192
 12277                           ; switch strategies available:
 12278                           ; Name         Instructions Cycles
 12279                           ; simple_byte            4     3 (average)
 12280                           ;	Chosen strategy is simple_byte
 12281  015E4E  511F               	movf	??_getDeviceIDString& (0+255),w,b
 12282  015E50  0AC0               	xorlw	192	; case 192
 12283  015E52  B4D8               	btfsc	status,2,c
 12284  015E54  D7CB               	goto	l1227
 12285  015E56  D7E2               	goto	l1230
 12286  015E58                     l15181:
 12287                           
 12288                           ; BSR set to: 1
 12289                           ; Switch size 1, requested type "space"
 12290                           ; Number of cases is 1, Range of values is 32 to 32
 12291                           ; switch strategies available:
 12292                           ; Name         Instructions Cycles
 12293                           ; simple_byte            4     3 (average)
 12294                           ;	Chosen strategy is simple_byte
 12295  015E58  511F               	movf	??_getDeviceIDString& (0+255),w,b
 12296  015E5A  0A20               	xorlw	32	; case 32
 12297  015E5C  B4D8               	btfsc	status,2,c
 12298  015E5E  D7D2               	goto	l1229
 12299  015E60  D7DD               	goto	l1230
 12300  015E62                     l1228:
 12301                           
 12302                           ;device_IDs.c: 58: return *returnString;
 12303                           
 12304                           ; BSR set to: 1
 12305  015E62  0101               	movlb	1	; () banked
 12306  015E64  5121               	movf	getDeviceIDString@returnString& (0+255),w,b
 12307  015E66  6F1F               	movwf	??_getDeviceIDString& (0+255),b
 12308  015E68  6B20               	clrf	(??_getDeviceIDString+1)& (0+255),b
 12309  015E6A  C11F  F11D         	movff	??_getDeviceIDString,?_getDeviceIDString
 12310  015E6E  C120  F11E         	movff	??_getDeviceIDString+1,?_getDeviceIDString+1
 12311  015E72  0012               	return	
 12312  015E74                     __end_of_getDeviceIDString:
 12313                           	opt stack 0
 12314                           tblptru	equ	0xFF8
 12315                           tblptrh	equ	0xFF7
 12316                           tblptrl	equ	0xFF6
 12317                           tablat	equ	0xFF5
 12318                           prodl	equ	0xFF3
 12319                           intcon	equ	0xFF2
 12320                           indf0	equ	0xFEF
 12321                           postinc0	equ	0xFEE
 12322                           fsr0h	equ	0xFEA
 12323                           fsr0l	equ	0xFE9
 12324                           wreg	equ	0xFE8
 12325                           indf1	equ	0xFE7
 12326                           postdec1	equ	0xFE5
 12327                           fsr1h	equ	0xFE2
 12328                           fsr1l	equ	0xFE1
 12329                           indf2	equ	0xFDF
 12330                           postinc2	equ	0xFDE
 12331                           fsr2h	equ	0xFDA
 12332                           fsr2l	equ	0xFD9
 12333                           status	equ	0xFD8
 12334                           
 12335 ;; *************** function _strcpy *****************
 12336 ;; Defined at:
 12337 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcpy.c"
 12338 ;; Parameters:    Size  Location     Type
 12339 ;;  to              2   23[BANK1 ] PTR unsigned char 
 12340 ;;		 -> getRevisionIDString@returnString(4), getDeviceIDString@returnString(12), ringBufferLUT@channel_name(22), 
 12341 ;;  from            2   25[BANK1 ] PTR const unsigned char 
 12342 ;;		 -> getRevisionIDString@MajRevStr(1), STR_119(10), STR_118(13), STR_117(12), 
 12343 ;;		 -> STR_68(17), STR_67(22), STR_66(14), STR_65(14), 
 12344 ;;		 -> STR_64(14), STR_63(7), STR_62(6), STR_61(5), 
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  cp              2   27[BANK1 ] PTR unsigned char 
 12347 ;;		 -> getRevisionIDString@returnString(4), getDeviceIDString@returnString(12), ringBufferLUT@channel_name(22), 
 12348 ;; Return value:  Size  Location     Type
 12349 ;;                  2   23[BANK1 ] PTR unsigned char 
 12350 ;; Registers used:
 12351 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 12352 ;; Tracked objects:
 12353 ;;		On entry : 0/0
 12354 ;;		On exit  : 0/0
 12355 ;;		Unchanged: 0/0
 12356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12357 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12358 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12360 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12361 ;;Total ram usage:        6 bytes
 12362 ;; Hardware stack levels used:    1
 12363 ;; Hardware stack levels required when called:   14
 12364 ;; This function calls:
 12365 ;;		Nothing
 12366 ;; This function is called by:
 12367 ;;		_ringBufferLUT
 12368 ;;		_getDeviceIDString
 12369 ;;		_getRevisionIDString
 12370 ;; This function uses a non-reentrant model
 12371 ;;
 12372                           
 12373                           	psect	text22
 12374  016948                     __ptext22:
 12375                           	opt stack 0
 12376  016948                     _strcpy:
 12377                           	opt stack 14
 12378                           
 12379                           ; BSR set to: 1
 12380                           ;incstack = 0
 12381  016948  C117  F11B         	movff	strcpy@to,strcpy@cp
 12382  01694C  C118  F11C         	movff	strcpy@to+1,strcpy@cp+1
 12383  016950  D005               	goto	l2118
 12384  016952  0101               	movlb	1	; () banked
 12385  016954  4B1B               	infsnz	strcpy@cp& (0+255),f,b
 12386  016956  2B1C               	incf	(strcpy@cp+1)& (0+255),f,b
 12387  016958  4B19               	infsnz	strcpy@from& (0+255),f,b
 12388  01695A  2B1A               	incf	(strcpy@from+1)& (0+255),f,b
 12389  01695C                     l2118:
 12390                           
 12391                           ; BSR set to: 1
 12392  01695C  C119  FFF6         	movff	strcpy@from,tblptrl
 12393  016960  C11A  FFF7         	movff	strcpy@from+1,tblptrh
 12394  016964  0E00               	movlw	low (__mediumconst shr (0+16))
 12395  016966  6EF8               	movwf	tblptru,c
 12396  016968  C11B  FFD9         	movff	strcpy@cp,fsr2l
 12397  01696C  C11C  FFDA         	movff	strcpy@cp+1,fsr2h
 12398  016970  0E0D               	movlw	(high __ramtop+-1)
 12399  016972  64F7               	cpfsgt	tblptrh,c
 12400  016974  D003               	bra	u13157
 12401  016976  0008               	tblrd		*
 12402  016978  50F5               	movf	tablat,w,c
 12403  01697A  D005               	bra	u13150
 12404  01697C                     u13157:
 12405  01697C  CFF6 FFE9          	movff	tblptrl,fsr0l
 12406  016980  CFF7 FFEA          	movff	tblptrh,fsr0h
 12407  016984  50EF               	movf	indf0,w,c
 12408  016986                     u13150:
 12409  016986  6EDF               	movwf	indf2,c
 12410  016988  50DF               	movf	indf2,w,c
 12411  01698A  B4D8               	btfsc	status,2,c
 12412  01698C  0012               	return	
 12413  01698E  D7E1               	goto	l2119
 12414  016990                     __end_of_strcpy:
 12415                           	opt stack 0
 12416                           tblptru	equ	0xFF8
 12417                           tblptrh	equ	0xFF7
 12418                           tblptrl	equ	0xFF6
 12419                           tablat	equ	0xFF5
 12420                           prodl	equ	0xFF3
 12421                           intcon	equ	0xFF2
 12422                           indf0	equ	0xFEF
 12423                           postinc0	equ	0xFEE
 12424                           fsr0h	equ	0xFEA
 12425                           fsr0l	equ	0xFE9
 12426                           wreg	equ	0xFE8
 12427                           indf1	equ	0xFE7
 12428                           postdec1	equ	0xFE5
 12429                           fsr1h	equ	0xFE2
 12430                           fsr1l	equ	0xFE1
 12431                           indf2	equ	0xFDF
 12432                           postinc2	equ	0xFDE
 12433                           fsr2h	equ	0xFDA
 12434                           fsr2l	equ	0xFD9
 12435                           status	equ	0xFD8
 12436                           
 12437 ;; *************** function _getDeviceID *****************
 12438 ;; Defined at:
 12439 ;;		line 4 in file "device_IDs.c"
 12440 ;; Parameters:    Size  Location     Type
 12441 ;;		None
 12442 ;; Auto vars:     Size  Location     Type
 12443 ;;		None
 12444 ;; Return value:  Size  Location     Type
 12445 ;;                  2   34[BANK1 ] unsigned int 
 12446 ;; Registers used:
 12447 ;;		wreg, status,2, status,0, cstack
 12448 ;; Tracked objects:
 12449 ;;		On entry : 0/0
 12450 ;;		On exit  : 0/0
 12451 ;;		Unchanged: 0/0
 12452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12453 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12456 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12457 ;;Total ram usage:        2 bytes
 12458 ;; Hardware stack levels used:    1
 12459 ;; Hardware stack levels required when called:   16
 12460 ;; This function calls:
 12461 ;;		_FLASH_ReadWord
 12462 ;; This function is called by:
 12463 ;;		_ringBufferLUT
 12464 ;; This function uses a non-reentrant model
 12465 ;;
 12466                           
 12467                           	psect	text23
 12468  016EE0                     __ptext23:
 12469                           	opt stack 0
 12470  016EE0                     _getDeviceID:
 12471                           	opt stack 12
 12472                           
 12473                           ;device_IDs.c: 8: return FLASH_ReadWord(0x3FFFFE);
 12474                           
 12475                           ;incstack = 0
 12476  016EE0  0EFE               	movlw	254
 12477  016EE2  0101               	movlb	1	; () banked
 12478  016EE4  6F1B               	movwf	FLASH_ReadWord@flashAddr& (0+255),b
 12479  016EE6  0EFF               	movlw	255
 12480  016EE8  6F1C               	movwf	(FLASH_ReadWord@flashAddr+1)& (0+255),b
 12481  016EEA  0E3F               	movlw	63
 12482  016EEC  6F1D               	movwf	(FLASH_ReadWord@flashAddr+2)& (0+255),b
 12483  016EEE  0E00               	movlw	0
 12484  016EF0  6F1E               	movwf	(FLASH_ReadWord@flashAddr+3)& (0+255),b
 12485  016EF2  EC0E  F0B5         	call	_FLASH_ReadWord	;wreg free
 12486  016EF6  C11B  F122         	movff	?_FLASH_ReadWord,?_getDeviceID
 12487  016EFA  C11C  F123         	movff	?_FLASH_ReadWord+1,?_getDeviceID+1
 12488  016EFE  0012               	return	
 12489  016F00                     __end_of_getDeviceID:
 12490                           	opt stack 0
 12491                           tblptru	equ	0xFF8
 12492                           tblptrh	equ	0xFF7
 12493                           tblptrl	equ	0xFF6
 12494                           tablat	equ	0xFF5
 12495                           prodl	equ	0xFF3
 12496                           intcon	equ	0xFF2
 12497                           indf0	equ	0xFEF
 12498                           postinc0	equ	0xFEE
 12499                           fsr0h	equ	0xFEA
 12500                           fsr0l	equ	0xFE9
 12501                           wreg	equ	0xFE8
 12502                           indf1	equ	0xFE7
 12503                           postdec1	equ	0xFE5
 12504                           fsr1h	equ	0xFE2
 12505                           fsr1l	equ	0xFE1
 12506                           indf2	equ	0xFDF
 12507                           postinc2	equ	0xFDE
 12508                           fsr2h	equ	0xFDA
 12509                           fsr2l	equ	0xFD9
 12510                           status	equ	0xFD8
 12511                           
 12512 ;; *************** function _FLASH_ReadWord *****************
 12513 ;; Defined at:
 12514 ;;		line 71 in file "mcc_generated_files/memory.c"
 12515 ;; Parameters:    Size  Location     Type
 12516 ;;  flashAddr       4   27[BANK1 ] unsigned long 
 12517 ;; Auto vars:     Size  Location     Type
 12518 ;;		None
 12519 ;; Return value:  Size  Location     Type
 12520 ;;                  2   27[BANK1 ] unsigned int 
 12521 ;; Registers used:
 12522 ;;		wreg, status,2, status,0, cstack
 12523 ;; Tracked objects:
 12524 ;;		On entry : 0/0
 12525 ;;		On exit  : 0/0
 12526 ;;		Unchanged: 0/0
 12527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12528 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12530 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12531 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12532 ;;Total ram usage:        7 bytes
 12533 ;; Hardware stack levels used:    1
 12534 ;; Hardware stack levels required when called:   15
 12535 ;; This function calls:
 12536 ;;		_FLASH_ReadByte
 12537 ;; This function is called by:
 12538 ;;		_getDeviceID
 12539 ;;		_getMajorRevisionID
 12540 ;;		_getMinorRevisionID
 12541 ;;		_getUserID
 12542 ;; This function uses a non-reentrant model
 12543 ;;
 12544                           
 12545                           	psect	text24
 12546  016A1C                     __ptext24:
 12547                           	opt stack 0
 12548  016A1C                     _FLASH_ReadWord:
 12549                           	opt stack 12
 12550                           
 12551                           ;memory.c: 73: return ((((uint16_t)FLASH_ReadByte(flashAddr+1))<<8)|(FLASH_ReadByte(flas
      +                          hAddr)));
 12552                           
 12553                           ;incstack = 0
 12554  016A1C  C11B  F117         	movff	FLASH_ReadWord@flashAddr,FLASH_ReadByte@flashAddr
 12555  016A20  C11C  F118         	movff	FLASH_ReadWord@flashAddr+1,FLASH_ReadByte@flashAddr+1
 12556  016A24  C11D  F119         	movff	FLASH_ReadWord@flashAddr+2,FLASH_ReadByte@flashAddr+2
 12557  016A28  C11E  F11A         	movff	FLASH_ReadWord@flashAddr+3,FLASH_ReadByte@flashAddr+3
 12558  016A2C  ECB9  F0B7         	call	_FLASH_ReadByte	;wreg free
 12559  016A30  0101               	movlb	1	; () banked
 12560  016A32  6F1F               	movwf	??_FLASH_ReadWord& (0+255),b
 12561  016A34  0E01               	movlw	1
 12562  016A36  251B               	addwf	FLASH_ReadWord@flashAddr& (0+255),w,b
 12563  016A38  6F17               	movwf	FLASH_ReadByte@flashAddr& (0+255),b
 12564  016A3A  0E00               	movlw	0
 12565  016A3C  211C               	addwfc	(FLASH_ReadWord@flashAddr+1)& (0+255),w,b
 12566  016A3E  6F18               	movwf	(FLASH_ReadByte@flashAddr+1)& (0+255),b
 12567  016A40  0E00               	movlw	0
 12568  016A42  211D               	addwfc	(FLASH_ReadWord@flashAddr+2)& (0+255),w,b
 12569  016A44  6F19               	movwf	(FLASH_ReadByte@flashAddr+2)& (0+255),b
 12570  016A46  0E00               	movlw	0
 12571  016A48  211E               	addwfc	(FLASH_ReadWord@flashAddr+3)& (0+255),w,b
 12572  016A4A  6F1A               	movwf	(FLASH_ReadByte@flashAddr+3)& (0+255),b
 12573  016A4C  ECB9  F0B7         	call	_FLASH_ReadByte	;wreg free
 12574  016A50  0101               	movlb	1	; () banked
 12575  016A52  6F20               	movwf	(??_FLASH_ReadWord+1)& (0+255),b
 12576  016A54  511F               	movf	??_FLASH_ReadWord& (0+255),w,b
 12577  016A56  6F1B               	movwf	?_FLASH_ReadWord& (0+255),b
 12578  016A58  C120  F11C         	movff	??_FLASH_ReadWord+1,?_FLASH_ReadWord+1
 12579  016A5C  0012               	return	
 12580  016A5E                     __end_of_FLASH_ReadWord:
 12581                           	opt stack 0
 12582                           tblptru	equ	0xFF8
 12583                           tblptrh	equ	0xFF7
 12584                           tblptrl	equ	0xFF6
 12585                           tablat	equ	0xFF5
 12586                           prodl	equ	0xFF3
 12587                           intcon	equ	0xFF2
 12588                           indf0	equ	0xFEF
 12589                           postinc0	equ	0xFEE
 12590                           fsr0h	equ	0xFEA
 12591                           fsr0l	equ	0xFE9
 12592                           wreg	equ	0xFE8
 12593                           indf1	equ	0xFE7
 12594                           postdec1	equ	0xFE5
 12595                           fsr1h	equ	0xFE2
 12596                           fsr1l	equ	0xFE1
 12597                           indf2	equ	0xFDF
 12598                           postinc2	equ	0xFDE
 12599                           fsr2h	equ	0xFDA
 12600                           fsr2l	equ	0xFD9
 12601                           status	equ	0xFD8
 12602                           
 12603 ;; *************** function _FLASH_ReadByte *****************
 12604 ;; Defined at:
 12605 ;;		line 59 in file "mcc_generated_files/memory.c"
 12606 ;; Parameters:    Size  Location     Type
 12607 ;;  flashAddr       4   23[BANK1 ] unsigned long 
 12608 ;; Auto vars:     Size  Location     Type
 12609 ;;		None
 12610 ;; Return value:  Size  Location     Type
 12611 ;;                  1    wreg      unsigned char 
 12612 ;; Registers used:
 12613 ;;		wreg, status,2
 12614 ;; Tracked objects:
 12615 ;;		On entry : 0/0
 12616 ;;		On exit  : 0/0
 12617 ;;		Unchanged: 0/0
 12618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12619 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12622 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12623 ;;Total ram usage:        4 bytes
 12624 ;; Hardware stack levels used:    1
 12625 ;; Hardware stack levels required when called:   14
 12626 ;; This function calls:
 12627 ;;		Nothing
 12628 ;; This function is called by:
 12629 ;;		_FLASH_ReadWord
 12630 ;;		_FLASH_WriteByte
 12631 ;; This function uses a non-reentrant model
 12632 ;;
 12633                           
 12634                           	psect	text25
 12635  016F72                     __ptext25:
 12636                           	opt stack 0
 12637  016F72                     _FLASH_ReadByte:
 12638                           	opt stack 12
 12639                           
 12640                           ;memory.c: 61: NVMCON1bits.NVMREG = 2;
 12641                           
 12642                           ; BSR set to: 1
 12643                           ;incstack = 0
 12644  016F72  5077               	movf	3959,w,c	;volsfr
 12645  016F74  0B3F               	andlw	-193
 12646  016F76  0980               	iorlw	128
 12647  016F78  6E77               	movwf	3959,c	;volsfr
 12648                           
 12649                           ;memory.c: 62: TBLPTRU = (uint8_t)((flashAddr & 0x00FF0000) >> 16);
 12650  016F7A  C119  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
 12651                           
 12652                           ;memory.c: 63: TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8);
 12653  016F7E  C118  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
 12654                           
 12655                           ;memory.c: 64: TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
 12656  016F82  C117  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
 12657  016F86  0008               	tblrd		*	;# 
 12658                           
 12659                           ;memory.c: 68: return (TABLAT);
 12660  016F88  50F5               	movf	tablat,w,c	;volatile
 12661  016F8A  0012               	return	
 12662  016F8C                     __end_of_FLASH_ReadByte:
 12663                           	opt stack 0
 12664                           tblptru	equ	0xFF8
 12665                           tblptrh	equ	0xFF7
 12666                           tblptrl	equ	0xFF6
 12667                           tablat	equ	0xFF5
 12668                           prodl	equ	0xFF3
 12669                           intcon	equ	0xFF2
 12670                           indf0	equ	0xFEF
 12671                           postinc0	equ	0xFEE
 12672                           fsr0h	equ	0xFEA
 12673                           fsr0l	equ	0xFE9
 12674                           wreg	equ	0xFE8
 12675                           indf1	equ	0xFE7
 12676                           postdec1	equ	0xFE5
 12677                           fsr1h	equ	0xFE2
 12678                           fsr1l	equ	0xFE1
 12679                           indf2	equ	0xFDF
 12680                           postinc2	equ	0xFDE
 12681                           fsr2h	equ	0xFDA
 12682                           fsr2l	equ	0xFD9
 12683                           status	equ	0xFD8
 12684                           
 12685 ;; *************** function _getCauseOfResetString *****************
 12686 ;; Defined at:
 12687 ;;		line 372 in file "cause_of_reset.c"
 12688 ;; Parameters:    Size  Location     Type
 12689 ;;  r               1    wreg     enum E17455
 12690 ;; Auto vars:     Size  Location     Type
 12691 ;;  r               1   49[BANK1 ] enum E17455
 12692 ;;  strings        24   25[BANK1 ] PTR const unsigned char 
 12693 ;;		 -> STR_131(30), STR_130(22), STR_129(21), STR_128(27), 
 12694 ;;		 -> STR_127(29), STR_126(41), STR_125(28), STR_124(32), 
 12695 ;;		 -> STR_123(25), STR_122(19), STR_121(16), STR_120(15), 
 12696 ;; Return value:  Size  Location     Type
 12697 ;;                  2   23[BANK1 ] PTR inline unsigned char
 12698 ;; Registers used:
 12699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12705 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12706 ;;      Locals:         0       0      25       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12708 ;;      Totals:         0       0      27       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12709 ;;Total ram usage:       27 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; Hardware stack levels required when called:   14
 12712 ;; This function calls:
 12713 ;;		Nothing
 12714 ;; This function is called by:
 12715 ;;		_ringBufferLUT
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           
 12719                           	psect	text26
 12720  016CA8                     __ptext26:
 12721                           	opt stack 0
 12722  016CA8                     _getCauseOfResetString:
 12723                           	opt stack 14
 12724                           
 12725                           ;incstack = 0
 12726                           ;getCauseOfResetString@r stored from wreg
 12727  016CA8  0101               	movlb	1	; () banked
 12728  016CAA  6F31               	movwf	getCauseOfResetString@r& (0+255),b
 12729                           
 12730                           ;cause_of_reset.c: 375: const char *strings[] = {
 12731                           ;cause_of_reset.c: 376: "Power On Reset",
 12732                           ;cause_of_reset.c: 377: "Brown Out Reset",
 12733                           ;cause_of_reset.c: 378: "Master Clear Reset",
 12734                           ;cause_of_reset.c: 379: "Master Clear Sleep Reset",
 12735                           ;cause_of_reset.c: 380: "Watch Dog Timer Violation Reset",
 12736                           ;cause_of_reset.c: 381: "Watch Dog Timer Sleep Reset",
 12737                           ;cause_of_reset.c: 382: "Windowed Watch Dog Timer Violation Reset",
 12738                           ;cause_of_reset.c: 383: "Interrupt Wake Up From Sleep",
 12739                           ;cause_of_reset.c: 384: "RESET Instruction Executed",
 12740  016CAC  EE22  F0A4         	lfsr	2,getCauseOfResetString@F17476
 12741  016CB0  EE11  F019         	lfsr	1,getCauseOfResetString@strings
 12742  016CB4  0E17               	movlw	23
 12743  016CB6                     u13971:
 12744  016CB6  CFDB FFE3          	movff	plusw2,plusw1
 12745  016CBA  06E8               	decf	wreg,f,c
 12746  016CBC  E2FC               	bc	u13971
 12747                           
 12748                           ;cause_of_reset.c: 390: return strings[r];
 12749  016CBE  0101               	movlb	1	; () banked
 12750  016CC0  5131               	movf	getCauseOfResetString@r& (0+255),w,b
 12751  016CC2  0D02               	mullw	2
 12752  016CC4  0E19               	movlw	low getCauseOfResetString@strings
 12753  016CC6  24F3               	addwf	prodl,w,c
 12754  016CC8  6ED9               	movwf	fsr2l,c
 12755  016CCA  0E01               	movlw	high getCauseOfResetString@strings
 12756  016CCC  20F4               	addwfc	prodh,w,c
 12757  016CCE  6EDA               	movwf	fsr2h,c
 12758  016CD0  CFDE F117          	movff	postinc2,?_getCauseOfResetString
 12759  016CD4  CFDD F118          	movff	postdec2,?_getCauseOfResetString+1
 12760  016CD8  0012               	return	
 12761  016CDA                     __end_of_getCauseOfResetString:
 12762                           	opt stack 0
 12763                           tblptru	equ	0xFF8
 12764                           tblptrh	equ	0xFF7
 12765                           tblptrl	equ	0xFF6
 12766                           tablat	equ	0xFF5
 12767                           prodh	equ	0xFF4
 12768                           prodl	equ	0xFF3
 12769                           intcon	equ	0xFF2
 12770                           indf0	equ	0xFEF
 12771                           postinc0	equ	0xFEE
 12772                           fsr0h	equ	0xFEA
 12773                           fsr0l	equ	0xFE9
 12774                           wreg	equ	0xFE8
 12775                           indf1	equ	0xFE7
 12776                           postdec1	equ	0xFE5
 12777                           plusw1	equ	0xFE3
 12778                           fsr1h	equ	0xFE2
 12779                           fsr1l	equ	0xFE1
 12780                           indf2	equ	0xFDF
 12781                           postinc2	equ	0xFDE
 12782                           postdec2	equ	0xFDD
 12783                           plusw2	equ	0xFDB
 12784                           fsr2h	equ	0xFDA
 12785                           fsr2l	equ	0xFD9
 12786                           status	equ	0xFD8
 12787                           
 12788 ;; *************** function _getCauseOfReset *****************
 12789 ;; Defined at:
 12790 ;;		line 14 in file "cause_of_reset.c"
 12791 ;; Parameters:    Size  Location     Type
 12792 ;;		None
 12793 ;; Auto vars:     Size  Location     Type
 12794 ;;		None
 12795 ;; Return value:  Size  Location     Type
 12796 ;;                  1    wreg      enum E17989
 12797 ;; Registers used:
 12798 ;;		wreg, status,2
 12799 ;; Tracked objects:
 12800 ;;		On entry : 0/0
 12801 ;;		On exit  : 0/0
 12802 ;;		Unchanged: 0/0
 12803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12808 ;;Total ram usage:        0 bytes
 12809 ;; Hardware stack levels used:    1
 12810 ;; Hardware stack levels required when called:   14
 12811 ;; This function calls:
 12812 ;;		Nothing
 12813 ;; This function is called by:
 12814 ;;		_ringBufferLUT
 12815 ;; This function uses a non-reentrant model
 12816 ;;
 12817                           
 12818                           	psect	text27
 12819  0152C4                     __ptext27:
 12820                           	opt stack 0
 12821  0152C4                     _getCauseOfReset:
 12822                           	opt stack 14
 12823                           
 12824                           ;cause_of_reset.c: 19: if(
 12825                           ;cause_of_reset.c: 21: STATUSbits.nTO &&
 12826                           ;cause_of_reset.c: 22: STATUSbits.nPD &&
 12827                           ;cause_of_reset.c: 23: !(STATUSbits.N) &&
 12828                           ;cause_of_reset.c: 25: !(STATUSbits.OV) &&
 12829                           ;cause_of_reset.c: 26: !(STATUSbits.Z) &&
 12830                           ;cause_of_reset.c: 27: !(STATUSbits.DC) &&
 12831                           ;cause_of_reset.c: 28: !(STATUSbits.C) &&
 12832                           ;cause_of_reset.c: 31: !(PCON0bits.STKOVF) &&
 12833                           ;cause_of_reset.c: 32: !(PCON0bits.STKUNF) &&
 12834                           ;cause_of_reset.c: 33: PCON0bits.nWDTWV &&
 12835                           ;cause_of_reset.c: 34: PCON0bits.nRWDT &&
 12836                           ;cause_of_reset.c: 36: PCON0bits.nRMCLR &&
 12837                           
 12838                           ; BSR set to: 1
 12839                           ;incstack = 0
 12840  0152C4  BCD8               	btfsc	status,6,c	;volatile
 12841  0152C6  AAD8               	btfss	status,5,c	;volatile
 12842  0152C8  D014               	goto	l1246
 12843  0152CA  A8D8               	btfss	status,4,c	;volatile
 12844  0152CC  B6D8               	btfsc	status,3,c	;volatile
 12845  0152CE  D011               	goto	l1246
 12846  0152D0  A4D8               	btfss	status,2,c	;volatile
 12847  0152D2  B2D8               	btfsc	status,1,c	;volatile
 12848  0152D4  D00E               	goto	l1246
 12849  0152D6  A0D8               	btfss	status,0,c	;volatile
 12850  0152D8  BED7               	btfsc	4055,7,c	;volatile
 12851  0152DA  D00B               	goto	l1246
 12852  0152DC  ACD7               	btfss	4055,6,c	;volatile
 12853  0152DE  AAD7               	btfss	4055,5,c	;volatile
 12854  0152E0  D008               	goto	l1246
 12855  0152E2  B8D7               	btfsc	4055,4,c	;volatile
 12856  0152E4  A6D7               	btfss	4055,3,c	;volatile
 12857  0152E6  D005               	goto	l1246
 12858  0152E8  B4D7               	btfsc	4055,2,c	;volatile
 12859  0152EA  B2D7               	btfsc	4055,1,c	;volatile
 12860  0152EC  D002               	goto	l1246
 12861                           
 12862                           ;cause_of_reset.c: 43: reset_cause = Power_On_Reset;
 12863  0152EE  0E00               	movlw	0
 12864  0152F0  D056               	goto	L11
 12865  0152F2                     l1246:
 12866                           
 12867                           ;cause_of_reset.c: 48: else if(
 12868                           ;cause_of_reset.c: 50: STATUSbits.nTO &&
 12869                           ;cause_of_reset.c: 51: STATUSbits.nPD &&
 12870                           ;cause_of_reset.c: 52: !(STATUSbits.N) &&
 12871                           ;cause_of_reset.c: 54: !(STATUSbits.OV) &&
 12872                           ;cause_of_reset.c: 55: !(STATUSbits.Z) &&
 12873                           ;cause_of_reset.c: 56: !(STATUSbits.DC) &&
 12874                           ;cause_of_reset.c: 57: !(STATUSbits.C) &&
 12875                           ;cause_of_reset.c: 60: !(PCON0bits.STKOVF) &&
 12876                           ;cause_of_reset.c: 61: !(PCON0bits.STKUNF) &&
 12877                           ;cause_of_reset.c: 62: PCON0bits.nWDTWV &&
 12878                           ;cause_of_reset.c: 63: PCON0bits.nRWDT &&
 12879                           ;cause_of_reset.c: 65: PCON0bits.nRMCLR &&
 12880  0152F2  BCD8               	btfsc	status,6,c	;volatile
 12881  0152F4  AAD8               	btfss	status,5,c	;volatile
 12882  0152F6  D014               	goto	l1248
 12883  0152F8  A8D8               	btfss	status,4,c	;volatile
 12884  0152FA  B6D8               	btfsc	status,3,c	;volatile
 12885  0152FC  D011               	goto	l1248
 12886  0152FE  A4D8               	btfss	status,2,c	;volatile
 12887  015300  B2D8               	btfsc	status,1,c	;volatile
 12888  015302  D00E               	goto	l1248
 12889  015304  A0D8               	btfss	status,0,c	;volatile
 12890  015306  BED7               	btfsc	4055,7,c	;volatile
 12891  015308  D00B               	goto	l1248
 12892  01530A  ACD7               	btfss	4055,6,c	;volatile
 12893  01530C  AAD7               	btfss	4055,5,c	;volatile
 12894  01530E  D008               	goto	l1248
 12895  015310  B8D7               	btfsc	4055,4,c	;volatile
 12896  015312  A6D7               	btfss	4055,3,c	;volatile
 12897  015314  D005               	goto	l1248
 12898  015316  B4D7               	btfsc	4055,2,c	;volatile
 12899  015318  B0D7               	btfsc	4055,0,c	;volatile
 12900  01531A  D002               	goto	l1248
 12901                           
 12902                           ;cause_of_reset.c: 72: reset_cause = Brown_Out_Reset;
 12903  01531C  0E01               	movlw	1
 12904  01531E  D03F               	goto	L11
 12905  015320                     l1248:
 12906                           
 12907                           ;cause_of_reset.c: 77: else if(
 12908                           ;cause_of_reset.c: 94: !(PCON0bits.nRMCLR)
 12909                           ;cause_of_reset.c: 98: ) {
 12910  015320  B6D7               	btfsc	4055,3,c	;volatile
 12911  015322  D002               	goto	l1250
 12912                           
 12913                           ;cause_of_reset.c: 101: reset_cause = Master_Clear_Reset;
 12914  015324  0E02               	movlw	2
 12915  015326  D03B               	goto	L11
 12916  015328                     l1250:
 12917                           
 12918                           ;cause_of_reset.c: 106: else if(
 12919                           ;cause_of_reset.c: 108: STATUSbits.nTO &&
 12920                           ;cause_of_reset.c: 109: STATUSbits.nPD &&
 12921                           ;cause_of_reset.c: 123: !(PCON0bits.nRMCLR)
 12922                           ;cause_of_reset.c: 127: ) {
 12923  015328  BCD8               	btfsc	status,6,c	;volatile
 12924  01532A  AAD8               	btfss	status,5,c	;volatile
 12925  01532C  D004               	goto	l1252
 12926  01532E  B6D7               	btfsc	4055,3,c	;volatile
 12927  015330  D002               	goto	l1252
 12928                           
 12929                           ;cause_of_reset.c: 130: reset_cause = Master_Clear_Sleep_Reset;
 12930  015332  0E03               	movlw	3
 12931  015334  D034               	goto	L11
 12932  015336                     l1252:
 12933                           
 12934                           ;cause_of_reset.c: 135: else if(
 12935                           ;cause_of_reset.c: 137: !(STATUSbits.nTO) &&
 12936                           ;cause_of_reset.c: 150: !(PCON0bits.nRWDT)
 12937                           ;cause_of_reset.c: 156: ) {
 12938  015336  ACD8               	btfss	status,6,c	;volatile
 12939  015338  B8D7               	btfsc	4055,4,c	;volatile
 12940  01533A  D002               	goto	l1254
 12941                           
 12942                           ;cause_of_reset.c: 159: reset_cause = Watch_Dog_Timer_Reset;
 12943  01533C  0E04               	movlw	4
 12944  01533E  D02F               	goto	L11
 12945  015340                     l1254:
 12946                           
 12947                           ;cause_of_reset.c: 164: else if(
 12948                           ;cause_of_reset.c: 166: !(STATUSbits.nTO) &&
 12949                           ;cause_of_reset.c: 167: !(STATUSbits.nPD)
 12950                           ;cause_of_reset.c: 185: ) {
 12951  015340  ACD8               	btfss	status,6,c	;volatile
 12952  015342  BAD8               	btfsc	status,5,c	;volatile
 12953  015344  D002               	goto	l1256
 12954                           
 12955                           ;cause_of_reset.c: 188: reset_cause = Watch_Dog_Timer_Sleep_Reset;
 12956  015346  0E05               	movlw	5
 12957  015348  D02A               	goto	L11
 12958  01534A                     l1256:
 12959                           
 12960                           ;cause_of_reset.c: 193: else if(
 12961                           ;cause_of_reset.c: 207: !(PCON0bits.nWDTWV)
 12962                           ;cause_of_reset.c: 214: ) {
 12963  01534A  BAD7               	btfsc	4055,5,c	;volatile
 12964  01534C  D002               	goto	l1258
 12965                           
 12966                           ;cause_of_reset.c: 217: reset_cause = Windowed_Watch_Dog_Timer_Reset;
 12967  01534E  0E06               	movlw	6
 12968  015350  D026               	goto	L11
 12969  015352                     l1258:
 12970                           
 12971                           ;cause_of_reset.c: 222: else if(
 12972                           ;cause_of_reset.c: 224: STATUSbits.nTO &&
 12973                           ;cause_of_reset.c: 225: !(STATUSbits.nPD) &&
 12974                           ;cause_of_reset.c: 228: !(STATUSbits.OV)
 12975                           ;cause_of_reset.c: 243: ) {
 12976  015352  BCD8               	btfsc	status,6,c	;volatile
 12977  015354  BAD8               	btfsc	status,5,c	;volatile
 12978  015356  D004               	goto	l1260
 12979  015358  B6D8               	btfsc	status,3,c	;volatile
 12980  01535A  D002               	goto	l1260
 12981                           
 12982                           ;cause_of_reset.c: 246: reset_cause = Interrupt_Wake_Up_From_Sleep;
 12983  01535C  0E07               	movlw	7
 12984  01535E  D01F               	goto	L11
 12985  015360                     l1260:
 12986                           
 12987                           ;cause_of_reset.c: 251: else if(
 12988                           ;cause_of_reset.c: 269: !(PCON0bits.nRI)
 12989                           ;cause_of_reset.c: 272: ) {
 12990  015360  B4D7               	btfsc	4055,2,c	;volatile
 12991  015362  D002               	goto	l1262
 12992                           
 12993                           ;cause_of_reset.c: 275: reset_cause = RESET_Instruction_Executed;
 12994  015364  0E08               	movlw	8
 12995  015366  D01B               	goto	L11
 12996  015368                     l1262:
 12997                           
 12998                           ;cause_of_reset.c: 280: else if(
 12999                           ;cause_of_reset.c: 292: PCON0bits.STKOVF
 13000                           ;cause_of_reset.c: 301: ) {
 13001  015368  AED7               	btfss	4055,7,c	;volatile
 13002  01536A  D002               	goto	l1264
 13003                           
 13004                           ;cause_of_reset.c: 304: reset_cause = Stack_Overflow_Reset;
 13005  01536C  0E09               	movlw	9
 13006  01536E  D017               	goto	L11
 13007  015370                     l1264:
 13008                           
 13009                           ;cause_of_reset.c: 309: else if(
 13010                           ;cause_of_reset.c: 322: PCON0bits.STKUNF
 13011                           ;cause_of_reset.c: 330: ) {
 13012  015370  ACD7               	btfss	4055,6,c	;volatile
 13013  015372  D002               	goto	l1266
 13014                           
 13015                           ;cause_of_reset.c: 333: reset_cause = Stack_Underflow_Reset;
 13016  015374  0E0A               	movlw	10
 13017  015376  D013               	goto	L11
 13018  015378                     l1266:
 13019                           
 13020                           ;cause_of_reset.c: 338: else if(
 13021                           ;cause_of_reset.c: 342: STATUSbits.N &&
 13022                           ;cause_of_reset.c: 344: STATUSbits.OV &&
 13023                           ;cause_of_reset.c: 345: !(STATUSbits.Z) &&
 13024                           ;cause_of_reset.c: 346: !(STATUSbits.DC) &&
 13025                           ;cause_of_reset.c: 347: !(STATUSbits.C) &&
 13026                           ;cause_of_reset.c: 350: !(PCON0bits.STKOVF) &&
 13027                           ;cause_of_reset.c: 351: !(PCON0bits.STKUNF) &&
 13028                           ;cause_of_reset.c: 352: PCON0bits.nWDTWV &&
 13029                           ;cause_of_reset.c: 353: PCON0bits.nRWDT &&
 13030                           ;cause_of_reset.c: 355: !(PCON0bits.nRMCLR) &&
 13031                           ;cause_of_reset.c: 356: !(PCON0bits.nRI) &&
 13032  015378  B8D8               	btfsc	status,4,c	;volatile
 13033  01537A  A6D8               	btfss	status,3,c	;volatile
 13034  01537C  D012               	goto	l1268
 13035  01537E  A4D8               	btfss	status,2,c	;volatile
 13036  015380  B2D8               	btfsc	status,1,c	;volatile
 13037  015382  D00F               	goto	l1268
 13038  015384  A0D8               	btfss	status,0,c	;volatile
 13039  015386  BED7               	btfsc	4055,7,c	;volatile
 13040  015388  D00C               	goto	l1268
 13041  01538A  ACD7               	btfss	4055,6,c	;volatile
 13042  01538C  AAD7               	btfss	4055,5,c	;volatile
 13043  01538E  D009               	goto	l1268
 13044  015390  B8D7               	btfsc	4055,4,c	;volatile
 13045  015392  B6D7               	btfsc	4055,3,c	;volatile
 13046  015394  D006               	goto	l1268
 13047  015396  A4D7               	btfss	4055,2,c	;volatile
 13048  015398  A2D7               	btfss	4055,1,c	;volatile
 13049  01539A  D003               	goto	l1268
 13050                           
 13051                           ;cause_of_reset.c: 362: reset_cause = VREG_or_ULP_Ready_Fault_Reset;
 13052  01539C  0E0B               	movlw	11
 13053  01539E                     L11:
 13054  01539E  0100               	movlb	0	; () banked
 13055  0153A0  6FE9               	movwf	_reset_cause& (0+255),b
 13056  0153A2                     l1268:
 13057                           
 13058                           ;cause_of_reset.c: 364: }
 13059                           ;cause_of_reset.c: 367: return reset_cause;
 13060                           
 13061                           ; BSR set to: 0
 13062                           
 13063                           ; BSR set to: 0
 13064                           
 13065                           ; BSR set to: 0
 13066                           
 13067                           ; BSR set to: 0
 13068                           
 13069                           ; BSR set to: 0
 13070                           
 13071                           ; BSR set to: 0
 13072                           
 13073                           ; BSR set to: 0
 13074                           
 13075                           ; BSR set to: 0
 13076                           
 13077                           ; BSR set to: 0
 13078                           
 13079                           ; BSR set to: 0
 13080                           
 13081                           ; BSR set to: 0
 13082  0153A2  0100               	movlb	0	; () banked
 13083  0153A4  51E9               	movf	_reset_cause& (0+255),w,b
 13084  0153A6  0012               	return	
 13085  0153A8                     __end_of_getCauseOfReset:
 13086                           	opt stack 0
 13087                           tblptru	equ	0xFF8
 13088                           tblptrh	equ	0xFF7
 13089                           tblptrl	equ	0xFF6
 13090                           tablat	equ	0xFF5
 13091                           prodh	equ	0xFF4
 13092                           prodl	equ	0xFF3
 13093                           intcon	equ	0xFF2
 13094                           indf0	equ	0xFEF
 13095                           postinc0	equ	0xFEE
 13096                           fsr0h	equ	0xFEA
 13097                           fsr0l	equ	0xFE9
 13098                           wreg	equ	0xFE8
 13099                           indf1	equ	0xFE7
 13100                           postdec1	equ	0xFE5
 13101                           plusw1	equ	0xFE3
 13102                           fsr1h	equ	0xFE2
 13103                           fsr1l	equ	0xFE1
 13104                           indf2	equ	0xFDF
 13105                           postinc2	equ	0xFDE
 13106                           postdec2	equ	0xFDD
 13107                           plusw2	equ	0xFDB
 13108                           fsr2h	equ	0xFDA
 13109                           fsr2l	equ	0xFD9
 13110                           status	equ	0xFD8
 13111                           
 13112 ;; *************** function _atoi *****************
 13113 ;; Defined at:
 13114 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;  s               2   43[BANK1 ] PTR const unsigned char 
 13117 ;;		 -> ringBufferLUT@arg_buff(3), 
 13118 ;; Auto vars:     Size  Location     Type
 13119 ;;  a               2   48[BANK1 ] int 
 13120 ;;  sign            1   47[BANK1 ] unsigned char 
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  2   43[BANK1 ] int 
 13123 ;; Registers used:
 13124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13130 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13131 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13132 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13133 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13134 ;;Total ram usage:        7 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; Hardware stack levels required when called:   15
 13137 ;; This function calls:
 13138 ;;		___wmul
 13139 ;;		_isdigit
 13140 ;; This function is called by:
 13141 ;;		_ringBufferLUT
 13142 ;; This function uses a non-reentrant model
 13143 ;;
 13144                           
 13145                           	psect	text28
 13146  015560                     __ptext28:
 13147                           	opt stack 0
 13148  015560                     _atoi:
 13149                           	opt stack 13
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;incstack = 0
 13153  015560  D003               	goto	l1609
 13154  015562  0101               	movlb	1	; () banked
 13155  015564  4B2B               	infsnz	atoi@s& (0+255),f,b
 13156  015566  2B2C               	incf	(atoi@s+1)& (0+255),f,b
 13157  015568                     l1609:
 13158                           
 13159                           ; BSR set to: 1
 13160  015568  C12B  FFD9         	movff	atoi@s,fsr2l
 13161  01556C  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13162  015570  0E20               	movlw	32
 13163  015572  18DE               	xorwf	postinc2,w,c
 13164  015574  B4D8               	btfsc	status,2,c
 13165  015576  D7F5               	goto	l1610
 13166  015578  C12B  FFD9         	movff	atoi@s,fsr2l
 13167  01557C  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13168  015580  0E09               	movlw	9
 13169  015582  18DE               	xorwf	postinc2,w,c
 13170  015584  B4D8               	btfsc	status,2,c
 13171  015586  D7ED               	goto	l1610
 13172  015588  0E00               	movlw	0
 13173  01558A  0101               	movlb	1	; () banked
 13174  01558C  6F31               	movwf	(atoi@a+1)& (0+255),b
 13175  01558E  0E00               	movlw	0
 13176  015590  6F30               	movwf	atoi@a& (0+255),b
 13177  015592  0E00               	movlw	0
 13178  015594  6F2F               	movwf	atoi@sign& (0+255),b
 13179                           
 13180                           ; BSR set to: 1
 13181  015596  C12B  FFD9         	movff	atoi@s,fsr2l
 13182  01559A  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13183  01559E  0E2D               	movlw	45
 13184  0155A0  18DE               	xorwf	postinc2,w,c
 13185  0155A2  A4D8               	btfss	status,2,c
 13186  0155A4  D002               	goto	l1612
 13187                           
 13188                           ; BSR set to: 1
 13189  0155A6  2B2F               	incf	atoi@sign& (0+255),f,b
 13190  0155A8  D026               	goto	l11405
 13191  0155AA                     l1612:
 13192                           
 13193                           ; BSR set to: 1
 13194                           
 13195                           ; BSR set to: 1
 13196  0155AA  C12B  FFD9         	movff	atoi@s,fsr2l
 13197  0155AE  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13198  0155B2  0E2B               	movlw	43
 13199  0155B4  18DE               	xorwf	postinc2,w,c
 13200  0155B6  A4D8               	btfss	status,2,c
 13201  0155B8  D020               	goto	l1615
 13202  0155BA  D01D               	goto	l11405
 13203  0155BC                     
 13204                           ; BSR set to: 1
 13205  0155BC  C130  F125         	movff	atoi@a,___wmul@multiplier
 13206  0155C0  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
 13207  0155C4  0E00               	movlw	0
 13208  0155C6  0101               	movlb	1	; () banked
 13209  0155C8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13210  0155CA  0E0A               	movlw	10
 13211  0155CC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 13212  0155CE  ECB3  F0B6         	call	___wmul	;wreg free
 13213  0155D2  C12B  FFD9         	movff	atoi@s,fsr2l
 13214  0155D6  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13215  0155DA  50DF               	movf	indf2,w,c
 13216  0155DC  0101               	movlb	1	; () banked
 13217  0155DE  6F2D               	movwf	??_atoi& (0+255),b
 13218  0155E0  6B2E               	clrf	(??_atoi+1)& (0+255),b
 13219  0155E2  5125               	movf	?___wmul& (0+255),w,b
 13220  0155E4  272D               	addwf	??_atoi& (0+255),f,b
 13221  0155E6  5126               	movf	(?___wmul+1)& (0+255),w,b
 13222  0155E8  232E               	addwfc	(??_atoi+1)& (0+255),f,b
 13223  0155EA  0ED0               	movlw	208
 13224  0155EC  252D               	addwf	??_atoi& (0+255),w,b
 13225  0155EE  6F30               	movwf	atoi@a& (0+255),b
 13226  0155F0  0EFF               	movlw	255
 13227  0155F2  212E               	addwfc	(??_atoi+1)& (0+255),w,b
 13228  0155F4  6F31               	movwf	(atoi@a+1)& (0+255),b
 13229  0155F6                     l11405:
 13230                           
 13231                           ; BSR set to: 1
 13232  0155F6  4B2B               	infsnz	atoi@s& (0+255),f,b
 13233  0155F8  2B2C               	incf	(atoi@s+1)& (0+255),f,b
 13234  0155FA                     l1615:
 13235                           
 13236                           ; BSR set to: 1
 13237                           
 13238                           ; BSR set to: 1
 13239  0155FA  C12B  FFD9         	movff	atoi@s,fsr2l
 13240  0155FE  C12C  FFDA         	movff	atoi@s+1,fsr2h
 13241  015602  50DF               	movf	indf2,w,c
 13242  015604  EC5F  F0B7         	call	_isdigit
 13243  015608  B0D8               	btfsc	status,0,c
 13244  01560A  D7D8               	goto	l1616
 13245  01560C  0101               	movlb	1	; () banked
 13246  01560E  512F               	movf	atoi@sign& (0+255),w,b
 13247  015610  B4D8               	btfsc	status,2,c
 13248  015612  D00D               	goto	l1618
 13249                           
 13250                           ; BSR set to: 1
 13251  015614  C130  F12D         	movff	atoi@a,??_atoi
 13252  015618  C131  F12E         	movff	atoi@a+1,??_atoi+1
 13253  01561C  1F2D               	comf	??_atoi& (0+255),f,b
 13254  01561E  1F2E               	comf	(??_atoi+1)& (0+255),f,b
 13255  015620  4B2D               	infsnz	??_atoi& (0+255),f,b
 13256  015622  2B2E               	incf	(??_atoi+1)& (0+255),f,b
 13257  015624  C12D  F12B         	movff	??_atoi,?_atoi
 13258  015628  C12E  F12C         	movff	??_atoi+1,?_atoi+1
 13259  01562C  0012               	return	
 13260  01562E                     l1618:
 13261                           
 13262                           ; BSR set to: 1
 13263  01562E  C130  F12B         	movff	atoi@a,?_atoi
 13264  015632  C131  F12C         	movff	atoi@a+1,?_atoi+1
 13265                           
 13266                           ; BSR set to: 1
 13267  015636  0012               	return		;funcret
 13268  015638                     __end_of_atoi:
 13269                           	opt stack 0
 13270                           tblptru	equ	0xFF8
 13271                           tblptrh	equ	0xFF7
 13272                           tblptrl	equ	0xFF6
 13273                           tablat	equ	0xFF5
 13274                           prodh	equ	0xFF4
 13275                           prodl	equ	0xFF3
 13276                           intcon	equ	0xFF2
 13277                           indf0	equ	0xFEF
 13278                           postinc0	equ	0xFEE
 13279                           fsr0h	equ	0xFEA
 13280                           fsr0l	equ	0xFE9
 13281                           wreg	equ	0xFE8
 13282                           indf1	equ	0xFE7
 13283                           postdec1	equ	0xFE5
 13284                           plusw1	equ	0xFE3
 13285                           fsr1h	equ	0xFE2
 13286                           fsr1l	equ	0xFE1
 13287                           indf2	equ	0xFDF
 13288                           postinc2	equ	0xFDE
 13289                           postdec2	equ	0xFDD
 13290                           plusw2	equ	0xFDB
 13291                           fsr2h	equ	0xFDA
 13292                           fsr2l	equ	0xFD9
 13293                           status	equ	0xFD8
 13294                           
 13295 ;; *************** function ___ftdiv *****************
 13296 ;; Defined at:
 13297 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 13298 ;; Parameters:    Size  Location     Type
 13299 ;;  f1              3   55[BANK1 ] float 
 13300 ;;  f2              3   58[BANK1 ] float 
 13301 ;; Auto vars:     Size  Location     Type
 13302 ;;  f3              3   65[BANK1 ] float 
 13303 ;;  sign            1   69[BANK1 ] unsigned char 
 13304 ;;  exp             1   68[BANK1 ] unsigned char 
 13305 ;;  cntr            1   64[BANK1 ] unsigned char 
 13306 ;; Return value:  Size  Location     Type
 13307 ;;                  3   55[BANK1 ] float 
 13308 ;; Registers used:
 13309 ;;		wreg, status,2, status,0, cstack
 13310 ;; Tracked objects:
 13311 ;;		On entry : 0/0
 13312 ;;		On exit  : 0/0
 13313 ;;		Unchanged: 0/0
 13314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13315 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13316 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13317 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13318 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13319 ;;Total ram usage:       15 bytes
 13320 ;; Hardware stack levels used:    1
 13321 ;; Hardware stack levels required when called:   15
 13322 ;; This function calls:
 13323 ;;		___ftpack
 13324 ;; This function is called by:
 13325 ;;		_ringBufferLUT
 13326 ;; This function uses a non-reentrant model
 13327 ;;
 13328                           
 13329                           	psect	text29
 13330  0150F6                     __ptext29:
 13331                           	opt stack 0
 13332  0150F6                     ___ftdiv:
 13333                           	opt stack 13
 13334                           
 13335                           ; BSR set to: 1
 13336                           ;incstack = 0
 13337  0150F6  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
 13338  0150FA  0101               	movlb	1	; () banked
 13339  0150FC  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 13340  0150FE  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 13341  015100  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
 13342  015102  373D               	rlcf	??___ftdiv& (0+255),f,b
 13343  015104  E301               	bnc	u14081
 13344  015106  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 13345  015108                     u14081:
 13346  015108  513D               	movf	??___ftdiv& (0+255),w,b
 13347  01510A  6F44               	movwf	___ftdiv@exp& (0+255),b
 13348  01510C  5144               	movf	___ftdiv@exp& (0+255),w,b
 13349  01510E  A4D8               	btfss	status,2,c
 13350  015110  D007               	goto	l1768
 13351                           
 13352                           ; BSR set to: 1
 13353  015112  0E00               	movlw	0
 13354  015114  6F37               	movwf	?___ftdiv& (0+255),b
 13355  015116  0E00               	movlw	0
 13356  015118  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 13357  01511A  0E00               	movlw	0
 13358  01511C  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 13359                           
 13360                           ; BSR set to: 1
 13361  01511E  0012               	return	
 13362  015120                     l1768:
 13363                           
 13364                           ; BSR set to: 1
 13365                           
 13366                           ; BSR set to: 1
 13367  015120  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
 13368  015124  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
 13369  015126  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
 13370  015128  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
 13371  01512A  373D               	rlcf	??___ftdiv& (0+255),f,b
 13372  01512C  E301               	bnc	u14101
 13373  01512E  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
 13374  015130                     u14101:
 13375  015130  513D               	movf	??___ftdiv& (0+255),w,b
 13376  015132  6F45               	movwf	___ftdiv@sign& (0+255),b
 13377  015134  5145               	movf	___ftdiv@sign& (0+255),w,b
 13378  015136  A4D8               	btfss	status,2,c
 13379  015138  D007               	goto	l1770
 13380                           
 13381                           ; BSR set to: 1
 13382  01513A  0E00               	movlw	0
 13383  01513C  6F37               	movwf	?___ftdiv& (0+255),b
 13384  01513E  0E00               	movlw	0
 13385  015140  6F38               	movwf	(?___ftdiv+1)& (0+255),b
 13386  015142  0E00               	movlw	0
 13387  015144  6F39               	movwf	(?___ftdiv+2)& (0+255),b
 13388                           
 13389                           ; BSR set to: 1
 13390  015146  0012               	return	
 13391  015148                     l1770:
 13392                           
 13393                           ; BSR set to: 1
 13394                           
 13395                           ; BSR set to: 1
 13396  015148  0E00               	movlw	0
 13397  01514A  6F41               	movwf	___ftdiv@f3& (0+255),b
 13398  01514C  0E00               	movlw	0
 13399  01514E  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
 13400  015150  0E00               	movlw	0
 13401  015152  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
 13402                           
 13403                           ; BSR set to: 1
 13404  015154  5145               	movf	___ftdiv@sign& (0+255),w,b
 13405  015156  0F89               	addlw	137
 13406  015158  5F44               	subwf	___ftdiv@exp& (0+255),f,b
 13407                           
 13408                           ; BSR set to: 1
 13409  01515A  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
 13410                           
 13411                           ; BSR set to: 1
 13412  01515E  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13413  015160  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
 13414                           
 13415                           ; BSR set to: 1
 13416  015162  0E80               	movlw	128
 13417  015164  1745               	andwf	___ftdiv@sign& (0+255),f,b
 13418                           
 13419                           ; BSR set to: 1
 13420  015166  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
 13421                           
 13422                           ; BSR set to: 1
 13423  015168  0EFF               	movlw	255
 13424  01516A  1737               	andwf	___ftdiv@f1& (0+255),f,b
 13425  01516C  0EFF               	movlw	255
 13426  01516E  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
 13427  015170  0E00               	movlw	0
 13428  015172  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
 13429                           
 13430                           ; BSR set to: 1
 13431  015174  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
 13432                           
 13433                           ; BSR set to: 1
 13434  015176  0EFF               	movlw	255
 13435  015178  173A               	andwf	___ftdiv@f2& (0+255),f,b
 13436  01517A  0EFF               	movlw	255
 13437  01517C  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
 13438  01517E  0E00               	movlw	0
 13439  015180  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
 13440                           
 13441                           ; BSR set to: 1
 13442  015182  0E18               	movlw	24
 13443  015184  6F40               	movwf	___ftdiv@cntr& (0+255),b
 13444  015186                     
 13445                           ; BSR set to: 1
 13446                           
 13447                           ; BSR set to: 1
 13448  015186  90D8               	bcf	status,0,c
 13449  015188  3741               	rlcf	___ftdiv@f3& (0+255),f,b
 13450  01518A  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
 13451  01518C  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
 13452                           
 13453                           ; BSR set to: 1
 13454  01518E  513A               	movf	___ftdiv@f2& (0+255),w,b
 13455  015190  5D37               	subwf	___ftdiv@f1& (0+255),w,b
 13456  015192  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13457  015194  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
 13458  015196  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13459  015198  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
 13460  01519A  A0D8               	btfss	status,0,c
 13461  01519C  D007               	goto	l1772
 13462                           
 13463                           ; BSR set to: 1
 13464  01519E  513A               	movf	___ftdiv@f2& (0+255),w,b
 13465  0151A0  5F37               	subwf	___ftdiv@f1& (0+255),f,b
 13466  0151A2  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
 13467  0151A4  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
 13468  0151A6  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
 13469  0151A8  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
 13470                           
 13471                           ; BSR set to: 1
 13472  0151AA  8141               	bsf	___ftdiv@f3& (0+255),0,b
 13473  0151AC                     l1772:
 13474                           
 13475                           ; BSR set to: 1
 13476  0151AC  90D8               	bcf	status,0,c
 13477  0151AE  3737               	rlcf	___ftdiv@f1& (0+255),f,b
 13478  0151B0  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
 13479  0151B2  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
 13480                           
 13481                           ; BSR set to: 1
 13482  0151B4  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
 13483  0151B6  D7E7               	goto	l1771
 13484                           
 13485                           ; BSR set to: 1
 13486                           
 13487                           ; BSR set to: 1
 13488  0151B8  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
 13489  0151BC  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
 13490  0151C0  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
 13491  0151C4  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
 13492  0151C8  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
 13493  0151CC  ECE3  F0AB         	call	___ftpack	;wreg free
 13494  0151D0  C117  F137         	movff	?___ftpack,?___ftdiv
 13495  0151D4  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
 13496  0151D8  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
 13497  0151DC  0012               	return	
 13498  0151DE                     __end_of___ftdiv:
 13499                           	opt stack 0
 13500                           tblptru	equ	0xFF8
 13501                           tblptrh	equ	0xFF7
 13502                           tblptrl	equ	0xFF6
 13503                           tablat	equ	0xFF5
 13504                           prodh	equ	0xFF4
 13505                           prodl	equ	0xFF3
 13506                           intcon	equ	0xFF2
 13507                           indf0	equ	0xFEF
 13508                           postinc0	equ	0xFEE
 13509                           fsr0h	equ	0xFEA
 13510                           fsr0l	equ	0xFE9
 13511                           wreg	equ	0xFE8
 13512                           indf1	equ	0xFE7
 13513                           postdec1	equ	0xFE5
 13514                           plusw1	equ	0xFE3
 13515                           fsr1h	equ	0xFE2
 13516                           fsr1l	equ	0xFE1
 13517                           indf2	equ	0xFDF
 13518                           postinc2	equ	0xFDE
 13519                           postdec2	equ	0xFDD
 13520                           plusw2	equ	0xFDB
 13521                           fsr2h	equ	0xFDA
 13522                           fsr2l	equ	0xFD9
 13523                           status	equ	0xFD8
 13524                           
 13525 ;; *************** function ___awtoft *****************
 13526 ;; Defined at:
 13527 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
 13528 ;; Parameters:    Size  Location     Type
 13529 ;;  c               2   31[BANK1 ] int 
 13530 ;; Auto vars:     Size  Location     Type
 13531 ;;  sign            1   34[BANK1 ] unsigned char 
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  3   31[BANK1 ] float 
 13534 ;; Registers used:
 13535 ;;		wreg, status,2, status,0, cstack
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13541 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13544 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13545 ;;Total ram usage:        4 bytes
 13546 ;; Hardware stack levels used:    1
 13547 ;; Hardware stack levels required when called:   15
 13548 ;; This function calls:
 13549 ;;		___ftpack
 13550 ;; This function is called by:
 13551 ;;		_ringBufferLUT
 13552 ;; This function uses a non-reentrant model
 13553 ;;
 13554                           
 13555                           	psect	text30
 13556  016B98                     __ptext30:
 13557                           	opt stack 0
 13558  016B98                     ___awtoft:
 13559                           	opt stack 13
 13560                           
 13561                           ;incstack = 0
 13562  016B98  0E00               	movlw	0
 13563  016B9A  0101               	movlb	1	; () banked
 13564  016B9C  6F22               	movwf	___awtoft@sign& (0+255),b
 13565                           
 13566                           ; BSR set to: 1
 13567  016B9E  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
 13568  016BA0  D006               	goto	l1656
 13569                           
 13570                           ; BSR set to: 1
 13571  016BA2  6D1F               	negf	___awtoft@c& (0+255),b
 13572  016BA4  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
 13573  016BA6  B0D8               	btfsc	status,0,c
 13574  016BA8  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
 13575                           
 13576                           ; BSR set to: 1
 13577  016BAA  0E01               	movlw	1
 13578  016BAC  6F22               	movwf	___awtoft@sign& (0+255),b
 13579  016BAE                     l1656:
 13580                           
 13581                           ; BSR set to: 1
 13582                           
 13583                           ; BSR set to: 1
 13584  016BAE  C11F  F117         	movff	___awtoft@c,___ftpack@arg
 13585  016BB2  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
 13586  016BB6  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
 13587  016BB8  0E8E               	movlw	142
 13588  016BBA  6F1A               	movwf	___ftpack@exp& (0+255),b
 13589  016BBC  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
 13590  016BC0  ECE3  F0AB         	call	___ftpack	;wreg free
 13591  016BC4  C117  F11F         	movff	?___ftpack,?___awtoft
 13592  016BC8  C118  F120         	movff	?___ftpack+1,?___awtoft+1
 13593  016BCC  C119  F121         	movff	?___ftpack+2,?___awtoft+2
 13594  016BD0  0012               	return	
 13595  016BD2                     __end_of___awtoft:
 13596                           	opt stack 0
 13597                           tblptru	equ	0xFF8
 13598                           tblptrh	equ	0xFF7
 13599                           tblptrl	equ	0xFF6
 13600                           tablat	equ	0xFF5
 13601                           prodh	equ	0xFF4
 13602                           prodl	equ	0xFF3
 13603                           intcon	equ	0xFF2
 13604                           indf0	equ	0xFEF
 13605                           postinc0	equ	0xFEE
 13606                           fsr0h	equ	0xFEA
 13607                           fsr0l	equ	0xFE9
 13608                           wreg	equ	0xFE8
 13609                           indf1	equ	0xFE7
 13610                           postdec1	equ	0xFE5
 13611                           plusw1	equ	0xFE3
 13612                           fsr1h	equ	0xFE2
 13613                           fsr1l	equ	0xFE1
 13614                           indf2	equ	0xFDF
 13615                           postinc2	equ	0xFDE
 13616                           postdec2	equ	0xFDD
 13617                           plusw2	equ	0xFDB
 13618                           fsr2h	equ	0xFDA
 13619                           fsr2l	equ	0xFD9
 13620                           status	equ	0xFD8
 13621                           
 13622 ;; *************** function _TMR7_StartTimer *****************
 13623 ;; Defined at:
 13624 ;;		line 99 in file "mcc_generated_files/tmr7.c"
 13625 ;; Parameters:    Size  Location     Type
 13626 ;;		None
 13627 ;; Auto vars:     Size  Location     Type
 13628 ;;		None
 13629 ;; Return value:  Size  Location     Type
 13630 ;;                  1    wreg      void 
 13631 ;; Registers used:
 13632 ;;		None
 13633 ;; Tracked objects:
 13634 ;;		On entry : 0/0
 13635 ;;		On exit  : 0/0
 13636 ;;		Unchanged: 0/0
 13637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13642 ;;Total ram usage:        0 bytes
 13643 ;; Hardware stack levels used:    1
 13644 ;; Hardware stack levels required when called:   14
 13645 ;; This function calls:
 13646 ;;		Nothing
 13647 ;; This function is called by:
 13648 ;;		_ringBufferLUT
 13649 ;; This function uses a non-reentrant model
 13650 ;;
 13651                           
 13652                           	psect	text31
 13653  0170A8                     __ptext31:
 13654                           	opt stack 0
 13655  0170A8                     _TMR7_StartTimer:
 13656                           	opt stack 14
 13657                           
 13658                           ;tmr7.c: 102: T7CONbits.TMR7ON = 1;
 13659                           
 13660                           ;incstack = 0
 13661  0170A8  010F               	movlb	15	; () banked
 13662  0170AA  8130               	bsf	48,0,b	;volatile
 13663                           
 13664                           ; BSR set to: 15
 13665  0170AC  0012               	return		;funcret
 13666  0170AE                     __end_of_TMR7_StartTimer:
 13667                           	opt stack 0
 13668                           tblptru	equ	0xFF8
 13669                           tblptrh	equ	0xFF7
 13670                           tblptrl	equ	0xFF6
 13671                           tablat	equ	0xFF5
 13672                           prodh	equ	0xFF4
 13673                           prodl	equ	0xFF3
 13674                           intcon	equ	0xFF2
 13675                           indf0	equ	0xFEF
 13676                           postinc0	equ	0xFEE
 13677                           fsr0h	equ	0xFEA
 13678                           fsr0l	equ	0xFE9
 13679                           wreg	equ	0xFE8
 13680                           indf1	equ	0xFE7
 13681                           postdec1	equ	0xFE5
 13682                           plusw1	equ	0xFE3
 13683                           fsr1h	equ	0xFE2
 13684                           fsr1l	equ	0xFE1
 13685                           indf2	equ	0xFDF
 13686                           postinc2	equ	0xFDE
 13687                           postdec2	equ	0xFDD
 13688                           plusw2	equ	0xFDB
 13689                           fsr2h	equ	0xFDA
 13690                           fsr2l	equ	0xFD9
 13691                           status	equ	0xFD8
 13692                           
 13693 ;; *************** function _EUSART2_Read *****************
 13694 ;; Defined at:
 13695 ;;		line 137 in file "mcc_generated_files/eusart2.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;		None
 13698 ;; Auto vars:     Size  Location     Type
 13699 ;;  readValue       1   23[BANK1 ] unsigned char 
 13700 ;; Return value:  Size  Location     Type
 13701 ;;                  1    wreg      unsigned char 
 13702 ;; Registers used:
 13703 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13704 ;; Tracked objects:
 13705 ;;		On entry : 0/0
 13706 ;;		On exit  : 0/0
 13707 ;;		Unchanged: 0/0
 13708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13710 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13712 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13713 ;;Total ram usage:        1 bytes
 13714 ;; Hardware stack levels used:    1
 13715 ;; Hardware stack levels required when called:   14
 13716 ;; This function calls:
 13717 ;;		Nothing
 13718 ;; This function is called by:
 13719 ;;		_terminal_ringBufferPull
 13720 ;;		_getch
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           	psect	text32
 13725  016990                     __ptext32:
 13726                           	opt stack 0
 13727  016990                     _EUSART2_Read:
 13728                           	opt stack 15
 13729                           
 13730                           ;eusart2.c: 139: uint8_t readValue = 0;
 13731                           
 13732                           ; BSR set to: 15
 13733                           ;incstack = 0
 13734  016990  0E00               	movlw	0
 13735  016992  0101               	movlb	1	; () banked
 13736  016994  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13737                           
 13738                           ;eusart2.c: 141: while(0 == eusart2RxCount)
 13739  016996  D002               	goto	l369
 13740  016998                     l370:
 13741                           
 13742                           ; BSR set to: 1
 13743  016998  0004               	clrwdt		;# 
 13744                           
 13745                           ;eusart2.c: 144: LATFbits.LATF1 = 1;
 13746  01699A  827E               	bsf	3966,1,c	;volatile
 13747  01699C                     l369:
 13748  01699C  0101               	movlb	1	; () banked
 13749  01699E  51D2               	movf	_eusart2RxCount& (0+255),w,b	;volatile
 13750  0169A0  B4D8               	btfsc	status,2,c
 13751  0169A2  D7FA               	goto	l370
 13752                           
 13753                           ; BSR set to: 1
 13754                           ;eusart2.c: 145: }
 13755                           ;eusart2.c: 147: LATFbits.LATF1 = 0;
 13756  0169A4  927E               	bcf	3966,1,c	;volatile
 13757                           
 13758                           ; BSR set to: 1
 13759                           ;eusart2.c: 149: readValue = eusart2RxBuffer[eusart2RxTail++];
 13760  0169A6  51D3               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 13761  0169A8  0D01               	mullw	1
 13762  0169AA  0E00               	movlw	low _eusart2RxBuffer
 13763  0169AC  24F3               	addwf	prodl,w,c
 13764  0169AE  6ED9               	movwf	fsr2l,c
 13765  0169B0  0E02               	movlw	high _eusart2RxBuffer
 13766  0169B2  20F4               	addwfc	prodh,w,c
 13767  0169B4  6EDA               	movwf	fsr2h,c
 13768  0169B6  50DF               	movf	indf2,w,c
 13769  0169B8  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
 13770                           
 13771                           ; BSR set to: 1
 13772  0169BA  2BD3               	incf	_eusart2RxTail& (0+255),f,b	;volatile
 13773                           
 13774                           ; BSR set to: 1
 13775                           ;eusart2.c: 150: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
 13776  0169BC  0E3F               	movlw	63
 13777  0169BE  65D3               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
 13778  0169C0  D002               	goto	l372
 13779                           
 13780                           ; BSR set to: 1
 13781                           ;eusart2.c: 151: {
 13782                           ;eusart2.c: 152: eusart2RxTail = 0;
 13783  0169C2  0E00               	movlw	0
 13784  0169C4  6FD3               	movwf	_eusart2RxTail& (0+255),b	;volatile
 13785  0169C6                     l372:
 13786                           
 13787                           ; BSR set to: 1
 13788                           ;eusart2.c: 153: }
 13789                           ;eusart2.c: 154: PIE3bits.RC2IE = 0;
 13790                           
 13791                           ; BSR set to: 1
 13792  0169C6  010E               	movlb	14	; () banked
 13793  0169C8  9F2C               	bcf	44,7,b	;volatile
 13794                           
 13795                           ; BSR set to: 14
 13796                           ;eusart2.c: 155: eusart2RxCount--;
 13797  0169CA  0101               	movlb	1	; () banked
 13798  0169CC  07D2               	decf	_eusart2RxCount& (0+255),f,b	;volatile
 13799                           
 13800                           ; BSR set to: 1
 13801                           ;eusart2.c: 156: PIE3bits.RC2IE = 1;
 13802  0169CE  010E               	movlb	14	; () banked
 13803  0169D0  8F2C               	bsf	44,7,b	;volatile
 13804                           
 13805                           ; BSR set to: 14
 13806                           ;eusart2.c: 158: return readValue;
 13807  0169D2  0101               	movlb	1	; () banked
 13808  0169D4  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
 13809  0169D6  0012               	return	
 13810  0169D8                     __end_of_EUSART2_Read:
 13811                           	opt stack 0
 13812                           tblptru	equ	0xFF8
 13813                           tblptrh	equ	0xFF7
 13814                           tblptrl	equ	0xFF6
 13815                           tablat	equ	0xFF5
 13816                           prodh	equ	0xFF4
 13817                           prodl	equ	0xFF3
 13818                           intcon	equ	0xFF2
 13819                           indf0	equ	0xFEF
 13820                           postinc0	equ	0xFEE
 13821                           fsr0h	equ	0xFEA
 13822                           fsr0l	equ	0xFE9
 13823                           wreg	equ	0xFE8
 13824                           indf1	equ	0xFE7
 13825                           postdec1	equ	0xFE5
 13826                           plusw1	equ	0xFE3
 13827                           fsr1h	equ	0xFE2
 13828                           fsr1l	equ	0xFE1
 13829                           indf2	equ	0xFDF
 13830                           postinc2	equ	0xFDE
 13831                           postdec2	equ	0xFDD
 13832                           plusw2	equ	0xFDB
 13833                           fsr2h	equ	0xFDA
 13834                           fsr2l	equ	0xFD9
 13835                           status	equ	0xFD8
 13836                           
 13837 ;; *************** function _terminal_clearTerminal *****************
 13838 ;; Defined at:
 13839 ;;		line 80 in file "ring_buffer_interface.c"
 13840 ;; Parameters:    Size  Location     Type
 13841 ;;		None
 13842 ;; Auto vars:     Size  Location     Type
 13843 ;;		None
 13844 ;; Return value:  Size  Location     Type
 13845 ;;                  1    wreg      void 
 13846 ;; Registers used:
 13847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13848 ;; Tracked objects:
 13849 ;;		On entry : 0/0
 13850 ;;		On exit  : 0/0
 13851 ;;		Unchanged: 0/0
 13852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13857 ;;Total ram usage:        0 bytes
 13858 ;; Hardware stack levels used:    1
 13859 ;; Hardware stack levels required when called:   18
 13860 ;; This function calls:
 13861 ;;		_printf
 13862 ;; This function is called by:
 13863 ;;		_main
 13864 ;; This function uses a non-reentrant model
 13865 ;;
 13866                           
 13867                           	psect	text33
 13868  016FFC                     __ptext33:
 13869                           	opt stack 0
 13870  016FFC                     _terminal_clearTerminal:
 13871                           	opt stack 12
 13872                           
 13873                           ;ring_buffer_interface.c: 81: printf("\033[2J");
 13874                           
 13875                           ; BSR set to: 1
 13876                           ;incstack = 0
 13877  016FFC  0EAF               	movlw	low STR_2
 13878  016FFE  0101               	movlb	1	; () banked
 13879  017000  6F64               	movwf	printf@f& (0+255),b
 13880  017002  0EFF               	movlw	high STR_2
 13881  017004  6F65               	movwf	(printf@f+1)& (0+255),b
 13882  017006  EC71  F086         	call	_printf	;wreg free
 13883  01700A  0012               	return		;funcret
 13884  01700C                     __end_of_terminal_clearTerminal:
 13885                           	opt stack 0
 13886                           tblptru	equ	0xFF8
 13887                           tblptrh	equ	0xFF7
 13888                           tblptrl	equ	0xFF6
 13889                           tablat	equ	0xFF5
 13890                           prodh	equ	0xFF4
 13891                           prodl	equ	0xFF3
 13892                           intcon	equ	0xFF2
 13893                           indf0	equ	0xFEF
 13894                           postinc0	equ	0xFEE
 13895                           fsr0h	equ	0xFEA
 13896                           fsr0l	equ	0xFE9
 13897                           wreg	equ	0xFE8
 13898                           indf1	equ	0xFE7
 13899                           postdec1	equ	0xFE5
 13900                           plusw1	equ	0xFE3
 13901                           fsr1h	equ	0xFE2
 13902                           fsr1l	equ	0xFE1
 13903                           indf2	equ	0xFDF
 13904                           postinc2	equ	0xFDE
 13905                           postdec2	equ	0xFDD
 13906                           plusw2	equ	0xFDB
 13907                           fsr2h	equ	0xFDA
 13908                           fsr2l	equ	0xFD9
 13909                           status	equ	0xFD8
 13910                           
 13911 ;; *************** function _printf *****************
 13912 ;; Defined at:
 13913 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 13914 ;; Parameters:    Size  Location     Type
 13915 ;;  f               2  100[BANK1 ] PTR const unsigned char 
 13916 ;;		 -> STR_116(30), STR_115(23), STR_114(39), STR_113(37), 
 13917 ;;		 -> STR_112(33), STR_111(1951), STR_109(53), STR_107(58), 
 13918 ;;		 -> STR_105(71), STR_104(63), STR_103(37), STR_102(46), 
 13919 ;;		 -> STR_101(102), STR_100(86), STR_98(25), STR_96(42), 
 13920 ;;		 -> STR_94(41), STR_92(40), STR_90(56), STR_88(34), 
 13921 ;;		 -> STR_86(34), STR_84(32), STR_82(37), STR_80(56), 
 13922 ;;		 -> STR_78(34), STR_76(34), STR_74(35), STR_72(21), 
 13923 ;;		 -> STR_70(24), STR_69(48), STR_59(49), STR_58(64), 
 13924 ;;		 -> STR_56(34), STR_54(82), STR_52(47), STR_51(17), 
 13925 ;;		 -> STR_48(52), STR_46(4), STR_45(5), STR_43(4), 
 13926 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 13927 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 13928 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 13929 ;;		 -> STR_1(4), 
 13930 ;; Auto vars:     Size  Location     Type
 13931 ;;  idx             1  119[BANK1 ] unsigned char 
 13932 ;;  val             4  134[BANK1 ] unsigned long 
 13933 ;;  tmpval          4  130[BANK1 ] struct .
 13934 ;;  fval            3  138[BANK1 ] struct .
 13935 ;;  prec            2  141[BANK1 ] int 
 13936 ;;  exp             2  128[BANK1 ] int 
 13937 ;;  flag            2  126[BANK1 ] unsigned short 
 13938 ;;  ap              2  124[BANK1 ] PTR void [1]
 13939 ;;		 -> ?i2_printf(2), ?_printf(2), 
 13940 ;;  cp              2  122[BANK1 ] PTR const unsigned char 
 13941 ;;		 -> STR_132(7), printf@c(1), STR_131(30), STR_130(22), 
 13942 ;;		 -> STR_129(21), STR_128(27), STR_127(29), STR_126(41), 
 13943 ;;		 -> STR_125(28), STR_124(32), STR_123(25), STR_122(19), 
 13944 ;;		 -> STR_121(16), STR_120(15), RAM(3561), ringBufferLUT@channel_name(22), 
 13945 ;;		 -> TRIAC_Firing_Angle(3), 
 13946 ;;  len             2  120[BANK1 ] unsigned int 
 13947 ;;  width           2    0        int 
 13948 ;;  c               1  143[BANK1 ] char 
 13949 ;;  d               1    0        unsigned char 
 13950 ;; Return value:  Size  Location     Type
 13951 ;;                  2  100[BANK1 ] int 
 13952 ;; Registers used:
 13953 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13954 ;; Tracked objects:
 13955 ;;		On entry : 0/0
 13956 ;;		On exit  : 0/0
 13957 ;;		Unchanged: 0/0
 13958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13959 ;;      Params:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13960 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13961 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13962 ;;      Totals:         0       0      44       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13963 ;;Total ram usage:       44 bytes
 13964 ;; Hardware stack levels used:    1
 13965 ;; Hardware stack levels required when called:   17
 13966 ;; This function calls:
 13967 ;;		___awdiv
 13968 ;;		___ftadd
 13969 ;;		___ftge
 13970 ;;		___ftmul
 13971 ;;		___ftneg
 13972 ;;		___ftsub
 13973 ;;		___fttol
 13974 ;;		___lldiv
 13975 ;;		___llmod
 13976 ;;		___lltoft
 13977 ;;		___wmul
 13978 ;;		__div_to_l_
 13979 ;;		__tdiv_to_l_
 13980 ;;		_fround
 13981 ;;		_isdigit
 13982 ;;		_putch
 13983 ;;		_scale
 13984 ;; This function is called by:
 13985 ;;		_terminal_clearTerminal
 13986 ;;		_terminal_setCursorHome
 13987 ;;		_terminal_textAttributes
 13988 ;;		_terminal_printNewline
 13989 ;;		_ringBufferLUT
 13990 ;;		_terminal_printResetMessage
 13991 ;;		_terminal_clearLine
 13992 ;;		_terminal_saveCursor
 13993 ;;		_terminal_returnCursor
 13994 ;; This function uses a non-reentrant model
 13995 ;;
 13996                           
 13997                           	psect	text34
 13998  010CE2                     __ptext34:
 13999                           	opt stack 0
 14000  010CE2                     _printf:
 14001                           	opt stack 11
 14002                           
 14003                           ;doprnt.c: 466: va_list ap;
 14004                           ;doprnt.c: 499: signed char c;
 14005                           ;doprnt.c: 501: int width;
 14006                           ;doprnt.c: 504: int prec;
 14007                           ;doprnt.c: 508: unsigned short flag;
 14008                           ;doprnt.c: 515: char d;
 14009                           ;doprnt.c: 516: double fval;
 14010                           ;doprnt.c: 517: int exp;
 14011                           ;doprnt.c: 523: union {
 14012                           ;doprnt.c: 524: unsigned long vd;
 14013                           ;doprnt.c: 525: double integ;
 14014                           ;doprnt.c: 526: } tmpval;
 14015                           ;doprnt.c: 528: unsigned long val;
 14016                           ;doprnt.c: 529: unsigned len;
 14017                           ;doprnt.c: 530: const char * cp;
 14018                           ;doprnt.c: 533: *ap = __va_start();
 14019                           
 14020                           ;incstack = 0
 14021  010CE2  0E66               	movlw	low (?_printf+2)
 14022  010CE4  0101               	movlb	1	; () banked
 14023  010CE6  6F7C               	movwf	printf@ap& (0+255),b
 14024  010CE8  0E01               	movlw	high (?_printf+2)
 14025  010CEA  6F7D               	movwf	(printf@ap+1)& (0+255),b
 14026                           
 14027                           ;doprnt.c: 536: while(c = *f++) {
 14028  010CEC  EFAF  F08B         	goto	u12850
 14029  010CF0                     
 14030                           ; BSR set to: 1
 14031                           ;doprnt.c: 538: if(c != '%')
 14032                           
 14033                           ; BSR set to: 1
 14034  010CF0  0E25               	movlw	37
 14035  010CF2  198F               	xorwf	printf@c& (0+255),w,b
 14036  010CF4  B4D8               	btfsc	status,2,c
 14037  010CF6  D005               	goto	l1315
 14038                           
 14039                           ; BSR set to: 1
 14040                           ;doprnt.c: 540: {
 14041                           ;doprnt.c: 541: (putch(c) );
 14042  010CF8  518F               	movf	printf@c& (0+255),w,b
 14043  010CFA  EC0D  F0B8         	call	_putch
 14044                           
 14045                           ;doprnt.c: 542: continue;
 14046  010CFE  EFAF  F08B         	goto	u12850
 14047  010D02                     l1315:
 14048                           
 14049                           ;doprnt.c: 543: }
 14050                           ;doprnt.c: 548: flag = 0;
 14051  010D02  0E00               	movlw	0
 14052  010D04  0101               	movlb	1	; () banked
 14053  010D06  6F7F               	movwf	(printf@flag+1)& (0+255),b
 14054  010D08  0E00               	movlw	0
 14055  010D0A  6F7E               	movwf	printf@flag& (0+255),b
 14056                           
 14057                           ; BSR set to: 1
 14058                           ;doprnt.c: 611: if(*f == '.') {
 14059  010D0C  C164  FFF6         	movff	printf@f,tblptrl
 14060  010D10  C165  FFF7         	movff	printf@f+1,tblptrh
 14061  010D14  0E00               	movlw	low (__mediumconst shr (0+16))
 14062  010D16  6EF8               	movwf	tblptru,c
 14063  010D18  0E0D               	movlw	(high __ramtop+-1)
 14064  010D1A  64F7               	cpfsgt	tblptrh,c
 14065  010D1C  D003               	bra	u12357
 14066  010D1E  0008               	tblrd		*
 14067  010D20  50F5               	movf	tablat,w,c
 14068  010D22  D005               	bra	u12350
 14069  010D24                     u12357:
 14070  010D24  CFF6 FFE9          	movff	tblptrl,fsr0l
 14071  010D28  CFF7 FFEA          	movff	tblptrh,fsr0h
 14072  010D2C  50EF               	movf	indf0,w,c
 14073  010D2E                     u12350:
 14074  010D2E  0A2E               	xorlw	46
 14075  010D30  A4D8               	btfss	status,2,c
 14076  010D32  D049               	goto	l1316
 14077                           
 14078                           ;doprnt.c: 612: flag |= 0x4000;
 14079  010D34  0101               	movlb	1	; () banked
 14080  010D36  8D7F               	bsf	(printf@flag+1)& (0+255),6,b
 14081                           
 14082                           ;doprnt.c: 613: f++;
 14083  010D38  4B64               	infsnz	printf@f& (0+255),f,b
 14084  010D3A  2B65               	incf	(printf@f+1)& (0+255),f,b
 14085                           
 14086                           ; BSR set to: 1
 14087                           ;doprnt.c: 620: {
 14088                           ;doprnt.c: 621: prec = 0;
 14089  010D3C  0E00               	movlw	0
 14090  010D3E  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14091  010D40  0E00               	movlw	0
 14092  010D42  6F8D               	movwf	printf@prec& (0+255),b
 14093                           
 14094                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 14095  010D44  D02A               	goto	l1317
 14096  010D46                     
 14097                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 14098                           
 14099                           ; BSR set to: 1
 14100  010D46  C18D  F125         	movff	printf@prec,___wmul@multiplier
 14101  010D4A  C18E  F126         	movff	printf@prec+1,___wmul@multiplier+1
 14102  010D4E  0E00               	movlw	0
 14103  010D50  0101               	movlb	1	; () banked
 14104  010D52  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14105  010D54  0E0A               	movlw	10
 14106  010D56  6F27               	movwf	___wmul@multiplicand& (0+255),b
 14107  010D58  ECB3  F0B6         	call	___wmul	;wreg free
 14108  010D5C  C164  FFF6         	movff	printf@f,tblptrl
 14109  010D60  C165  FFF7         	movff	printf@f+1,tblptrh
 14110  010D64  0E00               	movlw	low (__mediumconst shr (0+16))
 14111  010D66  6EF8               	movwf	tblptru,c
 14112  010D68  0E0D               	movlw	(high __ramtop+-1)
 14113  010D6A  64F7               	cpfsgt	tblptrh,c
 14114  010D6C  D003               	bra	u12377
 14115  010D6E  0008               	tblrd		*
 14116  010D70  50F5               	movf	tablat,w,c
 14117  010D72  D005               	bra	u12370
 14118  010D74                     u12377:
 14119  010D74  CFF6 FFE9          	movff	tblptrl,fsr0l
 14120  010D78  CFF7 FFEA          	movff	tblptrh,fsr0h
 14121  010D7C  50EF               	movf	indf0,w,c
 14122  010D7E                     u12370:
 14123  010D7E  0101               	movlb	1	; () banked
 14124  010D80  6F6E               	movwf	??_printf& (0+255),b
 14125  010D82  516E               	movf	??_printf& (0+255),w,b
 14126  010D84  2725               	addwf	?___wmul& (0+255),f,b
 14127  010D86  0E00               	movlw	0
 14128  010D88  2326               	addwfc	(?___wmul+1)& (0+255),f,b
 14129  010D8A  0ED0               	movlw	208
 14130  010D8C  2525               	addwf	?___wmul& (0+255),w,b
 14131  010D8E  6F8D               	movwf	printf@prec& (0+255),b
 14132  010D90  0EFF               	movlw	255
 14133  010D92  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 14134  010D94  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14135                           
 14136                           ; BSR set to: 1
 14137  010D96  4B64               	infsnz	printf@f& (0+255),f,b
 14138  010D98  2B65               	incf	(printf@f+1)& (0+255),f,b
 14139  010D9A                     l1317:
 14140                           
 14141                           ; BSR set to: 1
 14142                           
 14143                           ; BSR set to: 1
 14144  010D9A  C164  FFF6         	movff	printf@f,tblptrl
 14145  010D9E  C165  FFF7         	movff	printf@f+1,tblptrh
 14146  010DA2  0E00               	movlw	low (__mediumconst shr (0+16))
 14147  010DA4  6EF8               	movwf	tblptru,c
 14148  010DA6  0E0D               	movlw	(high __ramtop+-1)
 14149  010DA8  64F7               	cpfsgt	tblptrh,c
 14150  010DAA  D003               	bra	u12387
 14151  010DAC  0008               	tblrd		*
 14152  010DAE  50F5               	movf	tablat,w,c
 14153  010DB0  D005               	bra	u12380
 14154  010DB2                     u12387:
 14155  010DB2  CFF6 FFE9          	movff	tblptrl,fsr0l
 14156  010DB6  CFF7 FFEA          	movff	tblptrh,fsr0h
 14157  010DBA  50EF               	movf	indf0,w,c
 14158  010DBC                     u12380:
 14159  010DBC  EC5F  F0B7         	call	_isdigit
 14160  010DC0  A0D8               	btfss	status,0,c
 14161  010DC2  D07E               	goto	l1321
 14162  010DC4  D7C0               	goto	l1318
 14163  010DC6                     l1316:
 14164                           
 14165                           ;doprnt.c: 626: prec = 0;
 14166  010DC6  0E00               	movlw	0
 14167  010DC8  0101               	movlb	1	; () banked
 14168  010DCA  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14169  010DCC  0E00               	movlw	0
 14170  010DCE  6F8D               	movwf	printf@prec& (0+255),b
 14171                           
 14172                           ; BSR set to: 1
 14173                           ;doprnt.c: 628: flag |= 0x1000;
 14174  010DD0  897F               	bsf	(printf@flag+1)& (0+255),4,b
 14175                           
 14176                           ; BSR set to: 1
 14177                           ;doprnt.c: 630: }
 14178                           ;doprnt.c: 635: switch(c = *f++) {
 14179  010DD2  D076               	goto	l1321
 14180  010DD4                     
 14181                           ; BSR set to: 1
 14182                           ;doprnt.c: 663: flag |= 0x400;
 14183                           
 14184                           ; BSR set to: 1
 14185  010DD4  857F               	bsf	(printf@flag+1)& (0+255),2,b
 14186                           
 14187                           ; BSR set to: 1
 14188                           ;doprnt.c: 698: case 'i':
 14189                           ;doprnt.c: 699: break;
 14190                           
 14191                           ; BSR set to: 1
 14192                           
 14193                           ;doprnt.c: 697: case 'd':
 14194                           
 14195                           ;doprnt.c: 664: break;
 14196  010DD6  D0A8               	goto	l1325
 14197  010DD8                     
 14198                           ; BSR set to: 1
 14199                           ;doprnt.c: 718: case 'x':
 14200                           ;doprnt.c: 721: flag |= 0x80;
 14201                           
 14202                           ; BSR set to: 1
 14203                           
 14204                           ; BSR set to: 1
 14205  010DD8  8F7E               	bsf	printf@flag& (0+255),7,b
 14206                           
 14207                           ;doprnt.c: 723: break;
 14208  010DDA  D0A6               	goto	l1325
 14209  010DDC                     
 14210                           ; BSR set to: 1
 14211                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 14212                           
 14213                           ; BSR set to: 1
 14214  010DDC  C17C  FFD9         	movff	printf@ap,fsr2l
 14215  010DE0  C17D  FFDA         	movff	printf@ap+1,fsr2h
 14216  010DE4  CFDE F17A          	movff	postinc2,printf@cp
 14217  010DE8  CFDD F17B          	movff	postdec2,printf@cp+1
 14218                           
 14219                           ; BSR set to: 1
 14220  010DEC  0E02               	movlw	2
 14221  010DEE  277C               	addwf	printf@ap& (0+255),f,b
 14222  010DF0  0E00               	movlw	0
 14223  010DF2  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 14224                           
 14225                           ; BSR set to: 1
 14226                           ;doprnt.c: 740: if(!cp)
 14227  010DF4  517A               	movf	printf@cp& (0+255),w,b
 14228  010DF6  117B               	iorwf	(printf@cp+1)& (0+255),w,b
 14229  010DF8  A4D8               	btfss	status,2,c
 14230  010DFA  D004               	goto	l1331
 14231                           
 14232                           ; BSR set to: 1
 14233                           ;doprnt.c: 741: cp = "(null)";
 14234  010DFC  0E85               	movlw	low STR_132
 14235  010DFE  6F7A               	movwf	printf@cp& (0+255),b
 14236  010E00  0EFF               	movlw	high STR_132
 14237  010E02  6F7B               	movwf	(printf@cp+1)& (0+255),b
 14238  010E04                     l1331:
 14239                           
 14240                           ; BSR set to: 1
 14241                           ;doprnt.c: 745: len = 0;
 14242                           
 14243                           ; BSR set to: 1
 14244  010E04  0E00               	movlw	0
 14245  010E06  6F79               	movwf	(printf@len+1)& (0+255),b
 14246  010E08  0E00               	movlw	0
 14247  010E0A  6F78               	movwf	printf@len& (0+255),b
 14248                           
 14249                           ;doprnt.c: 746: while(cp[len])
 14250  010E0C  D003               	goto	l1332
 14251  010E0E                     
 14252                           ;doprnt.c: 747: len++;
 14253                           
 14254                           ; BSR set to: 1
 14255  010E0E  0101               	movlb	1	; () banked
 14256  010E10  4B78               	infsnz	printf@len& (0+255),f,b
 14257  010E12  2B79               	incf	(printf@len+1)& (0+255),f,b
 14258  010E14                     l1332:
 14259                           
 14260                           ; BSR set to: 1
 14261                           
 14262                           ; BSR set to: 1
 14263  010E14  5178               	movf	printf@len& (0+255),w,b
 14264  010E16  257A               	addwf	printf@cp& (0+255),w,b
 14265  010E18  6F6E               	movwf	??_printf& (0+255),b
 14266  010E1A  5179               	movf	(printf@len+1)& (0+255),w,b
 14267  010E1C  217B               	addwfc	(printf@cp+1)& (0+255),w,b
 14268  010E1E  6F6F               	movwf	(??_printf+1)& (0+255),b
 14269  010E20  C16E  FFF6         	movff	??_printf,tblptrl
 14270  010E24  C16F  FFF7         	movff	??_printf+1,tblptrh
 14271  010E28  0E00               	movlw	low (__mediumconst shr (0+16))
 14272  010E2A  6EF8               	movwf	tblptru,c
 14273  010E2C  0E0D               	movlw	(high __ramtop+-1)
 14274  010E2E  64F7               	cpfsgt	tblptrh,c
 14275  010E30  D003               	bra	u12417
 14276  010E32  0008               	tblrd		*
 14277  010E34  50F5               	movf	tablat,w,c
 14278  010E36  D005               	bra	u12410
 14279  010E38                     u12417:
 14280  010E38  CFF6 FFE9          	movff	tblptrl,fsr0l
 14281  010E3C  CFF7 FFEA          	movff	tblptrh,fsr0h
 14282  010E40  50EF               	movf	indf0,w,c
 14283  010E42                     u12410:
 14284  010E42  0900               	iorlw	0
 14285  010E44  A4D8               	btfss	status,2,c
 14286  010E46  D7E3               	goto	l1333
 14287  010E48                     u12420:
 14288                           
 14289                           ;doprnt.c: 753: if(prec && prec < len)
 14290                           
 14291                           ;doprnt.c: 750: dostring:
 14292  010E48  0101               	movlb	1	; () banked
 14293  010E4A  518D               	movf	printf@prec& (0+255),w,b
 14294  010E4C  118E               	iorwf	(printf@prec+1)& (0+255),w,b
 14295  010E4E  B4D8               	btfsc	status,2,c
 14296  010E50  D021               	goto	l1337
 14297                           
 14298                           ; BSR set to: 1
 14299  010E52  5178               	movf	printf@len& (0+255),w,b
 14300  010E54  5D8D               	subwf	printf@prec& (0+255),w,b
 14301  010E56  5179               	movf	(printf@len+1)& (0+255),w,b
 14302  010E58  598E               	subwfb	(printf@prec+1)& (0+255),w,b
 14303  010E5A  B0D8               	btfsc	status,0,c
 14304  010E5C  D01B               	goto	l1337
 14305                           
 14306                           ; BSR set to: 1
 14307                           ;doprnt.c: 754: len = prec;
 14308  010E5E  C18D  F178         	movff	printf@prec,printf@len
 14309  010E62  C18E  F179         	movff	printf@prec+1,printf@len+1
 14310                           
 14311                           ; BSR set to: 1
 14312                           ;doprnt.c: 767: while(len--)
 14313  010E66  D016               	goto	l1337
 14314  010E68                     l10457:
 14315                           
 14316                           ; BSR set to: 1
 14317                           ;doprnt.c: 768: (putch(*cp++) );
 14318  010E68  C17A  FFF6         	movff	printf@cp,tblptrl
 14319  010E6C  C17B  FFF7         	movff	printf@cp+1,tblptrh
 14320  010E70  0E00               	movlw	low (__mediumconst shr (0+16))
 14321  010E72  6EF8               	movwf	tblptru,c
 14322  010E74  0E0D               	movlw	(high __ramtop+-1)
 14323  010E76  64F7               	cpfsgt	tblptrh,c
 14324  010E78  D003               	bra	u12457
 14325  010E7A  0008               	tblrd		*
 14326  010E7C  50F5               	movf	tablat,w,c
 14327  010E7E  D005               	bra	u12450
 14328  010E80                     u12457:
 14329  010E80  CFF6 FFE9          	movff	tblptrl,fsr0l
 14330  010E84  CFF7 FFEA          	movff	tblptrh,fsr0h
 14331  010E88  50EF               	movf	indf0,w,c
 14332  010E8A                     u12450:
 14333  010E8A  EC0D  F0B8         	call	_putch
 14334  010E8E  0101               	movlb	1	; () banked
 14335  010E90  4B7A               	infsnz	printf@cp& (0+255),f,b
 14336  010E92  2B7B               	incf	(printf@cp+1)& (0+255),f,b
 14337  010E94                     l1337:
 14338                           
 14339                           ; BSR set to: 1
 14340                           
 14341                           ; BSR set to: 1
 14342  010E94  0778               	decf	printf@len& (0+255),f,b
 14343  010E96  A0D8               	btfss	status,0,c
 14344  010E98  0779               	decf	(printf@len+1)& (0+255),f,b
 14345  010E9A  2978               	incf	printf@len& (0+255),w,b
 14346  010E9C  E1E5               	bnz	l10457
 14347  010E9E  2979               	incf	(printf@len+1)& (0+255),w,b
 14348  010EA0  B4D8               	btfsc	status,2,c
 14349  010EA2  EFAF  F08B         	goto	u12850
 14350  010EA6  D7E0               	goto	l1338
 14351  010EA8                     
 14352                           ; BSR set to: 1
 14353                           ;doprnt.c: 805: cp = (char *)&c;
 14354                           
 14355                           ; BSR set to: 1
 14356  010EA8  0E8F               	movlw	low printf@c
 14357  010EAA  6F7A               	movwf	printf@cp& (0+255),b
 14358  010EAC  0E01               	movlw	high printf@c
 14359  010EAE  6F7B               	movwf	(printf@cp+1)& (0+255),b
 14360                           
 14361                           ; BSR set to: 1
 14362                           ;doprnt.c: 806: len = 1;
 14363  010EB0  0E00               	movlw	0
 14364  010EB2  6F79               	movwf	(printf@len+1)& (0+255),b
 14365  010EB4  0E01               	movlw	1
 14366  010EB6  6F78               	movwf	printf@len& (0+255),b
 14367                           
 14368                           ;doprnt.c: 807: goto dostring;
 14369  010EB8  D7C7               	goto	u12420
 14370  010EBA                     
 14371                           ; BSR set to: 1
 14372                           ;doprnt.c: 818: flag |= 0xC0;
 14373                           
 14374                           ; BSR set to: 1
 14375  010EBA  0EC0               	movlw	192
 14376  010EBC  137E               	iorwf	printf@flag& (0+255),f,b
 14377                           
 14378                           ; BSR set to: 1
 14379                           ;doprnt.c: 822: }
 14380                           
 14381                           ;doprnt.c: 819: break;
 14382  010EBE  D034               	goto	l1325
 14383  010EC0                     l1321:
 14384                           
 14385                           ; BSR set to: 1
 14386  010EC0  0101               	movlb	1	; () banked
 14387  010EC2  5164               	movf	printf@f& (0+255),w,b
 14388  010EC4  6F6E               	movwf	??_printf& (0+255),b
 14389  010EC6  5165               	movf	(printf@f+1)& (0+255),w,b
 14390  010EC8  6F6F               	movwf	(??_printf+1)& (0+255),b
 14391  010ECA  4B64               	infsnz	printf@f& (0+255),f,b
 14392  010ECC  2B65               	incf	(printf@f+1)& (0+255),f,b
 14393  010ECE  C16E  FFF6         	movff	??_printf,tblptrl
 14394  010ED2  C16F  FFF7         	movff	??_printf+1,tblptrh
 14395  010ED6  0E00               	movlw	low (__mediumconst shr (0+16))
 14396  010ED8  6EF8               	movwf	tblptru,c
 14397  010EDA  0E0D               	movlw	(high __ramtop+-1)
 14398  010EDC  64F7               	cpfsgt	tblptrh,c
 14399  010EDE  D003               	bra	u12477
 14400  010EE0  0008               	tblrd		*
 14401  010EE2  50F5               	movf	tablat,w,c
 14402  010EE4  D005               	bra	u12470
 14403  010EE6                     u12477:
 14404  010EE6  CFF6 FFE9          	movff	tblptrl,fsr0l
 14405  010EEA  CFF7 FFEA          	movff	tblptrh,fsr0h
 14406  010EEE  50EF               	movf	indf0,w,c
 14407  010EF0                     u12470:
 14408  010EF0  0101               	movlb	1	; () banked
 14409  010EF2  6F8F               	movwf	printf@c& (0+255),b
 14410  010EF4  518F               	movf	printf@c& (0+255),w,b
 14411                           
 14412                           ; Switch size 1, requested type "space"
 14413                           ; Number of cases is 8, Range of values is 0 to 120
 14414                           ; switch strategies available:
 14415                           ; Name         Instructions Cycles
 14416                           ; simple_byte           25    13 (average)
 14417                           ;	Chosen strategy is simple_byte
 14418  010EF6  0A00               	xorlw	0	; case 0
 14419  010EF8  B4D8               	btfsc	status,2,c
 14420  010EFA  0012               	return	
 14421  010EFC  0A58               	xorlw	88	; case 88
 14422  010EFE  B4D8               	btfsc	status,2,c
 14423  010F00  D76B               	goto	l1328
 14424  010F02  0A3C               	xorlw	60	; case 100
 14425  010F04  B4D8               	btfsc	status,2,c
 14426  010F06  D010               	goto	l1325
 14427  010F08  0A02               	xorlw	2	; case 102
 14428  010F0A  B4D8               	btfsc	status,2,c
 14429  010F0C  D763               	goto	l1324
 14430  010F0E  0A0F               	xorlw	15	; case 105
 14431  010F10  B4D8               	btfsc	status,2,c
 14432  010F12  D00A               	goto	l1325
 14433  010F14  0A1A               	xorlw	26	; case 115
 14434  010F16  B4D8               	btfsc	status,2,c
 14435  010F18  D761               	goto	l1330
 14436  010F1A  0A06               	xorlw	6	; case 117
 14437  010F1C  B4D8               	btfsc	status,2,c
 14438  010F1E  D7CD               	goto	l1341
 14439  010F20  0A0D               	xorlw	13	; case 120
 14440  010F22  B4D8               	btfsc	status,2,c
 14441  010F24  D759               	goto	l1328
 14442  010F26  D7C0               	goto	l1340
 14443  010F28                     l1325:
 14444                           
 14445                           ; BSR set to: 1
 14446                           ;doprnt.c: 825: if(flag & (0x700)) {
 14447                           
 14448                           ; BSR set to: 1
 14449  010F28  0E07               	movlw	7
 14450  010F2A  157F               	andwf	(printf@flag+1)& (0+255),w,b
 14451  010F2C  B4D8               	btfsc	status,2,c
 14452  010F2E  D2C1               	goto	l1342
 14453                           
 14454                           ; BSR set to: 1
 14455                           ;doprnt.c: 827: if(flag & 0x1000)
 14456  010F30  A97F               	btfss	(printf@flag+1)& (0+255),4,b
 14457  010F32  D004               	goto	l1343
 14458                           
 14459                           ; BSR set to: 1
 14460                           ;doprnt.c: 829: prec = 6;
 14461  010F34  0E00               	movlw	0
 14462  010F36  6F8E               	movwf	(printf@prec+1)& (0+255),b
 14463  010F38  0E06               	movlw	6
 14464  010F3A  6F8D               	movwf	printf@prec& (0+255),b
 14465  010F3C                     l1343:
 14466                           
 14467                           ; BSR set to: 1
 14468                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 14469                           
 14470                           ; BSR set to: 1
 14471  010F3C  C17C  FFD9         	movff	printf@ap,fsr2l
 14472  010F40  C17D  FFDA         	movff	printf@ap+1,fsr2h
 14473  010F44  CFDE F18A          	movff	postinc2,printf@fval
 14474  010F48  CFDE F18B          	movff	postinc2,printf@fval+1
 14475  010F4C  CFDD F18C          	movff	postdec2,printf@fval+2
 14476                           
 14477                           ; BSR set to: 1
 14478  010F50  0E03               	movlw	3
 14479  010F52  277C               	addwf	printf@ap& (0+255),f,b
 14480  010F54  0E00               	movlw	0
 14481  010F56  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 14482                           
 14483                           ; BSR set to: 1
 14484                           ;doprnt.c: 831: if(fval < 0.0) {
 14485  010F58  AF8C               	btfss	(printf@fval+2)& (0+255),7,b
 14486  010F5A  D011               	goto	l1344
 14487                           
 14488                           ; BSR set to: 1
 14489                           ;doprnt.c: 832: fval = -fval;
 14490  010F5C  C18A  F123         	movff	printf@fval,___ftneg@f1
 14491  010F60  C18B  F124         	movff	printf@fval+1,___ftneg@f1+1
 14492  010F64  C18C  F125         	movff	printf@fval+2,___ftneg@f1+2
 14493  010F68  EC02  F0B7         	call	___ftneg	;wreg free
 14494  010F6C  C123  F18A         	movff	?___ftneg,printf@fval
 14495  010F70  C124  F18B         	movff	?___ftneg+1,printf@fval+1
 14496  010F74  C125  F18C         	movff	?___ftneg+2,printf@fval+2
 14497                           
 14498                           ;doprnt.c: 833: flag |= 0x03;
 14499  010F78  0E03               	movlw	3
 14500  010F7A  0101               	movlb	1	; () banked
 14501  010F7C  137E               	iorwf	printf@flag& (0+255),f,b
 14502  010F7E                     l1344:
 14503                           
 14504                           ; BSR set to: 1
 14505                           ;doprnt.c: 834: }
 14506                           ;doprnt.c: 835: exp = 0;
 14507                           
 14508                           ; BSR set to: 1
 14509  010F7E  0E00               	movlw	0
 14510  010F80  6F81               	movwf	(printf@exp+1)& (0+255),b
 14511  010F82  0E00               	movlw	0
 14512  010F84  6F80               	movwf	printf@exp& (0+255),b
 14513                           
 14514                           ; BSR set to: 1
 14515                           ;doprnt.c: 836: if( fval!=0) {
 14516  010F86  518A               	movf	printf@fval& (0+255),w,b
 14517  010F88  118B               	iorwf	(printf@fval+1)& (0+255),w,b
 14518  010F8A  118C               	iorwf	(printf@fval+2)& (0+255),w,b
 14519  010F8C  B4D8               	btfsc	status,2,c
 14520  010F8E  D088               	goto	l1349
 14521                           
 14522                           ; BSR set to: 1
 14523                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 14524  010F90  0E82               	movlw	130
 14525  010F92  6F6E               	movwf	??_printf& (0+255),b
 14526  010F94  0EFF               	movlw	255
 14527  010F96  6F6F               	movwf	(??_printf+1)& (0+255),b
 14528  010F98  C18A  F170         	movff	printf@fval,??_printf+2
 14529  010F9C  C18B  F171         	movff	printf@fval+1,??_printf+3
 14530  010FA0  C18C  F172         	movff	printf@fval+2,??_printf+4
 14531  010FA4  C18D  F173         	movff	printf@fval+3,??_printf+5
 14532  010FA8  0E10               	movlw	16
 14533  010FAA  D005               	goto	u12520
 14534  010FAC                     u12525:
 14535  010FAC  90D8               	bcf	status,0,c
 14536  010FAE  3373               	rrcf	(??_printf+5)& (0+255),f,b
 14537  010FB0  3372               	rrcf	(??_printf+4)& (0+255),f,b
 14538  010FB2  3371               	rrcf	(??_printf+3)& (0+255),f,b
 14539  010FB4  3370               	rrcf	(??_printf+2)& (0+255),f,b
 14540  010FB6                     u12520:
 14541  010FB6  2EE8               	decfsz	wreg,f,c
 14542  010FB8  D7F9               	goto	u12525
 14543  010FBA  5170               	movf	(??_printf+2)& (0+255),w,b
 14544  010FBC  256E               	addwf	??_printf& (0+255),w,b
 14545  010FBE  6F80               	movwf	printf@exp& (0+255),b
 14546  010FC0  0E00               	movlw	0
 14547  010FC2  216F               	addwfc	(??_printf+1)& (0+255),w,b
 14548  010FC4  6F81               	movwf	(printf@exp+1)& (0+255),b
 14549                           
 14550                           ; BSR set to: 1
 14551                           ;doprnt.c: 838: exp--;
 14552  010FC6  0780               	decf	printf@exp& (0+255),f,b
 14553  010FC8  A0D8               	btfss	status,0,c
 14554  010FCA  0781               	decf	(printf@exp+1)& (0+255),f,b
 14555                           
 14556                           ; BSR set to: 1
 14557                           ;doprnt.c: 839: exp *= 3;
 14558  010FCC  C180  F125         	movff	printf@exp,___wmul@multiplier
 14559  010FD0  C181  F126         	movff	printf@exp+1,___wmul@multiplier+1
 14560  010FD4  0E00               	movlw	0
 14561  010FD6  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14562  010FD8  0E03               	movlw	3
 14563  010FDA  6F27               	movwf	___wmul@multiplicand& (0+255),b
 14564  010FDC  ECB3  F0B6         	call	___wmul	;wreg free
 14565  010FE0  C125  F180         	movff	?___wmul,printf@exp
 14566  010FE4  C126  F181         	movff	?___wmul+1,printf@exp+1
 14567                           
 14568                           ;doprnt.c: 840: exp /= 10;
 14569  010FE8  C180  F11D         	movff	printf@exp,___awdiv@dividend
 14570  010FEC  C181  F11E         	movff	printf@exp+1,___awdiv@dividend+1
 14571  010FF0  0E00               	movlw	0
 14572  010FF2  0101               	movlb	1	; () banked
 14573  010FF4  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 14574  010FF6  0E0A               	movlw	10
 14575  010FF8  6F1F               	movwf	___awdiv@divisor& (0+255),b
 14576  010FFA  EC3A  F0AF         	call	___awdiv	;wreg free
 14577  010FFE  C11D  F180         	movff	?___awdiv,printf@exp
 14578  011002  C11E  F181         	movff	?___awdiv+1,printf@exp+1
 14579                           
 14580                           ;doprnt.c: 841: if(exp < 0)
 14581  011006  0101               	movlb	1	; () banked
 14582  011008  AF81               	btfss	(printf@exp+1)& (0+255),7,b
 14583  01100A  D003               	goto	l1346
 14584                           
 14585                           ; BSR set to: 1
 14586                           ;doprnt.c: 842: exp--;
 14587  01100C  0780               	decf	printf@exp& (0+255),f,b
 14588  01100E  A0D8               	btfss	status,0,c
 14589  011010  0781               	decf	(printf@exp+1)& (0+255),f,b
 14590  011012                     l1346:
 14591                           
 14592                           ; BSR set to: 1
 14593                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 14594                           
 14595                           ; BSR set to: 1
 14596  011012  5180               	movf	printf@exp& (0+255),w,b
 14597  011014  0800               	sublw	0
 14598  011016  EC64  F094         	call	_scale
 14599  01101A  C155  F182         	movff	?_scale,printf@tmpval
 14600  01101E  C156  F183         	movff	?_scale+1,printf@tmpval+1
 14601  011022  C157  F184         	movff	?_scale+2,printf@tmpval+2
 14602                           
 14603                           ;doprnt.c: 847: tmpval.integ *= fval;
 14604  011026  C182  F146         	movff	printf@tmpval,___ftmul@f1
 14605  01102A  C183  F147         	movff	printf@tmpval+1,___ftmul@f1+1
 14606  01102E  C184  F148         	movff	printf@tmpval+2,___ftmul@f1+2
 14607  011032  C18A  F149         	movff	printf@fval,___ftmul@f2
 14608  011036  C18B  F14A         	movff	printf@fval+1,___ftmul@f2+1
 14609  01103A  C18C  F14B         	movff	printf@fval+2,___ftmul@f2+2
 14610  01103E  EC0C  F0A7         	call	___ftmul	;wreg free
 14611  011042  C146  F182         	movff	?___ftmul,printf@tmpval
 14612  011046  C147  F183         	movff	?___ftmul+1,printf@tmpval+1
 14613  01104A  C148  F184         	movff	?___ftmul+2,printf@tmpval+2
 14614                           
 14615                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 14616  01104E  C182  F117         	movff	printf@tmpval,___ftge@ff1
 14617  011052  C183  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 14618  011056  C184  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 14619  01105A  0E00               	movlw	0
 14620  01105C  0101               	movlb	1	; () banked
 14621  01105E  6F1A               	movwf	___ftge@ff2& (0+255),b
 14622  011060  0E80               	movlw	128
 14623  011062  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14624  011064  0E3F               	movlw	63
 14625  011066  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14626  011068  EC8F  F0AD         	call	___ftge	;wreg free
 14627  01106C  0101               	movlb	1	; () banked
 14628  01106E  B0D8               	btfsc	status,0,c
 14629  011070  D004               	goto	l1347
 14630                           
 14631                           ; BSR set to: 1
 14632                           ;doprnt.c: 849: exp--;
 14633  011072  0780               	decf	printf@exp& (0+255),f,b
 14634  011074  A0D8               	btfss	status,0,c
 14635  011076  0781               	decf	(printf@exp+1)& (0+255),f,b
 14636  011078  D013               	goto	l1349
 14637  01107A                     l1347:
 14638                           
 14639                           ; BSR set to: 1
 14640                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 14641                           
 14642                           ; BSR set to: 1
 14643  01107A  C182  F117         	movff	printf@tmpval,___ftge@ff1
 14644  01107E  C183  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 14645  011082  C184  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 14646  011086  0E00               	movlw	0
 14647  011088  6F1A               	movwf	___ftge@ff2& (0+255),b
 14648  01108A  0E20               	movlw	32
 14649  01108C  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14650  01108E  0E41               	movlw	65
 14651  011090  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14652  011092  EC8F  F0AD         	call	___ftge	;wreg free
 14653  011096  0101               	movlb	1	; () banked
 14654  011098  A0D8               	btfss	status,0,c
 14655  01109A  D002               	goto	l1349
 14656                           
 14657                           ; BSR set to: 1
 14658                           ;doprnt.c: 851: exp++;
 14659  01109C  4B80               	infsnz	printf@exp& (0+255),f,b
 14660  01109E  2B81               	incf	(printf@exp+1)& (0+255),f,b
 14661  0110A0                     l1349:
 14662                           
 14663                           ; BSR set to: 1
 14664                           ;doprnt.c: 852: }
 14665                           ;doprnt.c: 1112: if(prec <= 12)
 14666                           
 14667                           ; BSR set to: 1
 14668                           
 14669                           ; BSR set to: 1
 14670                           
 14671                           ; BSR set to: 1
 14672  0110A0  BF8E               	btfsc	(printf@prec+1)& (0+255),7,b
 14673  0110A2  D006               	goto	u12560
 14674  0110A4  518E               	movf	(printf@prec+1)& (0+255),w,b
 14675  0110A6  E11B               	bnz	l10521
 14676  0110A8  0E0D               	movlw	13
 14677  0110AA  5D8D               	subwf	printf@prec& (0+255),w,b
 14678  0110AC  B0D8               	btfsc	status,0,c
 14679  0110AE  D017               	goto	l1350
 14680  0110B0                     u12560:
 14681                           
 14682                           ; BSR set to: 1
 14683                           ;doprnt.c: 1113: fval += fround(prec);
 14684  0110B0  C18A  F12B         	movff	printf@fval,___ftadd@f1
 14685  0110B4  C18B  F12C         	movff	printf@fval+1,___ftadd@f1+1
 14686  0110B8  C18C  F12D         	movff	printf@fval+2,___ftadd@f1+2
 14687  0110BC  518D               	movf	printf@prec& (0+255),w,b
 14688  0110BE  EC80  F09A         	call	_fround
 14689  0110C2  C155  F12E         	movff	?_fround,___ftadd@f2
 14690  0110C6  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
 14691  0110CA  C157  F130         	movff	?_fround+2,___ftadd@f2+2
 14692  0110CE  EC2E  F0A1         	call	___ftadd	;wreg free
 14693  0110D2  C12B  F18A         	movff	?___ftadd,printf@fval
 14694  0110D6  C12C  F18B         	movff	?___ftadd+1,printf@fval+1
 14695  0110DA  C12D  F18C         	movff	?___ftadd+2,printf@fval+2
 14696  0110DE                     l1350:
 14697  0110DE                     l10521:
 14698                           
 14699                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 14700  0110DE  0101               	movlb	1	; () banked
 14701  0110E0  BF81               	btfsc	(printf@exp+1)& (0+255),7,b
 14702  0110E2  D006               	goto	u12570
 14703  0110E4  5181               	movf	(printf@exp+1)& (0+255),w,b
 14704  0110E6  E11F               	bnz	l10529
 14705  0110E8  0E0A               	movlw	10
 14706  0110EA  5D80               	subwf	printf@exp& (0+255),w,b
 14707  0110EC  B0D8               	btfsc	status,0,c
 14708  0110EE  D01B               	goto	u12600
 14709  0110F0                     u12570:
 14710                           
 14711                           ; BSR set to: 1
 14712  0110F0  518A               	movf	printf@fval& (0+255),w,b
 14713  0110F2  118B               	iorwf	(printf@fval+1)& (0+255),w,b
 14714  0110F4  118C               	iorwf	(printf@fval+2)& (0+255),w,b
 14715  0110F6  B4D8               	btfsc	status,2,c
 14716  0110F8  D054               	goto	l1351
 14717                           
 14718                           ; BSR set to: 1
 14719  0110FA  C18A  F155         	movff	printf@fval,___fttol@f1
 14720  0110FE  C18B  F156         	movff	printf@fval+1,___fttol@f1+1
 14721  011102  C18C  F157         	movff	printf@fval+2,___fttol@f1+2
 14722  011106  EC90  F0A6         	call	___fttol	;wreg free
 14723  01110A  0101               	movlb	1	; () banked
 14724  01110C  5155               	movf	?___fttol& (0+255),w,b
 14725  01110E  1156               	iorwf	(?___fttol+1)& (0+255),w,b
 14726  011110  1157               	iorwf	(?___fttol+2)& (0+255),w,b
 14727  011112  1158               	iorwf	(?___fttol+3)& (0+255),w,b
 14728  011114  B4D8               	btfsc	status,2,c
 14729                           
 14730                           ; BSR set to: 1
 14731  011116  BF81               	btfsc	(printf@exp+1)& (0+255),7,b
 14732  011118  D044               	goto	l1351
 14733  01111A  5181               	movf	(printf@exp+1)& (0+255),w,b
 14734  01111C  E104               	bnz	l10529
 14735  01111E  0E02               	movlw	2
 14736  011120  5D80               	subwf	printf@exp& (0+255),w,b
 14737  011122  A0D8               	btfss	status,0,c
 14738  011124  D03E               	goto	l1351
 14739  011126                     u12600:
 14740  011126                     l10529:
 14741                           
 14742                           ; BSR set to: 1
 14743                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 14744  011126  C182  F117         	movff	printf@tmpval,___ftge@ff1
 14745  01112A  C183  F118         	movff	printf@tmpval+1,___ftge@ff1+1
 14746  01112E  C184  F119         	movff	printf@tmpval+2,___ftge@ff1+2
 14747  011132  0E70               	movlw	112
 14748  011134  6F1A               	movwf	___ftge@ff2& (0+255),b
 14749  011136  0E89               	movlw	137
 14750  011138  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14751  01113A  0E40               	movlw	64
 14752  01113C  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14753  01113E  EC8F  F0AD         	call	___ftge	;wreg free
 14754  011142  0101               	movlb	1	; () banked
 14755  011144  B0D8               	btfsc	status,0,c
 14756  011146  D002               	goto	l1354
 14757                           
 14758                           ; BSR set to: 1
 14759                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 14760  011148  0EF7               	movlw	247
 14761  01114A  D001               	goto	L12
 14762  01114C                     l1354:
 14763                           
 14764                           ; BSR set to: 1
 14765                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 14766                           
 14767                           ; BSR set to: 1
 14768  01114C  0EF8               	movlw	248
 14769  01114E                     L12:
 14770  01114E  2780               	addwf	printf@exp& (0+255),f,b
 14771  011150  0EFF               	movlw	255
 14772  011152  2381               	addwfc	(printf@exp+1)& (0+255),f,b
 14773                           
 14774                           ; BSR set to: 1
 14775                           ;doprnt.c: 1124: }
 14776                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 14777                           
 14778                           ; BSR set to: 1
 14779  011154  5180               	movf	printf@exp& (0+255),w,b
 14780  011156  EC64  F094         	call	_scale
 14781  01115A  C155  F182         	movff	?_scale,printf@tmpval
 14782  01115E  C156  F183         	movff	?_scale+1,printf@tmpval+1
 14783  011162  C157  F184         	movff	?_scale+2,printf@tmpval+2
 14784                           
 14785                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 14786  011166  C18A  F117         	movff	printf@fval,__tdiv_to_l_@f1
 14787  01116A  C18B  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
 14788  01116E  C18C  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
 14789  011172  C182  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
 14790  011176  C183  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
 14791  01117A  C184  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
 14792  01117E  ECA6  F0A3         	call	__tdiv_to_l_	;wreg free
 14793  011182  C117  F186         	movff	?__tdiv_to_l_,printf@val
 14794  011186  C118  F187         	movff	?__tdiv_to_l_+1,printf@val+1
 14795  01118A  C119  F188         	movff	?__tdiv_to_l_+2,printf@val+2
 14796  01118E  C11A  F189         	movff	?__tdiv_to_l_+3,printf@val+3
 14797                           
 14798                           ;doprnt.c: 1129: fval = 0.0;
 14799  011192  0E00               	movlw	0
 14800  011194  0101               	movlb	1	; () banked
 14801  011196  6F8A               	movwf	printf@fval& (0+255),b
 14802  011198  0E00               	movlw	0
 14803  01119A  6F8B               	movwf	(printf@fval+1)& (0+255),b
 14804  01119C  0E00               	movlw	0
 14805  01119E  6F8C               	movwf	(printf@fval+2)& (0+255),b
 14806                           
 14807                           ;doprnt.c: 1130: } else {
 14808  0111A0  D033               	goto	l1360
 14809  0111A2                     l1351:
 14810                           
 14811                           ; BSR set to: 1
 14812                           ;doprnt.c: 1131: val = (unsigned long)fval;
 14813                           
 14814                           ; BSR set to: 1
 14815  0111A2  C18A  F155         	movff	printf@fval,___fttol@f1
 14816  0111A6  C18B  F156         	movff	printf@fval+1,___fttol@f1+1
 14817  0111AA  C18C  F157         	movff	printf@fval+2,___fttol@f1+2
 14818  0111AE  EC90  F0A6         	call	___fttol	;wreg free
 14819  0111B2  C155  F186         	movff	?___fttol,printf@val
 14820  0111B6  C156  F187         	movff	?___fttol+1,printf@val+1
 14821  0111BA  C157  F188         	movff	?___fttol+2,printf@val+2
 14822  0111BE  C158  F189         	movff	?___fttol+3,printf@val+3
 14823                           
 14824                           ;doprnt.c: 1132: fval -= (double)val;
 14825  0111C2  C18A  F137         	movff	printf@fval,___ftsub@f1
 14826  0111C6  C18B  F138         	movff	printf@fval+1,___ftsub@f1+1
 14827  0111CA  C18C  F139         	movff	printf@fval+2,___ftsub@f1+2
 14828  0111CE  C186  F11F         	movff	printf@val,___lltoft@c
 14829  0111D2  C187  F120         	movff	printf@val+1,___lltoft@c+1
 14830  0111D6  C188  F121         	movff	printf@val+2,___lltoft@c+2
 14831  0111DA  C189  F122         	movff	printf@val+3,___lltoft@c+3
 14832  0111DE  EC07  F0B3         	call	___lltoft	;wreg free
 14833  0111E2  C11F  F13A         	movff	?___lltoft,___ftsub@f2
 14834  0111E6  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
 14835  0111EA  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
 14836  0111EE  EC2F  F0B5         	call	___ftsub	;wreg free
 14837  0111F2  C137  F18A         	movff	?___ftsub,printf@fval
 14838  0111F6  C138  F18B         	movff	?___ftsub+1,printf@fval+1
 14839  0111FA  C139  F18C         	movff	?___ftsub+2,printf@fval+2
 14840                           
 14841                           ;doprnt.c: 1133: exp = 0;
 14842  0111FE  0E00               	movlw	0
 14843  011200  0101               	movlb	1	; () banked
 14844  011202  6F81               	movwf	(printf@exp+1)& (0+255),b
 14845  011204  0E00               	movlw	0
 14846  011206  6F80               	movwf	printf@exp& (0+255),b
 14847  011208                     l1360:
 14848                           
 14849                           ; BSR set to: 1
 14850                           ;doprnt.c: 1134: }
 14851                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 14852                           
 14853                           ; BSR set to: 1
 14854  011208  0E01               	movlw	1
 14855  01120A  6F8F               	movwf	printf@c& (0+255),b
 14856  01120C                     l10549:
 14857                           
 14858                           ; BSR set to: 1
 14859  01120C  0E0A               	movlw	10
 14860  01120E  198F               	xorwf	printf@c& (0+255),w,b
 14861  011210  B4D8               	btfsc	status,2,c
 14862  011212  D01B               	goto	u12640
 14863                           
 14864                           ; BSR set to: 1
 14865                           ;doprnt.c: 1137: if(val < dpowers[c])
 14866                           
 14867                           ; BSR set to: 1
 14868                           
 14869                           ; BSR set to: 1
 14870  011214  518F               	movf	printf@c& (0+255),w,b
 14871  011216  0D04               	mullw	4
 14872  011218  0E5F               	movlw	low _dpowers
 14873  01121A  24F3               	addwf	prodl,w,c
 14874  01121C  6EF6               	movwf	tblptrl,c
 14875  01121E  0EEC               	movlw	high _dpowers
 14876  011220  20F4               	addwfc	prodh,w,c
 14877  011222  6EF7               	movwf	tblptrh,c
 14878  011224                     	if	1	;There are 3 active tblptr bytes
 14879  011224  6AF8               	clrf	tblptru,c
 14880  011226  0E00               	movlw	low (__mediumconst shr (0+16))
 14881  011228  22F8               	addwfc	tblptru,f,c
 14882  01122A                     	endif
 14883  01122A  0009               	tblrd		*+
 14884  01122C  50F5               	movf	tablat,w,c
 14885  01122E  5D86               	subwf	printf@val& (0+255),w,b
 14886  011230  0009               	tblrd		*+
 14887  011232  50F5               	movf	tablat,w,c
 14888  011234  5987               	subwfb	(printf@val+1)& (0+255),w,b
 14889  011236  0009               	tblrd		*+
 14890  011238  50F5               	movf	tablat,w,c
 14891  01123A  5988               	subwfb	(printf@val+2)& (0+255),w,b
 14892  01123C  0009               	tblrd		*+
 14893  01123E  50F5               	movf	tablat,w,c
 14894  011240  5989               	subwfb	(printf@val+3)& (0+255),w,b
 14895  011242  A0D8               	btfss	status,0,c
 14896  011244  D002               	goto	u12640
 14897                           
 14898                           ; BSR set to: 1
 14899                           
 14900                           ; BSR set to: 1
 14901                           
 14902                           ; BSR set to: 1
 14903                           ;doprnt.c: 1138: break;
 14904  011246  2B8F               	incf	printf@c& (0+255),f,b
 14905  011248  D7E1               	goto	l10549
 14906  01124A                     u12640:
 14907                           
 14908                           ; BSR set to: 1
 14909                           ;doprnt.c: 1175: {
 14910                           ;doprnt.c: 1188: if(flag & 0x03)
 14911                           
 14912                           ; BSR set to: 1
 14913  01124A  0E03               	movlw	3
 14914  01124C  157E               	andwf	printf@flag& (0+255),w,b
 14915  01124E  6F6E               	movwf	??_printf& (0+255),b
 14916  011250  0E00               	movlw	0
 14917  011252  157F               	andwf	(printf@flag+1)& (0+255),w,b
 14918  011254  6F6F               	movwf	(??_printf+1)& (0+255),b
 14919  011256  516E               	movf	??_printf& (0+255),w,b
 14920  011258  116F               	iorwf	(??_printf+1)& (0+255),w,b
 14921  01125A  B4D8               	btfsc	status,2,c
 14922  01125C  D04E               	goto	l1365
 14923                           
 14924                           ; BSR set to: 1
 14925                           ;doprnt.c: 1190: (putch('-') );
 14926  01125E  0E2D               	movlw	45
 14927  011260  EC0D  F0B8         	call	_putch
 14928                           
 14929                           ;doprnt.c: 1195: }
 14930                           ;doprnt.c: 1196: while(c--) {
 14931  011264  D04A               	goto	l1365
 14932  011266                     
 14933                           ;doprnt.c: 1200: {
 14934                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 14935  011266  C186  F117         	movff	printf@val,___lldiv@dividend
 14936  01126A  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 14937  01126E  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 14938  011272  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 14939  011276  0101               	movlb	1	; () banked
 14940  011278  518F               	movf	printf@c& (0+255),w,b
 14941  01127A  0D04               	mullw	4
 14942  01127C  0E5F               	movlw	low _dpowers
 14943  01127E  24F3               	addwf	prodl,w,c
 14944  011280  6EF6               	movwf	tblptrl,c
 14945  011282  0EEC               	movlw	high _dpowers
 14946  011284  20F4               	addwfc	prodh,w,c
 14947  011286  6EF7               	movwf	tblptrh,c
 14948  011288                     	if	1	;There are 3 active tblptr bytes
 14949  011288  6AF8               	clrf	tblptru,c
 14950  01128A  0E00               	movlw	low (__mediumconst shr (0+16))
 14951  01128C  22F8               	addwfc	tblptru,f,c
 14952  01128E                     	endif
 14953  01128E  0009               	tblrd		*+
 14954  011290  CFF5 F11B          	movff	tablat,___lldiv@divisor
 14955  011294  0009               	tblrd		*+
 14956  011296  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 14957  01129A  0009               	tblrd		*+
 14958  01129C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 14959  0112A0  000A               	tblrd		*-
 14960  0112A2  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 14961  0112A6  EC7D  F0AF         	call	___lldiv	;wreg free
 14962  0112AA  C117  F182         	movff	?___lldiv,printf@tmpval
 14963  0112AE  C118  F183         	movff	?___lldiv+1,printf@tmpval+1
 14964  0112B2  C119  F184         	movff	?___lldiv+2,printf@tmpval+2
 14965  0112B6  C11A  F185         	movff	?___lldiv+3,printf@tmpval+3
 14966                           
 14967                           ;doprnt.c: 1202: tmpval.vd %= 10;
 14968  0112BA  C182  F124         	movff	printf@tmpval,___llmod@dividend
 14969  0112BE  C183  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 14970  0112C2  C184  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 14971  0112C6  C185  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 14972  0112CA  0E0A               	movlw	10
 14973  0112CC  0101               	movlb	1	; () banked
 14974  0112CE  6F28               	movwf	___llmod@divisor& (0+255),b
 14975  0112D0  0E00               	movlw	0
 14976  0112D2  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 14977  0112D4  0E00               	movlw	0
 14978  0112D6  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 14979  0112D8  0E00               	movlw	0
 14980  0112DA  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 14981  0112DC  EC0F  F0B2         	call	___llmod	;wreg free
 14982  0112E0  C124  F182         	movff	?___llmod,printf@tmpval
 14983  0112E4  C125  F183         	movff	?___llmod+1,printf@tmpval+1
 14984  0112E8  C126  F184         	movff	?___llmod+2,printf@tmpval+2
 14985  0112EC  C127  F185         	movff	?___llmod+3,printf@tmpval+3
 14986                           
 14987                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 14988  0112F0  0101               	movlb	1	; () banked
 14989  0112F2  5182               	movf	printf@tmpval& (0+255),w,b
 14990  0112F4  0F30               	addlw	48
 14991  0112F6  EC0D  F0B8         	call	_putch
 14992  0112FA                     l1365:
 14993  0112FA  0101               	movlb	1	; () banked
 14994  0112FC  078F               	decf	printf@c& (0+255),f,b
 14995  0112FE  298F               	incf	printf@c& (0+255),w,b
 14996  011300  B4D8               	btfsc	status,2,c
 14997  011302  D008               	goto	l1368
 14998  011304  D7B0               	goto	l1366
 14999  011306                     l10573:
 15000                           
 15001                           ; BSR set to: 1
 15002                           ;doprnt.c: 1208: (putch('0') );
 15003  011306  0E30               	movlw	48
 15004  011308  EC0D  F0B8         	call	_putch
 15005                           
 15006                           ;doprnt.c: 1209: exp--;
 15007  01130C  0101               	movlb	1	; () banked
 15008  01130E  0780               	decf	printf@exp& (0+255),f,b
 15009  011310  A0D8               	btfss	status,0,c
 15010  011312  0781               	decf	(printf@exp+1)& (0+255),f,b
 15011  011314                     l1368:
 15012                           
 15013                           ; BSR set to: 1
 15014                           
 15015                           ; BSR set to: 1
 15016  011314  BF81               	btfsc	(printf@exp+1)& (0+255),7,b
 15017  011316  D005               	goto	u12670
 15018  011318  5181               	movf	(printf@exp+1)& (0+255),w,b
 15019  01131A  E1F5               	bnz	l10573
 15020  01131C  0580               	decf	printf@exp& (0+255),w,b
 15021  01131E  B0D8               	btfsc	status,0,c
 15022  011320  D7F2               	goto	l1369
 15023  011322                     u12670:
 15024                           
 15025                           ; BSR set to: 1
 15026                           ;doprnt.c: 1210: }
 15027                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 15028                           
 15029                           ; BSR set to: 1
 15030  011322  BF8E               	btfsc	(printf@prec+1)& (0+255),7,b
 15031  011324  D009               	goto	l1371
 15032  011326  518E               	movf	(printf@prec+1)& (0+255),w,b
 15033  011328  E104               	bnz	u12680
 15034  01132A  0E09               	movlw	9
 15035  01132C  5D8D               	subwf	printf@prec& (0+255),w,b
 15036  01132E  A0D8               	btfss	status,0,c
 15037  011330  D003               	goto	l1371
 15038  011332                     u12680:
 15039                           
 15040                           ; BSR set to: 1
 15041                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 15042  011332  0E08               	movlw	8
 15043  011334  6F8F               	movwf	printf@c& (0+255),b
 15044  011336  D002               	goto	l1372
 15045  011338                     l1371:
 15046                           
 15047                           ; BSR set to: 1
 15048                           ;doprnt.c: 1213: else
 15049                           ;doprnt.c: 1214: c = prec;
 15050  011338  C18D  F18F         	movff	printf@prec,printf@c
 15051  01133C                     l1372:
 15052                           
 15053                           ; BSR set to: 1
 15054                           ;doprnt.c: 1215: prec -= c;
 15055                           
 15056                           ; BSR set to: 1
 15057  01133C  518F               	movf	printf@c& (0+255),w,b
 15058  01133E  5F8D               	subwf	printf@prec& (0+255),f,b
 15059  011340  0E00               	movlw	0
 15060  011342  BF8F               	btfsc	printf@c& (0+255),7,b
 15061  011344  0EFF               	movlw	255
 15062  011346  5B8E               	subwfb	(printf@prec+1)& (0+255),f,b
 15063                           
 15064                           ; BSR set to: 1
 15065                           ;doprnt.c: 1219: if(c)
 15066  011348  518F               	movf	printf@c& (0+255),w,b
 15067  01134A  B4D8               	btfsc	status,2,c
 15068  01134C  D003               	goto	l1373
 15069                           
 15070                           ; BSR set to: 1
 15071                           ;doprnt.c: 1221: (putch('.') );
 15072  01134E  0E2E               	movlw	46
 15073  011350  EC0D  F0B8         	call	_putch
 15074  011354                     l1373:
 15075                           
 15076                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15077  011354  0101               	movlb	1	; () banked
 15078  011356  518F               	movf	printf@c& (0+255),w,b
 15079  011358  EC64  F094         	call	_scale
 15080  01135C  C155  F174         	movff	?_scale,_printf$3696
 15081  011360  C156  F175         	movff	?_scale+1,_printf$3696+1
 15082  011364  C157  F176         	movff	?_scale+2,_printf$3696+2
 15083                           
 15084                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 15085  011368  C18A  F149         	movff	printf@fval,___ftmul@f2
 15086  01136C  C18B  F14A         	movff	printf@fval+1,___ftmul@f2+1
 15087  011370  C18C  F14B         	movff	printf@fval+2,___ftmul@f2+2
 15088  011374  C174  F146         	movff	_printf$3696,___ftmul@f1
 15089  011378  C175  F147         	movff	_printf$3696+1,___ftmul@f1+1
 15090  01137C  C176  F148         	movff	_printf$3696+2,___ftmul@f1+2
 15091  011380  EC0C  F0A7         	call	___ftmul	;wreg free
 15092  011384  C146  F155         	movff	?___ftmul,___fttol@f1
 15093  011388  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 15094  01138C  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 15095  011390  EC90  F0A6         	call	___fttol	;wreg free
 15096  011394  C155  F186         	movff	?___fttol,printf@val
 15097  011398  C156  F187         	movff	?___fttol+1,printf@val+1
 15098  01139C  C157  F188         	movff	?___fttol+2,printf@val+2
 15099  0113A0  C158  F189         	movff	?___fttol+3,printf@val+3
 15100                           
 15101                           ;doprnt.c: 1228: while(c--) {
 15102  0113A4  D074               	goto	l1374
 15103  0113A6                     
 15104                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 15105  0113A6  C186  F117         	movff	printf@val,___lldiv@dividend
 15106  0113AA  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 15107  0113AE  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 15108  0113B2  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15109  0113B6  0101               	movlb	1	; () banked
 15110  0113B8  518F               	movf	printf@c& (0+255),w,b
 15111  0113BA  0D04               	mullw	4
 15112  0113BC  0E5F               	movlw	low _dpowers
 15113  0113BE  24F3               	addwf	prodl,w,c
 15114  0113C0  6EF6               	movwf	tblptrl,c
 15115  0113C2  0EEC               	movlw	high _dpowers
 15116  0113C4  20F4               	addwfc	prodh,w,c
 15117  0113C6  6EF7               	movwf	tblptrh,c
 15118  0113C8                     	if	1	;There are 3 active tblptr bytes
 15119  0113C8  6AF8               	clrf	tblptru,c
 15120  0113CA  0E00               	movlw	low (__mediumconst shr (0+16))
 15121  0113CC  22F8               	addwfc	tblptru,f,c
 15122  0113CE                     	endif
 15123  0113CE  0009               	tblrd		*+
 15124  0113D0  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15125  0113D4  0009               	tblrd		*+
 15126  0113D6  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15127  0113DA  0009               	tblrd		*+
 15128  0113DC  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15129  0113E0  000A               	tblrd		*-
 15130  0113E2  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15131  0113E6  EC7D  F0AF         	call	___lldiv	;wreg free
 15132  0113EA  C117  F182         	movff	?___lldiv,printf@tmpval
 15133  0113EE  C118  F183         	movff	?___lldiv+1,printf@tmpval+1
 15134  0113F2  C119  F184         	movff	?___lldiv+2,printf@tmpval+2
 15135  0113F6  C11A  F185         	movff	?___lldiv+3,printf@tmpval+3
 15136                           
 15137                           ;doprnt.c: 1230: tmpval.vd %= 10;
 15138  0113FA  C182  F124         	movff	printf@tmpval,___llmod@dividend
 15139  0113FE  C183  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 15140  011402  C184  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 15141  011406  C185  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 15142  01140A  0E0A               	movlw	10
 15143  01140C  0101               	movlb	1	; () banked
 15144  01140E  6F28               	movwf	___llmod@divisor& (0+255),b
 15145  011410  0E00               	movlw	0
 15146  011412  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15147  011414  0E00               	movlw	0
 15148  011416  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15149  011418  0E00               	movlw	0
 15150  01141A  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15151  01141C  EC0F  F0B2         	call	___llmod	;wreg free
 15152  011420  C124  F182         	movff	?___llmod,printf@tmpval
 15153  011424  C125  F183         	movff	?___llmod+1,printf@tmpval+1
 15154  011428  C126  F184         	movff	?___llmod+2,printf@tmpval+2
 15155  01142C  C127  F185         	movff	?___llmod+3,printf@tmpval+3
 15156                           
 15157                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 15158  011430  0101               	movlb	1	; () banked
 15159  011432  5182               	movf	printf@tmpval& (0+255),w,b
 15160  011434  0F30               	addlw	48
 15161  011436  EC0D  F0B8         	call	_putch
 15162                           
 15163                           ;doprnt.c: 1232: val %= dpowers[c];
 15164  01143A  C186  F124         	movff	printf@val,___llmod@dividend
 15165  01143E  C187  F125         	movff	printf@val+1,___llmod@dividend+1
 15166  011442  C188  F126         	movff	printf@val+2,___llmod@dividend+2
 15167  011446  C189  F127         	movff	printf@val+3,___llmod@dividend+3
 15168  01144A  0101               	movlb	1	; () banked
 15169  01144C  518F               	movf	printf@c& (0+255),w,b
 15170  01144E  0D04               	mullw	4
 15171  011450  0E5F               	movlw	low _dpowers
 15172  011452  24F3               	addwf	prodl,w,c
 15173  011454  6EF6               	movwf	tblptrl,c
 15174  011456  0EEC               	movlw	high _dpowers
 15175  011458  20F4               	addwfc	prodh,w,c
 15176  01145A  6EF7               	movwf	tblptrh,c
 15177  01145C                     	if	1	;There are 3 active tblptr bytes
 15178  01145C  6AF8               	clrf	tblptru,c
 15179  01145E  0E00               	movlw	low (__mediumconst shr (0+16))
 15180  011460  22F8               	addwfc	tblptru,f,c
 15181  011462                     	endif
 15182  011462  0009               	tblrd		*+
 15183  011464  CFF5 F128          	movff	tablat,___llmod@divisor
 15184  011468  0009               	tblrd		*+
 15185  01146A  CFF5 F129          	movff	tablat,___llmod@divisor+1
 15186  01146E  0009               	tblrd		*+
 15187  011470  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 15188  011474  000A               	tblrd		*-
 15189  011476  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 15190  01147A  EC0F  F0B2         	call	___llmod	;wreg free
 15191  01147E  C124  F186         	movff	?___llmod,printf@val
 15192  011482  C125  F187         	movff	?___llmod+1,printf@val+1
 15193  011486  C126  F188         	movff	?___llmod+2,printf@val+2
 15194  01148A  C127  F189         	movff	?___llmod+3,printf@val+3
 15195  01148E                     l1374:
 15196  01148E  0101               	movlb	1	; () banked
 15197  011490  078F               	decf	printf@c& (0+255),f,b
 15198  011492  298F               	incf	printf@c& (0+255),w,b
 15199  011494  B4D8               	btfsc	status,2,c
 15200  011496  D008               	goto	l1377
 15201  011498  D786               	goto	l1375
 15202  01149A                     
 15203                           ; BSR set to: 1
 15204                           ;doprnt.c: 1236: (putch('0') );
 15205                           
 15206                           ; BSR set to: 1
 15207  01149A  0E30               	movlw	48
 15208  01149C  EC0D  F0B8         	call	_putch
 15209                           
 15210                           ;doprnt.c: 1237: prec--;
 15211  0114A0  0101               	movlb	1	; () banked
 15212  0114A2  078D               	decf	printf@prec& (0+255),f,b
 15213  0114A4  A0D8               	btfss	status,0,c
 15214  0114A6  078E               	decf	(printf@prec+1)& (0+255),f,b
 15215  0114A8                     l1377:
 15216                           
 15217                           ; BSR set to: 1
 15218                           
 15219                           ; BSR set to: 1
 15220  0114A8  518D               	movf	printf@prec& (0+255),w,b
 15221  0114AA  118E               	iorwf	(printf@prec+1)& (0+255),w,b
 15222  0114AC  B4D8               	btfsc	status,2,c
 15223  0114AE  D157               	goto	u12850
 15224  0114B0  D7F4               	goto	l1378
 15225  0114B2                     l1342:
 15226                           
 15227                           ; BSR set to: 1
 15228                           ;doprnt.c: 1246: }
 15229                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 15230                           
 15231                           ; BSR set to: 1
 15232  0114B2  0EC0               	movlw	192
 15233  0114B4  157E               	andwf	printf@flag& (0+255),w,b
 15234  0114B6  6F6E               	movwf	??_printf& (0+255),b
 15235  0114B8  0E00               	movlw	0
 15236  0114BA  157F               	andwf	(printf@flag+1)& (0+255),w,b
 15237  0114BC  6F6F               	movwf	(??_printf+1)& (0+255),b
 15238  0114BE  516E               	movf	??_printf& (0+255),w,b
 15239  0114C0  116F               	iorwf	(??_printf+1)& (0+255),w,b
 15240  0114C2  A4D8               	btfss	status,2,c
 15241  0114C4  D01E               	goto	l1380
 15242                           
 15243                           ; BSR set to: 1
 15244                           ;doprnt.c: 1253: {
 15245                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 15246  0114C6  C17C  FFD9         	movff	printf@ap,fsr2l
 15247  0114CA  C17D  FFDA         	movff	printf@ap+1,fsr2h
 15248  0114CE  CFDE F186          	movff	postinc2,printf@val
 15249  0114D2  CFDD F187          	movff	postdec2,printf@val+1
 15250  0114D6  0E00               	movlw	0
 15251  0114D8  BF87               	btfsc	(printf@val+1)& (0+255),7,b
 15252  0114DA  0EFF               	movlw	-1
 15253  0114DC  6F88               	movwf	(printf@val+2)& (0+255),b
 15254  0114DE  6F89               	movwf	(printf@val+3)& (0+255),b
 15255                           
 15256                           ; BSR set to: 1
 15257  0114E0  0E02               	movlw	2
 15258  0114E2  277C               	addwf	printf@ap& (0+255),f,b
 15259  0114E4  0E00               	movlw	0
 15260  0114E6  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 15261                           
 15262                           ; BSR set to: 1
 15263                           ;doprnt.c: 1261: if((long)val < 0) {
 15264  0114E8  AF89               	btfss	(printf@val+3)& (0+255),7,b
 15265  0114EA  D01D               	goto	l1382
 15266                           
 15267                           ; BSR set to: 1
 15268                           ;doprnt.c: 1262: flag |= 0x03;
 15269  0114EC  0E03               	movlw	3
 15270  0114EE  137E               	iorwf	printf@flag& (0+255),f,b
 15271                           
 15272                           ; BSR set to: 1
 15273                           ;doprnt.c: 1263: val = -val;
 15274  0114F0  1F89               	comf	(printf@val+3)& (0+255),f,b
 15275  0114F2  1F88               	comf	(printf@val+2)& (0+255),f,b
 15276  0114F4  1F87               	comf	(printf@val+1)& (0+255),f,b
 15277  0114F6  6D86               	negf	printf@val& (0+255),b
 15278  0114F8  0E00               	movlw	0
 15279  0114FA  2387               	addwfc	(printf@val+1)& (0+255),f,b
 15280  0114FC  2388               	addwfc	(printf@val+2)& (0+255),f,b
 15281  0114FE  2389               	addwfc	(printf@val+3)& (0+255),f,b
 15282                           
 15283                           ; BSR set to: 1
 15284                           ;doprnt.c: 1264: }
 15285                           ;doprnt.c: 1266: }
 15286  011500  D012               	goto	l1382
 15287  011502                     l1380:
 15288                           
 15289                           ; BSR set to: 1
 15290                           ;doprnt.c: 1268: else
 15291                           ;doprnt.c: 1273: {
 15292                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 15293                           
 15294                           ; BSR set to: 1
 15295  011502  C17C  FFD9         	movff	printf@ap,fsr2l
 15296  011506  C17D  FFDA         	movff	printf@ap+1,fsr2h
 15297  01150A  CFDE F16E          	movff	postinc2,??_printf
 15298  01150E  CFDD F16F          	movff	postdec2,??_printf+1
 15299  011512  C16E  F186         	movff	??_printf,printf@val
 15300  011516  C16F  F187         	movff	??_printf+1,printf@val+1
 15301  01151A  6B88               	clrf	(printf@val+2)& (0+255),b
 15302  01151C  6B89               	clrf	(printf@val+3)& (0+255),b
 15303                           
 15304                           ; BSR set to: 1
 15305  01151E  0E02               	movlw	2
 15306  011520  277C               	addwf	printf@ap& (0+255),f,b
 15307  011522  0E00               	movlw	0
 15308  011524  237D               	addwfc	(printf@ap+1)& (0+255),f,b
 15309  011526                     l1382:
 15310                           
 15311                           ; BSR set to: 1
 15312                           ;doprnt.c: 1287: }
 15313                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 15314                           
 15315                           ; BSR set to: 1
 15316  011526  518D               	movf	printf@prec& (0+255),w,b
 15317  011528  118E               	iorwf	(printf@prec+1)& (0+255),w,b
 15318  01152A  A4D8               	btfss	status,2,c
 15319  01152C  D04B               	goto	l1384
 15320                           
 15321                           ; BSR set to: 1
 15322  01152E  5186               	movf	printf@val& (0+255),w,b
 15323  011530  1187               	iorwf	(printf@val+1)& (0+255),w,b
 15324  011532  1188               	iorwf	(printf@val+2)& (0+255),w,b
 15325  011534  1189               	iorwf	(printf@val+3)& (0+255),w,b
 15326  011536  A4D8               	btfss	status,2,c
 15327  011538  D045               	goto	l1384
 15328                           
 15329                           ; BSR set to: 1
 15330                           ;doprnt.c: 1291: prec++;
 15331  01153A  4B8D               	infsnz	printf@prec& (0+255),f,b
 15332  01153C  2B8E               	incf	(printf@prec+1)& (0+255),f,b
 15333                           
 15334                           ; BSR set to: 1
 15335                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 15336  01153E  D042               	goto	l1384
 15337  011540                     
 15338                           ; BSR set to: 1
 15339                           ;doprnt.c: 1302: case 0xC0:
 15340                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 15341                           
 15342                           ; BSR set to: 1
 15343                           
 15344                           ; BSR set to: 1
 15345  011540  0E01               	movlw	1
 15346  011542  6F8F               	movwf	printf@c& (0+255),b
 15347  011544                     l10633:
 15348                           
 15349                           ; BSR set to: 1
 15350  011544  0E0A               	movlw	10
 15351  011546  198F               	xorwf	printf@c& (0+255),w,b
 15352  011548  B4D8               	btfsc	status,2,c
 15353  01154A  D047               	goto	l1390
 15354                           
 15355                           ; BSR set to: 1
 15356                           ;doprnt.c: 1306: if(val < dpowers[c])
 15357                           
 15358                           ; BSR set to: 1
 15359                           
 15360                           ; BSR set to: 1
 15361  01154C  518F               	movf	printf@c& (0+255),w,b
 15362  01154E  0D04               	mullw	4
 15363  011550  0E5F               	movlw	low _dpowers
 15364  011552  24F3               	addwf	prodl,w,c
 15365  011554  6EF6               	movwf	tblptrl,c
 15366  011556  0EEC               	movlw	high _dpowers
 15367  011558  20F4               	addwfc	prodh,w,c
 15368  01155A  6EF7               	movwf	tblptrh,c
 15369  01155C                     	if	1	;There are 3 active tblptr bytes
 15370  01155C  6AF8               	clrf	tblptru,c
 15371  01155E  0E00               	movlw	low (__mediumconst shr (0+16))
 15372  011560  22F8               	addwfc	tblptru,f,c
 15373  011562                     	endif
 15374  011562  0009               	tblrd		*+
 15375  011564  50F5               	movf	tablat,w,c
 15376  011566  5D86               	subwf	printf@val& (0+255),w,b
 15377  011568  0009               	tblrd		*+
 15378  01156A  50F5               	movf	tablat,w,c
 15379  01156C  5987               	subwfb	(printf@val+1)& (0+255),w,b
 15380  01156E  0009               	tblrd		*+
 15381  011570  50F5               	movf	tablat,w,c
 15382  011572  5988               	subwfb	(printf@val+2)& (0+255),w,b
 15383  011574  0009               	tblrd		*+
 15384  011576  50F5               	movf	tablat,w,c
 15385  011578  5989               	subwfb	(printf@val+3)& (0+255),w,b
 15386  01157A  A0D8               	btfss	status,0,c
 15387  01157C  D02E               	goto	l1390
 15388                           
 15389                           ; BSR set to: 1
 15390                           
 15391                           ; BSR set to: 1
 15392                           
 15393                           ; BSR set to: 1
 15394                           ;doprnt.c: 1307: break;
 15395  01157E  2B8F               	incf	printf@c& (0+255),f,b
 15396  011580  D7E1               	goto	l10633
 15397  011582                     
 15398                           ; BSR set to: 1
 15399                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 15400                           
 15401                           ; BSR set to: 1
 15402  011582  0E01               	movlw	1
 15403  011584  6F8F               	movwf	printf@c& (0+255),b
 15404  011586                     l10647:
 15405                           
 15406                           ; BSR set to: 1
 15407  011586  0E08               	movlw	8
 15408  011588  198F               	xorwf	printf@c& (0+255),w,b
 15409  01158A  B4D8               	btfsc	status,2,c
 15410  01158C  D026               	goto	l1390
 15411                           
 15412                           ; BSR set to: 1
 15413                           ;doprnt.c: 1317: if(val < hexpowers[c])
 15414                           
 15415                           ; BSR set to: 1
 15416                           
 15417                           ; BSR set to: 1
 15418  01158E  518F               	movf	printf@c& (0+255),w,b
 15419  011590  0D04               	mullw	4
 15420  011592  0ED5               	movlw	low _hexpowers
 15421  011594  24F3               	addwf	prodl,w,c
 15422  011596  6EF6               	movwf	tblptrl,c
 15423  011598  0EEC               	movlw	high _hexpowers
 15424  01159A  20F4               	addwfc	prodh,w,c
 15425  01159C  6EF7               	movwf	tblptrh,c
 15426  01159E                     	if	1	;There are 3 active tblptr bytes
 15427  01159E  6AF8               	clrf	tblptru,c
 15428  0115A0  0E00               	movlw	low (__mediumconst shr (0+16))
 15429  0115A2  22F8               	addwfc	tblptru,f,c
 15430  0115A4                     	endif
 15431  0115A4  0009               	tblrd		*+
 15432  0115A6  50F5               	movf	tablat,w,c
 15433  0115A8  5D86               	subwf	printf@val& (0+255),w,b
 15434  0115AA  0009               	tblrd		*+
 15435  0115AC  50F5               	movf	tablat,w,c
 15436  0115AE  5987               	subwfb	(printf@val+1)& (0+255),w,b
 15437  0115B0  0009               	tblrd		*+
 15438  0115B2  50F5               	movf	tablat,w,c
 15439  0115B4  5988               	subwfb	(printf@val+2)& (0+255),w,b
 15440  0115B6  0009               	tblrd		*+
 15441  0115B8  50F5               	movf	tablat,w,c
 15442  0115BA  5989               	subwfb	(printf@val+3)& (0+255),w,b
 15443  0115BC  A0D8               	btfss	status,0,c
 15444  0115BE  D00D               	goto	l1390
 15445                           
 15446                           ; BSR set to: 1
 15447                           
 15448                           ; BSR set to: 1
 15449                           
 15450                           ; BSR set to: 1
 15451                           ;doprnt.c: 1318: break;
 15452  0115C0  2B8F               	incf	printf@c& (0+255),f,b
 15453  0115C2  D7E1               	goto	l10647
 15454  0115C4                     l1384:
 15455                           
 15456                           ; BSR set to: 1
 15457                           
 15458                           ; BSR set to: 1
 15459  0115C4  517E               	movf	printf@flag& (0+255),w,b
 15460  0115C6  0BC0               	andlw	192
 15461                           
 15462                           ; Switch size 1, requested type "space"
 15463                           ; Number of cases is 3, Range of values is 0 to 192
 15464                           ; switch strategies available:
 15465                           ; Name         Instructions Cycles
 15466                           ; simple_byte           10     6 (average)
 15467                           ;	Chosen strategy is simple_byte
 15468  0115C8  0A00               	xorlw	0	; case 0
 15469  0115CA  B4D8               	btfsc	status,2,c
 15470  0115CC  D7B9               	goto	l1385
 15471  0115CE  0A80               	xorlw	128	; case 128
 15472  0115D0  B4D8               	btfsc	status,2,c
 15473  0115D2  D7D7               	goto	l1391
 15474  0115D4  0A40               	xorlw	64	; case 192
 15475  0115D6  B4D8               	btfsc	status,2,c
 15476  0115D8  D7B3               	goto	l1385
 15477  0115DA                     l1390:
 15478                           
 15479                           ; BSR set to: 1
 15480                           ;doprnt.c: 1339: if(c < prec)
 15481                           
 15482                           ; BSR set to: 1
 15483  0115DA  0E80               	movlw	128
 15484  0115DC  BF8F               	btfsc	printf@c& (0+255),7,b
 15485  0115DE  0E7F               	movlw	127
 15486  0115E0  6F6E               	movwf	??_printf& (0+255),b
 15487  0115E2  518D               	movf	printf@prec& (0+255),w,b
 15488  0115E4  5D8F               	subwf	printf@c& (0+255),w,b
 15489  0115E6  518E               	movf	(printf@prec+1)& (0+255),w,b
 15490  0115E8  0A80               	xorlw	128
 15491  0115EA  596E               	subwfb	??_printf& (0+255),w,b
 15492  0115EC  B0D8               	btfsc	status,0,c
 15493  0115EE  D003               	goto	l1395
 15494                           
 15495                           ; BSR set to: 1
 15496                           ;doprnt.c: 1340: c = prec;
 15497  0115F0  C18D  F18F         	movff	printf@prec,printf@c
 15498  0115F4  D010               	goto	l1397
 15499  0115F6                     l1395:
 15500                           
 15501                           ; BSR set to: 1
 15502                           ;doprnt.c: 1341: else if(prec < c)
 15503                           
 15504                           ; BSR set to: 1
 15505  0115F6  518E               	movf	(printf@prec+1)& (0+255),w,b
 15506  0115F8  0A80               	xorlw	128
 15507  0115FA  6F6E               	movwf	??_printf& (0+255),b
 15508  0115FC  518F               	movf	printf@c& (0+255),w,b
 15509  0115FE  5D8D               	subwf	printf@prec& (0+255),w,b
 15510  011600  0E80               	movlw	128
 15511  011602  BF8F               	btfsc	printf@c& (0+255),7,b
 15512  011604  0E7F               	movlw	127
 15513  011606  596E               	subwfb	??_printf& (0+255),w,b
 15514  011608  B0D8               	btfsc	status,0,c
 15515  01160A  D005               	goto	l1397
 15516                           
 15517                           ; BSR set to: 1
 15518                           ;doprnt.c: 1342: prec = c;
 15519  01160C  518F               	movf	printf@c& (0+255),w,b
 15520  01160E  6F8D               	movwf	printf@prec& (0+255),b
 15521  011610  6B8E               	clrf	(printf@prec+1)& (0+255),b
 15522  011612  BF8D               	btfsc	printf@prec& (0+255),7,b
 15523  011614  078E               	decf	(printf@prec+1)& (0+255),f,b
 15524  011616                     l1397:
 15525                           
 15526                           ; BSR set to: 1
 15527                           ;doprnt.c: 1422: {
 15528                           ;doprnt.c: 1438: if(flag & 0x03)
 15529                           
 15530                           ; BSR set to: 1
 15531                           
 15532                           ; BSR set to: 1
 15533  011616  0E03               	movlw	3
 15534  011618  157E               	andwf	printf@flag& (0+255),w,b
 15535  01161A  6F6E               	movwf	??_printf& (0+255),b
 15536  01161C  0E00               	movlw	0
 15537  01161E  157F               	andwf	(printf@flag+1)& (0+255),w,b
 15538  011620  6F6F               	movwf	(??_printf+1)& (0+255),b
 15539  011622  516E               	movf	??_printf& (0+255),w,b
 15540  011624  116F               	iorwf	(??_printf+1)& (0+255),w,b
 15541  011626  B4D8               	btfsc	status,2,c
 15542  011628  D091               	goto	l1399
 15543                           
 15544                           ; BSR set to: 1
 15545                           ;doprnt.c: 1439: (putch('-') );
 15546  01162A  0E2D               	movlw	45
 15547  01162C  EC0D  F0B8         	call	_putch
 15548                           
 15549                           ;doprnt.c: 1469: }
 15550                           ;doprnt.c: 1474: while(prec--) {
 15551  011630  D08D               	goto	l1399
 15552  011632                     
 15553                           ;doprnt.c: 1486: case 0xC0:
 15554                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 15555  011632  C18D  F16E         	movff	printf@prec,??_printf
 15556  011636  C18E  F16F         	movff	printf@prec+1,??_printf+1
 15557  01163A  0101               	movlb	1	; () banked
 15558  01163C  90D8               	bcf	status,0,c
 15559  01163E  376E               	rlcf	??_printf& (0+255),f,b
 15560  011640  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15561  011642  90D8               	bcf	status,0,c
 15562  011644  376E               	rlcf	??_printf& (0+255),f,b
 15563  011646  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15564  011648  0E5F               	movlw	low _dpowers
 15565  01164A  256E               	addwf	??_printf& (0+255),w,b
 15566  01164C  6EF6               	movwf	tblptrl,c
 15567  01164E  0EEC               	movlw	high _dpowers
 15568  011650  216F               	addwfc	(??_printf+1)& (0+255),w,b
 15569  011652  6EF7               	movwf	tblptrh,c
 15570  011654                     	if	1	;There are 3 active tblptr bytes
 15571  011654  6AF8               	clrf	tblptru,c
 15572  011656  0E00               	movlw	low (__mediumconst shr (0+16))
 15573  011658  22F8               	addwfc	tblptru,f,c
 15574  01165A                     	endif
 15575  01165A  0009               	tblrd		*+
 15576  01165C  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15577  011660  0009               	tblrd		*+
 15578  011662  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15579  011666  0009               	tblrd		*+
 15580  011668  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15581  01166C  000A               	tblrd		*-
 15582  01166E  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15583  011672  C186  F117         	movff	printf@val,___lldiv@dividend
 15584  011676  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 15585  01167A  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 15586  01167E  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15587  011682  EC7D  F0AF         	call	___lldiv	;wreg free
 15588  011686  C117  F124         	movff	?___lldiv,___llmod@dividend
 15589  01168A  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 15590  01168E  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 15591  011692  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 15592  011696  0E0A               	movlw	10
 15593  011698  0101               	movlb	1	; () banked
 15594  01169A  6F28               	movwf	___llmod@divisor& (0+255),b
 15595  01169C  0E00               	movlw	0
 15596  01169E  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 15597  0116A0  0E00               	movlw	0
 15598  0116A2  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 15599  0116A4  0E00               	movlw	0
 15600  0116A6  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 15601  0116A8  EC0F  F0B2         	call	___llmod	;wreg free
 15602  0116AC  0101               	movlb	1	; () banked
 15603  0116AE  5124               	movf	?___llmod& (0+255),w,b
 15604  0116B0  0F30               	addlw	48
 15605  0116B2  6F8F               	movwf	printf@c& (0+255),b
 15606                           
 15607                           ;doprnt.c: 1491: break;
 15608  0116B4  D048               	goto	l1404
 15609  0116B6                     
 15610                           ; BSR set to: 1
 15611                           ;doprnt.c: 1499: {
 15612                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 15613                           
 15614                           ; BSR set to: 1
 15615  0116B6  C186  F117         	movff	printf@val,___lldiv@dividend
 15616  0116BA  C187  F118         	movff	printf@val+1,___lldiv@dividend+1
 15617  0116BE  C188  F119         	movff	printf@val+2,___lldiv@dividend+2
 15618  0116C2  C189  F11A         	movff	printf@val+3,___lldiv@dividend+3
 15619  0116C6  C18D  F16E         	movff	printf@prec,??_printf
 15620  0116CA  C18E  F16F         	movff	printf@prec+1,??_printf+1
 15621  0116CE  90D8               	bcf	status,0,c
 15622  0116D0  376E               	rlcf	??_printf& (0+255),f,b
 15623  0116D2  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15624  0116D4  90D8               	bcf	status,0,c
 15625  0116D6  376E               	rlcf	??_printf& (0+255),f,b
 15626  0116D8  376F               	rlcf	(??_printf+1)& (0+255),f,b
 15627  0116DA  0ED5               	movlw	low _hexpowers
 15628  0116DC  256E               	addwf	??_printf& (0+255),w,b
 15629  0116DE  6EF6               	movwf	tblptrl,c
 15630  0116E0  0EEC               	movlw	high _hexpowers
 15631  0116E2  216F               	addwfc	(??_printf+1)& (0+255),w,b
 15632  0116E4  6EF7               	movwf	tblptrh,c
 15633  0116E6                     	if	1	;There are 3 active tblptr bytes
 15634  0116E6  6AF8               	clrf	tblptru,c
 15635  0116E8  0E00               	movlw	low (__mediumconst shr (0+16))
 15636  0116EA  22F8               	addwfc	tblptru,f,c
 15637  0116EC                     	endif
 15638  0116EC  0009               	tblrd		*+
 15639  0116EE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 15640  0116F2  0009               	tblrd		*+
 15641  0116F4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 15642  0116F8  0009               	tblrd		*+
 15643  0116FA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 15644  0116FE  000A               	tblrd		*-
 15645  011700  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 15646  011704  EC7D  F0AF         	call	___lldiv	;wreg free
 15647  011708  0101               	movlb	1	; () banked
 15648  01170A  5117               	movf	?___lldiv& (0+255),w,b
 15649  01170C  0B0F               	andlw	15
 15650  01170E  6F77               	movwf	printf@idx& (0+255),b
 15651                           
 15652                           ; BSR set to: 1
 15653                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 15654  011710  5177               	movf	printf@idx& (0+255),w,b
 15655  011712  0D01               	mullw	1
 15656  011714  0EFA               	movlw	low STR_133
 15657  011716  24F3               	addwf	prodl,w,c
 15658  011718  6EF6               	movwf	tblptrl,c
 15659  01171A  0EFD               	movlw	high STR_133
 15660  01171C  20F4               	addwfc	prodh,w,c
 15661  01171E  6EF7               	movwf	tblptrh,c
 15662  011720                     	if	1	;There are 3 active tblptr bytes
 15663  011720  6AF8               	clrf	tblptru,c
 15664  011722  0E00               	movlw	low (__mediumconst shr (0+16))
 15665  011724  22F8               	addwfc	tblptru,f,c
 15666  011726                     	endif
 15667  011726  0008               	tblrd		*
 15668  011728  CFF5 F18F          	movff	tablat,printf@c
 15669                           
 15670                           ; BSR set to: 1
 15671                           ;doprnt.c: 1523: }
 15672                           
 15673                           ;doprnt.c: 1508: }
 15674                           ;doprnt.c: 1510: break;
 15675  01172C  D00C               	goto	l1404
 15676  01172E                     l10683:
 15677  01172E  0101               	movlb	1	; () banked
 15678  011730  517E               	movf	printf@flag& (0+255),w,b
 15679  011732  0BC0               	andlw	192
 15680                           
 15681                           ; Switch size 1, requested type "space"
 15682                           ; Number of cases is 3, Range of values is 0 to 192
 15683                           ; switch strategies available:
 15684                           ; Name         Instructions Cycles
 15685                           ; simple_byte           10     6 (average)
 15686                           ;	Chosen strategy is simple_byte
 15687  011734  0A00               	xorlw	0	; case 0
 15688  011736  B4D8               	btfsc	status,2,c
 15689  011738  D77C               	goto	l1402
 15690  01173A  0A80               	xorlw	128	; case 128
 15691  01173C  B4D8               	btfsc	status,2,c
 15692  01173E  D7BB               	goto	l1405
 15693  011740  0A40               	xorlw	64	; case 192
 15694  011742  B4D8               	btfsc	status,2,c
 15695  011744  D776               	goto	l1402
 15696  011746                     l1404:
 15697                           
 15698                           ; BSR set to: 1
 15699                           ;doprnt.c: 1524: (putch(c) );
 15700                           
 15701                           ; BSR set to: 1
 15702  011746  518F               	movf	printf@c& (0+255),w,b
 15703  011748  EC0D  F0B8         	call	_putch
 15704  01174C                     l1399:
 15705  01174C  0101               	movlb	1	; () banked
 15706  01174E  078D               	decf	printf@prec& (0+255),f,b
 15707  011750  A0D8               	btfss	status,0,c
 15708  011752  078E               	decf	(printf@prec+1)& (0+255),f,b
 15709  011754  298D               	incf	printf@prec& (0+255),w,b
 15710  011756  E1EB               	bnz	l10683
 15711  011758  298E               	incf	(printf@prec+1)& (0+255),w,b
 15712  01175A  A4D8               	btfss	status,2,c
 15713  01175C  D7E8               	goto	l1401
 15714  01175E                     u12850:
 15715                           
 15716                           ; BSR set to: 1
 15717                           
 15718                           ; BSR set to: 1
 15719  01175E  0101               	movlb	1	; () banked
 15720  011760  5164               	movf	printf@f& (0+255),w,b
 15721  011762  6F6E               	movwf	??_printf& (0+255),b
 15722  011764  5165               	movf	(printf@f+1)& (0+255),w,b
 15723  011766  6F6F               	movwf	(??_printf+1)& (0+255),b
 15724  011768  4B64               	infsnz	printf@f& (0+255),f,b
 15725  01176A  2B65               	incf	(printf@f+1)& (0+255),f,b
 15726  01176C  C16E  FFF6         	movff	??_printf,tblptrl
 15727  011770  C16F  FFF7         	movff	??_printf+1,tblptrh
 15728  011774  0E00               	movlw	low (__mediumconst shr (0+16))
 15729  011776  6EF8               	movwf	tblptru,c
 15730  011778  0E0D               	movlw	(high __ramtop+-1)
 15731  01177A  64F7               	cpfsgt	tblptrh,c
 15732  01177C  D003               	bra	u12867
 15733  01177E  0008               	tblrd		*
 15734  011780  50F5               	movf	tablat,w,c
 15735  011782  D005               	bra	u12860
 15736  011784                     u12867:
 15737  011784  CFF6 FFE9          	movff	tblptrl,fsr0l
 15738  011788  CFF7 FFEA          	movff	tblptrh,fsr0h
 15739  01178C  50EF               	movf	indf0,w,c
 15740  01178E                     u12860:
 15741  01178E  0101               	movlb	1	; () banked
 15742  011790  6F8F               	movwf	printf@c& (0+255),b
 15743  011792  518F               	movf	printf@c& (0+255),w,b
 15744  011794  B4D8               	btfsc	status,2,c
 15745  011796  0012               	return	
 15746  011798  EF78  F086         	goto	l1314
 15747  01179C                     __end_of_printf:
 15748                           	opt stack 0
 15749                           tblptru	equ	0xFF8
 15750                           tblptrh	equ	0xFF7
 15751                           tblptrl	equ	0xFF6
 15752                           tablat	equ	0xFF5
 15753                           prodh	equ	0xFF4
 15754                           prodl	equ	0xFF3
 15755                           intcon	equ	0xFF2
 15756                           indf0	equ	0xFEF
 15757                           postinc0	equ	0xFEE
 15758                           fsr0h	equ	0xFEA
 15759                           fsr0l	equ	0xFE9
 15760                           wreg	equ	0xFE8
 15761                           indf1	equ	0xFE7
 15762                           postdec1	equ	0xFE5
 15763                           plusw1	equ	0xFE3
 15764                           fsr1h	equ	0xFE2
 15765                           fsr1l	equ	0xFE1
 15766                           indf2	equ	0xFDF
 15767                           postinc2	equ	0xFDE
 15768                           postdec2	equ	0xFDD
 15769                           plusw2	equ	0xFDB
 15770                           fsr2h	equ	0xFDA
 15771                           fsr2l	equ	0xFD9
 15772                           status	equ	0xFD8
 15773                           
 15774 ;; *************** function _scale *****************
 15775 ;; Defined at:
 15776 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;  scl             1    wreg     char 
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;  scl             1   91[BANK1 ] char 
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  3   85[BANK1 ] char 
 15783 ;; Registers used:
 15784 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15785 ;; Tracked objects:
 15786 ;;		On entry : 0/0
 15787 ;;		On exit  : 0/0
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15790 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15791 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15793 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15794 ;;Total ram usage:        7 bytes
 15795 ;; Hardware stack levels used:    1
 15796 ;; Hardware stack levels required when called:   16
 15797 ;; This function calls:
 15798 ;;		___awdiv
 15799 ;;		___awmod
 15800 ;;		___ftmul
 15801 ;;		___wmul
 15802 ;; This function is called by:
 15803 ;;		_printf
 15804 ;; This function uses a non-reentrant model
 15805 ;;
 15806                           
 15807                           	psect	text35
 15808  0128C8                     __ptext35:
 15809                           	opt stack 0
 15810  0128C8                     _scale:
 15811                           	opt stack 11
 15812                           
 15813                           ; BSR set to: 1
 15814                           ;incstack = 0
 15815                           ;scale@scl stored from wreg
 15816  0128C8  0101               	movlb	1	; () banked
 15817  0128CA  6F5B               	movwf	scale@scl& (0+255),b
 15818                           
 15819                           ;doprnt.c: 428: if(scl < 0) {
 15820  0128CC  0101               	movlb	1	; () banked
 15821  0128CE  AF5B               	btfss	scale@scl& (0+255),7,b
 15822  0128D0  D11E               	goto	l1303
 15823                           
 15824                           ; BSR set to: 1
 15825                           ;doprnt.c: 429: scl = -scl;
 15826  0128D2  6D5B               	negf	scale@scl& (0+255),b
 15827                           
 15828                           ;doprnt.c: 430: if(scl>=110)
 15829  0128D4  515B               	movf	scale@scl& (0+255),w,b
 15830  0128D6  0A80               	xorlw	128
 15831  0128D8  0F12               	addlw	-238
 15832  0128DA  A0D8               	btfss	status,0,c
 15833  0128DC  D0A0               	goto	l1304
 15834                           
 15835                           ; BSR set to: 1
 15836                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15837  0128DE  0E00               	movlw	0
 15838  0128E0  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15839  0128E2  0E03               	movlw	3
 15840  0128E4  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15841  0128E6  0E00               	movlw	0
 15842  0128E8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15843  0128EA  0E0A               	movlw	10
 15844  0128EC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15845  0128EE  0E00               	movlw	0
 15846  0128F0  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15847  0128F2  0E64               	movlw	100
 15848  0128F4  6F19               	movwf	___awmod@divisor& (0+255),b
 15849  0128F6  515B               	movf	scale@scl& (0+255),w,b
 15850  0128F8  6F17               	movwf	___awmod@dividend& (0+255),b
 15851  0128FA  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15852  0128FC  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15853  0128FE  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15854  012900  EC35  F0B1         	call	___awmod	;wreg free
 15855  012904  C117  F11D         	movff	?___awmod,___awdiv@dividend
 15856  012908  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 15857  01290C  EC3A  F0AF         	call	___awdiv	;wreg free
 15858  012910  0E09               	movlw	9
 15859  012912  0101               	movlb	1	; () banked
 15860  012914  251D               	addwf	?___awdiv& (0+255),w,b
 15861  012916  6F25               	movwf	___wmul@multiplier& (0+255),b
 15862  012918  0E00               	movlw	0
 15863  01291A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15864  01291C  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15865  01291E  ECB3  F0B6         	call	___wmul	;wreg free
 15866  012922  0EAE               	movlw	low __npowers_
 15867  012924  0101               	movlb	1	; () banked
 15868  012926  2525               	addwf	?___wmul& (0+255),w,b
 15869  012928  6EF6               	movwf	tblptrl,c
 15870  01292A  0EEC               	movlw	high __npowers_
 15871  01292C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15872  01292E  6EF7               	movwf	tblptrh,c
 15873  012930                     	if	1	;There are 3 active tblptr bytes
 15874  012930  6AF8               	clrf	tblptru,c
 15875  012932  0E00               	movlw	low (__mediumconst shr (0+16))
 15876  012934  22F8               	addwfc	tblptru,f,c
 15877  012936                     	endif
 15878  012936  0009               	tblrd		*+
 15879  012938  CFF5 F149          	movff	tablat,___ftmul@f2
 15880  01293C  0009               	tblrd		*+
 15881  01293E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15882  012942  000A               	tblrd		*-
 15883  012944  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15884  012948  0E00               	movlw	0
 15885  01294A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15886  01294C  0E64               	movlw	100
 15887  01294E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15888  012950  515B               	movf	scale@scl& (0+255),w,b
 15889  012952  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15890  012954  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15891  012956  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15892  012958  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15893  01295A  EC3A  F0AF         	call	___awdiv	;wreg free
 15894  01295E  0E12               	movlw	18
 15895  012960  0101               	movlb	1	; () banked
 15896  012962  251D               	addwf	?___awdiv& (0+255),w,b
 15897  012964  6F25               	movwf	___wmul@multiplier& (0+255),b
 15898  012966  0E00               	movlw	0
 15899  012968  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 15900  01296A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 15901  01296C  0E00               	movlw	0
 15902  01296E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15903  012970  0E03               	movlw	3
 15904  012972  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15905  012974  ECB3  F0B6         	call	___wmul	;wreg free
 15906  012978  0EAE               	movlw	low __npowers_
 15907  01297A  0101               	movlb	1	; () banked
 15908  01297C  2525               	addwf	?___wmul& (0+255),w,b
 15909  01297E  6EF6               	movwf	tblptrl,c
 15910  012980  0EEC               	movlw	high __npowers_
 15911  012982  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15912  012984  6EF7               	movwf	tblptrh,c
 15913  012986                     	if	1	;There are 3 active tblptr bytes
 15914  012986  6AF8               	clrf	tblptru,c
 15915  012988  0E00               	movlw	low (__mediumconst shr (0+16))
 15916  01298A  22F8               	addwfc	tblptru,f,c
 15917  01298C                     	endif
 15918  01298C  0009               	tblrd		*+
 15919  01298E  CFF5 F146          	movff	tablat,___ftmul@f1
 15920  012992  0009               	tblrd		*+
 15921  012994  CFF5 F147          	movff	tablat,___ftmul@f1+1
 15922  012998  000A               	tblrd		*-
 15923  01299A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 15924  01299E  EC0C  F0A7         	call	___ftmul	;wreg free
 15925  0129A2  C146  F158         	movff	?___ftmul,_scale$3695
 15926  0129A6  C147  F159         	movff	?___ftmul+1,_scale$3695+1
 15927  0129AA  C148  F15A         	movff	?___ftmul+2,_scale$3695+2
 15928                           
 15929                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 15930  0129AE  C158  F146         	movff	_scale$3695,___ftmul@f1
 15931  0129B2  C159  F147         	movff	_scale$3695+1,___ftmul@f1+1
 15932  0129B6  C15A  F148         	movff	_scale$3695+2,___ftmul@f1+2
 15933  0129BA  0E00               	movlw	0
 15934  0129BC  0101               	movlb	1	; () banked
 15935  0129BE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15936  0129C0  0E03               	movlw	3
 15937  0129C2  6F27               	movwf	___wmul@multiplicand& (0+255),b
 15938  0129C4  0E00               	movlw	0
 15939  0129C6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 15940  0129C8  0E0A               	movlw	10
 15941  0129CA  6F19               	movwf	___awmod@divisor& (0+255),b
 15942  0129CC  515B               	movf	scale@scl& (0+255),w,b
 15943  0129CE  6F17               	movwf	___awmod@dividend& (0+255),b
 15944  0129D0  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 15945  0129D2  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 15946  0129D4  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 15947  0129D6  EC35  F0B1         	call	___awmod	;wreg free
 15948  0129DA  C117  F125         	movff	?___awmod,___wmul@multiplier
 15949  0129DE  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 15950  0129E2  ECB3  F0B6         	call	___wmul	;wreg free
 15951  0129E6  0EAE               	movlw	low __npowers_
 15952  0129E8  0101               	movlb	1	; () banked
 15953  0129EA  2525               	addwf	?___wmul& (0+255),w,b
 15954  0129EC  6EF6               	movwf	tblptrl,c
 15955  0129EE  0EEC               	movlw	high __npowers_
 15956  0129F0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 15957  0129F2  6EF7               	movwf	tblptrh,c
 15958  0129F4                     	if	1	;There are 3 active tblptr bytes
 15959  0129F4  6AF8               	clrf	tblptru,c
 15960  0129F6  0E00               	movlw	low (__mediumconst shr (0+16))
 15961  0129F8  22F8               	addwfc	tblptru,f,c
 15962  0129FA                     	endif
 15963  0129FA  0009               	tblrd		*+
 15964  0129FC  CFF5 F149          	movff	tablat,___ftmul@f2
 15965  012A00  0009               	tblrd		*+
 15966  012A02  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 15967  012A06  000A               	tblrd		*-
 15968  012A08  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 15969  012A0C  EC0C  F0A7         	call	___ftmul	;wreg free
 15970  012A10  C146  F155         	movff	?___ftmul,?_scale
 15971  012A14  C147  F156         	movff	?___ftmul+1,?_scale+1
 15972  012A18  C148  F157         	movff	?___ftmul+2,?_scale+2
 15973  012A1C  0012               	return	
 15974  012A1E                     l1304:
 15975                           
 15976                           ;doprnt.c: 432: else if(scl > 10)
 15977  012A1E  0101               	movlb	1	; () banked
 15978  012A20  515B               	movf	scale@scl& (0+255),w,b
 15979  012A22  0A80               	xorlw	128
 15980  012A24  0F75               	addlw	-139
 15981  012A26  A0D8               	btfss	status,0,c
 15982  012A28  D05C               	goto	l1307
 15983                           
 15984                           ; BSR set to: 1
 15985                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 15986  012A2A  0E00               	movlw	0
 15987  012A2C  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 15988  012A2E  0E0A               	movlw	10
 15989  012A30  6F1F               	movwf	___awdiv@divisor& (0+255),b
 15990  012A32  515B               	movf	scale@scl& (0+255),w,b
 15991  012A34  6F1D               	movwf	___awdiv@dividend& (0+255),b
 15992  012A36  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 15993  012A38  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 15994  012A3A  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 15995  012A3C  EC3A  F0AF         	call	___awdiv	;wreg free
 15996  012A40  0E09               	movlw	9
 15997  012A42  0101               	movlb	1	; () banked
 15998  012A44  251D               	addwf	?___awdiv& (0+255),w,b
 15999  012A46  6F25               	movwf	___wmul@multiplier& (0+255),b
 16000  012A48  0E00               	movlw	0
 16001  012A4A  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16002  012A4C  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16003  012A4E  0E00               	movlw	0
 16004  012A50  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16005  012A52  0E03               	movlw	3
 16006  012A54  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16007  012A56  ECB3  F0B6         	call	___wmul	;wreg free
 16008  012A5A  0EAE               	movlw	low __npowers_
 16009  012A5C  0101               	movlb	1	; () banked
 16010  012A5E  2525               	addwf	?___wmul& (0+255),w,b
 16011  012A60  6EF6               	movwf	tblptrl,c
 16012  012A62  0EEC               	movlw	high __npowers_
 16013  012A64  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16014  012A66  6EF7               	movwf	tblptrh,c
 16015  012A68                     	if	1	;There are 3 active tblptr bytes
 16016  012A68  6AF8               	clrf	tblptru,c
 16017  012A6A  0E00               	movlw	low (__mediumconst shr (0+16))
 16018  012A6C  22F8               	addwfc	tblptru,f,c
 16019  012A6E                     	endif
 16020  012A6E  0009               	tblrd		*+
 16021  012A70  CFF5 F146          	movff	tablat,___ftmul@f1
 16022  012A74  0009               	tblrd		*+
 16023  012A76  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16024  012A7A  000A               	tblrd		*-
 16025  012A7C  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16026  012A80  0E00               	movlw	0
 16027  012A82  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16028  012A84  0E03               	movlw	3
 16029  012A86  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16030  012A88  0E00               	movlw	0
 16031  012A8A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16032  012A8C  0E0A               	movlw	10
 16033  012A8E  6F19               	movwf	___awmod@divisor& (0+255),b
 16034  012A90  515B               	movf	scale@scl& (0+255),w,b
 16035  012A92  6F17               	movwf	___awmod@dividend& (0+255),b
 16036  012A94  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16037  012A96  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16038  012A98  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16039  012A9A  EC35  F0B1         	call	___awmod	;wreg free
 16040  012A9E  C117  F125         	movff	?___awmod,___wmul@multiplier
 16041  012AA2  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16042  012AA6  ECB3  F0B6         	call	___wmul	;wreg free
 16043  012AAA  0EAE               	movlw	low __npowers_
 16044  012AAC  0101               	movlb	1	; () banked
 16045  012AAE  2525               	addwf	?___wmul& (0+255),w,b
 16046  012AB0  6EF6               	movwf	tblptrl,c
 16047  012AB2  0EEC               	movlw	high __npowers_
 16048  012AB4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16049  012AB6  6EF7               	movwf	tblptrh,c
 16050  012AB8                     	if	1	;There are 3 active tblptr bytes
 16051  012AB8  6AF8               	clrf	tblptru,c
 16052  012ABA  0E00               	movlw	low (__mediumconst shr (0+16))
 16053  012ABC  22F8               	addwfc	tblptru,f,c
 16054  012ABE                     	endif
 16055  012ABE  0009               	tblrd		*+
 16056  012AC0  CFF5 F149          	movff	tablat,___ftmul@f2
 16057  012AC4  0009               	tblrd		*+
 16058  012AC6  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16059  012ACA  000A               	tblrd		*-
 16060  012ACC  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16061  012AD0  EC0C  F0A7         	call	___ftmul	;wreg free
 16062  012AD4  C146  F155         	movff	?___ftmul,?_scale
 16063  012AD8  C147  F156         	movff	?___ftmul+1,?_scale+1
 16064  012ADC  C148  F157         	movff	?___ftmul+2,?_scale+2
 16065  012AE0  0012               	return	
 16066  012AE2                     l1307:
 16067                           
 16068                           ;doprnt.c: 434: return _npowers_[scl];
 16069  012AE2  0101               	movlb	1	; () banked
 16070  012AE4  515B               	movf	scale@scl& (0+255),w,b
 16071  012AE6  0D03               	mullw	3
 16072  012AE8  0EAE               	movlw	low __npowers_
 16073  012AEA  24F3               	addwf	prodl,w,c
 16074  012AEC  6EF6               	movwf	tblptrl,c
 16075  012AEE  0EEC               	movlw	high __npowers_
 16076  012AF0  20F4               	addwfc	prodh,w,c
 16077  012AF2  6EF7               	movwf	tblptrh,c
 16078  012AF4                     	if	1	;There are 3 active tblptr bytes
 16079  012AF4  6AF8               	clrf	tblptru,c
 16080  012AF6  0E00               	movlw	low (__mediumconst shr (0+16))
 16081  012AF8  22F8               	addwfc	tblptru,f,c
 16082  012AFA                     	endif
 16083  012AFA  0009               	tblrd		*+
 16084  012AFC  CFF5 F155          	movff	tablat,?_scale
 16085  012B00  0009               	tblrd		*+
 16086  012B02  CFF5 F156          	movff	tablat,?_scale+1
 16087  012B06  000A               	tblrd		*-
 16088  012B08  CFF5 F157          	movff	tablat,?_scale+2
 16089                           
 16090                           ; BSR set to: 1
 16091  012B0C  0012               	return	
 16092  012B0E                     l1303:
 16093                           
 16094                           ; BSR set to: 1
 16095                           ;doprnt.c: 435: }
 16096                           ;doprnt.c: 436: if(scl>=110)
 16097                           
 16098                           ; BSR set to: 1
 16099  012B0E  515B               	movf	scale@scl& (0+255),w,b
 16100  012B10  0A80               	xorlw	128
 16101  012B12  0F12               	addlw	-238
 16102  012B14  A0D8               	btfss	status,0,c
 16103  012B16  D0A0               	goto	l1308
 16104                           
 16105                           ; BSR set to: 1
 16106                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16107  012B18  0E00               	movlw	0
 16108  012B1A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16109  012B1C  0E03               	movlw	3
 16110  012B1E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16111  012B20  0E00               	movlw	0
 16112  012B22  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16113  012B24  0E0A               	movlw	10
 16114  012B26  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16115  012B28  0E00               	movlw	0
 16116  012B2A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16117  012B2C  0E64               	movlw	100
 16118  012B2E  6F19               	movwf	___awmod@divisor& (0+255),b
 16119  012B30  515B               	movf	scale@scl& (0+255),w,b
 16120  012B32  6F17               	movwf	___awmod@dividend& (0+255),b
 16121  012B34  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16122  012B36  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16123  012B38  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16124  012B3A  EC35  F0B1         	call	___awmod	;wreg free
 16125  012B3E  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16126  012B42  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16127  012B46  EC3A  F0AF         	call	___awdiv	;wreg free
 16128  012B4A  0E09               	movlw	9
 16129  012B4C  0101               	movlb	1	; () banked
 16130  012B4E  251D               	addwf	?___awdiv& (0+255),w,b
 16131  012B50  6F25               	movwf	___wmul@multiplier& (0+255),b
 16132  012B52  0E00               	movlw	0
 16133  012B54  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16134  012B56  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16135  012B58  ECB3  F0B6         	call	___wmul	;wreg free
 16136  012B5C  0E87               	movlw	low __powers_
 16137  012B5E  0101               	movlb	1	; () banked
 16138  012B60  2525               	addwf	?___wmul& (0+255),w,b
 16139  012B62  6EF6               	movwf	tblptrl,c
 16140  012B64  0EEC               	movlw	high __powers_
 16141  012B66  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16142  012B68  6EF7               	movwf	tblptrh,c
 16143  012B6A                     	if	1	;There are 3 active tblptr bytes
 16144  012B6A  6AF8               	clrf	tblptru,c
 16145  012B6C  0E00               	movlw	low (__mediumconst shr (0+16))
 16146  012B6E  22F8               	addwfc	tblptru,f,c
 16147  012B70                     	endif
 16148  012B70  0009               	tblrd		*+
 16149  012B72  CFF5 F149          	movff	tablat,___ftmul@f2
 16150  012B76  0009               	tblrd		*+
 16151  012B78  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16152  012B7C  000A               	tblrd		*-
 16153  012B7E  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16154  012B82  0E00               	movlw	0
 16155  012B84  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16156  012B86  0E64               	movlw	100
 16157  012B88  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16158  012B8A  515B               	movf	scale@scl& (0+255),w,b
 16159  012B8C  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16160  012B8E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16161  012B90  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16162  012B92  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16163  012B94  EC3A  F0AF         	call	___awdiv	;wreg free
 16164  012B98  0E12               	movlw	18
 16165  012B9A  0101               	movlb	1	; () banked
 16166  012B9C  251D               	addwf	?___awdiv& (0+255),w,b
 16167  012B9E  6F25               	movwf	___wmul@multiplier& (0+255),b
 16168  012BA0  0E00               	movlw	0
 16169  012BA2  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16170  012BA4  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16171  012BA6  0E00               	movlw	0
 16172  012BA8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16173  012BAA  0E03               	movlw	3
 16174  012BAC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16175  012BAE  ECB3  F0B6         	call	___wmul	;wreg free
 16176  012BB2  0E87               	movlw	low __powers_
 16177  012BB4  0101               	movlb	1	; () banked
 16178  012BB6  2525               	addwf	?___wmul& (0+255),w,b
 16179  012BB8  6EF6               	movwf	tblptrl,c
 16180  012BBA  0EEC               	movlw	high __powers_
 16181  012BBC  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16182  012BBE  6EF7               	movwf	tblptrh,c
 16183  012BC0                     	if	1	;There are 3 active tblptr bytes
 16184  012BC0  6AF8               	clrf	tblptru,c
 16185  012BC2  0E00               	movlw	low (__mediumconst shr (0+16))
 16186  012BC4  22F8               	addwfc	tblptru,f,c
 16187  012BC6                     	endif
 16188  012BC6  0009               	tblrd		*+
 16189  012BC8  CFF5 F146          	movff	tablat,___ftmul@f1
 16190  012BCC  0009               	tblrd		*+
 16191  012BCE  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16192  012BD2  000A               	tblrd		*-
 16193  012BD4  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16194  012BD8  EC0C  F0A7         	call	___ftmul	;wreg free
 16195  012BDC  C146  F158         	movff	?___ftmul,_scale$3695
 16196  012BE0  C147  F159         	movff	?___ftmul+1,_scale$3695+1
 16197  012BE4  C148  F15A         	movff	?___ftmul+2,_scale$3695+2
 16198                           
 16199                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 16200  012BE8  C158  F146         	movff	_scale$3695,___ftmul@f1
 16201  012BEC  C159  F147         	movff	_scale$3695+1,___ftmul@f1+1
 16202  012BF0  C15A  F148         	movff	_scale$3695+2,___ftmul@f1+2
 16203  012BF4  0E00               	movlw	0
 16204  012BF6  0101               	movlb	1	; () banked
 16205  012BF8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16206  012BFA  0E03               	movlw	3
 16207  012BFC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16208  012BFE  0E00               	movlw	0
 16209  012C00  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16210  012C02  0E0A               	movlw	10
 16211  012C04  6F19               	movwf	___awmod@divisor& (0+255),b
 16212  012C06  515B               	movf	scale@scl& (0+255),w,b
 16213  012C08  6F17               	movwf	___awmod@dividend& (0+255),b
 16214  012C0A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16215  012C0C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16216  012C0E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16217  012C10  EC35  F0B1         	call	___awmod	;wreg free
 16218  012C14  C117  F125         	movff	?___awmod,___wmul@multiplier
 16219  012C18  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16220  012C1C  ECB3  F0B6         	call	___wmul	;wreg free
 16221  012C20  0E87               	movlw	low __powers_
 16222  012C22  0101               	movlb	1	; () banked
 16223  012C24  2525               	addwf	?___wmul& (0+255),w,b
 16224  012C26  6EF6               	movwf	tblptrl,c
 16225  012C28  0EEC               	movlw	high __powers_
 16226  012C2A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16227  012C2C  6EF7               	movwf	tblptrh,c
 16228  012C2E                     	if	1	;There are 3 active tblptr bytes
 16229  012C2E  6AF8               	clrf	tblptru,c
 16230  012C30  0E00               	movlw	low (__mediumconst shr (0+16))
 16231  012C32  22F8               	addwfc	tblptru,f,c
 16232  012C34                     	endif
 16233  012C34  0009               	tblrd		*+
 16234  012C36  CFF5 F149          	movff	tablat,___ftmul@f2
 16235  012C3A  0009               	tblrd		*+
 16236  012C3C  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16237  012C40  000A               	tblrd		*-
 16238  012C42  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16239  012C46  EC0C  F0A7         	call	___ftmul	;wreg free
 16240  012C4A  C146  F155         	movff	?___ftmul,?_scale
 16241  012C4E  C147  F156         	movff	?___ftmul+1,?_scale+1
 16242  012C52  C148  F157         	movff	?___ftmul+2,?_scale+2
 16243  012C56  0012               	return	
 16244  012C58                     l1308:
 16245                           
 16246                           ;doprnt.c: 438: else if(scl > 10)
 16247  012C58  0101               	movlb	1	; () banked
 16248  012C5A  515B               	movf	scale@scl& (0+255),w,b
 16249  012C5C  0A80               	xorlw	128
 16250  012C5E  0F75               	addlw	-139
 16251  012C60  A0D8               	btfss	status,0,c
 16252  012C62  D05C               	goto	l1310
 16253                           
 16254                           ; BSR set to: 1
 16255                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 16256  012C64  0E00               	movlw	0
 16257  012C66  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16258  012C68  0E0A               	movlw	10
 16259  012C6A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16260  012C6C  515B               	movf	scale@scl& (0+255),w,b
 16261  012C6E  6F1D               	movwf	___awdiv@dividend& (0+255),b
 16262  012C70  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16263  012C72  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 16264  012C74  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 16265  012C76  EC3A  F0AF         	call	___awdiv	;wreg free
 16266  012C7A  0E09               	movlw	9
 16267  012C7C  0101               	movlb	1	; () banked
 16268  012C7E  251D               	addwf	?___awdiv& (0+255),w,b
 16269  012C80  6F25               	movwf	___wmul@multiplier& (0+255),b
 16270  012C82  0E00               	movlw	0
 16271  012C84  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16272  012C86  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16273  012C88  0E00               	movlw	0
 16274  012C8A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16275  012C8C  0E03               	movlw	3
 16276  012C8E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16277  012C90  ECB3  F0B6         	call	___wmul	;wreg free
 16278  012C94  0E87               	movlw	low __powers_
 16279  012C96  0101               	movlb	1	; () banked
 16280  012C98  2525               	addwf	?___wmul& (0+255),w,b
 16281  012C9A  6EF6               	movwf	tblptrl,c
 16282  012C9C  0EEC               	movlw	high __powers_
 16283  012C9E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16284  012CA0  6EF7               	movwf	tblptrh,c
 16285  012CA2                     	if	1	;There are 3 active tblptr bytes
 16286  012CA2  6AF8               	clrf	tblptru,c
 16287  012CA4  0E00               	movlw	low (__mediumconst shr (0+16))
 16288  012CA6  22F8               	addwfc	tblptru,f,c
 16289  012CA8                     	endif
 16290  012CA8  0009               	tblrd		*+
 16291  012CAA  CFF5 F146          	movff	tablat,___ftmul@f1
 16292  012CAE  0009               	tblrd		*+
 16293  012CB0  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16294  012CB4  000A               	tblrd		*-
 16295  012CB6  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16296  012CBA  0E00               	movlw	0
 16297  012CBC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16298  012CBE  0E03               	movlw	3
 16299  012CC0  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16300  012CC2  0E00               	movlw	0
 16301  012CC4  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16302  012CC6  0E0A               	movlw	10
 16303  012CC8  6F19               	movwf	___awmod@divisor& (0+255),b
 16304  012CCA  515B               	movf	scale@scl& (0+255),w,b
 16305  012CCC  6F17               	movwf	___awmod@dividend& (0+255),b
 16306  012CCE  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16307  012CD0  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 16308  012CD2  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 16309  012CD4  EC35  F0B1         	call	___awmod	;wreg free
 16310  012CD8  C117  F125         	movff	?___awmod,___wmul@multiplier
 16311  012CDC  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16312  012CE0  ECB3  F0B6         	call	___wmul	;wreg free
 16313  012CE4  0E87               	movlw	low __powers_
 16314  012CE6  0101               	movlb	1	; () banked
 16315  012CE8  2525               	addwf	?___wmul& (0+255),w,b
 16316  012CEA  6EF6               	movwf	tblptrl,c
 16317  012CEC  0EEC               	movlw	high __powers_
 16318  012CEE  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16319  012CF0  6EF7               	movwf	tblptrh,c
 16320  012CF2                     	if	1	;There are 3 active tblptr bytes
 16321  012CF2  6AF8               	clrf	tblptru,c
 16322  012CF4  0E00               	movlw	low (__mediumconst shr (0+16))
 16323  012CF6  22F8               	addwfc	tblptru,f,c
 16324  012CF8                     	endif
 16325  012CF8  0009               	tblrd		*+
 16326  012CFA  CFF5 F149          	movff	tablat,___ftmul@f2
 16327  012CFE  0009               	tblrd		*+
 16328  012D00  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16329  012D04  000A               	tblrd		*-
 16330  012D06  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16331  012D0A  EC0C  F0A7         	call	___ftmul	;wreg free
 16332  012D0E  C146  F155         	movff	?___ftmul,?_scale
 16333  012D12  C147  F156         	movff	?___ftmul+1,?_scale+1
 16334  012D16  C148  F157         	movff	?___ftmul+2,?_scale+2
 16335  012D1A  0012               	return	
 16336  012D1C                     l1310:
 16337                           
 16338                           ;doprnt.c: 440: return _powers_[scl];
 16339  012D1C  0101               	movlb	1	; () banked
 16340  012D1E  515B               	movf	scale@scl& (0+255),w,b
 16341  012D20  0D03               	mullw	3
 16342  012D22  0E87               	movlw	low __powers_
 16343  012D24  24F3               	addwf	prodl,w,c
 16344  012D26  6EF6               	movwf	tblptrl,c
 16345  012D28  0EEC               	movlw	high __powers_
 16346  012D2A  20F4               	addwfc	prodh,w,c
 16347  012D2C  6EF7               	movwf	tblptrh,c
 16348  012D2E                     	if	1	;There are 3 active tblptr bytes
 16349  012D2E  6AF8               	clrf	tblptru,c
 16350  012D30  0E00               	movlw	low (__mediumconst shr (0+16))
 16351  012D32  22F8               	addwfc	tblptru,f,c
 16352  012D34                     	endif
 16353  012D34  0009               	tblrd		*+
 16354  012D36  CFF5 F155          	movff	tablat,?_scale
 16355  012D3A  0009               	tblrd		*+
 16356  012D3C  CFF5 F156          	movff	tablat,?_scale+1
 16357  012D40  000A               	tblrd		*-
 16358  012D42  CFF5 F157          	movff	tablat,?_scale+2
 16359  012D46  0012               	return	
 16360  012D48                     __end_of_scale:
 16361                           	opt stack 0
 16362                           tblptru	equ	0xFF8
 16363                           tblptrh	equ	0xFF7
 16364                           tblptrl	equ	0xFF6
 16365                           tablat	equ	0xFF5
 16366                           prodh	equ	0xFF4
 16367                           prodl	equ	0xFF3
 16368                           intcon	equ	0xFF2
 16369                           indf0	equ	0xFEF
 16370                           postinc0	equ	0xFEE
 16371                           fsr0h	equ	0xFEA
 16372                           fsr0l	equ	0xFE9
 16373                           wreg	equ	0xFE8
 16374                           indf1	equ	0xFE7
 16375                           postdec1	equ	0xFE5
 16376                           plusw1	equ	0xFE3
 16377                           fsr1h	equ	0xFE2
 16378                           fsr1l	equ	0xFE1
 16379                           indf2	equ	0xFDF
 16380                           postinc2	equ	0xFDE
 16381                           postdec2	equ	0xFDD
 16382                           plusw2	equ	0xFDB
 16383                           fsr2h	equ	0xFDA
 16384                           fsr2l	equ	0xFD9
 16385                           status	equ	0xFD8
 16386                           
 16387 ;; *************** function _putch *****************
 16388 ;; Defined at:
 16389 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 16390 ;; Parameters:    Size  Location     Type
 16391 ;;  txData          1    wreg     unsigned char 
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;  txData          1   24[BANK1 ] unsigned char 
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  1    wreg      void 
 16396 ;; Registers used:
 16397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16404 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16406 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16407 ;;Total ram usage:        1 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; Hardware stack levels required when called:   15
 16410 ;; This function calls:
 16411 ;;		_EUSART2_Write
 16412 ;; This function is called by:
 16413 ;;		_printf
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text36
 16418  01701A                     __ptext36:
 16419                           	opt stack 0
 16420  01701A                     _putch:
 16421                           	opt stack 12
 16422                           
 16423                           ;incstack = 0
 16424                           ;putch@txData stored from wreg
 16425  01701A  0101               	movlb	1	; () banked
 16426  01701C  6F18               	movwf	putch@txData& (0+255),b
 16427                           
 16428                           ;eusart2.c: 195: EUSART2_Write(txData);
 16429  01701E  0101               	movlb	1	; () banked
 16430  017020  5118               	movf	putch@txData& (0+255),w,b
 16431  017022  EC34  F0B4         	call	_EUSART2_Write
 16432  017026  0012               	return		;funcret
 16433  017028                     __end_of_putch:
 16434                           	opt stack 0
 16435                           tblptru	equ	0xFF8
 16436                           tblptrh	equ	0xFF7
 16437                           tblptrl	equ	0xFF6
 16438                           tablat	equ	0xFF5
 16439                           prodh	equ	0xFF4
 16440                           prodl	equ	0xFF3
 16441                           intcon	equ	0xFF2
 16442                           indf0	equ	0xFEF
 16443                           postinc0	equ	0xFEE
 16444                           fsr0h	equ	0xFEA
 16445                           fsr0l	equ	0xFE9
 16446                           wreg	equ	0xFE8
 16447                           indf1	equ	0xFE7
 16448                           postdec1	equ	0xFE5
 16449                           plusw1	equ	0xFE3
 16450                           fsr1h	equ	0xFE2
 16451                           fsr1l	equ	0xFE1
 16452                           indf2	equ	0xFDF
 16453                           postinc2	equ	0xFDE
 16454                           postdec2	equ	0xFDD
 16455                           plusw2	equ	0xFDB
 16456                           fsr2h	equ	0xFDA
 16457                           fsr2l	equ	0xFD9
 16458                           status	equ	0xFD8
 16459                           
 16460 ;; *************** function _EUSART2_Write *****************
 16461 ;; Defined at:
 16462 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 16463 ;; Parameters:    Size  Location     Type
 16464 ;;  txData          1    wreg     unsigned char 
 16465 ;; Auto vars:     Size  Location     Type
 16466 ;;  txData          1   23[BANK1 ] unsigned char 
 16467 ;; Return value:  Size  Location     Type
 16468 ;;                  1    wreg      void 
 16469 ;; Registers used:
 16470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16471 ;; Tracked objects:
 16472 ;;		On entry : 0/0
 16473 ;;		On exit  : 0/0
 16474 ;;		Unchanged: 0/0
 16475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16477 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16479 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16480 ;;Total ram usage:        1 bytes
 16481 ;; Hardware stack levels used:    1
 16482 ;; Hardware stack levels required when called:   14
 16483 ;; This function calls:
 16484 ;;		Nothing
 16485 ;; This function is called by:
 16486 ;;		_putch
 16487 ;; This function uses a non-reentrant model
 16488 ;;
 16489                           
 16490                           	psect	text37
 16491  016868                     __ptext37:
 16492                           	opt stack 0
 16493  016868                     _EUSART2_Write:
 16494                           	opt stack 12
 16495                           
 16496                           ;incstack = 0
 16497                           ;EUSART2_Write@txData stored from wreg
 16498  016868  0101               	movlb	1	; () banked
 16499  01686A  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 16500                           
 16501                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 16502  01686C  D002               	goto	l376
 16503  01686E                     l377:
 16504                           
 16505                           ; BSR set to: 1
 16506  01686E  0004               	clrwdt		;# 
 16507                           
 16508                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 16509  016870  827E               	bsf	3966,1,c	;volatile
 16510  016872                     l376:
 16511  016872  0101               	movlb	1	; () banked
 16512  016874  51D4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 16513  016876  B4D8               	btfsc	status,2,c
 16514  016878  D7FA               	goto	l377
 16515                           
 16516                           ; BSR set to: 1
 16517                           ;eusart2.c: 167: }
 16518                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 16519  01687A  927E               	bcf	3966,1,c	;volatile
 16520                           
 16521                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 16522  01687C  010E               	movlb	14	; () banked
 16523  01687E  BD2C               	btfsc	44,6,b	;volatile
 16524  016880  D003               	goto	l379
 16525                           
 16526                           ; BSR set to: 14
 16527                           ;eusart2.c: 172: {
 16528                           ;eusart2.c: 173: TX2REG = txData;
 16529  016882  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 16530                           
 16531                           ;eusart2.c: 174: }
 16532  016886  D013               	goto	l380
 16533  016888                     l379:
 16534                           
 16535                           ; BSR set to: 14
 16536                           ;eusart2.c: 175: else
 16537                           ;eusart2.c: 176: {
 16538                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 16539  016888  9D2C               	bcf	44,6,b	;volatile
 16540                           
 16541                           ; BSR set to: 14
 16542                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 16543  01688A  0101               	movlb	1	; () banked
 16544  01688C  51D6               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 16545  01688E  0D01               	mullw	1
 16546  016890  0E00               	movlw	low _eusart2TxBuffer
 16547  016892  24F3               	addwf	prodl,w,c
 16548  016894  6ED9               	movwf	fsr2l,c
 16549  016896  0E03               	movlw	high _eusart2TxBuffer
 16550  016898  20F4               	addwfc	prodh,w,c
 16551  01689A  6EDA               	movwf	fsr2h,c
 16552  01689C  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 16553                           
 16554                           ; BSR set to: 1
 16555  0168A0  2BD6               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 16556                           
 16557                           ; BSR set to: 1
 16558                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 16559  0168A2  0E7F               	movlw	127
 16560  0168A4  65D6               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 16561  0168A6  D002               	goto	l381
 16562                           
 16563                           ; BSR set to: 1
 16564                           ;eusart2.c: 180: {
 16565                           ;eusart2.c: 181: eusart2TxHead = 0;
 16566  0168A8  0E00               	movlw	0
 16567  0168AA  6FD6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 16568  0168AC                     l381:
 16569                           
 16570                           ; BSR set to: 1
 16571                           ;eusart2.c: 182: }
 16572                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 16573                           
 16574                           ; BSR set to: 1
 16575  0168AC  07D4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 16576  0168AE                     l380:
 16577                           
 16578                           ;eusart2.c: 184: }
 16579                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 16580                           
 16581                           ; BSR set to: 1
 16582  0168AE  010E               	movlb	14	; () banked
 16583  0168B0  8D2C               	bsf	44,6,b	;volatile
 16584                           
 16585                           ; BSR set to: 14
 16586  0168B2  0012               	return		;funcret
 16587  0168B4                     __end_of_EUSART2_Write:
 16588                           	opt stack 0
 16589                           tblptru	equ	0xFF8
 16590                           tblptrh	equ	0xFF7
 16591                           tblptrl	equ	0xFF6
 16592                           tablat	equ	0xFF5
 16593                           prodh	equ	0xFF4
 16594                           prodl	equ	0xFF3
 16595                           intcon	equ	0xFF2
 16596                           indf0	equ	0xFEF
 16597                           postinc0	equ	0xFEE
 16598                           fsr0h	equ	0xFEA
 16599                           fsr0l	equ	0xFE9
 16600                           wreg	equ	0xFE8
 16601                           indf1	equ	0xFE7
 16602                           postdec1	equ	0xFE5
 16603                           plusw1	equ	0xFE3
 16604                           fsr1h	equ	0xFE2
 16605                           fsr1l	equ	0xFE1
 16606                           indf2	equ	0xFDF
 16607                           postinc2	equ	0xFDE
 16608                           postdec2	equ	0xFDD
 16609                           plusw2	equ	0xFDB
 16610                           fsr2h	equ	0xFDA
 16611                           fsr2l	equ	0xFD9
 16612                           status	equ	0xFD8
 16613                           
 16614 ;; *************** function _isdigit *****************
 16615 ;; Defined at:
 16616 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 16617 ;; Parameters:    Size  Location     Type
 16618 ;;  c               1    wreg     unsigned char 
 16619 ;; Auto vars:     Size  Location     Type
 16620 ;;  c               1   25[BANK1 ] unsigned char 
 16621 ;; Return value:  Size  Location     Type
 16622 ;;		None               void
 16623 ;; Registers used:
 16624 ;;		wreg, status,2, status,0
 16625 ;; Tracked objects:
 16626 ;;		On entry : 0/0
 16627 ;;		On exit  : 0/0
 16628 ;;		Unchanged: 0/0
 16629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16631 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16632 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16633 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16634 ;;Total ram usage:        3 bytes
 16635 ;; Hardware stack levels used:    1
 16636 ;; Hardware stack levels required when called:   14
 16637 ;; This function calls:
 16638 ;;		Nothing
 16639 ;; This function is called by:
 16640 ;;		_printf
 16641 ;;		_atoi
 16642 ;; This function uses a non-reentrant model
 16643 ;;
 16644                           
 16645                           	psect	text38
 16646  016EBE                     __ptext38:
 16647                           	opt stack 0
 16648  016EBE                     _isdigit:
 16649                           	opt stack 13
 16650                           
 16651                           ; BSR set to: 14
 16652                           ;incstack = 0
 16653                           ;isdigit@c stored from wreg
 16654  016EBE  0101               	movlb	1	; () banked
 16655  016EC0  6F19               	movwf	isdigit@c& (0+255),b
 16656  016EC2  0E00               	movlw	0
 16657  016EC4  0101               	movlb	1	; () banked
 16658  016EC6  6F18               	movwf	_isdigit$3018& (0+255),b
 16659                           
 16660                           ; BSR set to: 1
 16661  016EC8  0E3A               	movlw	58
 16662  016ECA  6119               	cpfslt	isdigit@c& (0+255),b
 16663  016ECC  D005               	goto	l1836
 16664                           
 16665                           ; BSR set to: 1
 16666  016ECE  0E2F               	movlw	47
 16667  016ED0  6519               	cpfsgt	isdigit@c& (0+255),b
 16668  016ED2  D002               	goto	l1836
 16669                           
 16670                           ; BSR set to: 1
 16671  016ED4  0E01               	movlw	1
 16672  016ED6  6F18               	movwf	_isdigit$3018& (0+255),b
 16673  016ED8                     l1836:
 16674                           
 16675                           ; BSR set to: 1
 16676                           
 16677                           ; BSR set to: 1
 16678  016ED8  C118  F117         	movff	_isdigit$3018,??_isdigit
 16679  016EDC  3117               	rrcf	??_isdigit& (0+255),w,b
 16680  016EDE  0012               	return	
 16681  016EE0                     __end_of_isdigit:
 16682                           	opt stack 0
 16683                           tblptru	equ	0xFF8
 16684                           tblptrh	equ	0xFF7
 16685                           tblptrl	equ	0xFF6
 16686                           tablat	equ	0xFF5
 16687                           prodh	equ	0xFF4
 16688                           prodl	equ	0xFF3
 16689                           intcon	equ	0xFF2
 16690                           indf0	equ	0xFEF
 16691                           postinc0	equ	0xFEE
 16692                           fsr0h	equ	0xFEA
 16693                           fsr0l	equ	0xFE9
 16694                           wreg	equ	0xFE8
 16695                           indf1	equ	0xFE7
 16696                           postdec1	equ	0xFE5
 16697                           plusw1	equ	0xFE3
 16698                           fsr1h	equ	0xFE2
 16699                           fsr1l	equ	0xFE1
 16700                           indf2	equ	0xFDF
 16701                           postinc2	equ	0xFDE
 16702                           postdec2	equ	0xFDD
 16703                           plusw2	equ	0xFDB
 16704                           fsr2h	equ	0xFDA
 16705                           fsr2l	equ	0xFD9
 16706                           status	equ	0xFD8
 16707                           
 16708 ;; *************** function _fround *****************
 16709 ;; Defined at:
 16710 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 16711 ;; Parameters:    Size  Location     Type
 16712 ;;  prec            1    wreg     unsigned char 
 16713 ;; Auto vars:     Size  Location     Type
 16714 ;;  prec            1   94[BANK1 ] unsigned char 
 16715 ;; Return value:  Size  Location     Type
 16716 ;;                  3   85[BANK1 ] unsigned char 
 16717 ;; Registers used:
 16718 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16719 ;; Tracked objects:
 16720 ;;		On entry : 0/0
 16721 ;;		On exit  : 0/0
 16722 ;;		Unchanged: 0/0
 16723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16724 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16725 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16727 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16728 ;;Total ram usage:       10 bytes
 16729 ;; Hardware stack levels used:    1
 16730 ;; Hardware stack levels required when called:   16
 16731 ;; This function calls:
 16732 ;;		___awdiv
 16733 ;;		___awmod
 16734 ;;		___ftmul
 16735 ;;		___wmul
 16736 ;; This function is called by:
 16737 ;;		_printf
 16738 ;; This function uses a non-reentrant model
 16739 ;;
 16740                           
 16741                           	psect	text39
 16742  013500                     __ptext39:
 16743                           	opt stack 0
 16744  013500                     _fround:
 16745                           	opt stack 11
 16746                           
 16747                           ; BSR set to: 1
 16748                           ;incstack = 0
 16749                           ;fround@prec stored from wreg
 16750  013500  0101               	movlb	1	; () banked
 16751  013502  6F5E               	movwf	fround@prec& (0+255),b
 16752                           
 16753                           ;doprnt.c: 413: if(prec>=110)
 16754  013504  0E6D               	movlw	109
 16755  013506  0101               	movlb	1	; () banked
 16756  013508  655E               	cpfsgt	fround@prec& (0+255),b
 16757  01350A  D0AF               	goto	l1297
 16758                           
 16759                           ; BSR set to: 1
 16760                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16761  01350C  0E00               	movlw	0
 16762  01350E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16763  013510  0E03               	movlw	3
 16764  013512  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16765  013514  0E00               	movlw	0
 16766  013516  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16767  013518  0E0A               	movlw	10
 16768  01351A  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16769  01351C  0E00               	movlw	0
 16770  01351E  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16771  013520  0E64               	movlw	100
 16772  013522  6F19               	movwf	___awmod@divisor& (0+255),b
 16773  013524  C15E  F117         	movff	fround@prec,___awmod@dividend
 16774  013528  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16775  01352A  EC35  F0B1         	call	___awmod	;wreg free
 16776  01352E  C117  F11D         	movff	?___awmod,___awdiv@dividend
 16777  013532  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 16778  013536  EC3A  F0AF         	call	___awdiv	;wreg free
 16779  01353A  0E09               	movlw	9
 16780  01353C  0101               	movlb	1	; () banked
 16781  01353E  251D               	addwf	?___awdiv& (0+255),w,b
 16782  013540  6F25               	movwf	___wmul@multiplier& (0+255),b
 16783  013542  0E00               	movlw	0
 16784  013544  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16785  013546  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16786  013548  ECB3  F0B6         	call	___wmul	;wreg free
 16787  01354C  0EAE               	movlw	low __npowers_
 16788  01354E  0101               	movlb	1	; () banked
 16789  013550  2525               	addwf	?___wmul& (0+255),w,b
 16790  013552  6EF6               	movwf	tblptrl,c
 16791  013554  0EEC               	movlw	high __npowers_
 16792  013556  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16793  013558  6EF7               	movwf	tblptrh,c
 16794  01355A                     	if	1	;There are 3 active tblptr bytes
 16795  01355A  6AF8               	clrf	tblptru,c
 16796  01355C  0E00               	movlw	low (__mediumconst shr (0+16))
 16797  01355E  22F8               	addwfc	tblptru,f,c
 16798  013560                     	endif
 16799  013560  0009               	tblrd		*+
 16800  013562  CFF5 F149          	movff	tablat,___ftmul@f2
 16801  013566  0009               	tblrd		*+
 16802  013568  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16803  01356C  000A               	tblrd		*-
 16804  01356E  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16805  013572  0E00               	movlw	0
 16806  013574  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16807  013576  0E64               	movlw	100
 16808  013578  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16809  01357A  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 16810  01357E  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16811  013580  EC3A  F0AF         	call	___awdiv	;wreg free
 16812  013584  0E12               	movlw	18
 16813  013586  0101               	movlb	1	; () banked
 16814  013588  251D               	addwf	?___awdiv& (0+255),w,b
 16815  01358A  6F25               	movwf	___wmul@multiplier& (0+255),b
 16816  01358C  0E00               	movlw	0
 16817  01358E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16818  013590  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16819  013592  0E00               	movlw	0
 16820  013594  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16821  013596  0E03               	movlw	3
 16822  013598  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16823  01359A  ECB3  F0B6         	call	___wmul	;wreg free
 16824  01359E  0EAE               	movlw	low __npowers_
 16825  0135A0  0101               	movlb	1	; () banked
 16826  0135A2  2525               	addwf	?___wmul& (0+255),w,b
 16827  0135A4  6EF6               	movwf	tblptrl,c
 16828  0135A6  0EEC               	movlw	high __npowers_
 16829  0135A8  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16830  0135AA  6EF7               	movwf	tblptrh,c
 16831  0135AC                     	if	1	;There are 3 active tblptr bytes
 16832  0135AC  6AF8               	clrf	tblptru,c
 16833  0135AE  0E00               	movlw	low (__mediumconst shr (0+16))
 16834  0135B0  22F8               	addwfc	tblptru,f,c
 16835  0135B2                     	endif
 16836  0135B2  0009               	tblrd		*+
 16837  0135B4  CFF5 F146          	movff	tablat,___ftmul@f1
 16838  0135B8  0009               	tblrd		*+
 16839  0135BA  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16840  0135BE  000A               	tblrd		*-
 16841  0135C0  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16842  0135C4  EC0C  F0A7         	call	___ftmul	;wreg free
 16843  0135C8  C146  F15B         	movff	?___ftmul,_fround$3693
 16844  0135CC  C147  F15C         	movff	?___ftmul+1,_fround$3693+1
 16845  0135D0  C148  F15D         	movff	?___ftmul+2,_fround$3693+2
 16846                           
 16847                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16848  0135D4  0E00               	movlw	0
 16849  0135D6  0101               	movlb	1	; () banked
 16850  0135D8  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16851  0135DA  0E03               	movlw	3
 16852  0135DC  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16853  0135DE  0E00               	movlw	0
 16854  0135E0  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16855  0135E2  0E0A               	movlw	10
 16856  0135E4  6F19               	movwf	___awmod@divisor& (0+255),b
 16857  0135E6  C15E  F117         	movff	fround@prec,___awmod@dividend
 16858  0135EA  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16859  0135EC  EC35  F0B1         	call	___awmod	;wreg free
 16860  0135F0  C117  F125         	movff	?___awmod,___wmul@multiplier
 16861  0135F4  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16862  0135F8  ECB3  F0B6         	call	___wmul	;wreg free
 16863  0135FC  0EAE               	movlw	low __npowers_
 16864  0135FE  0101               	movlb	1	; () banked
 16865  013600  2525               	addwf	?___wmul& (0+255),w,b
 16866  013602  6EF6               	movwf	tblptrl,c
 16867  013604  0EEC               	movlw	high __npowers_
 16868  013606  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16869  013608  6EF7               	movwf	tblptrh,c
 16870  01360A                     	if	1	;There are 3 active tblptr bytes
 16871  01360A  6AF8               	clrf	tblptru,c
 16872  01360C  0E00               	movlw	low (__mediumconst shr (0+16))
 16873  01360E  22F8               	addwfc	tblptru,f,c
 16874  013610                     	endif
 16875  013610  0009               	tblrd		*+
 16876  013612  CFF5 F149          	movff	tablat,___ftmul@f2
 16877  013616  0009               	tblrd		*+
 16878  013618  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16879  01361C  000A               	tblrd		*-
 16880  01361E  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16881  013622  C15B  F146         	movff	_fround$3693,___ftmul@f1
 16882  013626  C15C  F147         	movff	_fround$3693+1,___ftmul@f1+1
 16883  01362A  C15D  F148         	movff	_fround$3693+2,___ftmul@f1+2
 16884  01362E  EC0C  F0A7         	call	___ftmul	;wreg free
 16885  013632  C146  F158         	movff	?___ftmul,_fround$3694
 16886  013636  C147  F159         	movff	?___ftmul+1,_fround$3694+1
 16887  01363A  C148  F15A         	movff	?___ftmul+2,_fround$3694+2
 16888                           
 16889                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 16890  01363E  C158  F146         	movff	_fround$3694,___ftmul@f1
 16891  013642  C159  F147         	movff	_fround$3694+1,___ftmul@f1+1
 16892  013646  C15A  F148         	movff	_fround$3694+2,___ftmul@f1+2
 16893  01364A  0E00               	movlw	0
 16894  01364C  0101               	movlb	1	; () banked
 16895  01364E  6F49               	movwf	___ftmul@f2& (0+255),b
 16896  013650  0E00               	movlw	0
 16897  013652  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 16898  013654  0E3F               	movlw	63
 16899  013656  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 16900  013658  EC0C  F0A7         	call	___ftmul	;wreg free
 16901  01365C  C146  F155         	movff	?___ftmul,?_fround
 16902  013660  C147  F156         	movff	?___ftmul+1,?_fround+1
 16903  013664  C148  F157         	movff	?___ftmul+2,?_fround+2
 16904  013668  0012               	return	
 16905  01366A                     l1297:
 16906                           
 16907                           ;doprnt.c: 415: else if(prec > 10)
 16908  01366A  0E0A               	movlw	10
 16909  01366C  0101               	movlb	1	; () banked
 16910  01366E  655E               	cpfsgt	fround@prec& (0+255),b
 16911  013670  D06D               	goto	l1300
 16912                           
 16913                           ; BSR set to: 1
 16914                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16915  013672  0E00               	movlw	0
 16916  013674  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16917  013676  0E03               	movlw	3
 16918  013678  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16919  01367A  0E00               	movlw	0
 16920  01367C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 16921  01367E  0E0A               	movlw	10
 16922  013680  6F19               	movwf	___awmod@divisor& (0+255),b
 16923  013682  C15E  F117         	movff	fround@prec,___awmod@dividend
 16924  013686  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 16925  013688  EC35  F0B1         	call	___awmod	;wreg free
 16926  01368C  C117  F125         	movff	?___awmod,___wmul@multiplier
 16927  013690  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 16928  013694  ECB3  F0B6         	call	___wmul	;wreg free
 16929  013698  0EAE               	movlw	low __npowers_
 16930  01369A  0101               	movlb	1	; () banked
 16931  01369C  2525               	addwf	?___wmul& (0+255),w,b
 16932  01369E  6EF6               	movwf	tblptrl,c
 16933  0136A0  0EEC               	movlw	high __npowers_
 16934  0136A2  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16935  0136A4  6EF7               	movwf	tblptrh,c
 16936  0136A6                     	if	1	;There are 3 active tblptr bytes
 16937  0136A6  6AF8               	clrf	tblptru,c
 16938  0136A8  0E00               	movlw	low (__mediumconst shr (0+16))
 16939  0136AA  22F8               	addwfc	tblptru,f,c
 16940  0136AC                     	endif
 16941  0136AC  0009               	tblrd		*+
 16942  0136AE  CFF5 F149          	movff	tablat,___ftmul@f2
 16943  0136B2  0009               	tblrd		*+
 16944  0136B4  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 16945  0136B8  000A               	tblrd		*-
 16946  0136BA  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 16947  0136BE  0E00               	movlw	0
 16948  0136C0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 16949  0136C2  0E0A               	movlw	10
 16950  0136C4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 16951  0136C6  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 16952  0136CA  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 16953  0136CC  EC3A  F0AF         	call	___awdiv	;wreg free
 16954  0136D0  0E09               	movlw	9
 16955  0136D2  0101               	movlb	1	; () banked
 16956  0136D4  251D               	addwf	?___awdiv& (0+255),w,b
 16957  0136D6  6F25               	movwf	___wmul@multiplier& (0+255),b
 16958  0136D8  0E00               	movlw	0
 16959  0136DA  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 16960  0136DC  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 16961  0136DE  0E00               	movlw	0
 16962  0136E0  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 16963  0136E2  0E03               	movlw	3
 16964  0136E4  6F27               	movwf	___wmul@multiplicand& (0+255),b
 16965  0136E6  ECB3  F0B6         	call	___wmul	;wreg free
 16966  0136EA  0EAE               	movlw	low __npowers_
 16967  0136EC  0101               	movlb	1	; () banked
 16968  0136EE  2525               	addwf	?___wmul& (0+255),w,b
 16969  0136F0  6EF6               	movwf	tblptrl,c
 16970  0136F2  0EEC               	movlw	high __npowers_
 16971  0136F4  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 16972  0136F6  6EF7               	movwf	tblptrh,c
 16973  0136F8                     	if	1	;There are 3 active tblptr bytes
 16974  0136F8  6AF8               	clrf	tblptru,c
 16975  0136FA  0E00               	movlw	low (__mediumconst shr (0+16))
 16976  0136FC  22F8               	addwfc	tblptru,f,c
 16977  0136FE                     	endif
 16978  0136FE  0009               	tblrd		*+
 16979  013700  CFF5 F146          	movff	tablat,___ftmul@f1
 16980  013704  0009               	tblrd		*+
 16981  013706  CFF5 F147          	movff	tablat,___ftmul@f1+1
 16982  01370A  000A               	tblrd		*-
 16983  01370C  CFF5 F148          	movff	tablat,___ftmul@f1+2
 16984  013710  EC0C  F0A7         	call	___ftmul	;wreg free
 16985  013714  C146  F15B         	movff	?___ftmul,_fround$3693
 16986  013718  C147  F15C         	movff	?___ftmul+1,_fround$3693+1
 16987  01371C  C148  F15D         	movff	?___ftmul+2,_fround$3693+2
 16988                           
 16989                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 16990  013720  C15B  F146         	movff	_fround$3693,___ftmul@f1
 16991  013724  C15C  F147         	movff	_fround$3693+1,___ftmul@f1+1
 16992  013728  C15D  F148         	movff	_fround$3693+2,___ftmul@f1+2
 16993  01372C  0E00               	movlw	0
 16994  01372E  0101               	movlb	1	; () banked
 16995  013730  6F49               	movwf	___ftmul@f2& (0+255),b
 16996  013732  0E00               	movlw	0
 16997  013734  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 16998  013736  0E3F               	movlw	63
 16999  013738  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 17000  01373A  EC0C  F0A7         	call	___ftmul	;wreg free
 17001  01373E  C146  F155         	movff	?___ftmul,?_fround
 17002  013742  C147  F156         	movff	?___ftmul+1,?_fround+1
 17003  013746  C148  F157         	movff	?___ftmul+2,?_fround+2
 17004  01374A  0012               	return	
 17005  01374C                     l1300:
 17006                           
 17007                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 17008  01374C  0101               	movlb	1	; () banked
 17009  01374E  515E               	movf	fround@prec& (0+255),w,b
 17010  013750  0D03               	mullw	3
 17011  013752  0EAE               	movlw	low __npowers_
 17012  013754  24F3               	addwf	prodl,w,c
 17013  013756  6EF6               	movwf	tblptrl,c
 17014  013758  0EEC               	movlw	high __npowers_
 17015  01375A  20F4               	addwfc	prodh,w,c
 17016  01375C  6EF7               	movwf	tblptrh,c
 17017  01375E                     	if	1	;There are 3 active tblptr bytes
 17018  01375E  6AF8               	clrf	tblptru,c
 17019  013760  0E00               	movlw	low (__mediumconst shr (0+16))
 17020  013762  22F8               	addwfc	tblptru,f,c
 17021  013764                     	endif
 17022  013764  0009               	tblrd		*+
 17023  013766  CFF5 F146          	movff	tablat,___ftmul@f1
 17024  01376A  0009               	tblrd		*+
 17025  01376C  CFF5 F147          	movff	tablat,___ftmul@f1+1
 17026  013770  000A               	tblrd		*-
 17027  013772  CFF5 F148          	movff	tablat,___ftmul@f1+2
 17028  013776  0E00               	movlw	0
 17029  013778  6F49               	movwf	___ftmul@f2& (0+255),b
 17030  01377A  0E00               	movlw	0
 17031  01377C  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 17032  01377E  0E3F               	movlw	63
 17033  013780  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 17034  013782  EC0C  F0A7         	call	___ftmul	;wreg free
 17035  013786  C146  F155         	movff	?___ftmul,?_fround
 17036  01378A  C147  F156         	movff	?___ftmul+1,?_fround+1
 17037  01378E  C148  F157         	movff	?___ftmul+2,?_fround+2
 17038  013792  0012               	return	
 17039  013794                     __end_of_fround:
 17040                           	opt stack 0
 17041                           tblptru	equ	0xFF8
 17042                           tblptrh	equ	0xFF7
 17043                           tblptrl	equ	0xFF6
 17044                           tablat	equ	0xFF5
 17045                           prodh	equ	0xFF4
 17046                           prodl	equ	0xFF3
 17047                           intcon	equ	0xFF2
 17048                           indf0	equ	0xFEF
 17049                           postinc0	equ	0xFEE
 17050                           fsr0h	equ	0xFEA
 17051                           fsr0l	equ	0xFE9
 17052                           wreg	equ	0xFE8
 17053                           indf1	equ	0xFE7
 17054                           postdec1	equ	0xFE5
 17055                           plusw1	equ	0xFE3
 17056                           fsr1h	equ	0xFE2
 17057                           fsr1l	equ	0xFE1
 17058                           indf2	equ	0xFDF
 17059                           postinc2	equ	0xFDE
 17060                           postdec2	equ	0xFDD
 17061                           plusw2	equ	0xFDB
 17062                           fsr2h	equ	0xFDA
 17063                           fsr2l	equ	0xFD9
 17064                           status	equ	0xFD8
 17065                           
 17066 ;; *************** function ___wmul *****************
 17067 ;; Defined at:
 17068 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 17069 ;; Parameters:    Size  Location     Type
 17070 ;;  multiplier      2   37[BANK1 ] unsigned int 
 17071 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 17072 ;; Auto vars:     Size  Location     Type
 17073 ;;  product         2   41[BANK1 ] unsigned int 
 17074 ;; Return value:  Size  Location     Type
 17075 ;;                  2   37[BANK1 ] unsigned int 
 17076 ;; Registers used:
 17077 ;;		wreg, status,2, status,0, prodl, prodh
 17078 ;; Tracked objects:
 17079 ;;		On entry : 0/0
 17080 ;;		On exit  : 0/0
 17081 ;;		Unchanged: 0/0
 17082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17083 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17084 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17086 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17087 ;;Total ram usage:        6 bytes
 17088 ;; Hardware stack levels used:    1
 17089 ;; Hardware stack levels required when called:   14
 17090 ;; This function calls:
 17091 ;;		Nothing
 17092 ;; This function is called by:
 17093 ;;		_ringBufferLUT
 17094 ;;		_fround
 17095 ;;		_scale
 17096 ;;		_printf
 17097 ;;		_atoi
 17098 ;; This function uses a non-reentrant model
 17099 ;;
 17100                           
 17101                           	psect	text40
 17102  016D66                     __ptext40:
 17103                           	opt stack 0
 17104  016D66                     ___wmul:
 17105                           	opt stack 12
 17106                           
 17107                           ;incstack = 0
 17108  016D66  0101               	movlb	1	; () banked
 17109  016D68  5125               	movf	___wmul@multiplier& (0+255),w,b
 17110  016D6A  0327               	mulwf	___wmul@multiplicand& (0+255),b
 17111  016D6C  CFF3 F129          	movff	prodl,___wmul@product
 17112  016D70  CFF4 F12A          	movff	prodh,___wmul@product+1
 17113  016D74  5125               	movf	___wmul@multiplier& (0+255),w,b
 17114  016D76  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 17115  016D78  50F3               	movf	prodl,w,c
 17116  016D7A  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 17117  016D7C  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 17118  016D7E  0327               	mulwf	___wmul@multiplicand& (0+255),b
 17119  016D80  50F3               	movf	prodl,w,c
 17120  016D82  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 17121                           
 17122                           ; BSR set to: 1
 17123  016D84  C129  F125         	movff	___wmul@product,?___wmul
 17124  016D88  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 17125  016D8C  0012               	return	
 17126  016D8E                     __end_of___wmul:
 17127                           	opt stack 0
 17128                           tblptru	equ	0xFF8
 17129                           tblptrh	equ	0xFF7
 17130                           tblptrl	equ	0xFF6
 17131                           tablat	equ	0xFF5
 17132                           prodh	equ	0xFF4
 17133                           prodl	equ	0xFF3
 17134                           intcon	equ	0xFF2
 17135                           indf0	equ	0xFEF
 17136                           postinc0	equ	0xFEE
 17137                           fsr0h	equ	0xFEA
 17138                           fsr0l	equ	0xFE9
 17139                           wreg	equ	0xFE8
 17140                           indf1	equ	0xFE7
 17141                           postdec1	equ	0xFE5
 17142                           plusw1	equ	0xFE3
 17143                           fsr1h	equ	0xFE2
 17144                           fsr1l	equ	0xFE1
 17145                           indf2	equ	0xFDF
 17146                           postinc2	equ	0xFDE
 17147                           postdec2	equ	0xFDD
 17148                           plusw2	equ	0xFDB
 17149                           fsr2h	equ	0xFDA
 17150                           fsr2l	equ	0xFD9
 17151                           status	equ	0xFD8
 17152                           
 17153 ;; *************** function ___ftmul *****************
 17154 ;; Defined at:
 17155 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 17156 ;; Parameters:    Size  Location     Type
 17157 ;;  f1              3   70[BANK1 ] float 
 17158 ;;  f2              3   73[BANK1 ] float 
 17159 ;; Auto vars:     Size  Location     Type
 17160 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 17161 ;;  sign            1   84[BANK1 ] unsigned char 
 17162 ;;  cntr            1   83[BANK1 ] unsigned char 
 17163 ;;  exp             1   79[BANK1 ] unsigned char 
 17164 ;; Return value:  Size  Location     Type
 17165 ;;                  3   70[BANK1 ] float 
 17166 ;; Registers used:
 17167 ;;		wreg, status,2, status,0, cstack
 17168 ;; Tracked objects:
 17169 ;;		On entry : 0/0
 17170 ;;		On exit  : 0/0
 17171 ;;		Unchanged: 0/0
 17172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17173 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17174 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17175 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17176 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17177 ;;Total ram usage:       15 bytes
 17178 ;; Hardware stack levels used:    1
 17179 ;; Hardware stack levels required when called:   15
 17180 ;; This function calls:
 17181 ;;		___ftpack
 17182 ;; This function is called by:
 17183 ;;		_ringBufferLUT
 17184 ;;		_fround
 17185 ;;		_scale
 17186 ;;		_printf
 17187 ;; This function uses a non-reentrant model
 17188 ;;
 17189                           
 17190                           	psect	text41
 17191  014E18                     __ptext41:
 17192                           	opt stack 0
 17193  014E18                     ___ftmul:
 17194                           	opt stack 11
 17195                           
 17196                           ; BSR set to: 1
 17197                           ;incstack = 0
 17198  014E18  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 17199  014E1C  0101               	movlb	1	; () banked
 17200  014E1E  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 17201  014E20  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 17202  014E22  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 17203  014E24  374C               	rlcf	??___ftmul& (0+255),f,b
 17204  014E26  E301               	bnc	u11421
 17205  014E28  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 17206  014E2A                     u11421:
 17207  014E2A  514C               	movf	??___ftmul& (0+255),w,b
 17208  014E2C  6F4F               	movwf	___ftmul@exp& (0+255),b
 17209  014E2E  514F               	movf	___ftmul@exp& (0+255),w,b
 17210  014E30  A4D8               	btfss	status,2,c
 17211  014E32  D007               	goto	l1800
 17212                           
 17213                           ; BSR set to: 1
 17214  014E34  0E00               	movlw	0
 17215  014E36  6F46               	movwf	?___ftmul& (0+255),b
 17216  014E38  0E00               	movlw	0
 17217  014E3A  6F47               	movwf	(?___ftmul+1)& (0+255),b
 17218  014E3C  0E00               	movlw	0
 17219  014E3E  6F48               	movwf	(?___ftmul+2)& (0+255),b
 17220                           
 17221                           ; BSR set to: 1
 17222  014E40  0012               	return	
 17223  014E42                     l1800:
 17224                           
 17225                           ; BSR set to: 1
 17226                           
 17227                           ; BSR set to: 1
 17228  014E42  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 17229  014E46  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 17230  014E48  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 17231  014E4A  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 17232  014E4C  374C               	rlcf	??___ftmul& (0+255),f,b
 17233  014E4E  E301               	bnc	u11441
 17234  014E50  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 17235  014E52                     u11441:
 17236  014E52  514C               	movf	??___ftmul& (0+255),w,b
 17237  014E54  6F54               	movwf	___ftmul@sign& (0+255),b
 17238  014E56  5154               	movf	___ftmul@sign& (0+255),w,b
 17239  014E58  A4D8               	btfss	status,2,c
 17240  014E5A  D007               	goto	l1802
 17241                           
 17242                           ; BSR set to: 1
 17243  014E5C  0E00               	movlw	0
 17244  014E5E  6F46               	movwf	?___ftmul& (0+255),b
 17245  014E60  0E00               	movlw	0
 17246  014E62  6F47               	movwf	(?___ftmul+1)& (0+255),b
 17247  014E64  0E00               	movlw	0
 17248  014E66  6F48               	movwf	(?___ftmul+2)& (0+255),b
 17249                           
 17250                           ; BSR set to: 1
 17251  014E68  0012               	return	
 17252  014E6A                     l1802:
 17253                           
 17254                           ; BSR set to: 1
 17255                           
 17256                           ; BSR set to: 1
 17257  014E6A  5154               	movf	___ftmul@sign& (0+255),w,b
 17258  014E6C  0F7B               	addlw	123
 17259  014E6E  274F               	addwf	___ftmul@exp& (0+255),f,b
 17260                           
 17261                           ; BSR set to: 1
 17262  014E70  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 17263  014E74  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 17264  014E76  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 17265  014E78  0E80               	movlw	128
 17266  014E7A  1754               	andwf	___ftmul@sign& (0+255),f,b
 17267                           
 17268                           ; BSR set to: 1
 17269  014E7C  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 17270                           
 17271                           ; BSR set to: 1
 17272  014E7E  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 17273                           
 17274                           ; BSR set to: 1
 17275  014E80  0EFF               	movlw	255
 17276  014E82  1749               	andwf	___ftmul@f2& (0+255),f,b
 17277  014E84  0EFF               	movlw	255
 17278  014E86  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 17279  014E88  0E00               	movlw	0
 17280  014E8A  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 17281                           
 17282                           ; BSR set to: 1
 17283  014E8C  0E00               	movlw	0
 17284  014E8E  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 17285  014E90  0E00               	movlw	0
 17286  014E92  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 17287  014E94  0E00               	movlw	0
 17288  014E96  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 17289                           
 17290                           ; BSR set to: 1
 17291  014E98  0E07               	movlw	7
 17292  014E9A  6F53               	movwf	___ftmul@cntr& (0+255),b
 17293  014E9C                     
 17294                           ; BSR set to: 1
 17295                           
 17296                           ; BSR set to: 1
 17297  014E9C  A146               	btfss	___ftmul@f1& (0+255),0,b
 17298  014E9E  D006               	goto	l1804
 17299                           
 17300                           ; BSR set to: 1
 17301  014EA0  5149               	movf	___ftmul@f2& (0+255),w,b
 17302  014EA2  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 17303  014EA4  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 17304  014EA6  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 17305  014EA8  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 17306  014EAA  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 17307  014EAC                     l1804:
 17308                           
 17309                           ; BSR set to: 1
 17310                           
 17311                           ; BSR set to: 1
 17312  014EAC  90D8               	bcf	status,0,c
 17313  014EAE  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 17314  014EB0  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 17315  014EB2  3346               	rrcf	___ftmul@f1& (0+255),f,b
 17316  014EB4  90D8               	bcf	status,0,c
 17317  014EB6  3749               	rlcf	___ftmul@f2& (0+255),f,b
 17318  014EB8  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 17319  014EBA  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 17320                           
 17321                           ; BSR set to: 1
 17322  014EBC  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 17323  014EBE  D7EE               	goto	l1803
 17324                           
 17325                           ; BSR set to: 1
 17326                           
 17327                           ; BSR set to: 1
 17328  014EC0  0E09               	movlw	9
 17329  014EC2  6F53               	movwf	___ftmul@cntr& (0+255),b
 17330  014EC4                     
 17331                           ; BSR set to: 1
 17332                           
 17333                           ; BSR set to: 1
 17334  014EC4  A146               	btfss	___ftmul@f1& (0+255),0,b
 17335  014EC6  D006               	goto	l1807
 17336                           
 17337                           ; BSR set to: 1
 17338  014EC8  5149               	movf	___ftmul@f2& (0+255),w,b
 17339  014ECA  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 17340  014ECC  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 17341  014ECE  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 17342  014ED0  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 17343  014ED2  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 17344  014ED4                     l1807:
 17345                           
 17346                           ; BSR set to: 1
 17347                           
 17348                           ; BSR set to: 1
 17349  014ED4  90D8               	bcf	status,0,c
 17350  014ED6  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 17351  014ED8  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 17352  014EDA  3346               	rrcf	___ftmul@f1& (0+255),f,b
 17353  014EDC  90D8               	bcf	status,0,c
 17354  014EDE  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 17355  014EE0  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 17356  014EE2  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 17357                           
 17358                           ; BSR set to: 1
 17359  014EE4  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 17360  014EE6  D7EE               	goto	l1806
 17361                           
 17362                           ; BSR set to: 1
 17363                           
 17364                           ; BSR set to: 1
 17365  014EE8  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 17366  014EEC  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 17367  014EF0  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 17368  014EF4  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 17369  014EF8  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 17370  014EFC  ECE3  F0AB         	call	___ftpack	;wreg free
 17371  014F00  C117  F146         	movff	?___ftpack,?___ftmul
 17372  014F04  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 17373  014F08  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 17374  014F0C  0012               	return	
 17375  014F0E                     __end_of___ftmul:
 17376                           	opt stack 0
 17377                           tblptru	equ	0xFF8
 17378                           tblptrh	equ	0xFF7
 17379                           tblptrl	equ	0xFF6
 17380                           tablat	equ	0xFF5
 17381                           prodh	equ	0xFF4
 17382                           prodl	equ	0xFF3
 17383                           intcon	equ	0xFF2
 17384                           indf0	equ	0xFEF
 17385                           postinc0	equ	0xFEE
 17386                           fsr0h	equ	0xFEA
 17387                           fsr0l	equ	0xFE9
 17388                           wreg	equ	0xFE8
 17389                           indf1	equ	0xFE7
 17390                           postdec1	equ	0xFE5
 17391                           plusw1	equ	0xFE3
 17392                           fsr1h	equ	0xFE2
 17393                           fsr1l	equ	0xFE1
 17394                           indf2	equ	0xFDF
 17395                           postinc2	equ	0xFDE
 17396                           postdec2	equ	0xFDD
 17397                           plusw2	equ	0xFDB
 17398                           fsr2h	equ	0xFDA
 17399                           fsr2l	equ	0xFD9
 17400                           status	equ	0xFD8
 17401                           
 17402 ;; *************** function ___awmod *****************
 17403 ;; Defined at:
 17404 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 17405 ;; Parameters:    Size  Location     Type
 17406 ;;  dividend        2   23[BANK1 ] int 
 17407 ;;  divisor         2   25[BANK1 ] int 
 17408 ;; Auto vars:     Size  Location     Type
 17409 ;;  sign            1   28[BANK1 ] unsigned char 
 17410 ;;  counter         1   27[BANK1 ] unsigned char 
 17411 ;; Return value:  Size  Location     Type
 17412 ;;                  2   23[BANK1 ] int 
 17413 ;; Registers used:
 17414 ;;		wreg, status,2, status,0
 17415 ;; Tracked objects:
 17416 ;;		On entry : 0/0
 17417 ;;		On exit  : 0/0
 17418 ;;		Unchanged: 0/0
 17419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17420 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17421 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17423 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17424 ;;Total ram usage:        6 bytes
 17425 ;; Hardware stack levels used:    1
 17426 ;; Hardware stack levels required when called:   14
 17427 ;; This function calls:
 17428 ;;		Nothing
 17429 ;; This function is called by:
 17430 ;;		_fround
 17431 ;;		_scale
 17432 ;; This function uses a non-reentrant model
 17433 ;;
 17434                           
 17435                           	psect	text42
 17436  01626A                     __ptext42:
 17437                           	opt stack 0
 17438  01626A                     ___awmod:
 17439                           	opt stack 12
 17440                           
 17441                           ;incstack = 0
 17442  01626A  0E00               	movlw	0
 17443  01626C  0101               	movlb	1	; () banked
 17444  01626E  6F1C               	movwf	___awmod@sign& (0+255),b
 17445                           
 17446                           ; BSR set to: 1
 17447  016270  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 17448  016272  D006               	goto	l1641
 17449                           
 17450                           ; BSR set to: 1
 17451  016274  6D17               	negf	___awmod@dividend& (0+255),b
 17452  016276  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17453  016278  B0D8               	btfsc	status,0,c
 17454  01627A  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17455                           
 17456                           ; BSR set to: 1
 17457  01627C  0E01               	movlw	1
 17458  01627E  6F1C               	movwf	___awmod@sign& (0+255),b
 17459  016280                     l1641:
 17460                           
 17461                           ; BSR set to: 1
 17462                           
 17463                           ; BSR set to: 1
 17464  016280  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17465  016282  D004               	goto	l1642
 17466                           
 17467                           ; BSR set to: 1
 17468  016284  6D19               	negf	___awmod@divisor& (0+255),b
 17469  016286  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 17470  016288  B0D8               	btfsc	status,0,c
 17471  01628A  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 17472  01628C                     l1642:
 17473                           
 17474                           ; BSR set to: 1
 17475                           
 17476                           ; BSR set to: 1
 17477  01628C  5119               	movf	___awmod@divisor& (0+255),w,b
 17478  01628E  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 17479  016290  B4D8               	btfsc	status,2,c
 17480  016292  D018               	goto	l1649
 17481                           
 17482                           ; BSR set to: 1
 17483  016294  0E01               	movlw	1
 17484  016296  6F1B               	movwf	___awmod@counter& (0+255),b
 17485  016298  D004               	goto	l1644
 17486  01629A                     
 17487                           ; BSR set to: 1
 17488                           
 17489                           ; BSR set to: 1
 17490  01629A  90D8               	bcf	status,0,c
 17491  01629C  3719               	rlcf	___awmod@divisor& (0+255),f,b
 17492  01629E  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 17493  0162A0  2B1B               	incf	___awmod@counter& (0+255),f,b
 17494  0162A2                     l1644:
 17495                           
 17496                           ; BSR set to: 1
 17497                           
 17498                           ; BSR set to: 1
 17499  0162A2  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 17500  0162A4  D7FA               	goto	l1645
 17501  0162A6                     u11590:
 17502                           
 17503                           ; BSR set to: 1
 17504                           
 17505                           ; BSR set to: 1
 17506                           
 17507                           ; BSR set to: 1
 17508  0162A6  5119               	movf	___awmod@divisor& (0+255),w,b
 17509  0162A8  5D17               	subwf	___awmod@dividend& (0+255),w,b
 17510  0162AA  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17511  0162AC  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 17512  0162AE  A0D8               	btfss	status,0,c
 17513  0162B0  D004               	goto	l1648
 17514                           
 17515                           ; BSR set to: 1
 17516  0162B2  5119               	movf	___awmod@divisor& (0+255),w,b
 17517  0162B4  5F17               	subwf	___awmod@dividend& (0+255),f,b
 17518  0162B6  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 17519  0162B8  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 17520  0162BA                     l1648:
 17521                           
 17522                           ; BSR set to: 1
 17523                           
 17524                           ; BSR set to: 1
 17525  0162BA  90D8               	bcf	status,0,c
 17526  0162BC  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 17527  0162BE  3319               	rrcf	___awmod@divisor& (0+255),f,b
 17528                           
 17529                           ; BSR set to: 1
 17530  0162C0  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 17531  0162C2  D7F1               	goto	u11590
 17532  0162C4                     l1649:
 17533                           
 17534                           ; BSR set to: 1
 17535                           
 17536                           ; BSR set to: 1
 17537                           
 17538                           ; BSR set to: 1
 17539  0162C4  511C               	movf	___awmod@sign& (0+255),w,b
 17540  0162C6  B4D8               	btfsc	status,2,c
 17541  0162C8  D004               	goto	l1650
 17542                           
 17543                           ; BSR set to: 1
 17544  0162CA  6D17               	negf	___awmod@dividend& (0+255),b
 17545  0162CC  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 17546  0162CE  B0D8               	btfsc	status,0,c
 17547  0162D0  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 17548  0162D2                     l1650:
 17549                           
 17550                           ; BSR set to: 1
 17551                           
 17552                           ; BSR set to: 1
 17553  0162D2  C117  F117         	movff	___awmod@dividend,?___awmod
 17554  0162D6  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 17555  0162DA  0012               	return	
 17556  0162DC                     __end_of___awmod:
 17557                           	opt stack 0
 17558                           tblptru	equ	0xFF8
 17559                           tblptrh	equ	0xFF7
 17560                           tblptrl	equ	0xFF6
 17561                           tablat	equ	0xFF5
 17562                           prodh	equ	0xFF4
 17563                           prodl	equ	0xFF3
 17564                           intcon	equ	0xFF2
 17565                           indf0	equ	0xFEF
 17566                           postinc0	equ	0xFEE
 17567                           fsr0h	equ	0xFEA
 17568                           fsr0l	equ	0xFE9
 17569                           wreg	equ	0xFE8
 17570                           indf1	equ	0xFE7
 17571                           postdec1	equ	0xFE5
 17572                           plusw1	equ	0xFE3
 17573                           fsr1h	equ	0xFE2
 17574                           fsr1l	equ	0xFE1
 17575                           indf2	equ	0xFDF
 17576                           postinc2	equ	0xFDE
 17577                           postdec2	equ	0xFDD
 17578                           plusw2	equ	0xFDB
 17579                           fsr2h	equ	0xFDA
 17580                           fsr2l	equ	0xFD9
 17581                           status	equ	0xFD8
 17582                           
 17583 ;; *************** function ___awdiv *****************
 17584 ;; Defined at:
 17585 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;  dividend        2   29[BANK1 ] int 
 17588 ;;  divisor         2   31[BANK1 ] int 
 17589 ;; Auto vars:     Size  Location     Type
 17590 ;;  quotient        2   35[BANK1 ] int 
 17591 ;;  sign            1   34[BANK1 ] unsigned char 
 17592 ;;  counter         1   33[BANK1 ] unsigned char 
 17593 ;; Return value:  Size  Location     Type
 17594 ;;                  2   29[BANK1 ] int 
 17595 ;; Registers used:
 17596 ;;		wreg, status,2, status,0
 17597 ;; Tracked objects:
 17598 ;;		On entry : 0/0
 17599 ;;		On exit  : 0/0
 17600 ;;		Unchanged: 0/0
 17601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17602 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17603 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17605 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17606 ;;Total ram usage:        8 bytes
 17607 ;; Hardware stack levels used:    1
 17608 ;; Hardware stack levels required when called:   14
 17609 ;; This function calls:
 17610 ;;		Nothing
 17611 ;; This function is called by:
 17612 ;;		_fround
 17613 ;;		_scale
 17614 ;;		_printf
 17615 ;; This function uses a non-reentrant model
 17616 ;;
 17617                           
 17618                           	psect	text43
 17619  015E74                     __ptext43:
 17620                           	opt stack 0
 17621  015E74                     ___awdiv:
 17622                           	opt stack 12
 17623                           
 17624                           ; BSR set to: 1
 17625                           ;incstack = 0
 17626  015E74  0E00               	movlw	0
 17627  015E76  0101               	movlb	1	; () banked
 17628  015E78  6F22               	movwf	___awdiv@sign& (0+255),b
 17629                           
 17630                           ; BSR set to: 1
 17631  015E7A  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17632  015E7C  D006               	goto	l1628
 17633                           
 17634                           ; BSR set to: 1
 17635  015E7E  6D1F               	negf	___awdiv@divisor& (0+255),b
 17636  015E80  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 17637  015E82  B0D8               	btfsc	status,0,c
 17638  015E84  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 17639                           
 17640                           ; BSR set to: 1
 17641  015E86  0E01               	movlw	1
 17642  015E88  6F22               	movwf	___awdiv@sign& (0+255),b
 17643  015E8A                     l1628:
 17644                           
 17645                           ; BSR set to: 1
 17646                           
 17647                           ; BSR set to: 1
 17648  015E8A  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 17649  015E8C  D006               	goto	l1629
 17650                           
 17651                           ; BSR set to: 1
 17652  015E8E  6D1D               	negf	___awdiv@dividend& (0+255),b
 17653  015E90  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 17654  015E92  B0D8               	btfsc	status,0,c
 17655  015E94  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 17656                           
 17657                           ; BSR set to: 1
 17658  015E96  0E01               	movlw	1
 17659  015E98  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 17660  015E9A                     l1629:
 17661                           
 17662                           ; BSR set to: 1
 17663                           
 17664                           ; BSR set to: 1
 17665  015E9A  0E00               	movlw	0
 17666  015E9C  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 17667  015E9E  0E00               	movlw	0
 17668  015EA0  6F23               	movwf	___awdiv@quotient& (0+255),b
 17669                           
 17670                           ; BSR set to: 1
 17671  015EA2  511F               	movf	___awdiv@divisor& (0+255),w,b
 17672  015EA4  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 17673  015EA6  B4D8               	btfsc	status,2,c
 17674  015EA8  D01C               	goto	l1636
 17675                           
 17676                           ; BSR set to: 1
 17677  015EAA  0E01               	movlw	1
 17678  015EAC  6F21               	movwf	___awdiv@counter& (0+255),b
 17679  015EAE  D004               	goto	l1631
 17680  015EB0                     
 17681                           ; BSR set to: 1
 17682                           
 17683                           ; BSR set to: 1
 17684  015EB0  90D8               	bcf	status,0,c
 17685  015EB2  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 17686  015EB4  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 17687  015EB6  2B21               	incf	___awdiv@counter& (0+255),f,b
 17688  015EB8                     l1631:
 17689                           
 17690                           ; BSR set to: 1
 17691                           
 17692                           ; BSR set to: 1
 17693  015EB8  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 17694  015EBA  D7FA               	goto	l1632
 17695  015EBC                     u11530:
 17696                           
 17697                           ; BSR set to: 1
 17698                           
 17699                           ; BSR set to: 1
 17700                           
 17701                           ; BSR set to: 1
 17702  015EBC  90D8               	bcf	status,0,c
 17703  015EBE  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 17704  015EC0  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 17705                           
 17706                           ; BSR set to: 1
 17707  015EC2  511F               	movf	___awdiv@divisor& (0+255),w,b
 17708  015EC4  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 17709  015EC6  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17710  015EC8  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 17711  015ECA  A0D8               	btfss	status,0,c
 17712  015ECC  D005               	goto	l1635
 17713                           
 17714                           ; BSR set to: 1
 17715  015ECE  511F               	movf	___awdiv@divisor& (0+255),w,b
 17716  015ED0  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 17717  015ED2  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 17718  015ED4  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 17719                           
 17720                           ; BSR set to: 1
 17721  015ED6  8123               	bsf	___awdiv@quotient& (0+255),0,b
 17722  015ED8                     l1635:
 17723                           
 17724                           ; BSR set to: 1
 17725                           
 17726                           ; BSR set to: 1
 17727  015ED8  90D8               	bcf	status,0,c
 17728  015EDA  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 17729  015EDC  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 17730                           
 17731                           ; BSR set to: 1
 17732  015EDE  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 17733  015EE0  D7ED               	goto	u11530
 17734  015EE2                     l1636:
 17735                           
 17736                           ; BSR set to: 1
 17737                           
 17738                           ; BSR set to: 1
 17739                           
 17740                           ; BSR set to: 1
 17741  015EE2  5122               	movf	___awdiv@sign& (0+255),w,b
 17742  015EE4  B4D8               	btfsc	status,2,c
 17743  015EE6  D004               	goto	l1637
 17744                           
 17745                           ; BSR set to: 1
 17746  015EE8  6D23               	negf	___awdiv@quotient& (0+255),b
 17747  015EEA  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 17748  015EEC  B0D8               	btfsc	status,0,c
 17749  015EEE  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 17750  015EF0                     l1637:
 17751                           
 17752                           ; BSR set to: 1
 17753                           
 17754                           ; BSR set to: 1
 17755  015EF0  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 17756  015EF4  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 17757  015EF8  0012               	return	
 17758  015EFA                     __end_of___awdiv:
 17759                           	opt stack 0
 17760                           tblptru	equ	0xFF8
 17761                           tblptrh	equ	0xFF7
 17762                           tblptrl	equ	0xFF6
 17763                           tablat	equ	0xFF5
 17764                           prodh	equ	0xFF4
 17765                           prodl	equ	0xFF3
 17766                           intcon	equ	0xFF2
 17767                           indf0	equ	0xFEF
 17768                           postinc0	equ	0xFEE
 17769                           fsr0h	equ	0xFEA
 17770                           fsr0l	equ	0xFE9
 17771                           wreg	equ	0xFE8
 17772                           indf1	equ	0xFE7
 17773                           postdec1	equ	0xFE5
 17774                           plusw1	equ	0xFE3
 17775                           fsr1h	equ	0xFE2
 17776                           fsr1l	equ	0xFE1
 17777                           indf2	equ	0xFDF
 17778                           postinc2	equ	0xFDE
 17779                           postdec2	equ	0xFDD
 17780                           plusw2	equ	0xFDB
 17781                           fsr2h	equ	0xFDA
 17782                           fsr2l	equ	0xFD9
 17783                           status	equ	0xFD8
 17784                           
 17785 ;; *************** function __tdiv_to_l_ *****************
 17786 ;; Defined at:
 17787 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;  f1              3   23[BANK1 ] float 
 17790 ;;  f2              3   26[BANK1 ] float 
 17791 ;; Auto vars:     Size  Location     Type
 17792 ;;  quot            4   32[BANK1 ] unsigned long 
 17793 ;;  exp1            1   37[BANK1 ] unsigned char 
 17794 ;;  cntr            1   36[BANK1 ] unsigned char 
 17795 ;; Return value:  Size  Location     Type
 17796 ;;                  4   23[BANK1 ] unsigned long 
 17797 ;; Registers used:
 17798 ;;		wreg, status,2, status,0
 17799 ;; Tracked objects:
 17800 ;;		On entry : 0/0
 17801 ;;		On exit  : 0/0
 17802 ;;		Unchanged: 0/0
 17803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17804 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17805 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17806 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17807 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17808 ;;Total ram usage:       15 bytes
 17809 ;; Hardware stack levels used:    1
 17810 ;; Hardware stack levels required when called:   14
 17811 ;; This function calls:
 17812 ;;		Nothing
 17813 ;; This function is called by:
 17814 ;;		_printf
 17815 ;; This function uses a non-reentrant model
 17816 ;;
 17817                           
 17818                           	psect	text44
 17819  01474C                     __ptext44:
 17820                           	opt stack 0
 17821  01474C                     __tdiv_to_l_:
 17822                           	opt stack 13
 17823                           
 17824                           ; BSR set to: 1
 17825                           ;incstack = 0
 17826  01474C  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 17827  014750  0101               	movlb	1	; () banked
 17828  014752  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17829  014754  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17830  014756  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17831  014758  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17832  01475A  E301               	bnc	u11821
 17833  01475C  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17834  01475E                     u11821:
 17835  01475E  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17836  014760  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 17837  014762  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17838  014764  A4D8               	btfss	status,2,c
 17839  014766  D009               	goto	l1776
 17840                           
 17841                           ; BSR set to: 1
 17842  014768  0E00               	movlw	0
 17843  01476A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17844  01476C  0E00               	movlw	0
 17845  01476E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17846  014770  0E00               	movlw	0
 17847  014772  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17848  014774  0E00               	movlw	0
 17849  014776  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17850                           
 17851                           ; BSR set to: 1
 17852  014778  0012               	return	
 17853  01477A                     l1776:
 17854                           
 17855                           ; BSR set to: 1
 17856                           
 17857                           ; BSR set to: 1
 17858  01477A  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 17859  01477E  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 17860  014780  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 17861  014782  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17862  014784  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 17863  014786  E301               	bnc	u11841
 17864  014788  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 17865  01478A                     u11841:
 17866  01478A  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 17867  01478C  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17868  01478E  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17869  014790  A4D8               	btfss	status,2,c
 17870  014792  D009               	goto	l1778
 17871                           
 17872                           ; BSR set to: 1
 17873  014794  0E00               	movlw	0
 17874  014796  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17875  014798  0E00               	movlw	0
 17876  01479A  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17877  01479C  0E00               	movlw	0
 17878  01479E  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17879  0147A0  0E00               	movlw	0
 17880  0147A2  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17881                           
 17882                           ; BSR set to: 1
 17883  0147A4  0012               	return	
 17884  0147A6                     l1778:
 17885                           
 17886                           ; BSR set to: 1
 17887                           
 17888                           ; BSR set to: 1
 17889  0147A6  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 17890                           
 17891                           ; BSR set to: 1
 17892  0147A8  0EFF               	movlw	255
 17893  0147AA  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 17894  0147AC  0EFF               	movlw	255
 17895  0147AE  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17896  0147B0  0E00               	movlw	0
 17897  0147B2  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17898  0147B4  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 17899                           
 17900                           ; BSR set to: 1
 17901  0147B6  0EFF               	movlw	255
 17902  0147B8  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 17903  0147BA  0EFF               	movlw	255
 17904  0147BC  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 17905  0147BE  0E00               	movlw	0
 17906  0147C0  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 17907                           
 17908                           ; BSR set to: 1
 17909  0147C2  0E00               	movlw	0
 17910  0147C4  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 17911  0147C6  0E00               	movlw	0
 17912  0147C8  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 17913  0147CA  0E00               	movlw	0
 17914  0147CC  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 17915  0147CE  0E00               	movlw	0
 17916  0147D0  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 17917                           
 17918                           ; BSR set to: 1
 17919  0147D2  0E7F               	movlw	127
 17920  0147D4  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17921                           
 17922                           ; BSR set to: 1
 17923  0147D6  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 17924  0147D8  0F98               	addlw	152
 17925  0147DA  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 17926                           
 17927                           ; BSR set to: 1
 17928  0147DC  0E18               	movlw	24
 17929  0147DE  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 17930  0147E0                     l1779:
 17931                           
 17932                           ; BSR set to: 1
 17933  0147E0  90D8               	bcf	status,0,c
 17934  0147E2  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 17935  0147E4  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 17936  0147E6  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 17937  0147E8  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 17938                           
 17939                           ; BSR set to: 1
 17940  0147EA  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17941  0147EC  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 17942  0147EE  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17943  0147F0  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 17944  0147F2  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17945  0147F4  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 17946  0147F6  A0D8               	btfss	status,0,c
 17947  0147F8  D007               	goto	l1780
 17948                           
 17949                           ; BSR set to: 1
 17950  0147FA  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 17951  0147FC  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 17952  0147FE  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 17953  014800  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17954  014802  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 17955  014804  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17956                           
 17957                           ; BSR set to: 1
 17958  014806  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 17959  014808                     l1780:
 17960                           
 17961                           ; BSR set to: 1
 17962  014808  90D8               	bcf	status,0,c
 17963  01480A  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 17964  01480C  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 17965  01480E  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 17966                           
 17967                           ; BSR set to: 1
 17968  014810  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 17969  014812  D7E6               	goto	l1779
 17970                           
 17971                           ; BSR set to: 1
 17972                           
 17973                           ; BSR set to: 1
 17974  014814  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 17975  014816  D016               	goto	l1782
 17976                           
 17977                           ; BSR set to: 1
 17978  014818  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 17979  01481A  0A80               	xorlw	128
 17980  01481C  0F97               	addlw	151
 17981  01481E  B0D8               	btfsc	status,0,c
 17982  014820  D009               	goto	l1783
 17983                           
 17984                           ; BSR set to: 1
 17985  014822  0E00               	movlw	0
 17986  014824  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 17987  014826  0E00               	movlw	0
 17988  014828  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 17989  01482A  0E00               	movlw	0
 17990  01482C  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 17991  01482E  0E00               	movlw	0
 17992  014830  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 17993                           
 17994                           ; BSR set to: 1
 17995  014832  0012               	return	
 17996  014834                     l1783:
 17997                           
 17998                           ; BSR set to: 1
 17999                           
 18000                           ; BSR set to: 1
 18001                           
 18002                           ; BSR set to: 1
 18003  014834  90D8               	bcf	status,0,c
 18004  014836  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18005  014838  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18006  01483A  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18007  01483C  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 18008                           
 18009                           ; BSR set to: 1
 18010  01483E  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 18011  014840  D7F9               	goto	l1783
 18012                           
 18013                           ; BSR set to: 1
 18014  014842  D015               	goto	u11900
 18015  014844                     l1782:
 18016                           
 18017                           ; BSR set to: 1
 18018                           
 18019                           ; BSR set to: 1
 18020  014844  0E17               	movlw	23
 18021  014846  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 18022  014848  D00F               	goto	l1788
 18023                           
 18024                           ; BSR set to: 1
 18025  01484A  0E00               	movlw	0
 18026  01484C  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 18027  01484E  0E00               	movlw	0
 18028  014850  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 18029  014852  0E00               	movlw	0
 18030  014854  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 18031  014856  0E00               	movlw	0
 18032  014858  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 18033                           
 18034                           ; BSR set to: 1
 18035  01485A  0012               	return	
 18036  01485C                     
 18037                           ; BSR set to: 1
 18038                           
 18039                           ; BSR set to: 1
 18040  01485C  90D8               	bcf	status,0,c
 18041  01485E  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 18042  014860  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 18043  014862  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 18044  014864  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 18045  014866  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 18046  014868                     l1788:
 18047                           
 18048                           ; BSR set to: 1
 18049                           
 18050                           ; BSR set to: 1
 18051  014868  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 18052  01486A  A4D8               	btfss	status,2,c
 18053  01486C  D7F7               	goto	l1789
 18054  01486E                     u11900:
 18055                           
 18056                           ; BSR set to: 1
 18057                           
 18058                           ; BSR set to: 1
 18059  01486E  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 18060  014872  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 18061  014876  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 18062  01487A  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 18063                           
 18064                           ; BSR set to: 1
 18065  01487E  0012               	return		;funcret
 18066  014880                     __end_of__tdiv_to_l_:
 18067                           	opt stack 0
 18068                           tblptru	equ	0xFF8
 18069                           tblptrh	equ	0xFF7
 18070                           tblptrl	equ	0xFF6
 18071                           tablat	equ	0xFF5
 18072                           prodh	equ	0xFF4
 18073                           prodl	equ	0xFF3
 18074                           intcon	equ	0xFF2
 18075                           indf0	equ	0xFEF
 18076                           postinc0	equ	0xFEE
 18077                           fsr0h	equ	0xFEA
 18078                           fsr0l	equ	0xFE9
 18079                           wreg	equ	0xFE8
 18080                           indf1	equ	0xFE7
 18081                           postdec1	equ	0xFE5
 18082                           plusw1	equ	0xFE3
 18083                           fsr1h	equ	0xFE2
 18084                           fsr1l	equ	0xFE1
 18085                           indf2	equ	0xFDF
 18086                           postinc2	equ	0xFDE
 18087                           postdec2	equ	0xFDD
 18088                           plusw2	equ	0xFDB
 18089                           fsr2h	equ	0xFDA
 18090                           fsr2l	equ	0xFD9
 18091                           status	equ	0xFD8
 18092                           
 18093 ;; *************** function __div_to_l_ *****************
 18094 ;; Defined at:
 18095 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 18096 ;; Parameters:    Size  Location     Type
 18097 ;;  f1              3   23[BANK1 ] unsigned long 
 18098 ;;  f2              3   26[BANK1 ] unsigned long 
 18099 ;; Auto vars:     Size  Location     Type
 18100 ;;  quot            4   29[BANK1 ] unsigned long 
 18101 ;;  exp1            1   34[BANK1 ] unsigned char 
 18102 ;;  cntr            1   33[BANK1 ] unsigned char 
 18103 ;; Return value:  Size  Location     Type
 18104 ;;                  4   23[BANK1 ] unsigned long 
 18105 ;; Registers used:
 18106 ;;		wreg, status,2, status,0
 18107 ;; Tracked objects:
 18108 ;;		On entry : 0/0
 18109 ;;		On exit  : 0/0
 18110 ;;		Unchanged: 0/0
 18111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18112 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18113 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18115 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18116 ;;Total ram usage:       12 bytes
 18117 ;; Hardware stack levels used:    1
 18118 ;; Hardware stack levels required when called:   14
 18119 ;; This function calls:
 18120 ;;		Nothing
 18121 ;; This function is called by:
 18122 ;;		_printf
 18123 ;; This function uses a non-reentrant model
 18124 ;;
 18125                           
 18126                           	psect	text45
 18127  0149B2                     __ptext45:
 18128                           	opt stack 0
 18129  0149B2                     __div_to_l_:
 18130                           	opt stack 13
 18131                           
 18132                           ; BSR set to: 1
 18133                           ;incstack = 0
 18134  0149B2  0101               	movlb	1	; () banked
 18135  0149B4  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 18136  0149B6  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 18137  0149B8  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 18138  0149BA  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 18139  0149BC  A4D8               	btfss	status,2,c
 18140  0149BE  D009               	goto	l1672
 18141                           
 18142                           ; BSR set to: 1
 18143  0149C0  0E00               	movlw	0
 18144  0149C2  6F17               	movwf	?__div_to_l_& (0+255),b
 18145  0149C4  0E00               	movlw	0
 18146  0149C6  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18147  0149C8  0E00               	movlw	0
 18148  0149CA  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18149  0149CC  0E00               	movlw	0
 18150  0149CE  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18151                           
 18152                           ; BSR set to: 1
 18153  0149D0  0012               	return	
 18154  0149D2                     l1672:
 18155                           
 18156                           ; BSR set to: 1
 18157                           
 18158                           ; BSR set to: 1
 18159  0149D2  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 18160  0149D4  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 18161  0149D6  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 18162  0149D8  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 18163  0149DA  A4D8               	btfss	status,2,c
 18164  0149DC  D009               	goto	l1674
 18165                           
 18166                           ; BSR set to: 1
 18167  0149DE  0E00               	movlw	0
 18168  0149E0  6F17               	movwf	?__div_to_l_& (0+255),b
 18169  0149E2  0E00               	movlw	0
 18170  0149E4  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18171  0149E6  0E00               	movlw	0
 18172  0149E8  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18173  0149EA  0E00               	movlw	0
 18174  0149EC  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18175                           
 18176                           ; BSR set to: 1
 18177  0149EE  0012               	return	
 18178  0149F0                     l1674:
 18179                           
 18180                           ; BSR set to: 1
 18181                           
 18182                           ; BSR set to: 1
 18183  0149F0  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 18184                           
 18185                           ; BSR set to: 1
 18186  0149F2  0EFF               	movlw	255
 18187  0149F4  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 18188  0149F6  0EFF               	movlw	255
 18189  0149F8  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 18190  0149FA  0EFF               	movlw	255
 18191  0149FC  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 18192  0149FE  0E00               	movlw	0
 18193  014A00  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 18194                           
 18195                           ; BSR set to: 1
 18196  014A02  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 18197  014A04  0EFF               	movlw	255
 18198  014A06  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 18199  014A08  0EFF               	movlw	255
 18200  014A0A  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 18201  014A0C  0EFF               	movlw	255
 18202  014A0E  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 18203  014A10  0E00               	movlw	0
 18204  014A12  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 18205                           
 18206                           ; BSR set to: 1
 18207  014A14  0E00               	movlw	0
 18208  014A16  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 18209  014A18  0E00               	movlw	0
 18210  014A1A  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 18211  014A1C  0E00               	movlw	0
 18212  014A1E  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 18213  014A20  0E00               	movlw	0
 18214  014A22  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 18215                           
 18216                           ; BSR set to: 1
 18217  014A24  0E7F               	movlw	127
 18218  014A26  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 18219                           
 18220                           ; BSR set to: 1
 18221  014A28  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 18222  014A2A  0FA0               	addlw	160
 18223  014A2C  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 18224                           
 18225                           ; BSR set to: 1
 18226  014A2E  0E20               	movlw	32
 18227  014A30  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 18228  014A32                     
 18229                           ; BSR set to: 1
 18230                           
 18231                           ; BSR set to: 1
 18232  014A32  90D8               	bcf	status,0,c
 18233  014A34  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 18234  014A36  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18235  014A38  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18236  014A3A  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18237                           
 18238                           ; BSR set to: 1
 18239  014A3C  511A               	movf	__div_to_l_@f2& (0+255),w,b
 18240  014A3E  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 18241  014A40  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18242  014A42  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 18243  014A44  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18244  014A46  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 18245  014A48  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18246  014A4A  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 18247  014A4C  A0D8               	btfss	status,0,c
 18248  014A4E  D009               	goto	l1676
 18249                           
 18250                           ; BSR set to: 1
 18251  014A50  511A               	movf	__div_to_l_@f2& (0+255),w,b
 18252  014A52  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 18253  014A54  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 18254  014A56  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 18255  014A58  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 18256  014A5A  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 18257  014A5C  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 18258  014A5E  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 18259                           
 18260                           ; BSR set to: 1
 18261  014A60  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 18262  014A62                     l1676:
 18263                           
 18264                           ; BSR set to: 1
 18265                           
 18266                           ; BSR set to: 1
 18267  014A62  90D8               	bcf	status,0,c
 18268  014A64  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 18269  014A66  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 18270  014A68  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 18271  014A6A  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 18272                           
 18273                           ; BSR set to: 1
 18274  014A6C  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 18275  014A6E  D7E1               	goto	l1675
 18276                           
 18277                           ; BSR set to: 1
 18278                           
 18279                           ; BSR set to: 1
 18280  014A70  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 18281  014A72  D016               	goto	l1678
 18282                           
 18283                           ; BSR set to: 1
 18284  014A74  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 18285  014A76  0A80               	xorlw	128
 18286  014A78  0F9F               	addlw	159
 18287  014A7A  B0D8               	btfsc	status,0,c
 18288  014A7C  D009               	goto	l1679
 18289                           
 18290                           ; BSR set to: 1
 18291  014A7E  0E00               	movlw	0
 18292  014A80  6F17               	movwf	?__div_to_l_& (0+255),b
 18293  014A82  0E00               	movlw	0
 18294  014A84  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18295  014A86  0E00               	movlw	0
 18296  014A88  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18297  014A8A  0E00               	movlw	0
 18298  014A8C  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18299                           
 18300                           ; BSR set to: 1
 18301  014A8E  0012               	return	
 18302  014A90                     l1679:
 18303                           
 18304                           ; BSR set to: 1
 18305                           
 18306                           ; BSR set to: 1
 18307                           
 18308                           ; BSR set to: 1
 18309  014A90  90D8               	bcf	status,0,c
 18310  014A92  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 18311  014A94  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 18312  014A96  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 18313  014A98  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 18314                           
 18315                           ; BSR set to: 1
 18316  014A9A  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 18317  014A9C  D7F9               	goto	l1679
 18318                           
 18319                           ; BSR set to: 1
 18320  014A9E  D015               	goto	u11970
 18321  014AA0                     l1678:
 18322                           
 18323                           ; BSR set to: 1
 18324                           
 18325                           ; BSR set to: 1
 18326  014AA0  0E1F               	movlw	31
 18327  014AA2  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 18328  014AA4  D00F               	goto	l1684
 18329                           
 18330                           ; BSR set to: 1
 18331  014AA6  0E00               	movlw	0
 18332  014AA8  6F17               	movwf	?__div_to_l_& (0+255),b
 18333  014AAA  0E00               	movlw	0
 18334  014AAC  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 18335  014AAE  0E00               	movlw	0
 18336  014AB0  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 18337  014AB2  0E00               	movlw	0
 18338  014AB4  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 18339                           
 18340                           ; BSR set to: 1
 18341  014AB6  0012               	return	
 18342  014AB8                     
 18343                           ; BSR set to: 1
 18344                           
 18345                           ; BSR set to: 1
 18346  014AB8  90D8               	bcf	status,0,c
 18347  014ABA  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 18348  014ABC  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 18349  014ABE  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 18350  014AC0  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 18351  014AC2  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 18352  014AC4                     l1684:
 18353                           
 18354                           ; BSR set to: 1
 18355                           
 18356                           ; BSR set to: 1
 18357  014AC4  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 18358  014AC6  A4D8               	btfss	status,2,c
 18359  014AC8  D7F7               	goto	l1685
 18360  014ACA                     u11970:
 18361                           
 18362                           ; BSR set to: 1
 18363                           
 18364                           ; BSR set to: 1
 18365  014ACA  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 18366  014ACE  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 18367  014AD2  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 18368  014AD6  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 18369                           
 18370                           ; BSR set to: 1
 18371  014ADA  0012               	return		;funcret
 18372  014ADC                     __end_of__div_to_l_:
 18373                           	opt stack 0
 18374                           tblptru	equ	0xFF8
 18375                           tblptrh	equ	0xFF7
 18376                           tblptrl	equ	0xFF6
 18377                           tablat	equ	0xFF5
 18378                           prodh	equ	0xFF4
 18379                           prodl	equ	0xFF3
 18380                           intcon	equ	0xFF2
 18381                           indf0	equ	0xFEF
 18382                           postinc0	equ	0xFEE
 18383                           fsr0h	equ	0xFEA
 18384                           fsr0l	equ	0xFE9
 18385                           wreg	equ	0xFE8
 18386                           indf1	equ	0xFE7
 18387                           postdec1	equ	0xFE5
 18388                           plusw1	equ	0xFE3
 18389                           fsr1h	equ	0xFE2
 18390                           fsr1l	equ	0xFE1
 18391                           indf2	equ	0xFDF
 18392                           postinc2	equ	0xFDE
 18393                           postdec2	equ	0xFDD
 18394                           plusw2	equ	0xFDB
 18395                           fsr2h	equ	0xFDA
 18396                           fsr2l	equ	0xFD9
 18397                           status	equ	0xFD8
 18398                           
 18399 ;; *************** function ___lltoft *****************
 18400 ;; Defined at:
 18401 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 18402 ;; Parameters:    Size  Location     Type
 18403 ;;  c               4   31[BANK1 ] unsigned long 
 18404 ;; Auto vars:     Size  Location     Type
 18405 ;;  exp             1   39[BANK1 ] unsigned char 
 18406 ;; Return value:  Size  Location     Type
 18407 ;;                  3   31[BANK1 ] float 
 18408 ;; Registers used:
 18409 ;;		wreg, status,2, status,0, cstack
 18410 ;; Tracked objects:
 18411 ;;		On entry : 0/0
 18412 ;;		On exit  : 0/0
 18413 ;;		Unchanged: 0/0
 18414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18415 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18416 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18417 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18418 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18419 ;;Total ram usage:        9 bytes
 18420 ;; Hardware stack levels used:    1
 18421 ;; Hardware stack levels required when called:   15
 18422 ;; This function calls:
 18423 ;;		___ftpack
 18424 ;; This function is called by:
 18425 ;;		_printf
 18426 ;; This function uses a non-reentrant model
 18427 ;;
 18428                           
 18429                           	psect	text46
 18430  01660E                     __ptext46:
 18431                           	opt stack 0
 18432  01660E                     ___lltoft:
 18433                           	opt stack 12
 18434                           
 18435                           ; BSR set to: 1
 18436                           ;incstack = 0
 18437  01660E  0E8E               	movlw	142
 18438  016610  0101               	movlb	1	; () banked
 18439  016612  6F27               	movwf	___lltoft@exp& (0+255),b
 18440  016614  D006               	goto	l1897
 18441  016616                     
 18442                           ; BSR set to: 1
 18443                           
 18444                           ; BSR set to: 1
 18445  016616  90D8               	bcf	status,0,c
 18446  016618  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 18447  01661A  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 18448  01661C  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 18449  01661E  331F               	rrcf	___lltoft@c& (0+255),f,b
 18450  016620  2B27               	incf	___lltoft@exp& (0+255),f,b
 18451  016622                     l1897:
 18452                           
 18453                           ; BSR set to: 1
 18454                           
 18455                           ; BSR set to: 1
 18456  016622  0E00               	movlw	0
 18457  016624  151F               	andwf	___lltoft@c& (0+255),w,b
 18458  016626  6F23               	movwf	??___lltoft& (0+255),b
 18459  016628  0E00               	movlw	0
 18460  01662A  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 18461  01662C  6F24               	movwf	(??___lltoft+1)& (0+255),b
 18462  01662E  0E00               	movlw	0
 18463  016630  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 18464  016632  6F25               	movwf	(??___lltoft+2)& (0+255),b
 18465  016634  0EFF               	movlw	255
 18466  016636  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 18467  016638  6F26               	movwf	(??___lltoft+3)& (0+255),b
 18468  01663A  5123               	movf	??___lltoft& (0+255),w,b
 18469  01663C  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 18470  01663E  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 18471  016640  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 18472  016642  A4D8               	btfss	status,2,c
 18473  016644  D7E8               	goto	l1898
 18474                           
 18475                           ; BSR set to: 1
 18476                           
 18477                           ; BSR set to: 1
 18478  016646  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 18479  01664A  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 18480  01664E  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 18481  016652  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 18482  016656  0E00               	movlw	0
 18483  016658  6F1B               	movwf	___ftpack@sign& (0+255),b
 18484  01665A  ECE3  F0AB         	call	___ftpack	;wreg free
 18485  01665E  C117  F11F         	movff	?___ftpack,?___lltoft
 18486  016662  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 18487  016666  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 18488  01666A  0012               	return	
 18489  01666C                     __end_of___lltoft:
 18490                           	opt stack 0
 18491                           tblptru	equ	0xFF8
 18492                           tblptrh	equ	0xFF7
 18493                           tblptrl	equ	0xFF6
 18494                           tablat	equ	0xFF5
 18495                           prodh	equ	0xFF4
 18496                           prodl	equ	0xFF3
 18497                           intcon	equ	0xFF2
 18498                           indf0	equ	0xFEF
 18499                           postinc0	equ	0xFEE
 18500                           fsr0h	equ	0xFEA
 18501                           fsr0l	equ	0xFE9
 18502                           wreg	equ	0xFE8
 18503                           indf1	equ	0xFE7
 18504                           postdec1	equ	0xFE5
 18505                           plusw1	equ	0xFE3
 18506                           fsr1h	equ	0xFE2
 18507                           fsr1l	equ	0xFE1
 18508                           indf2	equ	0xFDF
 18509                           postinc2	equ	0xFDE
 18510                           postdec2	equ	0xFDD
 18511                           plusw2	equ	0xFDB
 18512                           fsr2h	equ	0xFDA
 18513                           fsr2l	equ	0xFD9
 18514                           status	equ	0xFD8
 18515                           
 18516 ;; *************** function ___llmod *****************
 18517 ;; Defined at:
 18518 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;  dividend        4   36[BANK1 ] unsigned long 
 18521 ;;  divisor         4   40[BANK1 ] unsigned long 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;  counter         1   44[BANK1 ] unsigned char 
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  4   36[BANK1 ] unsigned long 
 18526 ;; Registers used:
 18527 ;;		wreg, status,2, status,0
 18528 ;; Tracked objects:
 18529 ;;		On entry : 0/0
 18530 ;;		On exit  : 0/0
 18531 ;;		Unchanged: 0/0
 18532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18533 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18534 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18536 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18537 ;;Total ram usage:        9 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:   14
 18540 ;; This function calls:
 18541 ;;		Nothing
 18542 ;; This function is called by:
 18543 ;;		_printf
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           	psect	text47
 18548  01641E                     __ptext47:
 18549                           	opt stack 0
 18550  01641E                     ___llmod:
 18551                           	opt stack 13
 18552                           
 18553                           ;incstack = 0
 18554  01641E  0101               	movlb	1	; () banked
 18555  016420  5128               	movf	___llmod@divisor& (0+255),w,b
 18556  016422  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 18557  016424  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 18558  016426  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 18559  016428  B4D8               	btfsc	status,2,c
 18560  01642A  D024               	goto	l1891
 18561                           
 18562                           ; BSR set to: 1
 18563  01642C  0E01               	movlw	1
 18564  01642E  6F2C               	movwf	___llmod@counter& (0+255),b
 18565  016430  D006               	goto	l1886
 18566  016432                     
 18567                           ; BSR set to: 1
 18568                           
 18569                           ; BSR set to: 1
 18570  016432  90D8               	bcf	status,0,c
 18571  016434  3728               	rlcf	___llmod@divisor& (0+255),f,b
 18572  016436  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 18573  016438  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 18574  01643A  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 18575  01643C  2B2C               	incf	___llmod@counter& (0+255),f,b
 18576  01643E                     l1886:
 18577                           
 18578                           ; BSR set to: 1
 18579                           
 18580                           ; BSR set to: 1
 18581  01643E  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 18582  016440  D7F8               	goto	l1887
 18583  016442                     u12230:
 18584                           
 18585                           ; BSR set to: 1
 18586                           
 18587                           ; BSR set to: 1
 18588                           
 18589                           ; BSR set to: 1
 18590  016442  5128               	movf	___llmod@divisor& (0+255),w,b
 18591  016444  5D24               	subwf	___llmod@dividend& (0+255),w,b
 18592  016446  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18593  016448  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 18594  01644A  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18595  01644C  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 18596  01644E  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18597  016450  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 18598  016452  A0D8               	btfss	status,0,c
 18599  016454  D008               	goto	l1890
 18600                           
 18601                           ; BSR set to: 1
 18602  016456  5128               	movf	___llmod@divisor& (0+255),w,b
 18603  016458  5F24               	subwf	___llmod@dividend& (0+255),f,b
 18604  01645A  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 18605  01645C  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 18606  01645E  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 18607  016460  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 18608  016462  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 18609  016464  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 18610  016466                     l1890:
 18611                           
 18612                           ; BSR set to: 1
 18613                           
 18614                           ; BSR set to: 1
 18615  016466  90D8               	bcf	status,0,c
 18616  016468  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 18617  01646A  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 18618  01646C  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 18619  01646E  3328               	rrcf	___llmod@divisor& (0+255),f,b
 18620                           
 18621                           ; BSR set to: 1
 18622  016470  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 18623  016472  D7E7               	goto	u12230
 18624  016474                     l1891:
 18625                           
 18626                           ; BSR set to: 1
 18627                           
 18628                           ; BSR set to: 1
 18629  016474  C124  F124         	movff	___llmod@dividend,?___llmod
 18630  016478  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 18631  01647C  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 18632  016480  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 18633                           
 18634                           ; BSR set to: 1
 18635  016484  0012               	return		;funcret
 18636  016486                     __end_of___llmod:
 18637                           	opt stack 0
 18638                           tblptru	equ	0xFF8
 18639                           tblptrh	equ	0xFF7
 18640                           tblptrl	equ	0xFF6
 18641                           tablat	equ	0xFF5
 18642                           prodh	equ	0xFF4
 18643                           prodl	equ	0xFF3
 18644                           intcon	equ	0xFF2
 18645                           indf0	equ	0xFEF
 18646                           postinc0	equ	0xFEE
 18647                           fsr0h	equ	0xFEA
 18648                           fsr0l	equ	0xFE9
 18649                           wreg	equ	0xFE8
 18650                           indf1	equ	0xFE7
 18651                           postdec1	equ	0xFE5
 18652                           plusw1	equ	0xFE3
 18653                           fsr1h	equ	0xFE2
 18654                           fsr1l	equ	0xFE1
 18655                           indf2	equ	0xFDF
 18656                           postinc2	equ	0xFDE
 18657                           postdec2	equ	0xFDD
 18658                           plusw2	equ	0xFDB
 18659                           fsr2h	equ	0xFDA
 18660                           fsr2l	equ	0xFD9
 18661                           status	equ	0xFD8
 18662                           
 18663 ;; *************** function ___lldiv *****************
 18664 ;; Defined at:
 18665 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;  dividend        4   23[BANK1 ] unsigned long 
 18668 ;;  divisor         4   27[BANK1 ] unsigned long 
 18669 ;; Auto vars:     Size  Location     Type
 18670 ;;  quotient        4   31[BANK1 ] unsigned long 
 18671 ;;  counter         1   35[BANK1 ] unsigned char 
 18672 ;; Return value:  Size  Location     Type
 18673 ;;                  4   23[BANK1 ] unsigned long 
 18674 ;; Registers used:
 18675 ;;		wreg, status,2, status,0
 18676 ;; Tracked objects:
 18677 ;;		On entry : 0/0
 18678 ;;		On exit  : 0/0
 18679 ;;		Unchanged: 0/0
 18680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18681 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18682 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18684 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18685 ;;Total ram usage:       13 bytes
 18686 ;; Hardware stack levels used:    1
 18687 ;; Hardware stack levels required when called:   14
 18688 ;; This function calls:
 18689 ;;		Nothing
 18690 ;; This function is called by:
 18691 ;;		_printf
 18692 ;; This function uses a non-reentrant model
 18693 ;;
 18694                           
 18695                           	psect	text48
 18696  015EFA                     __ptext48:
 18697                           	opt stack 0
 18698  015EFA                     ___lldiv:
 18699                           	opt stack 13
 18700                           
 18701                           ; BSR set to: 1
 18702                           ;incstack = 0
 18703  015EFA  0E00               	movlw	0
 18704  015EFC  0101               	movlb	1	; () banked
 18705  015EFE  6F1F               	movwf	___lldiv@quotient& (0+255),b
 18706  015F00  0E00               	movlw	0
 18707  015F02  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 18708  015F04  0E00               	movlw	0
 18709  015F06  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 18710  015F08  0E00               	movlw	0
 18711  015F0A  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 18712                           
 18713                           ; BSR set to: 1
 18714  015F0C  511B               	movf	___lldiv@divisor& (0+255),w,b
 18715  015F0E  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 18716  015F10  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 18717  015F12  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 18718  015F14  B4D8               	btfsc	status,2,c
 18719  015F16  D02A               	goto	l1881
 18720                           
 18721                           ; BSR set to: 1
 18722  015F18  0E01               	movlw	1
 18723  015F1A  6F23               	movwf	___lldiv@counter& (0+255),b
 18724  015F1C  D006               	goto	l1876
 18725  015F1E                     
 18726                           ; BSR set to: 1
 18727                           
 18728                           ; BSR set to: 1
 18729  015F1E  90D8               	bcf	status,0,c
 18730  015F20  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 18731  015F22  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 18732  015F24  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 18733  015F26  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 18734  015F28  2B23               	incf	___lldiv@counter& (0+255),f,b
 18735  015F2A                     l1876:
 18736                           
 18737                           ; BSR set to: 1
 18738                           
 18739                           ; BSR set to: 1
 18740  015F2A  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 18741  015F2C  D7F8               	goto	l1877
 18742  015F2E                     u12200:
 18743                           
 18744                           ; BSR set to: 1
 18745                           
 18746                           ; BSR set to: 1
 18747                           
 18748                           ; BSR set to: 1
 18749  015F2E  90D8               	bcf	status,0,c
 18750  015F30  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 18751  015F32  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 18752  015F34  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 18753  015F36  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 18754                           
 18755                           ; BSR set to: 1
 18756  015F38  511B               	movf	___lldiv@divisor& (0+255),w,b
 18757  015F3A  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 18758  015F3C  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18759  015F3E  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 18760  015F40  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18761  015F42  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 18762  015F44  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18763  015F46  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 18764  015F48  A0D8               	btfss	status,0,c
 18765  015F4A  D009               	goto	l1880
 18766                           
 18767                           ; BSR set to: 1
 18768  015F4C  511B               	movf	___lldiv@divisor& (0+255),w,b
 18769  015F4E  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 18770  015F50  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 18771  015F52  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 18772  015F54  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 18773  015F56  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 18774  015F58  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 18775  015F5A  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 18776                           
 18777                           ; BSR set to: 1
 18778  015F5C  811F               	bsf	___lldiv@quotient& (0+255),0,b
 18779  015F5E                     l1880:
 18780                           
 18781                           ; BSR set to: 1
 18782                           
 18783                           ; BSR set to: 1
 18784  015F5E  90D8               	bcf	status,0,c
 18785  015F60  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 18786  015F62  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 18787  015F64  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 18788  015F66  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 18789                           
 18790                           ; BSR set to: 1
 18791  015F68  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 18792  015F6A  D7E1               	goto	u12200
 18793  015F6C                     l1881:
 18794                           
 18795                           ; BSR set to: 1
 18796                           
 18797                           ; BSR set to: 1
 18798  015F6C  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 18799  015F70  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 18800  015F74  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 18801  015F78  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 18802                           
 18803                           ; BSR set to: 1
 18804  015F7C  0012               	return		;funcret
 18805  015F7E                     __end_of___lldiv:
 18806                           	opt stack 0
 18807                           tblptru	equ	0xFF8
 18808                           tblptrh	equ	0xFF7
 18809                           tblptrl	equ	0xFF6
 18810                           tablat	equ	0xFF5
 18811                           prodh	equ	0xFF4
 18812                           prodl	equ	0xFF3
 18813                           intcon	equ	0xFF2
 18814                           indf0	equ	0xFEF
 18815                           postinc0	equ	0xFEE
 18816                           fsr0h	equ	0xFEA
 18817                           fsr0l	equ	0xFE9
 18818                           wreg	equ	0xFE8
 18819                           indf1	equ	0xFE7
 18820                           postdec1	equ	0xFE5
 18821                           plusw1	equ	0xFE3
 18822                           fsr1h	equ	0xFE2
 18823                           fsr1l	equ	0xFE1
 18824                           indf2	equ	0xFDF
 18825                           postinc2	equ	0xFDE
 18826                           postdec2	equ	0xFDD
 18827                           plusw2	equ	0xFDB
 18828                           fsr2h	equ	0xFDA
 18829                           fsr2l	equ	0xFD9
 18830                           status	equ	0xFD8
 18831                           
 18832 ;; *************** function ___fttol *****************
 18833 ;; Defined at:
 18834 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 18835 ;; Parameters:    Size  Location     Type
 18836 ;;  f1              3   85[BANK1 ] float 
 18837 ;; Auto vars:     Size  Location     Type
 18838 ;;  lval            4   95[BANK1 ] unsigned long 
 18839 ;;  exp1            1   99[BANK1 ] unsigned char 
 18840 ;;  sign1           1   94[BANK1 ] unsigned char 
 18841 ;; Return value:  Size  Location     Type
 18842 ;;                  4   85[BANK1 ] long 
 18843 ;; Registers used:
 18844 ;;		wreg, status,2, status,0
 18845 ;; Tracked objects:
 18846 ;;		On entry : 0/0
 18847 ;;		On exit  : 0/0
 18848 ;;		Unchanged: 0/0
 18849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18850 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18851 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18852 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18853 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18854 ;;Total ram usage:       15 bytes
 18855 ;; Hardware stack levels used:    1
 18856 ;; Hardware stack levels required when called:   14
 18857 ;; This function calls:
 18858 ;;		Nothing
 18859 ;; This function is called by:
 18860 ;;		_printf
 18861 ;; This function uses a non-reentrant model
 18862 ;;
 18863                           
 18864                           	psect	text49
 18865  014D20                     __ptext49:
 18866                           	opt stack 0
 18867  014D20                     ___fttol:
 18868                           	opt stack 13
 18869                           
 18870                           ; BSR set to: 1
 18871                           ;incstack = 0
 18872  014D20  C157  F159         	movff	___fttol@f1+2,??___fttol
 18873  014D24  0101               	movlb	1	; () banked
 18874  014D26  6B5A               	clrf	(??___fttol+1)& (0+255),b
 18875  014D28  6B5B               	clrf	(??___fttol+2)& (0+255),b
 18876  014D2A  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 18877  014D2C  3759               	rlcf	??___fttol& (0+255),f,b
 18878  014D2E  E301               	bnc	u12111
 18879  014D30  815A               	bsf	(??___fttol+1)& (0+255),0,b
 18880  014D32                     u12111:
 18881  014D32  5159               	movf	??___fttol& (0+255),w,b
 18882  014D34  6F63               	movwf	___fttol@exp1& (0+255),b
 18883  014D36  5163               	movf	___fttol@exp1& (0+255),w,b
 18884  014D38  A4D8               	btfss	status,2,c
 18885  014D3A  D009               	goto	l1821
 18886                           
 18887                           ; BSR set to: 1
 18888  014D3C  0E00               	movlw	0
 18889  014D3E  6F55               	movwf	?___fttol& (0+255),b
 18890  014D40  0E00               	movlw	0
 18891  014D42  6F56               	movwf	(?___fttol+1)& (0+255),b
 18892  014D44  0E00               	movlw	0
 18893  014D46  6F57               	movwf	(?___fttol+2)& (0+255),b
 18894  014D48  0E00               	movlw	0
 18895  014D4A  6F58               	movwf	(?___fttol+3)& (0+255),b
 18896                           
 18897                           ; BSR set to: 1
 18898  014D4C  0012               	return	
 18899  014D4E                     l1821:
 18900                           
 18901                           ; BSR set to: 1
 18902                           
 18903                           ; BSR set to: 1
 18904  014D4E  0E17               	movlw	23
 18905  014D50  6F59               	movwf	??___fttol& (0+255),b
 18906  014D52  C155  F15A         	movff	___fttol@f1,??___fttol+1
 18907  014D56  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 18908  014D5A  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 18909  014D5E  2959               	incf	??___fttol& (0+255),w,b
 18910  014D60  6F5D               	movwf	(??___fttol+4)& (0+255),b
 18911  014D62  D004               	goto	u12130
 18912  014D64                     u12135:
 18913  014D64  90D8               	bcf	status,0,c
 18914  014D66  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 18915  014D68  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 18916  014D6A  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 18917  014D6C                     u12130:
 18918  014D6C  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 18919  014D6E  D7FA               	goto	u12135
 18920  014D70  0101               	movlb	1	; () banked
 18921  014D72  515A               	movf	(??___fttol+1)& (0+255),w,b
 18922  014D74  6F5E               	movwf	___fttol@sign1& (0+255),b
 18923                           
 18924                           ; BSR set to: 1
 18925  014D76  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 18926                           
 18927                           ; BSR set to: 1
 18928  014D78  0EFF               	movlw	255
 18929  014D7A  1755               	andwf	___fttol@f1& (0+255),f,b
 18930  014D7C  0EFF               	movlw	255
 18931  014D7E  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 18932  014D80  0E00               	movlw	0
 18933  014D82  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 18934                           
 18935                           ; BSR set to: 1
 18936  014D84  5155               	movf	___fttol@f1& (0+255),w,b
 18937  014D86  6F5F               	movwf	___fttol@lval& (0+255),b
 18938  014D88  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 18939  014D8A  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 18940  014D8C  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 18941  014D8E  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 18942  014D90  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 18943                           
 18944                           ; BSR set to: 1
 18945  014D92  0E8E               	movlw	142
 18946  014D94  5F63               	subwf	___fttol@exp1& (0+255),f,b
 18947                           
 18948                           ; BSR set to: 1
 18949  014D96  AF63               	btfss	___fttol@exp1& (0+255),7,b
 18950  014D98  D016               	goto	l1823
 18951                           
 18952                           ; BSR set to: 1
 18953  014D9A  5163               	movf	___fttol@exp1& (0+255),w,b
 18954  014D9C  0A80               	xorlw	128
 18955  014D9E  0F8F               	addlw	143
 18956  014DA0  B0D8               	btfsc	status,0,c
 18957  014DA2  D009               	goto	l1824
 18958                           
 18959                           ; BSR set to: 1
 18960  014DA4  0E00               	movlw	0
 18961  014DA6  6F55               	movwf	?___fttol& (0+255),b
 18962  014DA8  0E00               	movlw	0
 18963  014DAA  6F56               	movwf	(?___fttol+1)& (0+255),b
 18964  014DAC  0E00               	movlw	0
 18965  014DAE  6F57               	movwf	(?___fttol+2)& (0+255),b
 18966  014DB0  0E00               	movlw	0
 18967  014DB2  6F58               	movwf	(?___fttol+3)& (0+255),b
 18968                           
 18969                           ; BSR set to: 1
 18970  014DB4  0012               	return	
 18971  014DB6                     l1824:
 18972                           
 18973                           ; BSR set to: 1
 18974                           
 18975                           ; BSR set to: 1
 18976                           
 18977                           ; BSR set to: 1
 18978  014DB6  90D8               	bcf	status,0,c
 18979  014DB8  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 18980  014DBA  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 18981  014DBC  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 18982  014DBE  335F               	rrcf	___fttol@lval& (0+255),f,b
 18983                           
 18984                           ; BSR set to: 1
 18985  014DC0  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 18986  014DC2  D7F9               	goto	l1824
 18987                           
 18988                           ; BSR set to: 1
 18989  014DC4  D015               	goto	u12170
 18990  014DC6                     l1823:
 18991                           
 18992                           ; BSR set to: 1
 18993                           
 18994                           ; BSR set to: 1
 18995  014DC6  0E17               	movlw	23
 18996  014DC8  6563               	cpfsgt	___fttol@exp1& (0+255),b
 18997  014DCA  D00F               	goto	l1829
 18998                           
 18999                           ; BSR set to: 1
 19000  014DCC  0E00               	movlw	0
 19001  014DCE  6F55               	movwf	?___fttol& (0+255),b
 19002  014DD0  0E00               	movlw	0
 19003  014DD2  6F56               	movwf	(?___fttol+1)& (0+255),b
 19004  014DD4  0E00               	movlw	0
 19005  014DD6  6F57               	movwf	(?___fttol+2)& (0+255),b
 19006  014DD8  0E00               	movlw	0
 19007  014DDA  6F58               	movwf	(?___fttol+3)& (0+255),b
 19008                           
 19009                           ; BSR set to: 1
 19010  014DDC  0012               	return	
 19011  014DDE                     
 19012                           ; BSR set to: 1
 19013                           
 19014                           ; BSR set to: 1
 19015  014DDE  90D8               	bcf	status,0,c
 19016  014DE0  375F               	rlcf	___fttol@lval& (0+255),f,b
 19017  014DE2  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 19018  014DE4  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 19019  014DE6  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 19020  014DE8  0763               	decf	___fttol@exp1& (0+255),f,b
 19021  014DEA                     l1829:
 19022                           
 19023                           ; BSR set to: 1
 19024                           
 19025                           ; BSR set to: 1
 19026  014DEA  5163               	movf	___fttol@exp1& (0+255),w,b
 19027  014DEC  A4D8               	btfss	status,2,c
 19028  014DEE  D7F7               	goto	l1830
 19029  014DF0                     u12170:
 19030                           
 19031                           ; BSR set to: 1
 19032                           
 19033                           ; BSR set to: 1
 19034                           
 19035                           ; BSR set to: 1
 19036  014DF0  515E               	movf	___fttol@sign1& (0+255),w,b
 19037  014DF2  B4D8               	btfsc	status,2,c
 19038  014DF4  D008               	goto	l1832
 19039                           
 19040                           ; BSR set to: 1
 19041  014DF6  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 19042  014DF8  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 19043  014DFA  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 19044  014DFC  6D5F               	negf	___fttol@lval& (0+255),b
 19045  014DFE  0E00               	movlw	0
 19046  014E00  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 19047  014E02  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 19048  014E04  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 19049  014E06                     l1832:
 19050                           
 19051                           ; BSR set to: 1
 19052                           
 19053                           ; BSR set to: 1
 19054  014E06  C15F  F155         	movff	___fttol@lval,?___fttol
 19055  014E0A  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 19056  014E0E  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 19057  014E12  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 19058  014E16  0012               	return	
 19059  014E18                     __end_of___fttol:
 19060                           	opt stack 0
 19061                           tblptru	equ	0xFF8
 19062                           tblptrh	equ	0xFF7
 19063                           tblptrl	equ	0xFF6
 19064                           tablat	equ	0xFF5
 19065                           prodh	equ	0xFF4
 19066                           prodl	equ	0xFF3
 19067                           intcon	equ	0xFF2
 19068                           indf0	equ	0xFEF
 19069                           postinc0	equ	0xFEE
 19070                           fsr0h	equ	0xFEA
 19071                           fsr0l	equ	0xFE9
 19072                           wreg	equ	0xFE8
 19073                           indf1	equ	0xFE7
 19074                           postdec1	equ	0xFE5
 19075                           plusw1	equ	0xFE3
 19076                           fsr1h	equ	0xFE2
 19077                           fsr1l	equ	0xFE1
 19078                           indf2	equ	0xFDF
 19079                           postinc2	equ	0xFDE
 19080                           postdec2	equ	0xFDD
 19081                           plusw2	equ	0xFDB
 19082                           fsr2h	equ	0xFDA
 19083                           fsr2l	equ	0xFD9
 19084                           status	equ	0xFD8
 19085                           
 19086 ;; *************** function ___ftsub *****************
 19087 ;; Defined at:
 19088 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 19089 ;; Parameters:    Size  Location     Type
 19090 ;;  f1              3   55[BANK1 ] float 
 19091 ;;  f2              3   58[BANK1 ] float 
 19092 ;; Auto vars:     Size  Location     Type
 19093 ;;		None
 19094 ;; Return value:  Size  Location     Type
 19095 ;;                  3   55[BANK1 ] float 
 19096 ;; Registers used:
 19097 ;;		wreg, status,2, status,0, cstack
 19098 ;; Tracked objects:
 19099 ;;		On entry : 0/0
 19100 ;;		On exit  : 0/0
 19101 ;;		Unchanged: 0/0
 19102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19103 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19106 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19107 ;;Total ram usage:        6 bytes
 19108 ;; Hardware stack levels used:    1
 19109 ;; Hardware stack levels required when called:   16
 19110 ;; This function calls:
 19111 ;;		___ftadd
 19112 ;; This function is called by:
 19113 ;;		_printf
 19114 ;; This function uses a non-reentrant model
 19115 ;;
 19116                           
 19117                           	psect	text50
 19118  016A5E                     __ptext50:
 19119                           	opt stack 0
 19120  016A5E                     ___ftsub:
 19121                           	opt stack 11
 19122                           
 19123                           ; BSR set to: 1
 19124                           ;incstack = 0
 19125  016A5E  0101               	movlb	1	; () banked
 19126  016A60  513A               	movf	___ftsub@f2& (0+255),w,b
 19127  016A62  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 19128  016A64  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 19129  016A66  B4D8               	btfsc	status,2,c
 19130  016A68  D006               	goto	l1817
 19131                           
 19132                           ; BSR set to: 1
 19133  016A6A  0E00               	movlw	0
 19134  016A6C  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 19135  016A6E  0E00               	movlw	0
 19136  016A70  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 19137  016A72  0E80               	movlw	128
 19138  016A74  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 19139  016A76                     l1817:
 19140                           
 19141                           ; BSR set to: 1
 19142                           
 19143                           ; BSR set to: 1
 19144  016A76  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 19145  016A7A  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 19146  016A7E  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 19147  016A82  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 19148  016A86  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 19149  016A8A  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 19150  016A8E  EC2E  F0A1         	call	___ftadd	;wreg free
 19151  016A92  C12B  F137         	movff	?___ftadd,?___ftsub
 19152  016A96  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 19153  016A9A  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 19154  016A9E  0012               	return	
 19155  016AA0                     __end_of___ftsub:
 19156                           	opt stack 0
 19157                           tblptru	equ	0xFF8
 19158                           tblptrh	equ	0xFF7
 19159                           tblptrl	equ	0xFF6
 19160                           tablat	equ	0xFF5
 19161                           prodh	equ	0xFF4
 19162                           prodl	equ	0xFF3
 19163                           intcon	equ	0xFF2
 19164                           indf0	equ	0xFEF
 19165                           postinc0	equ	0xFEE
 19166                           fsr0h	equ	0xFEA
 19167                           fsr0l	equ	0xFE9
 19168                           wreg	equ	0xFE8
 19169                           indf1	equ	0xFE7
 19170                           postdec1	equ	0xFE5
 19171                           plusw1	equ	0xFE3
 19172                           fsr1h	equ	0xFE2
 19173                           fsr1l	equ	0xFE1
 19174                           indf2	equ	0xFDF
 19175                           postinc2	equ	0xFDE
 19176                           postdec2	equ	0xFDD
 19177                           plusw2	equ	0xFDB
 19178                           fsr2h	equ	0xFDA
 19179                           fsr2l	equ	0xFD9
 19180                           status	equ	0xFD8
 19181                           
 19182 ;; *************** function ___ftadd *****************
 19183 ;; Defined at:
 19184 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 19185 ;; Parameters:    Size  Location     Type
 19186 ;;  f1              3   43[BANK1 ] float 
 19187 ;;  f2              3   46[BANK1 ] float 
 19188 ;; Auto vars:     Size  Location     Type
 19189 ;;  exp1            1   54[BANK1 ] unsigned char 
 19190 ;;  exp2            1   53[BANK1 ] unsigned char 
 19191 ;;  sign            1   52[BANK1 ] unsigned char 
 19192 ;; Return value:  Size  Location     Type
 19193 ;;                  3   43[BANK1 ] float 
 19194 ;; Registers used:
 19195 ;;		wreg, status,2, status,0, cstack
 19196 ;; Tracked objects:
 19197 ;;		On entry : 0/0
 19198 ;;		On exit  : 0/0
 19199 ;;		Unchanged: 0/0
 19200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19201 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19202 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19203 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19204 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19205 ;;Total ram usage:       12 bytes
 19206 ;; Hardware stack levels used:    1
 19207 ;; Hardware stack levels required when called:   15
 19208 ;; This function calls:
 19209 ;;		___ftpack
 19210 ;; This function is called by:
 19211 ;;		_ringBufferLUT
 19212 ;;		_printf
 19213 ;;		___ftsub
 19214 ;; This function uses a non-reentrant model
 19215 ;;
 19216                           
 19217                           	psect	text51
 19218  01425C                     __ptext51:
 19219                           	opt stack 0
 19220  01425C                     ___ftadd:
 19221                           	opt stack 11
 19222                           
 19223                           ;incstack = 0
 19224  01425C  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 19225  014260  0101               	movlb	1	; () banked
 19226  014262  6B32               	clrf	(??___ftadd+1)& (0+255),b
 19227  014264  6B33               	clrf	(??___ftadd+2)& (0+255),b
 19228  014266  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 19229  014268  3731               	rlcf	??___ftadd& (0+255),f,b
 19230  01426A  E301               	bnc	u11211
 19231  01426C  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 19232  01426E                     u11211:
 19233  01426E  5131               	movf	??___ftadd& (0+255),w,b
 19234  014270  6F36               	movwf	___ftadd@exp1& (0+255),b
 19235  014272  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 19236  014276  6B32               	clrf	(??___ftadd+1)& (0+255),b
 19237  014278  6B33               	clrf	(??___ftadd+2)& (0+255),b
 19238  01427A  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 19239  01427C  3731               	rlcf	??___ftadd& (0+255),f,b
 19240  01427E  E301               	bnc	u11221
 19241  014280  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 19242  014282                     u11221:
 19243  014282  5131               	movf	??___ftadd& (0+255),w,b
 19244  014284  6F35               	movwf	___ftadd@exp2& (0+255),b
 19245                           
 19246                           ; BSR set to: 1
 19247  014286  5136               	movf	___ftadd@exp1& (0+255),w,b
 19248  014288  B4D8               	btfsc	status,2,c
 19249  01428A  D00B               	goto	u11250
 19250                           
 19251                           ; BSR set to: 1
 19252  01428C  5135               	movf	___ftadd@exp2& (0+255),w,b
 19253  01428E  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 19254  014290  B0D8               	btfsc	status,0,c
 19255  014292  D00E               	goto	l1735
 19256                           
 19257                           ; BSR set to: 1
 19258  014294  5136               	movf	___ftadd@exp1& (0+255),w,b
 19259  014296  0800               	sublw	0
 19260  014298  2535               	addwf	___ftadd@exp2& (0+255),w,b
 19261  01429A  6F31               	movwf	??___ftadd& (0+255),b
 19262  01429C  0E18               	movlw	24
 19263  01429E  6531               	cpfsgt	??___ftadd& (0+255),b
 19264  0142A0  D007               	goto	l1735
 19265  0142A2                     u11250:
 19266                           
 19267                           ; BSR set to: 1
 19268  0142A2  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 19269  0142A6  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 19270  0142AA  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 19271  0142AE  0012               	return	
 19272  0142B0                     l1735:
 19273                           
 19274                           ; BSR set to: 1
 19275                           
 19276                           ; BSR set to: 1
 19277  0142B0  5135               	movf	___ftadd@exp2& (0+255),w,b
 19278  0142B2  B4D8               	btfsc	status,2,c
 19279  0142B4  D00B               	goto	u11280
 19280                           
 19281                           ; BSR set to: 1
 19282  0142B6  5136               	movf	___ftadd@exp1& (0+255),w,b
 19283  0142B8  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 19284  0142BA  B0D8               	btfsc	status,0,c
 19285  0142BC  D00E               	goto	l1739
 19286                           
 19287                           ; BSR set to: 1
 19288  0142BE  5135               	movf	___ftadd@exp2& (0+255),w,b
 19289  0142C0  0800               	sublw	0
 19290  0142C2  2536               	addwf	___ftadd@exp1& (0+255),w,b
 19291  0142C4  6F31               	movwf	??___ftadd& (0+255),b
 19292  0142C6  0E18               	movlw	24
 19293  0142C8  6531               	cpfsgt	??___ftadd& (0+255),b
 19294  0142CA  D007               	goto	l1739
 19295  0142CC                     u11280:
 19296                           
 19297                           ; BSR set to: 1
 19298  0142CC  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 19299  0142D0  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 19300  0142D4  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 19301  0142D8  0012               	return	
 19302  0142DA                     l1739:
 19303                           
 19304                           ; BSR set to: 1
 19305                           
 19306                           ; BSR set to: 1
 19307  0142DA  0E06               	movlw	6
 19308  0142DC  6F34               	movwf	___ftadd@sign& (0+255),b
 19309                           
 19310                           ; BSR set to: 1
 19311  0142DE  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 19312                           
 19313                           ; BSR set to: 1
 19314  0142E0  8F34               	bsf	___ftadd@sign& (0+255),7,b
 19315                           
 19316                           ; BSR set to: 1
 19317                           
 19318                           ; BSR set to: 1
 19319  0142E2  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 19320                           
 19321                           ; BSR set to: 1
 19322  0142E4  8D34               	bsf	___ftadd@sign& (0+255),6,b
 19323                           
 19324                           ; BSR set to: 1
 19325  0142E6  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 19326                           
 19327                           ; BSR set to: 1
 19328  0142E8  0EFF               	movlw	255
 19329  0142EA  172B               	andwf	___ftadd@f1& (0+255),f,b
 19330  0142EC  0EFF               	movlw	255
 19331  0142EE  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 19332  0142F0  0E00               	movlw	0
 19333  0142F2  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 19334  0142F4  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 19335                           
 19336                           ; BSR set to: 1
 19337  0142F6  0EFF               	movlw	255
 19338  0142F8  172E               	andwf	___ftadd@f2& (0+255),f,b
 19339  0142FA  0EFF               	movlw	255
 19340  0142FC  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 19341  0142FE  0E00               	movlw	0
 19342  014300  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 19343                           
 19344                           ; BSR set to: 1
 19345  014302  5135               	movf	___ftadd@exp2& (0+255),w,b
 19346  014304  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 19347  014306  B0D8               	btfsc	status,0,c
 19348  014308  D01B               	goto	l1744
 19349  01430A                     u11310:
 19350                           
 19351                           ; BSR set to: 1
 19352                           
 19353                           ; BSR set to: 1
 19354  01430A  90D8               	bcf	status,0,c
 19355  01430C  372E               	rlcf	___ftadd@f2& (0+255),f,b
 19356  01430E  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 19357  014310  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 19358  014312  0735               	decf	___ftadd@exp2& (0+255),f,b
 19359                           
 19360                           ; BSR set to: 1
 19361  014314  5136               	movf	___ftadd@exp1& (0+255),w,b
 19362  014316  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 19363  014318  B4D8               	btfsc	status,2,c
 19364  01431A  D00D               	goto	l1749
 19365                           
 19366                           ; BSR set to: 1
 19367  01431C  0734               	decf	___ftadd@sign& (0+255),f,b
 19368  01431E  C134  F131         	movff	___ftadd@sign,??___ftadd
 19369  014322  0E07               	movlw	7
 19370  014324  1731               	andwf	??___ftadd& (0+255),f,b
 19371  014326  B4D8               	btfsc	status,2,c
 19372  014328  D006               	goto	l1749
 19373  01432A  D7EF               	goto	u11310
 19374  01432C                     
 19375                           ; BSR set to: 1
 19376                           
 19377                           ; BSR set to: 1
 19378  01432C  90D8               	bcf	status,0,c
 19379  01432E  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 19380  014330  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 19381  014332  332B               	rrcf	___ftadd@f1& (0+255),f,b
 19382  014334  2B36               	incf	___ftadd@exp1& (0+255),f,b
 19383  014336                     l1749:
 19384                           
 19385                           ; BSR set to: 1
 19386                           
 19387                           ; BSR set to: 1
 19388  014336  5135               	movf	___ftadd@exp2& (0+255),w,b
 19389  014338  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 19390  01433A  B4D8               	btfsc	status,2,c
 19391  01433C  D01F               	goto	u11380
 19392  01433E  D7F6               	goto	l1750
 19393  014340                     l1744:
 19394                           
 19395                           ; BSR set to: 1
 19396                           
 19397                           ; BSR set to: 1
 19398  014340  5136               	movf	___ftadd@exp1& (0+255),w,b
 19399  014342  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 19400  014344  B0D8               	btfsc	status,0,c
 19401  014346  D01A               	goto	u11380
 19402  014348                     u11350:
 19403                           
 19404                           ; BSR set to: 1
 19405                           
 19406                           ; BSR set to: 1
 19407  014348  90D8               	bcf	status,0,c
 19408  01434A  372B               	rlcf	___ftadd@f1& (0+255),f,b
 19409  01434C  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 19410  01434E  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 19411  014350  0736               	decf	___ftadd@exp1& (0+255),f,b
 19412                           
 19413                           ; BSR set to: 1
 19414  014352  5136               	movf	___ftadd@exp1& (0+255),w,b
 19415  014354  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 19416  014356  B4D8               	btfsc	status,2,c
 19417  014358  D00D               	goto	l1758
 19418                           
 19419                           ; BSR set to: 1
 19420  01435A  0734               	decf	___ftadd@sign& (0+255),f,b
 19421  01435C  C134  F131         	movff	___ftadd@sign,??___ftadd
 19422  014360  0E07               	movlw	7
 19423  014362  1731               	andwf	??___ftadd& (0+255),f,b
 19424  014364  B4D8               	btfsc	status,2,c
 19425  014366  D006               	goto	l1758
 19426  014368  D7EF               	goto	u11350
 19427  01436A                     
 19428                           ; BSR set to: 1
 19429                           
 19430                           ; BSR set to: 1
 19431  01436A  90D8               	bcf	status,0,c
 19432  01436C  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 19433  01436E  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 19434  014370  332E               	rrcf	___ftadd@f2& (0+255),f,b
 19435  014372  2B35               	incf	___ftadd@exp2& (0+255),f,b
 19436  014374                     l1758:
 19437                           
 19438                           ; BSR set to: 1
 19439                           
 19440                           ; BSR set to: 1
 19441  014374  5135               	movf	___ftadd@exp2& (0+255),w,b
 19442  014376  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 19443  014378  A4D8               	btfss	status,2,c
 19444  01437A  D7F7               	goto	l1759
 19445  01437C                     u11380:
 19446                           
 19447                           ; BSR set to: 1
 19448                           
 19449                           ; BSR set to: 1
 19450                           
 19451                           ; BSR set to: 1
 19452  01437C  AF34               	btfss	___ftadd@sign& (0+255),7,b
 19453  01437E  D00C               	goto	l1761
 19454                           
 19455                           ; BSR set to: 1
 19456  014380  0EFF               	movlw	255
 19457  014382  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 19458  014384  0EFF               	movlw	255
 19459  014386  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 19460  014388  0EFF               	movlw	255
 19461  01438A  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 19462  01438C  0E01               	movlw	1
 19463  01438E  272B               	addwf	___ftadd@f1& (0+255),f,b
 19464  014390  0E00               	movlw	0
 19465  014392  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 19466  014394  0E00               	movlw	0
 19467  014396  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 19468  014398                     l1761:
 19469                           
 19470                           ; BSR set to: 1
 19471  014398  AD34               	btfss	___ftadd@sign& (0+255),6,b
 19472  01439A  D00C               	goto	l1762
 19473                           
 19474                           ; BSR set to: 1
 19475  01439C  0EFF               	movlw	255
 19476  01439E  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 19477  0143A0  0EFF               	movlw	255
 19478  0143A2  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 19479  0143A4  0EFF               	movlw	255
 19480  0143A6  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 19481  0143A8  0E01               	movlw	1
 19482  0143AA  272E               	addwf	___ftadd@f2& (0+255),f,b
 19483  0143AC  0E00               	movlw	0
 19484  0143AE  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19485  0143B0  0E00               	movlw	0
 19486  0143B2  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19487  0143B4                     l1762:
 19488                           
 19489                           ; BSR set to: 1
 19490                           
 19491                           ; BSR set to: 1
 19492  0143B4  0E00               	movlw	0
 19493  0143B6  6F34               	movwf	___ftadd@sign& (0+255),b
 19494                           
 19495                           ; BSR set to: 1
 19496  0143B8  512B               	movf	___ftadd@f1& (0+255),w,b
 19497  0143BA  272E               	addwf	___ftadd@f2& (0+255),f,b
 19498  0143BC  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 19499  0143BE  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19500  0143C0  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 19501  0143C2  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19502                           
 19503                           ; BSR set to: 1
 19504  0143C4  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 19505  0143C6  D00E               	goto	l1763
 19506                           
 19507                           ; BSR set to: 1
 19508  0143C8  0EFF               	movlw	255
 19509  0143CA  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 19510  0143CC  0EFF               	movlw	255
 19511  0143CE  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 19512  0143D0  0EFF               	movlw	255
 19513  0143D2  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 19514  0143D4  0E01               	movlw	1
 19515  0143D6  272E               	addwf	___ftadd@f2& (0+255),f,b
 19516  0143D8  0E00               	movlw	0
 19517  0143DA  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 19518  0143DC  0E00               	movlw	0
 19519  0143DE  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 19520                           
 19521                           ; BSR set to: 1
 19522  0143E0  0E01               	movlw	1
 19523  0143E2  6F34               	movwf	___ftadd@sign& (0+255),b
 19524  0143E4                     l1763:
 19525                           
 19526                           ; BSR set to: 1
 19527                           
 19528                           ; BSR set to: 1
 19529  0143E4  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 19530  0143E8  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 19531  0143EC  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 19532  0143F0  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 19533  0143F4  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 19534  0143F8  ECE3  F0AB         	call	___ftpack	;wreg free
 19535  0143FC  C117  F12B         	movff	?___ftpack,?___ftadd
 19536  014400  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 19537  014404  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 19538  014408  0012               	return	
 19539  01440A                     __end_of___ftadd:
 19540                           	opt stack 0
 19541                           tblptru	equ	0xFF8
 19542                           tblptrh	equ	0xFF7
 19543                           tblptrl	equ	0xFF6
 19544                           tablat	equ	0xFF5
 19545                           prodh	equ	0xFF4
 19546                           prodl	equ	0xFF3
 19547                           intcon	equ	0xFF2
 19548                           indf0	equ	0xFEF
 19549                           postinc0	equ	0xFEE
 19550                           fsr0h	equ	0xFEA
 19551                           fsr0l	equ	0xFE9
 19552                           wreg	equ	0xFE8
 19553                           indf1	equ	0xFE7
 19554                           postdec1	equ	0xFE5
 19555                           plusw1	equ	0xFE3
 19556                           fsr1h	equ	0xFE2
 19557                           fsr1l	equ	0xFE1
 19558                           indf2	equ	0xFDF
 19559                           postinc2	equ	0xFDE
 19560                           postdec2	equ	0xFDD
 19561                           plusw2	equ	0xFDB
 19562                           fsr2h	equ	0xFDA
 19563                           fsr2l	equ	0xFD9
 19564                           status	equ	0xFD8
 19565                           
 19566 ;; *************** function ___ftpack *****************
 19567 ;; Defined at:
 19568 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 19569 ;; Parameters:    Size  Location     Type
 19570 ;;  arg             3   23[BANK1 ] unsigned um
 19571 ;;  exp             1   26[BANK1 ] unsigned char 
 19572 ;;  sign            1   27[BANK1 ] unsigned char 
 19573 ;; Auto vars:     Size  Location     Type
 19574 ;;		None
 19575 ;; Return value:  Size  Location     Type
 19576 ;;                  3   23[BANK1 ] float 
 19577 ;; Registers used:
 19578 ;;		wreg, status,2, status,0
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/0
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19584 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19586 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19587 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19588 ;;Total ram usage:        8 bytes
 19589 ;; Hardware stack levels used:    1
 19590 ;; Hardware stack levels required when called:   14
 19591 ;; This function calls:
 19592 ;;		Nothing
 19593 ;; This function is called by:
 19594 ;;		___awtoft
 19595 ;;		___ftadd
 19596 ;;		___ftdiv
 19597 ;;		___ftmul
 19598 ;;		___lltoft
 19599 ;; This function uses a non-reentrant model
 19600 ;;
 19601                           
 19602                           	psect	text52
 19603  0157C6                     __ptext52:
 19604                           	opt stack 0
 19605  0157C6                     ___ftpack:
 19606                           	opt stack 11
 19607                           
 19608                           ;incstack = 0
 19609  0157C6  0101               	movlb	1	; () banked
 19610  0157C8  511A               	movf	___ftpack@exp& (0+255),w,b
 19611  0157CA  B4D8               	btfsc	status,2,c
 19612  0157CC  D005               	goto	u10830
 19613                           
 19614                           ; BSR set to: 1
 19615  0157CE  5117               	movf	___ftpack@arg& (0+255),w,b
 19616  0157D0  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 19617  0157D2  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 19618  0157D4  A4D8               	btfss	status,2,c
 19619  0157D6  D00C               	goto	l1704
 19620  0157D8                     u10830:
 19621                           
 19622                           ; BSR set to: 1
 19623                           
 19624                           ; BSR set to: 1
 19625  0157D8  0E00               	movlw	0
 19626  0157DA  6F17               	movwf	?___ftpack& (0+255),b
 19627  0157DC  0E00               	movlw	0
 19628  0157DE  6F18               	movwf	(?___ftpack+1)& (0+255),b
 19629  0157E0  0E00               	movlw	0
 19630  0157E2  6F19               	movwf	(?___ftpack+2)& (0+255),b
 19631                           
 19632                           ; BSR set to: 1
 19633  0157E4  0012               	return	
 19634  0157E6                     
 19635                           ; BSR set to: 1
 19636                           
 19637                           ; BSR set to: 1
 19638  0157E6  2B1A               	incf	___ftpack@exp& (0+255),f,b
 19639  0157E8  90D8               	bcf	status,0,c
 19640  0157EA  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19641  0157EC  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19642  0157EE  3317               	rrcf	___ftpack@arg& (0+255),f,b
 19643  0157F0                     l1704:
 19644                           
 19645                           ; BSR set to: 1
 19646                           
 19647                           ; BSR set to: 1
 19648  0157F0  0E00               	movlw	0
 19649  0157F2  1517               	andwf	___ftpack@arg& (0+255),w,b
 19650  0157F4  6F1C               	movwf	??___ftpack& (0+255),b
 19651  0157F6  0E00               	movlw	0
 19652  0157F8  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19653  0157FA  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 19654  0157FC  0EFE               	movlw	254
 19655  0157FE  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 19656  015800  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 19657  015802  511C               	movf	??___ftpack& (0+255),w,b
 19658  015804  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 19659  015806  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 19660  015808  B4D8               	btfsc	status,2,c
 19661  01580A  D00C               	goto	l1707
 19662  01580C  D7EC               	goto	l1705
 19663  01580E                     
 19664                           ; BSR set to: 1
 19665                           
 19666                           ; BSR set to: 1
 19667  01580E  2B1A               	incf	___ftpack@exp& (0+255),f,b
 19668                           
 19669                           ; BSR set to: 1
 19670  015810  0E01               	movlw	1
 19671  015812  2717               	addwf	___ftpack@arg& (0+255),f,b
 19672  015814  0E00               	movlw	0
 19673  015816  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 19674  015818  0E00               	movlw	0
 19675  01581A  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 19676  01581C  90D8               	bcf	status,0,c
 19677  01581E  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 19678  015820  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 19679  015822  3317               	rrcf	___ftpack@arg& (0+255),f,b
 19680  015824                     l1707:
 19681                           
 19682                           ; BSR set to: 1
 19683                           
 19684                           ; BSR set to: 1
 19685  015824  0E00               	movlw	0
 19686  015826  1517               	andwf	___ftpack@arg& (0+255),w,b
 19687  015828  6F1C               	movwf	??___ftpack& (0+255),b
 19688  01582A  0E00               	movlw	0
 19689  01582C  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 19690  01582E  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 19691  015830  0EFF               	movlw	255
 19692  015832  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 19693  015834  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 19694  015836  511C               	movf	??___ftpack& (0+255),w,b
 19695  015838  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 19696  01583A  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 19697  01583C  B4D8               	btfsc	status,2,c
 19698  01583E  D006               	goto	l1710
 19699  015840  D7E6               	goto	l1708
 19700  015842                     
 19701                           ; BSR set to: 1
 19702                           
 19703                           ; BSR set to: 1
 19704  015842  071A               	decf	___ftpack@exp& (0+255),f,b
 19705  015844  90D8               	bcf	status,0,c
 19706  015846  3717               	rlcf	___ftpack@arg& (0+255),f,b
 19707  015848  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 19708  01584A  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 19709  01584C                     l1710:
 19710                           
 19711                           ; BSR set to: 1
 19712                           
 19713                           ; BSR set to: 1
 19714  01584C  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 19715  01584E  D003               	goto	u10870
 19716                           
 19717                           ; BSR set to: 1
 19718  015850  0E02               	movlw	2
 19719  015852  611A               	cpfslt	___ftpack@exp& (0+255),b
 19720  015854  D7F6               	goto	l1711
 19721  015856                     u10870:
 19722                           
 19723                           ; BSR set to: 1
 19724                           
 19725                           ; BSR set to: 1
 19726  015856  A11A               	btfss	___ftpack@exp& (0+255),0,b
 19727                           
 19728                           ; BSR set to: 1
 19729  015858  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 19730                           
 19731                           ; BSR set to: 1
 19732                           
 19733                           ; BSR set to: 1
 19734  01585A  90D8               	bcf	status,0,c
 19735  01585C  331A               	rrcf	___ftpack@exp& (0+255),f,b
 19736  01585E  511A               	movf	___ftpack@exp& (0+255),w,b
 19737  015860  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 19738                           
 19739                           ; BSR set to: 1
 19740  015862  511B               	movf	___ftpack@sign& (0+255),w,b
 19741  015864  A4D8               	btfss	status,2,c
 19742                           
 19743                           ; BSR set to: 1
 19744  015866  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 19745                           
 19746                           ; BSR set to: 1
 19747                           
 19748                           ; BSR set to: 1
 19749  015868  C117  F117         	movff	___ftpack@arg,?___ftpack
 19750  01586C  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 19751  015870  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 19752  015874  0012               	return	
 19753  015876                     __end_of___ftpack:
 19754                           	opt stack 0
 19755                           tblptru	equ	0xFF8
 19756                           tblptrh	equ	0xFF7
 19757                           tblptrl	equ	0xFF6
 19758                           tablat	equ	0xFF5
 19759                           prodh	equ	0xFF4
 19760                           prodl	equ	0xFF3
 19761                           intcon	equ	0xFF2
 19762                           indf0	equ	0xFEF
 19763                           postinc0	equ	0xFEE
 19764                           fsr0h	equ	0xFEA
 19765                           fsr0l	equ	0xFE9
 19766                           wreg	equ	0xFE8
 19767                           indf1	equ	0xFE7
 19768                           postdec1	equ	0xFE5
 19769                           plusw1	equ	0xFE3
 19770                           fsr1h	equ	0xFE2
 19771                           fsr1l	equ	0xFE1
 19772                           indf2	equ	0xFDF
 19773                           postinc2	equ	0xFDE
 19774                           postdec2	equ	0xFDD
 19775                           plusw2	equ	0xFDB
 19776                           fsr2h	equ	0xFDA
 19777                           fsr2l	equ	0xFD9
 19778                           status	equ	0xFD8
 19779                           
 19780 ;; *************** function ___ftneg *****************
 19781 ;; Defined at:
 19782 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 19783 ;; Parameters:    Size  Location     Type
 19784 ;;  f1              3   35[BANK1 ] float 
 19785 ;; Auto vars:     Size  Location     Type
 19786 ;;		None
 19787 ;; Return value:  Size  Location     Type
 19788 ;;                  3   35[BANK1 ] float 
 19789 ;; Registers used:
 19790 ;;		wreg, status,2, status,0
 19791 ;; Tracked objects:
 19792 ;;		On entry : 0/0
 19793 ;;		On exit  : 0/0
 19794 ;;		Unchanged: 0/0
 19795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19796 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19799 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19800 ;;Total ram usage:        3 bytes
 19801 ;; Hardware stack levels used:    1
 19802 ;; Hardware stack levels required when called:   14
 19803 ;; This function calls:
 19804 ;;		Nothing
 19805 ;; This function is called by:
 19806 ;;		_ringBufferLUT
 19807 ;;		_printf
 19808 ;; This function uses a non-reentrant model
 19809 ;;
 19810                           
 19811                           	psect	text53
 19812  016E04                     __ptext53:
 19813                           	opt stack 0
 19814  016E04                     ___ftneg:
 19815                           	opt stack 13
 19816                           
 19817                           ; BSR set to: 1
 19818                           ;incstack = 0
 19819  016E04  0101               	movlb	1	; () banked
 19820  016E06  5123               	movf	___ftneg@f1& (0+255),w,b
 19821  016E08  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 19822  016E0A  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 19823  016E0C  B4D8               	btfsc	status,2,c
 19824  016E0E  D006               	goto	l1811
 19825                           
 19826                           ; BSR set to: 1
 19827  016E10  0E00               	movlw	0
 19828  016E12  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 19829  016E14  0E00               	movlw	0
 19830  016E16  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 19831  016E18  0E80               	movlw	128
 19832  016E1A  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 19833  016E1C                     l1811:
 19834                           
 19835                           ; BSR set to: 1
 19836  016E1C  C123  F123         	movff	___ftneg@f1,?___ftneg
 19837  016E20  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 19838  016E24  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 19839                           
 19840                           ; BSR set to: 1
 19841  016E28  0012               	return		;funcret
 19842  016E2A                     __end_of___ftneg:
 19843                           	opt stack 0
 19844                           tblptru	equ	0xFF8
 19845                           tblptrh	equ	0xFF7
 19846                           tblptrl	equ	0xFF6
 19847                           tablat	equ	0xFF5
 19848                           prodh	equ	0xFF4
 19849                           prodl	equ	0xFF3
 19850                           intcon	equ	0xFF2
 19851                           indf0	equ	0xFEF
 19852                           postinc0	equ	0xFEE
 19853                           fsr0h	equ	0xFEA
 19854                           fsr0l	equ	0xFE9
 19855                           wreg	equ	0xFE8
 19856                           indf1	equ	0xFE7
 19857                           postdec1	equ	0xFE5
 19858                           plusw1	equ	0xFE3
 19859                           fsr1h	equ	0xFE2
 19860                           fsr1l	equ	0xFE1
 19861                           indf2	equ	0xFDF
 19862                           postinc2	equ	0xFDE
 19863                           postdec2	equ	0xFDD
 19864                           plusw2	equ	0xFDB
 19865                           fsr2h	equ	0xFDA
 19866                           fsr2l	equ	0xFD9
 19867                           status	equ	0xFD8
 19868                           
 19869 ;; *************** function ___ftge *****************
 19870 ;; Defined at:
 19871 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 19872 ;; Parameters:    Size  Location     Type
 19873 ;;  ff1             3   23[BANK1 ] float 
 19874 ;;  ff2             3   26[BANK1 ] float 
 19875 ;; Auto vars:     Size  Location     Type
 19876 ;;		None
 19877 ;; Return value:  Size  Location     Type
 19878 ;;		None               void
 19879 ;; Registers used:
 19880 ;;		wreg, status,2, status,0
 19881 ;; Tracked objects:
 19882 ;;		On entry : 0/0
 19883 ;;		On exit  : 0/0
 19884 ;;		Unchanged: 0/0
 19885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 19886 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19888 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19889 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19890 ;;Total ram usage:        9 bytes
 19891 ;; Hardware stack levels used:    1
 19892 ;; Hardware stack levels required when called:   14
 19893 ;; This function calls:
 19894 ;;		Nothing
 19895 ;; This function is called by:
 19896 ;;		_printf
 19897 ;; This function uses a non-reentrant model
 19898 ;;
 19899                           
 19900                           	psect	text54
 19901  015B1E                     __ptext54:
 19902                           	opt stack 0
 19903  015B1E                     ___ftge:
 19904                           	opt stack 13
 19905                           
 19906                           ; BSR set to: 1
 19907                           ;incstack = 0
 19908  015B1E  0101               	movlb	1	; () banked
 19909  015B20  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 19910  015B22  D016               	goto	l1793
 19911                           
 19912                           ; BSR set to: 1
 19913  015B24  C117  F11D         	movff	___ftge@ff1,??___ftge
 19914  015B28  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 19915  015B2C  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 19916  015B30  1F1D               	comf	??___ftge& (0+255),f,b
 19917  015B32  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 19918  015B34  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 19919  015B36  2B1D               	incf	??___ftge& (0+255),f,b
 19920  015B38  0E00               	movlw	0
 19921  015B3A  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 19922  015B3C  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 19923  015B3E  0E00               	movlw	0
 19924  015B40  251D               	addwf	??___ftge& (0+255),w,b
 19925  015B42  6F17               	movwf	___ftge@ff1& (0+255),b
 19926  015B44  0E00               	movlw	0
 19927  015B46  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 19928  015B48  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 19929  015B4A  0E80               	movlw	128
 19930  015B4C  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 19931  015B4E  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 19932  015B50                     l1793:
 19933                           
 19934                           ; BSR set to: 1
 19935                           
 19936                           ; BSR set to: 1
 19937  015B50  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 19938  015B52  D016               	goto	l1794
 19939                           
 19940                           ; BSR set to: 1
 19941  015B54  C11A  F11D         	movff	___ftge@ff2,??___ftge
 19942  015B58  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 19943  015B5C  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 19944  015B60  1F1D               	comf	??___ftge& (0+255),f,b
 19945  015B62  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 19946  015B64  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 19947  015B66  2B1D               	incf	??___ftge& (0+255),f,b
 19948  015B68  0E00               	movlw	0
 19949  015B6A  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 19950  015B6C  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 19951  015B6E  0E00               	movlw	0
 19952  015B70  251D               	addwf	??___ftge& (0+255),w,b
 19953  015B72  6F1A               	movwf	___ftge@ff2& (0+255),b
 19954  015B74  0E00               	movlw	0
 19955  015B76  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 19956  015B78  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 19957  015B7A  0E80               	movlw	128
 19958  015B7C  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 19959  015B7E  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 19960  015B80                     l1794:
 19961                           
 19962                           ; BSR set to: 1
 19963                           
 19964                           ; BSR set to: 1
 19965  015B80  0E00               	movlw	0
 19966  015B82  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 19967  015B84  0E00               	movlw	0
 19968  015B86  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 19969  015B88  0E80               	movlw	128
 19970  015B8A  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 19971                           
 19972                           ; BSR set to: 1
 19973  015B8C  0E00               	movlw	0
 19974  015B8E  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 19975  015B90  0E00               	movlw	0
 19976  015B92  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 19977  015B94  0E80               	movlw	128
 19978  015B96  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 19979  015B98  511A               	movf	___ftge@ff2& (0+255),w,b
 19980  015B9A  5D17               	subwf	___ftge@ff1& (0+255),w,b
 19981  015B9C  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 19982  015B9E  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 19983  015BA0  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 19984  015BA2  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 19985  015BA4  B0D8               	btfsc	status,0,c
 19986  015BA6  D002               	goto	l9459
 19987                           
 19988                           ; BSR set to: 1
 19989  015BA8  90D8               	bcf	status,0,c
 19990  015BAA  0012               	return	
 19991  015BAC                     l9459:
 19992                           
 19993                           ; BSR set to: 1
 19994                           
 19995                           ; BSR set to: 1
 19996  015BAC  80D8               	bsf	status,0,c
 19997                           
 19998                           ; BSR set to: 1
 19999  015BAE  0012               	return	
 20000  015BB0                     __end_of___ftge:
 20001                           	opt stack 0
 20002                           tblptru	equ	0xFF8
 20003                           tblptrh	equ	0xFF7
 20004                           tblptrl	equ	0xFF6
 20005                           tablat	equ	0xFF5
 20006                           prodh	equ	0xFF4
 20007                           prodl	equ	0xFF3
 20008                           intcon	equ	0xFF2
 20009                           indf0	equ	0xFEF
 20010                           postinc0	equ	0xFEE
 20011                           fsr0h	equ	0xFEA
 20012                           fsr0l	equ	0xFE9
 20013                           wreg	equ	0xFE8
 20014                           indf1	equ	0xFE7
 20015                           postdec1	equ	0xFE5
 20016                           plusw1	equ	0xFE3
 20017                           fsr1h	equ	0xFE2
 20018                           fsr1l	equ	0xFE1
 20019                           indf2	equ	0xFDF
 20020                           postinc2	equ	0xFDE
 20021                           postdec2	equ	0xFDD
 20022                           plusw2	equ	0xFDB
 20023                           fsr2h	equ	0xFDA
 20024                           fsr2l	equ	0xFD9
 20025                           status	equ	0xFD8
 20026                           
 20027 ;; *************** function _SYSTEM_Initialize *****************
 20028 ;; Defined at:
 20029 ;;		line 50 in file "mcc_generated_files/mcc.c"
 20030 ;; Parameters:    Size  Location     Type
 20031 ;;		None
 20032 ;; Auto vars:     Size  Location     Type
 20033 ;;		None
 20034 ;; Return value:  Size  Location     Type
 20035 ;;                  1    wreg      void 
 20036 ;; Registers used:
 20037 ;;		wreg, status,2, status,0, cstack
 20038 ;; Tracked objects:
 20039 ;;		On entry : 0/0
 20040 ;;		On exit  : 0/0
 20041 ;;		Unchanged: 0/0
 20042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20047 ;;Total ram usage:        0 bytes
 20048 ;; Hardware stack levels used:    1
 20049 ;; Hardware stack levels required when called:   16
 20050 ;; This function calls:
 20051 ;;		_ADCC_Initialize
 20052 ;;		_EUSART2_Initialize
 20053 ;;		_FVR_Initialize
 20054 ;;		_INTERRUPT_Initialize
 20055 ;;		_OSCILLATOR_Initialize
 20056 ;;		_PIN_MANAGER_Initialize
 20057 ;;		_PMD_Initialize
 20058 ;;		_TMR5_Initialize
 20059 ;;		_TMR6_Initialize
 20060 ;;		_TMR7_Initialize
 20061 ;; This function is called by:
 20062 ;;		_main
 20063 ;; This function uses a non-reentrant model
 20064 ;;
 20065                           
 20066                           	psect	text55
 20067  016D3C                     __ptext55:
 20068                           	opt stack 0
 20069  016D3C                     _SYSTEM_Initialize:
 20070                           	opt stack 14
 20071                           
 20072                           ;mcc.c: 52: INTERRUPT_Initialize();
 20073                           
 20074                           ; BSR set to: 1
 20075                           ;incstack = 0
 20076  016D3C  ECE5  F0B7         	call	_INTERRUPT_Initialize	;wreg free
 20077                           
 20078                           ;mcc.c: 53: PMD_Initialize();
 20079  016D40  EC8F  F0B7         	call	_PMD_Initialize	;wreg free
 20080                           
 20081                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 20082  016D44  EC3E  F0AD         	call	_PIN_MANAGER_Initialize	;wreg free
 20083                           
 20084                           ;mcc.c: 55: OSCILLATOR_Initialize();
 20085  016D48  EC9D  F0B7         	call	_OSCILLATOR_Initialize	;wreg free
 20086                           
 20087                           ;mcc.c: 56: FVR_Initialize();
 20088  016D4C  EC50  F0B8         	call	_FVR_Initialize	;wreg free
 20089                           
 20090                           ;mcc.c: 57: TMR7_Initialize();
 20091  016D50  EC0D  F0B4         	call	_TMR7_Initialize	;wreg free
 20092                           
 20093                           ;mcc.c: 58: TMR6_Initialize();
 20094  016D54  EC6D  F0B6         	call	_TMR6_Initialize	;wreg free
 20095                           
 20096                           ;mcc.c: 59: ADCC_Initialize();
 20097  016D58  EC76  F0B2         	call	_ADCC_Initialize	;wreg free
 20098                           
 20099                           ;mcc.c: 60: TMR5_Initialize();
 20100  016D5C  EC5A  F0B4         	call	_TMR5_Initialize	;wreg free
 20101                           
 20102                           ;mcc.c: 61: EUSART2_Initialize();
 20103  016D60  ECA6  F0B1         	call	_EUSART2_Initialize	;wreg free
 20104  016D64  0012               	return		;funcret
 20105  016D66                     __end_of_SYSTEM_Initialize:
 20106                           	opt stack 0
 20107                           tblptru	equ	0xFF8
 20108                           tblptrh	equ	0xFF7
 20109                           tblptrl	equ	0xFF6
 20110                           tablat	equ	0xFF5
 20111                           prodh	equ	0xFF4
 20112                           prodl	equ	0xFF3
 20113                           intcon	equ	0xFF2
 20114                           indf0	equ	0xFEF
 20115                           postinc0	equ	0xFEE
 20116                           fsr0h	equ	0xFEA
 20117                           fsr0l	equ	0xFE9
 20118                           wreg	equ	0xFE8
 20119                           indf1	equ	0xFE7
 20120                           postdec1	equ	0xFE5
 20121                           plusw1	equ	0xFE3
 20122                           fsr1h	equ	0xFE2
 20123                           fsr1l	equ	0xFE1
 20124                           indf2	equ	0xFDF
 20125                           postinc2	equ	0xFDE
 20126                           postdec2	equ	0xFDD
 20127                           plusw2	equ	0xFDB
 20128                           fsr2h	equ	0xFDA
 20129                           fsr2l	equ	0xFD9
 20130                           status	equ	0xFD8
 20131                           
 20132 ;; *************** function _TMR7_Initialize *****************
 20133 ;; Defined at:
 20134 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 20135 ;; Parameters:    Size  Location     Type
 20136 ;;		None
 20137 ;; Auto vars:     Size  Location     Type
 20138 ;;		None
 20139 ;; Return value:  Size  Location     Type
 20140 ;;                  1    wreg      void 
 20141 ;; Registers used:
 20142 ;;		wreg, status,2, status,0, cstack
 20143 ;; Tracked objects:
 20144 ;;		On entry : 0/0
 20145 ;;		On exit  : 0/0
 20146 ;;		Unchanged: 0/0
 20147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20149 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20150 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20151 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20152 ;;Total ram usage:        2 bytes
 20153 ;; Hardware stack levels used:    1
 20154 ;; Hardware stack levels required when called:   15
 20155 ;; This function calls:
 20156 ;;		_TMR7_SetInterruptHandler
 20157 ;; This function is called by:
 20158 ;;		_SYSTEM_Initialize
 20159 ;; This function uses a non-reentrant model
 20160 ;;
 20161                           
 20162                           	psect	text56
 20163  01681A                     __ptext56:
 20164                           	opt stack 0
 20165  01681A                     _TMR7_Initialize:
 20166                           	opt stack 14
 20167                           
 20168                           ;tmr7.c: 69: T7GCON = 0x00;
 20169                           
 20170                           ;incstack = 0
 20171  01681A  0E00               	movlw	0
 20172  01681C  010F               	movlb	15	; () banked
 20173  01681E  6F31               	movwf	49,b	;volatile
 20174                           
 20175                           ;tmr7.c: 72: T7GATE = 0x00;
 20176  016820  0E00               	movlw	0
 20177  016822  6F32               	movwf	50,b	;volatile
 20178                           
 20179                           ;tmr7.c: 75: T7CLK = 0x03;
 20180  016824  0E03               	movlw	3
 20181  016826  6F33               	movwf	51,b	;volatile
 20182                           
 20183                           ;tmr7.c: 78: TMR7H = 0x3C;
 20184  016828  0E3C               	movlw	60
 20185  01682A  6F2F               	movwf	47,b	;volatile
 20186                           
 20187                           ;tmr7.c: 81: TMR7L = 0xB0;
 20188  01682C  0EB0               	movlw	176
 20189  01682E  6F2E               	movwf	46,b	;volatile
 20190                           
 20191                           ; BSR set to: 15
 20192                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 20193  016830  512E               	movf	46,w,b	;volatile
 20194  016832  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 20195  016836  0101               	movlb	1	; () banked
 20196  016838  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 20197  01683A  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 20198  01683E  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 20199  016840  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 20200  016842  6FCF               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 20201  016844  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 20202  016846  6FD0               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 20203                           
 20204                           ; BSR set to: 1
 20205                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 20206  016848  010E               	movlb	14	; () banked
 20207  01684A  9D38               	bcf	56,6,b	;volatile
 20208                           
 20209                           ; BSR set to: 14
 20210                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 20211  01684C  8D2E               	bsf	46,6,b	;volatile
 20212                           
 20213                           ; BSR set to: 14
 20214                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 20215  01684E  0EBA               	movlw	low _TMR7_DefaultInterruptHandler
 20216  016850  0101               	movlb	1	; () banked
 20217  016852  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 20218  016854  0E70               	movlw	high _TMR7_DefaultInterruptHandler
 20219  016856  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20220  016858  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 20221  01685A  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20222  01685C  EC14  F0B8         	call	_TMR7_SetInterruptHandler	;wreg free
 20223                           
 20224                           ;tmr7.c: 96: T7CON = 0x31;
 20225  016860  0E31               	movlw	49
 20226  016862  010F               	movlb	15	; () banked
 20227  016864  6F30               	movwf	48,b	;volatile
 20228                           
 20229                           ; BSR set to: 15
 20230  016866  0012               	return		;funcret
 20231  016868                     __end_of_TMR7_Initialize:
 20232                           	opt stack 0
 20233                           tblptru	equ	0xFF8
 20234                           tblptrh	equ	0xFF7
 20235                           tblptrl	equ	0xFF6
 20236                           tablat	equ	0xFF5
 20237                           prodh	equ	0xFF4
 20238                           prodl	equ	0xFF3
 20239                           intcon	equ	0xFF2
 20240                           indf0	equ	0xFEF
 20241                           postinc0	equ	0xFEE
 20242                           fsr0h	equ	0xFEA
 20243                           fsr0l	equ	0xFE9
 20244                           wreg	equ	0xFE8
 20245                           indf1	equ	0xFE7
 20246                           postdec1	equ	0xFE5
 20247                           plusw1	equ	0xFE3
 20248                           fsr1h	equ	0xFE2
 20249                           fsr1l	equ	0xFE1
 20250                           indf2	equ	0xFDF
 20251                           postinc2	equ	0xFDE
 20252                           postdec2	equ	0xFDD
 20253                           plusw2	equ	0xFDB
 20254                           fsr2h	equ	0xFDA
 20255                           fsr2l	equ	0xFD9
 20256                           status	equ	0xFD8
 20257                           
 20258 ;; *************** function _TMR7_SetInterruptHandler *****************
 20259 ;; Defined at:
 20260 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 20261 ;; Parameters:    Size  Location     Type
 20262 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20263 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 20264 ;; Auto vars:     Size  Location     Type
 20265 ;;		None
 20266 ;; Return value:  Size  Location     Type
 20267 ;;                  1    wreg      void 
 20268 ;; Registers used:
 20269 ;;		wreg, status,2, status,0
 20270 ;; Tracked objects:
 20271 ;;		On entry : 0/0
 20272 ;;		On exit  : 0/0
 20273 ;;		Unchanged: 0/0
 20274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20275 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20278 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20279 ;;Total ram usage:        3 bytes
 20280 ;; Hardware stack levels used:    1
 20281 ;; Hardware stack levels required when called:   14
 20282 ;; This function calls:
 20283 ;;		Nothing
 20284 ;; This function is called by:
 20285 ;;		_TMR7_Initialize
 20286 ;;		_main
 20287 ;; This function uses a non-reentrant model
 20288 ;;
 20289                           
 20290                           	psect	text57
 20291  017028                     __ptext57:
 20292                           	opt stack 0
 20293  017028                     _TMR7_SetInterruptHandler:
 20294                           	opt stack 16
 20295                           
 20296                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 20297                           
 20298                           ; BSR set to: 15
 20299                           ;incstack = 0
 20300  017028  C117  F1C1         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 20301  01702C  C118  F1C2         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 20302  017030  C119  F1C3         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 20303  017034  0012               	return		;funcret
 20304  017036                     __end_of_TMR7_SetInterruptHandler:
 20305                           	opt stack 0
 20306                           tblptru	equ	0xFF8
 20307                           tblptrh	equ	0xFF7
 20308                           tblptrl	equ	0xFF6
 20309                           tablat	equ	0xFF5
 20310                           prodh	equ	0xFF4
 20311                           prodl	equ	0xFF3
 20312                           intcon	equ	0xFF2
 20313                           indf0	equ	0xFEF
 20314                           postinc0	equ	0xFEE
 20315                           fsr0h	equ	0xFEA
 20316                           fsr0l	equ	0xFE9
 20317                           wreg	equ	0xFE8
 20318                           indf1	equ	0xFE7
 20319                           postdec1	equ	0xFE5
 20320                           plusw1	equ	0xFE3
 20321                           fsr1h	equ	0xFE2
 20322                           fsr1l	equ	0xFE1
 20323                           indf2	equ	0xFDF
 20324                           postinc2	equ	0xFDE
 20325                           postdec2	equ	0xFDD
 20326                           plusw2	equ	0xFDB
 20327                           fsr2h	equ	0xFDA
 20328                           fsr2l	equ	0xFD9
 20329                           status	equ	0xFD8
 20330                           
 20331 ;; *************** function _TMR6_Initialize *****************
 20332 ;; Defined at:
 20333 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 20334 ;; Parameters:    Size  Location     Type
 20335 ;;		None
 20336 ;; Auto vars:     Size  Location     Type
 20337 ;;		None
 20338 ;; Return value:  Size  Location     Type
 20339 ;;                  1    wreg      void 
 20340 ;; Registers used:
 20341 ;;		wreg, status,2, status,0, cstack
 20342 ;; Tracked objects:
 20343 ;;		On entry : 0/0
 20344 ;;		On exit  : 0/0
 20345 ;;		Unchanged: 0/0
 20346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20351 ;;Total ram usage:        0 bytes
 20352 ;; Hardware stack levels used:    1
 20353 ;; Hardware stack levels required when called:   15
 20354 ;; This function calls:
 20355 ;;		_TMR6_SetInterruptHandler
 20356 ;; This function is called by:
 20357 ;;		_SYSTEM_Initialize
 20358 ;; This function uses a non-reentrant model
 20359 ;;
 20360                           
 20361                           	psect	text58
 20362  016CDA                     __ptext58:
 20363                           	opt stack 0
 20364  016CDA                     _TMR6_Initialize:
 20365                           	opt stack 14
 20366                           
 20367                           ;tmr6.c: 69: T6CLKCON = 0x04;
 20368                           
 20369                           ;incstack = 0
 20370  016CDA  0E04               	movlw	4
 20371  016CDC  6EB3               	movwf	4019,c	;volatile
 20372                           
 20373                           ;tmr6.c: 72: T6HLT = 0x20;
 20374  016CDE  0E20               	movlw	32
 20375  016CE0  6EB2               	movwf	4018,c	;volatile
 20376                           
 20377                           ;tmr6.c: 75: T6RST = 0x00;
 20378  016CE2  0E00               	movlw	0
 20379  016CE4  6EB4               	movwf	4020,c	;volatile
 20380                           
 20381                           ;tmr6.c: 78: T6PR = 0xF1;
 20382  016CE6  0EF1               	movlw	241
 20383  016CE8  6EB0               	movwf	4016,c	;volatile
 20384                           
 20385                           ;tmr6.c: 81: T6TMR = 0x00;
 20386  016CEA  0E00               	movlw	0
 20387  016CEC  6EAF               	movwf	4015,c	;volatile
 20388                           
 20389                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 20390  016CEE  010E               	movlb	14	; () banked
 20391  016CF0  9B38               	bcf	56,5,b	;volatile
 20392                           
 20393                           ; BSR set to: 14
 20394                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 20395  016CF2  8B2E               	bsf	46,5,b	;volatile
 20396                           
 20397                           ; BSR set to: 14
 20398                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 20399  016CF4  0EBC               	movlw	low _TMR6_DefaultInterruptHandler
 20400  016CF6  0101               	movlb	1	; () banked
 20401  016CF8  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 20402  016CFA  0E70               	movlw	high _TMR6_DefaultInterruptHandler
 20403  016CFC  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20404  016CFE  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 20405  016D00  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20406  016D02  EC1B  F0B8         	call	_TMR6_SetInterruptHandler	;wreg free
 20407                           
 20408                           ;tmr6.c: 93: T6CON = 0xBF;
 20409  016D06  0EBF               	movlw	191
 20410  016D08  6EB1               	movwf	4017,c	;volatile
 20411  016D0A  0012               	return		;funcret
 20412  016D0C                     __end_of_TMR6_Initialize:
 20413                           	opt stack 0
 20414                           tblptru	equ	0xFF8
 20415                           tblptrh	equ	0xFF7
 20416                           tblptrl	equ	0xFF6
 20417                           tablat	equ	0xFF5
 20418                           prodh	equ	0xFF4
 20419                           prodl	equ	0xFF3
 20420                           intcon	equ	0xFF2
 20421                           indf0	equ	0xFEF
 20422                           postinc0	equ	0xFEE
 20423                           fsr0h	equ	0xFEA
 20424                           fsr0l	equ	0xFE9
 20425                           wreg	equ	0xFE8
 20426                           indf1	equ	0xFE7
 20427                           postdec1	equ	0xFE5
 20428                           plusw1	equ	0xFE3
 20429                           fsr1h	equ	0xFE2
 20430                           fsr1l	equ	0xFE1
 20431                           indf2	equ	0xFDF
 20432                           postinc2	equ	0xFDE
 20433                           postdec2	equ	0xFDD
 20434                           plusw2	equ	0xFDB
 20435                           fsr2h	equ	0xFDA
 20436                           fsr2l	equ	0xFD9
 20437                           status	equ	0xFD8
 20438                           
 20439 ;; *************** function _TMR6_SetInterruptHandler *****************
 20440 ;; Defined at:
 20441 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 20442 ;; Parameters:    Size  Location     Type
 20443 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20444 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 20445 ;; Auto vars:     Size  Location     Type
 20446 ;;		None
 20447 ;; Return value:  Size  Location     Type
 20448 ;;                  1    wreg      void 
 20449 ;; Registers used:
 20450 ;;		wreg, status,2, status,0
 20451 ;; Tracked objects:
 20452 ;;		On entry : 0/0
 20453 ;;		On exit  : 0/0
 20454 ;;		Unchanged: 0/0
 20455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20456 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20459 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20460 ;;Total ram usage:        3 bytes
 20461 ;; Hardware stack levels used:    1
 20462 ;; Hardware stack levels required when called:   14
 20463 ;; This function calls:
 20464 ;;		Nothing
 20465 ;; This function is called by:
 20466 ;;		_TMR6_Initialize
 20467 ;;		_main
 20468 ;; This function uses a non-reentrant model
 20469 ;;
 20470                           
 20471                           	psect	text59
 20472  017036                     __ptext59:
 20473                           	opt stack 0
 20474  017036                     _TMR6_SetInterruptHandler:
 20475                           	opt stack 16
 20476                           
 20477                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 20478                           
 20479                           ;incstack = 0
 20480  017036  C117  F1C4         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 20481  01703A  C118  F1C5         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 20482  01703E  C119  F1C6         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 20483  017042  0012               	return		;funcret
 20484  017044                     __end_of_TMR6_SetInterruptHandler:
 20485                           	opt stack 0
 20486                           tblptru	equ	0xFF8
 20487                           tblptrh	equ	0xFF7
 20488                           tblptrl	equ	0xFF6
 20489                           tablat	equ	0xFF5
 20490                           prodh	equ	0xFF4
 20491                           prodl	equ	0xFF3
 20492                           intcon	equ	0xFF2
 20493                           indf0	equ	0xFEF
 20494                           postinc0	equ	0xFEE
 20495                           fsr0h	equ	0xFEA
 20496                           fsr0l	equ	0xFE9
 20497                           wreg	equ	0xFE8
 20498                           indf1	equ	0xFE7
 20499                           postdec1	equ	0xFE5
 20500                           plusw1	equ	0xFE3
 20501                           fsr1h	equ	0xFE2
 20502                           fsr1l	equ	0xFE1
 20503                           indf2	equ	0xFDF
 20504                           postinc2	equ	0xFDE
 20505                           postdec2	equ	0xFDD
 20506                           plusw2	equ	0xFDB
 20507                           fsr2h	equ	0xFDA
 20508                           fsr2l	equ	0xFD9
 20509                           status	equ	0xFD8
 20510                           
 20511 ;; *************** function _TMR5_Initialize *****************
 20512 ;; Defined at:
 20513 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 20514 ;; Parameters:    Size  Location     Type
 20515 ;;		None
 20516 ;; Auto vars:     Size  Location     Type
 20517 ;;		None
 20518 ;; Return value:  Size  Location     Type
 20519 ;;                  1    wreg      void 
 20520 ;; Registers used:
 20521 ;;		wreg, status,2, status,0, cstack
 20522 ;; Tracked objects:
 20523 ;;		On entry : 0/0
 20524 ;;		On exit  : 0/0
 20525 ;;		Unchanged: 0/0
 20526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20529 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20530 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20531 ;;Total ram usage:        2 bytes
 20532 ;; Hardware stack levels used:    1
 20533 ;; Hardware stack levels required when called:   15
 20534 ;; This function calls:
 20535 ;;		_TMR5_SetInterruptHandler
 20536 ;; This function is called by:
 20537 ;;		_SYSTEM_Initialize
 20538 ;; This function uses a non-reentrant model
 20539 ;;
 20540                           
 20541                           	psect	text60
 20542  0168B4                     __ptext60:
 20543                           	opt stack 0
 20544  0168B4                     _TMR5_Initialize:
 20545                           	opt stack 14
 20546                           
 20547                           ;tmr5.c: 69: T5GCON = 0x00;
 20548                           
 20549                           ;incstack = 0
 20550  0168B4  0E00               	movlw	0
 20551  0168B6  6EC4               	movwf	4036,c	;volatile
 20552                           
 20553                           ;tmr5.c: 72: T5GATE = 0x00;
 20554  0168B8  0E00               	movlw	0
 20555  0168BA  6EC5               	movwf	4037,c	;volatile
 20556                           
 20557                           ;tmr5.c: 75: T5CLK = 0x01;
 20558  0168BC  0E01               	movlw	1
 20559  0168BE  6EC6               	movwf	4038,c	;volatile
 20560                           
 20561                           ;tmr5.c: 78: TMR5H = 0x00;
 20562  0168C0  0E00               	movlw	0
 20563  0168C2  6EC2               	movwf	4034,c	;volatile
 20564                           
 20565                           ;tmr5.c: 81: TMR5L = 0x00;
 20566  0168C4  0E00               	movlw	0
 20567  0168C6  6EC1               	movwf	4033,c	;volatile
 20568                           
 20569                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 20570  0168C8  50C1               	movf	4033,w,c	;volatile
 20571  0168CA  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 20572  0168CE  0101               	movlb	1	; () banked
 20573  0168D0  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 20574  0168D2  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 20575  0168D6  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 20576  0168D8  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 20577  0168DA  6FCD               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 20578  0168DC  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 20579  0168DE  6FCE               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 20580                           
 20581                           ; BSR set to: 1
 20582                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 20583  0168E0  010E               	movlb	14	; () banked
 20584  0168E2  9938               	bcf	56,4,b	;volatile
 20585                           
 20586                           ; BSR set to: 14
 20587                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 20588  0168E4  892E               	bsf	46,4,b	;volatile
 20589                           
 20590                           ; BSR set to: 14
 20591                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 20592  0168E6  0EBE               	movlw	low _TMR5_DefaultInterruptHandler
 20593  0168E8  0101               	movlb	1	; () banked
 20594  0168EA  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 20595  0168EC  0E70               	movlw	high _TMR5_DefaultInterruptHandler
 20596  0168EE  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 20597  0168F0  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 20598  0168F2  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 20599  0168F4  EC22  F0B8         	call	_TMR5_SetInterruptHandler	;wreg free
 20600                           
 20601                           ;tmr5.c: 96: T5CON = 0x13;
 20602  0168F8  0E13               	movlw	19
 20603  0168FA  6EC3               	movwf	4035,c	;volatile
 20604  0168FC  0012               	return		;funcret
 20605  0168FE                     __end_of_TMR5_Initialize:
 20606                           	opt stack 0
 20607                           tblptru	equ	0xFF8
 20608                           tblptrh	equ	0xFF7
 20609                           tblptrl	equ	0xFF6
 20610                           tablat	equ	0xFF5
 20611                           prodh	equ	0xFF4
 20612                           prodl	equ	0xFF3
 20613                           intcon	equ	0xFF2
 20614                           indf0	equ	0xFEF
 20615                           postinc0	equ	0xFEE
 20616                           fsr0h	equ	0xFEA
 20617                           fsr0l	equ	0xFE9
 20618                           wreg	equ	0xFE8
 20619                           indf1	equ	0xFE7
 20620                           postdec1	equ	0xFE5
 20621                           plusw1	equ	0xFE3
 20622                           fsr1h	equ	0xFE2
 20623                           fsr1l	equ	0xFE1
 20624                           indf2	equ	0xFDF
 20625                           postinc2	equ	0xFDE
 20626                           postdec2	equ	0xFDD
 20627                           plusw2	equ	0xFDB
 20628                           fsr2h	equ	0xFDA
 20629                           fsr2l	equ	0xFD9
 20630                           status	equ	0xFD8
 20631                           
 20632 ;; *************** function _TMR5_SetInterruptHandler *****************
 20633 ;; Defined at:
 20634 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 20635 ;; Parameters:    Size  Location     Type
 20636 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 20637 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 20638 ;; Auto vars:     Size  Location     Type
 20639 ;;		None
 20640 ;; Return value:  Size  Location     Type
 20641 ;;                  1    wreg      void 
 20642 ;; Registers used:
 20643 ;;		wreg, status,2, status,0
 20644 ;; Tracked objects:
 20645 ;;		On entry : 0/0
 20646 ;;		On exit  : 0/0
 20647 ;;		Unchanged: 0/0
 20648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20649 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20652 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20653 ;;Total ram usage:        3 bytes
 20654 ;; Hardware stack levels used:    1
 20655 ;; Hardware stack levels required when called:   14
 20656 ;; This function calls:
 20657 ;;		Nothing
 20658 ;; This function is called by:
 20659 ;;		_TMR5_Initialize
 20660 ;; This function uses a non-reentrant model
 20661 ;;
 20662                           
 20663                           	psect	text61
 20664  017044                     __ptext61:
 20665                           	opt stack 0
 20666  017044                     _TMR5_SetInterruptHandler:
 20667                           	opt stack 14
 20668                           
 20669                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 20670                           
 20671                           ;incstack = 0
 20672  017044  C117  F1BE         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 20673  017048  C118  F1BF         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 20674  01704C  C119  F1C0         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 20675  017050  0012               	return		;funcret
 20676  017052                     __end_of_TMR5_SetInterruptHandler:
 20677                           	opt stack 0
 20678                           tblptru	equ	0xFF8
 20679                           tblptrh	equ	0xFF7
 20680                           tblptrl	equ	0xFF6
 20681                           tablat	equ	0xFF5
 20682                           prodh	equ	0xFF4
 20683                           prodl	equ	0xFF3
 20684                           intcon	equ	0xFF2
 20685                           indf0	equ	0xFEF
 20686                           postinc0	equ	0xFEE
 20687                           fsr0h	equ	0xFEA
 20688                           fsr0l	equ	0xFE9
 20689                           wreg	equ	0xFE8
 20690                           indf1	equ	0xFE7
 20691                           postdec1	equ	0xFE5
 20692                           plusw1	equ	0xFE3
 20693                           fsr1h	equ	0xFE2
 20694                           fsr1l	equ	0xFE1
 20695                           indf2	equ	0xFDF
 20696                           postinc2	equ	0xFDE
 20697                           postdec2	equ	0xFDD
 20698                           plusw2	equ	0xFDB
 20699                           fsr2h	equ	0xFDA
 20700                           fsr2l	equ	0xFD9
 20701                           status	equ	0xFD8
 20702                           
 20703 ;; *************** function _PMD_Initialize *****************
 20704 ;; Defined at:
 20705 ;;		line 82 in file "mcc_generated_files/mcc.c"
 20706 ;; Parameters:    Size  Location     Type
 20707 ;;		None
 20708 ;; Auto vars:     Size  Location     Type
 20709 ;;		None
 20710 ;; Return value:  Size  Location     Type
 20711 ;;                  1    wreg      void 
 20712 ;; Registers used:
 20713 ;;		wreg, status,2
 20714 ;; Tracked objects:
 20715 ;;		On entry : 0/0
 20716 ;;		On exit  : 0/0
 20717 ;;		Unchanged: 0/0
 20718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20723 ;;Total ram usage:        0 bytes
 20724 ;; Hardware stack levels used:    1
 20725 ;; Hardware stack levels required when called:   14
 20726 ;; This function calls:
 20727 ;;		Nothing
 20728 ;; This function is called by:
 20729 ;;		_SYSTEM_Initialize
 20730 ;; This function uses a non-reentrant model
 20731 ;;
 20732                           
 20733                           	psect	text62
 20734  016F1E                     __ptext62:
 20735                           	opt stack 0
 20736  016F1E                     _PMD_Initialize:
 20737                           	opt stack 15
 20738                           
 20739                           ;mcc.c: 85: PMD0 = 0x00;
 20740                           
 20741                           ;incstack = 0
 20742  016F1E  0E00               	movlw	0
 20743  016F20  010E               	movlb	14	; () banked
 20744  016F22  6F4C               	movwf	76,b	;volatile
 20745                           
 20746                           ;mcc.c: 87: PMD1 = 0x00;
 20747  016F24  0E00               	movlw	0
 20748  016F26  6F4D               	movwf	77,b	;volatile
 20749                           
 20750                           ;mcc.c: 89: PMD2 = 0x00;
 20751  016F28  0E00               	movlw	0
 20752  016F2A  6F4E               	movwf	78,b	;volatile
 20753                           
 20754                           ;mcc.c: 91: PMD3 = 0x00;
 20755  016F2C  0E00               	movlw	0
 20756  016F2E  6F4F               	movwf	79,b	;volatile
 20757                           
 20758                           ;mcc.c: 93: PMD4 = 0x00;
 20759  016F30  0E00               	movlw	0
 20760  016F32  6F50               	movwf	80,b	;volatile
 20761                           
 20762                           ;mcc.c: 95: PMD5 = 0x00;
 20763  016F34  0E00               	movlw	0
 20764  016F36  6F51               	movwf	81,b	;volatile
 20765                           
 20766                           ; BSR set to: 14
 20767  016F38  0012               	return		;funcret
 20768  016F3A                     __end_of_PMD_Initialize:
 20769                           	opt stack 0
 20770                           tblptru	equ	0xFF8
 20771                           tblptrh	equ	0xFF7
 20772                           tblptrl	equ	0xFF6
 20773                           tablat	equ	0xFF5
 20774                           prodh	equ	0xFF4
 20775                           prodl	equ	0xFF3
 20776                           intcon	equ	0xFF2
 20777                           indf0	equ	0xFEF
 20778                           postinc0	equ	0xFEE
 20779                           fsr0h	equ	0xFEA
 20780                           fsr0l	equ	0xFE9
 20781                           wreg	equ	0xFE8
 20782                           indf1	equ	0xFE7
 20783                           postdec1	equ	0xFE5
 20784                           plusw1	equ	0xFE3
 20785                           fsr1h	equ	0xFE2
 20786                           fsr1l	equ	0xFE1
 20787                           indf2	equ	0xFDF
 20788                           postinc2	equ	0xFDE
 20789                           postdec2	equ	0xFDD
 20790                           plusw2	equ	0xFDB
 20791                           fsr2h	equ	0xFDA
 20792                           fsr2l	equ	0xFD9
 20793                           status	equ	0xFD8
 20794                           
 20795 ;; *************** function _PIN_MANAGER_Initialize *****************
 20796 ;; Defined at:
 20797 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 20798 ;; Parameters:    Size  Location     Type
 20799 ;;		None
 20800 ;; Auto vars:     Size  Location     Type
 20801 ;;		None
 20802 ;; Return value:  Size  Location     Type
 20803 ;;                  1    wreg      void 
 20804 ;; Registers used:
 20805 ;;		wreg, status,2
 20806 ;; Tracked objects:
 20807 ;;		On entry : 0/0
 20808 ;;		On exit  : 0/0
 20809 ;;		Unchanged: 0/0
 20810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20815 ;;Total ram usage:        0 bytes
 20816 ;; Hardware stack levels used:    1
 20817 ;; Hardware stack levels required when called:   14
 20818 ;; This function calls:
 20819 ;;		Nothing
 20820 ;; This function is called by:
 20821 ;;		_SYSTEM_Initialize
 20822 ;; This function uses a non-reentrant model
 20823 ;;
 20824                           
 20825                           	psect	text63
 20826  015A7C                     __ptext63:
 20827                           	opt stack 0
 20828  015A7C                     _PIN_MANAGER_Initialize:
 20829                           	opt stack 15
 20830                           
 20831                           ;pin_manager.c: 62: LATE = 0x00;
 20832                           
 20833                           ; BSR set to: 14
 20834                           ;incstack = 0
 20835  015A7C  0E00               	movlw	0
 20836  015A7E  6E7D               	movwf	3965,c	;volatile
 20837                           
 20838                           ;pin_manager.c: 63: LATD = 0x00;
 20839  015A80  0E00               	movlw	0
 20840  015A82  6E7C               	movwf	3964,c	;volatile
 20841                           
 20842                           ;pin_manager.c: 64: LATA = 0x00;
 20843  015A84  0E00               	movlw	0
 20844  015A86  6E79               	movwf	3961,c	;volatile
 20845                           
 20846                           ;pin_manager.c: 65: LATF = 0x00;
 20847  015A88  0E00               	movlw	0
 20848  015A8A  6E7E               	movwf	3966,c	;volatile
 20849                           
 20850                           ;pin_manager.c: 66: LATB = 0x00;
 20851  015A8C  0E00               	movlw	0
 20852  015A8E  6E7A               	movwf	3962,c	;volatile
 20853                           
 20854                           ;pin_manager.c: 67: LATG = 0x00;
 20855  015A90  0E00               	movlw	0
 20856  015A92  6E7F               	movwf	3967,c	;volatile
 20857                           
 20858                           ;pin_manager.c: 68: LATC = 0x00;
 20859  015A94  0E00               	movlw	0
 20860  015A96  6E7B               	movwf	3963,c	;volatile
 20861                           
 20862                           ;pin_manager.c: 69: LATH = 0x00;
 20863  015A98  0E00               	movlw	0
 20864  015A9A  6E80               	movwf	3968,c	;volatile
 20865                           
 20866                           ;pin_manager.c: 74: TRISE = 0xFF;
 20867  015A9C  6885               	setf	3973,c	;volatile
 20868                           
 20869                           ;pin_manager.c: 75: TRISF = 0xF0;
 20870  015A9E  0EF0               	movlw	240
 20871  015AA0  6E86               	movwf	3974,c	;volatile
 20872                           
 20873                           ;pin_manager.c: 76: TRISA = 0xFF;
 20874  015AA2  6881               	setf	3969,c	;volatile
 20875                           
 20876                           ;pin_manager.c: 77: TRISG = 0x5C;
 20877  015AA4  0E5C               	movlw	92
 20878  015AA6  6E87               	movwf	3975,c	;volatile
 20879                           
 20880                           ;pin_manager.c: 78: TRISB = 0xFF;
 20881  015AA8  6882               	setf	3970,c	;volatile
 20882                           
 20883                           ;pin_manager.c: 79: TRISH = 0x0F;
 20884  015AAA  0E0F               	movlw	15
 20885  015AAC  6E88               	movwf	3976,c	;volatile
 20886                           
 20887                           ;pin_manager.c: 80: TRISC = 0xFF;
 20888  015AAE  6883               	setf	3971,c	;volatile
 20889                           
 20890                           ;pin_manager.c: 81: TRISD = 0xFF;
 20891  015AB0  6884               	setf	3972,c	;volatile
 20892                           
 20893                           ;pin_manager.c: 86: ANSELD = 0xFF;
 20894  015AB2  010E               	movlb	14	; () banked
 20895  015AB4  69A7               	setf	167,b	;volatile
 20896                           
 20897                           ; BSR set to: 14
 20898                           ;pin_manager.c: 87: ANSELB = 0xFF;
 20899  015AB6  699A               	setf	154,b	;volatile
 20900                           
 20901                           ; BSR set to: 14
 20902                           ;pin_manager.c: 88: ANSELE = 0xFF;
 20903  015AB8  69AF               	setf	175,b	;volatile
 20904                           
 20905                           ;pin_manager.c: 89: ANSELG = 0x3C;
 20906  015ABA  0E3C               	movlw	60
 20907  015ABC  6FBC               	movwf	188,b	;volatile
 20908                           
 20909                           ;pin_manager.c: 90: ANSELF = 0xF0;
 20910  015ABE  0EF0               	movlw	240
 20911  015AC0  6FB4               	movwf	180,b	;volatile
 20912                           
 20913                           ; BSR set to: 14
 20914                           ;pin_manager.c: 91: ANSELA = 0xFF;
 20915  015AC2  6992               	setf	146,b	;volatile
 20916                           
 20917                           ;pin_manager.c: 96: WPUD = 0x00;
 20918  015AC4  0E00               	movlw	0
 20919  015AC6  6FA6               	movwf	166,b	;volatile
 20920                           
 20921                           ;pin_manager.c: 97: WPUF = 0x00;
 20922  015AC8  0E00               	movlw	0
 20923  015ACA  6FB3               	movwf	179,b	;volatile
 20924                           
 20925                           ;pin_manager.c: 98: WPUE = 0x00;
 20926  015ACC  0E00               	movlw	0
 20927  015ACE  6FAE               	movwf	174,b	;volatile
 20928                           
 20929                           ;pin_manager.c: 99: WPUB = 0x00;
 20930  015AD0  0E00               	movlw	0
 20931  015AD2  6F99               	movwf	153,b	;volatile
 20932                           
 20933                           ;pin_manager.c: 100: WPUG = 0x00;
 20934  015AD4  0E00               	movlw	0
 20935  015AD6  6FBB               	movwf	187,b	;volatile
 20936                           
 20937                           ;pin_manager.c: 101: WPUA = 0x00;
 20938  015AD8  0E00               	movlw	0
 20939  015ADA  6F91               	movwf	145,b	;volatile
 20940                           
 20941                           ;pin_manager.c: 102: WPUC = 0x00;
 20942  015ADC  0E00               	movlw	0
 20943  015ADE  6FA1               	movwf	161,b	;volatile
 20944                           
 20945                           ;pin_manager.c: 103: WPUH = 0x00;
 20946  015AE0  0E00               	movlw	0
 20947  015AE2  6FC0               	movwf	192,b	;volatile
 20948                           
 20949                           ;pin_manager.c: 108: ODCONE = 0x00;
 20950  015AE4  0E00               	movlw	0
 20951  015AE6  6FAD               	movwf	173,b	;volatile
 20952                           
 20953                           ;pin_manager.c: 109: ODCONF = 0x01;
 20954  015AE8  0E01               	movlw	1
 20955  015AEA  6FB2               	movwf	178,b	;volatile
 20956                           
 20957                           ;pin_manager.c: 110: ODCONA = 0x00;
 20958  015AEC  0E00               	movlw	0
 20959  015AEE  6F90               	movwf	144,b	;volatile
 20960                           
 20961                           ;pin_manager.c: 111: ODCONG = 0x00;
 20962  015AF0  0E00               	movlw	0
 20963  015AF2  6FBA               	movwf	186,b	;volatile
 20964                           
 20965                           ;pin_manager.c: 112: ODCONB = 0x00;
 20966  015AF4  0E00               	movlw	0
 20967  015AF6  6F98               	movwf	152,b	;volatile
 20968                           
 20969                           ;pin_manager.c: 113: ODCONH = 0x00;
 20970  015AF8  0E00               	movlw	0
 20971  015AFA  6FBF               	movwf	191,b	;volatile
 20972                           
 20973                           ;pin_manager.c: 114: ODCONC = 0x00;
 20974  015AFC  0E00               	movlw	0
 20975  015AFE  6FA0               	movwf	160,b	;volatile
 20976                           
 20977                           ;pin_manager.c: 115: ODCOND = 0x00;
 20978  015B00  0E00               	movlw	0
 20979  015B02  6FA5               	movwf	165,b	;volatile
 20980                           
 20981                           ; BSR set to: 14
 20982                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 20983  015B04  698F               	setf	143,b	;volatile
 20984                           
 20985                           ; BSR set to: 14
 20986                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 20987  015B06  6997               	setf	151,b	;volatile
 20988                           
 20989                           ; BSR set to: 14
 20990                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 20991  015B08  699F               	setf	159,b	;volatile
 20992                           
 20993                           ; BSR set to: 14
 20994                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 20995  015B0A  69A4               	setf	164,b	;volatile
 20996                           
 20997                           ; BSR set to: 14
 20998                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 20999  015B0C  69AC               	setf	172,b	;volatile
 21000                           
 21001                           ; BSR set to: 14
 21002                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 21003  015B0E  69B1               	setf	177,b	;volatile
 21004                           
 21005                           ; BSR set to: 14
 21006                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 21007  015B10  69B9               	setf	185,b	;volatile
 21008                           
 21009                           ; BSR set to: 14
 21010                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 21011  015B12  69BE               	setf	190,b	;volatile
 21012                           
 21013                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 21014  015B14  0E0E               	movlw	14
 21015  015B16  6F89               	movwf	137,b	;volatile
 21016                           
 21017                           ;pin_manager.c: 137: RX2PPS = 0x36;
 21018  015B18  0E36               	movlw	54
 21019  015B1A  6F11               	movwf	17,b	;volatile
 21020                           
 21021                           ; BSR set to: 14
 21022  015B1C  0012               	return		;funcret
 21023  015B1E                     __end_of_PIN_MANAGER_Initialize:
 21024                           	opt stack 0
 21025                           tblptru	equ	0xFF8
 21026                           tblptrh	equ	0xFF7
 21027                           tblptrl	equ	0xFF6
 21028                           tablat	equ	0xFF5
 21029                           prodh	equ	0xFF4
 21030                           prodl	equ	0xFF3
 21031                           intcon	equ	0xFF2
 21032                           indf0	equ	0xFEF
 21033                           postinc0	equ	0xFEE
 21034                           fsr0h	equ	0xFEA
 21035                           fsr0l	equ	0xFE9
 21036                           wreg	equ	0xFE8
 21037                           indf1	equ	0xFE7
 21038                           postdec1	equ	0xFE5
 21039                           plusw1	equ	0xFE3
 21040                           fsr1h	equ	0xFE2
 21041                           fsr1l	equ	0xFE1
 21042                           indf2	equ	0xFDF
 21043                           postinc2	equ	0xFDE
 21044                           postdec2	equ	0xFDD
 21045                           plusw2	equ	0xFDB
 21046                           fsr2h	equ	0xFDA
 21047                           fsr2l	equ	0xFD9
 21048                           status	equ	0xFD8
 21049                           
 21050 ;; *************** function _OSCILLATOR_Initialize *****************
 21051 ;; Defined at:
 21052 ;;		line 64 in file "mcc_generated_files/mcc.c"
 21053 ;; Parameters:    Size  Location     Type
 21054 ;;		None
 21055 ;; Auto vars:     Size  Location     Type
 21056 ;;		None
 21057 ;; Return value:  Size  Location     Type
 21058 ;;                  1    wreg      void 
 21059 ;; Registers used:
 21060 ;;		wreg, status,2
 21061 ;; Tracked objects:
 21062 ;;		On entry : 0/0
 21063 ;;		On exit  : 0/0
 21064 ;;		Unchanged: 0/0
 21065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21070 ;;Total ram usage:        0 bytes
 21071 ;; Hardware stack levels used:    1
 21072 ;; Hardware stack levels required when called:   14
 21073 ;; This function calls:
 21074 ;;		Nothing
 21075 ;; This function is called by:
 21076 ;;		_SYSTEM_Initialize
 21077 ;; This function uses a non-reentrant model
 21078 ;;
 21079                           
 21080                           	psect	text64
 21081  016F3A                     __ptext64:
 21082                           	opt stack 0
 21083  016F3A                     _OSCILLATOR_Initialize:
 21084                           	opt stack 15
 21085                           
 21086                           ;mcc.c: 67: OSCCON1 = 0x20;
 21087                           
 21088                           ; BSR set to: 14
 21089                           ;incstack = 0
 21090  016F3A  0E20               	movlw	32
 21091  016F3C  010E               	movlb	14	; () banked
 21092  016F3E  6F43               	movwf	67,b	;volatile
 21093                           
 21094                           ;mcc.c: 69: OSCCON3 = 0x00;
 21095  016F40  0E00               	movlw	0
 21096  016F42  6F45               	movwf	69,b	;volatile
 21097                           
 21098                           ;mcc.c: 71: OSCEN = 0x00;
 21099  016F44  0E00               	movlw	0
 21100  016F46  6F47               	movwf	71,b	;volatile
 21101                           
 21102                           ;mcc.c: 73: OSCFRQ = 0x02;
 21103  016F48  0E02               	movlw	2
 21104  016F4A  6F49               	movwf	73,b	;volatile
 21105                           
 21106                           ;mcc.c: 75: OSCTUNE = 0x00;
 21107  016F4C  0E00               	movlw	0
 21108  016F4E  6F48               	movwf	72,b	;volatile
 21109  016F50                     
 21110                           ; BSR set to: 14
 21111                           
 21112                           ; BSR set to: 14
 21113                           ;mcc.c: 78: {
 21114  016F50  B146               	btfsc	70,0,b	;volatile
 21115  016F52  0012               	return	
 21116  016F54  D7FD               	goto	l55
 21117  016F56                     __end_of_OSCILLATOR_Initialize:
 21118                           	opt stack 0
 21119                           tblptru	equ	0xFF8
 21120                           tblptrh	equ	0xFF7
 21121                           tblptrl	equ	0xFF6
 21122                           tablat	equ	0xFF5
 21123                           prodh	equ	0xFF4
 21124                           prodl	equ	0xFF3
 21125                           intcon	equ	0xFF2
 21126                           indf0	equ	0xFEF
 21127                           postinc0	equ	0xFEE
 21128                           fsr0h	equ	0xFEA
 21129                           fsr0l	equ	0xFE9
 21130                           wreg	equ	0xFE8
 21131                           indf1	equ	0xFE7
 21132                           postdec1	equ	0xFE5
 21133                           plusw1	equ	0xFE3
 21134                           fsr1h	equ	0xFE2
 21135                           fsr1l	equ	0xFE1
 21136                           indf2	equ	0xFDF
 21137                           postinc2	equ	0xFDE
 21138                           postdec2	equ	0xFDD
 21139                           plusw2	equ	0xFDB
 21140                           fsr2h	equ	0xFDA
 21141                           fsr2l	equ	0xFD9
 21142                           status	equ	0xFD8
 21143                           
 21144 ;; *************** function _INTERRUPT_Initialize *****************
 21145 ;; Defined at:
 21146 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 21147 ;; Parameters:    Size  Location     Type
 21148 ;;		None
 21149 ;; Auto vars:     Size  Location     Type
 21150 ;;		None
 21151 ;; Return value:  Size  Location     Type
 21152 ;;                  1    wreg      void 
 21153 ;; Registers used:
 21154 ;;		None
 21155 ;; Tracked objects:
 21156 ;;		On entry : 0/0
 21157 ;;		On exit  : 0/0
 21158 ;;		Unchanged: 0/0
 21159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21164 ;;Total ram usage:        0 bytes
 21165 ;; Hardware stack levels used:    1
 21166 ;; Hardware stack levels required when called:   14
 21167 ;; This function calls:
 21168 ;;		Nothing
 21169 ;; This function is called by:
 21170 ;;		_SYSTEM_Initialize
 21171 ;; This function uses a non-reentrant model
 21172 ;;
 21173                           
 21174                           	psect	text65
 21175  016FCA                     __ptext65:
 21176                           	opt stack 0
 21177  016FCA                     _INTERRUPT_Initialize:
 21178                           	opt stack 15
 21179                           
 21180                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 21181                           
 21182                           ; BSR set to: 14
 21183                           ;incstack = 0
 21184  016FCA  8AF2               	bsf	intcon,5,c	;volatile
 21185                           
 21186                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 21187  016FCC  010E               	movlb	14	; () banked
 21188  016FCE  8F22               	bsf	34,7,b	;volatile
 21189                           
 21190                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 21191  016FD0  8924               	bsf	36,4,b	;volatile
 21192                           
 21193                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 21194  016FD2  8120               	bsf	32,0,b	;volatile
 21195                           
 21196                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 21197  016FD4  9B24               	bcf	36,5,b	;volatile
 21198                           
 21199                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 21200  016FD6  9D22               	bcf	34,6,b	;volatile
 21201                           
 21202                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 21203  016FD8  9D24               	bcf	36,6,b	;volatile
 21204                           
 21205                           ; BSR set to: 14
 21206  016FDA  0012               	return		;funcret
 21207  016FDC                     __end_of_INTERRUPT_Initialize:
 21208                           	opt stack 0
 21209                           tblptru	equ	0xFF8
 21210                           tblptrh	equ	0xFF7
 21211                           tblptrl	equ	0xFF6
 21212                           tablat	equ	0xFF5
 21213                           prodh	equ	0xFF4
 21214                           prodl	equ	0xFF3
 21215                           intcon	equ	0xFF2
 21216                           indf0	equ	0xFEF
 21217                           postinc0	equ	0xFEE
 21218                           fsr0h	equ	0xFEA
 21219                           fsr0l	equ	0xFE9
 21220                           wreg	equ	0xFE8
 21221                           indf1	equ	0xFE7
 21222                           postdec1	equ	0xFE5
 21223                           plusw1	equ	0xFE3
 21224                           fsr1h	equ	0xFE2
 21225                           fsr1l	equ	0xFE1
 21226                           indf2	equ	0xFDF
 21227                           postinc2	equ	0xFDE
 21228                           postdec2	equ	0xFDD
 21229                           plusw2	equ	0xFDB
 21230                           fsr2h	equ	0xFDA
 21231                           fsr2l	equ	0xFD9
 21232                           status	equ	0xFD8
 21233                           
 21234 ;; *************** function _FVR_Initialize *****************
 21235 ;; Defined at:
 21236 ;;		line 58 in file "mcc_generated_files/fvr.c"
 21237 ;; Parameters:    Size  Location     Type
 21238 ;;		None
 21239 ;; Auto vars:     Size  Location     Type
 21240 ;;		None
 21241 ;; Return value:  Size  Location     Type
 21242 ;;                  1    wreg      void 
 21243 ;; Registers used:
 21244 ;;		wreg, status,2
 21245 ;; Tracked objects:
 21246 ;;		On entry : 0/0
 21247 ;;		On exit  : 0/0
 21248 ;;		Unchanged: 0/0
 21249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21254 ;;Total ram usage:        0 bytes
 21255 ;; Hardware stack levels used:    1
 21256 ;; Hardware stack levels required when called:   14
 21257 ;; This function calls:
 21258 ;;		Nothing
 21259 ;; This function is called by:
 21260 ;;		_SYSTEM_Initialize
 21261 ;; This function uses a non-reentrant model
 21262 ;;
 21263                           
 21264                           	psect	text66
 21265  0170A0                     __ptext66:
 21266                           	opt stack 0
 21267  0170A0                     _FVR_Initialize:
 21268                           	opt stack 15
 21269                           
 21270                           ;fvr.c: 61: FVRCON = 0xA6;
 21271                           
 21272                           ; BSR set to: 14
 21273                           ;incstack = 0
 21274  0170A0  0EA6               	movlw	166
 21275  0170A2  010E               	movlb	14	; () banked
 21276  0170A4  6FC4               	movwf	196,b	;volatile
 21277                           
 21278                           ; BSR set to: 14
 21279  0170A6  0012               	return		;funcret
 21280  0170A8                     __end_of_FVR_Initialize:
 21281                           	opt stack 0
 21282                           tblptru	equ	0xFF8
 21283                           tblptrh	equ	0xFF7
 21284                           tblptrl	equ	0xFF6
 21285                           tablat	equ	0xFF5
 21286                           prodh	equ	0xFF4
 21287                           prodl	equ	0xFF3
 21288                           intcon	equ	0xFF2
 21289                           indf0	equ	0xFEF
 21290                           postinc0	equ	0xFEE
 21291                           fsr0h	equ	0xFEA
 21292                           fsr0l	equ	0xFE9
 21293                           wreg	equ	0xFE8
 21294                           indf1	equ	0xFE7
 21295                           postdec1	equ	0xFE5
 21296                           plusw1	equ	0xFE3
 21297                           fsr1h	equ	0xFE2
 21298                           fsr1l	equ	0xFE1
 21299                           indf2	equ	0xFDF
 21300                           postinc2	equ	0xFDE
 21301                           postdec2	equ	0xFDD
 21302                           plusw2	equ	0xFDB
 21303                           fsr2h	equ	0xFDA
 21304                           fsr2l	equ	0xFD9
 21305                           status	equ	0xFD8
 21306                           
 21307 ;; *************** function _EUSART2_Initialize *****************
 21308 ;; Defined at:
 21309 ;;		line 79 in file "mcc_generated_files/eusart2.c"
 21310 ;; Parameters:    Size  Location     Type
 21311 ;;		None
 21312 ;; Auto vars:     Size  Location     Type
 21313 ;;		None
 21314 ;; Return value:  Size  Location     Type
 21315 ;;                  1    wreg      void 
 21316 ;; Registers used:
 21317 ;;		wreg, status,2, status,0, cstack
 21318 ;; Tracked objects:
 21319 ;;		On entry : 0/0
 21320 ;;		On exit  : 0/0
 21321 ;;		Unchanged: 0/0
 21322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21327 ;;Total ram usage:        0 bytes
 21328 ;; Hardware stack levels used:    1
 21329 ;; Hardware stack levels required when called:   15
 21330 ;; This function calls:
 21331 ;;		_EUSART2_SetRxInterruptHandler
 21332 ;;		_EUSART2_SetTxInterruptHandler
 21333 ;; This function is called by:
 21334 ;;		_SYSTEM_Initialize
 21335 ;; This function uses a non-reentrant model
 21336 ;;
 21337                           
 21338                           	psect	text67
 21339  01634C                     __ptext67:
 21340                           	opt stack 0
 21341  01634C                     _EUSART2_Initialize:
 21342                           	opt stack 14
 21343                           
 21344                           ;eusart2.c: 81: LATFbits.LATF1 = 1;
 21345                           
 21346                           ; BSR set to: 14
 21347                           ;incstack = 0
 21348  01634C  827E               	bsf	3966,1,c	;volatile
 21349                           
 21350                           ;eusart2.c: 84: PIE3bits.RC2IE = 0;
 21351  01634E  010E               	movlb	14	; () banked
 21352  016350  9F2C               	bcf	44,7,b	;volatile
 21353                           
 21354                           ; BSR set to: 14
 21355                           ;eusart2.c: 85: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 21356  016352  0E76               	movlw	low _EUSART2_Receive_ISR
 21357  016354  0101               	movlb	1	; () banked
 21358  016356  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 21359  016358  0E58               	movlw	high _EUSART2_Receive_ISR
 21360  01635A  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 21361  01635C  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 21362  01635E  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 21363  016360  EC30  F0B8         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 21364                           
 21365                           ;eusart2.c: 86: PIE3bits.TX2IE = 0;
 21366  016364  010E               	movlb	14	; () banked
 21367  016366  9D2C               	bcf	44,6,b	;volatile
 21368                           
 21369                           ;eusart2.c: 87: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 21370  016368  0E0A               	movlw	low _EUSART2_Transmit_ISR
 21371  01636A  0101               	movlb	1	; () banked
 21372  01636C  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 21373  01636E  0E6C               	movlw	high _EUSART2_Transmit_ISR
 21374  016370  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 21375  016372  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 21376  016374  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 21377  016376  EC29  F0B8         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 21378                           
 21379                           ;eusart2.c: 91: BAUD2CON = 0x08;
 21380  01637A  0E08               	movlw	8
 21381  01637C  010E               	movlb	14	; () banked
 21382  01637E  6FF7               	movwf	247,b	;volatile
 21383                           
 21384                           ; BSR set to: 14
 21385                           ;eusart2.c: 94: RC2STA = 0x90;
 21386  016380  0E90               	movlw	144
 21387  016382  6FF5               	movwf	245,b	;volatile
 21388                           
 21389                           ; BSR set to: 14
 21390                           ;eusart2.c: 97: TX2STA = 0x24;
 21391  016384  0E24               	movlw	36
 21392  016386  6FF6               	movwf	246,b	;volatile
 21393                           
 21394                           ; BSR set to: 14
 21395                           ;eusart2.c: 100: SP2BRGL = 0x8A;
 21396  016388  0E8A               	movlw	138
 21397  01638A  6FF3               	movwf	243,b	;volatile
 21398                           
 21399                           ; BSR set to: 14
 21400                           ;eusart2.c: 103: SP2BRGH = 0x00;
 21401  01638C  0E00               	movlw	0
 21402  01638E  6FF4               	movwf	244,b	;volatile
 21403                           
 21404                           ; BSR set to: 14
 21405                           ;eusart2.c: 107: eusart2TxHead = 0;
 21406  016390  0E00               	movlw	0
 21407  016392  0101               	movlb	1	; () banked
 21408  016394  6FD6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 21409                           
 21410                           ; BSR set to: 1
 21411                           ;eusart2.c: 108: eusart2TxTail = 0;
 21412  016396  0E00               	movlw	0
 21413  016398  6FD5               	movwf	_eusart2TxTail& (0+255),b	;volatile
 21414                           
 21415                           ; BSR set to: 1
 21416                           ;eusart2.c: 109: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 21417  01639A  0E80               	movlw	128
 21418  01639C  6FD4               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 21419                           
 21420                           ; BSR set to: 1
 21421                           ;eusart2.c: 111: eusart2RxHead = 0;
 21422  01639E  0E00               	movlw	0
 21423  0163A0  0100               	movlb	0	; () banked
 21424  0163A2  6FED               	movwf	_eusart2RxHead& (0+255),b	;volatile
 21425                           
 21426                           ; BSR set to: 0
 21427                           ;eusart2.c: 112: eusart2RxTail = 0;
 21428  0163A4  0E00               	movlw	0
 21429  0163A6  0101               	movlb	1	; () banked
 21430  0163A8  6FD3               	movwf	_eusart2RxTail& (0+255),b	;volatile
 21431                           
 21432                           ; BSR set to: 1
 21433                           ;eusart2.c: 113: eusart2RxCount = 0;
 21434  0163AA  0E00               	movlw	0
 21435  0163AC  6FD2               	movwf	_eusart2RxCount& (0+255),b	;volatile
 21436                           
 21437                           ; BSR set to: 1
 21438                           ;eusart2.c: 116: PIE3bits.RC2IE = 1;
 21439  0163AE  010E               	movlb	14	; () banked
 21440  0163B0  8F2C               	bsf	44,7,b	;volatile
 21441                           
 21442                           ; BSR set to: 14
 21443                           ;eusart2.c: 118: LATFbits.LATF1 = 0;
 21444  0163B2  927E               	bcf	3966,1,c	;volatile
 21445                           
 21446                           ; BSR set to: 14
 21447  0163B4  0012               	return		;funcret
 21448  0163B6                     __end_of_EUSART2_Initialize:
 21449                           	opt stack 0
 21450                           tblptru	equ	0xFF8
 21451                           tblptrh	equ	0xFF7
 21452                           tblptrl	equ	0xFF6
 21453                           tablat	equ	0xFF5
 21454                           prodh	equ	0xFF4
 21455                           prodl	equ	0xFF3
 21456                           intcon	equ	0xFF2
 21457                           indf0	equ	0xFEF
 21458                           postinc0	equ	0xFEE
 21459                           fsr0h	equ	0xFEA
 21460                           fsr0l	equ	0xFE9
 21461                           wreg	equ	0xFE8
 21462                           indf1	equ	0xFE7
 21463                           postdec1	equ	0xFE5
 21464                           plusw1	equ	0xFE3
 21465                           fsr1h	equ	0xFE2
 21466                           fsr1l	equ	0xFE1
 21467                           indf2	equ	0xFDF
 21468                           postinc2	equ	0xFDE
 21469                           postdec2	equ	0xFDD
 21470                           plusw2	equ	0xFDB
 21471                           fsr2h	equ	0xFDA
 21472                           fsr2l	equ	0xFD9
 21473                           status	equ	0xFD8
 21474                           
 21475 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 21476 ;; Defined at:
 21477 ;;		line 280 in file "mcc_generated_files/eusart2.c"
 21478 ;; Parameters:    Size  Location     Type
 21479 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21480 ;;		 -> EUSART2_Transmit_ISR(1), 
 21481 ;; Auto vars:     Size  Location     Type
 21482 ;;		None
 21483 ;; Return value:  Size  Location     Type
 21484 ;;                  1    wreg      void 
 21485 ;; Registers used:
 21486 ;;		wreg, status,2, status,0
 21487 ;; Tracked objects:
 21488 ;;		On entry : 0/0
 21489 ;;		On exit  : 0/0
 21490 ;;		Unchanged: 0/0
 21491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21492 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21493 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21495 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21496 ;;Total ram usage:        3 bytes
 21497 ;; Hardware stack levels used:    1
 21498 ;; Hardware stack levels required when called:   14
 21499 ;; This function calls:
 21500 ;;		Nothing
 21501 ;; This function is called by:
 21502 ;;		_EUSART2_Initialize
 21503 ;; This function uses a non-reentrant model
 21504 ;;
 21505                           
 21506                           	psect	text68
 21507  017052                     __ptext68:
 21508                           	opt stack 0
 21509  017052                     _EUSART2_SetTxInterruptHandler:
 21510                           	opt stack 14
 21511                           
 21512                           ;eusart2.c: 281: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 21513                           
 21514                           ; BSR set to: 14
 21515                           ;incstack = 0
 21516  017052  C117  F1CA         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 21517  017056  C118  F1CB         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 21518  01705A  C119  F1CC         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 21519  01705E  0012               	return		;funcret
 21520  017060                     __end_of_EUSART2_SetTxInterruptHandler:
 21521                           	opt stack 0
 21522                           tblptru	equ	0xFF8
 21523                           tblptrh	equ	0xFF7
 21524                           tblptrl	equ	0xFF6
 21525                           tablat	equ	0xFF5
 21526                           prodh	equ	0xFF4
 21527                           prodl	equ	0xFF3
 21528                           intcon	equ	0xFF2
 21529                           indf0	equ	0xFEF
 21530                           postinc0	equ	0xFEE
 21531                           fsr0h	equ	0xFEA
 21532                           fsr0l	equ	0xFE9
 21533                           wreg	equ	0xFE8
 21534                           indf1	equ	0xFE7
 21535                           postdec1	equ	0xFE5
 21536                           plusw1	equ	0xFE3
 21537                           fsr1h	equ	0xFE2
 21538                           fsr1l	equ	0xFE1
 21539                           indf2	equ	0xFDF
 21540                           postinc2	equ	0xFDE
 21541                           postdec2	equ	0xFDD
 21542                           plusw2	equ	0xFDB
 21543                           fsr2h	equ	0xFDA
 21544                           fsr2l	equ	0xFD9
 21545                           status	equ	0xFD8
 21546                           
 21547 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 21548 ;; Defined at:
 21549 ;;		line 284 in file "mcc_generated_files/eusart2.c"
 21550 ;; Parameters:    Size  Location     Type
 21551 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 21552 ;;		 -> EUSART2_Receive_ISR(1), 
 21553 ;; Auto vars:     Size  Location     Type
 21554 ;;		None
 21555 ;; Return value:  Size  Location     Type
 21556 ;;                  1    wreg      void 
 21557 ;; Registers used:
 21558 ;;		wreg, status,2, status,0
 21559 ;; Tracked objects:
 21560 ;;		On entry : 0/0
 21561 ;;		On exit  : 0/0
 21562 ;;		Unchanged: 0/0
 21563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21564 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21567 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21568 ;;Total ram usage:        3 bytes
 21569 ;; Hardware stack levels used:    1
 21570 ;; Hardware stack levels required when called:   14
 21571 ;; This function calls:
 21572 ;;		Nothing
 21573 ;; This function is called by:
 21574 ;;		_EUSART2_Initialize
 21575 ;; This function uses a non-reentrant model
 21576 ;;
 21577                           
 21578                           	psect	text69
 21579  017060                     __ptext69:
 21580                           	opt stack 0
 21581  017060                     _EUSART2_SetRxInterruptHandler:
 21582                           	opt stack 14
 21583                           
 21584                           ;eusart2.c: 285: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 21585                           
 21586                           ;incstack = 0
 21587  017060  C117  F1C7         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 21588  017064  C118  F1C8         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 21589  017068  C119  F1C9         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 21590  01706C  0012               	return		;funcret
 21591  01706E                     __end_of_EUSART2_SetRxInterruptHandler:
 21592                           	opt stack 0
 21593                           tblptru	equ	0xFF8
 21594                           tblptrh	equ	0xFF7
 21595                           tblptrl	equ	0xFF6
 21596                           tablat	equ	0xFF5
 21597                           prodh	equ	0xFF4
 21598                           prodl	equ	0xFF3
 21599                           intcon	equ	0xFF2
 21600                           indf0	equ	0xFEF
 21601                           postinc0	equ	0xFEE
 21602                           fsr0h	equ	0xFEA
 21603                           fsr0l	equ	0xFE9
 21604                           wreg	equ	0xFE8
 21605                           indf1	equ	0xFE7
 21606                           postdec1	equ	0xFE5
 21607                           plusw1	equ	0xFE3
 21608                           fsr1h	equ	0xFE2
 21609                           fsr1l	equ	0xFE1
 21610                           indf2	equ	0xFDF
 21611                           postinc2	equ	0xFDE
 21612                           postdec2	equ	0xFDD
 21613                           plusw2	equ	0xFDB
 21614                           fsr2h	equ	0xFDA
 21615                           fsr2l	equ	0xFD9
 21616                           status	equ	0xFD8
 21617                           
 21618 ;; *************** function _ADCC_Initialize *****************
 21619 ;; Defined at:
 21620 ;;		line 63 in file "mcc_generated_files/adcc.c"
 21621 ;; Parameters:    Size  Location     Type
 21622 ;;		None
 21623 ;; Auto vars:     Size  Location     Type
 21624 ;;		None
 21625 ;; Return value:  Size  Location     Type
 21626 ;;                  1    wreg      void 
 21627 ;; Registers used:
 21628 ;;		wreg, status,2, status,0, cstack
 21629 ;; Tracked objects:
 21630 ;;		On entry : 0/0
 21631 ;;		On exit  : 0/0
 21632 ;;		Unchanged: 0/0
 21633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21638 ;;Total ram usage:        0 bytes
 21639 ;; Hardware stack levels used:    1
 21640 ;; Hardware stack levels required when called:   15
 21641 ;; This function calls:
 21642 ;;		_ADCC_SetADIInterruptHandler
 21643 ;; This function is called by:
 21644 ;;		_SYSTEM_Initialize
 21645 ;; This function uses a non-reentrant model
 21646 ;;
 21647                           
 21648                           	psect	text70
 21649  0164EC                     __ptext70:
 21650                           	opt stack 0
 21651  0164EC                     _ADCC_Initialize:
 21652                           	opt stack 14
 21653                           
 21654                           ;adcc.c: 67: ADLTHL = 0x00;
 21655                           
 21656                           ;incstack = 0
 21657  0164EC  0E00               	movlw	0
 21658  0164EE  6E6A               	movwf	3946,c	;volatile
 21659                           
 21660                           ;adcc.c: 69: ADLTHH = 0x00;
 21661  0164F0  0E00               	movlw	0
 21662  0164F2  6E6B               	movwf	3947,c	;volatile
 21663                           
 21664                           ;adcc.c: 71: ADUTHL = 0x00;
 21665  0164F4  0E00               	movlw	0
 21666  0164F6  6E6C               	movwf	3948,c	;volatile
 21667                           
 21668                           ;adcc.c: 73: ADUTHH = 0x00;
 21669  0164F8  0E00               	movlw	0
 21670  0164FA  6E6D               	movwf	3949,c	;volatile
 21671                           
 21672                           ;adcc.c: 75: ADSTPTL = 0x00;
 21673  0164FC  0E00               	movlw	0
 21674  0164FE  6E68               	movwf	3944,c	;volatile
 21675                           
 21676                           ;adcc.c: 77: ADSTPTH = 0x00;
 21677  016500  0E00               	movlw	0
 21678  016502  6E69               	movwf	3945,c	;volatile
 21679                           
 21680                           ;adcc.c: 79: ADRPT = 0x00;
 21681  016504  0E00               	movlw	0
 21682  016506  6E66               	movwf	3942,c	;volatile
 21683                           
 21684                           ;adcc.c: 81: ADPCH = 0x00;
 21685  016508  0E00               	movlw	0
 21686  01650A  010F               	movlb	15	; () banked
 21687  01650C  6F5F               	movwf	95,b	;volatile
 21688                           
 21689                           ;adcc.c: 83: ADCAP = 0x00;
 21690  01650E  0E00               	movlw	0
 21691  016510  6F5D               	movwf	93,b	;volatile
 21692                           
 21693                           ;adcc.c: 85: ADCON1 = 0x00;
 21694  016512  0E00               	movlw	0
 21695  016514  6F59               	movwf	89,b	;volatile
 21696                           
 21697                           ;adcc.c: 87: ADCON2 = 0x04;
 21698  016516  0E04               	movlw	4
 21699  016518  6F5A               	movwf	90,b	;volatile
 21700                           
 21701                           ;adcc.c: 89: ADCON3 = 0x00;
 21702  01651A  0E00               	movlw	0
 21703  01651C  6F5B               	movwf	91,b	;volatile
 21704                           
 21705                           ;adcc.c: 91: ADSTAT = 0x00;
 21706  01651E  0E00               	movlw	0
 21707  016520  6E65               	movwf	3941,c	;volatile
 21708                           
 21709                           ;adcc.c: 93: ADREF = 0x12;
 21710  016522  0E12               	movlw	18
 21711  016524  6F58               	movwf	88,b	;volatile
 21712                           
 21713                           ;adcc.c: 95: ADACT = 0x00;
 21714  016526  0E00               	movlw	0
 21715  016528  6F56               	movwf	86,b	;volatile
 21716                           
 21717                           ;adcc.c: 97: ADCLK = 0x00;
 21718  01652A  0E00               	movlw	0
 21719  01652C  6F57               	movwf	87,b	;volatile
 21720                           
 21721                           ;adcc.c: 99: ADCON0 = 0x94;
 21722  01652E  0E94               	movlw	148
 21723  016530  6E60               	movwf	3936,c	;volatile
 21724                           
 21725                           ;adcc.c: 101: ADACQ = 0x00;
 21726  016532  0E00               	movlw	0
 21727  016534  6F5C               	movwf	92,b	;volatile
 21728                           
 21729                           ; BSR set to: 15
 21730                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 21731  016536  010E               	movlb	14	; () banked
 21732  016538  9134               	bcf	52,0,b	;volatile
 21733                           
 21734                           ; BSR set to: 14
 21735                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 21736  01653A  812A               	bsf	42,0,b	;volatile
 21737                           
 21738                           ; BSR set to: 14
 21739                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 21740  01653C  0EC0               	movlw	low _ADCC_DefaultInterruptHandler
 21741  01653E  0101               	movlb	1	; () banked
 21742  016540  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 21743  016542  0E70               	movlw	high _ADCC_DefaultInterruptHandler
 21744  016544  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 21745  016546  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 21746  016548  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 21747  01654A  EC37  F0B8         	call	_ADCC_SetADIInterruptHandler	;wreg free
 21748  01654E  0012               	return		;funcret
 21749  016550                     __end_of_ADCC_Initialize:
 21750                           	opt stack 0
 21751                           tblptru	equ	0xFF8
 21752                           tblptrh	equ	0xFF7
 21753                           tblptrl	equ	0xFF6
 21754                           tablat	equ	0xFF5
 21755                           prodh	equ	0xFF4
 21756                           prodl	equ	0xFF3
 21757                           intcon	equ	0xFF2
 21758                           indf0	equ	0xFEF
 21759                           postinc0	equ	0xFEE
 21760                           fsr0h	equ	0xFEA
 21761                           fsr0l	equ	0xFE9
 21762                           wreg	equ	0xFE8
 21763                           indf1	equ	0xFE7
 21764                           postdec1	equ	0xFE5
 21765                           plusw1	equ	0xFE3
 21766                           fsr1h	equ	0xFE2
 21767                           fsr1l	equ	0xFE1
 21768                           indf2	equ	0xFDF
 21769                           postinc2	equ	0xFDE
 21770                           postdec2	equ	0xFDD
 21771                           plusw2	equ	0xFDB
 21772                           fsr2h	equ	0xFDA
 21773                           fsr2l	equ	0xFD9
 21774                           status	equ	0xFD8
 21775                           
 21776 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 21777 ;; Defined at:
 21778 ;;		line 306 in file "mcc_generated_files/adcc.c"
 21779 ;; Parameters:    Size  Location     Type
 21780 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 21781 ;;		 -> ADCPostProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 21782 ;; Auto vars:     Size  Location     Type
 21783 ;;		None
 21784 ;; Return value:  Size  Location     Type
 21785 ;;                  1    wreg      void 
 21786 ;; Registers used:
 21787 ;;		wreg, status,2, status,0
 21788 ;; Tracked objects:
 21789 ;;		On entry : 0/0
 21790 ;;		On exit  : 0/0
 21791 ;;		Unchanged: 0/0
 21792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21793 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21796 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21797 ;;Total ram usage:        3 bytes
 21798 ;; Hardware stack levels used:    1
 21799 ;; Hardware stack levels required when called:   14
 21800 ;; This function calls:
 21801 ;;		Nothing
 21802 ;; This function is called by:
 21803 ;;		_ADCC_Initialize
 21804 ;;		_main
 21805 ;; This function uses a non-reentrant model
 21806 ;;
 21807                           
 21808                           	psect	text71
 21809  01706E                     __ptext71:
 21810                           	opt stack 0
 21811  01706E                     _ADCC_SetADIInterruptHandler:
 21812                           	opt stack 14
 21813                           
 21814                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 21815                           
 21816                           ;incstack = 0
 21817  01706E  C117  F0E6         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 21818  017072  C118  F0E7         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 21819  017076  C119  F0E8         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 21820  01707A  0012               	return		;funcret
 21821  01707C                     __end_of_ADCC_SetADIInterruptHandler:
 21822                           	opt stack 0
 21823                           tblptru	equ	0xFF8
 21824                           tblptrh	equ	0xFF7
 21825                           tblptrl	equ	0xFF6
 21826                           tablat	equ	0xFF5
 21827                           prodh	equ	0xFF4
 21828                           prodl	equ	0xFF3
 21829                           intcon	equ	0xFF2
 21830                           indf0	equ	0xFEF
 21831                           postinc0	equ	0xFEE
 21832                           fsr0h	equ	0xFEA
 21833                           fsr0l	equ	0xFE9
 21834                           wreg	equ	0xFE8
 21835                           indf1	equ	0xFE7
 21836                           postdec1	equ	0xFE5
 21837                           plusw1	equ	0xFE3
 21838                           fsr1h	equ	0xFE2
 21839                           fsr1l	equ	0xFE1
 21840                           indf2	equ	0xFDF
 21841                           postinc2	equ	0xFDE
 21842                           postdec2	equ	0xFDD
 21843                           plusw2	equ	0xFDB
 21844                           fsr2h	equ	0xFDA
 21845                           fsr2l	equ	0xFD9
 21846                           status	equ	0xFD8
 21847                           
 21848 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 21849 ;; Defined at:
 21850 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 21851 ;; Parameters:    Size  Location     Type
 21852 ;;		None
 21853 ;; Auto vars:     Size  Location     Type
 21854 ;;		None
 21855 ;; Return value:  Size  Location     Type
 21856 ;;                  1    wreg      void 
 21857 ;; Registers used:
 21858 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21859 ;; Tracked objects:
 21860 ;;		On entry : 0/0
 21861 ;;		On exit  : 0/0
 21862 ;;		Unchanged: 0/0
 21863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21865 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21866 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21867 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21868 ;;Total ram usage:       21 bytes
 21869 ;; Hardware stack levels used:    1
 21870 ;; Hardware stack levels required when called:   13
 21871 ;; This function calls:
 21872 ;;		Absolute function
 21873 ;;		_EUSART2_Transmit_ISR
 21874 ;;		_TMR6_ISR
 21875 ;;		_TMR7_ISR
 21876 ;; This function is called by:
 21877 ;;		Interrupt level 1
 21878 ;; This function uses a non-reentrant model
 21879 ;;
 21880                           
 21881                           	psect	intcodelo
 21882  000018                     __pintcodelo:
 21883                           	opt stack 0
 21884  000018                     _INTERRUPT_InterruptManagerLow:
 21885                           	opt stack 9
 21886                           
 21887                           ;incstack = 0
 21888  000018  805F               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 21889  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 21890  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 21891  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 21892  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 21893  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 21894  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 21895  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 21896  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 21897  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 21898  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 21899  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 21900  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 21901  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 21902  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 21903  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 21904  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 21905  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 21906  00005E  C05F  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 21907  000062  C060  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 21908  000066  C061  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 21909  00006A  C062  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 21910                           
 21911                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 21912  00006E  010E               	movlb	14	; () banked
 21913  000070  BB2E               	btfsc	46,5,b	;volatile
 21914                           
 21915                           ; BSR set to: 14
 21916  000072  AB38               	btfss	56,5,b	;volatile
 21917  000074  D003               	goto	i1l213
 21918                           
 21919                           ; BSR set to: 14
 21920                           ;interrupt_manager.c: 105: {
 21921                           ;interrupt_manager.c: 106: TMR6_ISR();
 21922  000076  ECC7  F0B6         	call	_TMR6_ISR	;wreg free
 21923                           
 21924                           ;interrupt_manager.c: 107: }
 21925  00007A  D015               	goto	i1l217
 21926  00007C                     i1l213:
 21927                           
 21928                           ; BSR set to: 14
 21929                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 21930  00007C  BD2C               	btfsc	44,6,b	;volatile
 21931                           
 21932                           ; BSR set to: 14
 21933  00007E  AD36               	btfss	54,6,b	;volatile
 21934  000080  D00D               	goto	i1l215
 21935                           
 21936                           ; BSR set to: 14
 21937                           ;interrupt_manager.c: 109: {
 21938                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 21939  000082  D801               	call	i1u1963_28
 21940  000084  D010               	goto	i1l217
 21941  000086                     i1u1963_28:
 21942  000086  0005               	push	
 21943  000088  6EFA               	movwf	pclath,c
 21944  00008A  0101               	movlb	1	; () banked
 21945  00008C  51CA               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 21946  00008E  6EFD               	movwf	tosl,c
 21947  000090  51CB               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 21948  000092  6EFE               	movwf	tosh,c
 21949  000094  51CC               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 21950  000096  6EFF               	movwf	tosu,c
 21951  000098  50FA               	movf	pclath,w,c
 21952  00009A  0012               	return		;indir
 21953  00009C                     i1l215:
 21954                           
 21955                           ; BSR set to: 14
 21956                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 21957  00009C  BD2E               	btfsc	46,6,b	;volatile
 21958                           
 21959                           ; BSR set to: 14
 21960  00009E  AD38               	btfss	56,6,b	;volatile
 21961  0000A0  D002               	goto	i1l217
 21962                           
 21963                           ; BSR set to: 14
 21964                           ;interrupt_manager.c: 113: {
 21965                           ;interrupt_manager.c: 114: TMR7_ISR();
 21966  0000A2  EC20  F0B6         	call	_TMR7_ISR	;wreg free
 21967  0000A6                     i1l217:
 21968                           
 21969                           ;interrupt_manager.c: 116: else
 21970                           ;interrupt_manager.c: 117: {
 21971  0000A6  C116  F062         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 21972  0000AA  C115  F061         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 21973  0000AE  C114  F060         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 21974  0000B2  C113  F05F         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 21975  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 21976  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 21977  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 21978  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 21979  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 21980  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 21981  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 21982  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 21983  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 21984  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 21985  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 21986  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 21987  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 21988  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 21989  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 21990  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 21991  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 21992  0000FA  905F               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 21993  0000FC  0010               	retfie	
 21994  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 21995                           	opt stack 0
 21996                           tosu	equ	0xFFF
 21997                           tosh	equ	0xFFE
 21998                           tosl	equ	0xFFD
 21999                           pclatu	equ	0xFFB
 22000                           pclath	equ	0xFFA
 22001                           tblptru	equ	0xFF8
 22002                           tblptrh	equ	0xFF7
 22003                           tblptrl	equ	0xFF6
 22004                           tablat	equ	0xFF5
 22005                           prodh	equ	0xFF4
 22006                           prodl	equ	0xFF3
 22007                           intcon	equ	0xFF2
 22008                           indf0	equ	0xFEF
 22009                           postinc0	equ	0xFEE
 22010                           fsr0h	equ	0xFEA
 22011                           fsr0l	equ	0xFE9
 22012                           wreg	equ	0xFE8
 22013                           indf1	equ	0xFE7
 22014                           postdec1	equ	0xFE5
 22015                           plusw1	equ	0xFE3
 22016                           fsr1h	equ	0xFE2
 22017                           fsr1l	equ	0xFE1
 22018                           bsr	equ	0xFE0
 22019                           indf2	equ	0xFDF
 22020                           postinc2	equ	0xFDE
 22021                           postdec2	equ	0xFDD
 22022                           plusw2	equ	0xFDB
 22023                           fsr2h	equ	0xFDA
 22024                           fsr2l	equ	0xFD9
 22025                           status	equ	0xFD8
 22026                           
 22027 ;; *************** function _TMR7_ISR *****************
 22028 ;; Defined at:
 22029 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 22030 ;; Parameters:    Size  Location     Type
 22031 ;;		None
 22032 ;; Auto vars:     Size  Location     Type
 22033 ;;		None
 22034 ;; Return value:  Size  Location     Type
 22035 ;;                  1    wreg      void 
 22036 ;; Registers used:
 22037 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 22038 ;; Tracked objects:
 22039 ;;		On entry : 0/0
 22040 ;;		On exit  : 0/0
 22041 ;;		Unchanged: 0/0
 22042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22047 ;;Total ram usage:        0 bytes
 22048 ;; Hardware stack levels used:    1
 22049 ;; Hardware stack levels required when called:   12
 22050 ;; This function calls:
 22051 ;;		Absolute function
 22052 ;;		_TMR7_DefaultInterruptHandler
 22053 ;;		_TMR7_WriteTimer
 22054 ;;		_acquisitionTimerCallback
 22055 ;; This function is called by:
 22056 ;;		_INTERRUPT_InterruptManagerLow
 22057 ;; This function uses a non-reentrant model
 22058 ;;
 22059                           
 22060                           	psect	text73
 22061  016C40                     __ptext73:
 22062                           	opt stack 0
 22063  016C40                     _TMR7_ISR:
 22064                           	opt stack 9
 22065                           
 22066                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 22067                           
 22068                           ;incstack = 0
 22069  016C40  010E               	movlb	14	; () banked
 22070  016C42  9D38               	bcf	56,6,b	;volatile
 22071                           
 22072                           ; BSR set to: 14
 22073                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 22074  016C44  C1CF  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 22075  016C48  C1D0  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 22076  016C4C  EC15  F0B7         	call	_TMR7_WriteTimer	;wreg free
 22077                           
 22078                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 22079  016C50  0101               	movlb	1	; () banked
 22080  016C52  51C1               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22081  016C54  11C2               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22082  016C56  11C3               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22083  016C58  B4D8               	btfsc	status,2,c
 22084  016C5A  0012               	return	
 22085                           
 22086                           ; BSR set to: 1
 22087                           ;tmr7.c: 172: {
 22088                           ;tmr7.c: 173: TMR7_InterruptHandler();
 22089  016C5C  D801               	call	i1u1945_28
 22090  016C5E  0012               	return	
 22091  016C60                     i1u1945_28:
 22092  016C60  0005               	push	
 22093  016C62  6EFA               	movwf	pclath,c
 22094  016C64  51C1               	movf	_TMR7_InterruptHandler& (0+255),w,b
 22095  016C66  6EFD               	movwf	tosl,c
 22096  016C68  51C2               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 22097  016C6A  6EFE               	movwf	tosh,c
 22098  016C6C  51C3               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 22099  016C6E  6EFF               	movwf	tosu,c
 22100  016C70  50FA               	movf	pclath,w,c
 22101  016C72  0012               	return		;indir
 22102  016C74                     __end_of_TMR7_ISR:
 22103                           	opt stack 0
 22104                           tosu	equ	0xFFF
 22105                           tosh	equ	0xFFE
 22106                           tosl	equ	0xFFD
 22107                           pclatu	equ	0xFFB
 22108                           pclath	equ	0xFFA
 22109                           tblptru	equ	0xFF8
 22110                           tblptrh	equ	0xFF7
 22111                           tblptrl	equ	0xFF6
 22112                           tablat	equ	0xFF5
 22113                           prodh	equ	0xFF4
 22114                           prodl	equ	0xFF3
 22115                           intcon	equ	0xFF2
 22116                           indf0	equ	0xFEF
 22117                           postinc0	equ	0xFEE
 22118                           fsr0h	equ	0xFEA
 22119                           fsr0l	equ	0xFE9
 22120                           wreg	equ	0xFE8
 22121                           indf1	equ	0xFE7
 22122                           postdec1	equ	0xFE5
 22123                           plusw1	equ	0xFE3
 22124                           fsr1h	equ	0xFE2
 22125                           fsr1l	equ	0xFE1
 22126                           bsr	equ	0xFE0
 22127                           indf2	equ	0xFDF
 22128                           postinc2	equ	0xFDE
 22129                           postdec2	equ	0xFDD
 22130                           plusw2	equ	0xFDB
 22131                           fsr2h	equ	0xFDA
 22132                           fsr2l	equ	0xFD9
 22133                           status	equ	0xFD8
 22134                           
 22135 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 22136 ;; Defined at:
 22137 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 22138 ;; Parameters:    Size  Location     Type
 22139 ;;		None
 22140 ;; Auto vars:     Size  Location     Type
 22141 ;;		None
 22142 ;; Return value:  Size  Location     Type
 22143 ;;                  1    wreg      void 
 22144 ;; Registers used:
 22145 ;;		None
 22146 ;; Tracked objects:
 22147 ;;		On entry : 0/0
 22148 ;;		On exit  : 0/0
 22149 ;;		Unchanged: 0/0
 22150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22155 ;;Total ram usage:        0 bytes
 22156 ;; Hardware stack levels used:    1
 22157 ;; Hardware stack levels required when called:   10
 22158 ;; This function calls:
 22159 ;;		Nothing
 22160 ;; This function is called by:
 22161 ;;		_TMR7_Initialize
 22162 ;;		_TMR7_ISR
 22163 ;; This function uses a non-reentrant model
 22164 ;;
 22165                           
 22166                           	psect	text74
 22167  0170BA                     __ptext74:
 22168                           	opt stack 0
 22169  0170BA                     _TMR7_DefaultInterruptHandler:
 22170                           	opt stack 10
 22171                           
 22172                           ;incstack = 0
 22173  0170BA  0012               	return		;funcret
 22174  0170BC                     __end_of_TMR7_DefaultInterruptHandler:
 22175                           	opt stack 0
 22176                           tosu	equ	0xFFF
 22177                           tosh	equ	0xFFE
 22178                           tosl	equ	0xFFD
 22179                           pclatu	equ	0xFFB
 22180                           pclath	equ	0xFFA
 22181                           tblptru	equ	0xFF8
 22182                           tblptrh	equ	0xFF7
 22183                           tblptrl	equ	0xFF6
 22184                           tablat	equ	0xFF5
 22185                           prodh	equ	0xFF4
 22186                           prodl	equ	0xFF3
 22187                           intcon	equ	0xFF2
 22188                           indf0	equ	0xFEF
 22189                           postinc0	equ	0xFEE
 22190                           fsr0h	equ	0xFEA
 22191                           fsr0l	equ	0xFE9
 22192                           wreg	equ	0xFE8
 22193                           indf1	equ	0xFE7
 22194                           postdec1	equ	0xFE5
 22195                           plusw1	equ	0xFE3
 22196                           fsr1h	equ	0xFE2
 22197                           fsr1l	equ	0xFE1
 22198                           bsr	equ	0xFE0
 22199                           indf2	equ	0xFDF
 22200                           postinc2	equ	0xFDE
 22201                           postdec2	equ	0xFDD
 22202                           plusw2	equ	0xFDB
 22203                           fsr2h	equ	0xFDA
 22204                           fsr2l	equ	0xFD9
 22205                           status	equ	0xFD8
 22206                           
 22207 ;; *************** function _acquisitionTimerCallback *****************
 22208 ;; Defined at:
 22209 ;;		line 331 in file "main.c"
 22210 ;; Parameters:    Size  Location     Type
 22211 ;;		None
 22212 ;; Auto vars:     Size  Location     Type
 22213 ;;		None
 22214 ;; Return value:  Size  Location     Type
 22215 ;;                  1    wreg      void 
 22216 ;; Registers used:
 22217 ;;		wreg, status,2, cstack
 22218 ;; Tracked objects:
 22219 ;;		On entry : 0/0
 22220 ;;		On exit  : 0/0
 22221 ;;		Unchanged: 0/0
 22222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22227 ;;Total ram usage:        0 bytes
 22228 ;; Hardware stack levels used:    1
 22229 ;; Hardware stack levels required when called:   11
 22230 ;; This function calls:
 22231 ;;		_ADCC_IsConversionDone
 22232 ;;		_ADCC_StartConversion
 22233 ;;		_TMR7_StopTimer
 22234 ;; This function is called by:
 22235 ;;		_main
 22236 ;;		_TMR7_ISR
 22237 ;; This function uses a non-reentrant model
 22238 ;;
 22239                           
 22240                           	psect	text75
 22241  015704                     __ptext75:
 22242                           	opt stack 0
 22243  015704                     _acquisitionTimerCallback:
 22244                           	opt stack 9
 22245                           
 22246                           ;main.c: 334: ADCC_StartConversion(channel_VSS);
 22247                           
 22248                           ;incstack = 0
 22249  015704  0E3C               	movlw	60
 22250  015706  EC3E  F0B8         	call	_ADCC_StartConversion
 22251                           
 22252                           ;main.c: 337: while(!ADCC_IsConversionDone()) {
 22253  01570A  D007               	goto	i1l918
 22254  01570C                     i1l917:
 22255                           
 22256                           ;main.c: 339: if (adc_error_flag) {
 22257  01570C  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22258  01570E  D005               	goto	i1l918
 22259                           
 22260                           ;main.c: 342: PIE5bits.TMR7IE = 0;
 22261  015710  010E               	movlb	14	; () banked
 22262  015712  9D2E               	bcf	46,6,b	;volatile
 22263                           
 22264                           ; BSR set to: 14
 22265                           ;main.c: 343: TMR7_StopTimer();
 22266  015714  EC57  F0B8         	call	_TMR7_StopTimer	;wreg free
 22267                           
 22268                           ;main.c: 344: return;
 22269  015718  0012               	return	
 22270  01571A                     i1l918:
 22271  01571A  EC45  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22272  01571E  0900               	iorlw	0
 22273  015720  B4D8               	btfsc	status,2,c
 22274  015722  D7F4               	goto	i1l917
 22275                           
 22276                           ;main.c: 346: }
 22277                           ;main.c: 348: }
 22278                           ;main.c: 351: ADCC_StartConversion(channel_FVR_buf1);
 22279  015724  0E3F               	movlw	63
 22280  015726  EC3E  F0B8         	call	_ADCC_StartConversion
 22281                           
 22282                           ;main.c: 354: while(!ADCC_IsConversionDone()) {
 22283  01572A  D007               	goto	i1l923
 22284  01572C                     i1l922:
 22285                           
 22286                           ;main.c: 356: if (adc_error_flag) {
 22287  01572C  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22288  01572E  D005               	goto	i1l923
 22289                           
 22290                           ;main.c: 359: PIE5bits.TMR7IE = 0;
 22291  015730  010E               	movlb	14	; () banked
 22292  015732  9D2E               	bcf	46,6,b	;volatile
 22293                           
 22294                           ; BSR set to: 14
 22295                           ;main.c: 360: TMR7_StopTimer();
 22296  015734  EC57  F0B8         	call	_TMR7_StopTimer	;wreg free
 22297                           
 22298                           ;main.c: 361: return;
 22299  015738  0012               	return	
 22300  01573A                     i1l923:
 22301  01573A  EC45  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22302  01573E  0900               	iorlw	0
 22303  015740  B4D8               	btfsc	status,2,c
 22304  015742  D7F4               	goto	i1l922
 22305                           
 22306                           ;main.c: 363: }
 22307                           ;main.c: 365: }
 22308                           ;main.c: 368: ADCC_StartConversion(POS3P3_ADC);
 22309  015744  0E22               	movlw	34
 22310  015746  EC3E  F0B8         	call	_ADCC_StartConversion
 22311                           
 22312                           ;main.c: 371: while(!ADCC_IsConversionDone()) {
 22313  01574A  D007               	goto	i1l927
 22314  01574C                     i1l926:
 22315                           
 22316                           ;main.c: 373: if (adc_error_flag) {
 22317  01574C  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22318  01574E  D005               	goto	i1l927
 22319                           
 22320                           ;main.c: 376: PIE5bits.TMR7IE = 0;
 22321  015750  010E               	movlb	14	; () banked
 22322  015752  9D2E               	bcf	46,6,b	;volatile
 22323                           
 22324                           ; BSR set to: 14
 22325                           ;main.c: 377: TMR7_StopTimer();
 22326  015754  EC57  F0B8         	call	_TMR7_StopTimer	;wreg free
 22327                           
 22328                           ;main.c: 378: return;
 22329  015758  0012               	return	
 22330  01575A                     i1l927:
 22331  01575A  EC45  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22332  01575E  0900               	iorlw	0
 22333  015760  B4D8               	btfsc	status,2,c
 22334  015762  D7F4               	goto	i1l926
 22335                           
 22336                           ;main.c: 380: }
 22337                           ;main.c: 382: }
 22338                           ;main.c: 385: ADCC_StartConversion(ISNS_ADC);
 22339  015764  0E00               	movlw	0
 22340  015766  EC3E  F0B8         	call	_ADCC_StartConversion
 22341                           
 22342                           ;main.c: 388: while(!ADCC_IsConversionDone()) {
 22343  01576A  D007               	goto	i1l931
 22344  01576C                     i1l930:
 22345                           
 22346                           ;main.c: 390: if (adc_error_flag) {
 22347  01576C  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22348  01576E  D005               	goto	i1l931
 22349                           
 22350                           ;main.c: 393: PIE5bits.TMR7IE = 0;
 22351  015770  010E               	movlb	14	; () banked
 22352  015772  9D2E               	bcf	46,6,b	;volatile
 22353                           
 22354                           ; BSR set to: 14
 22355                           ;main.c: 394: TMR7_StopTimer();
 22356  015774  EC57  F0B8         	call	_TMR7_StopTimer	;wreg free
 22357                           
 22358                           ;main.c: 395: return;
 22359  015778  0012               	return	
 22360  01577A                     i1l931:
 22361  01577A  EC45  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22362  01577E  0900               	iorlw	0
 22363  015780  B4D8               	btfsc	status,2,c
 22364  015782  D7F4               	goto	i1l930
 22365                           
 22366                           ;main.c: 397: }
 22367                           ;main.c: 399: }
 22368                           ;main.c: 402: ADCC_StartConversion(POS12_ADC);
 22369  015784  0E04               	movlw	4
 22370  015786  EC3E  F0B8         	call	_ADCC_StartConversion
 22371                           
 22372                           ;main.c: 405: while(!ADCC_IsConversionDone()) {
 22373  01578A  D007               	goto	i1l935
 22374  01578C                     i1l934:
 22375                           
 22376                           ;main.c: 407: if (adc_error_flag) {
 22377  01578C  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22378  01578E  D005               	goto	i1l935
 22379                           
 22380                           ;main.c: 410: PIE5bits.TMR7IE = 0;
 22381  015790  010E               	movlb	14	; () banked
 22382  015792  9D2E               	bcf	46,6,b	;volatile
 22383                           
 22384                           ; BSR set to: 14
 22385                           ;main.c: 411: TMR7_StopTimer();
 22386  015794  EC57  F0B8         	call	_TMR7_StopTimer	;wreg free
 22387                           
 22388                           ;main.c: 412: return;
 22389  015798  0012               	return	
 22390  01579A                     i1l935:
 22391  01579A  EC45  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22392  01579E  0900               	iorlw	0
 22393  0157A0  B4D8               	btfsc	status,2,c
 22394  0157A2  D7F4               	goto	i1l934
 22395                           
 22396                           ;main.c: 414: }
 22397                           ;main.c: 416: }
 22398                           ;main.c: 419: ADCC_StartConversion(channel_Temp);
 22399  0157A4  0E3D               	movlw	61
 22400  0157A6  EC3E  F0B8         	call	_ADCC_StartConversion
 22401                           
 22402                           ;main.c: 422: while(!ADCC_IsConversionDone()) {
 22403  0157AA  D007               	goto	i1l939
 22404  0157AC                     i1l938:
 22405                           
 22406                           ;main.c: 424: if (adc_error_flag) {
 22407  0157AC  A05E               	btfss	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 22408  0157AE  D005               	goto	i1l939
 22409                           
 22410                           ;main.c: 427: PIE5bits.TMR7IE == 0;
 22411  0157B0  010E               	movlb	14	; () banked
 22412  0157B2  512E               	movf	46,w,b	;volatile
 22413                           
 22414                           ; BSR set to: 14
 22415                           ;main.c: 428: TMR7_StopTimer();
 22416  0157B4  EC57  F0B8         	call	_TMR7_StopTimer	;wreg free
 22417                           
 22418                           ;main.c: 429: return;
 22419  0157B8  0012               	return	
 22420  0157BA                     i1l939:
 22421  0157BA  EC45  F0B8         	call	_ADCC_IsConversionDone	;wreg free
 22422  0157BE  0900               	iorlw	0
 22423  0157C0  A4D8               	btfss	status,2,c
 22424  0157C2  0012               	return	
 22425  0157C4  D7F3               	goto	i1l938
 22426  0157C6                     __end_of_acquisitionTimerCallback:
 22427                           	opt stack 0
 22428                           tosu	equ	0xFFF
 22429                           tosh	equ	0xFFE
 22430                           tosl	equ	0xFFD
 22431                           pclatu	equ	0xFFB
 22432                           pclath	equ	0xFFA
 22433                           tblptru	equ	0xFF8
 22434                           tblptrh	equ	0xFF7
 22435                           tblptrl	equ	0xFF6
 22436                           tablat	equ	0xFF5
 22437                           prodh	equ	0xFF4
 22438                           prodl	equ	0xFF3
 22439                           intcon	equ	0xFF2
 22440                           indf0	equ	0xFEF
 22441                           postinc0	equ	0xFEE
 22442                           fsr0h	equ	0xFEA
 22443                           fsr0l	equ	0xFE9
 22444                           wreg	equ	0xFE8
 22445                           indf1	equ	0xFE7
 22446                           postdec1	equ	0xFE5
 22447                           plusw1	equ	0xFE3
 22448                           fsr1h	equ	0xFE2
 22449                           fsr1l	equ	0xFE1
 22450                           bsr	equ	0xFE0
 22451                           indf2	equ	0xFDF
 22452                           postinc2	equ	0xFDE
 22453                           postdec2	equ	0xFDD
 22454                           plusw2	equ	0xFDB
 22455                           fsr2h	equ	0xFDA
 22456                           fsr2l	equ	0xFD9
 22457                           status	equ	0xFD8
 22458                           
 22459 ;; *************** function _TMR7_StopTimer *****************
 22460 ;; Defined at:
 22461 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 22462 ;; Parameters:    Size  Location     Type
 22463 ;;		None
 22464 ;; Auto vars:     Size  Location     Type
 22465 ;;		None
 22466 ;; Return value:  Size  Location     Type
 22467 ;;                  1    wreg      void 
 22468 ;; Registers used:
 22469 ;;		None
 22470 ;; Tracked objects:
 22471 ;;		On entry : 0/0
 22472 ;;		On exit  : 0/0
 22473 ;;		Unchanged: 0/0
 22474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22479 ;;Total ram usage:        0 bytes
 22480 ;; Hardware stack levels used:    1
 22481 ;; Hardware stack levels required when called:   10
 22482 ;; This function calls:
 22483 ;;		Nothing
 22484 ;; This function is called by:
 22485 ;;		_acquisitionTimerCallback
 22486 ;; This function uses a non-reentrant model
 22487 ;;
 22488                           
 22489                           	psect	text76
 22490  0170AE                     __ptext76:
 22491                           	opt stack 0
 22492  0170AE                     _TMR7_StopTimer:
 22493                           	opt stack 9
 22494                           
 22495                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 22496                           
 22497                           ;incstack = 0
 22498  0170AE  010F               	movlb	15	; () banked
 22499  0170B0  9130               	bcf	48,0,b	;volatile
 22500                           
 22501                           ; BSR set to: 15
 22502  0170B2  0012               	return		;funcret
 22503  0170B4                     __end_of_TMR7_StopTimer:
 22504                           	opt stack 0
 22505                           tosu	equ	0xFFF
 22506                           tosh	equ	0xFFE
 22507                           tosl	equ	0xFFD
 22508                           pclatu	equ	0xFFB
 22509                           pclath	equ	0xFFA
 22510                           tblptru	equ	0xFF8
 22511                           tblptrh	equ	0xFF7
 22512                           tblptrl	equ	0xFF6
 22513                           tablat	equ	0xFF5
 22514                           prodh	equ	0xFF4
 22515                           prodl	equ	0xFF3
 22516                           intcon	equ	0xFF2
 22517                           indf0	equ	0xFEF
 22518                           postinc0	equ	0xFEE
 22519                           fsr0h	equ	0xFEA
 22520                           fsr0l	equ	0xFE9
 22521                           wreg	equ	0xFE8
 22522                           indf1	equ	0xFE7
 22523                           postdec1	equ	0xFE5
 22524                           plusw1	equ	0xFE3
 22525                           fsr1h	equ	0xFE2
 22526                           fsr1l	equ	0xFE1
 22527                           bsr	equ	0xFE0
 22528                           indf2	equ	0xFDF
 22529                           postinc2	equ	0xFDE
 22530                           postdec2	equ	0xFDD
 22531                           plusw2	equ	0xFDB
 22532                           fsr2h	equ	0xFDA
 22533                           fsr2l	equ	0xFD9
 22534                           status	equ	0xFD8
 22535                           
 22536 ;; *************** function _ADCC_StartConversion *****************
 22537 ;; Defined at:
 22538 ;;		line 112 in file "mcc_generated_files/adcc.c"
 22539 ;; Parameters:    Size  Location     Type
 22540 ;;  channel         1    wreg     enum E17310
 22541 ;; Auto vars:     Size  Location     Type
 22542 ;;  channel         1    0[BANK1 ] enum E17310
 22543 ;; Return value:  Size  Location     Type
 22544 ;;                  1    wreg      void 
 22545 ;; Registers used:
 22546 ;;		wreg
 22547 ;; Tracked objects:
 22548 ;;		On entry : 0/0
 22549 ;;		On exit  : 0/0
 22550 ;;		Unchanged: 0/0
 22551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22553 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22555 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22556 ;;Total ram usage:        1 bytes
 22557 ;; Hardware stack levels used:    1
 22558 ;; Hardware stack levels required when called:   10
 22559 ;; This function calls:
 22560 ;;		Nothing
 22561 ;; This function is called by:
 22562 ;;		_acquisitionTimerCallback
 22563 ;; This function uses a non-reentrant model
 22564 ;;
 22565                           
 22566                           	psect	text77
 22567  01707C                     __ptext77:
 22568                           	opt stack 0
 22569  01707C                     _ADCC_StartConversion:
 22570                           	opt stack 9
 22571                           
 22572                           ; BSR set to: 15
 22573                           ;incstack = 0
 22574                           ;ADCC_StartConversion@channel stored from wreg
 22575  01707C  0101               	movlb	1	; () banked
 22576  01707E  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 22577                           
 22578                           ;adcc.c: 115: ADPCH = channel;
 22579  017080  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 22580                           
 22581                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 22582  017084  8E60               	bsf	3936,7,c	;volatile
 22583                           
 22584                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 22585  017086  8060               	bsf	3936,0,c	;volatile
 22586  017088  0012               	return		;funcret
 22587  01708A                     __end_of_ADCC_StartConversion:
 22588                           	opt stack 0
 22589                           tosu	equ	0xFFF
 22590                           tosh	equ	0xFFE
 22591                           tosl	equ	0xFFD
 22592                           pclatu	equ	0xFFB
 22593                           pclath	equ	0xFFA
 22594                           tblptru	equ	0xFF8
 22595                           tblptrh	equ	0xFF7
 22596                           tblptrl	equ	0xFF6
 22597                           tablat	equ	0xFF5
 22598                           prodh	equ	0xFF4
 22599                           prodl	equ	0xFF3
 22600                           intcon	equ	0xFF2
 22601                           indf0	equ	0xFEF
 22602                           postinc0	equ	0xFEE
 22603                           fsr0h	equ	0xFEA
 22604                           fsr0l	equ	0xFE9
 22605                           wreg	equ	0xFE8
 22606                           indf1	equ	0xFE7
 22607                           postdec1	equ	0xFE5
 22608                           plusw1	equ	0xFE3
 22609                           fsr1h	equ	0xFE2
 22610                           fsr1l	equ	0xFE1
 22611                           bsr	equ	0xFE0
 22612                           indf2	equ	0xFDF
 22613                           postinc2	equ	0xFDE
 22614                           postdec2	equ	0xFDD
 22615                           plusw2	equ	0xFDB
 22616                           fsr2h	equ	0xFDA
 22617                           fsr2l	equ	0xFD9
 22618                           status	equ	0xFD8
 22619                           
 22620 ;; *************** function _ADCC_IsConversionDone *****************
 22621 ;; Defined at:
 22622 ;;		line 124 in file "mcc_generated_files/adcc.c"
 22623 ;; Parameters:    Size  Location     Type
 22624 ;;		None
 22625 ;; Auto vars:     Size  Location     Type
 22626 ;;		None
 22627 ;; Return value:  Size  Location     Type
 22628 ;;                  1    wreg      unsigned char 
 22629 ;; Registers used:
 22630 ;;		wreg
 22631 ;; Tracked objects:
 22632 ;;		On entry : 0/0
 22633 ;;		On exit  : 0/0
 22634 ;;		Unchanged: 0/0
 22635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22639 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22640 ;;Total ram usage:        0 bytes
 22641 ;; Hardware stack levels used:    1
 22642 ;; Hardware stack levels required when called:   10
 22643 ;; This function calls:
 22644 ;;		Nothing
 22645 ;; This function is called by:
 22646 ;;		_acquisitionTimerCallback
 22647 ;; This function uses a non-reentrant model
 22648 ;;
 22649                           
 22650                           	psect	text78
 22651  01708A                     __ptext78:
 22652                           	opt stack 0
 22653  01708A                     _ADCC_IsConversionDone:
 22654                           	opt stack 9
 22655                           
 22656                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 22657                           
 22658                           ;incstack = 0
 22659  01708A  B060               	btfsc	3936,0,c	;volatile
 22660  01708C  D002               	goto	i1u810_20
 22661  01708E  0E01               	movlw	1
 22662  017090  0012               	return	
 22663  017092                     i1u810_20:
 22664  017092  0E00               	movlw	0
 22665  017094  0012               	return	
 22666  017096                     __end_of_ADCC_IsConversionDone:
 22667                           	opt stack 0
 22668                           tosu	equ	0xFFF
 22669                           tosh	equ	0xFFE
 22670                           tosl	equ	0xFFD
 22671                           pclatu	equ	0xFFB
 22672                           pclath	equ	0xFFA
 22673                           tblptru	equ	0xFF8
 22674                           tblptrh	equ	0xFF7
 22675                           tblptrl	equ	0xFF6
 22676                           tablat	equ	0xFF5
 22677                           prodh	equ	0xFF4
 22678                           prodl	equ	0xFF3
 22679                           intcon	equ	0xFF2
 22680                           indf0	equ	0xFEF
 22681                           postinc0	equ	0xFEE
 22682                           fsr0h	equ	0xFEA
 22683                           fsr0l	equ	0xFE9
 22684                           wreg	equ	0xFE8
 22685                           indf1	equ	0xFE7
 22686                           postdec1	equ	0xFE5
 22687                           plusw1	equ	0xFE3
 22688                           fsr1h	equ	0xFE2
 22689                           fsr1l	equ	0xFE1
 22690                           bsr	equ	0xFE0
 22691                           indf2	equ	0xFDF
 22692                           postinc2	equ	0xFDE
 22693                           postdec2	equ	0xFDD
 22694                           plusw2	equ	0xFDB
 22695                           fsr2h	equ	0xFDA
 22696                           fsr2l	equ	0xFD9
 22697                           status	equ	0xFD8
 22698                           
 22699 ;; *************** function _TMR7_WriteTimer *****************
 22700 ;; Defined at:
 22701 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 22702 ;; Parameters:    Size  Location     Type
 22703 ;;  timerVal        2    0[BANK1 ] unsigned int 
 22704 ;; Auto vars:     Size  Location     Type
 22705 ;;		None
 22706 ;; Return value:  Size  Location     Type
 22707 ;;                  1    wreg      void 
 22708 ;; Registers used:
 22709 ;;		wreg, status,2
 22710 ;; Tracked objects:
 22711 ;;		On entry : 0/0
 22712 ;;		On exit  : 0/0
 22713 ;;		Unchanged: 0/0
 22714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22715 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22718 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22719 ;;Total ram usage:        2 bytes
 22720 ;; Hardware stack levels used:    1
 22721 ;; Hardware stack levels required when called:   10
 22722 ;; This function calls:
 22723 ;;		Nothing
 22724 ;; This function is called by:
 22725 ;;		_TMR7_ISR
 22726 ;;		_TMR7_Reload
 22727 ;; This function uses a non-reentrant model
 22728 ;;
 22729                           
 22730                           	psect	text79
 22731  016E2A                     __ptext79:
 22732                           	opt stack 0
 22733  016E2A                     _TMR7_WriteTimer:
 22734                           	opt stack 10
 22735                           
 22736                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 22737                           
 22738                           ;incstack = 0
 22739  016E2A  010F               	movlb	15	; () banked
 22740  016E2C  A530               	btfss	48,2,b	;volatile
 22741  016E2E  D009               	goto	i1l628
 22742                           
 22743                           ; BSR set to: 15
 22744                           ;tmr7.c: 130: {
 22745                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 22746  016E30  9130               	bcf	48,0,b	;volatile
 22747                           
 22748                           ; BSR set to: 15
 22749                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 22750  016E32  0101               	movlb	1	; () banked
 22751  016E34  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 22752  016E36  010F               	movlb	15	; () banked
 22753  016E38  6F2F               	movwf	47,b	;volatile
 22754                           
 22755                           ; BSR set to: 15
 22756                           ;tmr7.c: 136: TMR7L = timerVal;
 22757  016E3A  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 22758                           
 22759                           ; BSR set to: 15
 22760                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 22761  016E3E  8130               	bsf	48,0,b	;volatile
 22762                           
 22763                           ;tmr7.c: 140: }
 22764  016E40  0012               	return	
 22765  016E42                     i1l628:
 22766                           
 22767                           ; BSR set to: 15
 22768                           ;tmr7.c: 141: else
 22769                           ;tmr7.c: 142: {
 22770                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 22771                           
 22772                           ; BSR set to: 15
 22773  016E42  0101               	movlb	1	; () banked
 22774  016E44  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 22775  016E46  010F               	movlb	15	; () banked
 22776  016E48  6F2F               	movwf	47,b	;volatile
 22777                           
 22778                           ; BSR set to: 15
 22779                           ;tmr7.c: 145: TMR7L = timerVal;
 22780  016E4A  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 22781  016E4E  0012               	return	
 22782  016E50                     __end_of_TMR7_WriteTimer:
 22783                           	opt stack 0
 22784                           tosu	equ	0xFFF
 22785                           tosh	equ	0xFFE
 22786                           tosl	equ	0xFFD
 22787                           pclatu	equ	0xFFB
 22788                           pclath	equ	0xFFA
 22789                           tblptru	equ	0xFF8
 22790                           tblptrh	equ	0xFF7
 22791                           tblptrl	equ	0xFF6
 22792                           tablat	equ	0xFF5
 22793                           prodh	equ	0xFF4
 22794                           prodl	equ	0xFF3
 22795                           intcon	equ	0xFF2
 22796                           indf0	equ	0xFEF
 22797                           postinc0	equ	0xFEE
 22798                           fsr0h	equ	0xFEA
 22799                           fsr0l	equ	0xFE9
 22800                           wreg	equ	0xFE8
 22801                           indf1	equ	0xFE7
 22802                           postdec1	equ	0xFE5
 22803                           plusw1	equ	0xFE3
 22804                           fsr1h	equ	0xFE2
 22805                           fsr1l	equ	0xFE1
 22806                           bsr	equ	0xFE0
 22807                           indf2	equ	0xFDF
 22808                           postinc2	equ	0xFDE
 22809                           postdec2	equ	0xFDD
 22810                           plusw2	equ	0xFDB
 22811                           fsr2h	equ	0xFDA
 22812                           fsr2l	equ	0xFD9
 22813                           status	equ	0xFD8
 22814                           
 22815 ;; *************** function _TMR6_ISR *****************
 22816 ;; Defined at:
 22817 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 22818 ;; Parameters:    Size  Location     Type
 22819 ;;		None
 22820 ;; Auto vars:     Size  Location     Type
 22821 ;;		None
 22822 ;; Return value:  Size  Location     Type
 22823 ;;                  1    wreg      void 
 22824 ;; Registers used:
 22825 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 22826 ;; Tracked objects:
 22827 ;;		On entry : 0/0
 22828 ;;		On exit  : 0/0
 22829 ;;		Unchanged: 0/0
 22830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22835 ;;Total ram usage:        0 bytes
 22836 ;; Hardware stack levels used:    1
 22837 ;; Hardware stack levels required when called:   11
 22838 ;; This function calls:
 22839 ;;		Absolute function
 22840 ;;		_TMR6_DefaultInterruptHandler
 22841 ;;		_heartbeatTimerCallback
 22842 ;; This function is called by:
 22843 ;;		_INTERRUPT_InterruptManagerLow
 22844 ;; This function uses a non-reentrant model
 22845 ;;
 22846                           
 22847                           	psect	text80
 22848  016D8E                     __ptext80:
 22849                           	opt stack 0
 22850  016D8E                     _TMR6_ISR:
 22851                           	opt stack 10
 22852                           
 22853                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 22854                           
 22855                           ; BSR set to: 15
 22856                           ;incstack = 0
 22857  016D8E  010E               	movlb	14	; () banked
 22858  016D90  9B38               	bcf	56,5,b	;volatile
 22859                           
 22860                           ; BSR set to: 14
 22861                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 22862  016D92  0101               	movlb	1	; () banked
 22863  016D94  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22864  016D96  11C5               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22865  016D98  11C6               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22866  016D9A  B4D8               	btfsc	status,2,c
 22867  016D9C  0012               	return	
 22868                           
 22869                           ; BSR set to: 1
 22870                           ;tmr6.c: 172: {
 22871                           ;tmr6.c: 173: TMR6_InterruptHandler();
 22872  016D9E  D801               	call	i1u1943_28
 22873  016DA0  0012               	return	
 22874  016DA2                     i1u1943_28:
 22875  016DA2  0005               	push	
 22876  016DA4  6EFA               	movwf	pclath,c
 22877  016DA6  51C4               	movf	_TMR6_InterruptHandler& (0+255),w,b
 22878  016DA8  6EFD               	movwf	tosl,c
 22879  016DAA  51C5               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 22880  016DAC  6EFE               	movwf	tosh,c
 22881  016DAE  51C6               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 22882  016DB0  6EFF               	movwf	tosu,c
 22883  016DB2  50FA               	movf	pclath,w,c
 22884  016DB4  0012               	return		;indir
 22885  016DB6                     __end_of_TMR6_ISR:
 22886                           	opt stack 0
 22887                           tosu	equ	0xFFF
 22888                           tosh	equ	0xFFE
 22889                           tosl	equ	0xFFD
 22890                           pclatu	equ	0xFFB
 22891                           pclath	equ	0xFFA
 22892                           tblptru	equ	0xFF8
 22893                           tblptrh	equ	0xFF7
 22894                           tblptrl	equ	0xFF6
 22895                           tablat	equ	0xFF5
 22896                           prodh	equ	0xFF4
 22897                           prodl	equ	0xFF3
 22898                           intcon	equ	0xFF2
 22899                           indf0	equ	0xFEF
 22900                           postinc0	equ	0xFEE
 22901                           fsr0h	equ	0xFEA
 22902                           fsr0l	equ	0xFE9
 22903                           wreg	equ	0xFE8
 22904                           indf1	equ	0xFE7
 22905                           postdec1	equ	0xFE5
 22906                           plusw1	equ	0xFE3
 22907                           fsr1h	equ	0xFE2
 22908                           fsr1l	equ	0xFE1
 22909                           bsr	equ	0xFE0
 22910                           indf2	equ	0xFDF
 22911                           postinc2	equ	0xFDE
 22912                           postdec2	equ	0xFDD
 22913                           plusw2	equ	0xFDB
 22914                           fsr2h	equ	0xFDA
 22915                           fsr2l	equ	0xFD9
 22916                           status	equ	0xFD8
 22917                           
 22918 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 22919 ;; Defined at:
 22920 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 22921 ;; Parameters:    Size  Location     Type
 22922 ;;		None
 22923 ;; Auto vars:     Size  Location     Type
 22924 ;;		None
 22925 ;; Return value:  Size  Location     Type
 22926 ;;                  1    wreg      void 
 22927 ;; Registers used:
 22928 ;;		None
 22929 ;; Tracked objects:
 22930 ;;		On entry : 0/0
 22931 ;;		On exit  : 0/0
 22932 ;;		Unchanged: 0/0
 22933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22938 ;;Total ram usage:        0 bytes
 22939 ;; Hardware stack levels used:    1
 22940 ;; Hardware stack levels required when called:   10
 22941 ;; This function calls:
 22942 ;;		Nothing
 22943 ;; This function is called by:
 22944 ;;		_TMR6_Initialize
 22945 ;;		_TMR6_ISR
 22946 ;; This function uses a non-reentrant model
 22947 ;;
 22948                           
 22949                           	psect	text81
 22950  0170BC                     __ptext81:
 22951                           	opt stack 0
 22952  0170BC                     _TMR6_DefaultInterruptHandler:
 22953                           	opt stack 10
 22954                           
 22955                           ;incstack = 0
 22956  0170BC  0012               	return		;funcret
 22957  0170BE                     __end_of_TMR6_DefaultInterruptHandler:
 22958                           	opt stack 0
 22959                           tosu	equ	0xFFF
 22960                           tosh	equ	0xFFE
 22961                           tosl	equ	0xFFD
 22962                           pclatu	equ	0xFFB
 22963                           pclath	equ	0xFFA
 22964                           tblptru	equ	0xFF8
 22965                           tblptrh	equ	0xFF7
 22966                           tblptrl	equ	0xFF6
 22967                           tablat	equ	0xFF5
 22968                           prodh	equ	0xFF4
 22969                           prodl	equ	0xFF3
 22970                           intcon	equ	0xFF2
 22971                           indf0	equ	0xFEF
 22972                           postinc0	equ	0xFEE
 22973                           fsr0h	equ	0xFEA
 22974                           fsr0l	equ	0xFE9
 22975                           wreg	equ	0xFE8
 22976                           indf1	equ	0xFE7
 22977                           postdec1	equ	0xFE5
 22978                           plusw1	equ	0xFE3
 22979                           fsr1h	equ	0xFE2
 22980                           fsr1l	equ	0xFE1
 22981                           bsr	equ	0xFE0
 22982                           indf2	equ	0xFDF
 22983                           postinc2	equ	0xFDE
 22984                           postdec2	equ	0xFDD
 22985                           plusw2	equ	0xFDB
 22986                           fsr2h	equ	0xFDA
 22987                           fsr2l	equ	0xFD9
 22988                           status	equ	0xFD8
 22989                           
 22990 ;; *************** function _heartbeatTimerCallback *****************
 22991 ;; Defined at:
 22992 ;;		line 130 in file "main.c"
 22993 ;; Parameters:    Size  Location     Type
 22994 ;;		None
 22995 ;; Auto vars:     Size  Location     Type
 22996 ;;		None
 22997 ;; Return value:  Size  Location     Type
 22998 ;;                  1    wreg      void 
 22999 ;; Registers used:
 23000 ;;		wreg, status,2, status,0
 23001 ;; Tracked objects:
 23002 ;;		On entry : 0/0
 23003 ;;		On exit  : 0/0
 23004 ;;		Unchanged: 0/0
 23005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23008 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23009 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23010 ;;Total ram usage:        1 bytes
 23011 ;; Hardware stack levels used:    1
 23012 ;; Hardware stack levels required when called:   10
 23013 ;; This function calls:
 23014 ;;		Nothing
 23015 ;; This function is called by:
 23016 ;;		_main
 23017 ;;		_TMR6_ISR
 23018 ;; This function uses a non-reentrant model
 23019 ;;
 23020                           
 23021                           	psect	text82
 23022  016AE2                     __ptext82:
 23023                           	opt stack 0
 23024  016AE2                     _heartbeatTimerCallback:
 23025                           	opt stack 10
 23026                           
 23027                           ;main.c: 133: LATFbits.LATF2 = !LATFbits.LATF2;
 23028                           
 23029                           ;incstack = 0
 23030  016AE2  B47E               	btfsc	3966,2,c	;volatile
 23031  016AE4  D004               	goto	i1u923_20
 23032  016AE6  0101               	movlb	1	; () banked
 23033  016AE8  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23034  016AEA  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 23035  016AEC  D002               	goto	i1u924_28
 23036  016AEE                     i1u923_20:
 23037  016AEE  0101               	movlb	1	; () banked
 23038  016AF0  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 23039  016AF2                     i1u924_28:
 23040  016AF2  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23041  016AF4  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 23042  016AF6  507E               	movf	3966,w,c	;volatile
 23043  016AF8  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23044  016AFA  0BFB               	andlw	-5
 23045  016AFC  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 23046  016AFE  6E7E               	movwf	3966,c	;volatile
 23047                           
 23048                           ;main.c: 136: dev_on_time++;
 23049  016B00  0E01               	movlw	1
 23050  016B02  27B7               	addwf	_dev_on_time& (0+255),f,b	;volatile
 23051  016B04  0E00               	movlw	0
 23052  016B06  23B8               	addwfc	(_dev_on_time+1)& (0+255),f,b	;volatile
 23053  016B08  23B9               	addwfc	(_dev_on_time+2)& (0+255),f,b	;volatile
 23054  016B0A  23BA               	addwfc	(_dev_on_time+3)& (0+255),f,b	;volatile
 23055                           
 23056                           ; BSR set to: 1
 23057                           ;main.c: 139: if (load_enable) {
 23058  016B0C  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 23059  016B0E  D006               	goto	i1l886
 23060                           
 23061                           ; BSR set to: 1
 23062                           ;main.c: 141: load_on_time++;
 23063  016B10  0E01               	movlw	1
 23064  016B12  27B3               	addwf	_load_on_time& (0+255),f,b	;volatile
 23065  016B14  0E00               	movlw	0
 23066  016B16  23B4               	addwfc	(_load_on_time+1)& (0+255),f,b	;volatile
 23067  016B18  23B5               	addwfc	(_load_on_time+2)& (0+255),f,b	;volatile
 23068  016B1A  23B6               	addwfc	(_load_on_time+3)& (0+255),f,b	;volatile
 23069  016B1C                     i1l886:
 23070                           
 23071                           ; BSR set to: 1
 23072  016B1C  0004               	clrwdt		;# 
 23073  016B1E  0012               	return		;funcret
 23074  016B20                     __end_of_heartbeatTimerCallback:
 23075                           	opt stack 0
 23076                           tosu	equ	0xFFF
 23077                           tosh	equ	0xFFE
 23078                           tosl	equ	0xFFD
 23079                           pclatu	equ	0xFFB
 23080                           pclath	equ	0xFFA
 23081                           tblptru	equ	0xFF8
 23082                           tblptrh	equ	0xFF7
 23083                           tblptrl	equ	0xFF6
 23084                           tablat	equ	0xFF5
 23085                           prodh	equ	0xFF4
 23086                           prodl	equ	0xFF3
 23087                           intcon	equ	0xFF2
 23088                           indf0	equ	0xFEF
 23089                           postinc0	equ	0xFEE
 23090                           fsr0h	equ	0xFEA
 23091                           fsr0l	equ	0xFE9
 23092                           wreg	equ	0xFE8
 23093                           indf1	equ	0xFE7
 23094                           postdec1	equ	0xFE5
 23095                           plusw1	equ	0xFE3
 23096                           fsr1h	equ	0xFE2
 23097                           fsr1l	equ	0xFE1
 23098                           bsr	equ	0xFE0
 23099                           indf2	equ	0xFDF
 23100                           postinc2	equ	0xFDE
 23101                           postdec2	equ	0xFDD
 23102                           plusw2	equ	0xFDB
 23103                           fsr2h	equ	0xFDA
 23104                           fsr2l	equ	0xFD9
 23105                           status	equ	0xFD8
 23106                           
 23107 ;; *************** function _EUSART2_Transmit_ISR *****************
 23108 ;; Defined at:
 23109 ;;		line 198 in file "mcc_generated_files/eusart2.c"
 23110 ;; Parameters:    Size  Location     Type
 23111 ;;		None
 23112 ;; Auto vars:     Size  Location     Type
 23113 ;;		None
 23114 ;; Return value:  Size  Location     Type
 23115 ;;                  1    wreg      void 
 23116 ;; Registers used:
 23117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23118 ;; Tracked objects:
 23119 ;;		On entry : 0/0
 23120 ;;		On exit  : 0/0
 23121 ;;		Unchanged: 0/0
 23122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23127 ;;Total ram usage:        0 bytes
 23128 ;; Hardware stack levels used:    1
 23129 ;; Hardware stack levels required when called:   10
 23130 ;; This function calls:
 23131 ;;		Nothing
 23132 ;; This function is called by:
 23133 ;;		_EUSART2_Initialize
 23134 ;;		_INTERRUPT_InterruptManagerLow
 23135 ;; This function uses a non-reentrant model
 23136 ;;
 23137                           
 23138                           	psect	text83
 23139  016C0A                     __ptext83:
 23140                           	opt stack 0
 23141  016C0A                     _EUSART2_Transmit_ISR:
 23142                           	opt stack 11
 23143                           
 23144                           ;eusart2.c: 202: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 23145                           
 23146                           ;incstack = 0
 23147  016C0A  0E80               	movlw	128
 23148  016C0C  0101               	movlb	1	; () banked
 23149  016C0E  61D4               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 23150  016C10  D014               	goto	i1l391
 23151                           
 23152                           ; BSR set to: 1
 23153                           ;eusart2.c: 203: {
 23154                           ;eusart2.c: 204: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 23155  016C12  51D5               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 23156  016C14  0D01               	mullw	1
 23157  016C16  0E00               	movlw	low _eusart2TxBuffer
 23158  016C18  24F3               	addwf	prodl,w,c
 23159  016C1A  6ED9               	movwf	fsr2l,c
 23160  016C1C  0E03               	movlw	high _eusart2TxBuffer
 23161  016C1E  20F4               	addwfc	prodh,w,c
 23162  016C20  6EDA               	movwf	fsr2h,c
 23163  016C22  50DF               	movf	indf2,w,c
 23164  016C24  010E               	movlb	14	; () banked
 23165  016C26  6FF2               	movwf	242,b	;volatile
 23166                           
 23167                           ; BSR set to: 14
 23168  016C28  0101               	movlb	1	; () banked
 23169  016C2A  2BD5               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 23170                           
 23171                           ; BSR set to: 1
 23172                           ;eusart2.c: 205: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 23173  016C2C  0E7F               	movlw	127
 23174  016C2E  65D5               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 23175  016C30  D002               	goto	i1l392
 23176                           
 23177                           ; BSR set to: 1
 23178                           ;eusart2.c: 206: {
 23179                           ;eusart2.c: 207: eusart2TxTail = 0;
 23180  016C32  0E00               	movlw	0
 23181  016C34  6FD5               	movwf	_eusart2TxTail& (0+255),b	;volatile
 23182  016C36                     i1l392:
 23183                           
 23184                           ; BSR set to: 1
 23185                           ;eusart2.c: 208: }
 23186                           ;eusart2.c: 209: eusart2TxBufferRemaining++;
 23187                           
 23188                           ; BSR set to: 1
 23189  016C36  2BD4               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 23190                           
 23191                           ;eusart2.c: 210: }
 23192  016C38  0012               	return	
 23193  016C3A                     i1l391:
 23194                           
 23195                           ; BSR set to: 1
 23196                           ;eusart2.c: 211: else
 23197                           ;eusart2.c: 212: {
 23198                           ;eusart2.c: 213: PIE3bits.TX2IE = 0;
 23199  016C3A  010E               	movlb	14	; () banked
 23200  016C3C  9D2C               	bcf	44,6,b	;volatile
 23201  016C3E  0012               	return	
 23202  016C40                     __end_of_EUSART2_Transmit_ISR:
 23203                           	opt stack 0
 23204                           tosu	equ	0xFFF
 23205                           tosh	equ	0xFFE
 23206                           tosl	equ	0xFFD
 23207                           pclatu	equ	0xFFB
 23208                           pclath	equ	0xFFA
 23209                           tblptru	equ	0xFF8
 23210                           tblptrh	equ	0xFF7
 23211                           tblptrl	equ	0xFF6
 23212                           tablat	equ	0xFF5
 23213                           prodh	equ	0xFF4
 23214                           prodl	equ	0xFF3
 23215                           intcon	equ	0xFF2
 23216                           indf0	equ	0xFEF
 23217                           postinc0	equ	0xFEE
 23218                           fsr0h	equ	0xFEA
 23219                           fsr0l	equ	0xFE9
 23220                           wreg	equ	0xFE8
 23221                           indf1	equ	0xFE7
 23222                           postdec1	equ	0xFE5
 23223                           plusw1	equ	0xFE3
 23224                           fsr1h	equ	0xFE2
 23225                           fsr1l	equ	0xFE1
 23226                           bsr	equ	0xFE0
 23227                           indf2	equ	0xFDF
 23228                           postinc2	equ	0xFDE
 23229                           postdec2	equ	0xFDD
 23230                           plusw2	equ	0xFDB
 23231                           fsr2h	equ	0xFDA
 23232                           fsr2l	equ	0xFD9
 23233                           status	equ	0xFD8
 23234                           
 23235 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 23236 ;; Defined at:
 23237 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 23238 ;; Parameters:    Size  Location     Type
 23239 ;;		None
 23240 ;; Auto vars:     Size  Location     Type
 23241 ;;		None
 23242 ;; Return value:  Size  Location     Type
 23243 ;;                  1    wreg      void 
 23244 ;; Registers used:
 23245 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23246 ;; Tracked objects:
 23247 ;;		On entry : 0/0
 23248 ;;		On exit  : 0/0
 23249 ;;		Unchanged: 0/0
 23250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23253 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23254 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23255 ;;Total ram usage:       18 bytes
 23256 ;; Hardware stack levels used:    1
 23257 ;; Hardware stack levels required when called:    9
 23258 ;; This function calls:
 23259 ;;		Absolute function
 23260 ;;		_ADCC_ISR
 23261 ;;		_EUSART2_Receive_ISR
 23262 ;;		_TMR5_ISR
 23263 ;; This function is called by:
 23264 ;;		Interrupt level 2
 23265 ;; This function uses a non-reentrant model
 23266 ;;
 23267                           
 23268                           	psect	intcode
 23269  000008                     __pintcode:
 23270                           	opt stack 0
 23271  000008                     _INTERRUPT_InterruptManagerHigh:
 23272                           	opt stack 9
 23273                           
 23274                           ;incstack = 0
 23275  000008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23276  00000A  EF1C  F0AB         	goto	int_func
 23277                           tosu	equ	0xFFF
 23278                           tosh	equ	0xFFE
 23279                           tosl	equ	0xFFD
 23280                           pclatu	equ	0xFFB
 23281                           pclath	equ	0xFFA
 23282                           tblptru	equ	0xFF8
 23283                           tblptrh	equ	0xFF7
 23284                           tblptrl	equ	0xFF6
 23285                           tablat	equ	0xFF5
 23286                           prodh	equ	0xFF4
 23287                           prodl	equ	0xFF3
 23288                           intcon	equ	0xFF2
 23289                           indf0	equ	0xFEF
 23290                           postinc0	equ	0xFEE
 23291                           fsr0h	equ	0xFEA
 23292                           fsr0l	equ	0xFE9
 23293                           wreg	equ	0xFE8
 23294                           indf1	equ	0xFE7
 23295                           postdec1	equ	0xFE5
 23296                           plusw1	equ	0xFE3
 23297                           fsr1h	equ	0xFE2
 23298                           fsr1l	equ	0xFE1
 23299                           bsr	equ	0xFE0
 23300                           indf2	equ	0xFDF
 23301                           postinc2	equ	0xFDE
 23302                           postdec2	equ	0xFDD
 23303                           plusw2	equ	0xFDB
 23304                           fsr2h	equ	0xFDA
 23305                           fsr2l	equ	0xFD9
 23306                           status	equ	0xFD8
 23307                           
 23308                           	psect	intcode_body
 23309  015638                     __pintcode_body:
 23310                           	opt stack 9
 23311  015638                     int_func:
 23312                           	opt stack 9
 23313  015638  CFFA F0B6          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 23314  01563C  CFFB F0B7          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 23315  015640  CFE9 F0B8          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 23316  015644  CFEA F0B9          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 23317  015648  CFE1 F0BA          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 23318  01564C  CFE2 F0BB          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 23319  015650  CFD9 F0BC          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 23320  015654  CFDA F0BD          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 23321  015658  CFF3 F0BE          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 23322  01565C  CFF4 F0BF          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 23323  015660  CFF6 F0C0          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 23324  015664  CFF7 F0C1          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 23325  015668  CFF8 F0C2          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 23326  01566C  CFF5 F0C3          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 23327  015670  C05F  F0C4         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 23328  015674  C060  F0C5         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 23329  015678  C061  F0C6         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 23330  01567C  C062  F0C7         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 23331                           
 23332                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 23333  015680  010E               	movlb	14	; () banked
 23334  015682  BF2C               	btfsc	44,7,b	;volatile
 23335                           
 23336                           ; BSR set to: 14
 23337  015684  AF36               	btfss	54,7,b	;volatile
 23338  015686  D00D               	goto	i2l202
 23339                           
 23340                           ; BSR set to: 14
 23341                           ;interrupt_manager.c: 84: {
 23342                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 23343  015688  D801               	call	i2u1954_48
 23344  01568A  D016               	goto	i2l206
 23345  01568C                     i2u1954_48:
 23346  01568C  0005               	push	
 23347  01568E  6EFA               	movwf	pclath,c
 23348  015690  0101               	movlb	1	; () banked
 23349  015692  51C7               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 23350  015694  6EFD               	movwf	tosl,c
 23351  015696  51C8               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 23352  015698  6EFE               	movwf	tosh,c
 23353  01569A  51C9               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 23354  01569C  6EFF               	movwf	tosu,c
 23355  01569E  50FA               	movf	pclath,w,c
 23356  0156A0  0012               	return		;indir
 23357  0156A2                     i2l202:
 23358                           
 23359                           ; BSR set to: 14
 23360                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 23361  0156A2  B92E               	btfsc	46,4,b	;volatile
 23362                           
 23363                           ; BSR set to: 14
 23364  0156A4  A938               	btfss	56,4,b	;volatile
 23365  0156A6  D003               	goto	i2l204
 23366                           
 23367                           ; BSR set to: 14
 23368                           ;interrupt_manager.c: 88: {
 23369                           ;interrupt_manager.c: 89: TMR5_ISR();
 23370  0156A8  EC3A  F0B6         	call	_TMR5_ISR	;wreg free
 23371                           
 23372                           ;interrupt_manager.c: 90: }
 23373  0156AC  D005               	goto	i2l206
 23374  0156AE                     i2l204:
 23375                           
 23376                           ; BSR set to: 14
 23377                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 23378  0156AE  B12A               	btfsc	42,0,b	;volatile
 23379                           
 23380                           ; BSR set to: 14
 23381  0156B0  A134               	btfss	52,0,b	;volatile
 23382  0156B2  D002               	goto	i2l206
 23383                           
 23384                           ; BSR set to: 14
 23385                           ;interrupt_manager.c: 92: {
 23386                           ;interrupt_manager.c: 93: ADCC_ISR();
 23387  0156B4  ECDB  F0B6         	call	_ADCC_ISR	;wreg free
 23388  0156B8                     i2l206:
 23389                           
 23390                           ;interrupt_manager.c: 95: else
 23391                           ;interrupt_manager.c: 96: {
 23392  0156B8  C0C7  F062         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 23393  0156BC  C0C6  F061         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 23394  0156C0  C0C5  F060         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 23395  0156C4  C0C4  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 23396  0156C8  C0C3  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 23397  0156CC  C0C2  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 23398  0156D0  C0C1  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 23399  0156D4  C0C0  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 23400  0156D8  C0BF  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 23401  0156DC  C0BE  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 23402  0156E0  C0BD  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 23403  0156E4  C0BC  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 23404  0156E8  C0BB  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 23405  0156EC  C0BA  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 23406  0156F0  C0B9  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 23407  0156F4  C0B8  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 23408  0156F8  C0B7  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 23409  0156FC  C0B6  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 23410  015700  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 23411  015702  0011               	retfie		f
 23412  015704                     __end_of_INTERRUPT_InterruptManagerHigh:
 23413                           	opt stack 0
 23414                           tosu	equ	0xFFF
 23415                           tosh	equ	0xFFE
 23416                           tosl	equ	0xFFD
 23417                           pclatu	equ	0xFFB
 23418                           pclath	equ	0xFFA
 23419                           tblptru	equ	0xFF8
 23420                           tblptrh	equ	0xFF7
 23421                           tblptrl	equ	0xFF6
 23422                           tablat	equ	0xFF5
 23423                           prodh	equ	0xFF4
 23424                           prodl	equ	0xFF3
 23425                           intcon	equ	0xFF2
 23426                           indf0	equ	0xFEF
 23427                           postinc0	equ	0xFEE
 23428                           fsr0h	equ	0xFEA
 23429                           fsr0l	equ	0xFE9
 23430                           wreg	equ	0xFE8
 23431                           indf1	equ	0xFE7
 23432                           postdec1	equ	0xFE5
 23433                           plusw1	equ	0xFE3
 23434                           fsr1h	equ	0xFE2
 23435                           fsr1l	equ	0xFE1
 23436                           bsr	equ	0xFE0
 23437                           indf2	equ	0xFDF
 23438                           postinc2	equ	0xFDE
 23439                           postdec2	equ	0xFDD
 23440                           plusw2	equ	0xFDB
 23441                           fsr2h	equ	0xFDA
 23442                           fsr2l	equ	0xFD9
 23443                           status	equ	0xFD8
 23444                           
 23445 ;; *************** function _TMR5_ISR *****************
 23446 ;; Defined at:
 23447 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 23448 ;; Parameters:    Size  Location     Type
 23449 ;;		None
 23450 ;; Auto vars:     Size  Location     Type
 23451 ;;		None
 23452 ;; Return value:  Size  Location     Type
 23453 ;;                  1    wreg      void 
 23454 ;; Registers used:
 23455 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 23456 ;; Tracked objects:
 23457 ;;		On entry : 0/0
 23458 ;;		On exit  : 0/0
 23459 ;;		Unchanged: 0/0
 23460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23465 ;;Total ram usage:        0 bytes
 23466 ;; Hardware stack levels used:    1
 23467 ;; Hardware stack levels required when called:    1
 23468 ;; This function calls:
 23469 ;;		Absolute function
 23470 ;;		_TMR5_DefaultInterruptHandler
 23471 ;;		_TMR5_WriteTimer
 23472 ;; This function is called by:
 23473 ;;		_INTERRUPT_InterruptManagerHigh
 23474 ;; This function uses a non-reentrant model
 23475 ;;
 23476                           
 23477                           	psect	text85
 23478  016C74                     __ptext85:
 23479                           	opt stack 0
 23480  016C74                     _TMR5_ISR:
 23481                           	opt stack 16
 23482                           
 23483                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 23484                           
 23485                           ;incstack = 0
 23486  016C74  010E               	movlb	14	; () banked
 23487  016C76  9938               	bcf	56,4,b	;volatile
 23488                           
 23489                           ; BSR set to: 14
 23490                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 23491  016C78  C1CD  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 23492  016C7C  C1CE  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 23493  016C80  ECAB  F0B7         	call	_TMR5_WriteTimer	;wreg free
 23494                           
 23495                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 23496  016C84  0101               	movlb	1	; () banked
 23497  016C86  51BE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23498  016C88  11BF               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23499  016C8A  11C0               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23500  016C8C  B4D8               	btfsc	status,2,c
 23501  016C8E  0012               	return	
 23502                           
 23503                           ; BSR set to: 1
 23504                           ;tmr5.c: 172: {
 23505                           ;tmr5.c: 173: TMR5_InterruptHandler();
 23506  016C90  D801               	call	i2u1939_48
 23507  016C92  0012               	return	
 23508  016C94                     i2u1939_48:
 23509  016C94  0005               	push	
 23510  016C96  6EFA               	movwf	pclath,c
 23511  016C98  51BE               	movf	_TMR5_InterruptHandler& (0+255),w,b
 23512  016C9A  6EFD               	movwf	tosl,c
 23513  016C9C  51BF               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 23514  016C9E  6EFE               	movwf	tosh,c
 23515  016CA0  51C0               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 23516  016CA2  6EFF               	movwf	tosu,c
 23517  016CA4  50FA               	movf	pclath,w,c
 23518  016CA6  0012               	return		;indir
 23519  016CA8                     __end_of_TMR5_ISR:
 23520                           	opt stack 0
 23521                           tosu	equ	0xFFF
 23522                           tosh	equ	0xFFE
 23523                           tosl	equ	0xFFD
 23524                           pclatu	equ	0xFFB
 23525                           pclath	equ	0xFFA
 23526                           tblptru	equ	0xFF8
 23527                           tblptrh	equ	0xFF7
 23528                           tblptrl	equ	0xFF6
 23529                           tablat	equ	0xFF5
 23530                           prodh	equ	0xFF4
 23531                           prodl	equ	0xFF3
 23532                           intcon	equ	0xFF2
 23533                           indf0	equ	0xFEF
 23534                           postinc0	equ	0xFEE
 23535                           fsr0h	equ	0xFEA
 23536                           fsr0l	equ	0xFE9
 23537                           wreg	equ	0xFE8
 23538                           indf1	equ	0xFE7
 23539                           postdec1	equ	0xFE5
 23540                           plusw1	equ	0xFE3
 23541                           fsr1h	equ	0xFE2
 23542                           fsr1l	equ	0xFE1
 23543                           bsr	equ	0xFE0
 23544                           indf2	equ	0xFDF
 23545                           postinc2	equ	0xFDE
 23546                           postdec2	equ	0xFDD
 23547                           plusw2	equ	0xFDB
 23548                           fsr2h	equ	0xFDA
 23549                           fsr2l	equ	0xFD9
 23550                           status	equ	0xFD8
 23551                           
 23552 ;; *************** function _TMR5_WriteTimer *****************
 23553 ;; Defined at:
 23554 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 23555 ;; Parameters:    Size  Location     Type
 23556 ;;  timerVal        2    0[COMRAM] unsigned int 
 23557 ;; Auto vars:     Size  Location     Type
 23558 ;;		None
 23559 ;; Return value:  Size  Location     Type
 23560 ;;                  1    wreg      void 
 23561 ;; Registers used:
 23562 ;;		wreg, status,2
 23563 ;; Tracked objects:
 23564 ;;		On entry : 0/0
 23565 ;;		On exit  : 0/0
 23566 ;;		Unchanged: 0/0
 23567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23572 ;;Total ram usage:        2 bytes
 23573 ;; Hardware stack levels used:    1
 23574 ;; This function calls:
 23575 ;;		Nothing
 23576 ;; This function is called by:
 23577 ;;		_TMR5_ISR
 23578 ;;		_TMR5_Reload
 23579 ;; This function uses a non-reentrant model
 23580 ;;
 23581                           
 23582                           	psect	text86
 23583  016F56                     __ptext86:
 23584                           	opt stack 0
 23585  016F56                     _TMR5_WriteTimer:
 23586                           	opt stack 16
 23587                           
 23588                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 23589                           
 23590                           ;incstack = 0
 23591  016F56  A4C3               	btfss	4035,2,c	;volatile
 23592  016F58  D007               	goto	i2l702
 23593                           
 23594                           ;tmr5.c: 130: {
 23595                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 23596  016F5A  90C3               	bcf	4035,0,c	;volatile
 23597                           
 23598                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 23599  016F5C  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 23600  016F5E  6EC2               	movwf	4034,c	;volatile
 23601                           
 23602                           ;tmr5.c: 136: TMR5L = timerVal;
 23603  016F60  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 23604                           
 23605                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 23606  016F64  80C3               	bsf	4035,0,c	;volatile
 23607                           
 23608                           ;tmr5.c: 140: }
 23609  016F66  0012               	return	
 23610  016F68                     i2l702:
 23611                           
 23612                           ;tmr5.c: 141: else
 23613                           ;tmr5.c: 142: {
 23614                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 23615  016F68  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 23616  016F6A  6EC2               	movwf	4034,c	;volatile
 23617                           
 23618                           ;tmr5.c: 145: TMR5L = timerVal;
 23619  016F6C  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 23620  016F70  0012               	return	
 23621  016F72                     __end_of_TMR5_WriteTimer:
 23622                           	opt stack 0
 23623                           tosu	equ	0xFFF
 23624                           tosh	equ	0xFFE
 23625                           tosl	equ	0xFFD
 23626                           pclatu	equ	0xFFB
 23627                           pclath	equ	0xFFA
 23628                           tblptru	equ	0xFF8
 23629                           tblptrh	equ	0xFF7
 23630                           tblptrl	equ	0xFF6
 23631                           tablat	equ	0xFF5
 23632                           prodh	equ	0xFF4
 23633                           prodl	equ	0xFF3
 23634                           intcon	equ	0xFF2
 23635                           indf0	equ	0xFEF
 23636                           postinc0	equ	0xFEE
 23637                           fsr0h	equ	0xFEA
 23638                           fsr0l	equ	0xFE9
 23639                           wreg	equ	0xFE8
 23640                           indf1	equ	0xFE7
 23641                           postdec1	equ	0xFE5
 23642                           plusw1	equ	0xFE3
 23643                           fsr1h	equ	0xFE2
 23644                           fsr1l	equ	0xFE1
 23645                           bsr	equ	0xFE0
 23646                           indf2	equ	0xFDF
 23647                           postinc2	equ	0xFDE
 23648                           postdec2	equ	0xFDD
 23649                           plusw2	equ	0xFDB
 23650                           fsr2h	equ	0xFDA
 23651                           fsr2l	equ	0xFD9
 23652                           status	equ	0xFD8
 23653                           
 23654 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 23655 ;; Defined at:
 23656 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 23657 ;; Parameters:    Size  Location     Type
 23658 ;;		None
 23659 ;; Auto vars:     Size  Location     Type
 23660 ;;		None
 23661 ;; Return value:  Size  Location     Type
 23662 ;;                  1    wreg      void 
 23663 ;; Registers used:
 23664 ;;		None
 23665 ;; Tracked objects:
 23666 ;;		On entry : 0/0
 23667 ;;		On exit  : 0/0
 23668 ;;		Unchanged: 0/0
 23669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23674 ;;Total ram usage:        0 bytes
 23675 ;; Hardware stack levels used:    1
 23676 ;; This function calls:
 23677 ;;		Nothing
 23678 ;; This function is called by:
 23679 ;;		_TMR5_Initialize
 23680 ;;		_TMR5_ISR
 23681 ;; This function uses a non-reentrant model
 23682 ;;
 23683                           
 23684                           	psect	text87
 23685  0170BE                     __ptext87:
 23686                           	opt stack 0
 23687  0170BE                     _TMR5_DefaultInterruptHandler:
 23688                           	opt stack 16
 23689                           
 23690                           ;incstack = 0
 23691  0170BE  0012               	return		;funcret
 23692  0170C0                     __end_of_TMR5_DefaultInterruptHandler:
 23693                           	opt stack 0
 23694                           tosu	equ	0xFFF
 23695                           tosh	equ	0xFFE
 23696                           tosl	equ	0xFFD
 23697                           pclatu	equ	0xFFB
 23698                           pclath	equ	0xFFA
 23699                           tblptru	equ	0xFF8
 23700                           tblptrh	equ	0xFF7
 23701                           tblptrl	equ	0xFF6
 23702                           tablat	equ	0xFF5
 23703                           prodh	equ	0xFF4
 23704                           prodl	equ	0xFF3
 23705                           intcon	equ	0xFF2
 23706                           indf0	equ	0xFEF
 23707                           postinc0	equ	0xFEE
 23708                           fsr0h	equ	0xFEA
 23709                           fsr0l	equ	0xFE9
 23710                           wreg	equ	0xFE8
 23711                           indf1	equ	0xFE7
 23712                           postdec1	equ	0xFE5
 23713                           plusw1	equ	0xFE3
 23714                           fsr1h	equ	0xFE2
 23715                           fsr1l	equ	0xFE1
 23716                           bsr	equ	0xFE0
 23717                           indf2	equ	0xFDF
 23718                           postinc2	equ	0xFDE
 23719                           postdec2	equ	0xFDD
 23720                           plusw2	equ	0xFDB
 23721                           fsr2h	equ	0xFDA
 23722                           fsr2l	equ	0xFD9
 23723                           status	equ	0xFD8
 23724                           
 23725 ;; *************** function _EUSART2_Receive_ISR *****************
 23726 ;; Defined at:
 23727 ;;		line 217 in file "mcc_generated_files/eusart2.c"
 23728 ;; Parameters:    Size  Location     Type
 23729 ;;		None
 23730 ;; Auto vars:     Size  Location     Type
 23731 ;;		None
 23732 ;; Return value:  Size  Location     Type
 23733 ;;                  1    wreg      void 
 23734 ;; Registers used:
 23735 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23736 ;; Tracked objects:
 23737 ;;		On entry : 0/0
 23738 ;;		On exit  : 0/0
 23739 ;;		Unchanged: 0/0
 23740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23745 ;;Total ram usage:        0 bytes
 23746 ;; Hardware stack levels used:    1
 23747 ;; Hardware stack levels required when called:    4
 23748 ;; This function calls:
 23749 ;;		i2_printf
 23750 ;; This function is called by:
 23751 ;;		_EUSART2_Initialize
 23752 ;;		_INTERRUPT_InterruptManagerHigh
 23753 ;; This function uses a non-reentrant model
 23754 ;;
 23755                           
 23756                           	psect	text88
 23757  015876                     __ptext88:
 23758                           	opt stack 0
 23759  015876                     _EUSART2_Receive_ISR:
 23760                           	opt stack 13
 23761                           
 23762                           ;eusart2.c: 220: if(1 == RC2STAbits.OERR)
 23763                           
 23764                           ;incstack = 0
 23765  015876  010E               	movlb	14	; () banked
 23766  015878  A3F5               	btfss	245,1,b	;volatile
 23767  01587A  D003               	goto	i2l397
 23768                           
 23769                           ; BSR set to: 14
 23770                           ;eusart2.c: 221: {
 23771                           ;eusart2.c: 224: RC2STAbits.CREN = 0;
 23772  01587C  99F5               	bcf	245,4,b	;volatile
 23773                           
 23774                           ;eusart2.c: 225: RC2STAbits.CREN = 1;
 23775  01587E  89F5               	bsf	245,4,b	;volatile
 23776                           
 23777                           ;eusart2.c: 226: LATFbits.LATF1 = 1;
 23778  015880  827E               	bsf	3966,1,c	;volatile
 23779  015882                     i2l397:
 23780                           
 23781                           ; BSR set to: 14
 23782                           ;eusart2.c: 227: }
 23783                           ;eusart2.c: 229: LATFbits.LATF1 = 0;
 23784  015882  927E               	bcf	3966,1,c	;volatile
 23785                           
 23786                           ; BSR set to: 14
 23787                           ;eusart2.c: 232: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 23788  015884  0100               	movlb	0	; () banked
 23789  015886  51ED               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 23790  015888  0D01               	mullw	1
 23791  01588A  0E00               	movlw	low _eusart2RxBuffer
 23792  01588C  24F3               	addwf	prodl,w,c
 23793  01588E  6ED9               	movwf	fsr2l,c
 23794  015890  0E02               	movlw	high _eusart2RxBuffer
 23795  015892  20F4               	addwfc	prodh,w,c
 23796  015894  6EDA               	movwf	fsr2h,c
 23797  015896  CEF1 FFDF          	movff	3825,indf2	;volatile
 23798                           
 23799                           ; BSR set to: 0
 23800  01589A  2BED               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 23801                           
 23802                           ; BSR set to: 0
 23803                           ;eusart2.c: 233: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 23804  01589C  0E3F               	movlw	63
 23805  01589E  65ED               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 23806  0158A0  D002               	goto	i2l398
 23807                           
 23808                           ; BSR set to: 0
 23809                           ;eusart2.c: 234: {
 23810                           ;eusart2.c: 235: eusart2RxHead = 0;
 23811  0158A2  0E00               	movlw	0
 23812  0158A4  6FED               	movwf	_eusart2RxHead& (0+255),b	;volatile
 23813  0158A6                     i2l398:
 23814                           
 23815                           ; BSR set to: 0
 23816                           ;eusart2.c: 236: }
 23817                           ;eusart2.c: 237: eusart2RxCount++;
 23818                           
 23819                           ; BSR set to: 0
 23820  0158A6  0101               	movlb	1	; () banked
 23821  0158A8  2BD2               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 23822                           
 23823                           ; BSR set to: 1
 23824                           ;eusart2.c: 243: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 23825  0158AA  0E0A               	movlw	10
 23826  0158AC  010E               	movlb	14	; () banked
 23827  0158AE  19F1               	xorwf	241,w,b	;volatile
 23828  0158B0  B4D8               	btfsc	status,2,c
 23829  0158B2  D004               	goto	i2u1949_40
 23830                           
 23831                           ; BSR set to: 14
 23832  0158B4  0E0D               	movlw	13
 23833  0158B6  19F1               	xorwf	241,w,b	;volatile
 23834  0158B8  A4D8               	btfss	status,2,c
 23835  0158BA  D006               	goto	i2l399
 23836  0158BC                     i2u1949_40:
 23837                           
 23838                           ; BSR set to: 14
 23839                           ;eusart2.c: 245: eusart2RxStringReady = 1;
 23840  0158BC  0100               	movlb	0	; () banked
 23841  0158BE  81FF               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 23842                           
 23843                           ; BSR set to: 0
 23844                           ;eusart2.c: 248: RC2REG = 0;
 23845  0158C0  0E00               	movlw	0
 23846  0158C2  010E               	movlb	14	; () banked
 23847  0158C4  6FF1               	movwf	241,b	;volatile
 23848                           
 23849                           ;eusart2.c: 250: }
 23850  0158C6  D002               	goto	i2l402
 23851  0158C8                     i2l399:
 23852                           
 23853                           ; BSR set to: 14
 23854                           ;eusart2.c: 252: else {
 23855                           ;eusart2.c: 254: eusart2RxStringReady = 0;
 23856  0158C8  0100               	movlb	0	; () banked
 23857  0158CA  91FF               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 23858  0158CC                     i2l402:
 23859                           
 23860                           ;eusart2.c: 256: }
 23861                           ;eusart2.c: 259: if((RC2REG == (int) '\b')) {
 23862                           
 23863                           ; BSR set to: 0
 23864  0158CC  0E08               	movlw	8
 23865  0158CE  010E               	movlb	14	; () banked
 23866  0158D0  19F1               	xorwf	241,w,b	;volatile
 23867  0158D2  A4D8               	btfss	status,2,c
 23868  0158D4  0012               	return	
 23869                           
 23870                           ; BSR set to: 14
 23871                           ;eusart2.c: 261: eusart2RxBuffer[eusart2RxHead] = '\0';
 23872  0158D6  0100               	movlb	0	; () banked
 23873  0158D8  51ED               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 23874  0158DA  0D01               	mullw	1
 23875  0158DC  0E00               	movlw	low _eusart2RxBuffer
 23876  0158DE  24F3               	addwf	prodl,w,c
 23877  0158E0  6ED9               	movwf	fsr2l,c
 23878  0158E2  0E02               	movlw	high _eusart2RxBuffer
 23879  0158E4  20F4               	addwfc	prodh,w,c
 23880  0158E6  6EDA               	movwf	fsr2h,c
 23881  0158E8  0E00               	movlw	0
 23882  0158EA  6EDF               	movwf	indf2,c
 23883                           
 23884                           ; BSR set to: 0
 23885                           ;eusart2.c: 262: eusart2RxHead--;
 23886  0158EC  07ED               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 23887                           
 23888                           ; BSR set to: 0
 23889                           ;eusart2.c: 265: printf("\033[K");
 23890  0158EE  0EC4               	movlw	low STR_1
 23891  0158F0  6F66               	movwf	i2printf@f& (0+255),b
 23892  0158F2  0EFF               	movlw	high STR_1
 23893  0158F4  6F67               	movwf	(i2printf@f+1)& (0+255),b
 23894  0158F6  ECCE  F08B         	call	i2_printf	;wreg free
 23895                           
 23896                           ;eusart2.c: 267: if(eusart2RxHead != eusart2RxTail) {
 23897  0158FA  0101               	movlb	1	; () banked
 23898  0158FC  51D3               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 23899  0158FE  0100               	movlb	0	; () banked
 23900  015900  19ED               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 23901  015902  B4D8               	btfsc	status,2,c
 23902  015904  D00B               	goto	i2l404
 23903                           
 23904                           ; BSR set to: 0
 23905                           ;eusart2.c: 269: eusart2RxBuffer[eusart2RxHead] = '\0';
 23906  015906  51ED               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 23907  015908  0D01               	mullw	1
 23908  01590A  0E00               	movlw	low _eusart2RxBuffer
 23909  01590C  24F3               	addwf	prodl,w,c
 23910  01590E  6ED9               	movwf	fsr2l,c
 23911  015910  0E02               	movlw	high _eusart2RxBuffer
 23912  015912  20F4               	addwfc	prodh,w,c
 23913  015914  6EDA               	movwf	fsr2h,c
 23914  015916  0E00               	movlw	0
 23915  015918  6EDF               	movwf	indf2,c
 23916                           
 23917                           ; BSR set to: 0
 23918                           ;eusart2.c: 270: eusart2RxHead--;
 23919  01591A  07ED               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 23920  01591C                     i2l404:
 23921                           
 23922                           ; BSR set to: 0
 23923                           ;eusart2.c: 272: }
 23924                           ;eusart2.c: 274: RC2REG = 0;
 23925                           
 23926                           ; BSR set to: 0
 23927  01591C  0E00               	movlw	0
 23928  01591E  010E               	movlb	14	; () banked
 23929  015920  6FF1               	movwf	241,b	;volatile
 23930  015922  0012               	return	
 23931  015924                     __end_of_EUSART2_Receive_ISR:
 23932                           	opt stack 0
 23933                           tosu	equ	0xFFF
 23934                           tosh	equ	0xFFE
 23935                           tosl	equ	0xFFD
 23936                           pclatu	equ	0xFFB
 23937                           pclath	equ	0xFFA
 23938                           tblptru	equ	0xFF8
 23939                           tblptrh	equ	0xFF7
 23940                           tblptrl	equ	0xFF6
 23941                           tablat	equ	0xFF5
 23942                           prodh	equ	0xFF4
 23943                           prodl	equ	0xFF3
 23944                           intcon	equ	0xFF2
 23945                           indf0	equ	0xFEF
 23946                           postinc0	equ	0xFEE
 23947                           fsr0h	equ	0xFEA
 23948                           fsr0l	equ	0xFE9
 23949                           wreg	equ	0xFE8
 23950                           indf1	equ	0xFE7
 23951                           postdec1	equ	0xFE5
 23952                           plusw1	equ	0xFE3
 23953                           fsr1h	equ	0xFE2
 23954                           fsr1l	equ	0xFE1
 23955                           bsr	equ	0xFE0
 23956                           indf2	equ	0xFDF
 23957                           postinc2	equ	0xFDE
 23958                           postdec2	equ	0xFDD
 23959                           plusw2	equ	0xFDB
 23960                           fsr2h	equ	0xFDA
 23961                           fsr2l	equ	0xFD9
 23962                           status	equ	0xFD8
 23963                           
 23964 ;; *************** function i2_printf *****************
 23965 ;; Defined at:
 23966 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 23967 ;; Parameters:    Size  Location     Type
 23968 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 23969 ;;		 -> STR_116(30), STR_115(23), STR_114(39), STR_113(37), 
 23970 ;;		 -> STR_112(33), STR_111(1951), STR_109(53), STR_107(58), 
 23971 ;;		 -> STR_105(71), STR_104(63), STR_103(37), STR_102(46), 
 23972 ;;		 -> STR_101(102), STR_100(86), STR_98(25), STR_96(42), 
 23973 ;;		 -> STR_94(41), STR_92(40), STR_90(56), STR_88(34), 
 23974 ;;		 -> STR_86(34), STR_84(32), STR_82(37), STR_80(56), 
 23975 ;;		 -> STR_78(34), STR_76(34), STR_74(35), STR_72(21), 
 23976 ;;		 -> STR_70(24), STR_69(48), STR_59(49), STR_58(64), 
 23977 ;;		 -> STR_56(34), STR_54(82), STR_52(47), STR_51(17), 
 23978 ;;		 -> STR_48(52), STR_46(4), STR_45(5), STR_43(4), 
 23979 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 23980 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 23981 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 23982 ;;		 -> STR_1(4), 
 23983 ;; Auto vars:     Size  Location     Type
 23984 ;;  printf          4   35[BANK0 ] unsigned long 
 23985 ;;  printf          4   28[BANK0 ] struct .
 23986 ;;  printf          3   32[BANK0 ] struct .
 23987 ;;  printf          2   39[BANK0 ] int 
 23988 ;;  printf          2   26[BANK0 ] int 
 23989 ;;  printf          2   24[BANK0 ] unsigned short 
 23990 ;;  printf          2   22[BANK0 ] PTR void [1]
 23991 ;;		 -> ?i2_printf(2), ?_printf(2), 
 23992 ;;  printf          2   20[BANK0 ] PTR const unsigned char 
 23993 ;;		 -> STR_132(7), printf@c(1), STR_131(30), STR_130(22), 
 23994 ;;		 -> STR_129(21), STR_128(27), STR_127(29), STR_126(41), 
 23995 ;;		 -> STR_125(28), STR_124(32), STR_123(25), STR_122(19), 
 23996 ;;		 -> STR_121(16), STR_120(15), RAM(3561), ringBufferLUT@channel_name(22), 
 23997 ;;		 -> TRIAC_Firing_Angle(3), 
 23998 ;;  printf          2   18[BANK0 ] unsigned int 
 23999 ;;  printf          2    0        int 
 24000 ;;  printf          1   41[BANK0 ] char 
 24001 ;;  printf          1   17[BANK0 ] unsigned char 
 24002 ;;  printf          1    0        unsigned char 
 24003 ;; Return value:  Size  Location     Type
 24004 ;;                  2    6[BANK0 ] int 
 24005 ;; Registers used:
 24006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24007 ;; Tracked objects:
 24008 ;;		On entry : 0/0
 24009 ;;		On exit  : 0/0
 24010 ;;		Unchanged: 0/0
 24011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24013 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24014 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24015 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24016 ;;Total ram usage:       36 bytes
 24017 ;; Hardware stack levels used:    1
 24018 ;; Hardware stack levels required when called:    3
 24019 ;; This function calls:
 24020 ;;		i2___awdiv
 24021 ;;		i2___ftadd
 24022 ;;		i2___ftge
 24023 ;;		i2___ftmul
 24024 ;;		i2___ftneg
 24025 ;;		i2___ftsub
 24026 ;;		i2___fttol
 24027 ;;		i2___lldiv
 24028 ;;		i2___llmod
 24029 ;;		i2___lltoft
 24030 ;;		i2___wmul
 24031 ;;		i2__div_to_l_
 24032 ;;		i2__tdiv_to_l_
 24033 ;;		i2_fround
 24034 ;;		i2_isdigit
 24035 ;;		i2_putch
 24036 ;;		i2_scale
 24037 ;; This function is called by:
 24038 ;;		_EUSART2_Receive_ISR
 24039 ;; This function uses a non-reentrant model
 24040 ;;
 24041                           
 24042                           	psect	text89
 24043  01179C                     __ptext89:
 24044                           	opt stack 0
 24045  01179C                     i2_printf:
 24046                           	opt stack 13
 24047                           
 24048                           ;doprnt.c: 466: va_list ap;
 24049                           ;doprnt.c: 499: signed char c;
 24050                           ;doprnt.c: 501: int width;
 24051                           ;doprnt.c: 504: int prec;
 24052                           ;doprnt.c: 508: unsigned short flag;
 24053                           ;doprnt.c: 515: char d;
 24054                           ;doprnt.c: 516: double fval;
 24055                           ;doprnt.c: 517: int exp;
 24056                           ;doprnt.c: 523: union {
 24057                           ;doprnt.c: 524: unsigned long vd;
 24058                           ;doprnt.c: 525: double integ;
 24059                           ;doprnt.c: 526: } tmpval;
 24060                           ;doprnt.c: 528: unsigned long val;
 24061                           ;doprnt.c: 529: unsigned len;
 24062                           ;doprnt.c: 530: const char * cp;
 24063                           ;doprnt.c: 533: *ap = __va_start();
 24064                           
 24065                           ; BSR set to: 14
 24066                           ;incstack = 0
 24067  01179C  0E68               	movlw	low (?i2_printf+2)
 24068  01179E  0100               	movlb	0	; () banked
 24069  0117A0  6F76               	movwf	i2printf@ap& (0+255),b
 24070  0117A2  0E00               	movlw	high (?i2_printf+2)
 24071  0117A4  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 24072                           
 24073                           ;doprnt.c: 536: while(c = *f++) {
 24074  0117A6  EF09  F091         	goto	i2u1935_40
 24075  0117AA                     
 24076                           ; BSR set to: 0
 24077                           ;doprnt.c: 538: if(c != '%')
 24078                           
 24079                           ; BSR set to: 0
 24080  0117AA  0E25               	movlw	37
 24081  0117AC  1989               	xorwf	i2printf@c& (0+255),w,b
 24082  0117AE  B4D8               	btfsc	status,2,c
 24083  0117B0  D005               	goto	i2l1315
 24084                           
 24085                           ; BSR set to: 0
 24086                           ;doprnt.c: 540: {
 24087                           ;doprnt.c: 541: (putch(c) );
 24088  0117B2  5189               	movf	i2printf@c& (0+255),w,b
 24089  0117B4  EC4B  F0B8         	call	i2_putch
 24090                           
 24091                           ;doprnt.c: 542: continue;
 24092  0117B8  EF09  F091         	goto	i2u1935_40
 24093  0117BC                     i2l1315:
 24094                           
 24095                           ;doprnt.c: 543: }
 24096                           ;doprnt.c: 548: flag = 0;
 24097  0117BC  0E00               	movlw	0
 24098  0117BE  0100               	movlb	0	; () banked
 24099  0117C0  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 24100  0117C2  0E00               	movlw	0
 24101  0117C4  6F78               	movwf	i2printf@flag& (0+255),b
 24102                           
 24103                           ; BSR set to: 0
 24104                           ;doprnt.c: 611: if(*f == '.') {
 24105  0117C6  C066  FFF6         	movff	i2printf@f,tblptrl
 24106  0117CA  C067  FFF7         	movff	i2printf@f+1,tblptrh
 24107  0117CE  0E00               	movlw	low (__mediumconst shr (0+16))
 24108  0117D0  6EF8               	movwf	tblptru,c
 24109  0117D2  0E0D               	movlw	(high __ramtop+-1)
 24110  0117D4  64F7               	cpfsgt	tblptrh,c
 24111  0117D6  D003               	bra	i2u1885_47
 24112  0117D8  0008               	tblrd		*
 24113  0117DA  50F5               	movf	tablat,w,c
 24114  0117DC  D005               	bra	i2u1885_40
 24115  0117DE                     i2u1885_47:
 24116  0117DE  CFF6 FFE9          	movff	tblptrl,fsr0l
 24117  0117E2  CFF7 FFEA          	movff	tblptrh,fsr0h
 24118  0117E6  50EF               	movf	indf0,w,c
 24119  0117E8                     i2u1885_40:
 24120  0117E8  0A2E               	xorlw	46
 24121  0117EA  A4D8               	btfss	status,2,c
 24122  0117EC  D048               	goto	i2l1316
 24123                           
 24124                           ;doprnt.c: 612: flag |= 0x4000;
 24125  0117EE  0100               	movlb	0	; () banked
 24126  0117F0  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 24127                           
 24128                           ;doprnt.c: 613: f++;
 24129  0117F2  4B66               	infsnz	i2printf@f& (0+255),f,b
 24130  0117F4  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 24131                           
 24132                           ; BSR set to: 0
 24133                           ;doprnt.c: 620: {
 24134                           ;doprnt.c: 621: prec = 0;
 24135  0117F6  0E00               	movlw	0
 24136  0117F8  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24137  0117FA  0E00               	movlw	0
 24138  0117FC  6F87               	movwf	i2printf@prec& (0+255),b
 24139                           
 24140                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 24141  0117FE  D029               	goto	i2l1317
 24142  011800                     
 24143                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 24144                           
 24145                           ; BSR set to: 0
 24146  011800  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 24147  011804  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 24148  011808  0E00               	movlw	0
 24149  01180A  6E12               	movwf	i2___wmul@multiplicand+1,c
 24150  01180C  0E0A               	movlw	10
 24151  01180E  6E11               	movwf	i2___wmul@multiplicand,c
 24152  011810  EC28  F0B7         	call	i2___wmul	;wreg free
 24153  011814  C066  FFF6         	movff	i2printf@f,tblptrl
 24154  011818  C067  FFF7         	movff	i2printf@f+1,tblptrh
 24155  01181C  0E00               	movlw	low (__mediumconst shr (0+16))
 24156  01181E  6EF8               	movwf	tblptru,c
 24157  011820  0E0D               	movlw	(high __ramtop+-1)
 24158  011822  64F7               	cpfsgt	tblptrh,c
 24159  011824  D003               	bra	i2u1887_47
 24160  011826  0008               	tblrd		*
 24161  011828  50F5               	movf	tablat,w,c
 24162  01182A  D005               	bra	i2u1887_40
 24163  01182C                     i2u1887_47:
 24164  01182C  CFF6 FFE9          	movff	tblptrl,fsr0l
 24165  011830  CFF7 FFEA          	movff	tblptrh,fsr0h
 24166  011834  50EF               	movf	indf0,w,c
 24167  011836                     i2u1887_40:
 24168  011836  0100               	movlb	0	; () banked
 24169  011838  6F68               	movwf	??i2_printf& (0+255),b
 24170  01183A  5168               	movf	??i2_printf& (0+255),w,b
 24171  01183C  260F               	addwf	?i2___wmul,f,c
 24172  01183E  0E00               	movlw	0
 24173  011840  2210               	addwfc	?i2___wmul+1,f,c
 24174  011842  0ED0               	movlw	208
 24175  011844  240F               	addwf	?i2___wmul,w,c
 24176  011846  6F87               	movwf	i2printf@prec& (0+255),b
 24177  011848  0EFF               	movlw	255
 24178  01184A  2010               	addwfc	?i2___wmul+1,w,c
 24179  01184C  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24180                           
 24181                           ; BSR set to: 0
 24182  01184E  4B66               	infsnz	i2printf@f& (0+255),f,b
 24183  011850  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 24184  011852                     i2l1317:
 24185                           
 24186                           ; BSR set to: 0
 24187                           
 24188                           ; BSR set to: 0
 24189  011852  C066  FFF6         	movff	i2printf@f,tblptrl
 24190  011856  C067  FFF7         	movff	i2printf@f+1,tblptrh
 24191  01185A  0E00               	movlw	low (__mediumconst shr (0+16))
 24192  01185C  6EF8               	movwf	tblptru,c
 24193  01185E  0E0D               	movlw	(high __ramtop+-1)
 24194  011860  64F7               	cpfsgt	tblptrh,c
 24195  011862  D003               	bra	i2u1888_47
 24196  011864  0008               	tblrd		*
 24197  011866  50F5               	movf	tablat,w,c
 24198  011868  D005               	bra	i2u1888_40
 24199  01186A                     i2u1888_47:
 24200  01186A  CFF6 FFE9          	movff	tblptrl,fsr0l
 24201  01186E  CFF7 FFEA          	movff	tblptrh,fsr0h
 24202  011872  50EF               	movf	indf0,w,c
 24203  011874                     i2u1888_40:
 24204  011874  EC80  F0B7         	call	i2_isdigit
 24205  011878  A0D8               	btfss	status,0,c
 24206  01187A  D07E               	goto	i2l1321
 24207  01187C  D7C1               	goto	i2l1318
 24208  01187E                     i2l1316:
 24209                           
 24210                           ;doprnt.c: 626: prec = 0;
 24211  01187E  0E00               	movlw	0
 24212  011880  0100               	movlb	0	; () banked
 24213  011882  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24214  011884  0E00               	movlw	0
 24215  011886  6F87               	movwf	i2printf@prec& (0+255),b
 24216                           
 24217                           ; BSR set to: 0
 24218                           ;doprnt.c: 628: flag |= 0x1000;
 24219  011888  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 24220                           
 24221                           ; BSR set to: 0
 24222                           ;doprnt.c: 630: }
 24223                           ;doprnt.c: 635: switch(c = *f++) {
 24224  01188A  D076               	goto	i2l1321
 24225  01188C                     
 24226                           ; BSR set to: 0
 24227                           ;doprnt.c: 663: flag |= 0x400;
 24228                           
 24229                           ; BSR set to: 0
 24230  01188C  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 24231                           
 24232                           ; BSR set to: 0
 24233                           ;doprnt.c: 698: case 'i':
 24234                           ;doprnt.c: 699: break;
 24235                           
 24236                           ; BSR set to: 0
 24237                           
 24238                           ;doprnt.c: 697: case 'd':
 24239                           
 24240                           ;doprnt.c: 664: break;
 24241  01188E  D0A8               	goto	i2l1325
 24242  011890                     
 24243                           ; BSR set to: 0
 24244                           ;doprnt.c: 718: case 'x':
 24245                           ;doprnt.c: 721: flag |= 0x80;
 24246                           
 24247                           ; BSR set to: 0
 24248                           
 24249                           ; BSR set to: 0
 24250  011890  8F78               	bsf	i2printf@flag& (0+255),7,b
 24251                           
 24252                           ;doprnt.c: 723: break;
 24253  011892  D0A6               	goto	i2l1325
 24254  011894                     
 24255                           ; BSR set to: 0
 24256                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 24257                           
 24258                           ; BSR set to: 0
 24259  011894  C076  FFD9         	movff	i2printf@ap,fsr2l
 24260  011898  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 24261  01189C  CFDE F074          	movff	postinc2,i2printf@cp
 24262  0118A0  CFDD F075          	movff	postdec2,i2printf@cp+1
 24263                           
 24264                           ; BSR set to: 0
 24265  0118A4  0E02               	movlw	2
 24266  0118A6  2776               	addwf	i2printf@ap& (0+255),f,b
 24267  0118A8  0E00               	movlw	0
 24268  0118AA  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24269                           
 24270                           ; BSR set to: 0
 24271                           ;doprnt.c: 740: if(!cp)
 24272  0118AC  5174               	movf	i2printf@cp& (0+255),w,b
 24273  0118AE  1175               	iorwf	(i2printf@cp+1)& (0+255),w,b
 24274  0118B0  A4D8               	btfss	status,2,c
 24275  0118B2  D004               	goto	i2l1331
 24276                           
 24277                           ; BSR set to: 0
 24278                           ;doprnt.c: 741: cp = "(null)";
 24279  0118B4  0E85               	movlw	low STR_132
 24280  0118B6  6F74               	movwf	i2printf@cp& (0+255),b
 24281  0118B8  0EFF               	movlw	high STR_132
 24282  0118BA  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 24283  0118BC                     i2l1331:
 24284                           
 24285                           ; BSR set to: 0
 24286                           ;doprnt.c: 745: len = 0;
 24287                           
 24288                           ; BSR set to: 0
 24289  0118BC  0E00               	movlw	0
 24290  0118BE  6F73               	movwf	(i2printf@len+1)& (0+255),b
 24291  0118C0  0E00               	movlw	0
 24292  0118C2  6F72               	movwf	i2printf@len& (0+255),b
 24293                           
 24294                           ;doprnt.c: 746: while(cp[len])
 24295  0118C4  D003               	goto	i2l1332
 24296  0118C6                     
 24297                           ;doprnt.c: 747: len++;
 24298                           
 24299                           ; BSR set to: 0
 24300  0118C6  0100               	movlb	0	; () banked
 24301  0118C8  4B72               	infsnz	i2printf@len& (0+255),f,b
 24302  0118CA  2B73               	incf	(i2printf@len+1)& (0+255),f,b
 24303  0118CC                     i2l1332:
 24304                           
 24305                           ; BSR set to: 0
 24306                           
 24307                           ; BSR set to: 0
 24308  0118CC  5172               	movf	i2printf@len& (0+255),w,b
 24309  0118CE  2574               	addwf	i2printf@cp& (0+255),w,b
 24310  0118D0  6F68               	movwf	??i2_printf& (0+255),b
 24311  0118D2  5173               	movf	(i2printf@len+1)& (0+255),w,b
 24312  0118D4  2175               	addwfc	(i2printf@cp+1)& (0+255),w,b
 24313  0118D6  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24314  0118D8  C068  FFF6         	movff	??i2_printf,tblptrl
 24315  0118DC  C069  FFF7         	movff	??i2_printf+1,tblptrh
 24316  0118E0  0E00               	movlw	low (__mediumconst shr (0+16))
 24317  0118E2  6EF8               	movwf	tblptru,c
 24318  0118E4  0E0D               	movlw	(high __ramtop+-1)
 24319  0118E6  64F7               	cpfsgt	tblptrh,c
 24320  0118E8  D003               	bra	i2u1891_47
 24321  0118EA  0008               	tblrd		*
 24322  0118EC  50F5               	movf	tablat,w,c
 24323  0118EE  D005               	bra	i2u1891_40
 24324  0118F0                     i2u1891_47:
 24325  0118F0  CFF6 FFE9          	movff	tblptrl,fsr0l
 24326  0118F4  CFF7 FFEA          	movff	tblptrh,fsr0h
 24327  0118F8  50EF               	movf	indf0,w,c
 24328  0118FA                     i2u1891_40:
 24329  0118FA  0900               	iorlw	0
 24330  0118FC  A4D8               	btfss	status,2,c
 24331  0118FE  D7E3               	goto	i2l1333
 24332  011900                     i2u1892_40:
 24333                           
 24334                           ;doprnt.c: 753: if(prec && prec < len)
 24335                           
 24336                           ;doprnt.c: 750: dostring:
 24337  011900  0100               	movlb	0	; () banked
 24338  011902  5187               	movf	i2printf@prec& (0+255),w,b
 24339  011904  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 24340  011906  B4D8               	btfsc	status,2,c
 24341  011908  D021               	goto	i2l1337
 24342                           
 24343                           ; BSR set to: 0
 24344  01190A  5172               	movf	i2printf@len& (0+255),w,b
 24345  01190C  5D87               	subwf	i2printf@prec& (0+255),w,b
 24346  01190E  5173               	movf	(i2printf@len+1)& (0+255),w,b
 24347  011910  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 24348  011912  B0D8               	btfsc	status,0,c
 24349  011914  D01B               	goto	i2l1337
 24350                           
 24351                           ; BSR set to: 0
 24352                           ;doprnt.c: 754: len = prec;
 24353  011916  C087  F072         	movff	i2printf@prec,i2printf@len
 24354  01191A  C088  F073         	movff	i2printf@prec+1,i2printf@len+1
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;doprnt.c: 767: while(len--)
 24358  01191E  D016               	goto	i2l1337
 24359  011920                     i2l14763:
 24360                           
 24361                           ; BSR set to: 0
 24362                           ;doprnt.c: 768: (putch(*cp++) );
 24363  011920  C074  FFF6         	movff	i2printf@cp,tblptrl
 24364  011924  C075  FFF7         	movff	i2printf@cp+1,tblptrh
 24365  011928  0E00               	movlw	low (__mediumconst shr (0+16))
 24366  01192A  6EF8               	movwf	tblptru,c
 24367  01192C  0E0D               	movlw	(high __ramtop+-1)
 24368  01192E  64F7               	cpfsgt	tblptrh,c
 24369  011930  D003               	bra	i2u1895_47
 24370  011932  0008               	tblrd		*
 24371  011934  50F5               	movf	tablat,w,c
 24372  011936  D005               	bra	i2u1895_40
 24373  011938                     i2u1895_47:
 24374  011938  CFF6 FFE9          	movff	tblptrl,fsr0l
 24375  01193C  CFF7 FFEA          	movff	tblptrh,fsr0h
 24376  011940  50EF               	movf	indf0,w,c
 24377  011942                     i2u1895_40:
 24378  011942  EC4B  F0B8         	call	i2_putch
 24379  011946  0100               	movlb	0	; () banked
 24380  011948  4B74               	infsnz	i2printf@cp& (0+255),f,b
 24381  01194A  2B75               	incf	(i2printf@cp+1)& (0+255),f,b
 24382  01194C                     i2l1337:
 24383                           
 24384                           ; BSR set to: 0
 24385                           
 24386                           ; BSR set to: 0
 24387  01194C  0772               	decf	i2printf@len& (0+255),f,b
 24388  01194E  A0D8               	btfss	status,0,c
 24389  011950  0773               	decf	(i2printf@len+1)& (0+255),f,b
 24390  011952  2972               	incf	i2printf@len& (0+255),w,b
 24391  011954  E1E5               	bnz	i2l14763
 24392  011956  2973               	incf	(i2printf@len+1)& (0+255),w,b
 24393  011958  B4D8               	btfsc	status,2,c
 24394  01195A  EF09  F091         	goto	i2u1935_40
 24395  01195E  D7E0               	goto	i2l1338
 24396  011960                     
 24397                           ; BSR set to: 0
 24398                           ;doprnt.c: 805: cp = (char *)&c;
 24399                           
 24400                           ; BSR set to: 0
 24401  011960  0E89               	movlw	low i2printf@c
 24402  011962  6F74               	movwf	i2printf@cp& (0+255),b
 24403  011964  0E00               	movlw	high i2printf@c
 24404  011966  6F75               	movwf	(i2printf@cp+1)& (0+255),b
 24405                           
 24406                           ; BSR set to: 0
 24407                           ;doprnt.c: 806: len = 1;
 24408  011968  0E00               	movlw	0
 24409  01196A  6F73               	movwf	(i2printf@len+1)& (0+255),b
 24410  01196C  0E01               	movlw	1
 24411  01196E  6F72               	movwf	i2printf@len& (0+255),b
 24412                           
 24413                           ;doprnt.c: 807: goto dostring;
 24414  011970  D7C7               	goto	i2u1892_40
 24415  011972                     
 24416                           ; BSR set to: 0
 24417                           ;doprnt.c: 818: flag |= 0xC0;
 24418                           
 24419                           ; BSR set to: 0
 24420  011972  0EC0               	movlw	192
 24421  011974  1378               	iorwf	i2printf@flag& (0+255),f,b
 24422                           
 24423                           ; BSR set to: 0
 24424                           ;doprnt.c: 822: }
 24425                           
 24426                           ;doprnt.c: 819: break;
 24427  011976  D034               	goto	i2l1325
 24428  011978                     i2l1321:
 24429                           
 24430                           ; BSR set to: 0
 24431  011978  0100               	movlb	0	; () banked
 24432  01197A  5166               	movf	i2printf@f& (0+255),w,b
 24433  01197C  6F68               	movwf	??i2_printf& (0+255),b
 24434  01197E  5167               	movf	(i2printf@f+1)& (0+255),w,b
 24435  011980  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24436  011982  4B66               	infsnz	i2printf@f& (0+255),f,b
 24437  011984  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 24438  011986  C068  FFF6         	movff	??i2_printf,tblptrl
 24439  01198A  C069  FFF7         	movff	??i2_printf+1,tblptrh
 24440  01198E  0E00               	movlw	low (__mediumconst shr (0+16))
 24441  011990  6EF8               	movwf	tblptru,c
 24442  011992  0E0D               	movlw	(high __ramtop+-1)
 24443  011994  64F7               	cpfsgt	tblptrh,c
 24444  011996  D003               	bra	i2u1897_47
 24445  011998  0008               	tblrd		*
 24446  01199A  50F5               	movf	tablat,w,c
 24447  01199C  D005               	bra	i2u1897_40
 24448  01199E                     i2u1897_47:
 24449  01199E  CFF6 FFE9          	movff	tblptrl,fsr0l
 24450  0119A2  CFF7 FFEA          	movff	tblptrh,fsr0h
 24451  0119A6  50EF               	movf	indf0,w,c
 24452  0119A8                     i2u1897_40:
 24453  0119A8  0100               	movlb	0	; () banked
 24454  0119AA  6F89               	movwf	i2printf@c& (0+255),b
 24455  0119AC  5189               	movf	i2printf@c& (0+255),w,b
 24456                           
 24457                           ; Switch size 1, requested type "space"
 24458                           ; Number of cases is 8, Range of values is 0 to 120
 24459                           ; switch strategies available:
 24460                           ; Name         Instructions Cycles
 24461                           ; simple_byte           25    13 (average)
 24462                           ;	Chosen strategy is simple_byte
 24463  0119AE  0A00               	xorlw	0	; case 0
 24464  0119B0  B4D8               	btfsc	status,2,c
 24465  0119B2  0012               	return	
 24466  0119B4  0A58               	xorlw	88	; case 88
 24467  0119B6  B4D8               	btfsc	status,2,c
 24468  0119B8  D76B               	goto	i2l1328
 24469  0119BA  0A3C               	xorlw	60	; case 100
 24470  0119BC  B4D8               	btfsc	status,2,c
 24471  0119BE  D010               	goto	i2l1325
 24472  0119C0  0A02               	xorlw	2	; case 102
 24473  0119C2  B4D8               	btfsc	status,2,c
 24474  0119C4  D763               	goto	i2l1324
 24475  0119C6  0A0F               	xorlw	15	; case 105
 24476  0119C8  B4D8               	btfsc	status,2,c
 24477  0119CA  D00A               	goto	i2l1325
 24478  0119CC  0A1A               	xorlw	26	; case 115
 24479  0119CE  B4D8               	btfsc	status,2,c
 24480  0119D0  D761               	goto	i2l1330
 24481  0119D2  0A06               	xorlw	6	; case 117
 24482  0119D4  B4D8               	btfsc	status,2,c
 24483  0119D6  D7CD               	goto	i2l1341
 24484  0119D8  0A0D               	xorlw	13	; case 120
 24485  0119DA  B4D8               	btfsc	status,2,c
 24486  0119DC  D759               	goto	i2l1328
 24487  0119DE  D7C0               	goto	i2l1340
 24488  0119E0                     i2l1325:
 24489                           
 24490                           ; BSR set to: 0
 24491                           ;doprnt.c: 825: if(flag & (0x700)) {
 24492                           
 24493                           ; BSR set to: 0
 24494  0119E0  0E07               	movlw	7
 24495  0119E2  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 24496  0119E4  B4D8               	btfsc	status,2,c
 24497  0119E6  D2C0               	goto	i2l1342
 24498                           
 24499                           ; BSR set to: 0
 24500                           ;doprnt.c: 827: if(flag & 0x1000)
 24501  0119E8  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 24502  0119EA  D004               	goto	i2l1343
 24503                           
 24504                           ; BSR set to: 0
 24505                           ;doprnt.c: 829: prec = 6;
 24506  0119EC  0E00               	movlw	0
 24507  0119EE  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 24508  0119F0  0E06               	movlw	6
 24509  0119F2  6F87               	movwf	i2printf@prec& (0+255),b
 24510  0119F4                     i2l1343:
 24511                           
 24512                           ; BSR set to: 0
 24513                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 24514                           
 24515                           ; BSR set to: 0
 24516  0119F4  C076  FFD9         	movff	i2printf@ap,fsr2l
 24517  0119F8  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 24518  0119FC  CFDE F080          	movff	postinc2,i2printf@fval
 24519  011A00  CFDE F081          	movff	postinc2,i2printf@fval+1
 24520  011A04  CFDD F082          	movff	postdec2,i2printf@fval+2
 24521                           
 24522                           ; BSR set to: 0
 24523  011A08  0E03               	movlw	3
 24524  011A0A  2776               	addwf	i2printf@ap& (0+255),f,b
 24525  011A0C  0E00               	movlw	0
 24526  011A0E  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 24527                           
 24528                           ; BSR set to: 0
 24529                           ;doprnt.c: 831: if(fval < 0.0) {
 24530  011A10  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 24531  011A12  D011               	goto	i2l1344
 24532                           
 24533                           ; BSR set to: 0
 24534                           ;doprnt.c: 832: fval = -fval;
 24535  011A14  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 24536  011A18  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 24537  011A1C  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 24538  011A20  EC3B  F0B7         	call	i2___ftneg	;wreg free
 24539  011A24  C024  F080         	movff	?i2___ftneg,i2printf@fval
 24540  011A28  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 24541  011A2C  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 24542                           
 24543                           ;doprnt.c: 833: flag |= 0x03;
 24544  011A30  0E03               	movlw	3
 24545  011A32  0100               	movlb	0	; () banked
 24546  011A34  1378               	iorwf	i2printf@flag& (0+255),f,b
 24547  011A36                     i2l1344:
 24548                           
 24549                           ; BSR set to: 0
 24550                           ;doprnt.c: 834: }
 24551                           ;doprnt.c: 835: exp = 0;
 24552                           
 24553                           ; BSR set to: 0
 24554  011A36  0E00               	movlw	0
 24555  011A38  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 24556  011A3A  0E00               	movlw	0
 24557  011A3C  6F7A               	movwf	i2printf@exp& (0+255),b
 24558                           
 24559                           ; BSR set to: 0
 24560                           ;doprnt.c: 836: if( fval!=0) {
 24561  011A3E  5180               	movf	i2printf@fval& (0+255),w,b
 24562  011A40  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 24563  011A42  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 24564  011A44  B4D8               	btfsc	status,2,c
 24565  011A46  D086               	goto	i2l1349
 24566                           
 24567                           ; BSR set to: 0
 24568                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 24569  011A48  0E82               	movlw	130
 24570  011A4A  6F68               	movwf	??i2_printf& (0+255),b
 24571  011A4C  0EFF               	movlw	255
 24572  011A4E  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24573  011A50  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 24574  011A54  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 24575  011A58  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 24576  011A5C  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 24577  011A60  0E10               	movlw	16
 24578  011A62  D005               	goto	i2u1902_40
 24579  011A64                     i2u1902_45:
 24580  011A64  90D8               	bcf	status,0,c
 24581  011A66  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 24582  011A68  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 24583  011A6A  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 24584  011A6C  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 24585  011A6E                     i2u1902_40:
 24586  011A6E  2EE8               	decfsz	wreg,f,c
 24587  011A70  D7F9               	goto	i2u1902_45
 24588  011A72  516A               	movf	(??i2_printf+2)& (0+255),w,b
 24589  011A74  2568               	addwf	??i2_printf& (0+255),w,b
 24590  011A76  6F7A               	movwf	i2printf@exp& (0+255),b
 24591  011A78  0E00               	movlw	0
 24592  011A7A  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 24593  011A7C  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 24594                           
 24595                           ; BSR set to: 0
 24596                           ;doprnt.c: 838: exp--;
 24597  011A7E  077A               	decf	i2printf@exp& (0+255),f,b
 24598  011A80  A0D8               	btfss	status,0,c
 24599  011A82  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 24600                           
 24601                           ; BSR set to: 0
 24602                           ;doprnt.c: 839: exp *= 3;
 24603  011A84  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 24604  011A88  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 24605  011A8C  0E00               	movlw	0
 24606  011A8E  6E12               	movwf	i2___wmul@multiplicand+1,c
 24607  011A90  0E03               	movlw	3
 24608  011A92  6E11               	movwf	i2___wmul@multiplicand,c
 24609  011A94  EC28  F0B7         	call	i2___wmul	;wreg free
 24610  011A98  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 24611  011A9C  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 24612                           
 24613                           ;doprnt.c: 840: exp /= 10;
 24614  011AA0  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 24615  011AA4  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 24616  011AA8  0E00               	movlw	0
 24617  011AAA  6E0A               	movwf	i2___awdiv@divisor+1,c
 24618  011AAC  0E0A               	movlw	10
 24619  011AAE  6E09               	movwf	i2___awdiv@divisor,c
 24620  011AB0  ECBF  F0AF         	call	i2___awdiv	;wreg free
 24621  011AB4  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 24622  011AB8  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 24623                           
 24624                           ;doprnt.c: 841: if(exp < 0)
 24625  011ABC  0100               	movlb	0	; () banked
 24626  011ABE  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 24627  011AC0  D003               	goto	i2l1346
 24628                           
 24629                           ; BSR set to: 0
 24630                           ;doprnt.c: 842: exp--;
 24631  011AC2  077A               	decf	i2printf@exp& (0+255),f,b
 24632  011AC4  A0D8               	btfss	status,0,c
 24633  011AC6  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 24634  011AC8                     i2l1346:
 24635                           
 24636                           ; BSR set to: 0
 24637                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 24638                           
 24639                           ; BSR set to: 0
 24640  011AC8  517A               	movf	i2printf@exp& (0+255),w,b
 24641  011ACA  0800               	sublw	0
 24642  011ACC  ECA4  F096         	call	i2_scale
 24643  011AD0  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 24644  011AD4  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 24645  011AD8  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 24646                           
 24647                           ;doprnt.c: 847: tmpval.integ *= fval;
 24648  011ADC  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 24649  011AE0  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 24650  011AE4  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 24651  011AE8  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 24652  011AEC  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 24653  011AF0  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 24654  011AF4  EC01  F0A8         	call	i2___ftmul	;wreg free
 24655  011AF8  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 24656  011AFC  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 24657  011B00  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 24658                           
 24659                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 24660  011B04  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 24661  011B08  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 24662  011B0C  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 24663  011B10  0E00               	movlw	0
 24664  011B12  6E2D               	movwf	i2___ftge@ff2,c
 24665  011B14  0E80               	movlw	128
 24666  011B16  6E2E               	movwf	i2___ftge@ff2+1,c
 24667  011B18  0E3F               	movlw	63
 24668  011B1A  6E2F               	movwf	i2___ftge@ff2+2,c
 24669  011B1C  EC20  F0AE         	call	i2___ftge	;wreg free
 24670  011B20  B0D8               	btfsc	status,0,c
 24671  011B22  D005               	goto	i2l1347
 24672                           
 24673                           ;doprnt.c: 849: exp--;
 24674  011B24  0100               	movlb	0	; () banked
 24675  011B26  077A               	decf	i2printf@exp& (0+255),f,b
 24676  011B28  A0D8               	btfss	status,0,c
 24677  011B2A  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 24678  011B2C  D013               	goto	i2l1349
 24679  011B2E                     i2l1347:
 24680                           
 24681                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 24682                           
 24683                           ; BSR set to: 0
 24684  011B2E  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 24685  011B32  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 24686  011B36  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 24687  011B3A  0E00               	movlw	0
 24688  011B3C  6E2D               	movwf	i2___ftge@ff2,c
 24689  011B3E  0E20               	movlw	32
 24690  011B40  6E2E               	movwf	i2___ftge@ff2+1,c
 24691  011B42  0E41               	movlw	65
 24692  011B44  6E2F               	movwf	i2___ftge@ff2+2,c
 24693  011B46  EC20  F0AE         	call	i2___ftge	;wreg free
 24694  011B4A  A0D8               	btfss	status,0,c
 24695  011B4C  D003               	goto	i2l1349
 24696                           
 24697                           ;doprnt.c: 851: exp++;
 24698  011B4E  0100               	movlb	0	; () banked
 24699  011B50  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 24700  011B52  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 24701  011B54                     i2l1349:
 24702                           
 24703                           ;doprnt.c: 852: }
 24704                           ;doprnt.c: 1112: if(prec <= 12)
 24705                           
 24706                           ; BSR set to: 0
 24707                           
 24708                           ; BSR set to: 0
 24709                           
 24710                           ; BSR set to: 0
 24711  011B54  0100               	movlb	0	; () banked
 24712  011B56  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 24713  011B58  D006               	goto	i2u1906_40
 24714  011B5A  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 24715  011B5C  E11B               	bnz	i2l14827
 24716  011B5E  0E0D               	movlw	13
 24717  011B60  5D87               	subwf	i2printf@prec& (0+255),w,b
 24718  011B62  B0D8               	btfsc	status,0,c
 24719  011B64  D017               	goto	i2l1350
 24720  011B66                     i2u1906_40:
 24721                           
 24722                           ; BSR set to: 0
 24723                           ;doprnt.c: 1113: fval += fround(prec);
 24724  011B66  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 24725  011B6A  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 24726  011B6E  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 24727  011B72  5187               	movf	i2printf@prec& (0+255),w,b
 24728  011B74  ECCA  F09B         	call	i2_fround
 24729  011B78  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 24730  011B7C  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 24731  011B80  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 24732  011B84  EC05  F0A2         	call	i2___ftadd	;wreg free
 24733  011B88  C040  F080         	movff	?i2___ftadd,i2printf@fval
 24734  011B8C  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 24735  011B90  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 24736  011B94                     i2l1350:
 24737  011B94                     i2l14827:
 24738                           
 24739                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 24740  011B94  0100               	movlb	0	; () banked
 24741  011B96  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 24742  011B98  D006               	goto	i2u1907_40
 24743  011B9A  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 24744  011B9C  E120               	bnz	i2l14835
 24745  011B9E  0E0A               	movlw	10
 24746  011BA0  5D7A               	subwf	i2printf@exp& (0+255),w,b
 24747  011BA2  B0D8               	btfsc	status,0,c
 24748  011BA4  D01C               	goto	i2u1910_40
 24749  011BA6                     i2u1907_40:
 24750                           
 24751                           ; BSR set to: 0
 24752  011BA6  5180               	movf	i2printf@fval& (0+255),w,b
 24753  011BA8  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 24754  011BAA  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 24755  011BAC  B4D8               	btfsc	status,2,c
 24756  011BAE  D056               	goto	i2l1351
 24757                           
 24758                           ; BSR set to: 0
 24759  011BB0  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 24760  011BB4  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 24761  011BB8  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 24762  011BBC  EC87  F0A7         	call	i2___fttol	;wreg free
 24763  011BC0  503D               	movf	?i2___fttol,w,c
 24764  011BC2  103E               	iorwf	?i2___fttol+1,w,c
 24765  011BC4  103F               	iorwf	?i2___fttol+2,w,c
 24766  011BC6  1040               	iorwf	?i2___fttol+3,w,c
 24767  011BC8  A4D8               	btfss	status,2,c
 24768  011BCA  D048               	goto	i2l1351
 24769  011BCC  0100               	movlb	0	; () banked
 24770  011BCE  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 24771  011BD0  D045               	goto	i2l1351
 24772  011BD2  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 24773  011BD4  E104               	bnz	i2l14835
 24774  011BD6  0E02               	movlw	2
 24775  011BD8  5D7A               	subwf	i2printf@exp& (0+255),w,b
 24776  011BDA  A0D8               	btfss	status,0,c
 24777  011BDC  D03F               	goto	i2l1351
 24778  011BDE                     i2u1910_40:
 24779  011BDE                     i2l14835:
 24780                           
 24781                           ; BSR set to: 0
 24782                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 24783  011BDE  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 24784  011BE2  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 24785  011BE6  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 24786  011BEA  0E70               	movlw	112
 24787  011BEC  6E2D               	movwf	i2___ftge@ff2,c
 24788  011BEE  0E89               	movlw	137
 24789  011BF0  6E2E               	movwf	i2___ftge@ff2+1,c
 24790  011BF2  0E40               	movlw	64
 24791  011BF4  6E2F               	movwf	i2___ftge@ff2+2,c
 24792  011BF6  EC20  F0AE         	call	i2___ftge	;wreg free
 24793  011BFA  B0D8               	btfsc	status,0,c
 24794  011BFC  D003               	goto	i2l1354
 24795                           
 24796                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 24797  011BFE  0100               	movlb	0	; () banked
 24798  011C00  0EF7               	movlw	247
 24799  011C02  D002               	goto	L13
 24800  011C04                     i2l1354:
 24801                           
 24802                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 24803                           
 24804                           ; BSR set to: 0
 24805  011C04  0100               	movlb	0	; () banked
 24806  011C06  0EF8               	movlw	248
 24807  011C08                     L13:
 24808  011C08  277A               	addwf	i2printf@exp& (0+255),f,b
 24809  011C0A  0EFF               	movlw	255
 24810  011C0C  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 24811                           
 24812                           ; BSR set to: 0
 24813                           ;doprnt.c: 1124: }
 24814                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 24815                           
 24816                           ; BSR set to: 0
 24817  011C0E  517A               	movf	i2printf@exp& (0+255),w,b
 24818  011C10  ECA4  F096         	call	i2_scale
 24819  011C14  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 24820  011C18  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 24821  011C1C  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 24822                           
 24823                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 24824  011C20  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 24825  011C24  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 24826  011C28  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 24827  011C2C  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 24828  011C30  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 24829  011C34  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 24830  011C38  EC40  F0A4         	call	i2__tdiv_to_l_	;wreg free
 24831  011C3C  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 24832  011C40  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 24833  011C44  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 24834  011C48  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 24835                           
 24836                           ;doprnt.c: 1129: fval = 0.0;
 24837  011C4C  0E00               	movlw	0
 24838  011C4E  0100               	movlb	0	; () banked
 24839  011C50  6F80               	movwf	i2printf@fval& (0+255),b
 24840  011C52  0E00               	movlw	0
 24841  011C54  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 24842  011C56  0E00               	movlw	0
 24843  011C58  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 24844                           
 24845                           ;doprnt.c: 1130: } else {
 24846  011C5A  D033               	goto	i2l1360
 24847  011C5C                     i2l1351:
 24848                           
 24849                           ;doprnt.c: 1131: val = (unsigned long)fval;
 24850                           
 24851                           ; BSR set to: 0
 24852  011C5C  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 24853  011C60  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 24854  011C64  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 24855  011C68  EC87  F0A7         	call	i2___fttol	;wreg free
 24856  011C6C  C03D  F083         	movff	?i2___fttol,i2printf@val
 24857  011C70  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 24858  011C74  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 24859  011C78  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 24860                           
 24861                           ;doprnt.c: 1132: fval -= (double)val;
 24862  011C7C  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 24863  011C80  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 24864  011C84  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 24865  011C88  C083  F009         	movff	i2printf@val,i2___lltoft@c
 24866  011C8C  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 24867  011C90  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 24868  011C94  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 24869  011C98  EC36  F0B3         	call	i2___lltoft	;wreg free
 24870  011C9C  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 24871  011CA0  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 24872  011CA4  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 24873  011CA8  EC50  F0B5         	call	i2___ftsub	;wreg free
 24874  011CAC  C060  F080         	movff	?i2___ftsub,i2printf@fval
 24875  011CB0  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 24876  011CB4  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 24877                           
 24878                           ;doprnt.c: 1133: exp = 0;
 24879  011CB8  0E00               	movlw	0
 24880  011CBA  0100               	movlb	0	; () banked
 24881  011CBC  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 24882  011CBE  0E00               	movlw	0
 24883  011CC0  6F7A               	movwf	i2printf@exp& (0+255),b
 24884  011CC2                     i2l1360:
 24885                           
 24886                           ; BSR set to: 0
 24887                           ;doprnt.c: 1134: }
 24888                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 24889                           
 24890                           ; BSR set to: 0
 24891  011CC2  0E01               	movlw	1
 24892  011CC4  6F89               	movwf	i2printf@c& (0+255),b
 24893  011CC6                     i2l14855:
 24894                           
 24895                           ; BSR set to: 0
 24896  011CC6  0E0A               	movlw	10
 24897  011CC8  1989               	xorwf	i2printf@c& (0+255),w,b
 24898  011CCA  B4D8               	btfsc	status,2,c
 24899  011CCC  D01B               	goto	i2u1914_40
 24900                           
 24901                           ; BSR set to: 0
 24902                           ;doprnt.c: 1137: if(val < dpowers[c])
 24903                           
 24904                           ; BSR set to: 0
 24905                           
 24906                           ; BSR set to: 0
 24907  011CCE  5189               	movf	i2printf@c& (0+255),w,b
 24908  011CD0  0D04               	mullw	4
 24909  011CD2  0E5F               	movlw	low _dpowers
 24910  011CD4  24F3               	addwf	prodl,w,c
 24911  011CD6  6EF6               	movwf	tblptrl,c
 24912  011CD8  0EEC               	movlw	high _dpowers
 24913  011CDA  20F4               	addwfc	prodh,w,c
 24914  011CDC  6EF7               	movwf	tblptrh,c
 24915  011CDE                     	if	1	;There are 3 active tblptr bytes
 24916  011CDE  6AF8               	clrf	tblptru,c
 24917  011CE0  0E00               	movlw	low (__mediumconst shr (0+16))
 24918  011CE2  22F8               	addwfc	tblptru,f,c
 24919  011CE4                     	endif
 24920  011CE4  0009               	tblrd		*+
 24921  011CE6  50F5               	movf	tablat,w,c
 24922  011CE8  5D83               	subwf	i2printf@val& (0+255),w,b
 24923  011CEA  0009               	tblrd		*+
 24924  011CEC  50F5               	movf	tablat,w,c
 24925  011CEE  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 24926  011CF0  0009               	tblrd		*+
 24927  011CF2  50F5               	movf	tablat,w,c
 24928  011CF4  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 24929  011CF6  0009               	tblrd		*+
 24930  011CF8  50F5               	movf	tablat,w,c
 24931  011CFA  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 24932  011CFC  A0D8               	btfss	status,0,c
 24933  011CFE  D002               	goto	i2u1914_40
 24934                           
 24935                           ; BSR set to: 0
 24936                           
 24937                           ; BSR set to: 0
 24938                           
 24939                           ; BSR set to: 0
 24940                           ;doprnt.c: 1138: break;
 24941  011D00  2B89               	incf	i2printf@c& (0+255),f,b
 24942  011D02  D7E1               	goto	i2l14855
 24943  011D04                     i2u1914_40:
 24944                           
 24945                           ; BSR set to: 0
 24946                           ;doprnt.c: 1175: {
 24947                           ;doprnt.c: 1188: if(flag & 0x03)
 24948                           
 24949                           ; BSR set to: 0
 24950  011D04  0E03               	movlw	3
 24951  011D06  1578               	andwf	i2printf@flag& (0+255),w,b
 24952  011D08  6F68               	movwf	??i2_printf& (0+255),b
 24953  011D0A  0E00               	movlw	0
 24954  011D0C  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 24955  011D0E  6F69               	movwf	(??i2_printf+1)& (0+255),b
 24956  011D10  5168               	movf	??i2_printf& (0+255),w,b
 24957  011D12  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 24958  011D14  B4D8               	btfsc	status,2,c
 24959  011D16  D04D               	goto	i2l1365
 24960                           
 24961                           ; BSR set to: 0
 24962                           ;doprnt.c: 1190: (putch('-') );
 24963  011D18  0E2D               	movlw	45
 24964  011D1A  EC4B  F0B8         	call	i2_putch
 24965                           
 24966                           ;doprnt.c: 1195: }
 24967                           ;doprnt.c: 1196: while(c--) {
 24968  011D1E  D049               	goto	i2l1365
 24969  011D20                     
 24970                           ;doprnt.c: 1200: {
 24971                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 24972  011D20  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 24973  011D24  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 24974  011D28  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 24975  011D2C  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 24976  011D30  0100               	movlb	0	; () banked
 24977  011D32  5189               	movf	i2printf@c& (0+255),w,b
 24978  011D34  0D04               	mullw	4
 24979  011D36  0E5F               	movlw	low _dpowers
 24980  011D38  24F3               	addwf	prodl,w,c
 24981  011D3A  6EF6               	movwf	tblptrl,c
 24982  011D3C  0EEC               	movlw	high _dpowers
 24983  011D3E  20F4               	addwfc	prodh,w,c
 24984  011D40  6EF7               	movwf	tblptrh,c
 24985  011D42                     	if	1	;There are 3 active tblptr bytes
 24986  011D42  6AF8               	clrf	tblptru,c
 24987  011D44  0E00               	movlw	low (__mediumconst shr (0+16))
 24988  011D46  22F8               	addwfc	tblptru,f,c
 24989  011D48                     	endif
 24990  011D48  0009               	tblrd		*+
 24991  011D4A  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 24992  011D4E  0009               	tblrd		*+
 24993  011D50  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 24994  011D54  0009               	tblrd		*+
 24995  011D56  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 24996  011D5A  000A               	tblrd		*-
 24997  011D5C  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 24998  011D60  EC01  F0B0         	call	i2___lldiv	;wreg free
 24999  011D64  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 25000  011D68  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25001  011D6C  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25002  011D70  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25003                           
 25004                           ;doprnt.c: 1202: tmpval.vd %= 10;
 25005  011D74  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25006  011D78  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25007  011D7C  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25008  011D80  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25009  011D84  0E0A               	movlw	10
 25010  011D86  6E12               	movwf	i2___llmod@divisor,c
 25011  011D88  0E00               	movlw	0
 25012  011D8A  6E13               	movwf	i2___llmod@divisor+1,c
 25013  011D8C  0E00               	movlw	0
 25014  011D8E  6E14               	movwf	i2___llmod@divisor+2,c
 25015  011D90  0E00               	movlw	0
 25016  011D92  6E15               	movwf	i2___llmod@divisor+3,c
 25017  011D94  EC43  F0B2         	call	i2___llmod	;wreg free
 25018  011D98  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 25019  011D9C  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 25020  011DA0  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 25021  011DA4  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 25022                           
 25023                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 25024  011DA8  0100               	movlb	0	; () banked
 25025  011DAA  517C               	movf	i2printf@tmpval& (0+255),w,b
 25026  011DAC  0F30               	addlw	48
 25027  011DAE  EC4B  F0B8         	call	i2_putch
 25028  011DB2                     i2l1365:
 25029  011DB2  0100               	movlb	0	; () banked
 25030  011DB4  0789               	decf	i2printf@c& (0+255),f,b
 25031  011DB6  2989               	incf	i2printf@c& (0+255),w,b
 25032  011DB8  B4D8               	btfsc	status,2,c
 25033  011DBA  D008               	goto	i2l1368
 25034  011DBC  D7B1               	goto	i2l1366
 25035  011DBE                     i2l14879:
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;doprnt.c: 1208: (putch('0') );
 25039  011DBE  0E30               	movlw	48
 25040  011DC0  EC4B  F0B8         	call	i2_putch
 25041                           
 25042                           ;doprnt.c: 1209: exp--;
 25043  011DC4  0100               	movlb	0	; () banked
 25044  011DC6  077A               	decf	i2printf@exp& (0+255),f,b
 25045  011DC8  A0D8               	btfss	status,0,c
 25046  011DCA  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 25047  011DCC                     i2l1368:
 25048                           
 25049                           ; BSR set to: 0
 25050                           
 25051                           ; BSR set to: 0
 25052  011DCC  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 25053  011DCE  D005               	goto	i2u1917_40
 25054  011DD0  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 25055  011DD2  E1F5               	bnz	i2l14879
 25056  011DD4  057A               	decf	i2printf@exp& (0+255),w,b
 25057  011DD6  B0D8               	btfsc	status,0,c
 25058  011DD8  D7F2               	goto	i2l1369
 25059  011DDA                     i2u1917_40:
 25060                           
 25061                           ; BSR set to: 0
 25062                           ;doprnt.c: 1210: }
 25063                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 25064                           
 25065                           ; BSR set to: 0
 25066  011DDA  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 25067  011DDC  D009               	goto	i2l1371
 25068  011DDE  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 25069  011DE0  E104               	bnz	i2u1918_40
 25070  011DE2  0E09               	movlw	9
 25071  011DE4  5D87               	subwf	i2printf@prec& (0+255),w,b
 25072  011DE6  A0D8               	btfss	status,0,c
 25073  011DE8  D003               	goto	i2l1371
 25074  011DEA                     i2u1918_40:
 25075                           
 25076                           ; BSR set to: 0
 25077                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 25078  011DEA  0E08               	movlw	8
 25079  011DEC  6F89               	movwf	i2printf@c& (0+255),b
 25080  011DEE  D002               	goto	i2l1372
 25081  011DF0                     i2l1371:
 25082                           
 25083                           ; BSR set to: 0
 25084                           ;doprnt.c: 1213: else
 25085                           ;doprnt.c: 1214: c = prec;
 25086  011DF0  C087  F089         	movff	i2printf@prec,i2printf@c
 25087  011DF4                     i2l1372:
 25088                           
 25089                           ; BSR set to: 0
 25090                           ;doprnt.c: 1215: prec -= c;
 25091                           
 25092                           ; BSR set to: 0
 25093  011DF4  5189               	movf	i2printf@c& (0+255),w,b
 25094  011DF6  5F87               	subwf	i2printf@prec& (0+255),f,b
 25095  011DF8  0E00               	movlw	0
 25096  011DFA  BF89               	btfsc	i2printf@c& (0+255),7,b
 25097  011DFC  0EFF               	movlw	255
 25098  011DFE  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 25099                           
 25100                           ; BSR set to: 0
 25101                           ;doprnt.c: 1219: if(c)
 25102  011E00  5189               	movf	i2printf@c& (0+255),w,b
 25103  011E02  B4D8               	btfsc	status,2,c
 25104  011E04  D003               	goto	i2l1373
 25105                           
 25106                           ; BSR set to: 0
 25107                           ;doprnt.c: 1221: (putch('.') );
 25108  011E06  0E2E               	movlw	46
 25109  011E08  EC4B  F0B8         	call	i2_putch
 25110  011E0C                     i2l1373:
 25111                           
 25112                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25113  011E0C  0100               	movlb	0	; () banked
 25114  011E0E  5189               	movf	i2printf@c& (0+255),w,b
 25115  011E10  ECA4  F096         	call	i2_scale
 25116  011E14  C036  F06E         	movff	?i2_scale,i2_printf$3896
 25117  011E18  C037  F06F         	movff	?i2_scale+1,i2_printf$3896+1
 25118  011E1C  C038  F070         	movff	?i2_scale+2,i2_printf$3896+2
 25119                           
 25120                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 25121  011E20  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 25122  011E24  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 25123  011E28  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 25124  011E2C  C06E  F027         	movff	i2_printf$3896,i2___ftmul@f1
 25125  011E30  C06F  F028         	movff	i2_printf$3896+1,i2___ftmul@f1+1
 25126  011E34  C070  F029         	movff	i2_printf$3896+2,i2___ftmul@f1+2
 25127  011E38  EC01  F0A8         	call	i2___ftmul	;wreg free
 25128  011E3C  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 25129  011E40  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 25130  011E44  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 25131  011E48  EC87  F0A7         	call	i2___fttol	;wreg free
 25132  011E4C  C03D  F083         	movff	?i2___fttol,i2printf@val
 25133  011E50  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 25134  011E54  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 25135  011E58  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 25136                           
 25137                           ;doprnt.c: 1228: while(c--) {
 25138  011E5C  D073               	goto	i2l1374
 25139  011E5E                     
 25140                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 25141  011E5E  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 25142  011E62  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25143  011E66  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25144  011E6A  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25145  011E6E  0100               	movlb	0	; () banked
 25146  011E70  5189               	movf	i2printf@c& (0+255),w,b
 25147  011E72  0D04               	mullw	4
 25148  011E74  0E5F               	movlw	low _dpowers
 25149  011E76  24F3               	addwf	prodl,w,c
 25150  011E78  6EF6               	movwf	tblptrl,c
 25151  011E7A  0EEC               	movlw	high _dpowers
 25152  011E7C  20F4               	addwfc	prodh,w,c
 25153  011E7E  6EF7               	movwf	tblptrh,c
 25154  011E80                     	if	1	;There are 3 active tblptr bytes
 25155  011E80  6AF8               	clrf	tblptru,c
 25156  011E82  0E00               	movlw	low (__mediumconst shr (0+16))
 25157  011E84  22F8               	addwfc	tblptru,f,c
 25158  011E86                     	endif
 25159  011E86  0009               	tblrd		*+
 25160  011E88  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25161  011E8C  0009               	tblrd		*+
 25162  011E8E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25163  011E92  0009               	tblrd		*+
 25164  011E94  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25165  011E98  000A               	tblrd		*-
 25166  011E9A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25167  011E9E  EC01  F0B0         	call	i2___lldiv	;wreg free
 25168  011EA2  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 25169  011EA6  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 25170  011EAA  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 25171  011EAE  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 25172                           
 25173                           ;doprnt.c: 1230: tmpval.vd %= 10;
 25174  011EB2  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 25175  011EB6  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 25176  011EBA  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 25177  011EBE  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 25178  011EC2  0E0A               	movlw	10
 25179  011EC4  6E12               	movwf	i2___llmod@divisor,c
 25180  011EC6  0E00               	movlw	0
 25181  011EC8  6E13               	movwf	i2___llmod@divisor+1,c
 25182  011ECA  0E00               	movlw	0
 25183  011ECC  6E14               	movwf	i2___llmod@divisor+2,c
 25184  011ECE  0E00               	movlw	0
 25185  011ED0  6E15               	movwf	i2___llmod@divisor+3,c
 25186  011ED2  EC43  F0B2         	call	i2___llmod	;wreg free
 25187  011ED6  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 25188  011EDA  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 25189  011EDE  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 25190  011EE2  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 25191                           
 25192                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 25193  011EE6  0100               	movlb	0	; () banked
 25194  011EE8  517C               	movf	i2printf@tmpval& (0+255),w,b
 25195  011EEA  0F30               	addlw	48
 25196  011EEC  EC4B  F0B8         	call	i2_putch
 25197                           
 25198                           ;doprnt.c: 1232: val %= dpowers[c];
 25199  011EF0  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 25200  011EF4  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 25201  011EF8  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 25202  011EFC  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 25203  011F00  0100               	movlb	0	; () banked
 25204  011F02  5189               	movf	i2printf@c& (0+255),w,b
 25205  011F04  0D04               	mullw	4
 25206  011F06  0E5F               	movlw	low _dpowers
 25207  011F08  24F3               	addwf	prodl,w,c
 25208  011F0A  6EF6               	movwf	tblptrl,c
 25209  011F0C  0EEC               	movlw	high _dpowers
 25210  011F0E  20F4               	addwfc	prodh,w,c
 25211  011F10  6EF7               	movwf	tblptrh,c
 25212  011F12                     	if	1	;There are 3 active tblptr bytes
 25213  011F12  6AF8               	clrf	tblptru,c
 25214  011F14  0E00               	movlw	low (__mediumconst shr (0+16))
 25215  011F16  22F8               	addwfc	tblptru,f,c
 25216  011F18                     	endif
 25217  011F18  0009               	tblrd		*+
 25218  011F1A  CFF5 F012          	movff	tablat,i2___llmod@divisor
 25219  011F1E  0009               	tblrd		*+
 25220  011F20  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 25221  011F24  0009               	tblrd		*+
 25222  011F26  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 25223  011F2A  000A               	tblrd		*-
 25224  011F2C  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 25225  011F30  EC43  F0B2         	call	i2___llmod	;wreg free
 25226  011F34  C00E  F083         	movff	?i2___llmod,i2printf@val
 25227  011F38  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 25228  011F3C  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 25229  011F40  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 25230  011F44                     i2l1374:
 25231  011F44  0100               	movlb	0	; () banked
 25232  011F46  0789               	decf	i2printf@c& (0+255),f,b
 25233  011F48  2989               	incf	i2printf@c& (0+255),w,b
 25234  011F4A  B4D8               	btfsc	status,2,c
 25235  011F4C  D008               	goto	i2l1377
 25236  011F4E  D787               	goto	i2l1375
 25237  011F50                     
 25238                           ; BSR set to: 0
 25239                           ;doprnt.c: 1236: (putch('0') );
 25240                           
 25241                           ; BSR set to: 0
 25242  011F50  0E30               	movlw	48
 25243  011F52  EC4B  F0B8         	call	i2_putch
 25244                           
 25245                           ;doprnt.c: 1237: prec--;
 25246  011F56  0100               	movlb	0	; () banked
 25247  011F58  0787               	decf	i2printf@prec& (0+255),f,b
 25248  011F5A  A0D8               	btfss	status,0,c
 25249  011F5C  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 25250  011F5E                     i2l1377:
 25251                           
 25252                           ; BSR set to: 0
 25253                           
 25254                           ; BSR set to: 0
 25255  011F5E  5187               	movf	i2printf@prec& (0+255),w,b
 25256  011F60  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25257  011F62  B4D8               	btfsc	status,2,c
 25258  011F64  D156               	goto	i2u1935_40
 25259  011F66  D7F4               	goto	i2l1378
 25260  011F68                     i2l1342:
 25261                           
 25262                           ; BSR set to: 0
 25263                           ;doprnt.c: 1246: }
 25264                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 25265                           
 25266                           ; BSR set to: 0
 25267  011F68  0EC0               	movlw	192
 25268  011F6A  1578               	andwf	i2printf@flag& (0+255),w,b
 25269  011F6C  6F68               	movwf	??i2_printf& (0+255),b
 25270  011F6E  0E00               	movlw	0
 25271  011F70  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 25272  011F72  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25273  011F74  5168               	movf	??i2_printf& (0+255),w,b
 25274  011F76  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 25275  011F78  A4D8               	btfss	status,2,c
 25276  011F7A  D01E               	goto	i2l1380
 25277                           
 25278                           ; BSR set to: 0
 25279                           ;doprnt.c: 1253: {
 25280                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 25281  011F7C  C076  FFD9         	movff	i2printf@ap,fsr2l
 25282  011F80  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 25283  011F84  CFDE F083          	movff	postinc2,i2printf@val
 25284  011F88  CFDD F084          	movff	postdec2,i2printf@val+1
 25285  011F8C  0E00               	movlw	0
 25286  011F8E  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 25287  011F90  0EFF               	movlw	-1
 25288  011F92  6F85               	movwf	(i2printf@val+2)& (0+255),b
 25289  011F94  6F86               	movwf	(i2printf@val+3)& (0+255),b
 25290                           
 25291                           ; BSR set to: 0
 25292  011F96  0E02               	movlw	2
 25293  011F98  2776               	addwf	i2printf@ap& (0+255),f,b
 25294  011F9A  0E00               	movlw	0
 25295  011F9C  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25296                           
 25297                           ; BSR set to: 0
 25298                           ;doprnt.c: 1261: if((long)val < 0) {
 25299  011F9E  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 25300  011FA0  D01D               	goto	i2l1382
 25301                           
 25302                           ; BSR set to: 0
 25303                           ;doprnt.c: 1262: flag |= 0x03;
 25304  011FA2  0E03               	movlw	3
 25305  011FA4  1378               	iorwf	i2printf@flag& (0+255),f,b
 25306                           
 25307                           ; BSR set to: 0
 25308                           ;doprnt.c: 1263: val = -val;
 25309  011FA6  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 25310  011FA8  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 25311  011FAA  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 25312  011FAC  6D83               	negf	i2printf@val& (0+255),b
 25313  011FAE  0E00               	movlw	0
 25314  011FB0  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 25315  011FB2  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 25316  011FB4  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 25317                           
 25318                           ; BSR set to: 0
 25319                           ;doprnt.c: 1264: }
 25320                           ;doprnt.c: 1266: }
 25321  011FB6  D012               	goto	i2l1382
 25322  011FB8                     i2l1380:
 25323                           
 25324                           ; BSR set to: 0
 25325                           ;doprnt.c: 1268: else
 25326                           ;doprnt.c: 1273: {
 25327                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 25328                           
 25329                           ; BSR set to: 0
 25330  011FB8  C076  FFD9         	movff	i2printf@ap,fsr2l
 25331  011FBC  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 25332  011FC0  CFDE F068          	movff	postinc2,??i2_printf
 25333  011FC4  CFDD F069          	movff	postdec2,??i2_printf+1
 25334  011FC8  C068  F083         	movff	??i2_printf,i2printf@val
 25335  011FCC  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 25336  011FD0  6B85               	clrf	(i2printf@val+2)& (0+255),b
 25337  011FD2  6B86               	clrf	(i2printf@val+3)& (0+255),b
 25338                           
 25339                           ; BSR set to: 0
 25340  011FD4  0E02               	movlw	2
 25341  011FD6  2776               	addwf	i2printf@ap& (0+255),f,b
 25342  011FD8  0E00               	movlw	0
 25343  011FDA  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 25344  011FDC                     i2l1382:
 25345                           
 25346                           ; BSR set to: 0
 25347                           ;doprnt.c: 1287: }
 25348                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 25349                           
 25350                           ; BSR set to: 0
 25351  011FDC  5187               	movf	i2printf@prec& (0+255),w,b
 25352  011FDE  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 25353  011FE0  A4D8               	btfss	status,2,c
 25354  011FE2  D04B               	goto	i2l1384
 25355                           
 25356                           ; BSR set to: 0
 25357  011FE4  5183               	movf	i2printf@val& (0+255),w,b
 25358  011FE6  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 25359  011FE8  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 25360  011FEA  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 25361  011FEC  A4D8               	btfss	status,2,c
 25362  011FEE  D045               	goto	i2l1384
 25363                           
 25364                           ; BSR set to: 0
 25365                           ;doprnt.c: 1291: prec++;
 25366  011FF0  4B87               	infsnz	i2printf@prec& (0+255),f,b
 25367  011FF2  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 25368                           
 25369                           ; BSR set to: 0
 25370                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 25371  011FF4  D042               	goto	i2l1384
 25372  011FF6                     
 25373                           ; BSR set to: 0
 25374                           ;doprnt.c: 1302: case 0xC0:
 25375                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 25376                           
 25377                           ; BSR set to: 0
 25378                           
 25379                           ; BSR set to: 0
 25380  011FF6  0E01               	movlw	1
 25381  011FF8  6F89               	movwf	i2printf@c& (0+255),b
 25382  011FFA                     i2l14939:
 25383                           
 25384                           ; BSR set to: 0
 25385  011FFA  0E0A               	movlw	10
 25386  011FFC  1989               	xorwf	i2printf@c& (0+255),w,b
 25387  011FFE  B4D8               	btfsc	status,2,c
 25388  012000  D047               	goto	i2l1390
 25389                           
 25390                           ; BSR set to: 0
 25391                           ;doprnt.c: 1306: if(val < dpowers[c])
 25392                           
 25393                           ; BSR set to: 0
 25394                           
 25395                           ; BSR set to: 0
 25396  012002  5189               	movf	i2printf@c& (0+255),w,b
 25397  012004  0D04               	mullw	4
 25398  012006  0E5F               	movlw	low _dpowers
 25399  012008  24F3               	addwf	prodl,w,c
 25400  01200A  6EF6               	movwf	tblptrl,c
 25401  01200C  0EEC               	movlw	high _dpowers
 25402  01200E  20F4               	addwfc	prodh,w,c
 25403  012010  6EF7               	movwf	tblptrh,c
 25404  012012                     	if	1	;There are 3 active tblptr bytes
 25405  012012  6AF8               	clrf	tblptru,c
 25406  012014  0E00               	movlw	low (__mediumconst shr (0+16))
 25407  012016  22F8               	addwfc	tblptru,f,c
 25408  012018                     	endif
 25409  012018  0009               	tblrd		*+
 25410  01201A  50F5               	movf	tablat,w,c
 25411  01201C  5D83               	subwf	i2printf@val& (0+255),w,b
 25412  01201E  0009               	tblrd		*+
 25413  012020  50F5               	movf	tablat,w,c
 25414  012022  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 25415  012024  0009               	tblrd		*+
 25416  012026  50F5               	movf	tablat,w,c
 25417  012028  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 25418  01202A  0009               	tblrd		*+
 25419  01202C  50F5               	movf	tablat,w,c
 25420  01202E  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 25421  012030  A0D8               	btfss	status,0,c
 25422  012032  D02E               	goto	i2l1390
 25423                           
 25424                           ; BSR set to: 0
 25425                           
 25426                           ; BSR set to: 0
 25427                           
 25428                           ; BSR set to: 0
 25429                           ;doprnt.c: 1307: break;
 25430  012034  2B89               	incf	i2printf@c& (0+255),f,b
 25431  012036  D7E1               	goto	i2l14939
 25432  012038                     
 25433                           ; BSR set to: 0
 25434                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 25435                           
 25436                           ; BSR set to: 0
 25437  012038  0E01               	movlw	1
 25438  01203A  6F89               	movwf	i2printf@c& (0+255),b
 25439  01203C                     i2l14953:
 25440                           
 25441                           ; BSR set to: 0
 25442  01203C  0E08               	movlw	8
 25443  01203E  1989               	xorwf	i2printf@c& (0+255),w,b
 25444  012040  B4D8               	btfsc	status,2,c
 25445  012042  D026               	goto	i2l1390
 25446                           
 25447                           ; BSR set to: 0
 25448                           ;doprnt.c: 1317: if(val < hexpowers[c])
 25449                           
 25450                           ; BSR set to: 0
 25451                           
 25452                           ; BSR set to: 0
 25453  012044  5189               	movf	i2printf@c& (0+255),w,b
 25454  012046  0D04               	mullw	4
 25455  012048  0ED5               	movlw	low _hexpowers
 25456  01204A  24F3               	addwf	prodl,w,c
 25457  01204C  6EF6               	movwf	tblptrl,c
 25458  01204E  0EEC               	movlw	high _hexpowers
 25459  012050  20F4               	addwfc	prodh,w,c
 25460  012052  6EF7               	movwf	tblptrh,c
 25461  012054                     	if	1	;There are 3 active tblptr bytes
 25462  012054  6AF8               	clrf	tblptru,c
 25463  012056  0E00               	movlw	low (__mediumconst shr (0+16))
 25464  012058  22F8               	addwfc	tblptru,f,c
 25465  01205A                     	endif
 25466  01205A  0009               	tblrd		*+
 25467  01205C  50F5               	movf	tablat,w,c
 25468  01205E  5D83               	subwf	i2printf@val& (0+255),w,b
 25469  012060  0009               	tblrd		*+
 25470  012062  50F5               	movf	tablat,w,c
 25471  012064  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 25472  012066  0009               	tblrd		*+
 25473  012068  50F5               	movf	tablat,w,c
 25474  01206A  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 25475  01206C  0009               	tblrd		*+
 25476  01206E  50F5               	movf	tablat,w,c
 25477  012070  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 25478  012072  A0D8               	btfss	status,0,c
 25479  012074  D00D               	goto	i2l1390
 25480                           
 25481                           ; BSR set to: 0
 25482                           
 25483                           ; BSR set to: 0
 25484                           
 25485                           ; BSR set to: 0
 25486                           ;doprnt.c: 1318: break;
 25487  012076  2B89               	incf	i2printf@c& (0+255),f,b
 25488  012078  D7E1               	goto	i2l14953
 25489  01207A                     i2l1384:
 25490                           
 25491                           ; BSR set to: 0
 25492                           
 25493                           ; BSR set to: 0
 25494  01207A  5178               	movf	i2printf@flag& (0+255),w,b
 25495  01207C  0BC0               	andlw	192
 25496                           
 25497                           ; Switch size 1, requested type "space"
 25498                           ; Number of cases is 3, Range of values is 0 to 192
 25499                           ; switch strategies available:
 25500                           ; Name         Instructions Cycles
 25501                           ; simple_byte           10     6 (average)
 25502                           ;	Chosen strategy is simple_byte
 25503  01207E  0A00               	xorlw	0	; case 0
 25504  012080  B4D8               	btfsc	status,2,c
 25505  012082  D7B9               	goto	i2l1385
 25506  012084  0A80               	xorlw	128	; case 128
 25507  012086  B4D8               	btfsc	status,2,c
 25508  012088  D7D7               	goto	i2l1391
 25509  01208A  0A40               	xorlw	64	; case 192
 25510  01208C  B4D8               	btfsc	status,2,c
 25511  01208E  D7B3               	goto	i2l1385
 25512  012090                     i2l1390:
 25513                           
 25514                           ; BSR set to: 0
 25515                           ;doprnt.c: 1339: if(c < prec)
 25516                           
 25517                           ; BSR set to: 0
 25518  012090  0E80               	movlw	128
 25519  012092  BF89               	btfsc	i2printf@c& (0+255),7,b
 25520  012094  0E7F               	movlw	127
 25521  012096  6F68               	movwf	??i2_printf& (0+255),b
 25522  012098  5187               	movf	i2printf@prec& (0+255),w,b
 25523  01209A  5D89               	subwf	i2printf@c& (0+255),w,b
 25524  01209C  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 25525  01209E  0A80               	xorlw	128
 25526  0120A0  5968               	subwfb	??i2_printf& (0+255),w,b
 25527  0120A2  B0D8               	btfsc	status,0,c
 25528  0120A4  D003               	goto	i2l1395
 25529                           
 25530                           ; BSR set to: 0
 25531                           ;doprnt.c: 1340: c = prec;
 25532  0120A6  C087  F089         	movff	i2printf@prec,i2printf@c
 25533  0120AA  D010               	goto	i2l1397
 25534  0120AC                     i2l1395:
 25535                           
 25536                           ; BSR set to: 0
 25537                           ;doprnt.c: 1341: else if(prec < c)
 25538                           
 25539                           ; BSR set to: 0
 25540  0120AC  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 25541  0120AE  0A80               	xorlw	128
 25542  0120B0  6F68               	movwf	??i2_printf& (0+255),b
 25543  0120B2  5189               	movf	i2printf@c& (0+255),w,b
 25544  0120B4  5D87               	subwf	i2printf@prec& (0+255),w,b
 25545  0120B6  0E80               	movlw	128
 25546  0120B8  BF89               	btfsc	i2printf@c& (0+255),7,b
 25547  0120BA  0E7F               	movlw	127
 25548  0120BC  5968               	subwfb	??i2_printf& (0+255),w,b
 25549  0120BE  B0D8               	btfsc	status,0,c
 25550  0120C0  D005               	goto	i2l1397
 25551                           
 25552                           ; BSR set to: 0
 25553                           ;doprnt.c: 1342: prec = c;
 25554  0120C2  5189               	movf	i2printf@c& (0+255),w,b
 25555  0120C4  6F87               	movwf	i2printf@prec& (0+255),b
 25556  0120C6  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 25557  0120C8  BF87               	btfsc	i2printf@prec& (0+255),7,b
 25558  0120CA  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 25559  0120CC                     i2l1397:
 25560                           
 25561                           ; BSR set to: 0
 25562                           ;doprnt.c: 1422: {
 25563                           ;doprnt.c: 1438: if(flag & 0x03)
 25564                           
 25565                           ; BSR set to: 0
 25566                           
 25567                           ; BSR set to: 0
 25568  0120CC  0E03               	movlw	3
 25569  0120CE  1578               	andwf	i2printf@flag& (0+255),w,b
 25570  0120D0  6F68               	movwf	??i2_printf& (0+255),b
 25571  0120D2  0E00               	movlw	0
 25572  0120D4  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 25573  0120D6  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25574  0120D8  5168               	movf	??i2_printf& (0+255),w,b
 25575  0120DA  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 25576  0120DC  B4D8               	btfsc	status,2,c
 25577  0120DE  D090               	goto	i2l1399
 25578                           
 25579                           ; BSR set to: 0
 25580                           ;doprnt.c: 1439: (putch('-') );
 25581  0120E0  0E2D               	movlw	45
 25582  0120E2  EC4B  F0B8         	call	i2_putch
 25583                           
 25584                           ;doprnt.c: 1469: }
 25585                           ;doprnt.c: 1474: while(prec--) {
 25586  0120E6  D08C               	goto	i2l1399
 25587  0120E8                     
 25588                           ;doprnt.c: 1486: case 0xC0:
 25589                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 25590  0120E8  C087  F068         	movff	i2printf@prec,??i2_printf
 25591  0120EC  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 25592  0120F0  0100               	movlb	0	; () banked
 25593  0120F2  90D8               	bcf	status,0,c
 25594  0120F4  3768               	rlcf	??i2_printf& (0+255),f,b
 25595  0120F6  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25596  0120F8  90D8               	bcf	status,0,c
 25597  0120FA  3768               	rlcf	??i2_printf& (0+255),f,b
 25598  0120FC  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25599  0120FE  0E5F               	movlw	low _dpowers
 25600  012100  2568               	addwf	??i2_printf& (0+255),w,b
 25601  012102  6EF6               	movwf	tblptrl,c
 25602  012104  0EEC               	movlw	high _dpowers
 25603  012106  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 25604  012108  6EF7               	movwf	tblptrh,c
 25605  01210A                     	if	1	;There are 3 active tblptr bytes
 25606  01210A  6AF8               	clrf	tblptru,c
 25607  01210C  0E00               	movlw	low (__mediumconst shr (0+16))
 25608  01210E  22F8               	addwfc	tblptru,f,c
 25609  012110                     	endif
 25610  012110  0009               	tblrd		*+
 25611  012112  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25612  012116  0009               	tblrd		*+
 25613  012118  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25614  01211C  0009               	tblrd		*+
 25615  01211E  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25616  012122  000A               	tblrd		*-
 25617  012124  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25618  012128  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 25619  01212C  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25620  012130  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25621  012134  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25622  012138  EC01  F0B0         	call	i2___lldiv	;wreg free
 25623  01213C  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 25624  012140  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 25625  012144  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 25626  012148  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 25627  01214C  0E0A               	movlw	10
 25628  01214E  6E12               	movwf	i2___llmod@divisor,c
 25629  012150  0E00               	movlw	0
 25630  012152  6E13               	movwf	i2___llmod@divisor+1,c
 25631  012154  0E00               	movlw	0
 25632  012156  6E14               	movwf	i2___llmod@divisor+2,c
 25633  012158  0E00               	movlw	0
 25634  01215A  6E15               	movwf	i2___llmod@divisor+3,c
 25635  01215C  EC43  F0B2         	call	i2___llmod	;wreg free
 25636  012160  500E               	movf	?i2___llmod,w,c
 25637  012162  0F30               	addlw	48
 25638  012164  0100               	movlb	0	; () banked
 25639  012166  6F89               	movwf	i2printf@c& (0+255),b
 25640                           
 25641                           ;doprnt.c: 1491: break;
 25642  012168  D048               	goto	i2l1404
 25643  01216A                     
 25644                           ; BSR set to: 0
 25645                           ;doprnt.c: 1499: {
 25646                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 25647                           
 25648                           ; BSR set to: 0
 25649  01216A  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 25650  01216E  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 25651  012172  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 25652  012176  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 25653  01217A  C087  F068         	movff	i2printf@prec,??i2_printf
 25654  01217E  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 25655  012182  90D8               	bcf	status,0,c
 25656  012184  3768               	rlcf	??i2_printf& (0+255),f,b
 25657  012186  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25658  012188  90D8               	bcf	status,0,c
 25659  01218A  3768               	rlcf	??i2_printf& (0+255),f,b
 25660  01218C  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 25661  01218E  0ED5               	movlw	low _hexpowers
 25662  012190  2568               	addwf	??i2_printf& (0+255),w,b
 25663  012192  6EF6               	movwf	tblptrl,c
 25664  012194  0EEC               	movlw	high _hexpowers
 25665  012196  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 25666  012198  6EF7               	movwf	tblptrh,c
 25667  01219A                     	if	1	;There are 3 active tblptr bytes
 25668  01219A  6AF8               	clrf	tblptru,c
 25669  01219C  0E00               	movlw	low (__mediumconst shr (0+16))
 25670  01219E  22F8               	addwfc	tblptru,f,c
 25671  0121A0                     	endif
 25672  0121A0  0009               	tblrd		*+
 25673  0121A2  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 25674  0121A6  0009               	tblrd		*+
 25675  0121A8  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 25676  0121AC  0009               	tblrd		*+
 25677  0121AE  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 25678  0121B2  000A               	tblrd		*-
 25679  0121B4  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 25680  0121B8  EC01  F0B0         	call	i2___lldiv	;wreg free
 25681  0121BC  5001               	movf	?i2___lldiv,w,c
 25682  0121BE  0B0F               	andlw	15
 25683  0121C0  0100               	movlb	0	; () banked
 25684  0121C2  6F71               	movwf	i2printf@idx& (0+255),b
 25685                           
 25686                           ; BSR set to: 0
 25687                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 25688  0121C4  5171               	movf	i2printf@idx& (0+255),w,b
 25689  0121C6  0D01               	mullw	1
 25690  0121C8  0EFA               	movlw	low STR_133
 25691  0121CA  24F3               	addwf	prodl,w,c
 25692  0121CC  6EF6               	movwf	tblptrl,c
 25693  0121CE  0EFD               	movlw	high STR_133
 25694  0121D0  20F4               	addwfc	prodh,w,c
 25695  0121D2  6EF7               	movwf	tblptrh,c
 25696  0121D4                     	if	1	;There are 3 active tblptr bytes
 25697  0121D4  6AF8               	clrf	tblptru,c
 25698  0121D6  0E00               	movlw	low (__mediumconst shr (0+16))
 25699  0121D8  22F8               	addwfc	tblptru,f,c
 25700  0121DA                     	endif
 25701  0121DA  0008               	tblrd		*
 25702  0121DC  CFF5 F089          	movff	tablat,i2printf@c
 25703                           
 25704                           ; BSR set to: 0
 25705                           ;doprnt.c: 1523: }
 25706                           
 25707                           ;doprnt.c: 1508: }
 25708                           ;doprnt.c: 1510: break;
 25709  0121E0  D00C               	goto	i2l1404
 25710  0121E2                     i2l14989:
 25711  0121E2  0100               	movlb	0	; () banked
 25712  0121E4  5178               	movf	i2printf@flag& (0+255),w,b
 25713  0121E6  0BC0               	andlw	192
 25714                           
 25715                           ; Switch size 1, requested type "space"
 25716                           ; Number of cases is 3, Range of values is 0 to 192
 25717                           ; switch strategies available:
 25718                           ; Name         Instructions Cycles
 25719                           ; simple_byte           10     6 (average)
 25720                           ;	Chosen strategy is simple_byte
 25721  0121E8  0A00               	xorlw	0	; case 0
 25722  0121EA  B4D8               	btfsc	status,2,c
 25723  0121EC  D77D               	goto	i2l1402
 25724  0121EE  0A80               	xorlw	128	; case 128
 25725  0121F0  B4D8               	btfsc	status,2,c
 25726  0121F2  D7BB               	goto	i2l1405
 25727  0121F4  0A40               	xorlw	64	; case 192
 25728  0121F6  B4D8               	btfsc	status,2,c
 25729  0121F8  D777               	goto	i2l1402
 25730  0121FA                     i2l1404:
 25731                           
 25732                           ; BSR set to: 0
 25733                           ;doprnt.c: 1524: (putch(c) );
 25734                           
 25735                           ; BSR set to: 0
 25736  0121FA  5189               	movf	i2printf@c& (0+255),w,b
 25737  0121FC  EC4B  F0B8         	call	i2_putch
 25738  012200                     i2l1399:
 25739  012200  0100               	movlb	0	; () banked
 25740  012202  0787               	decf	i2printf@prec& (0+255),f,b
 25741  012204  A0D8               	btfss	status,0,c
 25742  012206  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 25743  012208  2987               	incf	i2printf@prec& (0+255),w,b
 25744  01220A  E1EB               	bnz	i2l14989
 25745  01220C  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 25746  01220E  A4D8               	btfss	status,2,c
 25747  012210  D7E8               	goto	i2l1401
 25748  012212                     i2u1935_40:
 25749                           
 25750                           ; BSR set to: 0
 25751                           
 25752                           ; BSR set to: 0
 25753  012212  0100               	movlb	0	; () banked
 25754  012214  5166               	movf	i2printf@f& (0+255),w,b
 25755  012216  6F68               	movwf	??i2_printf& (0+255),b
 25756  012218  5167               	movf	(i2printf@f+1)& (0+255),w,b
 25757  01221A  6F69               	movwf	(??i2_printf+1)& (0+255),b
 25758  01221C  4B66               	infsnz	i2printf@f& (0+255),f,b
 25759  01221E  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 25760  012220  C068  FFF6         	movff	??i2_printf,tblptrl
 25761  012224  C069  FFF7         	movff	??i2_printf+1,tblptrh
 25762  012228  0E00               	movlw	low (__mediumconst shr (0+16))
 25763  01222A  6EF8               	movwf	tblptru,c
 25764  01222C  0E0D               	movlw	(high __ramtop+-1)
 25765  01222E  64F7               	cpfsgt	tblptrh,c
 25766  012230  D003               	bra	i2u1936_47
 25767  012232  0008               	tblrd		*
 25768  012234  50F5               	movf	tablat,w,c
 25769  012236  D005               	bra	i2u1936_40
 25770  012238                     i2u1936_47:
 25771  012238  CFF6 FFE9          	movff	tblptrl,fsr0l
 25772  01223C  CFF7 FFEA          	movff	tblptrh,fsr0h
 25773  012240  50EF               	movf	indf0,w,c
 25774  012242                     i2u1936_40:
 25775  012242  0100               	movlb	0	; () banked
 25776  012244  6F89               	movwf	i2printf@c& (0+255),b
 25777  012246  5189               	movf	i2printf@c& (0+255),w,b
 25778  012248  B4D8               	btfsc	status,2,c
 25779  01224A  0012               	return	
 25780  01224C  EFD5  F08B         	goto	i2l1314
 25781  012250                     __end_ofi2_printf:
 25782                           	opt stack 0
 25783                           tosu	equ	0xFFF
 25784                           tosh	equ	0xFFE
 25785                           tosl	equ	0xFFD
 25786                           pclatu	equ	0xFFB
 25787                           pclath	equ	0xFFA
 25788                           tblptru	equ	0xFF8
 25789                           tblptrh	equ	0xFF7
 25790                           tblptrl	equ	0xFF6
 25791                           tablat	equ	0xFF5
 25792                           prodh	equ	0xFF4
 25793                           prodl	equ	0xFF3
 25794                           intcon	equ	0xFF2
 25795                           indf0	equ	0xFEF
 25796                           postinc0	equ	0xFEE
 25797                           fsr0h	equ	0xFEA
 25798                           fsr0l	equ	0xFE9
 25799                           wreg	equ	0xFE8
 25800                           indf1	equ	0xFE7
 25801                           postdec1	equ	0xFE5
 25802                           plusw1	equ	0xFE3
 25803                           fsr1h	equ	0xFE2
 25804                           fsr1l	equ	0xFE1
 25805                           bsr	equ	0xFE0
 25806                           indf2	equ	0xFDF
 25807                           postinc2	equ	0xFDE
 25808                           postdec2	equ	0xFDD
 25809                           plusw2	equ	0xFDB
 25810                           fsr2h	equ	0xFDA
 25811                           fsr2l	equ	0xFD9
 25812                           status	equ	0xFD8
 25813                           
 25814 ;; *************** function i2_scale *****************
 25815 ;; Defined at:
 25816 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 25817 ;; Parameters:    Size  Location     Type
 25818 ;;  scl             1    wreg     char 
 25819 ;; Auto vars:     Size  Location     Type
 25820 ;;  scl             1   59[COMRAM] char 
 25821 ;; Return value:  Size  Location     Type
 25822 ;;                  3   53[COMRAM] char 
 25823 ;; Registers used:
 25824 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25825 ;; Tracked objects:
 25826 ;;		On entry : 0/0
 25827 ;;		On exit  : 0/0
 25828 ;;		Unchanged: 0/0
 25829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25830 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25831 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25833 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25834 ;;Total ram usage:        7 bytes
 25835 ;; Hardware stack levels used:    1
 25836 ;; Hardware stack levels required when called:    2
 25837 ;; This function calls:
 25838 ;;		i2___awdiv
 25839 ;;		i2___awmod
 25840 ;;		i2___ftmul
 25841 ;;		i2___wmul
 25842 ;; This function is called by:
 25843 ;;		i2_printf
 25844 ;; This function uses a non-reentrant model
 25845 ;;
 25846                           
 25847                           	psect	text90
 25848  012D48                     __ptext90:
 25849                           	opt stack 0
 25850  012D48                     i2_scale:
 25851                           	opt stack 13
 25852                           
 25853                           ; BSR set to: 0
 25854                           ;incstack = 0
 25855                           ;i2scale@scl stored from wreg
 25856  012D48  6E3C               	movwf	i2scale@scl,c
 25857                           
 25858                           ;doprnt.c: 428: if(scl < 0) {
 25859  012D4A  AE3C               	btfss	i2scale@scl,7,c
 25860  012D4C  D113               	goto	i2l1303
 25861                           
 25862                           ;doprnt.c: 429: scl = -scl;
 25863  012D4E  6C3C               	negf	i2scale@scl,c
 25864                           
 25865                           ;doprnt.c: 430: if(scl>=110)
 25866  012D50  503C               	movf	i2scale@scl,w,c
 25867  012D52  0A80               	xorlw	128
 25868  012D54  0F12               	addlw	-238
 25869  012D56  A0D8               	btfss	status,0,c
 25870  012D58  D09A               	goto	i2l1304
 25871                           
 25872                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 25873  012D5A  0E00               	movlw	0
 25874  012D5C  6E12               	movwf	i2___wmul@multiplicand+1,c
 25875  012D5E  0E03               	movlw	3
 25876  012D60  6E11               	movwf	i2___wmul@multiplicand,c
 25877  012D62  0E00               	movlw	0
 25878  012D64  6E0A               	movwf	i2___awdiv@divisor+1,c
 25879  012D66  0E0A               	movlw	10
 25880  012D68  6E09               	movwf	i2___awdiv@divisor,c
 25881  012D6A  0E00               	movlw	0
 25882  012D6C  6E04               	movwf	i2___awmod@divisor+1,c
 25883  012D6E  0E64               	movlw	100
 25884  012D70  6E03               	movwf	i2___awmod@divisor,c
 25885  012D72  503C               	movf	i2scale@scl,w,c
 25886  012D74  6E01               	movwf	i2___awmod@dividend,c
 25887  012D76  6A02               	clrf	i2___awmod@dividend+1,c
 25888  012D78  BE01               	btfsc	i2___awmod@dividend,7,c
 25889  012D7A  0602               	decf	i2___awmod@dividend+1,f,c
 25890  012D7C  EC6E  F0B1         	call	i2___awmod	;wreg free
 25891  012D80  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 25892  012D84  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 25893  012D88  ECBF  F0AF         	call	i2___awdiv	;wreg free
 25894  012D8C  0E09               	movlw	9
 25895  012D8E  2407               	addwf	?i2___awdiv,w,c
 25896  012D90  6E0F               	movwf	i2___wmul@multiplier,c
 25897  012D92  0E00               	movlw	0
 25898  012D94  2008               	addwfc	?i2___awdiv+1,w,c
 25899  012D96  6E10               	movwf	i2___wmul@multiplier+1,c
 25900  012D98  EC28  F0B7         	call	i2___wmul	;wreg free
 25901  012D9C  0EAE               	movlw	low __npowers_
 25902  012D9E  240F               	addwf	?i2___wmul,w,c
 25903  012DA0  6EF6               	movwf	tblptrl,c
 25904  012DA2  0EEC               	movlw	high __npowers_
 25905  012DA4  2010               	addwfc	?i2___wmul+1,w,c
 25906  012DA6  6EF7               	movwf	tblptrh,c
 25907  012DA8                     	if	1	;There are 3 active tblptr bytes
 25908  012DA8  6AF8               	clrf	tblptru,c
 25909  012DAA  0E00               	movlw	low (__mediumconst shr (0+16))
 25910  012DAC  22F8               	addwfc	tblptru,f,c
 25911  012DAE                     	endif
 25912  012DAE  0009               	tblrd		*+
 25913  012DB0  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 25914  012DB4  0009               	tblrd		*+
 25915  012DB6  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 25916  012DBA  000A               	tblrd		*-
 25917  012DBC  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 25918  012DC0  0E00               	movlw	0
 25919  012DC2  6E0A               	movwf	i2___awdiv@divisor+1,c
 25920  012DC4  0E64               	movlw	100
 25921  012DC6  6E09               	movwf	i2___awdiv@divisor,c
 25922  012DC8  503C               	movf	i2scale@scl,w,c
 25923  012DCA  6E07               	movwf	i2___awdiv@dividend,c
 25924  012DCC  6A08               	clrf	i2___awdiv@dividend+1,c
 25925  012DCE  BE07               	btfsc	i2___awdiv@dividend,7,c
 25926  012DD0  0608               	decf	i2___awdiv@dividend+1,f,c
 25927  012DD2  ECBF  F0AF         	call	i2___awdiv	;wreg free
 25928  012DD6  0E12               	movlw	18
 25929  012DD8  2407               	addwf	?i2___awdiv,w,c
 25930  012DDA  6E0F               	movwf	i2___wmul@multiplier,c
 25931  012DDC  0E00               	movlw	0
 25932  012DDE  2008               	addwfc	?i2___awdiv+1,w,c
 25933  012DE0  6E10               	movwf	i2___wmul@multiplier+1,c
 25934  012DE2  0E00               	movlw	0
 25935  012DE4  6E12               	movwf	i2___wmul@multiplicand+1,c
 25936  012DE6  0E03               	movlw	3
 25937  012DE8  6E11               	movwf	i2___wmul@multiplicand,c
 25938  012DEA  EC28  F0B7         	call	i2___wmul	;wreg free
 25939  012DEE  0EAE               	movlw	low __npowers_
 25940  012DF0  240F               	addwf	?i2___wmul,w,c
 25941  012DF2  6EF6               	movwf	tblptrl,c
 25942  012DF4  0EEC               	movlw	high __npowers_
 25943  012DF6  2010               	addwfc	?i2___wmul+1,w,c
 25944  012DF8  6EF7               	movwf	tblptrh,c
 25945  012DFA                     	if	1	;There are 3 active tblptr bytes
 25946  012DFA  6AF8               	clrf	tblptru,c
 25947  012DFC  0E00               	movlw	low (__mediumconst shr (0+16))
 25948  012DFE  22F8               	addwfc	tblptru,f,c
 25949  012E00                     	endif
 25950  012E00  0009               	tblrd		*+
 25951  012E02  CFF5 F027          	movff	tablat,i2___ftmul@f1
 25952  012E06  0009               	tblrd		*+
 25953  012E08  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 25954  012E0C  000A               	tblrd		*-
 25955  012E0E  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 25956  012E12  EC01  F0A8         	call	i2___ftmul	;wreg free
 25957  012E16  C027  F039         	movff	?i2___ftmul,i2_scale$3895
 25958  012E1A  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3895+1
 25959  012E1E  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3895+2
 25960                           
 25961                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 25962  012E22  C039  F027         	movff	i2_scale$3895,i2___ftmul@f1
 25963  012E26  C03A  F028         	movff	i2_scale$3895+1,i2___ftmul@f1+1
 25964  012E2A  C03B  F029         	movff	i2_scale$3895+2,i2___ftmul@f1+2
 25965  012E2E  0E00               	movlw	0
 25966  012E30  6E12               	movwf	i2___wmul@multiplicand+1,c
 25967  012E32  0E03               	movlw	3
 25968  012E34  6E11               	movwf	i2___wmul@multiplicand,c
 25969  012E36  0E00               	movlw	0
 25970  012E38  6E04               	movwf	i2___awmod@divisor+1,c
 25971  012E3A  0E0A               	movlw	10
 25972  012E3C  6E03               	movwf	i2___awmod@divisor,c
 25973  012E3E  503C               	movf	i2scale@scl,w,c
 25974  012E40  6E01               	movwf	i2___awmod@dividend,c
 25975  012E42  6A02               	clrf	i2___awmod@dividend+1,c
 25976  012E44  BE01               	btfsc	i2___awmod@dividend,7,c
 25977  012E46  0602               	decf	i2___awmod@dividend+1,f,c
 25978  012E48  EC6E  F0B1         	call	i2___awmod	;wreg free
 25979  012E4C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 25980  012E50  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 25981  012E54  EC28  F0B7         	call	i2___wmul	;wreg free
 25982  012E58  0EAE               	movlw	low __npowers_
 25983  012E5A  240F               	addwf	?i2___wmul,w,c
 25984  012E5C  6EF6               	movwf	tblptrl,c
 25985  012E5E  0EEC               	movlw	high __npowers_
 25986  012E60  2010               	addwfc	?i2___wmul+1,w,c
 25987  012E62  6EF7               	movwf	tblptrh,c
 25988  012E64                     	if	1	;There are 3 active tblptr bytes
 25989  012E64  6AF8               	clrf	tblptru,c
 25990  012E66  0E00               	movlw	low (__mediumconst shr (0+16))
 25991  012E68  22F8               	addwfc	tblptru,f,c
 25992  012E6A                     	endif
 25993  012E6A  0009               	tblrd		*+
 25994  012E6C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 25995  012E70  0009               	tblrd		*+
 25996  012E72  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 25997  012E76  000A               	tblrd		*-
 25998  012E78  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 25999  012E7C  EC01  F0A8         	call	i2___ftmul	;wreg free
 26000  012E80  C027  F036         	movff	?i2___ftmul,?i2_scale
 26001  012E84  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26002  012E88  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26003  012E8C  0012               	return	
 26004  012E8E                     i2l1304:
 26005                           
 26006                           ;doprnt.c: 432: else if(scl > 10)
 26007  012E8E  503C               	movf	i2scale@scl,w,c
 26008  012E90  0A80               	xorlw	128
 26009  012E92  0F75               	addlw	-139
 26010  012E94  A0D8               	btfss	status,0,c
 26011  012E96  D059               	goto	i2l1307
 26012                           
 26013                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 26014  012E98  0E00               	movlw	0
 26015  012E9A  6E0A               	movwf	i2___awdiv@divisor+1,c
 26016  012E9C  0E0A               	movlw	10
 26017  012E9E  6E09               	movwf	i2___awdiv@divisor,c
 26018  012EA0  503C               	movf	i2scale@scl,w,c
 26019  012EA2  6E07               	movwf	i2___awdiv@dividend,c
 26020  012EA4  6A08               	clrf	i2___awdiv@dividend+1,c
 26021  012EA6  BE07               	btfsc	i2___awdiv@dividend,7,c
 26022  012EA8  0608               	decf	i2___awdiv@dividend+1,f,c
 26023  012EAA  ECBF  F0AF         	call	i2___awdiv	;wreg free
 26024  012EAE  0E09               	movlw	9
 26025  012EB0  2407               	addwf	?i2___awdiv,w,c
 26026  012EB2  6E0F               	movwf	i2___wmul@multiplier,c
 26027  012EB4  0E00               	movlw	0
 26028  012EB6  2008               	addwfc	?i2___awdiv+1,w,c
 26029  012EB8  6E10               	movwf	i2___wmul@multiplier+1,c
 26030  012EBA  0E00               	movlw	0
 26031  012EBC  6E12               	movwf	i2___wmul@multiplicand+1,c
 26032  012EBE  0E03               	movlw	3
 26033  012EC0  6E11               	movwf	i2___wmul@multiplicand,c
 26034  012EC2  EC28  F0B7         	call	i2___wmul	;wreg free
 26035  012EC6  0EAE               	movlw	low __npowers_
 26036  012EC8  240F               	addwf	?i2___wmul,w,c
 26037  012ECA  6EF6               	movwf	tblptrl,c
 26038  012ECC  0EEC               	movlw	high __npowers_
 26039  012ECE  2010               	addwfc	?i2___wmul+1,w,c
 26040  012ED0  6EF7               	movwf	tblptrh,c
 26041  012ED2                     	if	1	;There are 3 active tblptr bytes
 26042  012ED2  6AF8               	clrf	tblptru,c
 26043  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
 26044  012ED6  22F8               	addwfc	tblptru,f,c
 26045  012ED8                     	endif
 26046  012ED8  0009               	tblrd		*+
 26047  012EDA  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26048  012EDE  0009               	tblrd		*+
 26049  012EE0  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26050  012EE4  000A               	tblrd		*-
 26051  012EE6  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26052  012EEA  0E00               	movlw	0
 26053  012EEC  6E12               	movwf	i2___wmul@multiplicand+1,c
 26054  012EEE  0E03               	movlw	3
 26055  012EF0  6E11               	movwf	i2___wmul@multiplicand,c
 26056  012EF2  0E00               	movlw	0
 26057  012EF4  6E04               	movwf	i2___awmod@divisor+1,c
 26058  012EF6  0E0A               	movlw	10
 26059  012EF8  6E03               	movwf	i2___awmod@divisor,c
 26060  012EFA  503C               	movf	i2scale@scl,w,c
 26061  012EFC  6E01               	movwf	i2___awmod@dividend,c
 26062  012EFE  6A02               	clrf	i2___awmod@dividend+1,c
 26063  012F00  BE01               	btfsc	i2___awmod@dividend,7,c
 26064  012F02  0602               	decf	i2___awmod@dividend+1,f,c
 26065  012F04  EC6E  F0B1         	call	i2___awmod	;wreg free
 26066  012F08  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26067  012F0C  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26068  012F10  EC28  F0B7         	call	i2___wmul	;wreg free
 26069  012F14  0EAE               	movlw	low __npowers_
 26070  012F16  240F               	addwf	?i2___wmul,w,c
 26071  012F18  6EF6               	movwf	tblptrl,c
 26072  012F1A  0EEC               	movlw	high __npowers_
 26073  012F1C  2010               	addwfc	?i2___wmul+1,w,c
 26074  012F1E  6EF7               	movwf	tblptrh,c
 26075  012F20                     	if	1	;There are 3 active tblptr bytes
 26076  012F20  6AF8               	clrf	tblptru,c
 26077  012F22  0E00               	movlw	low (__mediumconst shr (0+16))
 26078  012F24  22F8               	addwfc	tblptru,f,c
 26079  012F26                     	endif
 26080  012F26  0009               	tblrd		*+
 26081  012F28  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26082  012F2C  0009               	tblrd		*+
 26083  012F2E  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26084  012F32  000A               	tblrd		*-
 26085  012F34  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26086  012F38  EC01  F0A8         	call	i2___ftmul	;wreg free
 26087  012F3C  C027  F036         	movff	?i2___ftmul,?i2_scale
 26088  012F40  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26089  012F44  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26090  012F48  0012               	return	
 26091  012F4A                     i2l1307:
 26092                           
 26093                           ;doprnt.c: 434: return _npowers_[scl];
 26094  012F4A  503C               	movf	i2scale@scl,w,c
 26095  012F4C  0D03               	mullw	3
 26096  012F4E  0EAE               	movlw	low __npowers_
 26097  012F50  24F3               	addwf	prodl,w,c
 26098  012F52  6EF6               	movwf	tblptrl,c
 26099  012F54  0EEC               	movlw	high __npowers_
 26100  012F56  20F4               	addwfc	prodh,w,c
 26101  012F58  6EF7               	movwf	tblptrh,c
 26102  012F5A                     	if	1	;There are 3 active tblptr bytes
 26103  012F5A  6AF8               	clrf	tblptru,c
 26104  012F5C  0E00               	movlw	low (__mediumconst shr (0+16))
 26105  012F5E  22F8               	addwfc	tblptru,f,c
 26106  012F60                     	endif
 26107  012F60  0009               	tblrd		*+
 26108  012F62  CFF5 F036          	movff	tablat,?i2_scale
 26109  012F66  0009               	tblrd		*+
 26110  012F68  CFF5 F037          	movff	tablat,?i2_scale+1
 26111  012F6C  000A               	tblrd		*-
 26112  012F6E  CFF5 F038          	movff	tablat,?i2_scale+2
 26113  012F72  0012               	return	
 26114  012F74                     i2l1303:
 26115                           
 26116                           ;doprnt.c: 435: }
 26117                           ;doprnt.c: 436: if(scl>=110)
 26118  012F74  503C               	movf	i2scale@scl,w,c
 26119  012F76  0A80               	xorlw	128
 26120  012F78  0F12               	addlw	-238
 26121  012F7A  A0D8               	btfss	status,0,c
 26122  012F7C  D09A               	goto	i2l1308
 26123                           
 26124                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26125  012F7E  0E00               	movlw	0
 26126  012F80  6E12               	movwf	i2___wmul@multiplicand+1,c
 26127  012F82  0E03               	movlw	3
 26128  012F84  6E11               	movwf	i2___wmul@multiplicand,c
 26129  012F86  0E00               	movlw	0
 26130  012F88  6E0A               	movwf	i2___awdiv@divisor+1,c
 26131  012F8A  0E0A               	movlw	10
 26132  012F8C  6E09               	movwf	i2___awdiv@divisor,c
 26133  012F8E  0E00               	movlw	0
 26134  012F90  6E04               	movwf	i2___awmod@divisor+1,c
 26135  012F92  0E64               	movlw	100
 26136  012F94  6E03               	movwf	i2___awmod@divisor,c
 26137  012F96  503C               	movf	i2scale@scl,w,c
 26138  012F98  6E01               	movwf	i2___awmod@dividend,c
 26139  012F9A  6A02               	clrf	i2___awmod@dividend+1,c
 26140  012F9C  BE01               	btfsc	i2___awmod@dividend,7,c
 26141  012F9E  0602               	decf	i2___awmod@dividend+1,f,c
 26142  012FA0  EC6E  F0B1         	call	i2___awmod	;wreg free
 26143  012FA4  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26144  012FA8  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26145  012FAC  ECBF  F0AF         	call	i2___awdiv	;wreg free
 26146  012FB0  0E09               	movlw	9
 26147  012FB2  2407               	addwf	?i2___awdiv,w,c
 26148  012FB4  6E0F               	movwf	i2___wmul@multiplier,c
 26149  012FB6  0E00               	movlw	0
 26150  012FB8  2008               	addwfc	?i2___awdiv+1,w,c
 26151  012FBA  6E10               	movwf	i2___wmul@multiplier+1,c
 26152  012FBC  EC28  F0B7         	call	i2___wmul	;wreg free
 26153  012FC0  0E87               	movlw	low __powers_
 26154  012FC2  240F               	addwf	?i2___wmul,w,c
 26155  012FC4  6EF6               	movwf	tblptrl,c
 26156  012FC6  0EEC               	movlw	high __powers_
 26157  012FC8  2010               	addwfc	?i2___wmul+1,w,c
 26158  012FCA  6EF7               	movwf	tblptrh,c
 26159  012FCC                     	if	1	;There are 3 active tblptr bytes
 26160  012FCC  6AF8               	clrf	tblptru,c
 26161  012FCE  0E00               	movlw	low (__mediumconst shr (0+16))
 26162  012FD0  22F8               	addwfc	tblptru,f,c
 26163  012FD2                     	endif
 26164  012FD2  0009               	tblrd		*+
 26165  012FD4  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26166  012FD8  0009               	tblrd		*+
 26167  012FDA  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26168  012FDE  000A               	tblrd		*-
 26169  012FE0  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26170  012FE4  0E00               	movlw	0
 26171  012FE6  6E0A               	movwf	i2___awdiv@divisor+1,c
 26172  012FE8  0E64               	movlw	100
 26173  012FEA  6E09               	movwf	i2___awdiv@divisor,c
 26174  012FEC  503C               	movf	i2scale@scl,w,c
 26175  012FEE  6E07               	movwf	i2___awdiv@dividend,c
 26176  012FF0  6A08               	clrf	i2___awdiv@dividend+1,c
 26177  012FF2  BE07               	btfsc	i2___awdiv@dividend,7,c
 26178  012FF4  0608               	decf	i2___awdiv@dividend+1,f,c
 26179  012FF6  ECBF  F0AF         	call	i2___awdiv	;wreg free
 26180  012FFA  0E12               	movlw	18
 26181  012FFC  2407               	addwf	?i2___awdiv,w,c
 26182  012FFE  6E0F               	movwf	i2___wmul@multiplier,c
 26183  013000  0E00               	movlw	0
 26184  013002  2008               	addwfc	?i2___awdiv+1,w,c
 26185  013004  6E10               	movwf	i2___wmul@multiplier+1,c
 26186  013006  0E00               	movlw	0
 26187  013008  6E12               	movwf	i2___wmul@multiplicand+1,c
 26188  01300A  0E03               	movlw	3
 26189  01300C  6E11               	movwf	i2___wmul@multiplicand,c
 26190  01300E  EC28  F0B7         	call	i2___wmul	;wreg free
 26191  013012  0E87               	movlw	low __powers_
 26192  013014  240F               	addwf	?i2___wmul,w,c
 26193  013016  6EF6               	movwf	tblptrl,c
 26194  013018  0EEC               	movlw	high __powers_
 26195  01301A  2010               	addwfc	?i2___wmul+1,w,c
 26196  01301C  6EF7               	movwf	tblptrh,c
 26197  01301E                     	if	1	;There are 3 active tblptr bytes
 26198  01301E  6AF8               	clrf	tblptru,c
 26199  013020  0E00               	movlw	low (__mediumconst shr (0+16))
 26200  013022  22F8               	addwfc	tblptru,f,c
 26201  013024                     	endif
 26202  013024  0009               	tblrd		*+
 26203  013026  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26204  01302A  0009               	tblrd		*+
 26205  01302C  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26206  013030  000A               	tblrd		*-
 26207  013032  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26208  013036  EC01  F0A8         	call	i2___ftmul	;wreg free
 26209  01303A  C027  F039         	movff	?i2___ftmul,i2_scale$3895
 26210  01303E  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3895+1
 26211  013042  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3895+2
 26212                           
 26213                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 26214  013046  C039  F027         	movff	i2_scale$3895,i2___ftmul@f1
 26215  01304A  C03A  F028         	movff	i2_scale$3895+1,i2___ftmul@f1+1
 26216  01304E  C03B  F029         	movff	i2_scale$3895+2,i2___ftmul@f1+2
 26217  013052  0E00               	movlw	0
 26218  013054  6E12               	movwf	i2___wmul@multiplicand+1,c
 26219  013056  0E03               	movlw	3
 26220  013058  6E11               	movwf	i2___wmul@multiplicand,c
 26221  01305A  0E00               	movlw	0
 26222  01305C  6E04               	movwf	i2___awmod@divisor+1,c
 26223  01305E  0E0A               	movlw	10
 26224  013060  6E03               	movwf	i2___awmod@divisor,c
 26225  013062  503C               	movf	i2scale@scl,w,c
 26226  013064  6E01               	movwf	i2___awmod@dividend,c
 26227  013066  6A02               	clrf	i2___awmod@dividend+1,c
 26228  013068  BE01               	btfsc	i2___awmod@dividend,7,c
 26229  01306A  0602               	decf	i2___awmod@dividend+1,f,c
 26230  01306C  EC6E  F0B1         	call	i2___awmod	;wreg free
 26231  013070  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26232  013074  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26233  013078  EC28  F0B7         	call	i2___wmul	;wreg free
 26234  01307C  0E87               	movlw	low __powers_
 26235  01307E  240F               	addwf	?i2___wmul,w,c
 26236  013080  6EF6               	movwf	tblptrl,c
 26237  013082  0EEC               	movlw	high __powers_
 26238  013084  2010               	addwfc	?i2___wmul+1,w,c
 26239  013086  6EF7               	movwf	tblptrh,c
 26240  013088                     	if	1	;There are 3 active tblptr bytes
 26241  013088  6AF8               	clrf	tblptru,c
 26242  01308A  0E00               	movlw	low (__mediumconst shr (0+16))
 26243  01308C  22F8               	addwfc	tblptru,f,c
 26244  01308E                     	endif
 26245  01308E  0009               	tblrd		*+
 26246  013090  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26247  013094  0009               	tblrd		*+
 26248  013096  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26249  01309A  000A               	tblrd		*-
 26250  01309C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26251  0130A0  EC01  F0A8         	call	i2___ftmul	;wreg free
 26252  0130A4  C027  F036         	movff	?i2___ftmul,?i2_scale
 26253  0130A8  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26254  0130AC  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26255  0130B0  0012               	return	
 26256  0130B2                     i2l1308:
 26257                           
 26258                           ;doprnt.c: 438: else if(scl > 10)
 26259  0130B2  503C               	movf	i2scale@scl,w,c
 26260  0130B4  0A80               	xorlw	128
 26261  0130B6  0F75               	addlw	-139
 26262  0130B8  A0D8               	btfss	status,0,c
 26263  0130BA  D059               	goto	i2l1310
 26264                           
 26265                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 26266  0130BC  0E00               	movlw	0
 26267  0130BE  6E0A               	movwf	i2___awdiv@divisor+1,c
 26268  0130C0  0E0A               	movlw	10
 26269  0130C2  6E09               	movwf	i2___awdiv@divisor,c
 26270  0130C4  503C               	movf	i2scale@scl,w,c
 26271  0130C6  6E07               	movwf	i2___awdiv@dividend,c
 26272  0130C8  6A08               	clrf	i2___awdiv@dividend+1,c
 26273  0130CA  BE07               	btfsc	i2___awdiv@dividend,7,c
 26274  0130CC  0608               	decf	i2___awdiv@dividend+1,f,c
 26275  0130CE  ECBF  F0AF         	call	i2___awdiv	;wreg free
 26276  0130D2  0E09               	movlw	9
 26277  0130D4  2407               	addwf	?i2___awdiv,w,c
 26278  0130D6  6E0F               	movwf	i2___wmul@multiplier,c
 26279  0130D8  0E00               	movlw	0
 26280  0130DA  2008               	addwfc	?i2___awdiv+1,w,c
 26281  0130DC  6E10               	movwf	i2___wmul@multiplier+1,c
 26282  0130DE  0E00               	movlw	0
 26283  0130E0  6E12               	movwf	i2___wmul@multiplicand+1,c
 26284  0130E2  0E03               	movlw	3
 26285  0130E4  6E11               	movwf	i2___wmul@multiplicand,c
 26286  0130E6  EC28  F0B7         	call	i2___wmul	;wreg free
 26287  0130EA  0E87               	movlw	low __powers_
 26288  0130EC  240F               	addwf	?i2___wmul,w,c
 26289  0130EE  6EF6               	movwf	tblptrl,c
 26290  0130F0  0EEC               	movlw	high __powers_
 26291  0130F2  2010               	addwfc	?i2___wmul+1,w,c
 26292  0130F4  6EF7               	movwf	tblptrh,c
 26293  0130F6                     	if	1	;There are 3 active tblptr bytes
 26294  0130F6  6AF8               	clrf	tblptru,c
 26295  0130F8  0E00               	movlw	low (__mediumconst shr (0+16))
 26296  0130FA  22F8               	addwfc	tblptru,f,c
 26297  0130FC                     	endif
 26298  0130FC  0009               	tblrd		*+
 26299  0130FE  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26300  013102  0009               	tblrd		*+
 26301  013104  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26302  013108  000A               	tblrd		*-
 26303  01310A  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26304  01310E  0E00               	movlw	0
 26305  013110  6E12               	movwf	i2___wmul@multiplicand+1,c
 26306  013112  0E03               	movlw	3
 26307  013114  6E11               	movwf	i2___wmul@multiplicand,c
 26308  013116  0E00               	movlw	0
 26309  013118  6E04               	movwf	i2___awmod@divisor+1,c
 26310  01311A  0E0A               	movlw	10
 26311  01311C  6E03               	movwf	i2___awmod@divisor,c
 26312  01311E  503C               	movf	i2scale@scl,w,c
 26313  013120  6E01               	movwf	i2___awmod@dividend,c
 26314  013122  6A02               	clrf	i2___awmod@dividend+1,c
 26315  013124  BE01               	btfsc	i2___awmod@dividend,7,c
 26316  013126  0602               	decf	i2___awmod@dividend+1,f,c
 26317  013128  EC6E  F0B1         	call	i2___awmod	;wreg free
 26318  01312C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26319  013130  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26320  013134  EC28  F0B7         	call	i2___wmul	;wreg free
 26321  013138  0E87               	movlw	low __powers_
 26322  01313A  240F               	addwf	?i2___wmul,w,c
 26323  01313C  6EF6               	movwf	tblptrl,c
 26324  01313E  0EEC               	movlw	high __powers_
 26325  013140  2010               	addwfc	?i2___wmul+1,w,c
 26326  013142  6EF7               	movwf	tblptrh,c
 26327  013144                     	if	1	;There are 3 active tblptr bytes
 26328  013144  6AF8               	clrf	tblptru,c
 26329  013146  0E00               	movlw	low (__mediumconst shr (0+16))
 26330  013148  22F8               	addwfc	tblptru,f,c
 26331  01314A                     	endif
 26332  01314A  0009               	tblrd		*+
 26333  01314C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26334  013150  0009               	tblrd		*+
 26335  013152  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26336  013156  000A               	tblrd		*-
 26337  013158  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26338  01315C  EC01  F0A8         	call	i2___ftmul	;wreg free
 26339  013160  C027  F036         	movff	?i2___ftmul,?i2_scale
 26340  013164  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 26341  013168  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 26342  01316C  0012               	return	
 26343  01316E                     i2l1310:
 26344                           
 26345                           ;doprnt.c: 440: return _powers_[scl];
 26346  01316E  503C               	movf	i2scale@scl,w,c
 26347  013170  0D03               	mullw	3
 26348  013172  0E87               	movlw	low __powers_
 26349  013174  24F3               	addwf	prodl,w,c
 26350  013176  6EF6               	movwf	tblptrl,c
 26351  013178  0EEC               	movlw	high __powers_
 26352  01317A  20F4               	addwfc	prodh,w,c
 26353  01317C  6EF7               	movwf	tblptrh,c
 26354  01317E                     	if	1	;There are 3 active tblptr bytes
 26355  01317E  6AF8               	clrf	tblptru,c
 26356  013180  0E00               	movlw	low (__mediumconst shr (0+16))
 26357  013182  22F8               	addwfc	tblptru,f,c
 26358  013184                     	endif
 26359  013184  0009               	tblrd		*+
 26360  013186  CFF5 F036          	movff	tablat,?i2_scale
 26361  01318A  0009               	tblrd		*+
 26362  01318C  CFF5 F037          	movff	tablat,?i2_scale+1
 26363  013190  000A               	tblrd		*-
 26364  013192  CFF5 F038          	movff	tablat,?i2_scale+2
 26365  013196  0012               	return	
 26366  013198                     __end_ofi2_scale:
 26367                           	opt stack 0
 26368                           tosu	equ	0xFFF
 26369                           tosh	equ	0xFFE
 26370                           tosl	equ	0xFFD
 26371                           pclatu	equ	0xFFB
 26372                           pclath	equ	0xFFA
 26373                           tblptru	equ	0xFF8
 26374                           tblptrh	equ	0xFF7
 26375                           tblptrl	equ	0xFF6
 26376                           tablat	equ	0xFF5
 26377                           prodh	equ	0xFF4
 26378                           prodl	equ	0xFF3
 26379                           intcon	equ	0xFF2
 26380                           indf0	equ	0xFEF
 26381                           postinc0	equ	0xFEE
 26382                           fsr0h	equ	0xFEA
 26383                           fsr0l	equ	0xFE9
 26384                           wreg	equ	0xFE8
 26385                           indf1	equ	0xFE7
 26386                           postdec1	equ	0xFE5
 26387                           plusw1	equ	0xFE3
 26388                           fsr1h	equ	0xFE2
 26389                           fsr1l	equ	0xFE1
 26390                           bsr	equ	0xFE0
 26391                           indf2	equ	0xFDF
 26392                           postinc2	equ	0xFDE
 26393                           postdec2	equ	0xFDD
 26394                           plusw2	equ	0xFDB
 26395                           fsr2h	equ	0xFDA
 26396                           fsr2l	equ	0xFD9
 26397                           status	equ	0xFD8
 26398                           
 26399 ;; *************** function i2_putch *****************
 26400 ;; Defined at:
 26401 ;;		line 193 in file "mcc_generated_files/eusart2.c"
 26402 ;; Parameters:    Size  Location     Type
 26403 ;;  txData          1    wreg     unsigned char 
 26404 ;; Auto vars:     Size  Location     Type
 26405 ;;  txData          1    1[COMRAM] unsigned char 
 26406 ;; Return value:  Size  Location     Type
 26407 ;;                  1    wreg      void 
 26408 ;; Registers used:
 26409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26410 ;; Tracked objects:
 26411 ;;		On entry : 0/0
 26412 ;;		On exit  : 0/0
 26413 ;;		Unchanged: 0/0
 26414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26419 ;;Total ram usage:        1 bytes
 26420 ;; Hardware stack levels used:    1
 26421 ;; Hardware stack levels required when called:    1
 26422 ;; This function calls:
 26423 ;;		i2_EUSART2_Write
 26424 ;; This function is called by:
 26425 ;;		i2_printf
 26426 ;; This function uses a non-reentrant model
 26427 ;;
 26428                           
 26429                           	psect	text91
 26430  017096                     __ptext91:
 26431                           	opt stack 0
 26432  017096                     i2_putch:
 26433                           	opt stack 14
 26434                           
 26435                           ;incstack = 0
 26436                           ;i2putch@txData stored from wreg
 26437  017096  6E02               	movwf	i2putch@txData,c
 26438                           
 26439                           ;eusart2.c: 195: EUSART2_Write(txData);
 26440  017098  5002               	movf	i2putch@txData,w,c
 26441  01709A  EC7F  F0B4         	call	i2_EUSART2_Write
 26442  01709E  0012               	return		;funcret
 26443  0170A0                     __end_ofi2_putch:
 26444                           	opt stack 0
 26445                           tosu	equ	0xFFF
 26446                           tosh	equ	0xFFE
 26447                           tosl	equ	0xFFD
 26448                           pclatu	equ	0xFFB
 26449                           pclath	equ	0xFFA
 26450                           tblptru	equ	0xFF8
 26451                           tblptrh	equ	0xFF7
 26452                           tblptrl	equ	0xFF6
 26453                           tablat	equ	0xFF5
 26454                           prodh	equ	0xFF4
 26455                           prodl	equ	0xFF3
 26456                           intcon	equ	0xFF2
 26457                           indf0	equ	0xFEF
 26458                           postinc0	equ	0xFEE
 26459                           fsr0h	equ	0xFEA
 26460                           fsr0l	equ	0xFE9
 26461                           wreg	equ	0xFE8
 26462                           indf1	equ	0xFE7
 26463                           postdec1	equ	0xFE5
 26464                           plusw1	equ	0xFE3
 26465                           fsr1h	equ	0xFE2
 26466                           fsr1l	equ	0xFE1
 26467                           bsr	equ	0xFE0
 26468                           indf2	equ	0xFDF
 26469                           postinc2	equ	0xFDE
 26470                           postdec2	equ	0xFDD
 26471                           plusw2	equ	0xFDB
 26472                           fsr2h	equ	0xFDA
 26473                           fsr2l	equ	0xFD9
 26474                           status	equ	0xFD8
 26475                           
 26476 ;; *************** function i2_EUSART2_Write *****************
 26477 ;; Defined at:
 26478 ;;		line 161 in file "mcc_generated_files/eusart2.c"
 26479 ;; Parameters:    Size  Location     Type
 26480 ;;  txData          1    wreg     unsigned char 
 26481 ;; Auto vars:     Size  Location     Type
 26482 ;;  txData          1    0[COMRAM] unsigned char 
 26483 ;; Return value:  Size  Location     Type
 26484 ;;                  1    wreg      void 
 26485 ;; Registers used:
 26486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26487 ;; Tracked objects:
 26488 ;;		On entry : 0/0
 26489 ;;		On exit  : 0/0
 26490 ;;		Unchanged: 0/0
 26491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26492 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26495 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26496 ;;Total ram usage:        1 bytes
 26497 ;; Hardware stack levels used:    1
 26498 ;; This function calls:
 26499 ;;		Nothing
 26500 ;; This function is called by:
 26501 ;;		i2_putch
 26502 ;; This function uses a non-reentrant model
 26503 ;;
 26504                           
 26505                           	psect	text92
 26506  0168FE                     __ptext92:
 26507                           	opt stack 0
 26508  0168FE                     i2_EUSART2_Write:
 26509                           	opt stack 14
 26510                           
 26511                           ;incstack = 0
 26512                           ;i2EUSART2_Write@txData stored from wreg
 26513  0168FE  6E01               	movwf	i2EUSART2_Write@txData,c
 26514                           
 26515                           ;eusart2.c: 163: while(0 == eusart2TxBufferRemaining)
 26516  016900  D002               	goto	i2l376
 26517  016902                     i2l377:
 26518                           
 26519                           ; BSR set to: 1
 26520  016902  0004               	clrwdt		;# 
 26521                           
 26522                           ;eusart2.c: 166: LATFbits.LATF1 = 1;
 26523  016904  827E               	bsf	3966,1,c	;volatile
 26524  016906                     i2l376:
 26525  016906  0101               	movlb	1	; () banked
 26526  016908  51D4               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 26527  01690A  B4D8               	btfsc	status,2,c
 26528  01690C  D7FA               	goto	i2l377
 26529                           
 26530                           ; BSR set to: 1
 26531                           ;eusart2.c: 167: }
 26532                           ;eusart2.c: 169: LATFbits.LATF1 = 0;
 26533  01690E  927E               	bcf	3966,1,c	;volatile
 26534                           
 26535                           ;eusart2.c: 171: if(0 == PIE3bits.TX2IE)
 26536  016910  010E               	movlb	14	; () banked
 26537  016912  BD2C               	btfsc	44,6,b	;volatile
 26538  016914  D003               	goto	i2l379
 26539                           
 26540                           ; BSR set to: 14
 26541                           ;eusart2.c: 172: {
 26542                           ;eusart2.c: 173: TX2REG = txData;
 26543  016916  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 26544                           
 26545                           ;eusart2.c: 174: }
 26546  01691A  D013               	goto	i2l380
 26547  01691C                     i2l379:
 26548                           
 26549                           ; BSR set to: 14
 26550                           ;eusart2.c: 175: else
 26551                           ;eusart2.c: 176: {
 26552                           ;eusart2.c: 177: PIE3bits.TX2IE = 0;
 26553  01691C  9D2C               	bcf	44,6,b	;volatile
 26554                           
 26555                           ; BSR set to: 14
 26556                           ;eusart2.c: 178: eusart2TxBuffer[eusart2TxHead++] = txData;
 26557  01691E  0101               	movlb	1	; () banked
 26558  016920  51D6               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 26559  016922  0D01               	mullw	1
 26560  016924  0E00               	movlw	low _eusart2TxBuffer
 26561  016926  24F3               	addwf	prodl,w,c
 26562  016928  6ED9               	movwf	fsr2l,c
 26563  01692A  0E03               	movlw	high _eusart2TxBuffer
 26564  01692C  20F4               	addwfc	prodh,w,c
 26565  01692E  6EDA               	movwf	fsr2h,c
 26566  016930  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 26567                           
 26568                           ; BSR set to: 1
 26569  016934  2BD6               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 26570                           
 26571                           ; BSR set to: 1
 26572                           ;eusart2.c: 179: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 26573  016936  0E7F               	movlw	127
 26574  016938  65D6               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 26575  01693A  D002               	goto	i2l381
 26576                           
 26577                           ; BSR set to: 1
 26578                           ;eusart2.c: 180: {
 26579                           ;eusart2.c: 181: eusart2TxHead = 0;
 26580  01693C  0E00               	movlw	0
 26581  01693E  6FD6               	movwf	_eusart2TxHead& (0+255),b	;volatile
 26582  016940                     i2l381:
 26583                           
 26584                           ; BSR set to: 1
 26585                           ;eusart2.c: 182: }
 26586                           ;eusart2.c: 183: eusart2TxBufferRemaining--;
 26587                           
 26588                           ; BSR set to: 1
 26589  016940  07D4               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 26590  016942                     i2l380:
 26591                           
 26592                           ;eusart2.c: 184: }
 26593                           ;eusart2.c: 185: PIE3bits.TX2IE = 1;
 26594                           
 26595                           ; BSR set to: 1
 26596  016942  010E               	movlb	14	; () banked
 26597  016944  8D2C               	bsf	44,6,b	;volatile
 26598                           
 26599                           ; BSR set to: 14
 26600  016946  0012               	return		;funcret
 26601  016948                     __end_ofi2_EUSART2_Write:
 26602                           	opt stack 0
 26603                           tosu	equ	0xFFF
 26604                           tosh	equ	0xFFE
 26605                           tosl	equ	0xFFD
 26606                           pclatu	equ	0xFFB
 26607                           pclath	equ	0xFFA
 26608                           tblptru	equ	0xFF8
 26609                           tblptrh	equ	0xFF7
 26610                           tblptrl	equ	0xFF6
 26611                           tablat	equ	0xFF5
 26612                           prodh	equ	0xFF4
 26613                           prodl	equ	0xFF3
 26614                           intcon	equ	0xFF2
 26615                           indf0	equ	0xFEF
 26616                           postinc0	equ	0xFEE
 26617                           fsr0h	equ	0xFEA
 26618                           fsr0l	equ	0xFE9
 26619                           wreg	equ	0xFE8
 26620                           indf1	equ	0xFE7
 26621                           postdec1	equ	0xFE5
 26622                           plusw1	equ	0xFE3
 26623                           fsr1h	equ	0xFE2
 26624                           fsr1l	equ	0xFE1
 26625                           bsr	equ	0xFE0
 26626                           indf2	equ	0xFDF
 26627                           postinc2	equ	0xFDE
 26628                           postdec2	equ	0xFDD
 26629                           plusw2	equ	0xFDB
 26630                           fsr2h	equ	0xFDA
 26631                           fsr2l	equ	0xFD9
 26632                           status	equ	0xFD8
 26633                           
 26634 ;; *************** function i2_isdigit *****************
 26635 ;; Defined at:
 26636 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 26637 ;; Parameters:    Size  Location     Type
 26638 ;;  c               1    wreg     unsigned char 
 26639 ;; Auto vars:     Size  Location     Type
 26640 ;;  c               1    2[COMRAM] unsigned char 
 26641 ;; Return value:  Size  Location     Type
 26642 ;;		None               void
 26643 ;; Registers used:
 26644 ;;		wreg, status,2, status,0
 26645 ;; Tracked objects:
 26646 ;;		On entry : 0/0
 26647 ;;		On exit  : 0/0
 26648 ;;		Unchanged: 0/0
 26649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26650 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26651 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26653 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26654 ;;Total ram usage:        3 bytes
 26655 ;; Hardware stack levels used:    1
 26656 ;; This function calls:
 26657 ;;		Nothing
 26658 ;; This function is called by:
 26659 ;;		i2_printf
 26660 ;; This function uses a non-reentrant model
 26661 ;;
 26662                           
 26663                           	psect	text93
 26664  016F00                     __ptext93:
 26665                           	opt stack 0
 26666  016F00                     i2_isdigit:
 26667                           	opt stack 15
 26668                           
 26669                           ; BSR set to: 14
 26670                           ;incstack = 0
 26671                           ;i2isdigit@c stored from wreg
 26672  016F00  6E03               	movwf	i2isdigit@c,c
 26673  016F02  0E00               	movlw	0
 26674  016F04  6E02               	movwf	i2_isdigit$3018,c
 26675  016F06  0E3A               	movlw	58
 26676  016F08  6003               	cpfslt	i2isdigit@c,c
 26677  016F0A  D005               	goto	i2l1836
 26678  016F0C  0E2F               	movlw	47
 26679  016F0E  6403               	cpfsgt	i2isdigit@c,c
 26680  016F10  D002               	goto	i2l1836
 26681  016F12  0E01               	movlw	1
 26682  016F14  6E02               	movwf	i2_isdigit$3018,c
 26683  016F16                     i2l1836:
 26684  016F16  C002  F001         	movff	i2_isdigit$3018,??i2_isdigit
 26685  016F1A  3001               	rrcf	??i2_isdigit,w,c
 26686  016F1C  0012               	return	
 26687  016F1E                     __end_ofi2_isdigit:
 26688                           	opt stack 0
 26689                           tosu	equ	0xFFF
 26690                           tosh	equ	0xFFE
 26691                           tosl	equ	0xFFD
 26692                           pclatu	equ	0xFFB
 26693                           pclath	equ	0xFFA
 26694                           tblptru	equ	0xFF8
 26695                           tblptrh	equ	0xFF7
 26696                           tblptrl	equ	0xFF6
 26697                           tablat	equ	0xFF5
 26698                           prodh	equ	0xFF4
 26699                           prodl	equ	0xFF3
 26700                           intcon	equ	0xFF2
 26701                           indf0	equ	0xFEF
 26702                           postinc0	equ	0xFEE
 26703                           fsr0h	equ	0xFEA
 26704                           fsr0l	equ	0xFE9
 26705                           wreg	equ	0xFE8
 26706                           indf1	equ	0xFE7
 26707                           postdec1	equ	0xFE5
 26708                           plusw1	equ	0xFE3
 26709                           fsr1h	equ	0xFE2
 26710                           fsr1l	equ	0xFE1
 26711                           bsr	equ	0xFE0
 26712                           indf2	equ	0xFDF
 26713                           postinc2	equ	0xFDE
 26714                           postdec2	equ	0xFDD
 26715                           plusw2	equ	0xFDB
 26716                           fsr2h	equ	0xFDA
 26717                           fsr2l	equ	0xFD9
 26718                           status	equ	0xFD8
 26719                           
 26720 ;; *************** function i2_fround *****************
 26721 ;; Defined at:
 26722 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 26723 ;; Parameters:    Size  Location     Type
 26724 ;;  prec            1    wreg     unsigned char 
 26725 ;; Auto vars:     Size  Location     Type
 26726 ;;  prec            1   62[COMRAM] unsigned char 
 26727 ;; Return value:  Size  Location     Type
 26728 ;;                  3   53[COMRAM] unsigned char 
 26729 ;; Registers used:
 26730 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26731 ;; Tracked objects:
 26732 ;;		On entry : 0/0
 26733 ;;		On exit  : 0/0
 26734 ;;		Unchanged: 0/0
 26735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26736 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26737 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26739 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26740 ;;Total ram usage:       10 bytes
 26741 ;; Hardware stack levels used:    1
 26742 ;; Hardware stack levels required when called:    2
 26743 ;; This function calls:
 26744 ;;		i2___awdiv
 26745 ;;		i2___awmod
 26746 ;;		i2___ftmul
 26747 ;;		i2___wmul
 26748 ;; This function is called by:
 26749 ;;		i2_printf
 26750 ;; This function uses a non-reentrant model
 26751 ;;
 26752                           
 26753                           	psect	text94
 26754  013794                     __ptext94:
 26755                           	opt stack 0
 26756  013794                     i2_fround:
 26757                           	opt stack 13
 26758                           
 26759                           ;incstack = 0
 26760                           ;i2fround@prec stored from wreg
 26761  013794  6E3F               	movwf	i2fround@prec,c
 26762                           
 26763                           ;doprnt.c: 413: if(prec>=110)
 26764  013796  0E6D               	movlw	109
 26765  013798  643F               	cpfsgt	i2fround@prec,c
 26766  01379A  D0A8               	goto	i2l1297
 26767                           
 26768                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 26769  01379C  0E00               	movlw	0
 26770  01379E  6E12               	movwf	i2___wmul@multiplicand+1,c
 26771  0137A0  0E03               	movlw	3
 26772  0137A2  6E11               	movwf	i2___wmul@multiplicand,c
 26773  0137A4  0E00               	movlw	0
 26774  0137A6  6E0A               	movwf	i2___awdiv@divisor+1,c
 26775  0137A8  0E0A               	movlw	10
 26776  0137AA  6E09               	movwf	i2___awdiv@divisor,c
 26777  0137AC  0E00               	movlw	0
 26778  0137AE  6E04               	movwf	i2___awmod@divisor+1,c
 26779  0137B0  0E64               	movlw	100
 26780  0137B2  6E03               	movwf	i2___awmod@divisor,c
 26781  0137B4  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 26782  0137B8  6A02               	clrf	i2___awmod@dividend+1,c
 26783  0137BA  EC6E  F0B1         	call	i2___awmod	;wreg free
 26784  0137BE  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 26785  0137C2  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 26786  0137C6  ECBF  F0AF         	call	i2___awdiv	;wreg free
 26787  0137CA  0E09               	movlw	9
 26788  0137CC  2407               	addwf	?i2___awdiv,w,c
 26789  0137CE  6E0F               	movwf	i2___wmul@multiplier,c
 26790  0137D0  0E00               	movlw	0
 26791  0137D2  2008               	addwfc	?i2___awdiv+1,w,c
 26792  0137D4  6E10               	movwf	i2___wmul@multiplier+1,c
 26793  0137D6  EC28  F0B7         	call	i2___wmul	;wreg free
 26794  0137DA  0EAE               	movlw	low __npowers_
 26795  0137DC  240F               	addwf	?i2___wmul,w,c
 26796  0137DE  6EF6               	movwf	tblptrl,c
 26797  0137E0  0EEC               	movlw	high __npowers_
 26798  0137E2  2010               	addwfc	?i2___wmul+1,w,c
 26799  0137E4  6EF7               	movwf	tblptrh,c
 26800  0137E6                     	if	1	;There are 3 active tblptr bytes
 26801  0137E6  6AF8               	clrf	tblptru,c
 26802  0137E8  0E00               	movlw	low (__mediumconst shr (0+16))
 26803  0137EA  22F8               	addwfc	tblptru,f,c
 26804  0137EC                     	endif
 26805  0137EC  0009               	tblrd		*+
 26806  0137EE  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26807  0137F2  0009               	tblrd		*+
 26808  0137F4  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26809  0137F8  000A               	tblrd		*-
 26810  0137FA  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26811  0137FE  0E00               	movlw	0
 26812  013800  6E0A               	movwf	i2___awdiv@divisor+1,c
 26813  013802  0E64               	movlw	100
 26814  013804  6E09               	movwf	i2___awdiv@divisor,c
 26815  013806  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 26816  01380A  6A08               	clrf	i2___awdiv@dividend+1,c
 26817  01380C  ECBF  F0AF         	call	i2___awdiv	;wreg free
 26818  013810  0E12               	movlw	18
 26819  013812  2407               	addwf	?i2___awdiv,w,c
 26820  013814  6E0F               	movwf	i2___wmul@multiplier,c
 26821  013816  0E00               	movlw	0
 26822  013818  2008               	addwfc	?i2___awdiv+1,w,c
 26823  01381A  6E10               	movwf	i2___wmul@multiplier+1,c
 26824  01381C  0E00               	movlw	0
 26825  01381E  6E12               	movwf	i2___wmul@multiplicand+1,c
 26826  013820  0E03               	movlw	3
 26827  013822  6E11               	movwf	i2___wmul@multiplicand,c
 26828  013824  EC28  F0B7         	call	i2___wmul	;wreg free
 26829  013828  0EAE               	movlw	low __npowers_
 26830  01382A  240F               	addwf	?i2___wmul,w,c
 26831  01382C  6EF6               	movwf	tblptrl,c
 26832  01382E  0EEC               	movlw	high __npowers_
 26833  013830  2010               	addwfc	?i2___wmul+1,w,c
 26834  013832  6EF7               	movwf	tblptrh,c
 26835  013834                     	if	1	;There are 3 active tblptr bytes
 26836  013834  6AF8               	clrf	tblptru,c
 26837  013836  0E00               	movlw	low (__mediumconst shr (0+16))
 26838  013838  22F8               	addwfc	tblptru,f,c
 26839  01383A                     	endif
 26840  01383A  0009               	tblrd		*+
 26841  01383C  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26842  013840  0009               	tblrd		*+
 26843  013842  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26844  013846  000A               	tblrd		*-
 26845  013848  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26846  01384C  EC01  F0A8         	call	i2___ftmul	;wreg free
 26847  013850  C027  F03C         	movff	?i2___ftmul,i2_fround$3893
 26848  013854  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3893+1
 26849  013858  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3893+2
 26850                           
 26851                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 26852  01385C  0E00               	movlw	0
 26853  01385E  6E12               	movwf	i2___wmul@multiplicand+1,c
 26854  013860  0E03               	movlw	3
 26855  013862  6E11               	movwf	i2___wmul@multiplicand,c
 26856  013864  0E00               	movlw	0
 26857  013866  6E04               	movwf	i2___awmod@divisor+1,c
 26858  013868  0E0A               	movlw	10
 26859  01386A  6E03               	movwf	i2___awmod@divisor,c
 26860  01386C  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 26861  013870  6A02               	clrf	i2___awmod@dividend+1,c
 26862  013872  EC6E  F0B1         	call	i2___awmod	;wreg free
 26863  013876  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26864  01387A  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26865  01387E  EC28  F0B7         	call	i2___wmul	;wreg free
 26866  013882  0EAE               	movlw	low __npowers_
 26867  013884  240F               	addwf	?i2___wmul,w,c
 26868  013886  6EF6               	movwf	tblptrl,c
 26869  013888  0EEC               	movlw	high __npowers_
 26870  01388A  2010               	addwfc	?i2___wmul+1,w,c
 26871  01388C  6EF7               	movwf	tblptrh,c
 26872  01388E                     	if	1	;There are 3 active tblptr bytes
 26873  01388E  6AF8               	clrf	tblptru,c
 26874  013890  0E00               	movlw	low (__mediumconst shr (0+16))
 26875  013892  22F8               	addwfc	tblptru,f,c
 26876  013894                     	endif
 26877  013894  0009               	tblrd		*+
 26878  013896  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26879  01389A  0009               	tblrd		*+
 26880  01389C  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26881  0138A0  000A               	tblrd		*-
 26882  0138A2  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26883  0138A6  C03C  F027         	movff	i2_fround$3893,i2___ftmul@f1
 26884  0138AA  C03D  F028         	movff	i2_fround$3893+1,i2___ftmul@f1+1
 26885  0138AE  C03E  F029         	movff	i2_fround$3893+2,i2___ftmul@f1+2
 26886  0138B2  EC01  F0A8         	call	i2___ftmul	;wreg free
 26887  0138B6  C027  F039         	movff	?i2___ftmul,i2_fround$3894
 26888  0138BA  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3894+1
 26889  0138BE  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3894+2
 26890                           
 26891                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 26892  0138C2  C039  F027         	movff	i2_fround$3894,i2___ftmul@f1
 26893  0138C6  C03A  F028         	movff	i2_fround$3894+1,i2___ftmul@f1+1
 26894  0138CA  C03B  F029         	movff	i2_fround$3894+2,i2___ftmul@f1+2
 26895  0138CE  0E00               	movlw	0
 26896  0138D0  6E2A               	movwf	i2___ftmul@f2,c
 26897  0138D2  0E00               	movlw	0
 26898  0138D4  6E2B               	movwf	i2___ftmul@f2+1,c
 26899  0138D6  0E3F               	movlw	63
 26900  0138D8  6E2C               	movwf	i2___ftmul@f2+2,c
 26901  0138DA  EC01  F0A8         	call	i2___ftmul	;wreg free
 26902  0138DE  C027  F036         	movff	?i2___ftmul,?i2_fround
 26903  0138E2  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 26904  0138E6  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 26905  0138EA  0012               	return	
 26906  0138EC                     i2l1297:
 26907                           
 26908                           ;doprnt.c: 415: else if(prec > 10)
 26909  0138EC  0E0A               	movlw	10
 26910  0138EE  643F               	cpfsgt	i2fround@prec,c
 26911  0138F0  D069               	goto	i2l1300
 26912                           
 26913                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 26914  0138F2  0E00               	movlw	0
 26915  0138F4  6E12               	movwf	i2___wmul@multiplicand+1,c
 26916  0138F6  0E03               	movlw	3
 26917  0138F8  6E11               	movwf	i2___wmul@multiplicand,c
 26918  0138FA  0E00               	movlw	0
 26919  0138FC  6E04               	movwf	i2___awmod@divisor+1,c
 26920  0138FE  0E0A               	movlw	10
 26921  013900  6E03               	movwf	i2___awmod@divisor,c
 26922  013902  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 26923  013906  6A02               	clrf	i2___awmod@dividend+1,c
 26924  013908  EC6E  F0B1         	call	i2___awmod	;wreg free
 26925  01390C  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 26926  013910  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 26927  013914  EC28  F0B7         	call	i2___wmul	;wreg free
 26928  013918  0EAE               	movlw	low __npowers_
 26929  01391A  240F               	addwf	?i2___wmul,w,c
 26930  01391C  6EF6               	movwf	tblptrl,c
 26931  01391E  0EEC               	movlw	high __npowers_
 26932  013920  2010               	addwfc	?i2___wmul+1,w,c
 26933  013922  6EF7               	movwf	tblptrh,c
 26934  013924                     	if	1	;There are 3 active tblptr bytes
 26935  013924  6AF8               	clrf	tblptru,c
 26936  013926  0E00               	movlw	low (__mediumconst shr (0+16))
 26937  013928  22F8               	addwfc	tblptru,f,c
 26938  01392A                     	endif
 26939  01392A  0009               	tblrd		*+
 26940  01392C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 26941  013930  0009               	tblrd		*+
 26942  013932  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 26943  013936  000A               	tblrd		*-
 26944  013938  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 26945  01393C  0E00               	movlw	0
 26946  01393E  6E0A               	movwf	i2___awdiv@divisor+1,c
 26947  013940  0E0A               	movlw	10
 26948  013942  6E09               	movwf	i2___awdiv@divisor,c
 26949  013944  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 26950  013948  6A08               	clrf	i2___awdiv@dividend+1,c
 26951  01394A  ECBF  F0AF         	call	i2___awdiv	;wreg free
 26952  01394E  0E09               	movlw	9
 26953  013950  2407               	addwf	?i2___awdiv,w,c
 26954  013952  6E0F               	movwf	i2___wmul@multiplier,c
 26955  013954  0E00               	movlw	0
 26956  013956  2008               	addwfc	?i2___awdiv+1,w,c
 26957  013958  6E10               	movwf	i2___wmul@multiplier+1,c
 26958  01395A  0E00               	movlw	0
 26959  01395C  6E12               	movwf	i2___wmul@multiplicand+1,c
 26960  01395E  0E03               	movlw	3
 26961  013960  6E11               	movwf	i2___wmul@multiplicand,c
 26962  013962  EC28  F0B7         	call	i2___wmul	;wreg free
 26963  013966  0EAE               	movlw	low __npowers_
 26964  013968  240F               	addwf	?i2___wmul,w,c
 26965  01396A  6EF6               	movwf	tblptrl,c
 26966  01396C  0EEC               	movlw	high __npowers_
 26967  01396E  2010               	addwfc	?i2___wmul+1,w,c
 26968  013970  6EF7               	movwf	tblptrh,c
 26969  013972                     	if	1	;There are 3 active tblptr bytes
 26970  013972  6AF8               	clrf	tblptru,c
 26971  013974  0E00               	movlw	low (__mediumconst shr (0+16))
 26972  013976  22F8               	addwfc	tblptru,f,c
 26973  013978                     	endif
 26974  013978  0009               	tblrd		*+
 26975  01397A  CFF5 F027          	movff	tablat,i2___ftmul@f1
 26976  01397E  0009               	tblrd		*+
 26977  013980  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 26978  013984  000A               	tblrd		*-
 26979  013986  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 26980  01398A  EC01  F0A8         	call	i2___ftmul	;wreg free
 26981  01398E  C027  F03C         	movff	?i2___ftmul,i2_fround$3893
 26982  013992  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3893+1
 26983  013996  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3893+2
 26984                           
 26985                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 26986  01399A  C03C  F027         	movff	i2_fround$3893,i2___ftmul@f1
 26987  01399E  C03D  F028         	movff	i2_fround$3893+1,i2___ftmul@f1+1
 26988  0139A2  C03E  F029         	movff	i2_fround$3893+2,i2___ftmul@f1+2
 26989  0139A6  0E00               	movlw	0
 26990  0139A8  6E2A               	movwf	i2___ftmul@f2,c
 26991  0139AA  0E00               	movlw	0
 26992  0139AC  6E2B               	movwf	i2___ftmul@f2+1,c
 26993  0139AE  0E3F               	movlw	63
 26994  0139B0  6E2C               	movwf	i2___ftmul@f2+2,c
 26995  0139B2  EC01  F0A8         	call	i2___ftmul	;wreg free
 26996  0139B6  C027  F036         	movff	?i2___ftmul,?i2_fround
 26997  0139BA  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 26998  0139BE  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 26999  0139C2  0012               	return	
 27000  0139C4                     i2l1300:
 27001                           
 27002                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 27003  0139C4  503F               	movf	i2fround@prec,w,c
 27004  0139C6  0D03               	mullw	3
 27005  0139C8  0EAE               	movlw	low __npowers_
 27006  0139CA  24F3               	addwf	prodl,w,c
 27007  0139CC  6EF6               	movwf	tblptrl,c
 27008  0139CE  0EEC               	movlw	high __npowers_
 27009  0139D0  20F4               	addwfc	prodh,w,c
 27010  0139D2  6EF7               	movwf	tblptrh,c
 27011  0139D4                     	if	1	;There are 3 active tblptr bytes
 27012  0139D4  6AF8               	clrf	tblptru,c
 27013  0139D6  0E00               	movlw	low (__mediumconst shr (0+16))
 27014  0139D8  22F8               	addwfc	tblptru,f,c
 27015  0139DA                     	endif
 27016  0139DA  0009               	tblrd		*+
 27017  0139DC  CFF5 F027          	movff	tablat,i2___ftmul@f1
 27018  0139E0  0009               	tblrd		*+
 27019  0139E2  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 27020  0139E6  000A               	tblrd		*-
 27021  0139E8  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 27022  0139EC  0E00               	movlw	0
 27023  0139EE  6E2A               	movwf	i2___ftmul@f2,c
 27024  0139F0  0E00               	movlw	0
 27025  0139F2  6E2B               	movwf	i2___ftmul@f2+1,c
 27026  0139F4  0E3F               	movlw	63
 27027  0139F6  6E2C               	movwf	i2___ftmul@f2+2,c
 27028  0139F8  EC01  F0A8         	call	i2___ftmul	;wreg free
 27029  0139FC  C027  F036         	movff	?i2___ftmul,?i2_fround
 27030  013A00  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 27031  013A04  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 27032  013A08  0012               	return	
 27033  013A0A                     __end_ofi2_fround:
 27034                           	opt stack 0
 27035                           tosu	equ	0xFFF
 27036                           tosh	equ	0xFFE
 27037                           tosl	equ	0xFFD
 27038                           pclatu	equ	0xFFB
 27039                           pclath	equ	0xFFA
 27040                           tblptru	equ	0xFF8
 27041                           tblptrh	equ	0xFF7
 27042                           tblptrl	equ	0xFF6
 27043                           tablat	equ	0xFF5
 27044                           prodh	equ	0xFF4
 27045                           prodl	equ	0xFF3
 27046                           intcon	equ	0xFF2
 27047                           indf0	equ	0xFEF
 27048                           postinc0	equ	0xFEE
 27049                           fsr0h	equ	0xFEA
 27050                           fsr0l	equ	0xFE9
 27051                           wreg	equ	0xFE8
 27052                           indf1	equ	0xFE7
 27053                           postdec1	equ	0xFE5
 27054                           plusw1	equ	0xFE3
 27055                           fsr1h	equ	0xFE2
 27056                           fsr1l	equ	0xFE1
 27057                           bsr	equ	0xFE0
 27058                           indf2	equ	0xFDF
 27059                           postinc2	equ	0xFDE
 27060                           postdec2	equ	0xFDD
 27061                           plusw2	equ	0xFDB
 27062                           fsr2h	equ	0xFDA
 27063                           fsr2l	equ	0xFD9
 27064                           status	equ	0xFD8
 27065                           
 27066 ;; *************** function i2___awmod *****************
 27067 ;; Defined at:
 27068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 27069 ;; Parameters:    Size  Location     Type
 27070 ;;  dividend        2    0[COMRAM] int 
 27071 ;;  divisor         2    2[COMRAM] int 
 27072 ;; Auto vars:     Size  Location     Type
 27073 ;;  __awmod         1    5[COMRAM] unsigned char 
 27074 ;;  __awmod         1    4[COMRAM] unsigned char 
 27075 ;; Return value:  Size  Location     Type
 27076 ;;                  2    0[COMRAM] int 
 27077 ;; Registers used:
 27078 ;;		wreg, status,2, status,0
 27079 ;; Tracked objects:
 27080 ;;		On entry : 0/0
 27081 ;;		On exit  : 0/0
 27082 ;;		Unchanged: 0/0
 27083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27087 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27088 ;;Total ram usage:        6 bytes
 27089 ;; Hardware stack levels used:    1
 27090 ;; This function calls:
 27091 ;;		Nothing
 27092 ;; This function is called by:
 27093 ;;		i2_fround
 27094 ;;		i2_scale
 27095 ;; This function uses a non-reentrant model
 27096 ;;
 27097                           
 27098                           	psect	text95
 27099  0162DC                     __ptext95:
 27100                           	opt stack 0
 27101  0162DC                     i2___awmod:
 27102                           	opt stack 14
 27103                           
 27104                           ;incstack = 0
 27105  0162DC  0E00               	movlw	0
 27106  0162DE  6E06               	movwf	i2___awmod@sign,c
 27107  0162E0  AE02               	btfss	i2___awmod@dividend+1,7,c
 27108  0162E2  D006               	goto	i2l1641
 27109  0162E4  6C01               	negf	i2___awmod@dividend,c
 27110  0162E6  1E02               	comf	i2___awmod@dividend+1,f,c
 27111  0162E8  B0D8               	btfsc	status,0,c
 27112  0162EA  2A02               	incf	i2___awmod@dividend+1,f,c
 27113  0162EC  0E01               	movlw	1
 27114  0162EE  6E06               	movwf	i2___awmod@sign,c
 27115  0162F0                     i2l1641:
 27116  0162F0  AE04               	btfss	i2___awmod@divisor+1,7,c
 27117  0162F2  D004               	goto	i2l1642
 27118  0162F4  6C03               	negf	i2___awmod@divisor,c
 27119  0162F6  1E04               	comf	i2___awmod@divisor+1,f,c
 27120  0162F8  B0D8               	btfsc	status,0,c
 27121  0162FA  2A04               	incf	i2___awmod@divisor+1,f,c
 27122  0162FC                     i2l1642:
 27123  0162FC  5003               	movf	i2___awmod@divisor,w,c
 27124  0162FE  1004               	iorwf	i2___awmod@divisor+1,w,c
 27125  016300  B4D8               	btfsc	status,2,c
 27126  016302  D018               	goto	i2l1649
 27127  016304  0E01               	movlw	1
 27128  016306  6E05               	movwf	i2___awmod@counter,c
 27129  016308  D004               	goto	i2l1644
 27130  01630A  90D8               	bcf	status,0,c
 27131  01630C  3603               	rlcf	i2___awmod@divisor,f,c
 27132  01630E  3604               	rlcf	i2___awmod@divisor+1,f,c
 27133  016310  2A05               	incf	i2___awmod@counter,f,c
 27134  016312                     i2l1644:
 27135  016312  AE04               	btfss	i2___awmod@divisor+1,7,c
 27136  016314  D7FA               	goto	i2l1645
 27137  016316                     i2u1337_40:
 27138  016316  5003               	movf	i2___awmod@divisor,w,c
 27139  016318  5C01               	subwf	i2___awmod@dividend,w,c
 27140  01631A  5004               	movf	i2___awmod@divisor+1,w,c
 27141  01631C  5802               	subwfb	i2___awmod@dividend+1,w,c
 27142  01631E  A0D8               	btfss	status,0,c
 27143  016320  D004               	goto	i2l1648
 27144  016322  5003               	movf	i2___awmod@divisor,w,c
 27145  016324  5E01               	subwf	i2___awmod@dividend,f,c
 27146  016326  5004               	movf	i2___awmod@divisor+1,w,c
 27147  016328  5A02               	subwfb	i2___awmod@dividend+1,f,c
 27148  01632A                     i2l1648:
 27149  01632A  90D8               	bcf	status,0,c
 27150  01632C  3204               	rrcf	i2___awmod@divisor+1,f,c
 27151  01632E  3203               	rrcf	i2___awmod@divisor,f,c
 27152  016330  2E05               	decfsz	i2___awmod@counter,f,c
 27153  016332  D7F1               	goto	i2u1337_40
 27154  016334                     i2l1649:
 27155  016334  5006               	movf	i2___awmod@sign,w,c
 27156  016336  B4D8               	btfsc	status,2,c
 27157  016338  D004               	goto	i2l1650
 27158  01633A  6C01               	negf	i2___awmod@dividend,c
 27159  01633C  1E02               	comf	i2___awmod@dividend+1,f,c
 27160  01633E  B0D8               	btfsc	status,0,c
 27161  016340  2A02               	incf	i2___awmod@dividend+1,f,c
 27162  016342                     i2l1650:
 27163  016342  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 27164  016346  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 27165  01634A  0012               	return	
 27166  01634C                     __end_ofi2___awmod:
 27167                           	opt stack 0
 27168                           tosu	equ	0xFFF
 27169                           tosh	equ	0xFFE
 27170                           tosl	equ	0xFFD
 27171                           pclatu	equ	0xFFB
 27172                           pclath	equ	0xFFA
 27173                           tblptru	equ	0xFF8
 27174                           tblptrh	equ	0xFF7
 27175                           tblptrl	equ	0xFF6
 27176                           tablat	equ	0xFF5
 27177                           prodh	equ	0xFF4
 27178                           prodl	equ	0xFF3
 27179                           intcon	equ	0xFF2
 27180                           indf0	equ	0xFEF
 27181                           postinc0	equ	0xFEE
 27182                           fsr0h	equ	0xFEA
 27183                           fsr0l	equ	0xFE9
 27184                           wreg	equ	0xFE8
 27185                           indf1	equ	0xFE7
 27186                           postdec1	equ	0xFE5
 27187                           plusw1	equ	0xFE3
 27188                           fsr1h	equ	0xFE2
 27189                           fsr1l	equ	0xFE1
 27190                           bsr	equ	0xFE0
 27191                           indf2	equ	0xFDF
 27192                           postinc2	equ	0xFDE
 27193                           postdec2	equ	0xFDD
 27194                           plusw2	equ	0xFDB
 27195                           fsr2h	equ	0xFDA
 27196                           fsr2l	equ	0xFD9
 27197                           status	equ	0xFD8
 27198                           
 27199 ;; *************** function i2___awdiv *****************
 27200 ;; Defined at:
 27201 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 27202 ;; Parameters:    Size  Location     Type
 27203 ;;  dividend        2    6[COMRAM] int 
 27204 ;;  divisor         2    8[COMRAM] int 
 27205 ;; Auto vars:     Size  Location     Type
 27206 ;;  __awdiv         2   12[COMRAM] int 
 27207 ;;  __awdiv         1   11[COMRAM] unsigned char 
 27208 ;;  __awdiv         1   10[COMRAM] unsigned char 
 27209 ;; Return value:  Size  Location     Type
 27210 ;;                  2    6[COMRAM] int 
 27211 ;; Registers used:
 27212 ;;		wreg, status,2, status,0
 27213 ;; Tracked objects:
 27214 ;;		On entry : 0/0
 27215 ;;		On exit  : 0/0
 27216 ;;		Unchanged: 0/0
 27217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27218 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27219 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27221 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27222 ;;Total ram usage:        8 bytes
 27223 ;; Hardware stack levels used:    1
 27224 ;; This function calls:
 27225 ;;		Nothing
 27226 ;; This function is called by:
 27227 ;;		i2_fround
 27228 ;;		i2_scale
 27229 ;;		i2_printf
 27230 ;; This function uses a non-reentrant model
 27231 ;;
 27232                           
 27233                           	psect	text96
 27234  015F7E                     __ptext96:
 27235                           	opt stack 0
 27236  015F7E                     i2___awdiv:
 27237                           	opt stack 14
 27238                           
 27239                           ;incstack = 0
 27240  015F7E  0E00               	movlw	0
 27241  015F80  6E0C               	movwf	i2___awdiv@sign,c
 27242  015F82  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27243  015F84  D006               	goto	i2l1628
 27244  015F86  6C09               	negf	i2___awdiv@divisor,c
 27245  015F88  1E0A               	comf	i2___awdiv@divisor+1,f,c
 27246  015F8A  B0D8               	btfsc	status,0,c
 27247  015F8C  2A0A               	incf	i2___awdiv@divisor+1,f,c
 27248  015F8E  0E01               	movlw	1
 27249  015F90  6E0C               	movwf	i2___awdiv@sign,c
 27250  015F92                     i2l1628:
 27251  015F92  AE08               	btfss	i2___awdiv@dividend+1,7,c
 27252  015F94  D006               	goto	i2l1629
 27253  015F96  6C07               	negf	i2___awdiv@dividend,c
 27254  015F98  1E08               	comf	i2___awdiv@dividend+1,f,c
 27255  015F9A  B0D8               	btfsc	status,0,c
 27256  015F9C  2A08               	incf	i2___awdiv@dividend+1,f,c
 27257  015F9E  0E01               	movlw	1
 27258  015FA0  1A0C               	xorwf	i2___awdiv@sign,f,c
 27259  015FA2                     i2l1629:
 27260  015FA2  0E00               	movlw	0
 27261  015FA4  6E0E               	movwf	i2___awdiv@quotient+1,c
 27262  015FA6  0E00               	movlw	0
 27263  015FA8  6E0D               	movwf	i2___awdiv@quotient,c
 27264  015FAA  5009               	movf	i2___awdiv@divisor,w,c
 27265  015FAC  100A               	iorwf	i2___awdiv@divisor+1,w,c
 27266  015FAE  B4D8               	btfsc	status,2,c
 27267  015FB0  D01C               	goto	i2l1636
 27268  015FB2  0E01               	movlw	1
 27269  015FB4  6E0B               	movwf	i2___awdiv@counter,c
 27270  015FB6  D004               	goto	i2l1631
 27271  015FB8  90D8               	bcf	status,0,c
 27272  015FBA  3609               	rlcf	i2___awdiv@divisor,f,c
 27273  015FBC  360A               	rlcf	i2___awdiv@divisor+1,f,c
 27274  015FBE  2A0B               	incf	i2___awdiv@counter,f,c
 27275  015FC0                     i2l1631:
 27276  015FC0  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 27277  015FC2  D7FA               	goto	i2l1632
 27278  015FC4                     i2u1331_40:
 27279  015FC4  90D8               	bcf	status,0,c
 27280  015FC6  360D               	rlcf	i2___awdiv@quotient,f,c
 27281  015FC8  360E               	rlcf	i2___awdiv@quotient+1,f,c
 27282  015FCA  5009               	movf	i2___awdiv@divisor,w,c
 27283  015FCC  5C07               	subwf	i2___awdiv@dividend,w,c
 27284  015FCE  500A               	movf	i2___awdiv@divisor+1,w,c
 27285  015FD0  5808               	subwfb	i2___awdiv@dividend+1,w,c
 27286  015FD2  A0D8               	btfss	status,0,c
 27287  015FD4  D005               	goto	i2l1635
 27288  015FD6  5009               	movf	i2___awdiv@divisor,w,c
 27289  015FD8  5E07               	subwf	i2___awdiv@dividend,f,c
 27290  015FDA  500A               	movf	i2___awdiv@divisor+1,w,c
 27291  015FDC  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 27292  015FDE  800D               	bsf	i2___awdiv@quotient,0,c
 27293  015FE0                     i2l1635:
 27294  015FE0  90D8               	bcf	status,0,c
 27295  015FE2  320A               	rrcf	i2___awdiv@divisor+1,f,c
 27296  015FE4  3209               	rrcf	i2___awdiv@divisor,f,c
 27297  015FE6  2E0B               	decfsz	i2___awdiv@counter,f,c
 27298  015FE8  D7ED               	goto	i2u1331_40
 27299  015FEA                     i2l1636:
 27300  015FEA  500C               	movf	i2___awdiv@sign,w,c
 27301  015FEC  B4D8               	btfsc	status,2,c
 27302  015FEE  D004               	goto	i2l1637
 27303  015FF0  6C0D               	negf	i2___awdiv@quotient,c
 27304  015FF2  1E0E               	comf	i2___awdiv@quotient+1,f,c
 27305  015FF4  B0D8               	btfsc	status,0,c
 27306  015FF6  2A0E               	incf	i2___awdiv@quotient+1,f,c
 27307  015FF8                     i2l1637:
 27308  015FF8  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 27309  015FFC  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 27310  016000  0012               	return	
 27311  016002                     __end_ofi2___awdiv:
 27312                           	opt stack 0
 27313                           tosu	equ	0xFFF
 27314                           tosh	equ	0xFFE
 27315                           tosl	equ	0xFFD
 27316                           pclatu	equ	0xFFB
 27317                           pclath	equ	0xFFA
 27318                           tblptru	equ	0xFF8
 27319                           tblptrh	equ	0xFF7
 27320                           tblptrl	equ	0xFF6
 27321                           tablat	equ	0xFF5
 27322                           prodh	equ	0xFF4
 27323                           prodl	equ	0xFF3
 27324                           intcon	equ	0xFF2
 27325                           indf0	equ	0xFEF
 27326                           postinc0	equ	0xFEE
 27327                           fsr0h	equ	0xFEA
 27328                           fsr0l	equ	0xFE9
 27329                           wreg	equ	0xFE8
 27330                           indf1	equ	0xFE7
 27331                           postdec1	equ	0xFE5
 27332                           plusw1	equ	0xFE3
 27333                           fsr1h	equ	0xFE2
 27334                           fsr1l	equ	0xFE1
 27335                           bsr	equ	0xFE0
 27336                           indf2	equ	0xFDF
 27337                           postinc2	equ	0xFDE
 27338                           postdec2	equ	0xFDD
 27339                           plusw2	equ	0xFDB
 27340                           fsr2h	equ	0xFDA
 27341                           fsr2l	equ	0xFD9
 27342                           status	equ	0xFD8
 27343                           
 27344 ;; *************** function i2__tdiv_to_l_ *****************
 27345 ;; Defined at:
 27346 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 27347 ;; Parameters:    Size  Location     Type
 27348 ;;  f1              3    0[COMRAM] float 
 27349 ;;  f2              3    3[COMRAM] float 
 27350 ;; Auto vars:     Size  Location     Type
 27351 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 27352 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 27353 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 27354 ;; Return value:  Size  Location     Type
 27355 ;;                  4    0[COMRAM] unsigned long 
 27356 ;; Registers used:
 27357 ;;		wreg, status,2, status,0
 27358 ;; Tracked objects:
 27359 ;;		On entry : 0/0
 27360 ;;		On exit  : 0/0
 27361 ;;		Unchanged: 0/0
 27362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27364 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27365 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27366 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27367 ;;Total ram usage:       15 bytes
 27368 ;; Hardware stack levels used:    1
 27369 ;; This function calls:
 27370 ;;		Nothing
 27371 ;; This function is called by:
 27372 ;;		i2_printf
 27373 ;; This function uses a non-reentrant model
 27374 ;;
 27375                           
 27376                           	psect	text97
 27377  014880                     __ptext97:
 27378                           	opt stack 0
 27379  014880                     i2__tdiv_to_l_:
 27380                           	opt stack 15
 27381                           
 27382                           ;incstack = 0
 27383  014880  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 27384  014884  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 27385  014886  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 27386  014888  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 27387  01488A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 27388  01488C  E301               	bnc	u1428_41
 27389  01488E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 27390  014890                     u1428_41:
 27391  014890  5007               	movf	??i2__tdiv_to_l_,w,c
 27392  014892  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 27393  014894  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27394  014896  A4D8               	btfss	status,2,c
 27395  014898  D009               	goto	i2l1776
 27396  01489A  0E00               	movlw	0
 27397  01489C  6E01               	movwf	?i2__tdiv_to_l_,c
 27398  01489E  0E00               	movlw	0
 27399  0148A0  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27400  0148A2  0E00               	movlw	0
 27401  0148A4  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27402  0148A6  0E00               	movlw	0
 27403  0148A8  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27404  0148AA  0012               	return	
 27405  0148AC                     i2l1776:
 27406  0148AC  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 27407  0148B0  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 27408  0148B2  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 27409  0148B4  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 27410  0148B6  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 27411  0148B8  E301               	bnc	u1430_41
 27412  0148BA  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 27413  0148BC                     u1430_41:
 27414  0148BC  5007               	movf	??i2__tdiv_to_l_,w,c
 27415  0148BE  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 27416  0148C0  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 27417  0148C2  A4D8               	btfss	status,2,c
 27418  0148C4  D009               	goto	i2l1778
 27419  0148C6  0E00               	movlw	0
 27420  0148C8  6E01               	movwf	?i2__tdiv_to_l_,c
 27421  0148CA  0E00               	movlw	0
 27422  0148CC  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27423  0148CE  0E00               	movlw	0
 27424  0148D0  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27425  0148D2  0E00               	movlw	0
 27426  0148D4  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27427  0148D6  0012               	return	
 27428  0148D8                     i2l1778:
 27429  0148D8  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 27430  0148DA  0EFF               	movlw	255
 27431  0148DC  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 27432  0148DE  0EFF               	movlw	255
 27433  0148E0  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 27434  0148E2  0E00               	movlw	0
 27435  0148E4  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 27436  0148E6  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 27437  0148E8  0EFF               	movlw	255
 27438  0148EA  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 27439  0148EC  0EFF               	movlw	255
 27440  0148EE  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 27441  0148F0  0E00               	movlw	0
 27442  0148F2  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 27443  0148F4  0E00               	movlw	0
 27444  0148F6  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 27445  0148F8  0E00               	movlw	0
 27446  0148FA  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 27447  0148FC  0E00               	movlw	0
 27448  0148FE  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 27449  014900  0E00               	movlw	0
 27450  014902  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 27451  014904  0E7F               	movlw	127
 27452  014906  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 27453  014908  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 27454  01490A  0F98               	addlw	152
 27455  01490C  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 27456  01490E  0E18               	movlw	24
 27457  014910  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 27458  014912                     i2l1779:
 27459  014912  90D8               	bcf	status,0,c
 27460  014914  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 27461  014916  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 27462  014918  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 27463  01491A  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 27464  01491C  5004               	movf	i2__tdiv_to_l_@f2,w,c
 27465  01491E  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 27466  014920  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 27467  014922  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 27468  014924  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 27469  014926  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 27470  014928  A0D8               	btfss	status,0,c
 27471  01492A  D007               	goto	i2l1780
 27472  01492C  5004               	movf	i2__tdiv_to_l_@f2,w,c
 27473  01492E  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 27474  014930  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 27475  014932  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 27476  014934  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 27477  014936  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 27478  014938  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 27479  01493A                     i2l1780:
 27480  01493A  90D8               	bcf	status,0,c
 27481  01493C  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 27482  01493E  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 27483  014940  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 27484  014942  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 27485  014944  D7E6               	goto	i2l1779
 27486  014946  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 27487  014948  D016               	goto	i2l1782
 27488  01494A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27489  01494C  0A80               	xorlw	128
 27490  01494E  0F97               	addlw	151
 27491  014950  B0D8               	btfsc	status,0,c
 27492  014952  D009               	goto	i2l1783
 27493  014954  0E00               	movlw	0
 27494  014956  6E01               	movwf	?i2__tdiv_to_l_,c
 27495  014958  0E00               	movlw	0
 27496  01495A  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27497  01495C  0E00               	movlw	0
 27498  01495E  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27499  014960  0E00               	movlw	0
 27500  014962  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27501  014964  0012               	return	
 27502  014966                     i2l1783:
 27503  014966  90D8               	bcf	status,0,c
 27504  014968  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 27505  01496A  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 27506  01496C  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 27507  01496E  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 27508  014970  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 27509  014972  D7F9               	goto	i2l1783
 27510  014974  D015               	goto	i2u1436_40
 27511  014976                     i2l1782:
 27512  014976  0E17               	movlw	23
 27513  014978  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 27514  01497A  D00F               	goto	i2l1788
 27515  01497C  0E00               	movlw	0
 27516  01497E  6E01               	movwf	?i2__tdiv_to_l_,c
 27517  014980  0E00               	movlw	0
 27518  014982  6E02               	movwf	?i2__tdiv_to_l_+1,c
 27519  014984  0E00               	movlw	0
 27520  014986  6E03               	movwf	?i2__tdiv_to_l_+2,c
 27521  014988  0E00               	movlw	0
 27522  01498A  6E04               	movwf	?i2__tdiv_to_l_+3,c
 27523  01498C  0012               	return	
 27524  01498E  90D8               	bcf	status,0,c
 27525  014990  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 27526  014992  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 27527  014994  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 27528  014996  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 27529  014998  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 27530  01499A                     i2l1788:
 27531  01499A  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 27532  01499C  A4D8               	btfss	status,2,c
 27533  01499E  D7F7               	goto	i2l1789
 27534  0149A0                     i2u1436_40:
 27535  0149A0  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 27536  0149A4  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 27537  0149A8  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 27538  0149AC  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 27539  0149B0  0012               	return		;funcret
 27540  0149B2                     __end_ofi2__tdiv_to_l_:
 27541                           	opt stack 0
 27542                           tosu	equ	0xFFF
 27543                           tosh	equ	0xFFE
 27544                           tosl	equ	0xFFD
 27545                           pclatu	equ	0xFFB
 27546                           pclath	equ	0xFFA
 27547                           tblptru	equ	0xFF8
 27548                           tblptrh	equ	0xFF7
 27549                           tblptrl	equ	0xFF6
 27550                           tablat	equ	0xFF5
 27551                           prodh	equ	0xFF4
 27552                           prodl	equ	0xFF3
 27553                           intcon	equ	0xFF2
 27554                           indf0	equ	0xFEF
 27555                           postinc0	equ	0xFEE
 27556                           fsr0h	equ	0xFEA
 27557                           fsr0l	equ	0xFE9
 27558                           wreg	equ	0xFE8
 27559                           indf1	equ	0xFE7
 27560                           postdec1	equ	0xFE5
 27561                           plusw1	equ	0xFE3
 27562                           fsr1h	equ	0xFE2
 27563                           fsr1l	equ	0xFE1
 27564                           bsr	equ	0xFE0
 27565                           indf2	equ	0xFDF
 27566                           postinc2	equ	0xFDE
 27567                           postdec2	equ	0xFDD
 27568                           plusw2	equ	0xFDB
 27569                           fsr2h	equ	0xFDA
 27570                           fsr2l	equ	0xFD9
 27571                           status	equ	0xFD8
 27572                           
 27573 ;; *************** function i2__div_to_l_ *****************
 27574 ;; Defined at:
 27575 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 27576 ;; Parameters:    Size  Location     Type
 27577 ;;  f1              3    0[COMRAM] unsigned long 
 27578 ;;  f2              3    3[COMRAM] unsigned long 
 27579 ;; Auto vars:     Size  Location     Type
 27580 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 27581 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 27582 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 27583 ;; Return value:  Size  Location     Type
 27584 ;;                  4    0[COMRAM] unsigned long 
 27585 ;; Registers used:
 27586 ;;		wreg, status,2, status,0
 27587 ;; Tracked objects:
 27588 ;;		On entry : 0/0
 27589 ;;		On exit  : 0/0
 27590 ;;		Unchanged: 0/0
 27591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27592 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27593 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27595 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27596 ;;Total ram usage:       12 bytes
 27597 ;; Hardware stack levels used:    1
 27598 ;; This function calls:
 27599 ;;		Nothing
 27600 ;; This function is called by:
 27601 ;;		i2_printf
 27602 ;; This function uses a non-reentrant model
 27603 ;;
 27604                           
 27605                           	psect	text98
 27606  014ADC                     __ptext98:
 27607                           	opt stack 0
 27608  014ADC                     i2__div_to_l_:
 27609                           	opt stack 15
 27610                           
 27611                           ;incstack = 0
 27612  014ADC  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 27613  014ADE  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 27614  014AE0  6E0C               	movwf	i2__div_to_l_@exp1,c
 27615  014AE2  500C               	movf	i2__div_to_l_@exp1,w,c
 27616  014AE4  A4D8               	btfss	status,2,c
 27617  014AE6  D009               	goto	i2l1672
 27618  014AE8  0E00               	movlw	0
 27619  014AEA  6E01               	movwf	?i2__div_to_l_,c
 27620  014AEC  0E00               	movlw	0
 27621  014AEE  6E02               	movwf	?i2__div_to_l_+1,c
 27622  014AF0  0E00               	movlw	0
 27623  014AF2  6E03               	movwf	?i2__div_to_l_+2,c
 27624  014AF4  0E00               	movlw	0
 27625  014AF6  6E04               	movwf	?i2__div_to_l_+3,c
 27626  014AF8  0012               	return	
 27627  014AFA                     i2l1672:
 27628  014AFA  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 27629  014AFC  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 27630  014AFE  6E0B               	movwf	i2__div_to_l_@cntr,c
 27631  014B00  500B               	movf	i2__div_to_l_@cntr,w,c
 27632  014B02  A4D8               	btfss	status,2,c
 27633  014B04  D009               	goto	i2l1674
 27634  014B06  0E00               	movlw	0
 27635  014B08  6E01               	movwf	?i2__div_to_l_,c
 27636  014B0A  0E00               	movlw	0
 27637  014B0C  6E02               	movwf	?i2__div_to_l_+1,c
 27638  014B0E  0E00               	movlw	0
 27639  014B10  6E03               	movwf	?i2__div_to_l_+2,c
 27640  014B12  0E00               	movlw	0
 27641  014B14  6E04               	movwf	?i2__div_to_l_+3,c
 27642  014B16  0012               	return	
 27643  014B18                     i2l1674:
 27644  014B18  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 27645  014B1A  0EFF               	movlw	255
 27646  014B1C  1601               	andwf	i2__div_to_l_@f1,f,c
 27647  014B1E  0EFF               	movlw	255
 27648  014B20  1602               	andwf	i2__div_to_l_@f1+1,f,c
 27649  014B22  0EFF               	movlw	255
 27650  014B24  1603               	andwf	i2__div_to_l_@f1+2,f,c
 27651  014B26  0E00               	movlw	0
 27652  014B28  1604               	andwf	i2__div_to_l_@f1+3,f,c
 27653  014B2A  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 27654  014B2C  0EFF               	movlw	255
 27655  014B2E  1604               	andwf	i2__div_to_l_@f2,f,c
 27656  014B30  0EFF               	movlw	255
 27657  014B32  1605               	andwf	i2__div_to_l_@f2+1,f,c
 27658  014B34  0EFF               	movlw	255
 27659  014B36  1606               	andwf	i2__div_to_l_@f2+2,f,c
 27660  014B38  0E00               	movlw	0
 27661  014B3A  1607               	andwf	i2__div_to_l_@f2+3,f,c
 27662  014B3C  0E00               	movlw	0
 27663  014B3E  6E07               	movwf	i2__div_to_l_@quot,c
 27664  014B40  0E00               	movlw	0
 27665  014B42  6E08               	movwf	i2__div_to_l_@quot+1,c
 27666  014B44  0E00               	movlw	0
 27667  014B46  6E09               	movwf	i2__div_to_l_@quot+2,c
 27668  014B48  0E00               	movlw	0
 27669  014B4A  6E0A               	movwf	i2__div_to_l_@quot+3,c
 27670  014B4C  0E7F               	movlw	127
 27671  014B4E  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 27672  014B50  500B               	movf	i2__div_to_l_@cntr,w,c
 27673  014B52  0FA0               	addlw	160
 27674  014B54  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 27675  014B56  0E20               	movlw	32
 27676  014B58  6E0B               	movwf	i2__div_to_l_@cntr,c
 27677  014B5A  90D8               	bcf	status,0,c
 27678  014B5C  3607               	rlcf	i2__div_to_l_@quot,f,c
 27679  014B5E  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 27680  014B60  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 27681  014B62  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 27682  014B64  5004               	movf	i2__div_to_l_@f2,w,c
 27683  014B66  5C01               	subwf	i2__div_to_l_@f1,w,c
 27684  014B68  5005               	movf	i2__div_to_l_@f2+1,w,c
 27685  014B6A  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 27686  014B6C  5006               	movf	i2__div_to_l_@f2+2,w,c
 27687  014B6E  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 27688  014B70  5007               	movf	i2__div_to_l_@f2+3,w,c
 27689  014B72  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 27690  014B74  A0D8               	btfss	status,0,c
 27691  014B76  D009               	goto	i2l1676
 27692  014B78  5004               	movf	i2__div_to_l_@f2,w,c
 27693  014B7A  5E01               	subwf	i2__div_to_l_@f1,f,c
 27694  014B7C  5005               	movf	i2__div_to_l_@f2+1,w,c
 27695  014B7E  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 27696  014B80  5006               	movf	i2__div_to_l_@f2+2,w,c
 27697  014B82  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 27698  014B84  5007               	movf	i2__div_to_l_@f2+3,w,c
 27699  014B86  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 27700  014B88  8007               	bsf	i2__div_to_l_@quot,0,c
 27701  014B8A                     i2l1676:
 27702  014B8A  90D8               	bcf	status,0,c
 27703  014B8C  3601               	rlcf	i2__div_to_l_@f1,f,c
 27704  014B8E  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 27705  014B90  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 27706  014B92  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 27707  014B94  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 27708  014B96  D7E1               	goto	i2l1675
 27709  014B98  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 27710  014B9A  D016               	goto	i2l1678
 27711  014B9C  500C               	movf	i2__div_to_l_@exp1,w,c
 27712  014B9E  0A80               	xorlw	128
 27713  014BA0  0F9F               	addlw	159
 27714  014BA2  B0D8               	btfsc	status,0,c
 27715  014BA4  D009               	goto	i2l1679
 27716  014BA6  0E00               	movlw	0
 27717  014BA8  6E01               	movwf	?i2__div_to_l_,c
 27718  014BAA  0E00               	movlw	0
 27719  014BAC  6E02               	movwf	?i2__div_to_l_+1,c
 27720  014BAE  0E00               	movlw	0
 27721  014BB0  6E03               	movwf	?i2__div_to_l_+2,c
 27722  014BB2  0E00               	movlw	0
 27723  014BB4  6E04               	movwf	?i2__div_to_l_+3,c
 27724  014BB6  0012               	return	
 27725  014BB8                     i2l1679:
 27726  014BB8  90D8               	bcf	status,0,c
 27727  014BBA  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 27728  014BBC  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 27729  014BBE  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 27730  014BC0  3207               	rrcf	i2__div_to_l_@quot,f,c
 27731  014BC2  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 27732  014BC4  D7F9               	goto	i2l1679
 27733  014BC6  D015               	goto	i2u1427_40
 27734  014BC8                     i2l1678:
 27735  014BC8  0E1F               	movlw	31
 27736  014BCA  640C               	cpfsgt	i2__div_to_l_@exp1,c
 27737  014BCC  D00F               	goto	i2l1684
 27738  014BCE  0E00               	movlw	0
 27739  014BD0  6E01               	movwf	?i2__div_to_l_,c
 27740  014BD2  0E00               	movlw	0
 27741  014BD4  6E02               	movwf	?i2__div_to_l_+1,c
 27742  014BD6  0E00               	movlw	0
 27743  014BD8  6E03               	movwf	?i2__div_to_l_+2,c
 27744  014BDA  0E00               	movlw	0
 27745  014BDC  6E04               	movwf	?i2__div_to_l_+3,c
 27746  014BDE  0012               	return	
 27747  014BE0  90D8               	bcf	status,0,c
 27748  014BE2  3607               	rlcf	i2__div_to_l_@quot,f,c
 27749  014BE4  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 27750  014BE6  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 27751  014BE8  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 27752  014BEA  060C               	decf	i2__div_to_l_@exp1,f,c
 27753  014BEC                     i2l1684:
 27754  014BEC  500C               	movf	i2__div_to_l_@exp1,w,c
 27755  014BEE  A4D8               	btfss	status,2,c
 27756  014BF0  D7F7               	goto	i2l1685
 27757  014BF2                     i2u1427_40:
 27758  014BF2  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 27759  014BF6  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 27760  014BFA  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 27761  014BFE  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 27762  014C02  0012               	return		;funcret
 27763  014C04                     __end_ofi2__div_to_l_:
 27764                           	opt stack 0
 27765                           tosu	equ	0xFFF
 27766                           tosh	equ	0xFFE
 27767                           tosl	equ	0xFFD
 27768                           pclatu	equ	0xFFB
 27769                           pclath	equ	0xFFA
 27770                           tblptru	equ	0xFF8
 27771                           tblptrh	equ	0xFF7
 27772                           tblptrl	equ	0xFF6
 27773                           tablat	equ	0xFF5
 27774                           prodh	equ	0xFF4
 27775                           prodl	equ	0xFF3
 27776                           intcon	equ	0xFF2
 27777                           indf0	equ	0xFEF
 27778                           postinc0	equ	0xFEE
 27779                           fsr0h	equ	0xFEA
 27780                           fsr0l	equ	0xFE9
 27781                           wreg	equ	0xFE8
 27782                           indf1	equ	0xFE7
 27783                           postdec1	equ	0xFE5
 27784                           plusw1	equ	0xFE3
 27785                           fsr1h	equ	0xFE2
 27786                           fsr1l	equ	0xFE1
 27787                           bsr	equ	0xFE0
 27788                           indf2	equ	0xFDF
 27789                           postinc2	equ	0xFDE
 27790                           postdec2	equ	0xFDD
 27791                           plusw2	equ	0xFDB
 27792                           fsr2h	equ	0xFDA
 27793                           fsr2l	equ	0xFD9
 27794                           status	equ	0xFD8
 27795                           
 27796 ;; *************** function i2___lltoft *****************
 27797 ;; Defined at:
 27798 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 27799 ;; Parameters:    Size  Location     Type
 27800 ;;  c               4    8[COMRAM] unsigned long 
 27801 ;; Auto vars:     Size  Location     Type
 27802 ;;  __lltoft        1   16[COMRAM] unsigned char 
 27803 ;; Return value:  Size  Location     Type
 27804 ;;                  3    8[COMRAM] float 
 27805 ;; Registers used:
 27806 ;;		wreg, status,2, status,0, cstack
 27807 ;; Tracked objects:
 27808 ;;		On entry : 0/0
 27809 ;;		On exit  : 0/0
 27810 ;;		Unchanged: 0/0
 27811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27815 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27816 ;;Total ram usage:        9 bytes
 27817 ;; Hardware stack levels used:    1
 27818 ;; Hardware stack levels required when called:    1
 27819 ;; This function calls:
 27820 ;;		i2___ftpack
 27821 ;; This function is called by:
 27822 ;;		i2_printf
 27823 ;; This function uses a non-reentrant model
 27824 ;;
 27825                           
 27826                           	psect	text99
 27827  01666C                     __ptext99:
 27828                           	opt stack 0
 27829  01666C                     i2___lltoft:
 27830                           	opt stack 14
 27831                           
 27832                           ;incstack = 0
 27833  01666C  0E8E               	movlw	142
 27834  01666E  6E11               	movwf	i2___lltoft@exp,c
 27835  016670  D006               	goto	i2l1897
 27836  016672  90D8               	bcf	status,0,c
 27837  016674  320C               	rrcf	i2___lltoft@c+3,f,c
 27838  016676  320B               	rrcf	i2___lltoft@c+2,f,c
 27839  016678  320A               	rrcf	i2___lltoft@c+1,f,c
 27840  01667A  3209               	rrcf	i2___lltoft@c,f,c
 27841  01667C  2A11               	incf	i2___lltoft@exp,f,c
 27842  01667E                     i2l1897:
 27843  01667E  0E00               	movlw	0
 27844  016680  1409               	andwf	i2___lltoft@c,w,c
 27845  016682  6E0D               	movwf	??i2___lltoft& (0+255),c
 27846  016684  0E00               	movlw	0
 27847  016686  140A               	andwf	i2___lltoft@c+1,w,c
 27848  016688  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 27849  01668A  0E00               	movlw	0
 27850  01668C  140B               	andwf	i2___lltoft@c+2,w,c
 27851  01668E  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 27852  016690  0EFF               	movlw	255
 27853  016692  140C               	andwf	i2___lltoft@c+3,w,c
 27854  016694  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 27855  016696  500D               	movf	??i2___lltoft,w,c
 27856  016698  100E               	iorwf	??i2___lltoft+1,w,c
 27857  01669A  100F               	iorwf	??i2___lltoft+2,w,c
 27858  01669C  1010               	iorwf	??i2___lltoft+3,w,c
 27859  01669E  A4D8               	btfss	status,2,c
 27860  0166A0  D7E8               	goto	i2l1898
 27861  0166A2  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 27862  0166A6  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 27863  0166AA  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 27864  0166AE  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 27865  0166B2  0E00               	movlw	0
 27866  0166B4  6E05               	movwf	i2___ftpack@sign,c
 27867  0166B6  EC92  F0AC         	call	i2___ftpack	;wreg free
 27868  0166BA  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 27869  0166BE  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 27870  0166C2  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 27871  0166C6  0012               	return	
 27872  0166C8                     __end_ofi2___lltoft:
 27873                           	opt stack 0
 27874                           tosu	equ	0xFFF
 27875                           tosh	equ	0xFFE
 27876                           tosl	equ	0xFFD
 27877                           pclatu	equ	0xFFB
 27878                           pclath	equ	0xFFA
 27879                           tblptru	equ	0xFF8
 27880                           tblptrh	equ	0xFF7
 27881                           tblptrl	equ	0xFF6
 27882                           tablat	equ	0xFF5
 27883                           prodh	equ	0xFF4
 27884                           prodl	equ	0xFF3
 27885                           intcon	equ	0xFF2
 27886                           indf0	equ	0xFEF
 27887                           postinc0	equ	0xFEE
 27888                           fsr0h	equ	0xFEA
 27889                           fsr0l	equ	0xFE9
 27890                           wreg	equ	0xFE8
 27891                           indf1	equ	0xFE7
 27892                           postdec1	equ	0xFE5
 27893                           plusw1	equ	0xFE3
 27894                           fsr1h	equ	0xFE2
 27895                           fsr1l	equ	0xFE1
 27896                           bsr	equ	0xFE0
 27897                           indf2	equ	0xFDF
 27898                           postinc2	equ	0xFDE
 27899                           postdec2	equ	0xFDD
 27900                           plusw2	equ	0xFDB
 27901                           fsr2h	equ	0xFDA
 27902                           fsr2l	equ	0xFD9
 27903                           status	equ	0xFD8
 27904                           
 27905 ;; *************** function i2___llmod *****************
 27906 ;; Defined at:
 27907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 27908 ;; Parameters:    Size  Location     Type
 27909 ;;  dividend        4   13[COMRAM] unsigned long 
 27910 ;;  divisor         4   17[COMRAM] unsigned long 
 27911 ;; Auto vars:     Size  Location     Type
 27912 ;;  __llmod         1   21[COMRAM] unsigned char 
 27913 ;; Return value:  Size  Location     Type
 27914 ;;                  4   13[COMRAM] unsigned long 
 27915 ;; Registers used:
 27916 ;;		wreg, status,2, status,0
 27917 ;; Tracked objects:
 27918 ;;		On entry : 0/0
 27919 ;;		On exit  : 0/0
 27920 ;;		Unchanged: 0/0
 27921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 27922 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27923 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27925 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27926 ;;Total ram usage:        9 bytes
 27927 ;; Hardware stack levels used:    1
 27928 ;; This function calls:
 27929 ;;		Nothing
 27930 ;; This function is called by:
 27931 ;;		i2_printf
 27932 ;; This function uses a non-reentrant model
 27933 ;;
 27934                           
 27935                           	psect	text100
 27936  016486                     __ptext100:
 27937                           	opt stack 0
 27938  016486                     i2___llmod:
 27939                           	opt stack 15
 27940                           
 27941                           ;incstack = 0
 27942  016486  5012               	movf	i2___llmod@divisor,w,c
 27943  016488  1013               	iorwf	i2___llmod@divisor+1,w,c
 27944  01648A  1014               	iorwf	i2___llmod@divisor+2,w,c
 27945  01648C  1015               	iorwf	i2___llmod@divisor+3,w,c
 27946  01648E  B4D8               	btfsc	status,2,c
 27947  016490  D024               	goto	i2l1891
 27948  016492  0E01               	movlw	1
 27949  016494  6E16               	movwf	i2___llmod@counter,c
 27950  016496  D006               	goto	i2l1886
 27951  016498  90D8               	bcf	status,0,c
 27952  01649A  3612               	rlcf	i2___llmod@divisor,f,c
 27953  01649C  3613               	rlcf	i2___llmod@divisor+1,f,c
 27954  01649E  3614               	rlcf	i2___llmod@divisor+2,f,c
 27955  0164A0  3615               	rlcf	i2___llmod@divisor+3,f,c
 27956  0164A2  2A16               	incf	i2___llmod@counter,f,c
 27957  0164A4                     i2l1886:
 27958  0164A4  AE15               	btfss	i2___llmod@divisor+3,7,c
 27959  0164A6  D7F8               	goto	i2l1887
 27960  0164A8                     i2u1443_40:
 27961  0164A8  5012               	movf	i2___llmod@divisor,w,c
 27962  0164AA  5C0E               	subwf	i2___llmod@dividend,w,c
 27963  0164AC  5013               	movf	i2___llmod@divisor+1,w,c
 27964  0164AE  580F               	subwfb	i2___llmod@dividend+1,w,c
 27965  0164B0  5014               	movf	i2___llmod@divisor+2,w,c
 27966  0164B2  5810               	subwfb	i2___llmod@dividend+2,w,c
 27967  0164B4  5015               	movf	i2___llmod@divisor+3,w,c
 27968  0164B6  5811               	subwfb	i2___llmod@dividend+3,w,c
 27969  0164B8  A0D8               	btfss	status,0,c
 27970  0164BA  D008               	goto	i2l1890
 27971  0164BC  5012               	movf	i2___llmod@divisor,w,c
 27972  0164BE  5E0E               	subwf	i2___llmod@dividend,f,c
 27973  0164C0  5013               	movf	i2___llmod@divisor+1,w,c
 27974  0164C2  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 27975  0164C4  5014               	movf	i2___llmod@divisor+2,w,c
 27976  0164C6  5A10               	subwfb	i2___llmod@dividend+2,f,c
 27977  0164C8  5015               	movf	i2___llmod@divisor+3,w,c
 27978  0164CA  5A11               	subwfb	i2___llmod@dividend+3,f,c
 27979  0164CC                     i2l1890:
 27980  0164CC  90D8               	bcf	status,0,c
 27981  0164CE  3215               	rrcf	i2___llmod@divisor+3,f,c
 27982  0164D0  3214               	rrcf	i2___llmod@divisor+2,f,c
 27983  0164D2  3213               	rrcf	i2___llmod@divisor+1,f,c
 27984  0164D4  3212               	rrcf	i2___llmod@divisor,f,c
 27985  0164D6  2E16               	decfsz	i2___llmod@counter,f,c
 27986  0164D8  D7E7               	goto	i2u1443_40
 27987  0164DA                     i2l1891:
 27988  0164DA  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 27989  0164DE  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 27990  0164E2  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 27991  0164E6  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 27992  0164EA  0012               	return		;funcret
 27993  0164EC                     __end_ofi2___llmod:
 27994                           	opt stack 0
 27995                           tosu	equ	0xFFF
 27996                           tosh	equ	0xFFE
 27997                           tosl	equ	0xFFD
 27998                           pclatu	equ	0xFFB
 27999                           pclath	equ	0xFFA
 28000                           tblptru	equ	0xFF8
 28001                           tblptrh	equ	0xFF7
 28002                           tblptrl	equ	0xFF6
 28003                           tablat	equ	0xFF5
 28004                           prodh	equ	0xFF4
 28005                           prodl	equ	0xFF3
 28006                           intcon	equ	0xFF2
 28007                           indf0	equ	0xFEF
 28008                           postinc0	equ	0xFEE
 28009                           fsr0h	equ	0xFEA
 28010                           fsr0l	equ	0xFE9
 28011                           wreg	equ	0xFE8
 28012                           indf1	equ	0xFE7
 28013                           postdec1	equ	0xFE5
 28014                           plusw1	equ	0xFE3
 28015                           fsr1h	equ	0xFE2
 28016                           fsr1l	equ	0xFE1
 28017                           bsr	equ	0xFE0
 28018                           indf2	equ	0xFDF
 28019                           postinc2	equ	0xFDE
 28020                           postdec2	equ	0xFDD
 28021                           plusw2	equ	0xFDB
 28022                           fsr2h	equ	0xFDA
 28023                           fsr2l	equ	0xFD9
 28024                           status	equ	0xFD8
 28025                           
 28026 ;; *************** function i2___lldiv *****************
 28027 ;; Defined at:
 28028 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 28029 ;; Parameters:    Size  Location     Type
 28030 ;;  dividend        4    0[COMRAM] unsigned long 
 28031 ;;  divisor         4    4[COMRAM] unsigned long 
 28032 ;; Auto vars:     Size  Location     Type
 28033 ;;  __lldiv         4    8[COMRAM] unsigned long 
 28034 ;;  __lldiv         1   12[COMRAM] unsigned char 
 28035 ;; Return value:  Size  Location     Type
 28036 ;;                  4    0[COMRAM] unsigned long 
 28037 ;; Registers used:
 28038 ;;		wreg, status,2, status,0
 28039 ;; Tracked objects:
 28040 ;;		On entry : 0/0
 28041 ;;		On exit  : 0/0
 28042 ;;		Unchanged: 0/0
 28043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28044 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28045 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28047 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28048 ;;Total ram usage:       13 bytes
 28049 ;; Hardware stack levels used:    1
 28050 ;; This function calls:
 28051 ;;		Nothing
 28052 ;; This function is called by:
 28053 ;;		i2_printf
 28054 ;; This function uses a non-reentrant model
 28055 ;;
 28056                           
 28057                           	psect	text101
 28058  016002                     __ptext101:
 28059                           	opt stack 0
 28060  016002                     i2___lldiv:
 28061                           	opt stack 15
 28062                           
 28063                           ;incstack = 0
 28064  016002  0E00               	movlw	0
 28065  016004  6E09               	movwf	i2___lldiv@quotient,c
 28066  016006  0E00               	movlw	0
 28067  016008  6E0A               	movwf	i2___lldiv@quotient+1,c
 28068  01600A  0E00               	movlw	0
 28069  01600C  6E0B               	movwf	i2___lldiv@quotient+2,c
 28070  01600E  0E00               	movlw	0
 28071  016010  6E0C               	movwf	i2___lldiv@quotient+3,c
 28072  016012  5005               	movf	i2___lldiv@divisor,w,c
 28073  016014  1006               	iorwf	i2___lldiv@divisor+1,w,c
 28074  016016  1007               	iorwf	i2___lldiv@divisor+2,w,c
 28075  016018  1008               	iorwf	i2___lldiv@divisor+3,w,c
 28076  01601A  B4D8               	btfsc	status,2,c
 28077  01601C  D02A               	goto	i2l1881
 28078  01601E  0E01               	movlw	1
 28079  016020  6E0D               	movwf	i2___lldiv@counter,c
 28080  016022  D006               	goto	i2l1876
 28081  016024  90D8               	bcf	status,0,c
 28082  016026  3605               	rlcf	i2___lldiv@divisor,f,c
 28083  016028  3606               	rlcf	i2___lldiv@divisor+1,f,c
 28084  01602A  3607               	rlcf	i2___lldiv@divisor+2,f,c
 28085  01602C  3608               	rlcf	i2___lldiv@divisor+3,f,c
 28086  01602E  2A0D               	incf	i2___lldiv@counter,f,c
 28087  016030                     i2l1876:
 28088  016030  AE08               	btfss	i2___lldiv@divisor+3,7,c
 28089  016032  D7F8               	goto	i2l1877
 28090  016034                     i2u1440_40:
 28091  016034  90D8               	bcf	status,0,c
 28092  016036  3609               	rlcf	i2___lldiv@quotient,f,c
 28093  016038  360A               	rlcf	i2___lldiv@quotient+1,f,c
 28094  01603A  360B               	rlcf	i2___lldiv@quotient+2,f,c
 28095  01603C  360C               	rlcf	i2___lldiv@quotient+3,f,c
 28096  01603E  5005               	movf	i2___lldiv@divisor,w,c
 28097  016040  5C01               	subwf	i2___lldiv@dividend,w,c
 28098  016042  5006               	movf	i2___lldiv@divisor+1,w,c
 28099  016044  5802               	subwfb	i2___lldiv@dividend+1,w,c
 28100  016046  5007               	movf	i2___lldiv@divisor+2,w,c
 28101  016048  5803               	subwfb	i2___lldiv@dividend+2,w,c
 28102  01604A  5008               	movf	i2___lldiv@divisor+3,w,c
 28103  01604C  5804               	subwfb	i2___lldiv@dividend+3,w,c
 28104  01604E  A0D8               	btfss	status,0,c
 28105  016050  D009               	goto	i2l1880
 28106  016052  5005               	movf	i2___lldiv@divisor,w,c
 28107  016054  5E01               	subwf	i2___lldiv@dividend,f,c
 28108  016056  5006               	movf	i2___lldiv@divisor+1,w,c
 28109  016058  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 28110  01605A  5007               	movf	i2___lldiv@divisor+2,w,c
 28111  01605C  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 28112  01605E  5008               	movf	i2___lldiv@divisor+3,w,c
 28113  016060  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 28114  016062  8009               	bsf	i2___lldiv@quotient,0,c
 28115  016064                     i2l1880:
 28116  016064  90D8               	bcf	status,0,c
 28117  016066  3208               	rrcf	i2___lldiv@divisor+3,f,c
 28118  016068  3207               	rrcf	i2___lldiv@divisor+2,f,c
 28119  01606A  3206               	rrcf	i2___lldiv@divisor+1,f,c
 28120  01606C  3205               	rrcf	i2___lldiv@divisor,f,c
 28121  01606E  2E0D               	decfsz	i2___lldiv@counter,f,c
 28122  016070  D7E1               	goto	i2u1440_40
 28123  016072                     i2l1881:
 28124  016072  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 28125  016076  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 28126  01607A  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 28127  01607E  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 28128  016082  0012               	return		;funcret
 28129  016084                     __end_ofi2___lldiv:
 28130                           	opt stack 0
 28131                           tosu	equ	0xFFF
 28132                           tosh	equ	0xFFE
 28133                           tosl	equ	0xFFD
 28134                           pclatu	equ	0xFFB
 28135                           pclath	equ	0xFFA
 28136                           tblptru	equ	0xFF8
 28137                           tblptrh	equ	0xFF7
 28138                           tblptrl	equ	0xFF6
 28139                           tablat	equ	0xFF5
 28140                           prodh	equ	0xFF4
 28141                           prodl	equ	0xFF3
 28142                           intcon	equ	0xFF2
 28143                           indf0	equ	0xFEF
 28144                           postinc0	equ	0xFEE
 28145                           fsr0h	equ	0xFEA
 28146                           fsr0l	equ	0xFE9
 28147                           wreg	equ	0xFE8
 28148                           indf1	equ	0xFE7
 28149                           postdec1	equ	0xFE5
 28150                           plusw1	equ	0xFE3
 28151                           fsr1h	equ	0xFE2
 28152                           fsr1l	equ	0xFE1
 28153                           bsr	equ	0xFE0
 28154                           indf2	equ	0xFDF
 28155                           postinc2	equ	0xFDE
 28156                           postdec2	equ	0xFDD
 28157                           plusw2	equ	0xFDB
 28158                           fsr2h	equ	0xFDA
 28159                           fsr2l	equ	0xFD9
 28160                           status	equ	0xFD8
 28161                           
 28162 ;; *************** function _ADCC_ISR *****************
 28163 ;; Defined at:
 28164 ;;		line 297 in file "mcc_generated_files/adcc.c"
 28165 ;; Parameters:    Size  Location     Type
 28166 ;;		None
 28167 ;; Auto vars:     Size  Location     Type
 28168 ;;		None
 28169 ;; Return value:  Size  Location     Type
 28170 ;;                  1    wreg      void 
 28171 ;; Registers used:
 28172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28173 ;; Tracked objects:
 28174 ;;		On entry : 0/0
 28175 ;;		On exit  : 0/0
 28176 ;;		Unchanged: 0/0
 28177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28182 ;;Total ram usage:        0 bytes
 28183 ;; Hardware stack levels used:    1
 28184 ;; Hardware stack levels required when called:    8
 28185 ;; This function calls:
 28186 ;;		Absolute function
 28187 ;;		_ADCC_DefaultInterruptHandler
 28188 ;;		_ADCPostProcessingCallback
 28189 ;; This function is called by:
 28190 ;;		_INTERRUPT_InterruptManagerHigh
 28191 ;; This function uses a non-reentrant model
 28192 ;;
 28193                           
 28194                           	psect	text102
 28195  016DB6                     __ptext102:
 28196                           	opt stack 0
 28197  016DB6                     _ADCC_ISR:
 28198                           	opt stack 9
 28199                           
 28200                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 28201                           
 28202                           ;incstack = 0
 28203  016DB6  010E               	movlb	14	; () banked
 28204  016DB8  9134               	bcf	52,0,b	;volatile
 28205                           
 28206                           ; BSR set to: 14
 28207                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 28208  016DBA  0100               	movlb	0	; () banked
 28209  016DBC  51E6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28210  016DBE  11E7               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28211  016DC0  11E8               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28212  016DC2  B4D8               	btfsc	status,2,c
 28213  016DC4  0012               	return	
 28214                           
 28215                           ; BSR set to: 0
 28216                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 28217  016DC6  D801               	call	i2u1941_48
 28218  016DC8  0012               	return	
 28219  016DCA                     i2u1941_48:
 28220  016DCA  0005               	push	
 28221  016DCC  6EFA               	movwf	pclath,c
 28222  016DCE  51E6               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 28223  016DD0  6EFD               	movwf	tosl,c
 28224  016DD2  51E7               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 28225  016DD4  6EFE               	movwf	tosh,c
 28226  016DD6  51E8               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 28227  016DD8  6EFF               	movwf	tosu,c
 28228  016DDA  50FA               	movf	pclath,w,c
 28229  016DDC  0012               	return		;indir
 28230  016DDE                     __end_of_ADCC_ISR:
 28231                           	opt stack 0
 28232                           tosu	equ	0xFFF
 28233                           tosh	equ	0xFFE
 28234                           tosl	equ	0xFFD
 28235                           pclatu	equ	0xFFB
 28236                           pclath	equ	0xFFA
 28237                           tblptru	equ	0xFF8
 28238                           tblptrh	equ	0xFF7
 28239                           tblptrl	equ	0xFF6
 28240                           tablat	equ	0xFF5
 28241                           prodh	equ	0xFF4
 28242                           prodl	equ	0xFF3
 28243                           intcon	equ	0xFF2
 28244                           indf0	equ	0xFEF
 28245                           postinc0	equ	0xFEE
 28246                           fsr0h	equ	0xFEA
 28247                           fsr0l	equ	0xFE9
 28248                           wreg	equ	0xFE8
 28249                           indf1	equ	0xFE7
 28250                           postdec1	equ	0xFE5
 28251                           plusw1	equ	0xFE3
 28252                           fsr1h	equ	0xFE2
 28253                           fsr1l	equ	0xFE1
 28254                           bsr	equ	0xFE0
 28255                           indf2	equ	0xFDF
 28256                           postinc2	equ	0xFDE
 28257                           postdec2	equ	0xFDD
 28258                           plusw2	equ	0xFDB
 28259                           fsr2h	equ	0xFDA
 28260                           fsr2l	equ	0xFD9
 28261                           status	equ	0xFD8
 28262                           
 28263 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 28264 ;; Defined at:
 28265 ;;		line 310 in file "mcc_generated_files/adcc.c"
 28266 ;; Parameters:    Size  Location     Type
 28267 ;;		None
 28268 ;; Auto vars:     Size  Location     Type
 28269 ;;		None
 28270 ;; Return value:  Size  Location     Type
 28271 ;;                  1    wreg      void 
 28272 ;; Registers used:
 28273 ;;		None
 28274 ;; Tracked objects:
 28275 ;;		On entry : 0/0
 28276 ;;		On exit  : 0/0
 28277 ;;		Unchanged: 0/0
 28278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28283 ;;Total ram usage:        0 bytes
 28284 ;; Hardware stack levels used:    1
 28285 ;; This function calls:
 28286 ;;		Nothing
 28287 ;; This function is called by:
 28288 ;;		_ADCC_Initialize
 28289 ;;		_ADCC_ISR
 28290 ;; This function uses a non-reentrant model
 28291 ;;
 28292                           
 28293                           	psect	text103
 28294  0170C0                     __ptext103:
 28295                           	opt stack 0
 28296  0170C0                     _ADCC_DefaultInterruptHandler:
 28297                           	opt stack 16
 28298                           
 28299                           ;incstack = 0
 28300  0170C0  0012               	return		;funcret
 28301  0170C2                     __end_of_ADCC_DefaultInterruptHandler:
 28302                           	opt stack 0
 28303                           tosu	equ	0xFFF
 28304                           tosh	equ	0xFFE
 28305                           tosl	equ	0xFFD
 28306                           pclatu	equ	0xFFB
 28307                           pclath	equ	0xFFA
 28308                           tblptru	equ	0xFF8
 28309                           tblptrh	equ	0xFF7
 28310                           tblptrl	equ	0xFF6
 28311                           tablat	equ	0xFF5
 28312                           prodh	equ	0xFF4
 28313                           prodl	equ	0xFF3
 28314                           intcon	equ	0xFF2
 28315                           indf0	equ	0xFEF
 28316                           postinc0	equ	0xFEE
 28317                           fsr0h	equ	0xFEA
 28318                           fsr0l	equ	0xFE9
 28319                           wreg	equ	0xFE8
 28320                           indf1	equ	0xFE7
 28321                           postdec1	equ	0xFE5
 28322                           plusw1	equ	0xFE3
 28323                           fsr1h	equ	0xFE2
 28324                           fsr1l	equ	0xFE1
 28325                           bsr	equ	0xFE0
 28326                           indf2	equ	0xFDF
 28327                           postinc2	equ	0xFDE
 28328                           postdec2	equ	0xFDD
 28329                           plusw2	equ	0xFDB
 28330                           fsr2h	equ	0xFDA
 28331                           fsr2l	equ	0xFD9
 28332                           status	equ	0xFD8
 28333                           
 28334 ;; *************** function _ADCPostProcessingCallback *****************
 28335 ;; Defined at:
 28336 ;;		line 151 in file "main.c"
 28337 ;; Parameters:    Size  Location     Type
 28338 ;;		None
 28339 ;; Auto vars:     Size  Location     Type
 28340 ;;  currentADCCh    1   79[BANK0 ] enum E17421
 28341 ;; Return value:  Size  Location     Type
 28342 ;;                  1    wreg      void 
 28343 ;; Registers used:
 28344 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28345 ;; Tracked objects:
 28346 ;;		On entry : 0/0
 28347 ;;		On exit  : 0/0
 28348 ;;		Unchanged: 0/0
 28349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 28350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28351 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28353 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28354 ;;Total ram usage:       16 bytes
 28355 ;; Hardware stack levels used:    1
 28356 ;; Hardware stack levels required when called:    7
 28357 ;; This function calls:
 28358 ;;		_ADCC_GetConversionResult
 28359 ;;		___lwtoft
 28360 ;;		_currentMeasuredToPeak
 28361 ;;		_peakToRMS
 28362 ;;		i2_TMR7_StopTimer
 28363 ;;		i2___ftadd
 28364 ;;		i2___ftdiv
 28365 ;;		i2___ftge
 28366 ;;		i2___ftmul
 28367 ;;		i2___ftneg
 28368 ;; This function is called by:
 28369 ;;		_main
 28370 ;;		_ADCC_ISR
 28371 ;; This function uses a non-reentrant model
 28372 ;;
 28373                           
 28374                           	psect	text104
 28375  012250                     __ptext104:
 28376                           	opt stack 0
 28377  012250                     _ADCPostProcessingCallback:
 28378                           	opt stack 9
 28379                           
 28380                           ;main.c: 153: adcc_channel_t currentADCChannel = ADPCH;
 28381                           
 28382                           ;incstack = 0
 28383  012250  CF5F F0AF          	movff	3935,ADCPostProcessingCallback@currentADCChannel	;volatile
 28384                           
 28385                           ;main.c: 155: switch (currentADCChannel) {
 28386  012254  D324               	goto	i2l890
 28387  012256                     
 28388                           ;main.c: 159: AVSS_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 28389  012256  ECD2  F0B7         	call	_ADCC_GetConversionResult	;wreg free
 28390  01225A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28391  01225E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28392  012262  EC4D  F0B7         	call	___lwtoft	;wreg free
 28393  012266  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28394  01226A  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28395  01226E  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28396  012272  0E68               	movlw	104
 28397  012274  6E2A               	movwf	i2___ftmul@f2,c
 28398  012276  0E53               	movlw	83
 28399  012278  6E2B               	movwf	i2___ftmul@f2+1,c
 28400  01227A  0E3B               	movlw	59
 28401  01227C  6E2C               	movwf	i2___ftmul@f2+2,c
 28402  01227E  EC01  F0A8         	call	i2___ftmul	;wreg free
 28403  012282  C027  F0E3         	movff	?i2___ftmul,_AVSS_ADC_Result	;volatile
 28404  012286  C028  F0E4         	movff	?i2___ftmul+1,_AVSS_ADC_Result+1	;volatile
 28405  01228A  C029  F0E5         	movff	?i2___ftmul+2,_AVSS_ADC_Result+2	;volatile
 28406                           
 28407                           ;main.c: 161: if (AVSS_ADC_Result > 0.01) {
 28408  01228E  0ED7               	movlw	215
 28409  012290  6E2A               	movwf	i2___ftge@ff1,c
 28410  012292  0E23               	movlw	35
 28411  012294  6E2B               	movwf	i2___ftge@ff1+1,c
 28412  012296  0E3C               	movlw	60
 28413  012298  6E2C               	movwf	i2___ftge@ff1+2,c
 28414  01229A  C0E3  F02D         	movff	_AVSS_ADC_Result,i2___ftge@ff2	;volatile
 28415  01229E  C0E4  F02E         	movff	_AVSS_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28416  0122A2  C0E5  F02F         	movff	_AVSS_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28417  0122A6  EC20  F0AE         	call	i2___ftge	;wreg free
 28418  0122AA  B0D8               	btfsc	status,0,c
 28419  0122AC  0012               	return	
 28420                           
 28421                           ;main.c: 163: LATFbits.LATF3 = 1;
 28422  0122AE  867E               	bsf	3966,3,c	;volatile
 28423                           
 28424                           ;main.c: 164: adc_error_flag = 1;
 28425  0122B0  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28426                           
 28427                           ;main.c: 166: PIE5bits.TMR7IE == 0;
 28428  0122B2  010E               	movlb	14	; () banked
 28429  0122B4  512E               	movf	46,w,b	;volatile
 28430                           
 28431                           ; BSR set to: 14
 28432                           ;main.c: 167: TMR7_StopTimer();
 28433  0122B6  EC5A  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 28434                           
 28435                           ;main.c: 170: }
 28436                           ;main.c: 172: break;
 28437                           
 28438                           ;main.c: 168: return;
 28439  0122BA  0012               	return	
 28440  0122BC                     
 28441                           ;main.c: 177: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) + AVSS_ADC_Re
      +                          sult;
 28442  0122BC  0E68               	movlw	104
 28443  0122BE  6E2A               	movwf	i2___ftmul@f2,c
 28444  0122C0  0E53               	movlw	83
 28445  0122C2  6E2B               	movwf	i2___ftmul@f2+1,c
 28446  0122C4  0E3B               	movlw	59
 28447  0122C6  6E2C               	movwf	i2___ftmul@f2+2,c
 28448  0122C8  ECD2  F0B7         	call	_ADCC_GetConversionResult	;wreg free
 28449  0122CC  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28450  0122D0  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28451  0122D4  EC4D  F0B7         	call	___lwtoft	;wreg free
 28452  0122D8  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28453  0122DC  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28454  0122E0  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28455  0122E4  EC01  F0A8         	call	i2___ftmul	;wreg free
 28456  0122E8  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 28457  0122EC  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 28458  0122F0  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 28459  0122F4  C0E3  F043         	movff	_AVSS_ADC_Result,i2___ftadd@f2	;volatile
 28460  0122F8  C0E4  F044         	movff	_AVSS_ADC_Result+1,i2___ftadd@f2+1	;volatile
 28461  0122FC  C0E5  F045         	movff	_AVSS_ADC_Result+2,i2___ftadd@f2+2	;volatile
 28462  012300  EC05  F0A2         	call	i2___ftadd	;wreg free
 28463  012304  C040  F0EE         	movff	?i2___ftadd,_FVR_ADC_Result	;volatile
 28464  012308  C041  F0EF         	movff	?i2___ftadd+1,_FVR_ADC_Result+1	;volatile
 28465  01230C  C042  F0F0         	movff	?i2___ftadd+2,_FVR_ADC_Result+2	;volatile
 28466                           
 28467                           ;main.c: 178: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 28468  012310  0E12               	movlw	18
 28469  012312  6E15               	movwf	i2___ftdiv@f1,c
 28470  012314  0E03               	movlw	3
 28471  012316  6E16               	movwf	i2___ftdiv@f1+1,c
 28472  012318  0E40               	movlw	64
 28473  01231A  6E17               	movwf	i2___ftdiv@f1+2,c
 28474  01231C  C0EE  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2	;volatile
 28475  012320  C0EF  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1	;volatile
 28476  012324  C0F0  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2	;volatile
 28477  012328  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 28478  01232C  C015  F0E0         	movff	?i2___ftdiv,_ADC_Result_Scaling	;volatile
 28479  012330  C016  F0E1         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1	;volatile
 28480  012334  C017  F0E2         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2	;volatile
 28481                           
 28482                           ;main.c: 180: if (FVR_ADC_Result > 2.5 || FVR_ADC_Result < 2.0) {
 28483  012338  0E00               	movlw	0
 28484  01233A  6E2A               	movwf	i2___ftge@ff1,c
 28485  01233C  0E20               	movlw	32
 28486  01233E  6E2B               	movwf	i2___ftge@ff1+1,c
 28487  012340  0E40               	movlw	64
 28488  012342  6E2C               	movwf	i2___ftge@ff1+2,c
 28489  012344  C0EE  F02D         	movff	_FVR_ADC_Result,i2___ftge@ff2	;volatile
 28490  012348  C0EF  F02E         	movff	_FVR_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28491  01234C  C0F0  F02F         	movff	_FVR_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28492  012350  EC20  F0AE         	call	i2___ftge	;wreg free
 28493  012354  A0D8               	btfss	status,0,c
 28494  012356  D010               	goto	i2u1876_40
 28495  012358  C0EE  F02A         	movff	_FVR_ADC_Result,i2___ftge@ff1	;volatile
 28496  01235C  C0EF  F02B         	movff	_FVR_ADC_Result+1,i2___ftge@ff1+1	;volatile
 28497  012360  C0F0  F02C         	movff	_FVR_ADC_Result+2,i2___ftge@ff1+2	;volatile
 28498  012364  0E00               	movlw	0
 28499  012366  6E2D               	movwf	i2___ftge@ff2,c
 28500  012368  0E00               	movlw	0
 28501  01236A  6E2E               	movwf	i2___ftge@ff2+1,c
 28502  01236C  0E40               	movlw	64
 28503  01236E  6E2F               	movwf	i2___ftge@ff2+2,c
 28504  012370  EC20  F0AE         	call	i2___ftge	;wreg free
 28505  012374  B0D8               	btfsc	status,0,c
 28506  012376  0012               	return	
 28507  012378                     i2u1876_40:
 28508                           
 28509                           ;main.c: 182: LATFbits.LATF3 = 1;
 28510  012378  867E               	bsf	3966,3,c	;volatile
 28511                           
 28512                           ;main.c: 183: adc_error_flag = 1;
 28513  01237A  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28514                           
 28515                           ;main.c: 185: PIE5bits.TMR7IE == 0;
 28516  01237C  010E               	movlb	14	; () banked
 28517  01237E  512E               	movf	46,w,b	;volatile
 28518                           
 28519                           ; BSR set to: 14
 28520                           ;main.c: 186: TMR7_StopTimer();
 28521  012380  EC5A  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 28522                           
 28523                           ;main.c: 189: }
 28524                           ;main.c: 192: break;
 28525                           
 28526                           ;main.c: 187: return;
 28527  012384  0012               	return	
 28528  012386                     
 28529                           ;main.c: 197: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 28530  012386  C0E0  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2	;volatile
 28531  01238A  C0E1  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1	;volatile
 28532  01238E  C0E2  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2	;volatile
 28533  012392  ECD2  F0B7         	call	_ADCC_GetConversionResult	;wreg free
 28534  012396  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28535  01239A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28536  01239E  EC4D  F0B7         	call	___lwtoft	;wreg free
 28537  0123A2  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28538  0123A6  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28539  0123AA  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28540  0123AE  EC01  F0A8         	call	i2___ftmul	;wreg free
 28541  0123B2  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$3882
 28542  0123B6  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$3882+1
 28543  0123BA  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$3882+2
 28544                           
 28545                           ;main.c: 197: POS3P3_ADC_Result = ((ADCC_GetConversionResult()) * (3.3/1023.0)) * 2.0 * 
      +                          ADC_Result_Scaling;
 28546  0123BE  C0B3  F027         	movff	_ADCPostProcessingCallback$3882,i2___ftmul@f1
 28547  0123C2  C0B4  F028         	movff	_ADCPostProcessingCallback$3882+1,i2___ftmul@f1+1
 28548  0123C6  C0B5  F029         	movff	_ADCPostProcessingCallback$3882+2,i2___ftmul@f1+2
 28549  0123CA  0E68               	movlw	104
 28550  0123CC  6E2A               	movwf	i2___ftmul@f2,c
 28551  0123CE  0ED3               	movlw	211
 28552  0123D0  6E2B               	movwf	i2___ftmul@f2+1,c
 28553  0123D2  0E3B               	movlw	59
 28554  0123D4  6E2C               	movwf	i2___ftmul@f2+2,c
 28555  0123D6  EC01  F0A8         	call	i2___ftmul	;wreg free
 28556  0123DA  C027  F0DD         	movff	?i2___ftmul,_POS3P3_ADC_Result	;volatile
 28557  0123DE  C028  F0DE         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1	;volatile
 28558  0123E2  C029  F0DF         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2	;volatile
 28559                           
 28560                           ;main.c: 199: if (POS3P3_ADC_Result > 3.5) {
 28561  0123E6  0E00               	movlw	0
 28562  0123E8  6E2A               	movwf	i2___ftge@ff1,c
 28563  0123EA  0E60               	movlw	96
 28564  0123EC  6E2B               	movwf	i2___ftge@ff1+1,c
 28565  0123EE  0E40               	movlw	64
 28566  0123F0  6E2C               	movwf	i2___ftge@ff1+2,c
 28567  0123F2  C0DD  F02D         	movff	_POS3P3_ADC_Result,i2___ftge@ff2	;volatile
 28568  0123F6  C0DE  F02E         	movff	_POS3P3_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28569  0123FA  C0DF  F02F         	movff	_POS3P3_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28570  0123FE  EC20  F0AE         	call	i2___ftge	;wreg free
 28571  012402  B0D8               	btfsc	status,0,c
 28572  012404  0012               	return	
 28573                           
 28574                           ;main.c: 201: LATFbits.LATF3 = 1;
 28575  012406  867E               	bsf	3966,3,c	;volatile
 28576                           
 28577                           ;main.c: 202: adc_error_flag = 1;
 28578  012408  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28579                           
 28580                           ;main.c: 204: PIE5bits.TMR7IE == 0;
 28581  01240A  010E               	movlb	14	; () banked
 28582  01240C  512E               	movf	46,w,b	;volatile
 28583                           
 28584                           ; BSR set to: 14
 28585                           ;main.c: 205: TMR7_StopTimer();
 28586  01240E  EC5A  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 28587                           
 28588                           ;main.c: 208: }
 28589                           ;main.c: 210: break;
 28590                           
 28591                           ;main.c: 206: return;
 28592  012412  0012               	return	
 28593  012414                     
 28594                           ;main.c: 215: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 28595  012414  0EC0               	movlw	192
 28596  012416  6E18               	movwf	i2___ftdiv@f2,c
 28597  012418  0E7F               	movlw	127
 28598  01241A  6E19               	movwf	i2___ftdiv@f2+1,c
 28599  01241C  0E44               	movlw	68
 28600  01241E  6E1A               	movwf	i2___ftdiv@f2+2,c
 28601  012420  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 28602  012424  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 28603  012428  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 28604  01242C  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 28605  012430  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 28606  012434  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 28607  012438  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 28608  01243C  ECD2  F0B7         	call	_ADCC_GetConversionResult	;wreg free
 28609  012440  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28610  012444  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28611  012448  EC4D  F0B7         	call	___lwtoft	;wreg free
 28612  01244C  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28613  012450  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28614  012454  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28615  012458  EC01  F0A8         	call	i2___ftmul	;wreg free
 28616  01245C  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$3882
 28617  012460  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$3882+1
 28618  012464  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$3882+2
 28619                           
 28620                           ;main.c: 215: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 28621  012468  C0B3  F027         	movff	_ADCPostProcessingCallback$3882,i2___ftmul@f1
 28622  01246C  C0B4  F028         	movff	_ADCPostProcessingCallback$3882+1,i2___ftmul@f1+1
 28623  012470  C0B5  F029         	movff	_ADCPostProcessingCallback$3882+2,i2___ftmul@f1+2
 28624  012474  0E5E               	movlw	94
 28625  012476  6E2A               	movwf	i2___ftmul@f2,c
 28626  012478  0EF2               	movlw	242
 28627  01247A  6E2B               	movwf	i2___ftmul@f2+1,c
 28628  01247C  0E3F               	movlw	63
 28629  01247E  6E2C               	movwf	i2___ftmul@f2+2,c
 28630  012480  EC01  F0A8         	call	i2___ftmul	;wreg free
 28631  012484  C027  F0CE         	movff	?i2___ftmul,_Imeas	;volatile
 28632  012488  C028  F0CF         	movff	?i2___ftmul+1,_Imeas+1	;volatile
 28633  01248C  C029  F0D0         	movff	?i2___ftmul+2,_Imeas+2	;volatile
 28634                           
 28635                           ;main.c: 219: if (LATGbits.LATG0 != 1) {
 28636  012490  B07F               	btfsc	3967,0,c	;volatile
 28637  012492  D083               	goto	i2l902
 28638                           
 28639                           ;main.c: 224: if (load_enable) {
 28640  012494  A25E               	btfss	_load_enable/(0+8),_load_enable& (0+7),c	;volatile
 28641  012496  D029               	goto	i2l903
 28642                           
 28643                           ;main.c: 227: if (dimming_period < 0x7FEE) {
 28644  012498  0EEE               	movlw	238
 28645  01249A  0100               	movlb	0	; () banked
 28646  01249C  5DFA               	subwf	_dimming_period& (0+255),w,b	;volatile
 28647  01249E  0E7F               	movlw	127
 28648  0124A0  59FB               	subwfb	(_dimming_period+1)& (0+255),w,b	;volatile
 28649  0124A2  B0D8               	btfsc	status,0,c
 28650  0124A4  D007               	goto	i2l904
 28651                           
 28652                           ; BSR set to: 0
 28653                           ;main.c: 229: Ipk = Imeas;
 28654  0124A6  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 28655  0124AA  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 28656  0124AE  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 28657                           
 28658                           ;main.c: 231: }
 28659  0124B2  D014               	goto	i2l905
 28660  0124B4                     i2l904:
 28661                           
 28662                           ; BSR set to: 0
 28663                           ;main.c: 234: else {
 28664                           ;main.c: 236: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 28665                           
 28666                           ; BSR set to: 0
 28667  0124B4  C0CE  F073         	movff	_Imeas,currentMeasuredToPeak@Measured	;volatile
 28668  0124B8  C0CF  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1	;volatile
 28669  0124BC  C0D0  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2	;volatile
 28670  0124C0  C0FC  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle	;volatile
 28671  0124C4  C0FD  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1	;volatile
 28672  0124C8  C0FE  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2	;volatile
 28673  0124CC  ECA8  F0B2         	call	_currentMeasuredToPeak	;wreg free
 28674  0124D0  C073  F0D1         	movff	?_currentMeasuredToPeak,_Ipk	;volatile
 28675  0124D4  C074  F0D2         	movff	?_currentMeasuredToPeak+1,_Ipk+1	;volatile
 28676  0124D8  C075  F0D3         	movff	?_currentMeasuredToPeak+2,_Ipk+2	;volatile
 28677  0124DC                     i2l905:
 28678                           
 28679                           ;main.c: 238: }
 28680                           ;main.c: 240: Vpk = Vpk_const;
 28681  0124DC  C0F4  F0D4         	movff	_Vpk_const,_Vpk	;volatile
 28682  0124E0  C0F5  F0D5         	movff	_Vpk_const+1,_Vpk+1	;volatile
 28683  0124E4  C0F6  F0D6         	movff	_Vpk_const+2,_Vpk+2	;volatile
 28684                           
 28685                           ;main.c: 242: }
 28686  0124E8  D00D               	goto	i2l906
 28687  0124EA                     i2l903:
 28688                           
 28689                           ;main.c: 244: else {
 28690                           ;main.c: 246: Ipk = 0.0;
 28691  0124EA  0E00               	movlw	0
 28692  0124EC  0100               	movlb	0	; () banked
 28693  0124EE  6FD1               	movwf	_Ipk& (0+255),b	;volatile
 28694  0124F0  0E00               	movlw	0
 28695  0124F2  6FD2               	movwf	(_Ipk+1)& (0+255),b	;volatile
 28696  0124F4  0E00               	movlw	0
 28697  0124F6  6FD3               	movwf	(_Ipk+2)& (0+255),b	;volatile
 28698                           
 28699                           ;main.c: 247: Vpk = 0.0;
 28700  0124F8  0E00               	movlw	0
 28701  0124FA  6FD4               	movwf	_Vpk& (0+255),b	;volatile
 28702  0124FC  0E00               	movlw	0
 28703  0124FE  6FD5               	movwf	(_Vpk+1)& (0+255),b	;volatile
 28704  012500  0E00               	movlw	0
 28705  012502  6FD6               	movwf	(_Vpk+2)& (0+255),b	;volatile
 28706  012504                     i2l906:
 28707                           
 28708                           ;main.c: 249: }
 28709                           ;main.c: 251: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 28710                           
 28711                           ; BSR set to: 0
 28712  012504  C0FC  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 28713  012508  C0FD  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 28714  01250C  C0FE  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 28715  012510  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 28716  012514  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 28717  012518  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 28718  01251C  EC6A  F09F         	call	_peakToRMS	;wreg free
 28719  012520  C094  F0B0         	movff	?_peakToRMS,_ADCPostProcessingCallback$3883
 28720  012524  C095  F0B1         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$3883+1
 28721  012528  C096  F0B2         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$3883+2
 28722                           
 28723                           ;main.c: 249: }
 28724                           ;main.c: 251: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle) + Irms_offset;
 28725  01252C  C0B0  F040         	movff	_ADCPostProcessingCallback$3883,i2___ftadd@f1
 28726  012530  C0B1  F041         	movff	_ADCPostProcessingCallback$3883+1,i2___ftadd@f1+1
 28727  012534  C0B2  F042         	movff	_ADCPostProcessingCallback$3883+2,i2___ftadd@f1+2
 28728  012538  C0F1  F043         	movff	_Irms_offset,i2___ftadd@f2
 28729  01253C  C0F2  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 28730  012540  C0F3  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 28731  012544  EC05  F0A2         	call	i2___ftadd	;wreg free
 28732  012548  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 28733  01254C  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 28734  012550  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 28735                           
 28736                           ;main.c: 252: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 28737  012554  C0D4  F094         	movff	_Vpk,peakToRMS@Peak	;volatile
 28738  012558  C0D5  F095         	movff	_Vpk+1,peakToRMS@Peak+1	;volatile
 28739  01255C  C0D6  F096         	movff	_Vpk+2,peakToRMS@Peak+2	;volatile
 28740  012560  C0FC  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle	;volatile
 28741  012564  C0FD  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1	;volatile
 28742  012568  C0FE  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2	;volatile
 28743  01256C  EC6A  F09F         	call	_peakToRMS	;wreg free
 28744  012570  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 28745  012574  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 28746  012578  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 28747                           
 28748                           ;main.c: 253: Avg_Power = Vrms * Irms;
 28749  01257C  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 28750  012580  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 28751  012584  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 28752  012588  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 28753  01258C  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 28754  012590  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 28755  012594  EC01  F0A8         	call	i2___ftmul	;wreg free
 28756  012598  D052               	goto	L14
 28757  01259A                     i2l902:
 28758                           
 28759                           ;main.c: 258: else {
 28760                           ;main.c: 260: Ipk = Imeas;
 28761  01259A  C0CE  F0D1         	movff	_Imeas,_Ipk	;volatile
 28762  01259E  C0CF  F0D2         	movff	_Imeas+1,_Ipk+1	;volatile
 28763  0125A2  C0D0  F0D3         	movff	_Imeas+2,_Ipk+2	;volatile
 28764                           
 28765                           ;main.c: 261: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 28766  0125A6  0E00               	movlw	0
 28767  0125A8  0100               	movlb	0	; () banked
 28768  0125AA  6F97               	movwf	peakToRMS@Angle& (0+255),b
 28769  0125AC  0E00               	movlw	0
 28770  0125AE  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 28771  0125B0  0E00               	movlw	0
 28772  0125B2  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 28773  0125B4  C0D1  F094         	movff	_Ipk,peakToRMS@Peak	;volatile
 28774  0125B8  C0D2  F095         	movff	_Ipk+1,peakToRMS@Peak+1	;volatile
 28775  0125BC  C0D3  F096         	movff	_Ipk+2,peakToRMS@Peak+2	;volatile
 28776  0125C0  EC6A  F09F         	call	_peakToRMS	;wreg free
 28777  0125C4  C094  F0B0         	movff	?_peakToRMS,_ADCPostProcessingCallback$3883
 28778  0125C8  C095  F0B1         	movff	?_peakToRMS+1,_ADCPostProcessingCallback$3883+1
 28779  0125CC  C096  F0B2         	movff	?_peakToRMS+2,_ADCPostProcessingCallback$3883+2
 28780                           
 28781                           ;main.c: 261: Irms = peakToRMS(Ipk, 0.0) + Irms_offset;
 28782  0125D0  C0B0  F040         	movff	_ADCPostProcessingCallback$3883,i2___ftadd@f1
 28783  0125D4  C0B1  F041         	movff	_ADCPostProcessingCallback$3883+1,i2___ftadd@f1+1
 28784  0125D8  C0B2  F042         	movff	_ADCPostProcessingCallback$3883+2,i2___ftadd@f1+2
 28785  0125DC  C0F1  F043         	movff	_Irms_offset,i2___ftadd@f2
 28786  0125E0  C0F2  F044         	movff	_Irms_offset+1,i2___ftadd@f2+1
 28787  0125E4  C0F3  F045         	movff	_Irms_offset+2,i2___ftadd@f2+2
 28788  0125E8  EC05  F0A2         	call	i2___ftadd	;wreg free
 28789  0125EC  C040  F0CB         	movff	?i2___ftadd,_Irms	;volatile
 28790  0125F0  C041  F0CC         	movff	?i2___ftadd+1,_Irms+1	;volatile
 28791  0125F4  C042  F0CD         	movff	?i2___ftadd+2,_Irms+2	;volatile
 28792                           
 28793                           ;main.c: 262: Vrms = peakToRMS(Vpk_const, 0.0);
 28794  0125F8  C0F4  F094         	movff	_Vpk_const,peakToRMS@Peak
 28795  0125FC  C0F5  F095         	movff	_Vpk_const+1,peakToRMS@Peak+1
 28796  012600  C0F6  F096         	movff	_Vpk_const+2,peakToRMS@Peak+2
 28797  012604  0E00               	movlw	0
 28798  012606  0100               	movlb	0	; () banked
 28799  012608  6F97               	movwf	peakToRMS@Angle& (0+255),b
 28800  01260A  0E00               	movlw	0
 28801  01260C  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 28802  01260E  0E00               	movlw	0
 28803  012610  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 28804  012612  EC6A  F09F         	call	_peakToRMS	;wreg free
 28805  012616  C094  F0C8         	movff	?_peakToRMS,_Vrms	;volatile
 28806  01261A  C095  F0C9         	movff	?_peakToRMS+1,_Vrms+1	;volatile
 28807  01261E  C096  F0CA         	movff	?_peakToRMS+2,_Vrms+2	;volatile
 28808                           
 28809                           ;main.c: 263: Avg_Power = Vrms * Irms;
 28810  012622  C0C8  F027         	movff	_Vrms,i2___ftmul@f1	;volatile
 28811  012626  C0C9  F028         	movff	_Vrms+1,i2___ftmul@f1+1	;volatile
 28812  01262A  C0CA  F029         	movff	_Vrms+2,i2___ftmul@f1+2	;volatile
 28813  01262E  C0CB  F02A         	movff	_Irms,i2___ftmul@f2	;volatile
 28814  012632  C0CC  F02B         	movff	_Irms+1,i2___ftmul@f2+1	;volatile
 28815  012636  C0CD  F02C         	movff	_Irms+2,i2___ftmul@f2+2	;volatile
 28816  01263A  EC01  F0A8         	call	i2___ftmul	;wreg free
 28817  01263E                     L14:
 28818  01263E  C027  F1BB         	movff	?i2___ftmul,_Avg_Power	;volatile
 28819  012642  C028  F1BC         	movff	?i2___ftmul+1,_Avg_Power+1	;volatile
 28820  012646  C029  F1BD         	movff	?i2___ftmul+2,_Avg_Power+2	;volatile
 28821                           
 28822                           ;main.c: 265: }
 28823                           ;main.c: 267: if (Irms > 5.0) {
 28824  01264A  0E00               	movlw	0
 28825  01264C  6E2A               	movwf	i2___ftge@ff1,c
 28826  01264E  0EA0               	movlw	160
 28827  012650  6E2B               	movwf	i2___ftge@ff1+1,c
 28828  012652  0E40               	movlw	64
 28829  012654  6E2C               	movwf	i2___ftge@ff1+2,c
 28830  012656  C0CB  F02D         	movff	_Irms,i2___ftge@ff2	;volatile
 28831  01265A  C0CC  F02E         	movff	_Irms+1,i2___ftge@ff2+1	;volatile
 28832  01265E  C0CD  F02F         	movff	_Irms+2,i2___ftge@ff2+2	;volatile
 28833  012662  EC20  F0AE         	call	i2___ftge	;wreg free
 28834  012666  B0D8               	btfsc	status,0,c
 28835  012668  0012               	return	
 28836                           
 28837                           ;main.c: 269: LATFbits.LATF3 = 1;
 28838  01266A  867E               	bsf	3966,3,c	;volatile
 28839                           
 28840                           ;main.c: 270: adc_error_flag = 1;
 28841  01266C  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28842                           
 28843                           ;main.c: 272: PIE5bits.TMR7IE == 0;
 28844  01266E  010E               	movlb	14	; () banked
 28845  012670  512E               	movf	46,w,b	;volatile
 28846                           
 28847                           ; BSR set to: 14
 28848                           ;main.c: 273: TMR7_StopTimer();
 28849  012672  EC5A  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 28850                           
 28851                           ;main.c: 276: }
 28852                           ;main.c: 278: break;
 28853                           
 28854                           ;main.c: 274: return;
 28855  012676  0012               	return	
 28856  012678                     
 28857                           ;main.c: 283: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 28858  012678  0EC0               	movlw	192
 28859  01267A  6E18               	movwf	i2___ftdiv@f2,c
 28860  01267C  0E7F               	movlw	127
 28861  01267E  6E19               	movwf	i2___ftdiv@f2+1,c
 28862  012680  0E44               	movlw	68
 28863  012682  6E1A               	movwf	i2___ftdiv@f2+2,c
 28864  012684  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 28865  012688  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 28866  01268C  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 28867  012690  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 28868  012694  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 28869  012698  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 28870  01269C  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 28871  0126A0  ECD2  F0B7         	call	_ADCC_GetConversionResult	;wreg free
 28872  0126A4  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28873  0126A8  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28874  0126AC  EC4D  F0B7         	call	___lwtoft	;wreg free
 28875  0126B0  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 28876  0126B4  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 28877  0126B8  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 28878  0126BC  EC01  F0A8         	call	i2___ftmul	;wreg free
 28879  0126C0  C027  F0B3         	movff	?i2___ftmul,_ADCPostProcessingCallback$3882
 28880  0126C4  C028  F0B4         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$3882+1
 28881  0126C8  C029  F0B5         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$3882+2
 28882                           
 28883                           ;main.c: 283: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 28884  0126CC  C0B3  F027         	movff	_ADCPostProcessingCallback$3882,i2___ftmul@f1
 28885  0126D0  C0B4  F028         	movff	_ADCPostProcessingCallback$3882+1,i2___ftmul@f1+1
 28886  0126D4  C0B5  F029         	movff	_ADCPostProcessingCallback$3882+2,i2___ftmul@f1+2
 28887  0126D8  0EF8               	movlw	248
 28888  0126DA  6E2A               	movwf	i2___ftmul@f2,c
 28889  0126DC  0E80               	movlw	128
 28890  0126DE  6E2B               	movwf	i2___ftmul@f2+1,c
 28891  0126E0  0E40               	movlw	64
 28892  0126E2  6E2C               	movwf	i2___ftmul@f2+2,c
 28893  0126E4  EC01  F0A8         	call	i2___ftmul	;wreg free
 28894  0126E8  C027  F0DA         	movff	?i2___ftmul,_POS12_ADC_Result	;volatile
 28895  0126EC  C028  F0DB         	movff	?i2___ftmul+1,_POS12_ADC_Result+1	;volatile
 28896  0126F0  C029  F0DC         	movff	?i2___ftmul+2,_POS12_ADC_Result+2	;volatile
 28897                           
 28898                           ;main.c: 285: if (POS12_ADC_Result > 13.6) {
 28899  0126F4  0E9A               	movlw	154
 28900  0126F6  6E2A               	movwf	i2___ftge@ff1,c
 28901  0126F8  0E59               	movlw	89
 28902  0126FA  6E2B               	movwf	i2___ftge@ff1+1,c
 28903  0126FC  0E41               	movlw	65
 28904  0126FE  6E2C               	movwf	i2___ftge@ff1+2,c
 28905  012700  C0DA  F02D         	movff	_POS12_ADC_Result,i2___ftge@ff2	;volatile
 28906  012704  C0DB  F02E         	movff	_POS12_ADC_Result+1,i2___ftge@ff2+1	;volatile
 28907  012708  C0DC  F02F         	movff	_POS12_ADC_Result+2,i2___ftge@ff2+2	;volatile
 28908  01270C  EC20  F0AE         	call	i2___ftge	;wreg free
 28909  012710  B0D8               	btfsc	status,0,c
 28910  012712  0012               	return	
 28911                           
 28912                           ;main.c: 287: LATFbits.LATF3 = 1;
 28913  012714  867E               	bsf	3966,3,c	;volatile
 28914                           
 28915                           ;main.c: 288: adc_error_flag = 1;
 28916  012716  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 28917                           
 28918                           ;main.c: 290: PIE5bits.TMR7IE == 0;
 28919  012718  010E               	movlb	14	; () banked
 28920  01271A  512E               	movf	46,w,b	;volatile
 28921                           
 28922                           ; BSR set to: 14
 28923                           ;main.c: 291: TMR7_StopTimer();
 28924  01271C  EC5A  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 28925                           
 28926                           ;main.c: 294: }
 28927                           ;main.c: 296: break;
 28928                           
 28929                           ;main.c: 292: return;
 28930  012720  0012               	return	
 28931  012722                     
 28932                           ;main.c: 301: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 28933  012722  0E00               	movlw	0
 28934  012724  6E18               	movwf	i2___ftdiv@f2,c
 28935  012726  0E00               	movlw	0
 28936  012728  6E19               	movwf	i2___ftdiv@f2+1,c
 28937  01272A  0E40               	movlw	64
 28938  01272C  6E1A               	movwf	i2___ftdiv@f2+2,c
 28939  01272E  C0DD  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1	;volatile
 28940  012732  C0DE  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1	;volatile
 28941  012736  C0DF  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2	;volatile
 28942  01273A  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 28943  01273E  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 28944  012742  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 28945  012746  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 28946  01274A  0E00               	movlw	0
 28947  01274C  6E43               	movwf	i2___ftadd@f2,c
 28948  01274E  0E80               	movlw	128
 28949  012750  6E44               	movwf	i2___ftadd@f2+1,c
 28950  012752  0E3F               	movlw	63
 28951  012754  6E45               	movwf	i2___ftadd@f2+2,c
 28952  012756  0EC0               	movlw	192
 28953  012758  6E18               	movwf	i2___ftdiv@f2,c
 28954  01275A  0E7F               	movlw	127
 28955  01275C  6E19               	movwf	i2___ftdiv@f2+1,c
 28956  01275E  0E44               	movlw	68
 28957  012760  6E1A               	movwf	i2___ftdiv@f2+2,c
 28958  012762  ECD2  F0B7         	call	_ADCC_GetConversionResult	;wreg free
 28959  012766  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 28960  01276A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 28961  01276E  EC4D  F0B7         	call	___lwtoft	;wreg free
 28962  012772  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 28963  012776  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 28964  01277A  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 28965  01277E  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 28966  012782  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 28967  012786  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 28968  01278A  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 28969  01278E  EC3B  F0B7         	call	i2___ftneg	;wreg free
 28970  012792  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 28971  012796  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 28972  01279A  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 28973  01279E  EC05  F0A2         	call	i2___ftadd	;wreg free
 28974  0127A2  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 28975  0127A6  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 28976  0127AA  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 28977  0127AE  EC01  F0A8         	call	i2___ftmul	;wreg free
 28978  0127B2  C027  F0A6         	movff	?i2___ftmul,_ADCPostProcessingCallback$3884
 28979  0127B6  C028  F0A7         	movff	?i2___ftmul+1,_ADCPostProcessingCallback$3884+1
 28980  0127BA  C029  F0A8         	movff	?i2___ftmul+2,_ADCPostProcessingCallback$3884+2
 28981                           
 28982                           ;main.c: 301: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 28983  0127BE  0E04               	movlw	4
 28984  0127C0  6E18               	movwf	i2___ftdiv@f2,c
 28985  0127C2  0EAD               	movlw	173
 28986  0127C4  6E19               	movwf	i2___ftdiv@f2+1,c
 28987  0127C6  0E3A               	movlw	58
 28988  0127C8  6E1A               	movwf	i2___ftdiv@f2+2,c
 28989  0127CA  0EB4               	movlw	180
 28990  0127CC  6E43               	movwf	i2___ftadd@f2,c
 28991  0127CE  0E28               	movlw	40
 28992  0127D0  6E44               	movwf	i2___ftadd@f2+1,c
 28993  0127D2  0E3F               	movlw	63
 28994  0127D4  6E45               	movwf	i2___ftadd@f2+2,c
 28995  0127D6  C0A6  F024         	movff	_ADCPostProcessingCallback$3884,i2___ftneg@f1
 28996  0127DA  C0A7  F025         	movff	_ADCPostProcessingCallback$3884+1,i2___ftneg@f1+1
 28997  0127DE  C0A8  F026         	movff	_ADCPostProcessingCallback$3884+2,i2___ftneg@f1+2
 28998  0127E2  EC3B  F0B7         	call	i2___ftneg	;wreg free
 28999  0127E6  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29000  0127EA  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29001  0127EE  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29002  0127F2  EC05  F0A2         	call	i2___ftadd	;wreg free
 29003  0127F6  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 29004  0127FA  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 29005  0127FE  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 29006  012802  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 29007  012806  C015  F0A9         	movff	?i2___ftdiv,_ADCPostProcessingCallback$3885
 29008  01280A  C016  F0AA         	movff	?i2___ftdiv+1,_ADCPostProcessingCallback$3885+1
 29009  01280E  C017  F0AB         	movff	?i2___ftdiv+2,_ADCPostProcessingCallback$3885+2
 29010                           
 29011                           ;main.c: 301: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29012  012812  C0F7  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2	;volatile
 29013  012816  C0F8  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1	;volatile
 29014  01281A  C0F9  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2	;volatile
 29015  01281E  C0A9  F040         	movff	_ADCPostProcessingCallback$3885,i2___ftadd@f1
 29016  012822  C0AA  F041         	movff	_ADCPostProcessingCallback$3885+1,i2___ftadd@f1+1
 29017  012826  C0AB  F042         	movff	_ADCPostProcessingCallback$3885+2,i2___ftadd@f1+2
 29018  01282A  EC05  F0A2         	call	i2___ftadd	;wreg free
 29019  01282E  C040  F0AC         	movff	?i2___ftadd,_ADCPostProcessingCallback$3886
 29020  012832  C041  F0AD         	movff	?i2___ftadd+1,_ADCPostProcessingCallback$3886+1
 29021  012836  C042  F0AE         	movff	?i2___ftadd+2,_ADCPostProcessingCallback$3886+2
 29022                           
 29023                           ;main.c: 301: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 29024  01283A  C0AC  F040         	movff	_ADCPostProcessingCallback$3886,i2___ftadd@f1
 29025  01283E  C0AD  F041         	movff	_ADCPostProcessingCallback$3886+1,i2___ftadd@f1+1
 29026  012842  C0AE  F042         	movff	_ADCPostProcessingCallback$3886+2,i2___ftadd@f1+2
 29027  012846  0E00               	movlw	0
 29028  012848  6E43               	movwf	i2___ftadd@f2,c
 29029  01284A  0E20               	movlw	32
 29030  01284C  6E44               	movwf	i2___ftadd@f2+1,c
 29031  01284E  0EC2               	movlw	194
 29032  012850  6E45               	movwf	i2___ftadd@f2+2,c
 29033  012852  EC05  F0A2         	call	i2___ftadd	;wreg free
 29034  012856  C040  F0D7         	movff	?i2___ftadd,_Temp_ADC_Result	;volatile
 29035  01285A  C041  F0D8         	movff	?i2___ftadd+1,_Temp_ADC_Result+1	;volatile
 29036  01285E  C042  F0D9         	movff	?i2___ftadd+2,_Temp_ADC_Result+2	;volatile
 29037                           
 29038                           ;main.c: 303: if (Temp_ADC_Result > 40.0) {
 29039  012862  0E00               	movlw	0
 29040  012864  6E2A               	movwf	i2___ftge@ff1,c
 29041  012866  0E20               	movlw	32
 29042  012868  6E2B               	movwf	i2___ftge@ff1+1,c
 29043  01286A  0E42               	movlw	66
 29044  01286C  6E2C               	movwf	i2___ftge@ff1+2,c
 29045  01286E  C0D7  F02D         	movff	_Temp_ADC_Result,i2___ftge@ff2	;volatile
 29046  012872  C0D8  F02E         	movff	_Temp_ADC_Result+1,i2___ftge@ff2+1	;volatile
 29047  012876  C0D9  F02F         	movff	_Temp_ADC_Result+2,i2___ftge@ff2+2	;volatile
 29048  01287A  EC20  F0AE         	call	i2___ftge	;wreg free
 29049  01287E  B0D8               	btfsc	status,0,c
 29050  012880  0012               	return	
 29051                           
 29052                           ;main.c: 305: LATFbits.LATF3 = 1;
 29053  012882  867E               	bsf	3966,3,c	;volatile
 29054                           
 29055                           ;main.c: 306: adc_error_flag = 1;
 29056  012884  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29057                           
 29058                           ;main.c: 308: PIE5bits.TMR7IE == 0;
 29059  012886  010E               	movlb	14	; () banked
 29060  012888  512E               	movf	46,w,b	;volatile
 29061                           
 29062                           ; BSR set to: 14
 29063                           ;main.c: 309: TMR7_StopTimer();
 29064  01288A  EC5A  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29065                           
 29066                           ;main.c: 312: }
 29067                           ;main.c: 314: break;
 29068                           
 29069                           ;main.c: 310: return;
 29070  01288E  0012               	return	
 29071  012890                     i2l913:
 29072                           
 29073                           ; BSR set to: 0
 29074                           ;main.c: 319: LATFbits.LATF3 = 1;
 29075  012890  867E               	bsf	3966,3,c	;volatile
 29076                           
 29077                           ;main.c: 320: adc_error_flag = 1;
 29078  012892  805E               	bsf	_adc_error_flag/(0+8),_adc_error_flag& (0+7),c	;volatile
 29079                           
 29080                           ; BSR set to: 0
 29081                           ;main.c: 322: PIE5bits.TMR7IE == 0;
 29082  012894  010E               	movlb	14	; () banked
 29083  012896  512E               	movf	46,w,b	;volatile
 29084                           
 29085                           ; BSR set to: 14
 29086                           ;main.c: 323: TMR7_StopTimer();
 29087  012898  EC5A  F0B8         	call	i2_TMR7_StopTimer	;wreg free
 29088                           
 29089                           ;main.c: 326: }
 29090                           
 29091                           ;main.c: 324: break;
 29092  01289C  0012               	return	
 29093  01289E                     i2l890:
 29094  01289E  0100               	movlb	0	; () banked
 29095  0128A0  51AF               	movf	ADCPostProcessingCallback@currentADCChannel& (0+255),w,b
 29096                           
 29097                           ; Switch size 1, requested type "space"
 29098                           ; Number of cases is 6, Range of values is 0 to 63
 29099                           ; switch strategies available:
 29100                           ; Name         Instructions Cycles
 29101                           ; simple_byte           19    10 (average)
 29102                           ;	Chosen strategy is simple_byte
 29103  0128A2  0A00               	xorlw	0	; case 0
 29104  0128A4  B4D8               	btfsc	status,2,c
 29105  0128A6  D5B6               	goto	i2l901
 29106  0128A8  0A04               	xorlw	4	; case 4
 29107  0128AA  B4D8               	btfsc	status,2,c
 29108  0128AC  D6E5               	goto	i2l909
 29109  0128AE  0A26               	xorlw	38	; case 34
 29110  0128B0  B4D8               	btfsc	status,2,c
 29111  0128B2  D569               	goto	i2l899
 29112  0128B4  0A1E               	xorlw	30	; case 60
 29113  0128B6  B4D8               	btfsc	status,2,c
 29114  0128B8  D4CE               	goto	i2l891
 29115  0128BA  0A01               	xorlw	1	; case 61
 29116  0128BC  B4D8               	btfsc	status,2,c
 29117  0128BE  D731               	goto	i2l911
 29118  0128C0  0A02               	xorlw	2	; case 63
 29119  0128C2  B4D8               	btfsc	status,2,c
 29120  0128C4  D4FB               	goto	i2l895
 29121  0128C6  D7E4               	goto	i2l913
 29122  0128C8                     __end_of_ADCPostProcessingCallback:
 29123                           	opt stack 0
 29124                           tosu	equ	0xFFF
 29125                           tosh	equ	0xFFE
 29126                           tosl	equ	0xFFD
 29127                           pclatu	equ	0xFFB
 29128                           pclath	equ	0xFFA
 29129                           tblptru	equ	0xFF8
 29130                           tblptrh	equ	0xFF7
 29131                           tblptrl	equ	0xFF6
 29132                           tablat	equ	0xFF5
 29133                           prodh	equ	0xFF4
 29134                           prodl	equ	0xFF3
 29135                           intcon	equ	0xFF2
 29136                           indf0	equ	0xFEF
 29137                           postinc0	equ	0xFEE
 29138                           fsr0h	equ	0xFEA
 29139                           fsr0l	equ	0xFE9
 29140                           wreg	equ	0xFE8
 29141                           indf1	equ	0xFE7
 29142                           postdec1	equ	0xFE5
 29143                           plusw1	equ	0xFE3
 29144                           fsr1h	equ	0xFE2
 29145                           fsr1l	equ	0xFE1
 29146                           bsr	equ	0xFE0
 29147                           indf2	equ	0xFDF
 29148                           postinc2	equ	0xFDE
 29149                           postdec2	equ	0xFDD
 29150                           plusw2	equ	0xFDB
 29151                           fsr2h	equ	0xFDA
 29152                           fsr2l	equ	0xFD9
 29153                           status	equ	0xFD8
 29154                           
 29155 ;; *************** function i2_TMR7_StopTimer *****************
 29156 ;; Defined at:
 29157 ;;		line 105 in file "mcc_generated_files/tmr7.c"
 29158 ;; Parameters:    Size  Location     Type
 29159 ;;		None
 29160 ;; Auto vars:     Size  Location     Type
 29161 ;;		None
 29162 ;; Return value:  Size  Location     Type
 29163 ;;                  1    wreg      void 
 29164 ;; Registers used:
 29165 ;;		None
 29166 ;; Tracked objects:
 29167 ;;		On entry : 0/0
 29168 ;;		On exit  : 0/0
 29169 ;;		Unchanged: 0/0
 29170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29175 ;;Total ram usage:        0 bytes
 29176 ;; Hardware stack levels used:    1
 29177 ;; This function calls:
 29178 ;;		Nothing
 29179 ;; This function is called by:
 29180 ;;		_ADCPostProcessingCallback
 29181 ;; This function uses a non-reentrant model
 29182 ;;
 29183                           
 29184                           	psect	text105
 29185  0170B4                     __ptext105:
 29186                           	opt stack 0
 29187  0170B4                     i2_TMR7_StopTimer:
 29188                           	opt stack 15
 29189                           
 29190                           ;tmr7.c: 108: T7CONbits.TMR7ON = 0;
 29191                           
 29192                           ;incstack = 0
 29193  0170B4  010F               	movlb	15	; () banked
 29194  0170B6  9130               	bcf	48,0,b	;volatile
 29195                           
 29196                           ; BSR set to: 15
 29197  0170B8  0012               	return		;funcret
 29198  0170BA                     __end_ofi2_TMR7_StopTimer:
 29199                           	opt stack 0
 29200                           tosu	equ	0xFFF
 29201                           tosh	equ	0xFFE
 29202                           tosl	equ	0xFFD
 29203                           pclatu	equ	0xFFB
 29204                           pclath	equ	0xFFA
 29205                           tblptru	equ	0xFF8
 29206                           tblptrh	equ	0xFF7
 29207                           tblptrl	equ	0xFF6
 29208                           tablat	equ	0xFF5
 29209                           prodh	equ	0xFF4
 29210                           prodl	equ	0xFF3
 29211                           intcon	equ	0xFF2
 29212                           indf0	equ	0xFEF
 29213                           postinc0	equ	0xFEE
 29214                           fsr0h	equ	0xFEA
 29215                           fsr0l	equ	0xFE9
 29216                           wreg	equ	0xFE8
 29217                           indf1	equ	0xFE7
 29218                           postdec1	equ	0xFE5
 29219                           plusw1	equ	0xFE3
 29220                           fsr1h	equ	0xFE2
 29221                           fsr1l	equ	0xFE1
 29222                           bsr	equ	0xFE0
 29223                           indf2	equ	0xFDF
 29224                           postinc2	equ	0xFDE
 29225                           postdec2	equ	0xFDD
 29226                           plusw2	equ	0xFDB
 29227                           fsr2h	equ	0xFDA
 29228                           fsr2l	equ	0xFD9
 29229                           status	equ	0xFD8
 29230                           
 29231 ;; *************** function _peakToRMS *****************
 29232 ;; Defined at:
 29233 ;;		line 94 in file "main.c"
 29234 ;; Parameters:    Size  Location     Type
 29235 ;;  Peak            3   52[BANK0 ] void 
 29236 ;;  Angle           3   55[BANK0 ] void 
 29237 ;; Auto vars:     Size  Location     Type
 29238 ;;  RMS             3   67[BANK0 ] void 
 29239 ;; Return value:  Size  Location     Type
 29240 ;;                  3   52[BANK0 ] void 
 29241 ;; Registers used:
 29242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29243 ;; Tracked objects:
 29244 ;;		On entry : 0/0
 29245 ;;		On exit  : 0/0
 29246 ;;		Unchanged: 0/0
 29247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29248 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29249 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29251 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29252 ;;Total ram usage:       18 bytes
 29253 ;; Hardware stack levels used:    1
 29254 ;; Hardware stack levels required when called:    6
 29255 ;; This function calls:
 29256 ;;		_acos
 29257 ;;		_sin
 29258 ;;		_sqrt
 29259 ;;		i2___ftadd
 29260 ;;		i2___ftdiv
 29261 ;;		i2___ftmul
 29262 ;;		i2___ftneg
 29263 ;; This function is called by:
 29264 ;;		_ADCPostProcessingCallback
 29265 ;; This function uses a non-reentrant model
 29266 ;;
 29267                           
 29268                           	psect	text106
 29269  013ED4                     __ptext106:
 29270                           	opt stack 0
 29271  013ED4                     _peakToRMS:
 29272                           	opt stack 9
 29273                           
 29274                           ;main.c: 97: double RMS = 0.0;
 29275                           
 29276                           ; BSR set to: 15
 29277                           ;incstack = 0
 29278  013ED4  0E00               	movlw	0
 29279  013ED6  0100               	movlb	0	; () banked
 29280  013ED8  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 29281  013EDA  0E00               	movlw	0
 29282  013EDC  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 29283  013EDE  0E00               	movlw	0
 29284  013EE0  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 29285                           
 29286                           ; BSR set to: 0
 29287                           ;main.c: 100: RMS = 2.0 * acos(-1.0);
 29288  013EE2  0E00               	movlw	0
 29289  013EE4  6F8E               	movwf	acos@x& (0+255),b
 29290  013EE6  0E80               	movlw	128
 29291  013EE8  6F8F               	movwf	(acos@x+1)& (0+255),b
 29292  013EEA  0EBF               	movlw	191
 29293  013EEC  6F90               	movwf	(acos@x+2)& (0+255),b
 29294  013EEE  EC90  F0B3         	call	_acos	;wreg free
 29295  013EF2  C08E  F0A0         	movff	?_acos,_peakToRMS$3879
 29296  013EF6  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3879+1
 29297  013EFA  C090  F0A2         	movff	?_acos+2,_peakToRMS$3879+2
 29298                           
 29299                           ;main.c: 100: RMS = 2.0 * acos(-1.0);
 29300  013EFE  C0A0  F027         	movff	_peakToRMS$3879,i2___ftmul@f1
 29301  013F02  C0A1  F028         	movff	_peakToRMS$3879+1,i2___ftmul@f1+1
 29302  013F06  C0A2  F029         	movff	_peakToRMS$3879+2,i2___ftmul@f1+2
 29303  013F0A  0E00               	movlw	0
 29304  013F0C  6E2A               	movwf	i2___ftmul@f2,c
 29305  013F0E  0E00               	movlw	0
 29306  013F10  6E2B               	movwf	i2___ftmul@f2+1,c
 29307  013F12  0E40               	movlw	64
 29308  013F14  6E2C               	movwf	i2___ftmul@f2+2,c
 29309  013F16  EC01  F0A8         	call	i2___ftmul	;wreg free
 29310  013F1A  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 29311  013F1E  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 29312  013F22  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 29313                           
 29314                           ;main.c: 101: RMS = RMS - (2.0 * Angle);
 29315  013F26  0E00               	movlw	0
 29316  013F28  6E2A               	movwf	i2___ftmul@f2,c
 29317  013F2A  0E00               	movlw	0
 29318  013F2C  6E2B               	movwf	i2___ftmul@f2+1,c
 29319  013F2E  0E40               	movlw	64
 29320  013F30  6E2C               	movwf	i2___ftmul@f2+2,c
 29321  013F32  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 29322  013F36  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 29323  013F3A  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 29324  013F3E  EC01  F0A8         	call	i2___ftmul	;wreg free
 29325  013F42  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 29326  013F46  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 29327  013F4A  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 29328  013F4E  EC3B  F0B7         	call	i2___ftneg	;wreg free
 29329  013F52  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29330  013F56  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29331  013F5A  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29332  013F5E  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 29333  013F62  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 29334  013F66  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 29335  013F6A  EC05  F0A2         	call	i2___ftadd	;wreg free
 29336  013F6E  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 29337  013F72  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 29338  013F76  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 29339                           
 29340                           ;main.c: 102: RMS = RMS + sin(2.0 * Angle);
 29341  013F7A  0E00               	movlw	0
 29342  013F7C  6E2A               	movwf	i2___ftmul@f2,c
 29343  013F7E  0E00               	movlw	0
 29344  013F80  6E2B               	movwf	i2___ftmul@f2+1,c
 29345  013F82  0E40               	movlw	64
 29346  013F84  6E2C               	movwf	i2___ftmul@f2+2,c
 29347  013F86  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 29348  013F8A  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 29349  013F8E  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 29350  013F92  EC01  F0A8         	call	i2___ftmul	;wreg free
 29351  013F96  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3880
 29352  013F9A  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3880+1
 29353  013F9E  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3880+2
 29354                           
 29355                           ;main.c: 102: RMS = RMS + sin(2.0 * Angle);
 29356  013FA2  C09A  F066         	movff	_peakToRMS$3880,sin@f
 29357  013FA6  C09B  F067         	movff	_peakToRMS$3880+1,sin@f+1
 29358  013FAA  C09C  F068         	movff	_peakToRMS$3880+2,sin@f+2
 29359  013FAE  EC3B  F09E         	call	_sin	;wreg free
 29360  013FB2  C066  F09D         	movff	?_sin,_peakToRMS$3881
 29361  013FB6  C067  F09E         	movff	?_sin+1,_peakToRMS$3881+1
 29362  013FBA  C068  F09F         	movff	?_sin+2,_peakToRMS$3881+2
 29363                           
 29364                           ;main.c: 102: RMS = RMS + sin(2.0 * Angle);
 29365  013FBE  C09D  F040         	movff	_peakToRMS$3881,i2___ftadd@f1
 29366  013FC2  C09E  F041         	movff	_peakToRMS$3881+1,i2___ftadd@f1+1
 29367  013FC6  C09F  F042         	movff	_peakToRMS$3881+2,i2___ftadd@f1+2
 29368  013FCA  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 29369  013FCE  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 29370  013FD2  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 29371  013FD6  EC05  F0A2         	call	i2___ftadd	;wreg free
 29372  013FDA  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 29373  013FDE  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 29374  013FE2  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 29375                           
 29376                           ;main.c: 103: RMS = RMS / (4.0 * acos(-1.0));
 29377  013FE6  0E00               	movlw	0
 29378  013FE8  0100               	movlb	0	; () banked
 29379  013FEA  6F8E               	movwf	acos@x& (0+255),b
 29380  013FEC  0E80               	movlw	128
 29381  013FEE  6F8F               	movwf	(acos@x+1)& (0+255),b
 29382  013FF0  0EBF               	movlw	191
 29383  013FF2  6F90               	movwf	(acos@x+2)& (0+255),b
 29384  013FF4  EC90  F0B3         	call	_acos	;wreg free
 29385  013FF8  C08E  F0A0         	movff	?_acos,_peakToRMS$3879
 29386  013FFC  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3879+1
 29387  014000  C090  F0A2         	movff	?_acos+2,_peakToRMS$3879+2
 29388                           
 29389                           ;main.c: 103: RMS = RMS / (4.0 * acos(-1.0));
 29390  014004  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 29391  014008  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 29392  01400C  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 29393  014010  0E00               	movlw	0
 29394  014012  6E2A               	movwf	i2___ftmul@f2,c
 29395  014014  0E80               	movlw	128
 29396  014016  6E2B               	movwf	i2___ftmul@f2+1,c
 29397  014018  0E40               	movlw	64
 29398  01401A  6E2C               	movwf	i2___ftmul@f2+2,c
 29399  01401C  C0A0  F027         	movff	_peakToRMS$3879,i2___ftmul@f1
 29400  014020  C0A1  F028         	movff	_peakToRMS$3879+1,i2___ftmul@f1+1
 29401  014024  C0A2  F029         	movff	_peakToRMS$3879+2,i2___ftmul@f1+2
 29402  014028  EC01  F0A8         	call	i2___ftmul	;wreg free
 29403  01402C  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 29404  014030  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 29405  014034  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 29406  014038  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 29407  01403C  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 29408  014040  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 29409  014044  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 29410                           
 29411                           ;main.c: 104: RMS = sqrt(RMS);
 29412  014048  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 29413  01404C  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 29414  014050  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 29415  014054  ECDB  F0A2         	call	_sqrt	;wreg free
 29416  014058  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 29417  01405C  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 29418  014060  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 29419                           
 29420                           ;main.c: 105: RMS = Peak * RMS;
 29421  014064  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 29422  014068  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 29423  01406C  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 29424  014070  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 29425  014074  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 29426  014078  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 29427  01407C  EC01  F0A8         	call	i2___ftmul	;wreg free
 29428  014080  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 29429  014084  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 29430  014088  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 29431                           
 29432                           ;main.c: 106: return RMS;
 29433  01408C  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 29434  014090  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 29435  014094  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 29436  014098  0012               	return	
 29437  01409A                     __end_of_peakToRMS:
 29438                           	opt stack 0
 29439                           tosu	equ	0xFFF
 29440                           tosh	equ	0xFFE
 29441                           tosl	equ	0xFFD
 29442                           pclatu	equ	0xFFB
 29443                           pclath	equ	0xFFA
 29444                           tblptru	equ	0xFF8
 29445                           tblptrh	equ	0xFF7
 29446                           tblptrl	equ	0xFF6
 29447                           tablat	equ	0xFF5
 29448                           prodh	equ	0xFF4
 29449                           prodl	equ	0xFF3
 29450                           intcon	equ	0xFF2
 29451                           indf0	equ	0xFEF
 29452                           postinc0	equ	0xFEE
 29453                           fsr0h	equ	0xFEA
 29454                           fsr0l	equ	0xFE9
 29455                           wreg	equ	0xFE8
 29456                           indf1	equ	0xFE7
 29457                           postdec1	equ	0xFE5
 29458                           plusw1	equ	0xFE3
 29459                           fsr1h	equ	0xFE2
 29460                           fsr1l	equ	0xFE1
 29461                           bsr	equ	0xFE0
 29462                           indf2	equ	0xFDF
 29463                           postinc2	equ	0xFDE
 29464                           postdec2	equ	0xFDD
 29465                           plusw2	equ	0xFDB
 29466                           fsr2h	equ	0xFDA
 29467                           fsr2l	equ	0xFD9
 29468                           status	equ	0xFD8
 29469                           
 29470 ;; *************** function _acos *****************
 29471 ;; Defined at:
 29472 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 29473 ;; Parameters:    Size  Location     Type
 29474 ;;  x               3   46[BANK0 ] void 
 29475 ;; Auto vars:     Size  Location     Type
 29476 ;;		None
 29477 ;; Return value:  Size  Location     Type
 29478 ;;                  3   46[BANK0 ] void 
 29479 ;; Registers used:
 29480 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29481 ;; Tracked objects:
 29482 ;;		On entry : 0/0
 29483 ;;		On exit  : 0/0
 29484 ;;		Unchanged: 0/0
 29485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29486 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29487 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29489 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29490 ;;Total ram usage:        6 bytes
 29491 ;; Hardware stack levels used:    1
 29492 ;; Hardware stack levels required when called:    5
 29493 ;; This function calls:
 29494 ;;		_asin
 29495 ;;		i2___ftadd
 29496 ;;		i2___ftneg
 29497 ;; This function is called by:
 29498 ;;		_peakToRMS
 29499 ;; This function uses a non-reentrant model
 29500 ;;
 29501                           
 29502                           	psect	text107
 29503  016720                     __ptext107:
 29504                           	opt stack 0
 29505  016720                     _acos:
 29506                           	opt stack 9
 29507                           
 29508                           ;incstack = 0
 29509  016720  C08E  F079         	movff	acos@x,asin@x
 29510  016724  C08F  F07A         	movff	acos@x+1,asin@x+1
 29511  016728  C090  F07B         	movff	acos@x+2,asin@x+2
 29512  01672C  EC05  F09D         	call	_asin	;wreg free
 29513  016730  C079  F091         	movff	?_asin,_acos$3887
 29514  016734  C07A  F092         	movff	?_asin+1,_acos$3887+1
 29515  016738  C07B  F093         	movff	?_asin+2,_acos$3887+2
 29516  01673C  C091  F024         	movff	_acos$3887,i2___ftneg@f1
 29517  016740  C092  F025         	movff	_acos$3887+1,i2___ftneg@f1+1
 29518  016744  C093  F026         	movff	_acos$3887+2,i2___ftneg@f1+2
 29519  016748  EC3B  F0B7         	call	i2___ftneg	;wreg free
 29520  01674C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29521  016750  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29522  016754  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29523  016758  0E10               	movlw	16
 29524  01675A  6E43               	movwf	i2___ftadd@f2,c
 29525  01675C  0EC9               	movlw	201
 29526  01675E  6E44               	movwf	i2___ftadd@f2+1,c
 29527  016760  0E3F               	movlw	63
 29528  016762  6E45               	movwf	i2___ftadd@f2+2,c
 29529  016764  EC05  F0A2         	call	i2___ftadd	;wreg free
 29530  016768  C040  F08E         	movff	?i2___ftadd,?_acos
 29531  01676C  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 29532  016770  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 29533  016774  0012               	return	
 29534  016776                     __end_of_acos:
 29535                           	opt stack 0
 29536                           tosu	equ	0xFFF
 29537                           tosh	equ	0xFFE
 29538                           tosl	equ	0xFFD
 29539                           pclatu	equ	0xFFB
 29540                           pclath	equ	0xFFA
 29541                           tblptru	equ	0xFF8
 29542                           tblptrh	equ	0xFF7
 29543                           tblptrl	equ	0xFF6
 29544                           tablat	equ	0xFF5
 29545                           prodh	equ	0xFF4
 29546                           prodl	equ	0xFF3
 29547                           intcon	equ	0xFF2
 29548                           indf0	equ	0xFEF
 29549                           postinc0	equ	0xFEE
 29550                           fsr0h	equ	0xFEA
 29551                           fsr0l	equ	0xFE9
 29552                           wreg	equ	0xFE8
 29553                           indf1	equ	0xFE7
 29554                           postdec1	equ	0xFE5
 29555                           plusw1	equ	0xFE3
 29556                           fsr1h	equ	0xFE2
 29557                           fsr1l	equ	0xFE1
 29558                           bsr	equ	0xFE0
 29559                           indf2	equ	0xFDF
 29560                           postinc2	equ	0xFDE
 29561                           postdec2	equ	0xFDD
 29562                           plusw2	equ	0xFDB
 29563                           fsr2h	equ	0xFDA
 29564                           fsr2l	equ	0xFD9
 29565                           status	equ	0xFD8
 29566                           
 29567 ;; *************** function _asin *****************
 29568 ;; Defined at:
 29569 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 29570 ;; Parameters:    Size  Location     Type
 29571 ;;  x               3   25[BANK0 ] void 
 29572 ;; Auto vars:     Size  Location     Type
 29573 ;;  y               3   40[BANK0 ] void 
 29574 ;;  sgn             3   28[BANK0 ] void 
 29575 ;; Return value:  Size  Location     Type
 29576 ;;                  3   25[BANK0 ] void 
 29577 ;; Registers used:
 29578 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29579 ;; Tracked objects:
 29580 ;;		On entry : 0/0
 29581 ;;		On exit  : 0/0
 29582 ;;		Unchanged: 0/0
 29583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29584 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29585 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29587 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29588 ;;Total ram usage:       21 bytes
 29589 ;; Hardware stack levels used:    1
 29590 ;; Hardware stack levels required when called:    4
 29591 ;; This function calls:
 29592 ;;		_atan
 29593 ;;		_fabs
 29594 ;;		_sqrt
 29595 ;;		i2___ftadd
 29596 ;;		i2___ftdiv
 29597 ;;		i2___ftge
 29598 ;;		i2___ftmul
 29599 ;;		i2___ftneg
 29600 ;; This function is called by:
 29601 ;;		_acos
 29602 ;; This function uses a non-reentrant model
 29603 ;;
 29604                           
 29605                           	psect	text108
 29606  013A0A                     __ptext108:
 29607                           	opt stack 0
 29608  013A0A                     _asin:
 29609                           	opt stack 9
 29610                           
 29611                           ;incstack = 0
 29612  013A0A  0E00               	movlw	0
 29613  013A0C  6E2A               	movwf	i2___ftge@ff1,c
 29614  013A0E  0E80               	movlw	128
 29615  013A10  6E2B               	movwf	i2___ftge@ff1+1,c
 29616  013A12  0E3F               	movlw	63
 29617  013A14  6E2C               	movwf	i2___ftge@ff1+2,c
 29618  013A16  C079  F027         	movff	asin@x,fabs@d
 29619  013A1A  C07A  F028         	movff	asin@x+1,fabs@d+1
 29620  013A1E  C07B  F029         	movff	asin@x+2,fabs@d+2
 29621  013A22  EC86  F0B6         	call	_fabs	;wreg free
 29622  013A26  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 29623  013A2A  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 29624  013A2E  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 29625  013A32  EC20  F0AE         	call	i2___ftge	;wreg free
 29626  013A36  B0D8               	btfsc	status,0,c
 29627  013A38  D00D               	goto	i2l1552
 29628  013A3A  0E00               	movlw	0
 29629  013A3C  0102               	movlb	2	; () banked
 29630  013A3E  6F41               	movwf	(_errno+1)& (0+255),b
 29631  013A40  0E21               	movlw	33
 29632  013A42  6F40               	movwf	_errno& (0+255),b
 29633  013A44  0E00               	movlw	0
 29634  013A46  0100               	movlb	0	; () banked
 29635  013A48  6F79               	movwf	?_asin& (0+255),b
 29636  013A4A  0E00               	movlw	0
 29637  013A4C  6F7A               	movwf	(?_asin+1)& (0+255),b
 29638  013A4E  0E00               	movlw	0
 29639  013A50  6F7B               	movwf	(?_asin+2)& (0+255),b
 29640                           
 29641                           ; BSR set to: 0
 29642  013A52  0012               	return	
 29643  013A54                     i2l1552:
 29644                           
 29645                           ; BSR set to: 0
 29646  013A54  0E00               	movlw	0
 29647  013A56  0100               	movlb	0	; () banked
 29648  013A58  6F7C               	movwf	asin@sgn& (0+255),b
 29649  013A5A  0E80               	movlw	128
 29650  013A5C  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 29651  013A5E  0E3F               	movlw	63
 29652  013A60  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 29653                           
 29654                           ; BSR set to: 0
 29655  013A62  C079  F02A         	movff	asin@x,i2___ftmul@f2
 29656  013A66  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 29657  013A6A  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 29658  013A6E  C079  F027         	movff	asin@x,i2___ftmul@f1
 29659  013A72  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 29660  013A76  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 29661  013A7A  EC01  F0A8         	call	i2___ftmul	;wreg free
 29662  013A7E  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 29663  013A82  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 29664  013A86  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 29665  013A8A  EC3B  F0B7         	call	i2___ftneg	;wreg free
 29666  013A8E  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29667  013A92  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29668  013A96  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29669  013A9A  0E00               	movlw	0
 29670  013A9C  6E43               	movwf	i2___ftadd@f2,c
 29671  013A9E  0E80               	movlw	128
 29672  013AA0  6E44               	movwf	i2___ftadd@f2+1,c
 29673  013AA2  0E3F               	movlw	63
 29674  013AA4  6E45               	movwf	i2___ftadd@f2+2,c
 29675  013AA6  EC05  F0A2         	call	i2___ftadd	;wreg free
 29676  013AAA  C040  F07F         	movff	?i2___ftadd,_asin$3888
 29677  013AAE  C041  F080         	movff	?i2___ftadd+1,_asin$3888+1
 29678  013AB2  C042  F081         	movff	?i2___ftadd+2,_asin$3888+2
 29679  013AB6  C07F  F066         	movff	_asin$3888,sqrt@a
 29680  013ABA  C080  F067         	movff	_asin$3888+1,sqrt@a+1
 29681  013ABE  C081  F068         	movff	_asin$3888+2,sqrt@a+2
 29682  013AC2  ECDB  F0A2         	call	_sqrt	;wreg free
 29683  013AC6  C066  F088         	movff	?_sqrt,asin@y
 29684  013ACA  C067  F089         	movff	?_sqrt+1,asin@y+1
 29685  013ACE  C068  F08A         	movff	?_sqrt+2,asin@y+2
 29686  013AD2  C079  F027         	movff	asin@x,fabs@d
 29687  013AD6  C07A  F028         	movff	asin@x+1,fabs@d+1
 29688  013ADA  C07B  F029         	movff	asin@x+2,fabs@d+2
 29689  013ADE  EC86  F0B6         	call	_fabs	;wreg free
 29690  013AE2  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 29691  013AE6  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 29692  013AEA  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 29693  013AEE  0EC3               	movlw	195
 29694  013AF0  6E2D               	movwf	i2___ftge@ff2,c
 29695  013AF2  0E35               	movlw	53
 29696  013AF4  6E2E               	movwf	i2___ftge@ff2+1,c
 29697  013AF6  0E3F               	movlw	63
 29698  013AF8  6E2F               	movwf	i2___ftge@ff2+2,c
 29699  013AFA  EC20  F0AE         	call	i2___ftge	;wreg free
 29700  013AFE  B0D8               	btfsc	status,0,c
 29701  013B00  D023               	goto	i2l1554
 29702  013B02  C079  F015         	movff	asin@x,i2___ftdiv@f1
 29703  013B06  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 29704  013B0A  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 29705  013B0E  C088  F018         	movff	asin@y,i2___ftdiv@f2
 29706  013B12  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 29707  013B16  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 29708  013B1A  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 29709  013B1E  C015  F08B         	movff	?i2___ftdiv,_asin$3889
 29710  013B22  C016  F08C         	movff	?i2___ftdiv+1,_asin$3889+1
 29711  013B26  C017  F08D         	movff	?i2___ftdiv+2,_asin$3889+2
 29712  013B2A  C08B  F058         	movff	_asin$3889,atan@f
 29713  013B2E  C08C  F059         	movff	_asin$3889+1,atan@f+1
 29714  013B32  C08D  F05A         	movff	_asin$3889+2,atan@f+2
 29715  013B36  EC4D  F0A0         	call	_atan	;wreg free
 29716  013B3A  C058  F079         	movff	?_atan,?_asin
 29717  013B3E  C059  F07A         	movff	?_atan+1,?_asin+1
 29718  013B42  C05A  F07B         	movff	?_atan+2,?_asin+2
 29719  013B46  0012               	return	
 29720  013B48                     i2l1554:
 29721  013B48  0100               	movlb	0	; () banked
 29722  013B4A  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 29723  013B4C  D055               	goto	i2l1555
 29724                           
 29725                           ; BSR set to: 0
 29726  013B4E  C079  F018         	movff	asin@x,i2___ftdiv@f2
 29727  013B52  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 29728  013B56  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 29729  013B5A  C088  F024         	movff	asin@y,i2___ftneg@f1
 29730  013B5E  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 29731  013B62  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 29732  013B66  EC3B  F0B7         	call	i2___ftneg	;wreg free
 29733  013B6A  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 29734  013B6E  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 29735  013B72  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 29736  013B76  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 29737  013B7A  C015  F08B         	movff	?i2___ftdiv,_asin$3889
 29738  013B7E  C016  F08C         	movff	?i2___ftdiv+1,_asin$3889+1
 29739  013B82  C017  F08D         	movff	?i2___ftdiv+2,_asin$3889+2
 29740  013B86  C08B  F058         	movff	_asin$3889,atan@f
 29741  013B8A  C08C  F059         	movff	_asin$3889+1,atan@f+1
 29742  013B8E  C08D  F05A         	movff	_asin$3889+2,atan@f+2
 29743  013B92  EC4D  F0A0         	call	_atan	;wreg free
 29744  013B96  C058  F085         	movff	?_atan,_asin$3890
 29745  013B9A  C059  F086         	movff	?_atan+1,_asin$3890+1
 29746  013B9E  C05A  F087         	movff	?_atan+2,_asin$3890+2
 29747  013BA2  0E10               	movlw	16
 29748  013BA4  6E43               	movwf	i2___ftadd@f2,c
 29749  013BA6  0EC9               	movlw	201
 29750  013BA8  6E44               	movwf	i2___ftadd@f2+1,c
 29751  013BAA  0E3F               	movlw	63
 29752  013BAC  6E45               	movwf	i2___ftadd@f2+2,c
 29753  013BAE  C085  F024         	movff	_asin$3890,i2___ftneg@f1
 29754  013BB2  C086  F025         	movff	_asin$3890+1,i2___ftneg@f1+1
 29755  013BB6  C087  F026         	movff	_asin$3890+2,i2___ftneg@f1+2
 29756  013BBA  EC3B  F0B7         	call	i2___ftneg	;wreg free
 29757  013BBE  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29758  013BC2  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29759  013BC6  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29760  013BCA  EC05  F0A2         	call	i2___ftadd	;wreg free
 29761  013BCE  C040  F082         	movff	?i2___ftadd,_asin$3891
 29762  013BD2  C041  F083         	movff	?i2___ftadd+1,_asin$3891+1
 29763  013BD6  C042  F084         	movff	?i2___ftadd+2,_asin$3891+2
 29764  013BDA  C082  F024         	movff	_asin$3891,i2___ftneg@f1
 29765  013BDE  C083  F025         	movff	_asin$3891+1,i2___ftneg@f1+1
 29766  013BE2  C084  F026         	movff	_asin$3891+2,i2___ftneg@f1+2
 29767  013BE6  EC3B  F0B7         	call	i2___ftneg	;wreg free
 29768  013BEA  C024  F079         	movff	?i2___ftneg,?_asin
 29769  013BEE  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 29770  013BF2  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 29771  013BF6  0012               	return	
 29772  013BF8                     i2l1555:
 29773  013BF8  C079  F018         	movff	asin@x,i2___ftdiv@f2
 29774  013BFC  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 29775  013C00  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 29776  013C04  C088  F015         	movff	asin@y,i2___ftdiv@f1
 29777  013C08  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 29778  013C0C  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 29779  013C10  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 29780  013C14  C015  F08B         	movff	?i2___ftdiv,_asin$3889
 29781  013C18  C016  F08C         	movff	?i2___ftdiv+1,_asin$3889+1
 29782  013C1C  C017  F08D         	movff	?i2___ftdiv+2,_asin$3889+2
 29783  013C20  C08B  F058         	movff	_asin$3889,atan@f
 29784  013C24  C08C  F059         	movff	_asin$3889+1,atan@f+1
 29785  013C28  C08D  F05A         	movff	_asin$3889+2,atan@f+2
 29786  013C2C  EC4D  F0A0         	call	_atan	;wreg free
 29787  013C30  C058  F085         	movff	?_atan,_asin$3890
 29788  013C34  C059  F086         	movff	?_atan+1,_asin$3890+1
 29789  013C38  C05A  F087         	movff	?_atan+2,_asin$3890+2
 29790  013C3C  C085  F024         	movff	_asin$3890,i2___ftneg@f1
 29791  013C40  C086  F025         	movff	_asin$3890+1,i2___ftneg@f1+1
 29792  013C44  C087  F026         	movff	_asin$3890+2,i2___ftneg@f1+2
 29793  013C48  EC3B  F0B7         	call	i2___ftneg	;wreg free
 29794  013C4C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 29795  013C50  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 29796  013C54  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 29797  013C58  0E10               	movlw	16
 29798  013C5A  6E43               	movwf	i2___ftadd@f2,c
 29799  013C5C  0EC9               	movlw	201
 29800  013C5E  6E44               	movwf	i2___ftadd@f2+1,c
 29801  013C60  0E3F               	movlw	63
 29802  013C62  6E45               	movwf	i2___ftadd@f2+2,c
 29803  013C64  EC05  F0A2         	call	i2___ftadd	;wreg free
 29804  013C68  C040  F079         	movff	?i2___ftadd,?_asin
 29805  013C6C  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 29806  013C70  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 29807  013C74  0012               	return	
 29808  013C76                     __end_of_asin:
 29809                           	opt stack 0
 29810                           tosu	equ	0xFFF
 29811                           tosh	equ	0xFFE
 29812                           tosl	equ	0xFFD
 29813                           pclatu	equ	0xFFB
 29814                           pclath	equ	0xFFA
 29815                           tblptru	equ	0xFF8
 29816                           tblptrh	equ	0xFF7
 29817                           tblptrl	equ	0xFF6
 29818                           tablat	equ	0xFF5
 29819                           prodh	equ	0xFF4
 29820                           prodl	equ	0xFF3
 29821                           intcon	equ	0xFF2
 29822                           indf0	equ	0xFEF
 29823                           postinc0	equ	0xFEE
 29824                           fsr0h	equ	0xFEA
 29825                           fsr0l	equ	0xFE9
 29826                           wreg	equ	0xFE8
 29827                           indf1	equ	0xFE7
 29828                           postdec1	equ	0xFE5
 29829                           plusw1	equ	0xFE3
 29830                           fsr1h	equ	0xFE2
 29831                           fsr1l	equ	0xFE1
 29832                           bsr	equ	0xFE0
 29833                           indf2	equ	0xFDF
 29834                           postinc2	equ	0xFDE
 29835                           postdec2	equ	0xFDD
 29836                           plusw2	equ	0xFDB
 29837                           fsr2h	equ	0xFDA
 29838                           fsr2l	equ	0xFD9
 29839                           status	equ	0xFD8
 29840                           
 29841 ;; *************** function _sqrt *****************
 29842 ;; Defined at:
 29843 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 29844 ;; Parameters:    Size  Location     Type
 29845 ;;  a               3    6[BANK0 ] void 
 29846 ;; Auto vars:     Size  Location     Type
 29847 ;;  x               3   22[BANK0 ] void 
 29848 ;;  q               3   19[BANK0 ] void 
 29849 ;;  z               3   16[BANK0 ] void 
 29850 ;;  og              3   12[BANK0 ] void 
 29851 ;;  i               1   15[BANK0 ] unsigned char 
 29852 ;; Return value:  Size  Location     Type
 29853 ;;                  3    6[BANK0 ] unsigned char 
 29854 ;; Registers used:
 29855 ;;		wreg, status,2, status,0, cstack
 29856 ;; Tracked objects:
 29857 ;;		On entry : 0/0
 29858 ;;		On exit  : 0/0
 29859 ;;		Unchanged: 0/0
 29860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 29861 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29862 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29863 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29864 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29865 ;;Total ram usage:       19 bytes
 29866 ;; Hardware stack levels used:    1
 29867 ;; Hardware stack levels required when called:    3
 29868 ;; This function calls:
 29869 ;;		i2___ftge
 29870 ;;		i2___ftmul
 29871 ;;		i2___ftsub
 29872 ;; This function is called by:
 29873 ;;		_peakToRMS
 29874 ;;		_asin
 29875 ;; This function uses a non-reentrant model
 29876 ;;
 29877                           
 29878                           	psect	text109
 29879  0145B6                     __ptext109:
 29880                           	opt stack 0
 29881  0145B6                     _sqrt:
 29882                           	opt stack 11
 29883                           
 29884                           ;incstack = 0
 29885  0145B6  0E00               	movlw	0
 29886  0145B8  6E2A               	movwf	i2___ftge@ff1,c
 29887  0145BA  0E00               	movlw	0
 29888  0145BC  6E2B               	movwf	i2___ftge@ff1+1,c
 29889  0145BE  0E00               	movlw	0
 29890  0145C0  6E2C               	movwf	i2___ftge@ff1+2,c
 29891  0145C2  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 29892  0145C6  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 29893  0145CA  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 29894  0145CE  EC20  F0AE         	call	i2___ftge	;wreg free
 29895  0145D2  A0D8               	btfss	status,0,c
 29896  0145D4  D010               	goto	i2l2094
 29897  0145D6  0100               	movlb	0	; () banked
 29898  0145D8  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 29899  0145DA  D005               	goto	i2l2095
 29900                           
 29901                           ; BSR set to: 0
 29902  0145DC  0E00               	movlw	0
 29903  0145DE  0102               	movlb	2	; () banked
 29904  0145E0  6F41               	movwf	(_errno+1)& (0+255),b
 29905  0145E2  0E21               	movlw	33
 29906  0145E4  6F40               	movwf	_errno& (0+255),b
 29907  0145E6                     i2l2095:
 29908  0145E6  0E00               	movlw	0
 29909  0145E8  0100               	movlb	0	; () banked
 29910  0145EA  6F66               	movwf	?_sqrt& (0+255),b
 29911  0145EC  0E00               	movlw	0
 29912  0145EE  6F67               	movwf	(?_sqrt+1)& (0+255),b
 29913  0145F0  0E00               	movlw	0
 29914  0145F2  6F68               	movwf	(?_sqrt+2)& (0+255),b
 29915                           
 29916                           ; BSR set to: 0
 29917  0145F4  0012               	return	
 29918  0145F6                     i2l2094:
 29919  0145F6  C066  F070         	movff	sqrt@a,sqrt@z
 29920  0145FA  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 29921  0145FE  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 29922  014602  C066  F069         	movff	sqrt@a,??_sqrt
 29923  014606  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 29924  01460A  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 29925  01460E  0100               	movlb	0	; () banked
 29926  014610  1F69               	comf	??_sqrt& (0+255),f,b
 29927  014612  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 29928  014614  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 29929  014616  2B69               	incf	??_sqrt& (0+255),f,b
 29930  014618  0E00               	movlw	0
 29931  01461A  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 29932  01461C  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 29933  01461E  0EC8               	movlw	200
 29934  014620  2569               	addwf	??_sqrt& (0+255),w,b
 29935  014622  6F76               	movwf	sqrt@x& (0+255),b
 29936  014624  0E6E               	movlw	110
 29937  014626  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 29938  014628  6F77               	movwf	(sqrt@x+1)& (0+255),b
 29939  01462A  0EBE               	movlw	190
 29940  01462C  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 29941  01462E  6F78               	movwf	(sqrt@x+2)& (0+255),b
 29942                           
 29943                           ; BSR set to: 0
 29944  014630  90D8               	bcf	status,0,c
 29945  014632  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 29946  014634  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 29947  014636  3376               	rrcf	sqrt@x& (0+255),f,b
 29948                           
 29949                           ; BSR set to: 0
 29950  014638  0E00               	movlw	0
 29951  01463A  5F70               	subwf	sqrt@z& (0+255),f,b
 29952  01463C  0E80               	movlw	128
 29953  01463E  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 29954  014640  0E00               	movlw	0
 29955  014642  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 29956                           
 29957                           ; BSR set to: 0
 29958  014644  0E04               	movlw	4
 29959  014646  6F6F               	movwf	sqrt@i& (0+255),b
 29960  014648                     
 29961                           ; BSR set to: 0
 29962                           
 29963                           ; BSR set to: 0
 29964  014648  C076  F06C         	movff	sqrt@x,sqrt@og
 29965  01464C  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 29966  014650  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 29967                           
 29968                           ; BSR set to: 0
 29969  014654  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 29970  014658  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 29971  01465C  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 29972  014660  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 29973  014664  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 29974  014668  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 29975  01466C  EC01  F0A8         	call	i2___ftmul	;wreg free
 29976  014670  C027  F073         	movff	?i2___ftmul,sqrt@q
 29977  014674  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 29978  014678  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 29979  01467C  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 29980  014680  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 29981  014684  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 29982  014688  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 29983  01468C  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 29984  014690  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 29985  014694  EC01  F0A8         	call	i2___ftmul	;wreg free
 29986  014698  C027  F073         	movff	?i2___ftmul,sqrt@q
 29987  01469C  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 29988  0146A0  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 29989  0146A4  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 29990  0146A8  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 29991  0146AC  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 29992  0146B0  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 29993  0146B4  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 29994  0146B8  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 29995  0146BC  EC01  F0A8         	call	i2___ftmul	;wreg free
 29996  0146C0  C027  F073         	movff	?i2___ftmul,sqrt@q
 29997  0146C4  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 29998  0146C8  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 29999  0146CC  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 30000  0146D0  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 30001  0146D4  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 30002  0146D8  0E00               	movlw	0
 30003  0146DA  6E2A               	movwf	i2___ftmul@f2,c
 30004  0146DC  0EC0               	movlw	192
 30005  0146DE  6E2B               	movwf	i2___ftmul@f2+1,c
 30006  0146E0  0E3F               	movlw	63
 30007  0146E2  6E2C               	movwf	i2___ftmul@f2+2,c
 30008  0146E4  EC01  F0A8         	call	i2___ftmul	;wreg free
 30009  0146E8  C027  F076         	movff	?i2___ftmul,sqrt@x
 30010  0146EC  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 30011  0146F0  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 30012  0146F4  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 30013  0146F8  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 30014  0146FC  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 30015  014700  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 30016  014704  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 30017  014708  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 30018  01470C  EC50  F0B5         	call	i2___ftsub	;wreg free
 30019  014710  C060  F076         	movff	?i2___ftsub,sqrt@x
 30020  014714  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 30021  014718  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 30022  01471C  0100               	movlb	0	; () banked
 30023  01471E  2F6F               	decfsz	sqrt@i& (0+255),f,b
 30024  014720  D793               	goto	i2l2097
 30025                           
 30026                           ; BSR set to: 0
 30027                           
 30028                           ; BSR set to: 0
 30029  014722  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 30030  014726  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 30031  01472A  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 30032  01472E  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 30033  014732  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 30034  014736  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 30035  01473A  EC01  F0A8         	call	i2___ftmul	;wreg free
 30036  01473E  C027  F066         	movff	?i2___ftmul,?_sqrt
 30037  014742  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 30038  014746  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 30039  01474A  0012               	return	
 30040  01474C                     __end_of_sqrt:
 30041                           	opt stack 0
 30042                           tosu	equ	0xFFF
 30043                           tosh	equ	0xFFE
 30044                           tosl	equ	0xFFD
 30045                           pclatu	equ	0xFFB
 30046                           pclath	equ	0xFFA
 30047                           tblptru	equ	0xFF8
 30048                           tblptrh	equ	0xFF7
 30049                           tblptrl	equ	0xFF6
 30050                           tablat	equ	0xFF5
 30051                           prodh	equ	0xFF4
 30052                           prodl	equ	0xFF3
 30053                           intcon	equ	0xFF2
 30054                           indf0	equ	0xFEF
 30055                           postinc0	equ	0xFEE
 30056                           fsr0h	equ	0xFEA
 30057                           fsr0l	equ	0xFE9
 30058                           wreg	equ	0xFE8
 30059                           indf1	equ	0xFE7
 30060                           postdec1	equ	0xFE5
 30061                           plusw1	equ	0xFE3
 30062                           fsr1h	equ	0xFE2
 30063                           fsr1l	equ	0xFE1
 30064                           bsr	equ	0xFE0
 30065                           indf2	equ	0xFDF
 30066                           postinc2	equ	0xFDE
 30067                           postdec2	equ	0xFDD
 30068                           plusw2	equ	0xFDB
 30069                           fsr2h	equ	0xFDA
 30070                           fsr2l	equ	0xFD9
 30071                           status	equ	0xFD8
 30072                           
 30073 ;; *************** function _atan *****************
 30074 ;; Defined at:
 30075 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 30076 ;; Parameters:    Size  Location     Type
 30077 ;;  f               3   87[COMRAM] unsigned char 
 30078 ;; Auto vars:     Size  Location     Type
 30079 ;;  val             3   10[BANK0 ] unsigned char 
 30080 ;;  val_squared     3    7[BANK0 ] unsigned char 
 30081 ;;  x               3    3[BANK0 ] unsigned char 
 30082 ;;  y               3    0[BANK0 ] unsigned char 
 30083 ;;  recip           1    6[BANK0 ] unsigned char 
 30084 ;; Return value:  Size  Location     Type
 30085 ;;                  3   87[COMRAM] unsigned char 
 30086 ;; Registers used:
 30087 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30088 ;; Tracked objects:
 30089 ;;		On entry : 0/0
 30090 ;;		On exit  : 0/0
 30091 ;;		Unchanged: 0/0
 30092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30093 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30094 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30096 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30097 ;;Total ram usage:       16 bytes
 30098 ;; Hardware stack levels used:    1
 30099 ;; Hardware stack levels required when called:    3
 30100 ;; This function calls:
 30101 ;;		_eval_poly
 30102 ;;		_fabs
 30103 ;;		i2___ftadd
 30104 ;;		i2___ftdiv
 30105 ;;		i2___ftge
 30106 ;;		i2___ftmul
 30107 ;;		i2___ftneg
 30108 ;; This function is called by:
 30109 ;;		_asin
 30110 ;; This function uses a non-reentrant model
 30111 ;;
 30112                           
 30113                           	psect	text110
 30114  01409A                     __ptext110:
 30115                           	opt stack 0
 30116  01409A                     _atan:
 30117                           	opt stack 9
 30118                           
 30119                           ;incstack = 0
 30120  01409A  C058  F027         	movff	atan@f,fabs@d
 30121  01409E  C059  F028         	movff	atan@f+1,fabs@d+1
 30122  0140A2  C05A  F029         	movff	atan@f+2,fabs@d+2
 30123  0140A6  EC86  F0B6         	call	_fabs	;wreg free
 30124  0140AA  C027  F06A         	movff	?_fabs,atan@val
 30125  0140AE  C028  F06B         	movff	?_fabs+1,atan@val+1
 30126  0140B2  C029  F06C         	movff	?_fabs+2,atan@val+2
 30127  0140B6  0100               	movlb	0	; () banked
 30128  0140B8  516A               	movf	atan@val& (0+255),w,b
 30129  0140BA  116B               	iorwf	(atan@val+1)& (0+255),w,b
 30130  0140BC  116C               	iorwf	(atan@val+2)& (0+255),w,b
 30131  0140BE  A4D8               	btfss	status,2,c
 30132  0140C0  D007               	goto	i2l1571
 30133                           
 30134                           ; BSR set to: 0
 30135  0140C2  0E00               	movlw	0
 30136  0140C4  6E58               	movwf	?_atan,c
 30137  0140C6  0E00               	movlw	0
 30138  0140C8  6E59               	movwf	?_atan+1,c
 30139  0140CA  0E00               	movlw	0
 30140  0140CC  6E5A               	movwf	?_atan+2,c
 30141                           
 30142                           ; BSR set to: 0
 30143  0140CE  0012               	return	
 30144  0140D0                     i2l1571:
 30145                           
 30146                           ; BSR set to: 0
 30147                           
 30148                           ; BSR set to: 0
 30149  0140D0  0E00               	movlw	0
 30150  0140D2  6E2A               	movwf	i2___ftge@ff1,c
 30151  0140D4  0E80               	movlw	128
 30152  0140D6  6E2B               	movwf	i2___ftge@ff1+1,c
 30153  0140D8  0E3F               	movlw	63
 30154  0140DA  6E2C               	movwf	i2___ftge@ff1+2,c
 30155  0140DC  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 30156  0140E0  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 30157  0140E4  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 30158  0140E8  EC20  F0AE         	call	i2___ftge	;wreg free
 30159  0140EC  B0D8               	btfsc	status,0,c
 30160  0140EE  D002               	goto	i2u1838_40
 30161  0140F0  0E01               	movlw	1
 30162  0140F2  D001               	goto	i2u1839_40
 30163  0140F4                     i2u1838_40:
 30164  0140F4  0E00               	movlw	0
 30165  0140F6                     i2u1839_40:
 30166  0140F6  0100               	movlb	0	; () banked
 30167  0140F8  6F66               	movwf	atan@recip& (0+255),b
 30168  0140FA  5166               	movf	atan@recip& (0+255),w,b
 30169  0140FC  B4D8               	btfsc	status,2,c
 30170  0140FE  D014               	goto	i2l1573
 30171                           
 30172                           ; BSR set to: 0
 30173  014100  0E00               	movlw	0
 30174  014102  6E15               	movwf	i2___ftdiv@f1,c
 30175  014104  0E80               	movlw	128
 30176  014106  6E16               	movwf	i2___ftdiv@f1+1,c
 30177  014108  0E3F               	movlw	63
 30178  01410A  6E17               	movwf	i2___ftdiv@f1+2,c
 30179  01410C  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 30180  014110  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 30181  014114  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 30182  014118  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 30183  01411C  C015  F06A         	movff	?i2___ftdiv,atan@val
 30184  014120  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 30185  014124  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 30186  014128                     i2l1573:
 30187  014128  C06A  F027         	movff	atan@val,i2___ftmul@f1
 30188  01412C  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 30189  014130  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 30190  014134  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 30191  014138  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 30192  01413C  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 30193  014140  EC01  F0A8         	call	i2___ftmul	;wreg free
 30194  014144  C027  F067         	movff	?i2___ftmul,atan@val_squared
 30195  014148  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 30196  01414C  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 30197  014150  C067  F04C         	movff	atan@val_squared,eval_poly@x
 30198  014154  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 30199  014158  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 30200  01415C  0E16               	movlw	low atan@coeff_b
 30201  01415E  6E4F               	movwf	eval_poly@d,c
 30202  014160  0EED               	movlw	high atan@coeff_b
 30203  014162  6E50               	movwf	eval_poly@d+1,c
 30204  014164  0E00               	movlw	0
 30205  014166  6E52               	movwf	eval_poly@n+1,c
 30206  014168  0E04               	movlw	4
 30207  01416A  6E51               	movwf	eval_poly@n,c
 30208  01416C  EC43  F0AA         	call	_eval_poly	;wreg free
 30209  014170  C04C  F060         	movff	?_eval_poly,atan@y
 30210  014174  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 30211  014178  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 30212  01417C  C067  F04C         	movff	atan@val_squared,eval_poly@x
 30213  014180  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 30214  014184  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 30215  014188  0EF5               	movlw	low atan@coeff_a
 30216  01418A  6E4F               	movwf	eval_poly@d,c
 30217  01418C  0EEC               	movlw	high atan@coeff_a
 30218  01418E  6E50               	movwf	eval_poly@d+1,c
 30219  014190  0E00               	movlw	0
 30220  014192  6E52               	movwf	eval_poly@n+1,c
 30221  014194  0E05               	movlw	5
 30222  014196  6E51               	movwf	eval_poly@n,c
 30223  014198  EC43  F0AA         	call	_eval_poly	;wreg free
 30224  01419C  C04C  F063         	movff	?_eval_poly,atan@x
 30225  0141A0  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 30226  0141A4  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 30227  0141A8  C06A  F027         	movff	atan@val,i2___ftmul@f1
 30228  0141AC  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 30229  0141B0  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 30230  0141B4  C060  F018         	movff	atan@y,i2___ftdiv@f2
 30231  0141B8  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 30232  0141BC  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 30233  0141C0  C063  F015         	movff	atan@x,i2___ftdiv@f1
 30234  0141C4  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 30235  0141C8  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 30236  0141CC  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 30237  0141D0  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 30238  0141D4  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 30239  0141D8  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 30240  0141DC  EC01  F0A8         	call	i2___ftmul	;wreg free
 30241  0141E0  C027  F06A         	movff	?i2___ftmul,atan@val
 30242  0141E4  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 30243  0141E8  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 30244  0141EC  0100               	movlb	0	; () banked
 30245  0141EE  5166               	movf	atan@recip& (0+255),w,b
 30246  0141F0  B4D8               	btfsc	status,2,c
 30247  0141F2  D01C               	goto	i2l1574
 30248                           
 30249                           ; BSR set to: 0
 30250  0141F4  C06A  F024         	movff	atan@val,i2___ftneg@f1
 30251  0141F8  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 30252  0141FC  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 30253  014200  EC3B  F0B7         	call	i2___ftneg	;wreg free
 30254  014204  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30255  014208  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30256  01420C  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30257  014210  0E10               	movlw	16
 30258  014212  6E43               	movwf	i2___ftadd@f2,c
 30259  014214  0EC9               	movlw	201
 30260  014216  6E44               	movwf	i2___ftadd@f2+1,c
 30261  014218  0E3F               	movlw	63
 30262  01421A  6E45               	movwf	i2___ftadd@f2+2,c
 30263  01421C  EC05  F0A2         	call	i2___ftadd	;wreg free
 30264  014220  C040  F06A         	movff	?i2___ftadd,atan@val
 30265  014224  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 30266  014228  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 30267  01422C                     i2l1574:
 30268  01422C  BE5A               	btfsc	atan@f+2,7,c
 30269  01422E  D007               	goto	i2l1576
 30270  014230  C06A  F058         	movff	atan@val,?_atan
 30271  014234  C06B  F059         	movff	atan@val+1,?_atan+1
 30272  014238  C06C  F05A         	movff	atan@val+2,?_atan+2
 30273  01423C  0012               	return	
 30274  01423E                     i2l1576:
 30275  01423E  C06A  F024         	movff	atan@val,i2___ftneg@f1
 30276  014242  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 30277  014246  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 30278  01424A  EC3B  F0B7         	call	i2___ftneg	;wreg free
 30279  01424E  C024  F058         	movff	?i2___ftneg,?_atan
 30280  014252  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 30281  014256  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 30282  01425A  0012               	return	
 30283  01425C                     __end_of_atan:
 30284                           	opt stack 0
 30285                           tosu	equ	0xFFF
 30286                           tosh	equ	0xFFE
 30287                           tosl	equ	0xFFD
 30288                           pclatu	equ	0xFFB
 30289                           pclath	equ	0xFFA
 30290                           tblptru	equ	0xFF8
 30291                           tblptrh	equ	0xFF7
 30292                           tblptrl	equ	0xFF6
 30293                           tablat	equ	0xFF5
 30294                           prodh	equ	0xFF4
 30295                           prodl	equ	0xFF3
 30296                           intcon	equ	0xFF2
 30297                           indf0	equ	0xFEF
 30298                           postinc0	equ	0xFEE
 30299                           fsr0h	equ	0xFEA
 30300                           fsr0l	equ	0xFE9
 30301                           wreg	equ	0xFE8
 30302                           indf1	equ	0xFE7
 30303                           postdec1	equ	0xFE5
 30304                           plusw1	equ	0xFE3
 30305                           fsr1h	equ	0xFE2
 30306                           fsr1l	equ	0xFE1
 30307                           bsr	equ	0xFE0
 30308                           indf2	equ	0xFDF
 30309                           postinc2	equ	0xFDE
 30310                           postdec2	equ	0xFDD
 30311                           plusw2	equ	0xFDB
 30312                           fsr2h	equ	0xFDA
 30313                           fsr2l	equ	0xFD9
 30314                           status	equ	0xFD8
 30315                           
 30316 ;; *************** function _fabs *****************
 30317 ;; Defined at:
 30318 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 30319 ;; Parameters:    Size  Location     Type
 30320 ;;  d               3   38[COMRAM] unsigned char 
 30321 ;; Auto vars:     Size  Location     Type
 30322 ;;		None
 30323 ;; Return value:  Size  Location     Type
 30324 ;;                  3   38[COMRAM] unsigned char 
 30325 ;; Registers used:
 30326 ;;		wreg, status,2, status,0, cstack
 30327 ;; Tracked objects:
 30328 ;;		On entry : 0/0
 30329 ;;		On exit  : 0/0
 30330 ;;		Unchanged: 0/0
 30331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30332 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30335 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30336 ;;Total ram usage:        3 bytes
 30337 ;; Hardware stack levels used:    1
 30338 ;; Hardware stack levels required when called:    1
 30339 ;; This function calls:
 30340 ;;		i2___ftneg
 30341 ;; This function is called by:
 30342 ;;		_asin
 30343 ;;		_atan
 30344 ;; This function uses a non-reentrant model
 30345 ;;
 30346                           
 30347                           	psect	text111
 30348  016D0C                     __ptext111:
 30349                           	opt stack 0
 30350  016D0C                     _fabs:
 30351                           	opt stack 11
 30352                           
 30353                           ;incstack = 0
 30354  016D0C  AE29               	btfss	fabs@d+2,7,c
 30355  016D0E  D00F               	goto	i2l1668
 30356  016D10  C027  F024         	movff	fabs@d,i2___ftneg@f1
 30357  016D14  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 30358  016D18  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 30359  016D1C  EC3B  F0B7         	call	i2___ftneg	;wreg free
 30360  016D20  C024  F027         	movff	?i2___ftneg,?_fabs
 30361  016D24  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 30362  016D28  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 30363  016D2C  0012               	return	
 30364  016D2E                     i2l1668:
 30365  016D2E  C027  F027         	movff	fabs@d,?_fabs
 30366  016D32  C028  F028         	movff	fabs@d+1,?_fabs+1
 30367  016D36  C029  F029         	movff	fabs@d+2,?_fabs+2
 30368  016D3A  0012               	return		;funcret
 30369  016D3C                     __end_of_fabs:
 30370                           	opt stack 0
 30371                           tosu	equ	0xFFF
 30372                           tosh	equ	0xFFE
 30373                           tosl	equ	0xFFD
 30374                           pclatu	equ	0xFFB
 30375                           pclath	equ	0xFFA
 30376                           tblptru	equ	0xFF8
 30377                           tblptrh	equ	0xFF7
 30378                           tblptrl	equ	0xFF6
 30379                           tablat	equ	0xFF5
 30380                           prodh	equ	0xFF4
 30381                           prodl	equ	0xFF3
 30382                           intcon	equ	0xFF2
 30383                           indf0	equ	0xFEF
 30384                           postinc0	equ	0xFEE
 30385                           fsr0h	equ	0xFEA
 30386                           fsr0l	equ	0xFE9
 30387                           wreg	equ	0xFE8
 30388                           indf1	equ	0xFE7
 30389                           postdec1	equ	0xFE5
 30390                           plusw1	equ	0xFE3
 30391                           fsr1h	equ	0xFE2
 30392                           fsr1l	equ	0xFE1
 30393                           bsr	equ	0xFE0
 30394                           indf2	equ	0xFDF
 30395                           postinc2	equ	0xFDE
 30396                           postdec2	equ	0xFDD
 30397                           plusw2	equ	0xFDB
 30398                           fsr2h	equ	0xFDA
 30399                           fsr2l	equ	0xFD9
 30400                           status	equ	0xFD8
 30401                           
 30402 ;; *************** function _currentMeasuredToPeak *****************
 30403 ;; Defined at:
 30404 ;;		line 111 in file "main.c"
 30405 ;; Parameters:    Size  Location     Type
 30406 ;;  Measured        3   19[BANK0 ] unsigned char 
 30407 ;;  Angle           3   22[BANK0 ] unsigned char 
 30408 ;; Auto vars:     Size  Location     Type
 30409 ;;  Peak            3   25[BANK0 ] unsigned char 
 30410 ;; Return value:  Size  Location     Type
 30411 ;;                  3   19[BANK0 ] unsigned char 
 30412 ;; Registers used:
 30413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30414 ;; Tracked objects:
 30415 ;;		On entry : 0/0
 30416 ;;		On exit  : 0/0
 30417 ;;		Unchanged: 0/0
 30418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30419 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30420 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30422 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30423 ;;Total ram usage:        9 bytes
 30424 ;; Hardware stack levels used:    1
 30425 ;; Hardware stack levels required when called:    4
 30426 ;; This function calls:
 30427 ;;		_sin
 30428 ;;		i2___ftdiv
 30429 ;; This function is called by:
 30430 ;;		_ADCPostProcessingCallback
 30431 ;; This function uses a non-reentrant model
 30432 ;;
 30433                           
 30434                           	psect	text112
 30435  016550                     __ptext112:
 30436                           	opt stack 0
 30437  016550                     _currentMeasuredToPeak:
 30438                           	opt stack 11
 30439                           
 30440                           ;main.c: 114: double Peak = 0.0;
 30441                           
 30442                           ;incstack = 0
 30443  016550  0E00               	movlw	0
 30444  016552  0100               	movlb	0	; () banked
 30445  016554  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 30446  016556  0E00               	movlw	0
 30447  016558  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 30448  01655A  0E00               	movlw	0
 30449  01655C  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 30450                           
 30451                           ; BSR set to: 0
 30452                           ;main.c: 117: Peak = sin(Angle);
 30453  01655E  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 30454  016562  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 30455  016566  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 30456  01656A  EC3B  F09E         	call	_sin	;wreg free
 30457  01656E  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 30458  016572  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 30459  016576  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 30460                           
 30461                           ;main.c: 118: Peak = Measured / Peak;
 30462  01657A  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 30463  01657E  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 30464  016582  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 30465  016586  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 30466  01658A  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 30467  01658E  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 30468  016592  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 30469  016596  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 30470  01659A  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 30471  01659E  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 30472                           
 30473                           ;main.c: 119: return Peak;
 30474  0165A2  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 30475  0165A6  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 30476  0165AA  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 30477  0165AE  0012               	return	
 30478  0165B0                     __end_of_currentMeasuredToPeak:
 30479                           	opt stack 0
 30480                           tosu	equ	0xFFF
 30481                           tosh	equ	0xFFE
 30482                           tosl	equ	0xFFD
 30483                           pclatu	equ	0xFFB
 30484                           pclath	equ	0xFFA
 30485                           tblptru	equ	0xFF8
 30486                           tblptrh	equ	0xFF7
 30487                           tblptrl	equ	0xFF6
 30488                           tablat	equ	0xFF5
 30489                           prodh	equ	0xFF4
 30490                           prodl	equ	0xFF3
 30491                           intcon	equ	0xFF2
 30492                           indf0	equ	0xFEF
 30493                           postinc0	equ	0xFEE
 30494                           fsr0h	equ	0xFEA
 30495                           fsr0l	equ	0xFE9
 30496                           wreg	equ	0xFE8
 30497                           indf1	equ	0xFE7
 30498                           postdec1	equ	0xFE5
 30499                           plusw1	equ	0xFE3
 30500                           fsr1h	equ	0xFE2
 30501                           fsr1l	equ	0xFE1
 30502                           bsr	equ	0xFE0
 30503                           indf2	equ	0xFDF
 30504                           postinc2	equ	0xFDE
 30505                           postdec2	equ	0xFDD
 30506                           plusw2	equ	0xFDB
 30507                           fsr2h	equ	0xFDA
 30508                           fsr2l	equ	0xFD9
 30509                           status	equ	0xFD8
 30510                           
 30511 ;; *************** function _sin *****************
 30512 ;; Defined at:
 30513 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 30514 ;; Parameters:    Size  Location     Type
 30515 ;;  f               3    6[BANK0 ] unsigned char 
 30516 ;; Auto vars:     Size  Location     Type
 30517 ;;  x2              3   15[BANK0 ] unsigned char 
 30518 ;;  y               3    9[BANK0 ] unsigned char 
 30519 ;;  sgn             1   18[BANK0 ] unsigned char 
 30520 ;; Return value:  Size  Location     Type
 30521 ;;                  3    6[BANK0 ] unsigned char 
 30522 ;; Registers used:
 30523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30524 ;; Tracked objects:
 30525 ;;		On entry : 0/0
 30526 ;;		On exit  : 0/0
 30527 ;;		Unchanged: 0/0
 30528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30529 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30530 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30532 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30533 ;;Total ram usage:       13 bytes
 30534 ;; Hardware stack levels used:    1
 30535 ;; Hardware stack levels required when called:    3
 30536 ;; This function calls:
 30537 ;;		_eval_poly
 30538 ;;		_floor
 30539 ;;		i2___ftadd
 30540 ;;		i2___ftdiv
 30541 ;;		i2___ftge
 30542 ;;		i2___ftmul
 30543 ;;		i2___ftneg
 30544 ;;		i2___ftsub
 30545 ;; This function is called by:
 30546 ;;		_peakToRMS
 30547 ;;		_currentMeasuredToPeak
 30548 ;; This function uses a non-reentrant model
 30549 ;;
 30550                           
 30551                           	psect	text113
 30552  013C76                     __ptext113:
 30553                           	opt stack 0
 30554  013C76                     _sin:
 30555                           	opt stack 11
 30556                           
 30557                           ;incstack = 0
 30558  013C76  0E00               	movlw	0
 30559  013C78  0100               	movlb	0	; () banked
 30560  013C7A  6F72               	movwf	sin@sgn& (0+255),b
 30561                           
 30562                           ; BSR set to: 0
 30563  013C7C  AF68               	btfss	(sin@f+2)& (0+255),7,b
 30564  013C7E  D011               	goto	i2l1965
 30565                           
 30566                           ; BSR set to: 0
 30567  013C80  C066  F024         	movff	sin@f,i2___ftneg@f1
 30568  013C84  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 30569  013C88  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 30570  013C8C  EC3B  F0B7         	call	i2___ftneg	;wreg free
 30571  013C90  C024  F066         	movff	?i2___ftneg,sin@f
 30572  013C94  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 30573  013C98  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 30574  013C9C  0E01               	movlw	1
 30575  013C9E  0100               	movlb	0	; () banked
 30576  013CA0  6F72               	movwf	sin@sgn& (0+255),b
 30577  013CA2                     i2l1965:
 30578                           
 30579                           ; BSR set to: 0
 30580                           
 30581                           ; BSR set to: 0
 30582  013CA2  C066  F027         	movff	sin@f,i2___ftmul@f1
 30583  013CA6  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30584  013CAA  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30585  013CAE  0EFA               	movlw	250
 30586  013CB0  6E2A               	movwf	i2___ftmul@f2,c
 30587  013CB2  0E22               	movlw	34
 30588  013CB4  6E2B               	movwf	i2___ftmul@f2+1,c
 30589  013CB6  0E3E               	movlw	62
 30590  013CB8  6E2C               	movwf	i2___ftmul@f2+2,c
 30591  013CBA  EC01  F0A8         	call	i2___ftmul	;wreg free
 30592  013CBE  C027  F066         	movff	?i2___ftmul,sin@f
 30593  013CC2  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 30594  013CC6  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 30595  013CCA  C066  F060         	movff	sin@f,i2___ftsub@f1
 30596  013CCE  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 30597  013CD2  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 30598  013CD6  C066  F056         	movff	sin@f,floor@x
 30599  013CDA  C067  F057         	movff	sin@f+1,floor@x+1
 30600  013CDE  C068  F058         	movff	sin@f+2,floor@x+2
 30601  013CE2  ECD4  F0A9         	call	_floor	;wreg free
 30602  013CE6  C056  F063         	movff	?_floor,i2___ftsub@f2
 30603  013CEA  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 30604  013CEE  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 30605  013CF2  EC50  F0B5         	call	i2___ftsub	;wreg free
 30606  013CF6  C060  F066         	movff	?i2___ftsub,sin@f
 30607  013CFA  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 30608  013CFE  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 30609  013D02  C066  F027         	movff	sin@f,i2___ftmul@f1
 30610  013D06  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30611  013D0A  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30612  013D0E  0E00               	movlw	0
 30613  013D10  6E2A               	movwf	i2___ftmul@f2,c
 30614  013D12  0E80               	movlw	128
 30615  013D14  6E2B               	movwf	i2___ftmul@f2+1,c
 30616  013D16  0E40               	movlw	64
 30617  013D18  6E2C               	movwf	i2___ftmul@f2+2,c
 30618  013D1A  EC01  F0A8         	call	i2___ftmul	;wreg free
 30619  013D1E  C027  F066         	movff	?i2___ftmul,sin@f
 30620  013D22  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 30621  013D26  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 30622  013D2A  0E00               	movlw	0
 30623  013D2C  6E2A               	movwf	i2___ftge@ff1,c
 30624  013D2E  0E00               	movlw	0
 30625  013D30  6E2B               	movwf	i2___ftge@ff1+1,c
 30626  013D32  0E40               	movlw	64
 30627  013D34  6E2C               	movwf	i2___ftge@ff1+2,c
 30628  013D36  C066  F02D         	movff	sin@f,i2___ftge@ff2
 30629  013D3A  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 30630  013D3E  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 30631  013D42  EC20  F0AE         	call	i2___ftge	;wreg free
 30632  013D46  B0D8               	btfsc	status,0,c
 30633  013D48  D01D               	goto	i2l1966
 30634  013D4A  C066  F060         	movff	sin@f,i2___ftsub@f1
 30635  013D4E  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 30636  013D52  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 30637  013D56  0E00               	movlw	0
 30638  013D58  0100               	movlb	0	; () banked
 30639  013D5A  6F63               	movwf	i2___ftsub@f2& (0+255),b
 30640  013D5C  0E00               	movlw	0
 30641  013D5E  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 30642  013D60  0E40               	movlw	64
 30643  013D62  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 30644  013D64  EC50  F0B5         	call	i2___ftsub	;wreg free
 30645  013D68  C060  F066         	movff	?i2___ftsub,sin@f
 30646  013D6C  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 30647  013D70  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 30648  013D74  0100               	movlb	0	; () banked
 30649  013D76  5172               	movf	sin@sgn& (0+255),w,b
 30650  013D78  A4D8               	btfss	status,2,c
 30651  013D7A  D002               	goto	i2u1862_40
 30652  013D7C  0E01               	movlw	1
 30653  013D7E  D001               	goto	i2u1863_40
 30654  013D80                     i2u1862_40:
 30655  013D80  0E00               	movlw	0
 30656  013D82                     i2u1863_40:
 30657  013D82  6F72               	movwf	sin@sgn& (0+255),b
 30658  013D84                     i2l1966:
 30659                           
 30660                           ; BSR set to: 0
 30661  013D84  0E00               	movlw	0
 30662  013D86  6E2A               	movwf	i2___ftge@ff1,c
 30663  013D88  0E80               	movlw	128
 30664  013D8A  6E2B               	movwf	i2___ftge@ff1+1,c
 30665  013D8C  0E3F               	movlw	63
 30666  013D8E  6E2C               	movwf	i2___ftge@ff1+2,c
 30667  013D90  C066  F02D         	movff	sin@f,i2___ftge@ff2
 30668  013D94  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 30669  013D98  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 30670  013D9C  EC20  F0AE         	call	i2___ftge	;wreg free
 30671  013DA0  B0D8               	btfsc	status,0,c
 30672  013DA2  D01C               	goto	i2l1967
 30673  013DA4  C066  F024         	movff	sin@f,i2___ftneg@f1
 30674  013DA8  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 30675  013DAC  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 30676  013DB0  EC3B  F0B7         	call	i2___ftneg	;wreg free
 30677  013DB4  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 30678  013DB8  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 30679  013DBC  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 30680  013DC0  0E00               	movlw	0
 30681  013DC2  6E43               	movwf	i2___ftadd@f2,c
 30682  013DC4  0E00               	movlw	0
 30683  013DC6  6E44               	movwf	i2___ftadd@f2+1,c
 30684  013DC8  0E40               	movlw	64
 30685  013DCA  6E45               	movwf	i2___ftadd@f2+2,c
 30686  013DCC  EC05  F0A2         	call	i2___ftadd	;wreg free
 30687  013DD0  C040  F066         	movff	?i2___ftadd,sin@f
 30688  013DD4  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 30689  013DD8  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 30690  013DDC                     i2l1967:
 30691  013DDC  C066  F027         	movff	sin@f,i2___ftmul@f1
 30692  013DE0  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30693  013DE4  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30694  013DE8  C066  F02A         	movff	sin@f,i2___ftmul@f2
 30695  013DEC  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 30696  013DF0  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 30697  013DF4  EC01  F0A8         	call	i2___ftmul	;wreg free
 30698  013DF8  C027  F06F         	movff	?i2___ftmul,sin@x2
 30699  013DFC  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 30700  013E00  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 30701  013E04  C06F  F04C         	movff	sin@x2,eval_poly@x
 30702  013E08  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 30703  013E0C  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 30704  013E10  0E25               	movlw	low sin@coeff_b
 30705  013E12  6E4F               	movwf	eval_poly@d,c
 30706  013E14  0EED               	movlw	high sin@coeff_b
 30707  013E16  6E50               	movwf	eval_poly@d+1,c
 30708  013E18  0E00               	movlw	0
 30709  013E1A  6E52               	movwf	eval_poly@n+1,c
 30710  013E1C  0E03               	movlw	3
 30711  013E1E  6E51               	movwf	eval_poly@n,c
 30712  013E20  EC43  F0AA         	call	_eval_poly	;wreg free
 30713  013E24  C04C  F069         	movff	?_eval_poly,sin@y
 30714  013E28  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 30715  013E2C  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 30716  013E30  C069  F018         	movff	sin@y,i2___ftdiv@f2
 30717  013E34  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 30718  013E38  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 30719  013E3C  0E00               	movlw	0
 30720  013E3E  6E52               	movwf	eval_poly@n+1,c
 30721  013E40  0E04               	movlw	4
 30722  013E42  6E51               	movwf	eval_poly@n,c
 30723  013E44  0E07               	movlw	low sin@coeff_a
 30724  013E46  6E4F               	movwf	eval_poly@d,c
 30725  013E48  0EED               	movlw	high sin@coeff_a
 30726  013E4A  6E50               	movwf	eval_poly@d+1,c
 30727  013E4C  C06F  F04C         	movff	sin@x2,eval_poly@x
 30728  013E50  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 30729  013E54  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 30730  013E58  EC43  F0AA         	call	_eval_poly	;wreg free
 30731  013E5C  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 30732  013E60  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 30733  013E64  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 30734  013E68  ECEF  F0A8         	call	i2___ftdiv	;wreg free
 30735  013E6C  C015  F06C         	movff	?i2___ftdiv,_sin$3892
 30736  013E70  C016  F06D         	movff	?i2___ftdiv+1,_sin$3892+1
 30737  013E74  C017  F06E         	movff	?i2___ftdiv+2,_sin$3892+2
 30738  013E78  C066  F027         	movff	sin@f,i2___ftmul@f1
 30739  013E7C  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 30740  013E80  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 30741  013E84  C06C  F02A         	movff	_sin$3892,i2___ftmul@f2
 30742  013E88  C06D  F02B         	movff	_sin$3892+1,i2___ftmul@f2+1
 30743  013E8C  C06E  F02C         	movff	_sin$3892+2,i2___ftmul@f2+2
 30744  013E90  EC01  F0A8         	call	i2___ftmul	;wreg free
 30745  013E94  C027  F066         	movff	?i2___ftmul,sin@f
 30746  013E98  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 30747  013E9C  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 30748  013EA0  0100               	movlb	0	; () banked
 30749  013EA2  5172               	movf	sin@sgn& (0+255),w,b
 30750  013EA4  B4D8               	btfsc	status,2,c
 30751  013EA6  D00F               	goto	i2l1968
 30752                           
 30753                           ; BSR set to: 0
 30754  013EA8  C066  F024         	movff	sin@f,i2___ftneg@f1
 30755  013EAC  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 30756  013EB0  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 30757  013EB4  EC3B  F0B7         	call	i2___ftneg	;wreg free
 30758  013EB8  C024  F066         	movff	?i2___ftneg,?_sin
 30759  013EBC  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 30760  013EC0  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 30761  013EC4  0012               	return	
 30762  013EC6                     i2l1968:
 30763                           
 30764                           ; BSR set to: 0
 30765  013EC6  C066  F066         	movff	sin@f,?_sin
 30766  013ECA  C067  F067         	movff	sin@f+1,?_sin+1
 30767  013ECE  C068  F068         	movff	sin@f+2,?_sin+2
 30768  013ED2  0012               	return		;funcret
 30769  013ED4                     __end_of_sin:
 30770                           	opt stack 0
 30771                           tosu	equ	0xFFF
 30772                           tosh	equ	0xFFE
 30773                           tosl	equ	0xFFD
 30774                           pclatu	equ	0xFFB
 30775                           pclath	equ	0xFFA
 30776                           tblptru	equ	0xFF8
 30777                           tblptrh	equ	0xFF7
 30778                           tblptrl	equ	0xFF6
 30779                           tablat	equ	0xFF5
 30780                           prodh	equ	0xFF4
 30781                           prodl	equ	0xFF3
 30782                           intcon	equ	0xFF2
 30783                           indf0	equ	0xFEF
 30784                           postinc0	equ	0xFEE
 30785                           fsr0h	equ	0xFEA
 30786                           fsr0l	equ	0xFE9
 30787                           wreg	equ	0xFE8
 30788                           indf1	equ	0xFE7
 30789                           postdec1	equ	0xFE5
 30790                           plusw1	equ	0xFE3
 30791                           fsr1h	equ	0xFE2
 30792                           fsr1l	equ	0xFE1
 30793                           bsr	equ	0xFE0
 30794                           indf2	equ	0xFDF
 30795                           postinc2	equ	0xFDE
 30796                           postdec2	equ	0xFDD
 30797                           plusw2	equ	0xFDB
 30798                           fsr2h	equ	0xFDA
 30799                           fsr2l	equ	0xFD9
 30800                           status	equ	0xFD8
 30801                           
 30802 ;; *************** function i2___ftsub *****************
 30803 ;; Defined at:
 30804 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 30805 ;; Parameters:    Size  Location     Type
 30806 ;;  f1              3    0[BANK0 ] float 
 30807 ;;  f2              3    3[BANK0 ] float 
 30808 ;; Auto vars:     Size  Location     Type
 30809 ;;		None
 30810 ;; Return value:  Size  Location     Type
 30811 ;;                  3    0[BANK0 ] float 
 30812 ;; Registers used:
 30813 ;;		wreg, status,2, status,0, cstack
 30814 ;; Tracked objects:
 30815 ;;		On entry : 0/0
 30816 ;;		On exit  : 0/0
 30817 ;;		Unchanged: 0/0
 30818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30819 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30822 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30823 ;;Total ram usage:        6 bytes
 30824 ;; Hardware stack levels used:    1
 30825 ;; Hardware stack levels required when called:    2
 30826 ;; This function calls:
 30827 ;;		i2___ftadd
 30828 ;; This function is called by:
 30829 ;;		_sin
 30830 ;;		_sqrt
 30831 ;;		i2_printf
 30832 ;; This function uses a non-reentrant model
 30833 ;;
 30834                           
 30835                           	psect	text114
 30836  016AA0                     __ptext114:
 30837                           	opt stack 0
 30838  016AA0                     i2___ftsub:
 30839                           	opt stack 13
 30840                           
 30841                           ;incstack = 0
 30842  016AA0  0100               	movlb	0	; () banked
 30843  016AA2  5163               	movf	i2___ftsub@f2& (0+255),w,b
 30844  016AA4  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 30845  016AA6  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 30846  016AA8  B4D8               	btfsc	status,2,c
 30847  016AAA  D006               	goto	i2l1817
 30848                           
 30849                           ; BSR set to: 0
 30850  016AAC  0E00               	movlw	0
 30851  016AAE  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 30852  016AB0  0E00               	movlw	0
 30853  016AB2  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 30854  016AB4  0E80               	movlw	128
 30855  016AB6  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 30856  016AB8                     i2l1817:
 30857                           
 30858                           ; BSR set to: 0
 30859                           
 30860                           ; BSR set to: 0
 30861  016AB8  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 30862  016ABC  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 30863  016AC0  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 30864  016AC4  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 30865  016AC8  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 30866  016ACC  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 30867  016AD0  EC05  F0A2         	call	i2___ftadd	;wreg free
 30868  016AD4  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 30869  016AD8  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 30870  016ADC  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 30871  016AE0  0012               	return	
 30872  016AE2                     __end_ofi2___ftsub:
 30873                           	opt stack 0
 30874                           tosu	equ	0xFFF
 30875                           tosh	equ	0xFFE
 30876                           tosl	equ	0xFFD
 30877                           pclatu	equ	0xFFB
 30878                           pclath	equ	0xFFA
 30879                           tblptru	equ	0xFF8
 30880                           tblptrh	equ	0xFF7
 30881                           tblptrl	equ	0xFF6
 30882                           tablat	equ	0xFF5
 30883                           prodh	equ	0xFF4
 30884                           prodl	equ	0xFF3
 30885                           intcon	equ	0xFF2
 30886                           indf0	equ	0xFEF
 30887                           postinc0	equ	0xFEE
 30888                           fsr0h	equ	0xFEA
 30889                           fsr0l	equ	0xFE9
 30890                           wreg	equ	0xFE8
 30891                           indf1	equ	0xFE7
 30892                           postdec1	equ	0xFE5
 30893                           plusw1	equ	0xFE3
 30894                           fsr1h	equ	0xFE2
 30895                           fsr1l	equ	0xFE1
 30896                           bsr	equ	0xFE0
 30897                           indf2	equ	0xFDF
 30898                           postinc2	equ	0xFDE
 30899                           postdec2	equ	0xFDD
 30900                           plusw2	equ	0xFDB
 30901                           fsr2h	equ	0xFDA
 30902                           fsr2l	equ	0xFD9
 30903                           status	equ	0xFD8
 30904                           
 30905 ;; *************** function i2___ftneg *****************
 30906 ;; Defined at:
 30907 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 30908 ;; Parameters:    Size  Location     Type
 30909 ;;  f1              3   35[COMRAM] float 
 30910 ;; Auto vars:     Size  Location     Type
 30911 ;;		None
 30912 ;; Return value:  Size  Location     Type
 30913 ;;                  3   35[COMRAM] float 
 30914 ;; Registers used:
 30915 ;;		wreg, status,2, status,0
 30916 ;; Tracked objects:
 30917 ;;		On entry : 0/0
 30918 ;;		On exit  : 0/0
 30919 ;;		Unchanged: 0/0
 30920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 30921 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30924 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30925 ;;Total ram usage:        3 bytes
 30926 ;; Hardware stack levels used:    1
 30927 ;; This function calls:
 30928 ;;		Nothing
 30929 ;; This function is called by:
 30930 ;;		_peakToRMS
 30931 ;;		_ADCPostProcessingCallback
 30932 ;;		_acos
 30933 ;;		_asin
 30934 ;;		_atan
 30935 ;;		_fabs
 30936 ;;		_sin
 30937 ;;		i2_printf
 30938 ;; This function uses a non-reentrant model
 30939 ;;
 30940                           
 30941                           	psect	text115
 30942  016E76                     __ptext115:
 30943                           	opt stack 0
 30944  016E76                     i2___ftneg:
 30945                           	opt stack 15
 30946                           
 30947                           ;incstack = 0
 30948  016E76  5024               	movf	i2___ftneg@f1,w,c
 30949  016E78  1025               	iorwf	i2___ftneg@f1+1,w,c
 30950  016E7A  1026               	iorwf	i2___ftneg@f1+2,w,c
 30951  016E7C  B4D8               	btfsc	status,2,c
 30952  016E7E  D006               	goto	i2l1811
 30953  016E80  0E00               	movlw	0
 30954  016E82  1A24               	xorwf	i2___ftneg@f1,f,c
 30955  016E84  0E00               	movlw	0
 30956  016E86  1A25               	xorwf	i2___ftneg@f1+1,f,c
 30957  016E88  0E80               	movlw	128
 30958  016E8A  1A26               	xorwf	i2___ftneg@f1+2,f,c
 30959  016E8C                     i2l1811:
 30960  016E8C  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 30961  016E90  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 30962  016E94  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 30963  016E98  0012               	return		;funcret
 30964  016E9A                     __end_ofi2___ftneg:
 30965                           	opt stack 0
 30966                           tosu	equ	0xFFF
 30967                           tosh	equ	0xFFE
 30968                           tosl	equ	0xFFD
 30969                           pclatu	equ	0xFFB
 30970                           pclath	equ	0xFFA
 30971                           tblptru	equ	0xFF8
 30972                           tblptrh	equ	0xFF7
 30973                           tblptrl	equ	0xFF6
 30974                           tablat	equ	0xFF5
 30975                           prodh	equ	0xFF4
 30976                           prodl	equ	0xFF3
 30977                           intcon	equ	0xFF2
 30978                           indf0	equ	0xFEF
 30979                           postinc0	equ	0xFEE
 30980                           fsr0h	equ	0xFEA
 30981                           fsr0l	equ	0xFE9
 30982                           wreg	equ	0xFE8
 30983                           indf1	equ	0xFE7
 30984                           postdec1	equ	0xFE5
 30985                           plusw1	equ	0xFE3
 30986                           fsr1h	equ	0xFE2
 30987                           fsr1l	equ	0xFE1
 30988                           bsr	equ	0xFE0
 30989                           indf2	equ	0xFDF
 30990                           postinc2	equ	0xFDE
 30991                           postdec2	equ	0xFDD
 30992                           plusw2	equ	0xFDB
 30993                           fsr2h	equ	0xFDA
 30994                           fsr2l	equ	0xFD9
 30995                           status	equ	0xFD8
 30996                           
 30997 ;; *************** function i2___ftdiv *****************
 30998 ;; Defined at:
 30999 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 31000 ;; Parameters:    Size  Location     Type
 31001 ;;  f1              3   20[COMRAM] float 
 31002 ;;  f2              3   23[COMRAM] float 
 31003 ;; Auto vars:     Size  Location     Type
 31004 ;;  __ftdiv         3   31[COMRAM] float 
 31005 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 31006 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 31007 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 31008 ;; Return value:  Size  Location     Type
 31009 ;;                  3   20[COMRAM] float 
 31010 ;; Registers used:
 31011 ;;		wreg, status,2, status,0, cstack
 31012 ;; Tracked objects:
 31013 ;;		On entry : 0/0
 31014 ;;		On exit  : 0/0
 31015 ;;		Unchanged: 0/0
 31016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31017 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31018 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31019 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31020 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31021 ;;Total ram usage:       15 bytes
 31022 ;; Hardware stack levels used:    1
 31023 ;; Hardware stack levels required when called:    1
 31024 ;; This function calls:
 31025 ;;		i2___ftpack
 31026 ;; This function is called by:
 31027 ;;		_peakToRMS
 31028 ;;		_currentMeasuredToPeak
 31029 ;;		_ADCPostProcessingCallback
 31030 ;;		_asin
 31031 ;;		_atan
 31032 ;;		_sin
 31033 ;; This function uses a non-reentrant model
 31034 ;;
 31035                           
 31036                           	psect	text116
 31037  0151DE                     __ptext116:
 31038                           	opt stack 0
 31039  0151DE                     i2___ftdiv:
 31040                           	opt stack 14
 31041                           
 31042                           ;incstack = 0
 31043  0151DE  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 31044  0151E2  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 31045  0151E4  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 31046  0151E6  3416               	rlcf	i2___ftdiv@f1+1,w,c
 31047  0151E8  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 31048  0151EA  E301               	bnc	u1824_41
 31049  0151EC  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 31050  0151EE                     u1824_41:
 31051  0151EE  501B               	movf	??i2___ftdiv,w,c
 31052  0151F0  6E1F               	movwf	i2___ftdiv@exp,c
 31053  0151F2  501F               	movf	i2___ftdiv@exp,w,c
 31054  0151F4  A4D8               	btfss	status,2,c
 31055  0151F6  D007               	goto	i2l1768
 31056  0151F8  0E00               	movlw	0
 31057  0151FA  6E15               	movwf	?i2___ftdiv,c
 31058  0151FC  0E00               	movlw	0
 31059  0151FE  6E16               	movwf	?i2___ftdiv+1,c
 31060  015200  0E00               	movlw	0
 31061  015202  6E17               	movwf	?i2___ftdiv+2,c
 31062  015204  0012               	return	
 31063  015206                     i2l1768:
 31064  015206  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 31065  01520A  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 31066  01520C  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 31067  01520E  3419               	rlcf	i2___ftdiv@f2+1,w,c
 31068  015210  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 31069  015212  E301               	bnc	u1826_41
 31070  015214  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 31071  015216                     u1826_41:
 31072  015216  501B               	movf	??i2___ftdiv,w,c
 31073  015218  6E23               	movwf	i2___ftdiv@sign,c
 31074  01521A  5023               	movf	i2___ftdiv@sign,w,c
 31075  01521C  A4D8               	btfss	status,2,c
 31076  01521E  D007               	goto	i2l1770
 31077  015220  0E00               	movlw	0
 31078  015222  6E15               	movwf	?i2___ftdiv,c
 31079  015224  0E00               	movlw	0
 31080  015226  6E16               	movwf	?i2___ftdiv+1,c
 31081  015228  0E00               	movlw	0
 31082  01522A  6E17               	movwf	?i2___ftdiv+2,c
 31083  01522C  0012               	return	
 31084  01522E                     i2l1770:
 31085  01522E  0E00               	movlw	0
 31086  015230  6E20               	movwf	i2___ftdiv@f3,c
 31087  015232  0E00               	movlw	0
 31088  015234  6E21               	movwf	i2___ftdiv@f3+1,c
 31089  015236  0E00               	movlw	0
 31090  015238  6E22               	movwf	i2___ftdiv@f3+2,c
 31091  01523A  5023               	movf	i2___ftdiv@sign,w,c
 31092  01523C  0F89               	addlw	137
 31093  01523E  5E1F               	subwf	i2___ftdiv@exp,f,c
 31094  015240  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 31095  015244  501A               	movf	i2___ftdiv@f2+2,w,c
 31096  015246  1A23               	xorwf	i2___ftdiv@sign,f,c
 31097  015248  0E80               	movlw	128
 31098  01524A  1623               	andwf	i2___ftdiv@sign,f,c
 31099  01524C  8E16               	bsf	i2___ftdiv@f1+1,7,c
 31100  01524E  0EFF               	movlw	255
 31101  015250  1615               	andwf	i2___ftdiv@f1,f,c
 31102  015252  0EFF               	movlw	255
 31103  015254  1616               	andwf	i2___ftdiv@f1+1,f,c
 31104  015256  0E00               	movlw	0
 31105  015258  1617               	andwf	i2___ftdiv@f1+2,f,c
 31106  01525A  8E19               	bsf	i2___ftdiv@f2+1,7,c
 31107  01525C  0EFF               	movlw	255
 31108  01525E  1618               	andwf	i2___ftdiv@f2,f,c
 31109  015260  0EFF               	movlw	255
 31110  015262  1619               	andwf	i2___ftdiv@f2+1,f,c
 31111  015264  0E00               	movlw	0
 31112  015266  161A               	andwf	i2___ftdiv@f2+2,f,c
 31113  015268  0E18               	movlw	24
 31114  01526A  6E1E               	movwf	i2___ftdiv@cntr,c
 31115  01526C  90D8               	bcf	status,0,c
 31116  01526E  3620               	rlcf	i2___ftdiv@f3,f,c
 31117  015270  3621               	rlcf	i2___ftdiv@f3+1,f,c
 31118  015272  3622               	rlcf	i2___ftdiv@f3+2,f,c
 31119  015274  5018               	movf	i2___ftdiv@f2,w,c
 31120  015276  5C15               	subwf	i2___ftdiv@f1,w,c
 31121  015278  5019               	movf	i2___ftdiv@f2+1,w,c
 31122  01527A  5816               	subwfb	i2___ftdiv@f1+1,w,c
 31123  01527C  501A               	movf	i2___ftdiv@f2+2,w,c
 31124  01527E  5817               	subwfb	i2___ftdiv@f1+2,w,c
 31125  015280  A0D8               	btfss	status,0,c
 31126  015282  D007               	goto	i2l1772
 31127  015284  5018               	movf	i2___ftdiv@f2,w,c
 31128  015286  5E15               	subwf	i2___ftdiv@f1,f,c
 31129  015288  5019               	movf	i2___ftdiv@f2+1,w,c
 31130  01528A  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 31131  01528C  501A               	movf	i2___ftdiv@f2+2,w,c
 31132  01528E  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 31133  015290  8020               	bsf	i2___ftdiv@f3,0,c
 31134  015292                     i2l1772:
 31135  015292  90D8               	bcf	status,0,c
 31136  015294  3615               	rlcf	i2___ftdiv@f1,f,c
 31137  015296  3616               	rlcf	i2___ftdiv@f1+1,f,c
 31138  015298  3617               	rlcf	i2___ftdiv@f1+2,f,c
 31139  01529A  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 31140  01529C  D7E7               	goto	i2l1771
 31141  01529E  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 31142  0152A2  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 31143  0152A6  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 31144  0152AA  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 31145  0152AE  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 31146  0152B2  EC92  F0AC         	call	i2___ftpack	;wreg free
 31147  0152B6  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 31148  0152BA  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 31149  0152BE  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 31150  0152C2  0012               	return	
 31151  0152C4                     __end_ofi2___ftdiv:
 31152                           	opt stack 0
 31153                           tosu	equ	0xFFF
 31154                           tosh	equ	0xFFE
 31155                           tosl	equ	0xFFD
 31156                           pclatu	equ	0xFFB
 31157                           pclath	equ	0xFFA
 31158                           tblptru	equ	0xFF8
 31159                           tblptrh	equ	0xFF7
 31160                           tblptrl	equ	0xFF6
 31161                           tablat	equ	0xFF5
 31162                           prodh	equ	0xFF4
 31163                           prodl	equ	0xFF3
 31164                           intcon	equ	0xFF2
 31165                           indf0	equ	0xFEF
 31166                           postinc0	equ	0xFEE
 31167                           fsr0h	equ	0xFEA
 31168                           fsr0l	equ	0xFE9
 31169                           wreg	equ	0xFE8
 31170                           indf1	equ	0xFE7
 31171                           postdec1	equ	0xFE5
 31172                           plusw1	equ	0xFE3
 31173                           fsr1h	equ	0xFE2
 31174                           fsr1l	equ	0xFE1
 31175                           bsr	equ	0xFE0
 31176                           indf2	equ	0xFDF
 31177                           postinc2	equ	0xFDE
 31178                           postdec2	equ	0xFDD
 31179                           plusw2	equ	0xFDB
 31180                           fsr2h	equ	0xFDA
 31181                           fsr2l	equ	0xFD9
 31182                           status	equ	0xFD8
 31183                           
 31184 ;; *************** function _floor *****************
 31185 ;; Defined at:
 31186 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 31187 ;; Parameters:    Size  Location     Type
 31188 ;;  x               3   85[COMRAM] float 
 31189 ;; Auto vars:     Size  Location     Type
 31190 ;;  i               3   88[COMRAM] float 
 31191 ;;  expon           2   91[COMRAM] int 
 31192 ;; Return value:  Size  Location     Type
 31193 ;;                  3   85[COMRAM] int 
 31194 ;; Registers used:
 31195 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31196 ;; Tracked objects:
 31197 ;;		On entry : 0/0
 31198 ;;		On exit  : 0/0
 31199 ;;		Unchanged: 0/0
 31200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31201 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31202 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31204 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31205 ;;Total ram usage:        8 bytes
 31206 ;; Hardware stack levels used:    1
 31207 ;; Hardware stack levels required when called:    2
 31208 ;; This function calls:
 31209 ;;		___altoft
 31210 ;;		_frexp
 31211 ;;		i2___ftadd
 31212 ;;		i2___ftge
 31213 ;;		i2___fttol
 31214 ;; This function is called by:
 31215 ;;		_sin
 31216 ;; This function uses a non-reentrant model
 31217 ;;
 31218                           
 31219                           	psect	text117
 31220  0153A8                     __ptext117:
 31221                           	opt stack 0
 31222  0153A8                     _floor:
 31223                           	opt stack 11
 31224                           
 31225                           ;incstack = 0
 31226  0153A8  C056  F001         	movff	floor@x,frexp@value
 31227  0153AC  C057  F002         	movff	floor@x+1,frexp@value+1
 31228  0153B0  C058  F003         	movff	floor@x+2,frexp@value+2
 31229  0153B4  0E5C               	movlw	low floor@expon
 31230  0153B6  6E04               	movwf	frexp@eptr,c
 31231  0153B8  0E00               	movlw	high floor@expon
 31232  0153BA  6E05               	movwf	frexp@eptr+1,c
 31233  0153BC  EC82  F0B0         	call	_frexp	;wreg free
 31234  0153C0  AE5D               	btfss	floor@expon+1,7,c
 31235  0153C2  D010               	goto	i2l2176
 31236  0153C4  AE58               	btfss	floor@x+2,7,c
 31237  0153C6  D007               	goto	i2l2177
 31238  0153C8  0E00               	movlw	0
 31239  0153CA  6E56               	movwf	?_floor,c
 31240  0153CC  0E80               	movlw	128
 31241  0153CE  6E57               	movwf	?_floor+1,c
 31242  0153D0  0EBF               	movlw	191
 31243  0153D2  6E58               	movwf	?_floor+2,c
 31244  0153D4  0012               	return	
 31245  0153D6                     i2l2177:
 31246  0153D6  0E00               	movlw	0
 31247  0153D8  6E56               	movwf	?_floor,c
 31248  0153DA  0E00               	movlw	0
 31249  0153DC  6E57               	movwf	?_floor+1,c
 31250  0153DE  0E00               	movlw	0
 31251  0153E0  6E58               	movwf	?_floor+2,c
 31252  0153E2  0012               	return	
 31253  0153E4                     i2l2176:
 31254  0153E4  505D               	movf	floor@expon+1,w,c
 31255  0153E6  E104               	bnz	i2u1858_40
 31256  0153E8  0E15               	movlw	21
 31257  0153EA  5C5C               	subwf	floor@expon,w,c
 31258  0153EC  A0D8               	btfss	status,0,c
 31259  0153EE  D007               	goto	i2l2179
 31260  0153F0                     i2u1858_40:
 31261  0153F0  C056  F056         	movff	floor@x,?_floor
 31262  0153F4  C057  F057         	movff	floor@x+1,?_floor+1
 31263  0153F8  C058  F058         	movff	floor@x+2,?_floor+2
 31264  0153FC  0012               	return	
 31265  0153FE                     i2l2179:
 31266  0153FE  C056  F03D         	movff	floor@x,i2___fttol@f1
 31267  015402  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 31268  015406  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 31269  01540A  EC87  F0A7         	call	i2___fttol	;wreg free
 31270  01540E  C03D  F04C         	movff	?i2___fttol,___altoft@c
 31271  015412  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 31272  015416  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 31273  01541A  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 31274  01541E  ECBE  F0B0         	call	___altoft	;wreg free
 31275  015422  C04C  F059         	movff	?___altoft,floor@i
 31276  015426  C04D  F05A         	movff	?___altoft+1,floor@i+1
 31277  01542A  C04E  F05B         	movff	?___altoft+2,floor@i+2
 31278  01542E  C056  F02A         	movff	floor@x,i2___ftge@ff1
 31279  015432  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 31280  015436  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 31281  01543A  C059  F02D         	movff	floor@i,i2___ftge@ff2
 31282  01543E  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 31283  015442  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 31284  015446  EC20  F0AE         	call	i2___ftge	;wreg free
 31285  01544A  B0D8               	btfsc	status,0,c
 31286  01544C  D015               	goto	i2l2180
 31287  01544E  C059  F040         	movff	floor@i,i2___ftadd@f1
 31288  015452  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 31289  015456  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 31290  01545A  0E00               	movlw	0
 31291  01545C  6E43               	movwf	i2___ftadd@f2,c
 31292  01545E  0E80               	movlw	128
 31293  015460  6E44               	movwf	i2___ftadd@f2+1,c
 31294  015462  0EBF               	movlw	191
 31295  015464  6E45               	movwf	i2___ftadd@f2+2,c
 31296  015466  EC05  F0A2         	call	i2___ftadd	;wreg free
 31297  01546A  C040  F056         	movff	?i2___ftadd,?_floor
 31298  01546E  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 31299  015472  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 31300  015476  0012               	return	
 31301  015478                     i2l2180:
 31302  015478  C059  F056         	movff	floor@i,?_floor
 31303  01547C  C05A  F057         	movff	floor@i+1,?_floor+1
 31304  015480  C05B  F058         	movff	floor@i+2,?_floor+2
 31305  015484  0012               	return		;funcret
 31306  015486                     __end_of_floor:
 31307                           	opt stack 0
 31308                           tosu	equ	0xFFF
 31309                           tosh	equ	0xFFE
 31310                           tosl	equ	0xFFD
 31311                           pclatu	equ	0xFFB
 31312                           pclath	equ	0xFFA
 31313                           tblptru	equ	0xFF8
 31314                           tblptrh	equ	0xFF7
 31315                           tblptrl	equ	0xFF6
 31316                           tablat	equ	0xFF5
 31317                           prodh	equ	0xFF4
 31318                           prodl	equ	0xFF3
 31319                           intcon	equ	0xFF2
 31320                           indf0	equ	0xFEF
 31321                           postinc0	equ	0xFEE
 31322                           fsr0h	equ	0xFEA
 31323                           fsr0l	equ	0xFE9
 31324                           wreg	equ	0xFE8
 31325                           indf1	equ	0xFE7
 31326                           postdec1	equ	0xFE5
 31327                           plusw1	equ	0xFE3
 31328                           fsr1h	equ	0xFE2
 31329                           fsr1l	equ	0xFE1
 31330                           bsr	equ	0xFE0
 31331                           indf2	equ	0xFDF
 31332                           postinc2	equ	0xFDE
 31333                           postdec2	equ	0xFDD
 31334                           plusw2	equ	0xFDB
 31335                           fsr2h	equ	0xFDA
 31336                           fsr2l	equ	0xFD9
 31337                           status	equ	0xFD8
 31338                           
 31339 ;; *************** function i2___fttol *****************
 31340 ;; Defined at:
 31341 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 31342 ;; Parameters:    Size  Location     Type
 31343 ;;  f1              3   60[COMRAM] float 
 31344 ;; Auto vars:     Size  Location     Type
 31345 ;;  __fttol         4   70[COMRAM] unsigned long 
 31346 ;;  __fttol         1   74[COMRAM] unsigned char 
 31347 ;;  __fttol         1   69[COMRAM] unsigned char 
 31348 ;; Return value:  Size  Location     Type
 31349 ;;                  4   60[COMRAM] long 
 31350 ;; Registers used:
 31351 ;;		wreg, status,2, status,0
 31352 ;; Tracked objects:
 31353 ;;		On entry : 0/0
 31354 ;;		On exit  : 0/0
 31355 ;;		Unchanged: 0/0
 31356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31358 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31359 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31360 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31361 ;;Total ram usage:       15 bytes
 31362 ;; Hardware stack levels used:    1
 31363 ;; This function calls:
 31364 ;;		Nothing
 31365 ;; This function is called by:
 31366 ;;		_floor
 31367 ;;		i2_printf
 31368 ;; This function uses a non-reentrant model
 31369 ;;
 31370                           
 31371                           	psect	text118
 31372  014F0E                     __ptext118:
 31373                           	opt stack 0
 31374  014F0E                     i2___fttol:
 31375                           	opt stack 15
 31376                           
 31377                           ;incstack = 0
 31378  014F0E  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 31379  014F12  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 31380  014F14  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 31381  014F16  343E               	rlcf	i2___fttol@f1+1,w,c
 31382  014F18  3641               	rlcf	??i2___fttol& (0+255),f,c
 31383  014F1A  E301               	bnc	u1845_41
 31384  014F1C  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 31385  014F1E                     u1845_41:
 31386  014F1E  5041               	movf	??i2___fttol,w,c
 31387  014F20  6E4B               	movwf	i2___fttol@exp1,c
 31388  014F22  504B               	movf	i2___fttol@exp1,w,c
 31389  014F24  A4D8               	btfss	status,2,c
 31390  014F26  D009               	goto	i2l1821
 31391  014F28  0E00               	movlw	0
 31392  014F2A  6E3D               	movwf	?i2___fttol,c
 31393  014F2C  0E00               	movlw	0
 31394  014F2E  6E3E               	movwf	?i2___fttol+1,c
 31395  014F30  0E00               	movlw	0
 31396  014F32  6E3F               	movwf	?i2___fttol+2,c
 31397  014F34  0E00               	movlw	0
 31398  014F36  6E40               	movwf	?i2___fttol+3,c
 31399  014F38  0012               	return	
 31400  014F3A                     i2l1821:
 31401  014F3A  0E17               	movlw	23
 31402  014F3C  6E41               	movwf	??i2___fttol& (0+255),c
 31403  014F3E  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 31404  014F42  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 31405  014F46  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 31406  014F4A  2841               	incf	??i2___fttol,w,c
 31407  014F4C  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 31408  014F4E  D004               	goto	i2u1847_40
 31409  014F50                     i2u1847_45:
 31410  014F50  90D8               	bcf	status,0,c
 31411  014F52  3244               	rrcf	??i2___fttol+3,f,c
 31412  014F54  3243               	rrcf	??i2___fttol+2,f,c
 31413  014F56  3242               	rrcf	??i2___fttol+1,f,c
 31414  014F58                     i2u1847_40:
 31415  014F58  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 31416  014F5A  D7FA               	goto	i2u1847_45
 31417  014F5C  5042               	movf	??i2___fttol+1,w,c
 31418  014F5E  6E46               	movwf	i2___fttol@sign1,c
 31419  014F60  8E3E               	bsf	i2___fttol@f1+1,7,c
 31420  014F62  0EFF               	movlw	255
 31421  014F64  163D               	andwf	i2___fttol@f1,f,c
 31422  014F66  0EFF               	movlw	255
 31423  014F68  163E               	andwf	i2___fttol@f1+1,f,c
 31424  014F6A  0E00               	movlw	0
 31425  014F6C  163F               	andwf	i2___fttol@f1+2,f,c
 31426  014F6E  503D               	movf	i2___fttol@f1,w,c
 31427  014F70  6E47               	movwf	i2___fttol@lval,c
 31428  014F72  503E               	movf	i2___fttol@f1+1,w,c
 31429  014F74  6E48               	movwf	i2___fttol@lval+1,c
 31430  014F76  503F               	movf	i2___fttol@f1+2,w,c
 31431  014F78  6E49               	movwf	i2___fttol@lval+2,c
 31432  014F7A  6A4A               	clrf	i2___fttol@lval+3,c
 31433  014F7C  0E8E               	movlw	142
 31434  014F7E  5E4B               	subwf	i2___fttol@exp1,f,c
 31435  014F80  AE4B               	btfss	i2___fttol@exp1,7,c
 31436  014F82  D016               	goto	i2l1823
 31437  014F84  504B               	movf	i2___fttol@exp1,w,c
 31438  014F86  0A80               	xorlw	128
 31439  014F88  0F8F               	addlw	143
 31440  014F8A  B0D8               	btfsc	status,0,c
 31441  014F8C  D009               	goto	i2l1824
 31442  014F8E  0E00               	movlw	0
 31443  014F90  6E3D               	movwf	?i2___fttol,c
 31444  014F92  0E00               	movlw	0
 31445  014F94  6E3E               	movwf	?i2___fttol+1,c
 31446  014F96  0E00               	movlw	0
 31447  014F98  6E3F               	movwf	?i2___fttol+2,c
 31448  014F9A  0E00               	movlw	0
 31449  014F9C  6E40               	movwf	?i2___fttol+3,c
 31450  014F9E  0012               	return	
 31451  014FA0                     i2l1824:
 31452  014FA0  90D8               	bcf	status,0,c
 31453  014FA2  324A               	rrcf	i2___fttol@lval+3,f,c
 31454  014FA4  3249               	rrcf	i2___fttol@lval+2,f,c
 31455  014FA6  3248               	rrcf	i2___fttol@lval+1,f,c
 31456  014FA8  3247               	rrcf	i2___fttol@lval,f,c
 31457  014FAA  3E4B               	incfsz	i2___fttol@exp1,f,c
 31458  014FAC  D7F9               	goto	i2l1824
 31459  014FAE  D015               	goto	i2u1851_40
 31460  014FB0                     i2l1823:
 31461  014FB0  0E17               	movlw	23
 31462  014FB2  644B               	cpfsgt	i2___fttol@exp1,c
 31463  014FB4  D00F               	goto	i2l1829
 31464  014FB6  0E00               	movlw	0
 31465  014FB8  6E3D               	movwf	?i2___fttol,c
 31466  014FBA  0E00               	movlw	0
 31467  014FBC  6E3E               	movwf	?i2___fttol+1,c
 31468  014FBE  0E00               	movlw	0
 31469  014FC0  6E3F               	movwf	?i2___fttol+2,c
 31470  014FC2  0E00               	movlw	0
 31471  014FC4  6E40               	movwf	?i2___fttol+3,c
 31472  014FC6  0012               	return	
 31473  014FC8  90D8               	bcf	status,0,c
 31474  014FCA  3647               	rlcf	i2___fttol@lval,f,c
 31475  014FCC  3648               	rlcf	i2___fttol@lval+1,f,c
 31476  014FCE  3649               	rlcf	i2___fttol@lval+2,f,c
 31477  014FD0  364A               	rlcf	i2___fttol@lval+3,f,c
 31478  014FD2  064B               	decf	i2___fttol@exp1,f,c
 31479  014FD4                     i2l1829:
 31480  014FD4  504B               	movf	i2___fttol@exp1,w,c
 31481  014FD6  A4D8               	btfss	status,2,c
 31482  014FD8  D7F7               	goto	i2l1830
 31483  014FDA                     i2u1851_40:
 31484  014FDA  5046               	movf	i2___fttol@sign1,w,c
 31485  014FDC  B4D8               	btfsc	status,2,c
 31486  014FDE  D008               	goto	i2l1832
 31487  014FE0  1E4A               	comf	i2___fttol@lval+3,f,c
 31488  014FE2  1E49               	comf	i2___fttol@lval+2,f,c
 31489  014FE4  1E48               	comf	i2___fttol@lval+1,f,c
 31490  014FE6  6C47               	negf	i2___fttol@lval,c
 31491  014FE8  0E00               	movlw	0
 31492  014FEA  2248               	addwfc	i2___fttol@lval+1,f,c
 31493  014FEC  2249               	addwfc	i2___fttol@lval+2,f,c
 31494  014FEE  224A               	addwfc	i2___fttol@lval+3,f,c
 31495  014FF0                     i2l1832:
 31496  014FF0  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 31497  014FF4  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 31498  014FF8  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 31499  014FFC  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 31500  015000  0012               	return	
 31501  015002                     __end_ofi2___fttol:
 31502                           	opt stack 0
 31503                           tosu	equ	0xFFF
 31504                           tosh	equ	0xFFE
 31505                           tosl	equ	0xFFD
 31506                           pclatu	equ	0xFFB
 31507                           pclath	equ	0xFFA
 31508                           tblptru	equ	0xFF8
 31509                           tblptrh	equ	0xFF7
 31510                           tblptrl	equ	0xFF6
 31511                           tablat	equ	0xFF5
 31512                           prodh	equ	0xFF4
 31513                           prodl	equ	0xFF3
 31514                           intcon	equ	0xFF2
 31515                           indf0	equ	0xFEF
 31516                           postinc0	equ	0xFEE
 31517                           fsr0h	equ	0xFEA
 31518                           fsr0l	equ	0xFE9
 31519                           wreg	equ	0xFE8
 31520                           indf1	equ	0xFE7
 31521                           postdec1	equ	0xFE5
 31522                           plusw1	equ	0xFE3
 31523                           fsr1h	equ	0xFE2
 31524                           fsr1l	equ	0xFE1
 31525                           bsr	equ	0xFE0
 31526                           indf2	equ	0xFDF
 31527                           postinc2	equ	0xFDE
 31528                           postdec2	equ	0xFDD
 31529                           plusw2	equ	0xFDB
 31530                           fsr2h	equ	0xFDA
 31531                           fsr2l	equ	0xFD9
 31532                           status	equ	0xFD8
 31533                           
 31534 ;; *************** function i2___ftge *****************
 31535 ;; Defined at:
 31536 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 31537 ;; Parameters:    Size  Location     Type
 31538 ;;  ff1             3   41[COMRAM] float 
 31539 ;;  ff2             3   44[COMRAM] float 
 31540 ;; Auto vars:     Size  Location     Type
 31541 ;;		None
 31542 ;; Return value:  Size  Location     Type
 31543 ;;		None               void
 31544 ;; Registers used:
 31545 ;;		wreg, status,2, status,0
 31546 ;; Tracked objects:
 31547 ;;		On entry : 0/0
 31548 ;;		On exit  : 0/0
 31549 ;;		Unchanged: 0/0
 31550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31551 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31553 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31554 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31555 ;;Total ram usage:        9 bytes
 31556 ;; Hardware stack levels used:    1
 31557 ;; This function calls:
 31558 ;;		Nothing
 31559 ;; This function is called by:
 31560 ;;		_ADCPostProcessingCallback
 31561 ;;		_asin
 31562 ;;		_atan
 31563 ;;		_sin
 31564 ;;		_sqrt
 31565 ;;		_floor
 31566 ;;		i2_printf
 31567 ;; This function uses a non-reentrant model
 31568 ;;
 31569                           
 31570                           	psect	text119
 31571  015C40                     __ptext119:
 31572                           	opt stack 0
 31573  015C40                     i2___ftge:
 31574                           	opt stack 15
 31575                           
 31576                           ;incstack = 0
 31577  015C40  AE2C               	btfss	i2___ftge@ff1+2,7,c
 31578  015C42  D016               	goto	i2l1793
 31579  015C44  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 31580  015C48  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 31581  015C4C  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 31582  015C50  1E30               	comf	??i2___ftge,f,c
 31583  015C52  1E31               	comf	??i2___ftge+1,f,c
 31584  015C54  1E32               	comf	??i2___ftge+2,f,c
 31585  015C56  2A30               	incf	??i2___ftge,f,c
 31586  015C58  0E00               	movlw	0
 31587  015C5A  2231               	addwfc	??i2___ftge+1,f,c
 31588  015C5C  2232               	addwfc	??i2___ftge+2,f,c
 31589  015C5E  0E00               	movlw	0
 31590  015C60  2430               	addwf	??i2___ftge,w,c
 31591  015C62  6E2A               	movwf	i2___ftge@ff1,c
 31592  015C64  0E00               	movlw	0
 31593  015C66  2031               	addwfc	??i2___ftge+1,w,c
 31594  015C68  6E2B               	movwf	i2___ftge@ff1+1,c
 31595  015C6A  0E80               	movlw	128
 31596  015C6C  2032               	addwfc	??i2___ftge+2,w,c
 31597  015C6E  6E2C               	movwf	i2___ftge@ff1+2,c
 31598  015C70                     i2l1793:
 31599  015C70  AE2F               	btfss	i2___ftge@ff2+2,7,c
 31600  015C72  D016               	goto	i2l1794
 31601  015C74  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 31602  015C78  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 31603  015C7C  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 31604  015C80  1E30               	comf	??i2___ftge,f,c
 31605  015C82  1E31               	comf	??i2___ftge+1,f,c
 31606  015C84  1E32               	comf	??i2___ftge+2,f,c
 31607  015C86  2A30               	incf	??i2___ftge,f,c
 31608  015C88  0E00               	movlw	0
 31609  015C8A  2231               	addwfc	??i2___ftge+1,f,c
 31610  015C8C  2232               	addwfc	??i2___ftge+2,f,c
 31611  015C8E  0E00               	movlw	0
 31612  015C90  2430               	addwf	??i2___ftge,w,c
 31613  015C92  6E2D               	movwf	i2___ftge@ff2,c
 31614  015C94  0E00               	movlw	0
 31615  015C96  2031               	addwfc	??i2___ftge+1,w,c
 31616  015C98  6E2E               	movwf	i2___ftge@ff2+1,c
 31617  015C9A  0E80               	movlw	128
 31618  015C9C  2032               	addwfc	??i2___ftge+2,w,c
 31619  015C9E  6E2F               	movwf	i2___ftge@ff2+2,c
 31620  015CA0                     i2l1794:
 31621  015CA0  0E00               	movlw	0
 31622  015CA2  1A2A               	xorwf	i2___ftge@ff1,f,c
 31623  015CA4  0E00               	movlw	0
 31624  015CA6  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 31625  015CA8  0E80               	movlw	128
 31626  015CAA  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 31627  015CAC  0E00               	movlw	0
 31628  015CAE  1A2D               	xorwf	i2___ftge@ff2,f,c
 31629  015CB0  0E00               	movlw	0
 31630  015CB2  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 31631  015CB4  0E80               	movlw	128
 31632  015CB6  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 31633  015CB8  502D               	movf	i2___ftge@ff2,w,c
 31634  015CBA  5C2A               	subwf	i2___ftge@ff1,w,c
 31635  015CBC  502E               	movf	i2___ftge@ff2+1,w,c
 31636  015CBE  582B               	subwfb	i2___ftge@ff1+1,w,c
 31637  015CC0  502F               	movf	i2___ftge@ff2+2,w,c
 31638  015CC2  582C               	subwfb	i2___ftge@ff1+2,w,c
 31639  015CC4  B0D8               	btfsc	status,0,c
 31640  015CC6  D002               	goto	i2l13981
 31641  015CC8  90D8               	bcf	status,0,c
 31642  015CCA  0012               	return	
 31643  015CCC                     i2l13981:
 31644  015CCC  80D8               	bsf	status,0,c
 31645  015CCE  0012               	return	
 31646  015CD0                     __end_ofi2___ftge:
 31647                           	opt stack 0
 31648                           tosu	equ	0xFFF
 31649                           tosh	equ	0xFFE
 31650                           tosl	equ	0xFFD
 31651                           pclatu	equ	0xFFB
 31652                           pclath	equ	0xFFA
 31653                           tblptru	equ	0xFF8
 31654                           tblptrh	equ	0xFF7
 31655                           tblptrl	equ	0xFF6
 31656                           tablat	equ	0xFF5
 31657                           prodh	equ	0xFF4
 31658                           prodl	equ	0xFF3
 31659                           intcon	equ	0xFF2
 31660                           indf0	equ	0xFEF
 31661                           postinc0	equ	0xFEE
 31662                           fsr0h	equ	0xFEA
 31663                           fsr0l	equ	0xFE9
 31664                           wreg	equ	0xFE8
 31665                           indf1	equ	0xFE7
 31666                           postdec1	equ	0xFE5
 31667                           plusw1	equ	0xFE3
 31668                           fsr1h	equ	0xFE2
 31669                           fsr1l	equ	0xFE1
 31670                           bsr	equ	0xFE0
 31671                           indf2	equ	0xFDF
 31672                           postinc2	equ	0xFDE
 31673                           postdec2	equ	0xFDD
 31674                           plusw2	equ	0xFDB
 31675                           fsr2h	equ	0xFDA
 31676                           fsr2l	equ	0xFD9
 31677                           status	equ	0xFD8
 31678                           
 31679 ;; *************** function _frexp *****************
 31680 ;; Defined at:
 31681 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 31682 ;; Parameters:    Size  Location     Type
 31683 ;;  value           3    0[COMRAM] float 
 31684 ;;  eptr            2    3[COMRAM] PTR int 
 31685 ;;		 -> floor@expon(2), 
 31686 ;; Auto vars:     Size  Location     Type
 31687 ;;		None
 31688 ;; Return value:  Size  Location     Type
 31689 ;;                  3    0[COMRAM] PTR int 
 31690 ;; Registers used:
 31691 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31692 ;; Tracked objects:
 31693 ;;		On entry : 0/0
 31694 ;;		On exit  : 0/0
 31695 ;;		Unchanged: 0/0
 31696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31697 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31699 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31700 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31701 ;;Total ram usage:        7 bytes
 31702 ;; Hardware stack levels used:    1
 31703 ;; This function calls:
 31704 ;;		Nothing
 31705 ;; This function is called by:
 31706 ;;		_floor
 31707 ;; This function uses a non-reentrant model
 31708 ;;
 31709                           
 31710                           	psect	text120
 31711  016104                     __ptext120:
 31712                           	opt stack 0
 31713  016104                     _frexp:
 31714                           	opt stack 12
 31715                           
 31716                           ;incstack = 0
 31717  016104  5001               	movf	frexp@value,w,c
 31718  016106  1002               	iorwf	frexp@value+1,w,c
 31719  016108  1003               	iorwf	frexp@value+2,w,c
 31720  01610A  A4D8               	btfss	status,2,c
 31721  01610C  D009               	goto	i2l2185
 31722  01610E  C004  FFD9         	movff	frexp@eptr,fsr2l
 31723  016112  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31724  016116  0E00               	movlw	0
 31725  016118  6EDE               	movwf	postinc2,c
 31726  01611A  0E00               	movlw	0
 31727  01611C  6EDD               	movwf	postdec2,c
 31728                           
 31729                           ;	Return value of _frexp is never used
 31730  01611E  0012               	return	
 31731  016120                     i2l2185:
 31732  016120  5003               	movf	frexp@value+2,w,c
 31733  016122  0B7F               	andlw	127
 31734  016124  6E06               	movwf	??_frexp& (0+255),c
 31735  016126  6A07               	clrf	(??_frexp+1)& (0+255),c
 31736  016128  90D8               	bcf	status,0,c
 31737  01612A  3606               	rlcf	??_frexp,f,c
 31738  01612C  3607               	rlcf	??_frexp+1,f,c
 31739  01612E  C004  FFD9         	movff	frexp@eptr,fsr2l
 31740  016132  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31741  016136  C006  FFDE         	movff	??_frexp,postinc2
 31742  01613A  C007  FFDD         	movff	??_frexp+1,postdec2
 31743  01613E  AE02               	btfss	frexp@value+1,7,c
 31744  016140  D003               	goto	i2u1844_40
 31745  016142  6A06               	clrf	??_frexp& (0+255),c
 31746  016144  2A06               	incf	??_frexp& (0+255),f,c
 31747  016146  D001               	goto	i2u1844_48
 31748  016148                     i2u1844_40:
 31749  016148  6A06               	clrf	??_frexp& (0+255),c
 31750  01614A                     i2u1844_48:
 31751  01614A  5006               	movf	??_frexp,w,c
 31752  01614C  C004  FFD9         	movff	frexp@eptr,fsr2l
 31753  016150  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31754  016154  12DE               	iorwf	postinc2,f,c
 31755  016156  0E00               	movlw	0
 31756  016158  12DD               	iorwf	postdec2,f,c
 31757  01615A  C004  FFD9         	movff	frexp@eptr,fsr2l
 31758  01615E  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 31759  016162  0E82               	movlw	130
 31760  016164  26DE               	addwf	postinc2,f,c
 31761  016166  0EFF               	movlw	255
 31762  016168  22DD               	addwfc	postdec2,f,c
 31763  01616A  8003               	bsf	frexp@value+2,0,c
 31764  01616C  8203               	bsf	frexp@value+2,1,c
 31765  01616E  8403               	bsf	frexp@value+2,2,c
 31766  016170  8603               	bsf	frexp@value+2,3,c
 31767  016172  8803               	bsf	frexp@value+2,4,c
 31768  016174  8A03               	bsf	frexp@value+2,5,c
 31769  016176  9C03               	bcf	frexp@value+2,6,c
 31770  016178  9E02               	bcf	frexp@value+1,7,c
 31771  01617A  0012               	return	
 31772  01617C                     __end_of_frexp:
 31773                           	opt stack 0
 31774                           tosu	equ	0xFFF
 31775                           tosh	equ	0xFFE
 31776                           tosl	equ	0xFFD
 31777                           pclatu	equ	0xFFB
 31778                           pclath	equ	0xFFA
 31779                           tblptru	equ	0xFF8
 31780                           tblptrh	equ	0xFF7
 31781                           tblptrl	equ	0xFF6
 31782                           tablat	equ	0xFF5
 31783                           prodh	equ	0xFF4
 31784                           prodl	equ	0xFF3
 31785                           intcon	equ	0xFF2
 31786                           indf0	equ	0xFEF
 31787                           postinc0	equ	0xFEE
 31788                           fsr0h	equ	0xFEA
 31789                           fsr0l	equ	0xFE9
 31790                           wreg	equ	0xFE8
 31791                           indf1	equ	0xFE7
 31792                           postdec1	equ	0xFE5
 31793                           plusw1	equ	0xFE3
 31794                           fsr1h	equ	0xFE2
 31795                           fsr1l	equ	0xFE1
 31796                           bsr	equ	0xFE0
 31797                           indf2	equ	0xFDF
 31798                           postinc2	equ	0xFDE
 31799                           postdec2	equ	0xFDD
 31800                           plusw2	equ	0xFDB
 31801                           fsr2h	equ	0xFDA
 31802                           fsr2l	equ	0xFD9
 31803                           status	equ	0xFD8
 31804                           
 31805 ;; *************** function ___altoft *****************
 31806 ;; Defined at:
 31807 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 31808 ;; Parameters:    Size  Location     Type
 31809 ;;  c               4   75[COMRAM] long 
 31810 ;; Auto vars:     Size  Location     Type
 31811 ;;  sign            1   84[COMRAM] unsigned char 
 31812 ;;  exp             1   83[COMRAM] unsigned char 
 31813 ;; Return value:  Size  Location     Type
 31814 ;;                  3   75[COMRAM] float 
 31815 ;; Registers used:
 31816 ;;		wreg, status,2, status,0, cstack
 31817 ;; Tracked objects:
 31818 ;;		On entry : 0/0
 31819 ;;		On exit  : 0/0
 31820 ;;		Unchanged: 0/0
 31821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31822 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31823 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31824 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31825 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31826 ;;Total ram usage:       10 bytes
 31827 ;; Hardware stack levels used:    1
 31828 ;; Hardware stack levels required when called:    1
 31829 ;; This function calls:
 31830 ;;		i2___ftpack
 31831 ;; This function is called by:
 31832 ;;		_floor
 31833 ;; This function uses a non-reentrant model
 31834 ;;
 31835                           
 31836                           	psect	text121
 31837  01617C                     __ptext121:
 31838                           	opt stack 0
 31839  01617C                     ___altoft:
 31840                           	opt stack 11
 31841                           
 31842                           ;incstack = 0
 31843  01617C  0E00               	movlw	0
 31844  01617E  6E55               	movwf	___altoft@sign,c
 31845  016180  0E8E               	movlw	142
 31846  016182  6E54               	movwf	___altoft@exp,c
 31847  016184  AE4F               	btfss	___altoft@c+3,7,c
 31848  016186  D011               	goto	i2l1498
 31849  016188  1E4F               	comf	___altoft@c+3,f,c
 31850  01618A  1E4E               	comf	___altoft@c+2,f,c
 31851  01618C  1E4D               	comf	___altoft@c+1,f,c
 31852  01618E  6C4C               	negf	___altoft@c,c
 31853  016190  0E00               	movlw	0
 31854  016192  224D               	addwfc	___altoft@c+1,f,c
 31855  016194  224E               	addwfc	___altoft@c+2,f,c
 31856  016196  224F               	addwfc	___altoft@c+3,f,c
 31857  016198  0E01               	movlw	1
 31858  01619A  6E55               	movwf	___altoft@sign,c
 31859  01619C  D006               	goto	i2l1498
 31860  01619E  90D8               	bcf	status,0,c
 31861  0161A0  324F               	rrcf	___altoft@c+3,f,c
 31862  0161A2  324E               	rrcf	___altoft@c+2,f,c
 31863  0161A4  324D               	rrcf	___altoft@c+1,f,c
 31864  0161A6  324C               	rrcf	___altoft@c,f,c
 31865  0161A8  2A54               	incf	___altoft@exp,f,c
 31866  0161AA                     i2l1498:
 31867  0161AA  0E00               	movlw	0
 31868  0161AC  144C               	andwf	___altoft@c,w,c
 31869  0161AE  6E50               	movwf	??___altoft& (0+255),c
 31870  0161B0  0E00               	movlw	0
 31871  0161B2  144D               	andwf	___altoft@c+1,w,c
 31872  0161B4  6E51               	movwf	(??___altoft+1)& (0+255),c
 31873  0161B6  0E00               	movlw	0
 31874  0161B8  144E               	andwf	___altoft@c+2,w,c
 31875  0161BA  6E52               	movwf	(??___altoft+2)& (0+255),c
 31876  0161BC  0EFF               	movlw	255
 31877  0161BE  144F               	andwf	___altoft@c+3,w,c
 31878  0161C0  6E53               	movwf	(??___altoft+3)& (0+255),c
 31879  0161C2  5050               	movf	??___altoft,w,c
 31880  0161C4  1051               	iorwf	??___altoft+1,w,c
 31881  0161C6  1052               	iorwf	??___altoft+2,w,c
 31882  0161C8  1053               	iorwf	??___altoft+3,w,c
 31883  0161CA  A4D8               	btfss	status,2,c
 31884  0161CC  D7E8               	goto	i2l1499
 31885  0161CE  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 31886  0161D2  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 31887  0161D6  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 31888  0161DA  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 31889  0161DE  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 31890  0161E2  EC92  F0AC         	call	i2___ftpack	;wreg free
 31891  0161E6  C001  F04C         	movff	?i2___ftpack,?___altoft
 31892  0161EA  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 31893  0161EE  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 31894  0161F2  0012               	return	
 31895  0161F4                     __end_of___altoft:
 31896                           	opt stack 0
 31897                           tosu	equ	0xFFF
 31898                           tosh	equ	0xFFE
 31899                           tosl	equ	0xFFD
 31900                           pclatu	equ	0xFFB
 31901                           pclath	equ	0xFFA
 31902                           tblptru	equ	0xFF8
 31903                           tblptrh	equ	0xFF7
 31904                           tblptrl	equ	0xFF6
 31905                           tablat	equ	0xFF5
 31906                           prodh	equ	0xFF4
 31907                           prodl	equ	0xFF3
 31908                           intcon	equ	0xFF2
 31909                           indf0	equ	0xFEF
 31910                           postinc0	equ	0xFEE
 31911                           fsr0h	equ	0xFEA
 31912                           fsr0l	equ	0xFE9
 31913                           wreg	equ	0xFE8
 31914                           indf1	equ	0xFE7
 31915                           postdec1	equ	0xFE5
 31916                           plusw1	equ	0xFE3
 31917                           fsr1h	equ	0xFE2
 31918                           fsr1l	equ	0xFE1
 31919                           bsr	equ	0xFE0
 31920                           indf2	equ	0xFDF
 31921                           postinc2	equ	0xFDE
 31922                           postdec2	equ	0xFDD
 31923                           plusw2	equ	0xFDB
 31924                           fsr2h	equ	0xFDA
 31925                           fsr2l	equ	0xFD9
 31926                           status	equ	0xFD8
 31927                           
 31928 ;; *************** function _eval_poly *****************
 31929 ;; Defined at:
 31930 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 31931 ;; Parameters:    Size  Location     Type
 31932 ;;  x               3   75[COMRAM] float 
 31933 ;;  d               2   78[COMRAM] PTR const 
 31934 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 31935 ;;  n               2   80[COMRAM] int 
 31936 ;; Auto vars:     Size  Location     Type
 31937 ;;  res             3   84[COMRAM] int 
 31938 ;; Return value:  Size  Location     Type
 31939 ;;                  3   75[COMRAM] int 
 31940 ;; Registers used:
 31941 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31942 ;; Tracked objects:
 31943 ;;		On entry : 0/0
 31944 ;;		On exit  : 0/0
 31945 ;;		Unchanged: 0/0
 31946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 31947 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31948 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31949 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31950 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31951 ;;Total ram usage:       12 bytes
 31952 ;; Hardware stack levels used:    1
 31953 ;; Hardware stack levels required when called:    2
 31954 ;; This function calls:
 31955 ;;		i2___ftadd
 31956 ;;		i2___ftmul
 31957 ;;		i2___wmul
 31958 ;; This function is called by:
 31959 ;;		_atan
 31960 ;;		_sin
 31961 ;; This function uses a non-reentrant model
 31962 ;;
 31963                           
 31964                           	psect	text122
 31965  015486                     __ptext122:
 31966                           	opt stack 0
 31967  015486                     _eval_poly:
 31968                           	opt stack 11
 31969                           
 31970                           ;incstack = 0
 31971  015486  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 31972  01548A  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 31973  01548E  0E00               	movlw	0
 31974  015490  6E12               	movwf	i2___wmul@multiplicand+1,c
 31975  015492  0E03               	movlw	3
 31976  015494  6E11               	movwf	i2___wmul@multiplicand,c
 31977  015496  EC28  F0B7         	call	i2___wmul	;wreg free
 31978  01549A  C04F  F053         	movff	eval_poly@d,??_eval_poly
 31979  01549E  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 31980  0154A2  500F               	movf	?i2___wmul,w,c
 31981  0154A4  2653               	addwf	??_eval_poly,f,c
 31982  0154A6  5010               	movf	?i2___wmul+1,w,c
 31983  0154A8  2254               	addwfc	??_eval_poly+1,f,c
 31984  0154AA  C053  FFF6         	movff	??_eval_poly,tblptrl
 31985  0154AE  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 31986  0154B2                     	if	0	;tblptru may be non-zero
 31987  0154B2                     	endif
 31988  0154B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 31989  0154B2  0E00               	movlw	low (__mediumconst shr (0+16))
 31990  0154B4  6EF8               	movwf	tblptru,c
 31991  0154B6                     	endif
 31992  0154B6  0009               	tblrd		*+
 31993  0154B8  CFF5 F055          	movff	tablat,eval_poly@res
 31994  0154BC  0009               	tblrd		*+
 31995  0154BE  CFF5 F056          	movff	tablat,eval_poly@res+1
 31996  0154C2  000A               	tblrd		*-
 31997  0154C4  CFF5 F057          	movff	tablat,eval_poly@res+2
 31998  0154C8  D040               	goto	i2l1662
 31999  0154CA  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 32000  0154CE  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 32001  0154D2  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 32002  0154D6  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 32003  0154DA  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 32004  0154DE  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 32005  0154E2  EC01  F0A8         	call	i2___ftmul	;wreg free
 32006  0154E6  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 32007  0154EA  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 32008  0154EE  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 32009  0154F2  0E00               	movlw	0
 32010  0154F4  6E12               	movwf	i2___wmul@multiplicand+1,c
 32011  0154F6  0E03               	movlw	3
 32012  0154F8  6E11               	movwf	i2___wmul@multiplicand,c
 32013  0154FA  0651               	decf	eval_poly@n,f,c
 32014  0154FC  A0D8               	btfss	status,0,c
 32015  0154FE  0652               	decf	eval_poly@n+1,f,c
 32016  015500  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 32017  015504  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 32018  015508  EC28  F0B7         	call	i2___wmul	;wreg free
 32019  01550C  C04F  F053         	movff	eval_poly@d,??_eval_poly
 32020  015510  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 32021  015514  500F               	movf	?i2___wmul,w,c
 32022  015516  2653               	addwf	??_eval_poly,f,c
 32023  015518  5010               	movf	?i2___wmul+1,w,c
 32024  01551A  2254               	addwfc	??_eval_poly+1,f,c
 32025  01551C  C053  FFF6         	movff	??_eval_poly,tblptrl
 32026  015520  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 32027  015524                     	if	0	;tblptru may be non-zero
 32028  015524                     	endif
 32029  015524                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 32030  015524  0E00               	movlw	low (__mediumconst shr (0+16))
 32031  015526  6EF8               	movwf	tblptru,c
 32032  015528                     	endif
 32033  015528  0009               	tblrd		*+
 32034  01552A  CFF5 F043          	movff	tablat,i2___ftadd@f2
 32035  01552E  0009               	tblrd		*+
 32036  015530  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 32037  015534  000A               	tblrd		*-
 32038  015536  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 32039  01553A  EC05  F0A2         	call	i2___ftadd	;wreg free
 32040  01553E  C040  F055         	movff	?i2___ftadd,eval_poly@res
 32041  015542  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 32042  015546  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 32043  01554A                     i2l1662:
 32044  01554A  5051               	movf	eval_poly@n,w,c
 32045  01554C  1052               	iorwf	eval_poly@n+1,w,c
 32046  01554E  A4D8               	btfss	status,2,c
 32047  015550  D7BC               	goto	i2l1663
 32048  015552  C055  F04C         	movff	eval_poly@res,?_eval_poly
 32049  015556  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 32050  01555A  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 32051  01555E  0012               	return		;funcret
 32052  015560                     __end_of_eval_poly:
 32053                           	opt stack 0
 32054                           tosu	equ	0xFFF
 32055                           tosh	equ	0xFFE
 32056                           tosl	equ	0xFFD
 32057                           pclatu	equ	0xFFB
 32058                           pclath	equ	0xFFA
 32059                           tblptru	equ	0xFF8
 32060                           tblptrh	equ	0xFF7
 32061                           tblptrl	equ	0xFF6
 32062                           tablat	equ	0xFF5
 32063                           prodh	equ	0xFF4
 32064                           prodl	equ	0xFF3
 32065                           intcon	equ	0xFF2
 32066                           indf0	equ	0xFEF
 32067                           postinc0	equ	0xFEE
 32068                           fsr0h	equ	0xFEA
 32069                           fsr0l	equ	0xFE9
 32070                           wreg	equ	0xFE8
 32071                           indf1	equ	0xFE7
 32072                           postdec1	equ	0xFE5
 32073                           plusw1	equ	0xFE3
 32074                           fsr1h	equ	0xFE2
 32075                           fsr1l	equ	0xFE1
 32076                           bsr	equ	0xFE0
 32077                           indf2	equ	0xFDF
 32078                           postinc2	equ	0xFDE
 32079                           postdec2	equ	0xFDD
 32080                           plusw2	equ	0xFDB
 32081                           fsr2h	equ	0xFDA
 32082                           fsr2l	equ	0xFD9
 32083                           status	equ	0xFD8
 32084                           
 32085 ;; *************** function i2___wmul *****************
 32086 ;; Defined at:
 32087 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 32088 ;; Parameters:    Size  Location     Type
 32089 ;;  multiplier      2   14[COMRAM] unsigned int 
 32090 ;;  multiplicand    2   16[COMRAM] unsigned int 
 32091 ;; Auto vars:     Size  Location     Type
 32092 ;;  __wmul          2   18[COMRAM] unsigned int 
 32093 ;; Return value:  Size  Location     Type
 32094 ;;                  2   14[COMRAM] unsigned int 
 32095 ;; Registers used:
 32096 ;;		wreg, status,2, status,0, prodl, prodh
 32097 ;; Tracked objects:
 32098 ;;		On entry : 0/0
 32099 ;;		On exit  : 0/0
 32100 ;;		Unchanged: 0/0
 32101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32102 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32103 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32105 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32106 ;;Total ram usage:        6 bytes
 32107 ;; Hardware stack levels used:    1
 32108 ;; This function calls:
 32109 ;;		Nothing
 32110 ;; This function is called by:
 32111 ;;		_eval_poly
 32112 ;;		i2_fround
 32113 ;;		i2_scale
 32114 ;;		i2_printf
 32115 ;; This function uses a non-reentrant model
 32116 ;;
 32117                           
 32118                           	psect	text123
 32119  016E50                     __ptext123:
 32120                           	opt stack 0
 32121  016E50                     i2___wmul:
 32122                           	opt stack 14
 32123                           
 32124                           ;incstack = 0
 32125  016E50  500F               	movf	i2___wmul@multiplier,w,c
 32126  016E52  0211               	mulwf	i2___wmul@multiplicand,c
 32127  016E54  CFF3 F013          	movff	prodl,i2___wmul@product
 32128  016E58  CFF4 F014          	movff	prodh,i2___wmul@product+1
 32129  016E5C  500F               	movf	i2___wmul@multiplier,w,c
 32130  016E5E  0212               	mulwf	i2___wmul@multiplicand+1,c
 32131  016E60  50F3               	movf	prodl,w,c
 32132  016E62  2614               	addwf	i2___wmul@product+1,f,c
 32133  016E64  5010               	movf	i2___wmul@multiplier+1,w,c
 32134  016E66  0211               	mulwf	i2___wmul@multiplicand,c
 32135  016E68  50F3               	movf	prodl,w,c
 32136  016E6A  2614               	addwf	i2___wmul@product+1,f,c
 32137  016E6C  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 32138  016E70  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 32139  016E74  0012               	return	
 32140  016E76                     __end_ofi2___wmul:
 32141                           	opt stack 0
 32142                           tosu	equ	0xFFF
 32143                           tosh	equ	0xFFE
 32144                           tosl	equ	0xFFD
 32145                           pclatu	equ	0xFFB
 32146                           pclath	equ	0xFFA
 32147                           tblptru	equ	0xFF8
 32148                           tblptrh	equ	0xFF7
 32149                           tblptrl	equ	0xFF6
 32150                           tablat	equ	0xFF5
 32151                           prodh	equ	0xFF4
 32152                           prodl	equ	0xFF3
 32153                           intcon	equ	0xFF2
 32154                           indf0	equ	0xFEF
 32155                           postinc0	equ	0xFEE
 32156                           fsr0h	equ	0xFEA
 32157                           fsr0l	equ	0xFE9
 32158                           wreg	equ	0xFE8
 32159                           indf1	equ	0xFE7
 32160                           postdec1	equ	0xFE5
 32161                           plusw1	equ	0xFE3
 32162                           fsr1h	equ	0xFE2
 32163                           fsr1l	equ	0xFE1
 32164                           bsr	equ	0xFE0
 32165                           indf2	equ	0xFDF
 32166                           postinc2	equ	0xFDE
 32167                           postdec2	equ	0xFDD
 32168                           plusw2	equ	0xFDB
 32169                           fsr2h	equ	0xFDA
 32170                           fsr2l	equ	0xFD9
 32171                           status	equ	0xFD8
 32172                           
 32173 ;; *************** function i2___ftmul *****************
 32174 ;; Defined at:
 32175 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 32176 ;; Parameters:    Size  Location     Type
 32177 ;;  f1              3   38[COMRAM] float 
 32178 ;;  f2              3   41[COMRAM] float 
 32179 ;; Auto vars:     Size  Location     Type
 32180 ;;  __ftmul         3   48[COMRAM] unsigned um
 32181 ;;  __ftmul         1   52[COMRAM] unsigned char 
 32182 ;;  __ftmul         1   51[COMRAM] unsigned char 
 32183 ;;  __ftmul         1   47[COMRAM] unsigned char 
 32184 ;; Return value:  Size  Location     Type
 32185 ;;                  3   38[COMRAM] float 
 32186 ;; Registers used:
 32187 ;;		wreg, status,2, status,0, cstack
 32188 ;; Tracked objects:
 32189 ;;		On entry : 0/0
 32190 ;;		On exit  : 0/0
 32191 ;;		Unchanged: 0/0
 32192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32193 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32194 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32195 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32196 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32197 ;;Total ram usage:       15 bytes
 32198 ;; Hardware stack levels used:    1
 32199 ;; Hardware stack levels required when called:    1
 32200 ;; This function calls:
 32201 ;;		i2___ftpack
 32202 ;; This function is called by:
 32203 ;;		_peakToRMS
 32204 ;;		_ADCPostProcessingCallback
 32205 ;;		_asin
 32206 ;;		_atan
 32207 ;;		_eval_poly
 32208 ;;		_sin
 32209 ;;		_sqrt
 32210 ;;		i2_fround
 32211 ;;		i2_scale
 32212 ;;		i2_printf
 32213 ;; This function uses a non-reentrant model
 32214 ;;
 32215                           
 32216                           	psect	text124
 32217  015002                     __ptext124:
 32218                           	opt stack 0
 32219  015002                     i2___ftmul:
 32220                           	opt stack 13
 32221                           
 32222                           ;incstack = 0
 32223  015002  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 32224  015006  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 32225  015008  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 32226  01500A  3428               	rlcf	i2___ftmul@f1+1,w,c
 32227  01500C  362D               	rlcf	??i2___ftmul& (0+255),f,c
 32228  01500E  E301               	bnc	u1815_41
 32229  015010  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 32230  015012                     u1815_41:
 32231  015012  502D               	movf	??i2___ftmul,w,c
 32232  015014  6E30               	movwf	i2___ftmul@exp,c
 32233  015016  5030               	movf	i2___ftmul@exp,w,c
 32234  015018  A4D8               	btfss	status,2,c
 32235  01501A  D007               	goto	i2l1800
 32236  01501C  0E00               	movlw	0
 32237  01501E  6E27               	movwf	?i2___ftmul,c
 32238  015020  0E00               	movlw	0
 32239  015022  6E28               	movwf	?i2___ftmul+1,c
 32240  015024  0E00               	movlw	0
 32241  015026  6E29               	movwf	?i2___ftmul+2,c
 32242  015028  0012               	return	
 32243  01502A                     i2l1800:
 32244  01502A  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 32245  01502E  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 32246  015030  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 32247  015032  342B               	rlcf	i2___ftmul@f2+1,w,c
 32248  015034  362D               	rlcf	??i2___ftmul& (0+255),f,c
 32249  015036  E301               	bnc	u1817_41
 32250  015038  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 32251  01503A                     u1817_41:
 32252  01503A  502D               	movf	??i2___ftmul,w,c
 32253  01503C  6E35               	movwf	i2___ftmul@sign,c
 32254  01503E  5035               	movf	i2___ftmul@sign,w,c
 32255  015040  A4D8               	btfss	status,2,c
 32256  015042  D007               	goto	i2l1802
 32257  015044  0E00               	movlw	0
 32258  015046  6E27               	movwf	?i2___ftmul,c
 32259  015048  0E00               	movlw	0
 32260  01504A  6E28               	movwf	?i2___ftmul+1,c
 32261  01504C  0E00               	movlw	0
 32262  01504E  6E29               	movwf	?i2___ftmul+2,c
 32263  015050  0012               	return	
 32264  015052                     i2l1802:
 32265  015052  5035               	movf	i2___ftmul@sign,w,c
 32266  015054  0F7B               	addlw	123
 32267  015056  2630               	addwf	i2___ftmul@exp,f,c
 32268  015058  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 32269  01505C  502C               	movf	i2___ftmul@f2+2,w,c
 32270  01505E  1A35               	xorwf	i2___ftmul@sign,f,c
 32271  015060  0E80               	movlw	128
 32272  015062  1635               	andwf	i2___ftmul@sign,f,c
 32273  015064  8E28               	bsf	i2___ftmul@f1+1,7,c
 32274  015066  8E2B               	bsf	i2___ftmul@f2+1,7,c
 32275  015068  0EFF               	movlw	255
 32276  01506A  162A               	andwf	i2___ftmul@f2,f,c
 32277  01506C  0EFF               	movlw	255
 32278  01506E  162B               	andwf	i2___ftmul@f2+1,f,c
 32279  015070  0E00               	movlw	0
 32280  015072  162C               	andwf	i2___ftmul@f2+2,f,c
 32281  015074  0E00               	movlw	0
 32282  015076  6E31               	movwf	i2___ftmul@f3_as_product,c
 32283  015078  0E00               	movlw	0
 32284  01507A  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 32285  01507C  0E00               	movlw	0
 32286  01507E  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 32287  015080  0E07               	movlw	7
 32288  015082  6E34               	movwf	i2___ftmul@cntr,c
 32289  015084  A027               	btfss	i2___ftmul@f1,0,c
 32290  015086  D006               	goto	i2l1804
 32291  015088  502A               	movf	i2___ftmul@f2,w,c
 32292  01508A  2631               	addwf	i2___ftmul@f3_as_product,f,c
 32293  01508C  502B               	movf	i2___ftmul@f2+1,w,c
 32294  01508E  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 32295  015090  502C               	movf	i2___ftmul@f2+2,w,c
 32296  015092  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 32297  015094                     i2l1804:
 32298  015094  90D8               	bcf	status,0,c
 32299  015096  3229               	rrcf	i2___ftmul@f1+2,f,c
 32300  015098  3228               	rrcf	i2___ftmul@f1+1,f,c
 32301  01509A  3227               	rrcf	i2___ftmul@f1,f,c
 32302  01509C  90D8               	bcf	status,0,c
 32303  01509E  362A               	rlcf	i2___ftmul@f2,f,c
 32304  0150A0  362B               	rlcf	i2___ftmul@f2+1,f,c
 32305  0150A2  362C               	rlcf	i2___ftmul@f2+2,f,c
 32306  0150A4  2E34               	decfsz	i2___ftmul@cntr,f,c
 32307  0150A6  D7EE               	goto	i2l1803
 32308  0150A8  0E09               	movlw	9
 32309  0150AA  6E34               	movwf	i2___ftmul@cntr,c
 32310  0150AC  A027               	btfss	i2___ftmul@f1,0,c
 32311  0150AE  D006               	goto	i2l1807
 32312  0150B0  502A               	movf	i2___ftmul@f2,w,c
 32313  0150B2  2631               	addwf	i2___ftmul@f3_as_product,f,c
 32314  0150B4  502B               	movf	i2___ftmul@f2+1,w,c
 32315  0150B6  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 32316  0150B8  502C               	movf	i2___ftmul@f2+2,w,c
 32317  0150BA  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 32318  0150BC                     i2l1807:
 32319  0150BC  90D8               	bcf	status,0,c
 32320  0150BE  3229               	rrcf	i2___ftmul@f1+2,f,c
 32321  0150C0  3228               	rrcf	i2___ftmul@f1+1,f,c
 32322  0150C2  3227               	rrcf	i2___ftmul@f1,f,c
 32323  0150C4  90D8               	bcf	status,0,c
 32324  0150C6  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 32325  0150C8  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 32326  0150CA  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 32327  0150CC  2E34               	decfsz	i2___ftmul@cntr,f,c
 32328  0150CE  D7EE               	goto	i2l1806
 32329  0150D0  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 32330  0150D4  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 32331  0150D8  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 32332  0150DC  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 32333  0150E0  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 32334  0150E4  EC92  F0AC         	call	i2___ftpack	;wreg free
 32335  0150E8  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 32336  0150EC  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 32337  0150F0  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 32338  0150F4  0012               	return	
 32339  0150F6                     __end_ofi2___ftmul:
 32340                           	opt stack 0
 32341                           tosu	equ	0xFFF
 32342                           tosh	equ	0xFFE
 32343                           tosl	equ	0xFFD
 32344                           pclatu	equ	0xFFB
 32345                           pclath	equ	0xFFA
 32346                           tblptru	equ	0xFF8
 32347                           tblptrh	equ	0xFF7
 32348                           tblptrl	equ	0xFF6
 32349                           tablat	equ	0xFF5
 32350                           prodh	equ	0xFF4
 32351                           prodl	equ	0xFF3
 32352                           intcon	equ	0xFF2
 32353                           indf0	equ	0xFEF
 32354                           postinc0	equ	0xFEE
 32355                           fsr0h	equ	0xFEA
 32356                           fsr0l	equ	0xFE9
 32357                           wreg	equ	0xFE8
 32358                           indf1	equ	0xFE7
 32359                           postdec1	equ	0xFE5
 32360                           plusw1	equ	0xFE3
 32361                           fsr1h	equ	0xFE2
 32362                           fsr1l	equ	0xFE1
 32363                           bsr	equ	0xFE0
 32364                           indf2	equ	0xFDF
 32365                           postinc2	equ	0xFDE
 32366                           postdec2	equ	0xFDD
 32367                           plusw2	equ	0xFDB
 32368                           fsr2h	equ	0xFDA
 32369                           fsr2l	equ	0xFD9
 32370                           status	equ	0xFD8
 32371                           
 32372 ;; *************** function i2___ftadd *****************
 32373 ;; Defined at:
 32374 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 32375 ;; Parameters:    Size  Location     Type
 32376 ;;  f1              3   63[COMRAM] float 
 32377 ;;  f2              3   66[COMRAM] float 
 32378 ;; Auto vars:     Size  Location     Type
 32379 ;;  __ftadd         1   74[COMRAM] unsigned char 
 32380 ;;  __ftadd         1   73[COMRAM] unsigned char 
 32381 ;;  __ftadd         1   72[COMRAM] unsigned char 
 32382 ;; Return value:  Size  Location     Type
 32383 ;;                  3   63[COMRAM] float 
 32384 ;; Registers used:
 32385 ;;		wreg, status,2, status,0, cstack
 32386 ;; Tracked objects:
 32387 ;;		On entry : 0/0
 32388 ;;		On exit  : 0/0
 32389 ;;		Unchanged: 0/0
 32390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32391 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32392 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32393 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32394 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32395 ;;Total ram usage:       12 bytes
 32396 ;; Hardware stack levels used:    1
 32397 ;; Hardware stack levels required when called:    1
 32398 ;; This function calls:
 32399 ;;		i2___ftpack
 32400 ;; This function is called by:
 32401 ;;		_peakToRMS
 32402 ;;		_ADCPostProcessingCallback
 32403 ;;		_acos
 32404 ;;		_asin
 32405 ;;		_atan
 32406 ;;		_eval_poly
 32407 ;;		_sin
 32408 ;;		_floor
 32409 ;;		i2_printf
 32410 ;;		i2___ftsub
 32411 ;; This function uses a non-reentrant model
 32412 ;;
 32413                           
 32414                           	psect	text125
 32415  01440A                     __ptext125:
 32416                           	opt stack 0
 32417  01440A                     i2___ftadd:
 32418                           	opt stack 13
 32419                           
 32420                           ;incstack = 0
 32421  01440A  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 32422  01440E  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 32423  014410  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 32424  014412  3441               	rlcf	i2___ftadd@f1+1,w,c
 32425  014414  3646               	rlcf	??i2___ftadd& (0+255),f,c
 32426  014416  E301               	bnc	u1794_41
 32427  014418  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 32428  01441A                     u1794_41:
 32429  01441A  5046               	movf	??i2___ftadd,w,c
 32430  01441C  6E4B               	movwf	i2___ftadd@exp1,c
 32431  01441E  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 32432  014422  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 32433  014424  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 32434  014426  3444               	rlcf	i2___ftadd@f2+1,w,c
 32435  014428  3646               	rlcf	??i2___ftadd& (0+255),f,c
 32436  01442A  E301               	bnc	u1795_41
 32437  01442C  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 32438  01442E                     u1795_41:
 32439  01442E  5046               	movf	??i2___ftadd,w,c
 32440  014430  6E4A               	movwf	i2___ftadd@exp2,c
 32441  014432  504B               	movf	i2___ftadd@exp1,w,c
 32442  014434  B4D8               	btfsc	status,2,c
 32443  014436  D00B               	goto	i2u1798_40
 32444  014438  504A               	movf	i2___ftadd@exp2,w,c
 32445  01443A  5C4B               	subwf	i2___ftadd@exp1,w,c
 32446  01443C  B0D8               	btfsc	status,0,c
 32447  01443E  D00E               	goto	i2l1735
 32448  014440  504B               	movf	i2___ftadd@exp1,w,c
 32449  014442  0800               	sublw	0
 32450  014444  244A               	addwf	i2___ftadd@exp2,w,c
 32451  014446  6E46               	movwf	??i2___ftadd& (0+255),c
 32452  014448  0E18               	movlw	24
 32453  01444A  6446               	cpfsgt	??i2___ftadd,c
 32454  01444C  D007               	goto	i2l1735
 32455  01444E                     i2u1798_40:
 32456  01444E  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 32457  014452  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 32458  014456  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 32459  01445A  0012               	return	
 32460  01445C                     i2l1735:
 32461  01445C  504A               	movf	i2___ftadd@exp2,w,c
 32462  01445E  B4D8               	btfsc	status,2,c
 32463  014460  D00B               	goto	i2u1801_40
 32464  014462  504B               	movf	i2___ftadd@exp1,w,c
 32465  014464  5C4A               	subwf	i2___ftadd@exp2,w,c
 32466  014466  B0D8               	btfsc	status,0,c
 32467  014468  D00E               	goto	i2l1739
 32468  01446A  504A               	movf	i2___ftadd@exp2,w,c
 32469  01446C  0800               	sublw	0
 32470  01446E  244B               	addwf	i2___ftadd@exp1,w,c
 32471  014470  6E46               	movwf	??i2___ftadd& (0+255),c
 32472  014472  0E18               	movlw	24
 32473  014474  6446               	cpfsgt	??i2___ftadd,c
 32474  014476  D007               	goto	i2l1739
 32475  014478                     i2u1801_40:
 32476  014478  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 32477  01447C  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 32478  014480  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 32479  014484  0012               	return	
 32480  014486                     i2l1739:
 32481  014486  0E06               	movlw	6
 32482  014488  6E49               	movwf	i2___ftadd@sign,c
 32483  01448A  BE42               	btfsc	i2___ftadd@f1+2,7,c
 32484  01448C  8E49               	bsf	i2___ftadd@sign,7,c
 32485  01448E  BE45               	btfsc	i2___ftadd@f2+2,7,c
 32486  014490  8C49               	bsf	i2___ftadd@sign,6,c
 32487  014492  8E41               	bsf	i2___ftadd@f1+1,7,c
 32488  014494  0EFF               	movlw	255
 32489  014496  1640               	andwf	i2___ftadd@f1,f,c
 32490  014498  0EFF               	movlw	255
 32491  01449A  1641               	andwf	i2___ftadd@f1+1,f,c
 32492  01449C  0E00               	movlw	0
 32493  01449E  1642               	andwf	i2___ftadd@f1+2,f,c
 32494  0144A0  8E44               	bsf	i2___ftadd@f2+1,7,c
 32495  0144A2  0EFF               	movlw	255
 32496  0144A4  1643               	andwf	i2___ftadd@f2,f,c
 32497  0144A6  0EFF               	movlw	255
 32498  0144A8  1644               	andwf	i2___ftadd@f2+1,f,c
 32499  0144AA  0E00               	movlw	0
 32500  0144AC  1645               	andwf	i2___ftadd@f2+2,f,c
 32501  0144AE  504A               	movf	i2___ftadd@exp2,w,c
 32502  0144B0  5C4B               	subwf	i2___ftadd@exp1,w,c
 32503  0144B2  B0D8               	btfsc	status,0,c
 32504  0144B4  D01B               	goto	i2l1744
 32505  0144B6                     i2u1804_40:
 32506  0144B6  90D8               	bcf	status,0,c
 32507  0144B8  3643               	rlcf	i2___ftadd@f2,f,c
 32508  0144BA  3644               	rlcf	i2___ftadd@f2+1,f,c
 32509  0144BC  3645               	rlcf	i2___ftadd@f2+2,f,c
 32510  0144BE  064A               	decf	i2___ftadd@exp2,f,c
 32511  0144C0  504B               	movf	i2___ftadd@exp1,w,c
 32512  0144C2  184A               	xorwf	i2___ftadd@exp2,w,c
 32513  0144C4  B4D8               	btfsc	status,2,c
 32514  0144C6  D00D               	goto	i2l1749
 32515  0144C8  0649               	decf	i2___ftadd@sign,f,c
 32516  0144CA  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 32517  0144CE  0E07               	movlw	7
 32518  0144D0  1646               	andwf	??i2___ftadd,f,c
 32519  0144D2  B4D8               	btfsc	status,2,c
 32520  0144D4  D006               	goto	i2l1749
 32521  0144D6  D7EF               	goto	i2u1804_40
 32522  0144D8  90D8               	bcf	status,0,c
 32523  0144DA  3242               	rrcf	i2___ftadd@f1+2,f,c
 32524  0144DC  3241               	rrcf	i2___ftadd@f1+1,f,c
 32525  0144DE  3240               	rrcf	i2___ftadd@f1,f,c
 32526  0144E0  2A4B               	incf	i2___ftadd@exp1,f,c
 32527  0144E2                     i2l1749:
 32528  0144E2  504A               	movf	i2___ftadd@exp2,w,c
 32529  0144E4  184B               	xorwf	i2___ftadd@exp1,w,c
 32530  0144E6  B4D8               	btfsc	status,2,c
 32531  0144E8  D01F               	goto	i2u1811_40
 32532  0144EA  D7F6               	goto	i2l1750
 32533  0144EC                     i2l1744:
 32534  0144EC  504B               	movf	i2___ftadd@exp1,w,c
 32535  0144EE  5C4A               	subwf	i2___ftadd@exp2,w,c
 32536  0144F0  B0D8               	btfsc	status,0,c
 32537  0144F2  D01A               	goto	i2u1811_40
 32538  0144F4                     i2u1808_40:
 32539  0144F4  90D8               	bcf	status,0,c
 32540  0144F6  3640               	rlcf	i2___ftadd@f1,f,c
 32541  0144F8  3641               	rlcf	i2___ftadd@f1+1,f,c
 32542  0144FA  3642               	rlcf	i2___ftadd@f1+2,f,c
 32543  0144FC  064B               	decf	i2___ftadd@exp1,f,c
 32544  0144FE  504B               	movf	i2___ftadd@exp1,w,c
 32545  014500  184A               	xorwf	i2___ftadd@exp2,w,c
 32546  014502  B4D8               	btfsc	status,2,c
 32547  014504  D00D               	goto	i2l1758
 32548  014506  0649               	decf	i2___ftadd@sign,f,c
 32549  014508  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 32550  01450C  0E07               	movlw	7
 32551  01450E  1646               	andwf	??i2___ftadd,f,c
 32552  014510  B4D8               	btfsc	status,2,c
 32553  014512  D006               	goto	i2l1758
 32554  014514  D7EF               	goto	i2u1808_40
 32555  014516  90D8               	bcf	status,0,c
 32556  014518  3245               	rrcf	i2___ftadd@f2+2,f,c
 32557  01451A  3244               	rrcf	i2___ftadd@f2+1,f,c
 32558  01451C  3243               	rrcf	i2___ftadd@f2,f,c
 32559  01451E  2A4A               	incf	i2___ftadd@exp2,f,c
 32560  014520                     i2l1758:
 32561  014520  504A               	movf	i2___ftadd@exp2,w,c
 32562  014522  184B               	xorwf	i2___ftadd@exp1,w,c
 32563  014524  A4D8               	btfss	status,2,c
 32564  014526  D7F7               	goto	i2l1759
 32565  014528                     i2u1811_40:
 32566  014528  AE49               	btfss	i2___ftadd@sign,7,c
 32567  01452A  D00C               	goto	i2l1761
 32568  01452C  0EFF               	movlw	255
 32569  01452E  1A40               	xorwf	i2___ftadd@f1,f,c
 32570  014530  0EFF               	movlw	255
 32571  014532  1A41               	xorwf	i2___ftadd@f1+1,f,c
 32572  014534  0EFF               	movlw	255
 32573  014536  1A42               	xorwf	i2___ftadd@f1+2,f,c
 32574  014538  0E01               	movlw	1
 32575  01453A  2640               	addwf	i2___ftadd@f1,f,c
 32576  01453C  0E00               	movlw	0
 32577  01453E  2241               	addwfc	i2___ftadd@f1+1,f,c
 32578  014540  0E00               	movlw	0
 32579  014542  2242               	addwfc	i2___ftadd@f1+2,f,c
 32580  014544                     i2l1761:
 32581  014544  AC49               	btfss	i2___ftadd@sign,6,c
 32582  014546  D00C               	goto	i2l1762
 32583  014548  0EFF               	movlw	255
 32584  01454A  1A43               	xorwf	i2___ftadd@f2,f,c
 32585  01454C  0EFF               	movlw	255
 32586  01454E  1A44               	xorwf	i2___ftadd@f2+1,f,c
 32587  014550  0EFF               	movlw	255
 32588  014552  1A45               	xorwf	i2___ftadd@f2+2,f,c
 32589  014554  0E01               	movlw	1
 32590  014556  2643               	addwf	i2___ftadd@f2,f,c
 32591  014558  0E00               	movlw	0
 32592  01455A  2244               	addwfc	i2___ftadd@f2+1,f,c
 32593  01455C  0E00               	movlw	0
 32594  01455E  2245               	addwfc	i2___ftadd@f2+2,f,c
 32595  014560                     i2l1762:
 32596  014560  0E00               	movlw	0
 32597  014562  6E49               	movwf	i2___ftadd@sign,c
 32598  014564  5040               	movf	i2___ftadd@f1,w,c
 32599  014566  2643               	addwf	i2___ftadd@f2,f,c
 32600  014568  5041               	movf	i2___ftadd@f1+1,w,c
 32601  01456A  2244               	addwfc	i2___ftadd@f2+1,f,c
 32602  01456C  5042               	movf	i2___ftadd@f1+2,w,c
 32603  01456E  2245               	addwfc	i2___ftadd@f2+2,f,c
 32604  014570  AE45               	btfss	i2___ftadd@f2+2,7,c
 32605  014572  D00E               	goto	i2l1763
 32606  014574  0EFF               	movlw	255
 32607  014576  1A43               	xorwf	i2___ftadd@f2,f,c
 32608  014578  0EFF               	movlw	255
 32609  01457A  1A44               	xorwf	i2___ftadd@f2+1,f,c
 32610  01457C  0EFF               	movlw	255
 32611  01457E  1A45               	xorwf	i2___ftadd@f2+2,f,c
 32612  014580  0E01               	movlw	1
 32613  014582  2643               	addwf	i2___ftadd@f2,f,c
 32614  014584  0E00               	movlw	0
 32615  014586  2244               	addwfc	i2___ftadd@f2+1,f,c
 32616  014588  0E00               	movlw	0
 32617  01458A  2245               	addwfc	i2___ftadd@f2+2,f,c
 32618  01458C  0E01               	movlw	1
 32619  01458E  6E49               	movwf	i2___ftadd@sign,c
 32620  014590                     i2l1763:
 32621  014590  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 32622  014594  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 32623  014598  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 32624  01459C  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 32625  0145A0  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 32626  0145A4  EC92  F0AC         	call	i2___ftpack	;wreg free
 32627  0145A8  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 32628  0145AC  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 32629  0145B0  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 32630  0145B4  0012               	return	
 32631  0145B6                     __end_ofi2___ftadd:
 32632                           	opt stack 0
 32633                           tosu	equ	0xFFF
 32634                           tosh	equ	0xFFE
 32635                           tosl	equ	0xFFD
 32636                           pclatu	equ	0xFFB
 32637                           pclath	equ	0xFFA
 32638                           tblptru	equ	0xFF8
 32639                           tblptrh	equ	0xFF7
 32640                           tblptrl	equ	0xFF6
 32641                           tablat	equ	0xFF5
 32642                           prodh	equ	0xFF4
 32643                           prodl	equ	0xFF3
 32644                           intcon	equ	0xFF2
 32645                           indf0	equ	0xFEF
 32646                           postinc0	equ	0xFEE
 32647                           fsr0h	equ	0xFEA
 32648                           fsr0l	equ	0xFE9
 32649                           wreg	equ	0xFE8
 32650                           indf1	equ	0xFE7
 32651                           postdec1	equ	0xFE5
 32652                           plusw1	equ	0xFE3
 32653                           fsr1h	equ	0xFE2
 32654                           fsr1l	equ	0xFE1
 32655                           bsr	equ	0xFE0
 32656                           indf2	equ	0xFDF
 32657                           postinc2	equ	0xFDE
 32658                           postdec2	equ	0xFDD
 32659                           plusw2	equ	0xFDB
 32660                           fsr2h	equ	0xFDA
 32661                           fsr2l	equ	0xFD9
 32662                           status	equ	0xFD8
 32663                           
 32664 ;; *************** function ___lwtoft *****************
 32665 ;; Defined at:
 32666 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 32667 ;; Parameters:    Size  Location     Type
 32668 ;;  c               2    8[COMRAM] unsigned int 
 32669 ;; Auto vars:     Size  Location     Type
 32670 ;;		None
 32671 ;; Return value:  Size  Location     Type
 32672 ;;                  3    8[COMRAM] float 
 32673 ;; Registers used:
 32674 ;;		wreg, status,2, status,0, cstack
 32675 ;; Tracked objects:
 32676 ;;		On entry : 0/0
 32677 ;;		On exit  : 0/0
 32678 ;;		Unchanged: 0/0
 32679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32680 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32681 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32684 ;;Total ram usage:        3 bytes
 32685 ;; Hardware stack levels used:    1
 32686 ;; Hardware stack levels required when called:    1
 32687 ;; This function calls:
 32688 ;;		i2___ftpack
 32689 ;; This function is called by:
 32690 ;;		_ADCPostProcessingCallback
 32691 ;; This function uses a non-reentrant model
 32692 ;;
 32693                           
 32694                           	psect	text126
 32695  016E9A                     __ptext126:
 32696                           	opt stack 0
 32697  016E9A                     ___lwtoft:
 32698                           	opt stack 14
 32699                           
 32700                           ;incstack = 0
 32701  016E9A  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 32702  016E9E  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 32703  016EA2  6A03               	clrf	i2___ftpack@arg+2,c
 32704  016EA4  0E8E               	movlw	142
 32705  016EA6  6E04               	movwf	i2___ftpack@exp,c
 32706  016EA8  0E00               	movlw	0
 32707  016EAA  6E05               	movwf	i2___ftpack@sign,c
 32708  016EAC  EC92  F0AC         	call	i2___ftpack	;wreg free
 32709  016EB0  C001  F009         	movff	?i2___ftpack,?___lwtoft
 32710  016EB4  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 32711  016EB8  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 32712  016EBC  0012               	return	
 32713  016EBE                     __end_of___lwtoft:
 32714                           	opt stack 0
 32715                           tosu	equ	0xFFF
 32716                           tosh	equ	0xFFE
 32717                           tosl	equ	0xFFD
 32718                           pclatu	equ	0xFFB
 32719                           pclath	equ	0xFFA
 32720                           tblptru	equ	0xFF8
 32721                           tblptrh	equ	0xFF7
 32722                           tblptrl	equ	0xFF6
 32723                           tablat	equ	0xFF5
 32724                           prodh	equ	0xFF4
 32725                           prodl	equ	0xFF3
 32726                           intcon	equ	0xFF2
 32727                           indf0	equ	0xFEF
 32728                           postinc0	equ	0xFEE
 32729                           fsr0h	equ	0xFEA
 32730                           fsr0l	equ	0xFE9
 32731                           wreg	equ	0xFE8
 32732                           indf1	equ	0xFE7
 32733                           postdec1	equ	0xFE5
 32734                           plusw1	equ	0xFE3
 32735                           fsr1h	equ	0xFE2
 32736                           fsr1l	equ	0xFE1
 32737                           bsr	equ	0xFE0
 32738                           indf2	equ	0xFDF
 32739                           postinc2	equ	0xFDE
 32740                           postdec2	equ	0xFDD
 32741                           plusw2	equ	0xFDB
 32742                           fsr2h	equ	0xFDA
 32743                           fsr2l	equ	0xFD9
 32744                           status	equ	0xFD8
 32745                           
 32746 ;; *************** function i2___ftpack *****************
 32747 ;; Defined at:
 32748 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 32749 ;; Parameters:    Size  Location     Type
 32750 ;;  arg             3    0[COMRAM] unsigned um
 32751 ;;  exp             1    3[COMRAM] unsigned char 
 32752 ;;  sign            1    4[COMRAM] unsigned char 
 32753 ;; Auto vars:     Size  Location     Type
 32754 ;;		None
 32755 ;; Return value:  Size  Location     Type
 32756 ;;                  3    0[COMRAM] float 
 32757 ;; Registers used:
 32758 ;;		wreg, status,2, status,0
 32759 ;; Tracked objects:
 32760 ;;		On entry : 0/0
 32761 ;;		On exit  : 0/0
 32762 ;;		Unchanged: 0/0
 32763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32764 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32766 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32767 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32768 ;;Total ram usage:        8 bytes
 32769 ;; Hardware stack levels used:    1
 32770 ;; This function calls:
 32771 ;;		Nothing
 32772 ;; This function is called by:
 32773 ;;		___altoft
 32774 ;;		___lwtoft
 32775 ;;		i2___ftadd
 32776 ;;		i2___ftdiv
 32777 ;;		i2___ftmul
 32778 ;;		i2___lltoft
 32779 ;; This function uses a non-reentrant model
 32780 ;;
 32781                           
 32782                           	psect	text127
 32783  015924                     __ptext127:
 32784                           	opt stack 0
 32785  015924                     i2___ftpack:
 32786                           	opt stack 13
 32787                           
 32788                           ;incstack = 0
 32789  015924  5004               	movf	i2___ftpack@exp,w,c
 32790  015926  B4D8               	btfsc	status,2,c
 32791  015928  D005               	goto	i2u1787_40
 32792  01592A  5001               	movf	i2___ftpack@arg,w,c
 32793  01592C  1002               	iorwf	i2___ftpack@arg+1,w,c
 32794  01592E  1003               	iorwf	i2___ftpack@arg+2,w,c
 32795  015930  A4D8               	btfss	status,2,c
 32796  015932  D00C               	goto	i2l1704
 32797  015934                     i2u1787_40:
 32798  015934  0E00               	movlw	0
 32799  015936  6E01               	movwf	?i2___ftpack,c
 32800  015938  0E00               	movlw	0
 32801  01593A  6E02               	movwf	?i2___ftpack+1,c
 32802  01593C  0E00               	movlw	0
 32803  01593E  6E03               	movwf	?i2___ftpack+2,c
 32804  015940  0012               	return	
 32805  015942  2A04               	incf	i2___ftpack@exp,f,c
 32806  015944  90D8               	bcf	status,0,c
 32807  015946  3203               	rrcf	i2___ftpack@arg+2,f,c
 32808  015948  3202               	rrcf	i2___ftpack@arg+1,f,c
 32809  01594A  3201               	rrcf	i2___ftpack@arg,f,c
 32810  01594C                     i2l1704:
 32811  01594C  0E00               	movlw	0
 32812  01594E  1401               	andwf	i2___ftpack@arg,w,c
 32813  015950  6E06               	movwf	??i2___ftpack& (0+255),c
 32814  015952  0E00               	movlw	0
 32815  015954  1402               	andwf	i2___ftpack@arg+1,w,c
 32816  015956  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 32817  015958  0EFE               	movlw	254
 32818  01595A  1403               	andwf	i2___ftpack@arg+2,w,c
 32819  01595C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 32820  01595E  5006               	movf	??i2___ftpack,w,c
 32821  015960  1007               	iorwf	??i2___ftpack+1,w,c
 32822  015962  1008               	iorwf	??i2___ftpack+2,w,c
 32823  015964  B4D8               	btfsc	status,2,c
 32824  015966  D00C               	goto	i2l1707
 32825  015968  D7EC               	goto	i2l1705
 32826  01596A  2A04               	incf	i2___ftpack@exp,f,c
 32827  01596C  0E01               	movlw	1
 32828  01596E  2601               	addwf	i2___ftpack@arg,f,c
 32829  015970  0E00               	movlw	0
 32830  015972  2202               	addwfc	i2___ftpack@arg+1,f,c
 32831  015974  0E00               	movlw	0
 32832  015976  2203               	addwfc	i2___ftpack@arg+2,f,c
 32833  015978  90D8               	bcf	status,0,c
 32834  01597A  3203               	rrcf	i2___ftpack@arg+2,f,c
 32835  01597C  3202               	rrcf	i2___ftpack@arg+1,f,c
 32836  01597E  3201               	rrcf	i2___ftpack@arg,f,c
 32837  015980                     i2l1707:
 32838  015980  0E00               	movlw	0
 32839  015982  1401               	andwf	i2___ftpack@arg,w,c
 32840  015984  6E06               	movwf	??i2___ftpack& (0+255),c
 32841  015986  0E00               	movlw	0
 32842  015988  1402               	andwf	i2___ftpack@arg+1,w,c
 32843  01598A  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 32844  01598C  0EFF               	movlw	255
 32845  01598E  1403               	andwf	i2___ftpack@arg+2,w,c
 32846  015990  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 32847  015992  5006               	movf	??i2___ftpack,w,c
 32848  015994  1007               	iorwf	??i2___ftpack+1,w,c
 32849  015996  1008               	iorwf	??i2___ftpack+2,w,c
 32850  015998  B4D8               	btfsc	status,2,c
 32851  01599A  D006               	goto	i2l1710
 32852  01599C  D7E6               	goto	i2l1708
 32853  01599E  0604               	decf	i2___ftpack@exp,f,c
 32854  0159A0  90D8               	bcf	status,0,c
 32855  0159A2  3601               	rlcf	i2___ftpack@arg,f,c
 32856  0159A4  3602               	rlcf	i2___ftpack@arg+1,f,c
 32857  0159A6  3603               	rlcf	i2___ftpack@arg+2,f,c
 32858  0159A8                     i2l1710:
 32859  0159A8  BE02               	btfsc	i2___ftpack@arg+1,7,c
 32860  0159AA  D003               	goto	i2u1791_40
 32861  0159AC  0E02               	movlw	2
 32862  0159AE  6004               	cpfslt	i2___ftpack@exp,c
 32863  0159B0  D7F6               	goto	i2l1711
 32864  0159B2                     i2u1791_40:
 32865  0159B2  A004               	btfss	i2___ftpack@exp,0,c
 32866  0159B4  9E02               	bcf	i2___ftpack@arg+1,7,c
 32867  0159B6  90D8               	bcf	status,0,c
 32868  0159B8  3204               	rrcf	i2___ftpack@exp,f,c
 32869  0159BA  5004               	movf	i2___ftpack@exp,w,c
 32870  0159BC  1203               	iorwf	i2___ftpack@arg+2,f,c
 32871  0159BE  5005               	movf	i2___ftpack@sign,w,c
 32872  0159C0  A4D8               	btfss	status,2,c
 32873  0159C2  8E03               	bsf	i2___ftpack@arg+2,7,c
 32874  0159C4  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 32875  0159C8  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 32876  0159CC  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 32877  0159D0  0012               	return	
 32878  0159D2                     __end_ofi2___ftpack:
 32879                           	opt stack 0
 32880                           tosu	equ	0xFFF
 32881                           tosh	equ	0xFFE
 32882                           tosl	equ	0xFFD
 32883                           pclatu	equ	0xFFB
 32884                           pclath	equ	0xFFA
 32885                           tblptru	equ	0xFF8
 32886                           tblptrh	equ	0xFF7
 32887                           tblptrl	equ	0xFF6
 32888                           tablat	equ	0xFF5
 32889                           prodh	equ	0xFF4
 32890                           prodl	equ	0xFF3
 32891                           intcon	equ	0xFF2
 32892                           indf0	equ	0xFEF
 32893                           postinc0	equ	0xFEE
 32894                           fsr0h	equ	0xFEA
 32895                           fsr0l	equ	0xFE9
 32896                           wreg	equ	0xFE8
 32897                           indf1	equ	0xFE7
 32898                           postdec1	equ	0xFE5
 32899                           plusw1	equ	0xFE3
 32900                           fsr1h	equ	0xFE2
 32901                           fsr1l	equ	0xFE1
 32902                           bsr	equ	0xFE0
 32903                           indf2	equ	0xFDF
 32904                           postinc2	equ	0xFDE
 32905                           postdec2	equ	0xFDD
 32906                           plusw2	equ	0xFDB
 32907                           fsr2h	equ	0xFDA
 32908                           fsr2l	equ	0xFD9
 32909                           status	equ	0xFD8
 32910                           
 32911 ;; *************** function _ADCC_GetConversionResult *****************
 32912 ;; Defined at:
 32913 ;;		line 130 in file "mcc_generated_files/adcc.c"
 32914 ;; Parameters:    Size  Location     Type
 32915 ;;		None
 32916 ;; Auto vars:     Size  Location     Type
 32917 ;;		None
 32918 ;; Return value:  Size  Location     Type
 32919 ;;                  2    0[COMRAM] unsigned int 
 32920 ;; Registers used:
 32921 ;;		wreg, status,2, status,0
 32922 ;; Tracked objects:
 32923 ;;		On entry : 0/0
 32924 ;;		On exit  : 0/0
 32925 ;;		Unchanged: 0/0
 32926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 32927 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32929 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32930 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32931 ;;Total ram usage:        4 bytes
 32932 ;; Hardware stack levels used:    1
 32933 ;; This function calls:
 32934 ;;		Nothing
 32935 ;; This function is called by:
 32936 ;;		_ADCPostProcessingCallback
 32937 ;; This function uses a non-reentrant model
 32938 ;;
 32939                           
 32940                           	psect	text128
 32941  016FA4                     __ptext128:
 32942                           	opt stack 0
 32943  016FA4                     _ADCC_GetConversionResult:
 32944                           	opt stack 15
 32945                           
 32946                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 32947                           
 32948                           ;incstack = 0
 32949  016FA4  5064               	movf	3940,w,c	;volatile
 32950  016FA6  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 32951  016FA8  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 32952  016FAA  5063               	movf	3939,w,c	;volatile
 32953  016FAC  2403               	addwf	??_ADCC_GetConversionResult,w,c
 32954  016FAE  6E01               	movwf	?_ADCC_GetConversionResult,c
 32955  016FB0  0E00               	movlw	0
 32956  016FB2  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 32957  016FB4  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 32958  016FB6  0012               	return	
 32959  016FB8                     __end_of_ADCC_GetConversionResult:
 32960                           	opt stack 0
 32961                           tosu	equ	0xFFF
 32962                           tosh	equ	0xFFE
 32963                           tosl	equ	0xFFD
 32964                           pclatu	equ	0xFFB
 32965                           pclath	equ	0xFFA
 32966                           tblptru	equ	0xFF8
 32967                           tblptrh	equ	0xFF7
 32968                           tblptrl	equ	0xFF6
 32969                           tablat	equ	0xFF5
 32970                           prodh	equ	0xFF4
 32971                           prodl	equ	0xFF3
 32972                           intcon	equ	0xFF2
 32973                           indf0	equ	0xFEF
 32974                           postinc0	equ	0xFEE
 32975                           fsr0h	equ	0xFEA
 32976                           fsr0l	equ	0xFE9
 32977                           wreg	equ	0xFE8
 32978                           indf1	equ	0xFE7
 32979                           postdec1	equ	0xFE5
 32980                           plusw1	equ	0xFE3
 32981                           fsr1h	equ	0xFE2
 32982                           fsr1l	equ	0xFE1
 32983                           bsr	equ	0xFE0
 32984                           indf2	equ	0xFDF
 32985                           postinc2	equ	0xFDE
 32986                           postdec2	equ	0xFDD
 32987                           plusw2	equ	0xFDB
 32988                           fsr2h	equ	0xFDA
 32989                           fsr2l	equ	0xFD9
 32990                           status	equ	0xFD8
 32991                           tosu	equ	0xFFF
 32992                           tosh	equ	0xFFE
 32993                           tosl	equ	0xFFD
 32994                           pclatu	equ	0xFFB
 32995                           pclath	equ	0xFFA
 32996                           tblptru	equ	0xFF8
 32997                           tblptrh	equ	0xFF7
 32998                           tblptrl	equ	0xFF6
 32999                           tablat	equ	0xFF5
 33000                           prodh	equ	0xFF4
 33001                           prodl	equ	0xFF3
 33002                           intcon	equ	0xFF2
 33003                           indf0	equ	0xFEF
 33004                           postinc0	equ	0xFEE
 33005                           fsr0h	equ	0xFEA
 33006                           fsr0l	equ	0xFE9
 33007                           wreg	equ	0xFE8
 33008                           indf1	equ	0xFE7
 33009                           postdec1	equ	0xFE5
 33010                           plusw1	equ	0xFE3
 33011                           fsr1h	equ	0xFE2
 33012                           fsr1l	equ	0xFE1
 33013                           bsr	equ	0xFE0
 33014                           indf2	equ	0xFDF
 33015                           postinc2	equ	0xFDE
 33016                           postdec2	equ	0xFDD
 33017                           plusw2	equ	0xFDB
 33018                           fsr2h	equ	0xFDA
 33019                           fsr2l	equ	0xFD9
 33020                           status	equ	0xFD8
 33021                           
 33022                           	psect	text129
 33023  000000                     __ptext129:
 33024                           	opt stack 0
 33025                           tosu	equ	0xFFF
 33026                           tosh	equ	0xFFE
 33027                           tosl	equ	0xFFD
 33028                           pclatu	equ	0xFFB
 33029                           pclath	equ	0xFFA
 33030                           tblptru	equ	0xFF8
 33031                           tblptrh	equ	0xFF7
 33032                           tblptrl	equ	0xFF6
 33033                           tablat	equ	0xFF5
 33034                           prodh	equ	0xFF4
 33035                           prodl	equ	0xFF3
 33036                           intcon	equ	0xFF2
 33037                           indf0	equ	0xFEF
 33038                           postinc0	equ	0xFEE
 33039                           fsr0h	equ	0xFEA
 33040                           fsr0l	equ	0xFE9
 33041                           wreg	equ	0xFE8
 33042                           indf1	equ	0xFE7
 33043                           postdec1	equ	0xFE5
 33044                           plusw1	equ	0xFE3
 33045                           fsr1h	equ	0xFE2
 33046                           fsr1l	equ	0xFE1
 33047                           bsr	equ	0xFE0
 33048                           indf2	equ	0xFDF
 33049                           postinc2	equ	0xFDE
 33050                           postdec2	equ	0xFDD
 33051                           plusw2	equ	0xFDB
 33052                           fsr2h	equ	0xFDA
 33053                           fsr2l	equ	0xFD9
 33054                           status	equ	0xFD8
 33055                           
 33056                           	psect	rparam
 33057  0000                     tosu	equ	0xFFF
 33058                           tosh	equ	0xFFE
 33059                           tosl	equ	0xFFD
 33060                           pclatu	equ	0xFFB
 33061                           pclath	equ	0xFFA
 33062                           tblptru	equ	0xFF8
 33063                           tblptrh	equ	0xFF7
 33064                           tblptrl	equ	0xFF6
 33065                           tablat	equ	0xFF5
 33066                           prodh	equ	0xFF4
 33067                           prodl	equ	0xFF3
 33068                           intcon	equ	0xFF2
 33069                           indf0	equ	0xFEF
 33070                           postinc0	equ	0xFEE
 33071                           fsr0h	equ	0xFEA
 33072                           fsr0l	equ	0xFE9
 33073                           wreg	equ	0xFE8
 33074                           indf1	equ	0xFE7
 33075                           postdec1	equ	0xFE5
 33076                           plusw1	equ	0xFE3
 33077                           fsr1h	equ	0xFE2
 33078                           fsr1l	equ	0xFE1
 33079                           bsr	equ	0xFE0
 33080                           indf2	equ	0xFDF
 33081                           postinc2	equ	0xFDE
 33082                           postdec2	equ	0xFDD
 33083                           plusw2	equ	0xFDB
 33084                           fsr2h	equ	0xFDA
 33085                           fsr2l	equ	0xFD9
 33086                           status	equ	0xFD8
 33087                           
 33088                           	psect	temp
 33089  00005F                     btemp:
 33090                           	opt stack 0
 33091  00005F                     	ds	1
 33092  0000                     int$flags	set	btemp
 33093  0000                     wtemp6	set	btemp+1
 33094                           tosu	equ	0xFFF
 33095                           tosh	equ	0xFFE
 33096                           tosl	equ	0xFFD
 33097                           pclatu	equ	0xFFB
 33098                           pclath	equ	0xFFA
 33099                           tblptru	equ	0xFF8
 33100                           tblptrh	equ	0xFF7
 33101                           tblptrl	equ	0xFF6
 33102                           tablat	equ	0xFF5
 33103                           prodh	equ	0xFF4
 33104                           prodl	equ	0xFF3
 33105                           intcon	equ	0xFF2
 33106                           indf0	equ	0xFEF
 33107                           postinc0	equ	0xFEE
 33108                           fsr0h	equ	0xFEA
 33109                           fsr0l	equ	0xFE9
 33110                           wreg	equ	0xFE8
 33111                           indf1	equ	0xFE7
 33112                           postdec1	equ	0xFE5
 33113                           plusw1	equ	0xFE3
 33114                           fsr1h	equ	0xFE2
 33115                           fsr1l	equ	0xFE1
 33116                           bsr	equ	0xFE0
 33117                           indf2	equ	0xFDF
 33118                           postinc2	equ	0xFDE
 33119                           postdec2	equ	0xFDD
 33120                           plusw2	equ	0xFDB
 33121                           fsr2h	equ	0xFDA
 33122                           fsr2l	equ	0xFD9
 33123                           status	equ	0xFD8


Data Sizes:
    Strings     4813
    Constant    210
    Data        38
    BSS         335
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    104     160
    BANK1           256    179     215
    BANK2           256     34     188
    BANK3           256      0     128
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_99(CODE[25]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_99(CODE[25]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_99(CODE[25]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_99(CODE[25]), line(BANK2[64]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@MajRevStr(BANK1[1]), STR_119(CODE[10]), STR_118(CODE[13]), STR_117(CODE[12]), 
		 -> STR_68(CODE[17]), STR_67(CODE[22]), STR_66(CODE[14]), STR_65(CODE[14]), 
		 -> STR_64(CODE[14]), STR_63(CODE[7]), STR_62(CODE[6]), STR_61(CODE[5]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@returnString(BANK1[4]), getDeviceIDString@returnString(BANK1[12]), ringBufferLUT@channel_name(BANK2[22]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@returnString(BANK1[4]), getDeviceIDString@returnString(BANK1[12]), ringBufferLUT@channel_name(BANK2[22]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_110(CODE[5]), STR_108(CODE[14]), STR_106(CODE[16]), STR_97(CODE[13]), 
		 -> STR_95(CODE[12]), STR_93(CODE[16]), STR_91(CODE[15]), STR_89(CODE[15]), 
		 -> STR_87(CODE[21]), STR_85(CODE[21]), STR_83(CODE[26]), STR_81(CODE[14]), 
		 -> STR_79(CODE[13]), STR_77(CODE[18]), STR_75(CODE[15]), STR_73(CODE[16]), 
		 -> STR_71(CODE[16]), STR_60(CODE[11]), STR_57(CODE[10]), STR_55(CODE[13]), 
		 -> STR_53(CODE[11]), STR_50(CODE[4]), STR_49(CODE[6]), STR_47(CODE[16]), 
		 -> STR_44(CODE[6]), STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> getRevisionIDString@MinRevStr(BANK1[2]), STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), 
		 -> STR_36(CODE[3]), STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), 
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), 
		 -> STR_28(CODE[3]), STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), 
		 -> STR_24(CODE[3]), STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), 
		 -> STR_20(CODE[3]), STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), 
		 -> STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), 
		 -> STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> getRevisionIDString@returnString(BANK1[4]), terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> getRevisionIDString@returnString(BANK1[4]), terminal_textAttributes@output_buff(BANK1[15]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 0

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK2[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 3561
		 -> STR_132(CODE[7]), printf@c(BANK1[1]), STR_131(CODE[30]), STR_130(CODE[22]), 
		 -> STR_129(CODE[21]), STR_128(CODE[27]), STR_127(CODE[29]), STR_126(CODE[41]), 
		 -> STR_125(CODE[28]), STR_124(CODE[32]), STR_123(CODE[25]), STR_122(CODE[19]), 
		 -> STR_121(CODE[16]), STR_120(CODE[15]), RAM(DATA[3561]), ringBufferLUT@channel_name(BANK2[22]), 
		 -> TRIAC_Firing_Angle(BANK0[3]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1951
		 -> STR_116(CODE[30]), STR_115(CODE[23]), STR_114(CODE[39]), STR_113(CODE[37]), 
		 -> STR_112(CODE[33]), STR_111(CODE[1951]), STR_109(CODE[53]), STR_107(CODE[58]), 
		 -> STR_105(CODE[71]), STR_104(CODE[63]), STR_103(CODE[37]), STR_102(CODE[46]), 
		 -> STR_101(CODE[102]), STR_100(CODE[86]), STR_98(CODE[25]), STR_96(CODE[42]), 
		 -> STR_94(CODE[41]), STR_92(CODE[40]), STR_90(CODE[56]), STR_88(CODE[34]), 
		 -> STR_86(CODE[34]), STR_84(CODE[32]), STR_82(CODE[37]), STR_80(CODE[56]), 
		 -> STR_78(CODE[34]), STR_76(CODE[34]), STR_74(CODE[35]), STR_72(CODE[21]), 
		 -> STR_70(CODE[24]), STR_69(CODE[48]), STR_59(CODE[49]), STR_58(CODE[64]), 
		 -> STR_56(CODE[34]), STR_54(CODE[82]), STR_52(CODE[47]), STR_51(CODE[17]), 
		 -> STR_48(CODE[52]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    getCauseOfResetString@strings	PTR const unsigned char [12] size(2) Largest target is 41
		 -> STR_131(CODE[30]), STR_130(CODE[22]), STR_129(CODE[21]), STR_128(CODE[27]), 
		 -> STR_127(CODE[29]), STR_126(CODE[41]), STR_125(CODE[28]), STR_124(CODE[32]), 
		 -> STR_123(CODE[25]), STR_122(CODE[19]), STR_121(CODE[16]), STR_120(CODE[15]), 

    getCauseOfResetString@F17476	PTR const unsigned char [12] size(2) Largest target is 41
		 -> STR_131(CODE[30]), STR_130(CODE[22]), STR_129(CODE[21]), STR_128(CODE[27]), 
		 -> STR_127(CODE[29]), STR_126(CODE[41]), STR_125(CODE[28]), STR_124(CODE[32]), 
		 -> STR_123(CODE[25]), STR_122(CODE[19]), STR_121(CODE[16]), STR_120(CODE[15]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 22
		 -> getRevisionIDString@returnString(BANK1[4]), getDeviceIDString@returnString(BANK1[12]), ringBufferLUT@channel_name(BANK2[22]), 

    sp__getRevisionIDString	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__getDeviceIDString	PTR unsigned char  size(2) Largest target is 3561
		 -> RAM(DATA[3561]), 

    sp__getCauseOfResetString	PTR inline unsigned char  size(2) Largest target is 41
		 -> STR_131(CODE[30]), STR_130(CODE[22]), STR_129(CODE[21]), STR_128(CODE[27]), 
		 -> STR_127(CODE[29]), STR_126(CODE[41]), STR_125(CODE[28]), STR_124(CODE[32]), 
		 -> STR_123(CODE[25]), STR_122(CODE[19]), STR_121(CODE[16]), STR_120(CODE[15]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> getRevisionIDString@returnString(BANK1[4]), terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCPostProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADCPostProcessingCallback
    _ADCPostProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _getUserID->_FLASH_ReadWord
    _getRevisionIDString->_getMajorRevisionID
    _getRevisionIDString->_utoa
    _utoa->___lwdiv
    _getMinorRevisionID->_FLASH_ReadWord
    _getMajorRevisionID->_FLASH_ReadWord
    _getDeviceIDString->_strcpy
    _getDeviceID->_FLASH_ReadWord
    _FLASH_ReadWord->_FLASH_ReadByte
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    _terminal_ringBufferPull->_ringBufferLUT

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  699282
                                            177 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   85535
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  428559
                                            168 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       40    38      2  427831
                                            162 BANK1      6     4      2
                                              0 BANK2     34    34      0
                    _TMR7_StartTimer
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                    _getCauseOfReset
              _getCauseOfResetString
                        _getDeviceID
                  _getDeviceIDString
                 _getMajorRevisionID
                 _getMinorRevisionID
                _getRevisionIDString
                          _getUserID
                             _printf
                             _strcmp
                             _strcpy
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   98024
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   98024
                                            144 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   85535
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    4813
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getUserID                                            8     6      2     884
                                             34 BANK1      8     6      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getRevisionIDString                                 12    10      2   10228
                                             39 BANK1     12    10      2
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                             _strcat
                             _strcpy
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 9     3      6    2203
                                             30 BANK1      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     412
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     601
                                             23 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5363
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getMinorRevisionID                                   2     2      0     819
                                             34 BANK1      2     2      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getMajorRevisionID                                   5     5      0     819
                                             34 BANK1      5     5      0
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (3) _getDeviceIDString                                   16    14      2    2520
                                             29 BANK1     16    14      2
                             _strcpy
 ---------------------------------------------------------------------------------
 (3) _strcpy                                               6     2      4    2269
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _getDeviceID                                          2     0      2     785
                                             34 BANK1      2     0      2
                     _FLASH_ReadWord
 ---------------------------------------------------------------------------------
 (4) _FLASH_ReadWord                                       7     3      4     785
                                             27 BANK1      7     3      4
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (5) _FLASH_ReadByte                                       4     0      4     363
                                             23 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (3) _getCauseOfResetString                               27    25      2      68
                                             23 BANK1     27    25      2
 ---------------------------------------------------------------------------------
 (3) _getCauseOfReset                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4511
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) _TMR7_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   85535
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              47    37     10   85535
                                            100 BANK1     44    34     10
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                    _getCauseOfReset (ARG)
              _getCauseOfResetString (ARG)
                        _getDeviceID (ARG)
                  _getDeviceIDString (ARG)
                 _getMajorRevisionID (ARG)
                 _getMinorRevisionID (ARG)
                _getRevisionIDString (ARG)
                          _getUserID (ARG)
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18476
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   18197
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3988
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9561
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7384
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6638
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    2278
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
                     _TMR7_StopTimer
 ---------------------------------------------------------------------------------
 (12) _TMR7_StopTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  353749
                                             86 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   67222
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   67222
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13741
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   13246
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  286287
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
          _ADCPostProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADCPostProcessingCallback                          16    16      0  286287
                                             70 BANK0     16    16      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                   i2_TMR7_StopTimer
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) i2_TMR7_StopTimer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  194917
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   93583
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   85892
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   18321
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   43127
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   66625
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   61933
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6906
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   13245
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    2376
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   18610
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7746
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    6259
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2521
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getCauseOfReset (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _strcpy
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getRevisionIDString (ARG)
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _strcat (ARG)
         _strcpy (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       _TMR7_StartTimer
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _getCauseOfReset
       _getCauseOfResetString
       _getDeviceID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString
         _strcpy
       _getMajorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getRevisionIDString
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _strcat (ARG)
         _strcpy (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _getUserID
         _FLASH_ReadWord
           _FLASH_ReadByte
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getCauseOfReset (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _strcpy
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getRevisionIDString (ARG)
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _strcat (ARG)
           _strcpy (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strcpy
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getCauseOfReset (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _strcpy
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getRevisionIDString (ARG)
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _strcat (ARG)
             _strcpy (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _getCauseOfReset (ARG)
           _getCauseOfResetString (ARG)
           _getDeviceID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getDeviceIDString (ARG)
             _strcpy
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getRevisionIDString (ARG)
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _strcat (ARG)
             _strcpy (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
           _getUserID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _isdigit (ARG)
           _putch (ARG)
             _EUSART2_Write
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _getCauseOfReset (ARG)
             _getCauseOfResetString (ARG)
             _getDeviceID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getDeviceIDString (ARG)
               _strcpy
             _getMajorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getMinorRevisionID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _getRevisionIDString (ARG)
               _getMajorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _getMinorRevisionID (ARG)
                 _FLASH_ReadWord
                   _FLASH_ReadByte
               _strcat (ARG)
               _strcpy (ARG)
               _utoa (ARG)
                 ___lwdiv
                 ___lwmod
             _getUserID (ARG)
               _FLASH_ReadWord
                 _FLASH_ReadByte
             _isdigit (ARG)
             _putch (ARG)
               _EUSART2_Write
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _getCauseOfReset (ARG)
       _getCauseOfResetString (ARG)
       _getDeviceID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getDeviceIDString (ARG)
         _strcpy
       _getMajorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getMinorRevisionID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _getRevisionIDString (ARG)
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _strcat (ARG)
         _strcpy (ARG)
         _utoa (ARG)
           ___lwdiv
           ___lwmod
       _getUserID (ARG)
         _FLASH_ReadWord
           _FLASH_ReadByte
       _isdigit (ARG)
       _putch (ARG)
         _EUSART2_Write
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _getCauseOfReset (ARG)
         _getCauseOfResetString (ARG)
         _getDeviceID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getDeviceIDString (ARG)
           _strcpy
         _getMajorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getMinorRevisionID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _getRevisionIDString (ARG)
           _getMajorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _getMinorRevisionID (ARG)
             _FLASH_ReadWord
               _FLASH_ReadByte
           _strcat (ARG)
           _strcpy (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
         _getUserID (ARG)
           _FLASH_ReadWord
             _FLASH_ReadByte
         _isdigit (ARG)
         _putch (ARG)
           _EUSART2_Write
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion
       _TMR7_StopTimer

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADCPostProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2_TMR7_StopTimer
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0      80      12       50.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100     22      BC      10       73.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B3      D7       7       84.0%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     68      A0       5      100.0%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     311       8        0.0%
DATA                 0      0     311       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Nov 04 10:33:48 2018

                 getRevisionIDString@MajRevStr 0132                             ??i2_TMR7_StopTimer 0001  
                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 7052  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 6F50                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 70A8                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
             getRevisionIDString@inputMajRevID 0131                              ??_TMR5_WriteTimer 0003  
                                   i2___ftpack 5924                 __end_of_heartbeatTimerCallback 6B20  
                                 ___ftadd@exp1 0136                                   ___ftadd@exp2 0135  
                                   i2___lltoft 666C                                   ___ftadd@sign 0134  
                                          l370 6998                                            l380 68AE  
                                          l372 69C6                                            l381 68AC  
                                          l376 6872                                            l377 686E  
                                          l369 699C                                            l379 6888  
                                          l945 625E                                            l990 4C7A  
                                          l984 4C24                                            l986 4C60  
                                          l987 4C44                                            l989 4CA8  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                 getRevisionIDString@MinRevStr 012F                                            _Ipk 00D1  
                                          _Vpk 00D4               getRevisionIDString@inputMinRevID 0127  
                    __end_of_getDeviceIDString 5E74                                            _sin 3C76  
                   currentMeasuredToPeak@Angle 0076                        __size_of_PMD_Initialize 001C  
                                 ___awmod@sign 011C                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                             ??_TMR7_StopTimer 0100                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000                                   __CFG_ZCD$OFF 000000  
                                 ___ftdiv@cntr 0140                                   ___ftdiv@sign 0145  
                                         l1020 3234                                           l1013 3264  
                                         l1021 324C                                           l1022 337E  
                                         l1030 3336                                           l1014 31BC  
                                         l1031 334E                                           l1023 32A6  
                                         l1015 328E                                           l1040 3444  
                                         l1024 33B4                                           l1032 3366  
                                         l1016 31D4                                           l1033 34A4  
                                         l1041 345C                                           l1025 32BE  
                                         l1017 31EC                                           l1201 0BC0  
                                         l1042 3474                                           l1034 33CC  
                                         l1026 32D6                                           l1018 3204  
                                         l1035 34DA                                           l1043 348C  
                                         l1027 32EE                                           l1019 321C  
                                         l1203 0C1C                                           l1300 374C  
                                         l1036 33E4                                           l1028 3306  
                                         l2101 65C0                                           l1037 33FC  
                                         l1029 331E                                           l1133 003E  
                                         l1310 2D1C                                           l1230 5E1C  
                                         l2102 65BA                                           l2110 67D6  
                                         l1038 3414                                           l1303 2B0E  
                                         l2111 67CC                                           l1039 342C  
                                         l1151 0462                                           l1143 01BC  
                                         l1135 007A                                           l1304 2A1E  
                                         l2104 65DA                                           l2200 6BEE  
                                         l1152 0436                                           l1160 039E  
                                         l1401 172E                                           l1321 0EC0  
                                         l2105 65D0                                           l1153 03E6  
                                         l1161 03B6                                           l1145 0220  
                                         l1137 00D6                                           l1402 1632  
                                         l1330 0DDC                                           l1314 0CF0  
                                         l1250 5328                                           l1226 5E34  
                                         l1162 03CE                                           l1154 0326  
                                         l1307 2AE2                                           l1331 0E04  
                                         l1315 0D02                                           l1227 5DEC  
                                         l2131 63C0                                           l1171 05C2  
                                         l1155 0416                                           l1147 02E8  
                                         l1139 014E                                           l1308 2C58  
                                         l1404 1746                                           l1340 0EA8  
                                         l1332 0E14                                           l1324 0DD4  
                                         l1316 0DC6                                           l1260 5360  
                                         l1252 5336                                           l1228 5E62  
                                         l2124 66D8                                           l2132 63F0  
                                         l1156 033E                                           l1148 027C  
                                         l1405 16B6                                           l1325 0F28  
                                         l1341 0EBA                                           l1333 0E0E  
                                         l1317 0D9A                                           l1229 5E04  
                                         l2125 66D2                                           l2205 5C24  
                                         l1181 077A                                           l1173 061A  
                                         l1165 04BA                                           l1157 0356  
                                         l1342 14B2                                           l1350 10DE  
                                         l1318 0D46                                           l1262 5368  
                                         l1254 5340                                           l1246 52F2  
                                         l2118 695C                                           l2206 5BB2  
                                         l2134 640C                                           l1158 036E  
                                         l1351 11A2                                           l1343 0F3C  
                                         l2119 6952                                           l2207 5C1C  
                                         l2135 63FC                                           l1191 0912  
                                         l1183 07D2                                           l1175 0672  
                                         l1167 0512                                           l1159 0386  
                                         l1360 1208                                           l1344 0F7E  
                                         l1328 0DD8                                           l1264 5370  
                                         l1256 534A                                           l1248 5320  
                                         l1337 0E94                                           l1193 0B64  
                                         l1185 0820                                           l1177 06CA  
                                         l1169 056A                                           l1354 114C  
                                         l1346 1012                                           l1338 0E68  
                                         l1610 5562                                           l1266 5378  
                                         l1258 5352                                           l2146 5DC8  
                                         l1194 094C                                           l1371 1338  
                                         l1347 107A                                           l2147 5D60  
                                         l1187 086E                                           l1179 0722  
                                         l1380 1502                                           l1372 133C  
                                         l1612 55AA                                           l1268 53A2  
                                         l2148 5D9C                                           l1196 0A10  
                                         l1373 1354                                           l1365 12FA  
                                         l1349 10A0                                           l1189 08C0  
                                         l1710 584C                                           l1390 15DA  
                                         l1382 1526                                           l1374 148E  
                                         l1366 1266                                           l1711 5842  
                                         l1631 5EB8                                           l1391 1582  
                                         l1375 13A6                                           l1615 55FA  
                                         l1704 57F0                                           l1632 5EB0  
                                         l1800 4E42                                           l1384 15C4  
                                         l1368 1314                                           l1616 55BC  
                                         l1705 57E6                                           l1641 6280  
                                         l1297 366A                                           l1385 1540  
                                         l1377 14A8                                           l1369 1306  
                                         l1609 5568                                           l1650 62D2  
                                         l1642 628C                                           l1802 4E6A  
                                         l1378 149A                                           l1618 562E  
                                         l1811 6E1C                                           l1707 5824  
                                         l1635 5ED8                                           l1803 4E9C  
                                         l1395 15F6                                           l1708 580E  
                                         l1636 5EE2                                           l1628 5E8A  
                                         l1644 62A2                                           l1804 4EAC  
                                         l1821 4D4E                                           l1637 5EF0  
                                         l1629 5E9A                                           l1645 629A  
                                         l1397 1616                                           l1750 432C  
                                         l1830 4DDE                                           l1806 4EC4  
                                         l1735 42B0                                           l1823 4DC6  
                                         l1807 4ED4                                           l1399 174C  
                                         l1744 4340                                           l1832 4E06  
                                         l1824 4DB6                                           l1672 49D2  
                                         l1648 62BA                                           l1656 6BAE  
                                         l1761 4398                                           l1817 6A76  
                                         l1649 62C4                                           l1762 43B4  
                                         l1674 49F0                                           l1770 5148  
                                         l1930 678E                                           l1763 43E4  
                                         l1739 42DA                                           l1675 4A32  
                                         l1771 5186                                           l1684 4AC4  
                                         l1676 4A62                                           l1780 4808  
                                         l1836 6ED8                                           l1772 51AC  
                                         l1940 69E8                                           l1749 4336  
                                         l1829 4DEA                                           l1685 4AB8  
                                         l1933 67B6                                           l1758 4374  
                                         l1678 4AA0                                           l1782 4844  
                                         l1934 67C0                                           l1846 59DA  
                         _ADCC_StartConversion 707C                                           l1759 436A  
                                         l1679 4A90                                           l1783 4834  
                                         l1943 6A08                                           l1880 5F5E  
                                         l1776 477A                                           l1768 5120  
                                         l1944 6A12                                           l1848 5A16  
                                         l1793 5B50                                           l1881 5F6C  
                                         l1929 6796                                           l1849 5A58  
                                         l1794 5B80                                           l1890 6466  
                                         l1778 47A6                                           l1891 6474  
                                         l1779 47E0                                           l1939 69F0  
                                         l1876 5F2A                                           l1788 4868  
                                         l1877 5F1E                                           l1789 485C  
                                         l1886 643E                                           l1887 6432  
                                         l1897 6622                                           l1898 6616  
                                         ?_sin 0066                                           l9459 5BAC  
                        __size_ofi2__div_to_l_ 0128                                           STR_1 FFC4  
                                         STR_2 FFAF                                           STR_3 FFB8  
                                         STR_4 F4D0                                           STR_6 FFAF  
                                         STR_7 FFB8                                           STR_9 FFBC  
                                         _LATA 000F79                                           _LATB 000F7A  
                                         _LATC 000F7B                                           _LATD 000F7C  
                                         _LATE 000F7D                                           _LATF 000F7E  
                                         _LATG 000F7F                                           _LATH 000F80  
                                 printf@tmpval 0182                                           _T6PR 000FB0  
                                         _PMD0 000E4C                                           _PMD1 000E4D  
                                         _PMD2 000E4E                                           _PMD3 000E4F  
                                         _PMD4 000E50                                           _PMD5 000E51  
                                         _PLLR 007230                                           _TMR6 000FAF  
                            ??_TMR7_StartTimer 0117                                           _WPUA 000E91  
                                         _WPUB 000E99                                           _WPUC 000EA1  
                                         _WPUD 000EA6                                           _WPUE 000EAE  
                                         _WPUF 000EB3                                           _WPUG 000EBB  
                                         _WPUH 000EC0                          ??_EUSART2_Receive_ISR 005E  
                             __end_of_ADCC_ISR 6DDE                                           _Irms 00CB  
                                __CFG_FCMEN$ON 000000                                  _EUSART2_Write 6868  
                                         _Vrms 00C8                                           _acos 6720  
                                         _fabs 6D0C                                           _atan 409A  
                                         _asin 3A0A                                           _atoi 5560  
                                         _main 61F4                                           _line 0242  
                                 ___ftpack@arg 0117                                   ___ftpack@exp 011A  
                                ?_EUSART2_Read 0001                                           fsr0h 000FEA  
                                         fsr1h 000FE2                                           indf0 000FEF  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005F                                           _sqrt 45B6  
                                         _utoa 59D2                    getCauseOfResetString@F17476 02A4  
                                 i2___ftadd@f1 0040                                   i2___ftadd@f2 0043  
                                         sin@f 0066                                   i2___ftge@ff1 002A  
                                         sin@y 0069                                   i2___ftge@ff2 002D  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 01CD  
                                 i2___ftdiv@f1 0015                                   i2___ftdiv@f2 0018  
                                 i2___ftdiv@f3 0020                                __end_ofi2_scale 3198  
                 __end_of_EUSART2_Transmit_ISR 6C40                                   i2___ftneg@f1 0024  
                              __end_ofi2_putch 70A0                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 0153                                   i2___ftmul@f1 0027  
                                 i2___ftmul@f2 002A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                                   ___ftmul@sign 0154  
                                 i2___ftsub@f1 0060                                   i2___ftsub@f2 0063  
                                 i2___fttol@f1 003D                       __size_ofi2_EUSART2_Write 004A  
                                 ___fttol@exp1 0163                                _timer7ReloadVal 01CF  
                                 i2___lltoft@c 0009                                   ___fttol@lval 015F  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
                         getUserID@inputUserID 0126                 __size_of_OSCILLATOR_Initialize 001C  
                __end_of_OSCILLATOR_Initialize 6F56                       ?_terminal_textAttributes 0190  
                            ??_TMR7_WriteTimer 0102                                          l10521 10DE  
                                        l12131 09B8                                          l12115 093C  
                                        l11405 55F6                                          l12133 0A10  
                                        l12125 0982                                          l10711 63FC  
                                        l10633 1544                                          l10529 1126  
                                        l10457 0E68                                          l10573 1306  
                                        l10549 120C                                          l10647 1586  
                                        l10683 172E                                          l12537 4C14  
                                        l12547 4C3A                                          l10993 5BB2  
                                        l15181 5E58                                          l15179 5E4E  
                                        l11989 026C                                          l11999 02DE  
                                        ?_acos 008E                                          ?_fabs 0027  
                                        ?_atan 0058                                          ?_asin 0079  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 012B  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                __end_of___awdiv 5EFA  
                                        _ADPRE 000F5E                                __end_of___ftadd 440A  
                                        STR_10 FFC0                                          STR_11 FFF5  
                                        STR_12 FFC9                                          STR_20 FFC8  
                                        STR_13 FD7F                                          STR_21 FFCB  
                                        STR_30 FF4C                                          STR_14 FFDE  
                                        STR_22 FFD1                                          STR_15 FFE4  
                                        STR_23 FFD7                                          STR_31 FFCE  
                                        STR_40 F796                                          STR_16 FFF0  
                                        STR_24 FFDD                                          STR_32 FFD4  
                                        STR_41 FE96                                          STR_17 FFF8  
                                        STR_25 FFE3                                          STR_33 FFDA  
                                        STR_18 FFC9                                          STR_42 FFAF  
                                        STR_26 FFE9                                          STR_34 FFE0  
                                        STR_50 FFB4                                          STR_43 FFB8  
                                        STR_19 FFFA                                          STR_27 FFEF  
                                        STR_35 FFE6                                          STR_51 FE0B  
                                        STR_28 FFEF                                          STR_36 FFEC  
                                        STR_44 FF9F                                          STR_60 FF66  
                                        STR_52 F98C                                __end_of___awmod 62DC  
                                        STR_29 FFFA                                          STR_45 FFAF  
                                        STR_37 FFF2                                          STR_61 FFA5  
                                        STR_53 FF5B                                          STR_38 FFF2  
                                        STR_46 FFB8                                          STR_62 FF93  
                                        STR_70 FD26                                          STR_54 F700  
                                        STR_39 FFFC                                          STR_63 FF8C  
                                        STR_55 FF1C                                          STR_71 FE7D  
                                        STR_47 FE5D                                          STR_64 FEF3  
                                        STR_72 FD96                                          STR_56 FB68  
                                        STR_48 F8F7                                          STR_80 F88A  
                                        _ADRPT 000F66                                          STR_49 FF99  
                                        STR_57 FF7B                                          STR_65 FF01  
                                        STR_81 FED7                                          STR_73 FE3D  
                                        STR_66 FEC9                                          STR_74 FB23  
                                        STR_82 FAB4                                          STR_90 F852  
                                        STR_58 F799                                          STR_91 FEBA  
                                        STR_75 FE9C                                          STR_67 FD6B  
                                        STR_83 FCC1                                          STR_59 F92B  
                                        STR_68 FE1C                                          STR_84 FC11  
                                        STR_76 FBCE                                          STR_92 FA65  
                                        STR_93 FE6D                                          STR_77 FDE8  
                                        STR_85 FDC0                                          STR_69 F95C  
                                        STR_86 FB8A                                          STR_78 FB46  
                                        STR_94 FA3C                                          STR_95 FF4F  
                                        STR_79 FF29                                          STR_87 FDAB  
                                        STR_88 FBAC                                          STR_96 F9E9  
                                        STR_97 FF36                                          STR_89 FEAB  
                                        STR_98 FCF4                                          STR_99 FD0D  
                              __end_of___ftdiv 51DE                                __end_of___ftneg 6E2A  
                              __end_of___lldiv 5F7E                                          ?_sqrt 0066  
                                        ?_utoa 011E                                          u11211 426E  
                                        u11221 4282                                __end_of___ftmul 4F0E  
                                        u11310 430A                                          u12111 4D32  
                                        u12200 5F2E                                          u11250 42A2  
                                        u12130 4D6C                                          u13010 69F4  
                              ___awdiv@divisor 011F                                          u11421 4E2A  
                                        u11350 4348                                          u12230 6442  
                                        u12135 4D64                                          u11280 42CC  
                              __end_of___llmod 6486                                          u11441 4E52  
                                        u12170 4DF0                                          u11530 5EBC  
                                        u12410 0E42                                          u13130 66FA  
                                        u13210 5BE4                                          u14010 5DE0  
                              __end_of___ftsub 6AA0                                          u11380 437C  
                                        u12420 0E48                                __end_of___fttol 4E18  
                                        u14101 5130                                          u10830 57D8  
                                        u12350 0D2E                                          u13150 6986  
                                        u12600 1126                                          u12520 0FB6  
                                        u12417 0E38                                          u13137 66F0  
                                        u12450 0E8A                                          u12370 0D7E  
                                        u13410 680E                                          u11900 486E  
                                        u12380 0DBC                                          u11821 475E  
                                        u12525 0FAC                                          u12357 0D24  
                                        u13157 697C                                          u10870 5856  
                                        u11590 62A6                                          u12470 0EF0  
                                        u12640 124A                                          u12560 10B0  
                                        u11841 478A                                          u12457 0E80  
                                        u12377 0D74                                          u14081 5108  
                                        u12570 10F0                                          u12387 0DB2  
                                        u12477 0EE6                                          u12670 1322  
                                        _T5CLK 000FC6                                          u12680 1332  
                                        u12920 6604                                          u11970 4ACA  
                                        u12850 175E                                          u12860 178E  
                                        u14630 0114                                          u12927 65FA  
                                        _T5CON 000FC3                                          u12867 1784  
                                        u12980 679A                                          u15620 4C3A  
                                        _T7CLK 000F33                                          u14680 02DE  
                                        _T6CON 000FB1                                          u13971 6CB6  
                                        u14870 0982                                 __CFG_DEBUG$OFF 000000  
                                        u14880 09AA                                          _T7CON 000F30  
                                        u13985 6B88                                          u14890 09B8  
                              __end_of___lwdiv 67CA                                          _T6HLT 000FB2  
                                        i1l213 007C                                          i1l215 009C  
                                        i1l217 00A6                                          u19677 6200  
                              __end_of___lwmod 6A1C                                          i2l202 56A2  
                                        i2l204 56AE                                          i2l206 56B8  
                                        i1l391 6C3A                                          i1l392 6C36  
                                        i2l402 58CC                                          i2l404 591C  
                                        i1l628 6E42                                          i1l930 576C  
                                        i1l922 572C                                          i1l931 577A  
                                        i1l923 573A                                          i2l380 6942  
                                        _T6TMR 000FAF                                          i2l381 6940  
                                        i1l917 570C                                          i2l702 6F68  
                                        i1l934 578C                                          i1l926 574C  
                                        i1l918 571A                                          i1l935 579A  
                                        i1l927 575A                                          i2l376 6906  
                                        i2l377 6902                                          i1l938 57AC  
                                        _T6RST 000FB4                                          i2l379 691C  
                                        i1l939 57BA                                          i2l901 2414  
                                        i2l397 5882                                          i2l902 259A  
                                        i2l398 58A6                                          i1l886 6B1C  
                                        i2l911 2722                                          i2l903 24EA  
                                        i2l399 58C8                                          i2l904 24B4  
                                        i2l913 2890                                          i2l905 24DC  
                                        i2l906 2504                                          i2l909 2678  
                                        i2l890 289E                                          i2l891 2256  
                              ___awdiv@counter 0121                                          i2l895 22BC  
                                        i2l899 2386                                          _OSCEN 000E47  
                                        _TMR5H 000FC2                                          _TMR5L 000FC1  
                                        _TMR7H 000F2F                                          _TMR7L 000F2E  
                                 i2__div_to_l_ 4ADC                                          _TRISA 000F81  
                                        _TRISB 000F82                                          _TRISC 000F83  
                                        _TRISD 000F84                                          _TRISE 000F85  
                                        _TRISF 000F86                                          _TRISG 000F87  
                                        _TRISH 000F88                             __end_ofsin@coeff_a ED16  
                           __end_ofsin@coeff_b ED31                                  __CFG_WRT0$OFF 000000  
                                __CFG_WRT1$OFF 000000                                  __CFG_WRT2$OFF 000000  
                                        _Imeas 00CE                                  __CFG_WRT3$OFF 000000  
                                __CFG_PWRTE$ON 000000                                  __CFG_WRT4$OFF 000000  
                                __CFG_WRT5$OFF 000000                                   ___lltoft@exp 0127  
                                __CFG_WRT6$OFF 000000                        ??_ADCC_IsConversionDone 0100  
                                __CFG_WRT7$OFF 000000              __size_of_TMR6_SetInterruptHandler 000E  
                               __CFG_EBTR0$OFF 000000                                 __CFG_EBTR1$OFF 000000  
                               __CFG_EBTR2$OFF 000000                                 __CFG_EBTR3$OFF 000000  
                               __CFG_EBTR4$OFF 000000                                 __CFG_EBTR5$OFF 000000  
                    ?_TMR6_SetInterruptHandler 0117                                 __CFG_EBTR6$OFF 000000  
                               __CFG_EBTR7$OFF 000000                                  __CFG_WRTB$OFF 000000  
                                __CFG_WRTC$OFF 000000                                  __CFG_WRTD$OFF 000000  
                             __end_of_TMR5_ISR 6CA8                               __end_of_TMR6_ISR 6DB6  
                             __end_of_TMR7_ISR 6C74                                 __CFG_EBTRB$OFF 000000  
                                   i2isdigit@c 0003                                  ___awtoft@sign 0122  
                    ??_terminal_ringBufferPull 01A8                                __end_of_dpowers EC87  
                                        acos@x 008E                                          fabs@d 0027  
                                   i2scale@scl 003C                                          _floor 53A8  
                                        _frexp 6104                                          _errno 0240  
                        ?_ADCC_StartConversion 0001                                          _scale 28C8  
                              __end_of_isdigit 6EE0                                          atan@f 0058  
                                        atan@x 0063                                          atan@y 0060  
                           __CFG_MCLRE$EXTMCLR 000000                                  ___ftpack@sign 011B  
                                        asin@x 0079                                          asin@y 0088  
                                        atoi@a 0130                                          atoi@s 012B  
                                        _putch 701A                                 __pbitbssCOMRAM 02F0  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        sin@x2 006F                                          tablat 000FF5  
                             __end_ofi2___ftge 5CD0                               __end_ofi2___wmul 6E76  
                                        plusw1 000FE3                                          plusw2 000FDB  
                               ??_EUSART2_Read 0117                                          sqrt@a 0066  
                                        sqrt@i 006F                                          utoa@c 0126  
                                        sqrt@q 0073                                          sqrt@x 0076  
                                        sqrt@z 0070                                          utoa@v 0124  
                                        status 000FD8                                          wtemp6 0060  
                              __end_of_strncmp 5C40                                __end_of_strncpy 641E  
                             __end_ofi2_fround 3A0A                 ?_INTERRUPT_InterruptManagerLow 0001  
                                i2___ftdiv@exp 001F                             __size_ofi2___awdiv 0084  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___awmod 0070  
                            getUserID@IDOffset 0129                             __size_ofi2___ftdiv 00E6  
                           __size_ofi2___ftneg 0024                             __size_ofi2___lldiv 0082  
                  ??_ADCPostProcessingCallback 005E                             __size_ofi2___ftmul 00F4  
                           __size_ofi2___llmod 0066                             __size_ofi2___ftsub 0042  
                           __size_ofi2___fttol 00F4                               __end_ofi2_printf 2250  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 7060  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 7052  
                              _TMR5_Initialize 68B4                                __initialization 6084  
                            i2___lldiv@divisor 0005                                   __end_of_acos 6776  
                                 __end_of_fabs 6D3C                                   __end_of_atan 425C  
                                 __end_of_asin 3C76                                   __end_of_atoi 5638  
                                 __end_of_main 626A                              i2___lldiv@counter 000D  
                                i2___ftmul@exp 0030                                   __end_of_sqrt 474C  
                                   i2printf@ap 0076                                   __end_of_utoa 5A7C  
                                   i2printf@cp 0074                          __end_of_ringBufferLUT 0CE2  
                               __CFG_SCANE$OFF 000000                        FLASH_ReadByte@flashAddr 0117  
                           __size_ofi2_isdigit 001E                           __size_of_getDeviceID 0020  
                                  ?i2___ftpack 0001                                         ??_acos 005E  
                                       ??_fabs 002A                                         ??_atan 005B  
                                  ?i2___lltoft 0009                                         ??_asin 005E  
                                       ??_atoi 012D                                         ??_main 01B1  
                                ___fttol@sign1 015E                       _TMR5_SetInterruptHandler 7044  
                                       ??_sqrt 0069                                         ??_utoa 0124  
                                __activetblptr 000003                        __size_of_FLASH_ReadByte 001A  
                      __size_of_FLASH_ReadWord 0042                     __size_of_getDeviceIDString 008A  
                         __size_of__tdiv_to_l_ 0134                         getUserID@initialOffset 0127  
                              _TMR6_Initialize 6CDA                             _TRIAC_Firing_Angle 00FC  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 63B6                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01D4  
                                       ?_floor 0056                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             __end_of___altoft 61F4                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 0155  
                                       STR_100 F6AA                                         _ADLTHL 000F6A  
                                       STR_101 F644                                         STR_110 FFAA  
                                       STR_102 F9BB                                         STR_103 FAFE  
                                       STR_111 ED31                                         STR_112 FBF0  
                                       STR_104 F7D9                                         STR_120 FE8D  
                                       STR_113 FAD9                                         STR_105 F752  
                                       STR_121 FE2D                                         STR_106 FE4D  
                                       STR_114 FA8D                                         _ADRESH 000F64  
                                       STR_130 FD55                                         STR_122 FDD5  
                                       STR_115 FD3E                                         STR_107 F818  
                                       STR_131 FC31                                         STR_123 FCDB  
                                       STR_132 FF85                                         STR_108 FEE5  
                                       STR_116 FC4F                                         STR_124 FA1C  
                                       STR_117 FF43                                         STR_133 FDFA  
                                       STR_109 F8C2                                         STR_125 FC8A  
                                       STR_118 FF0F                                         _ADRESL 000F63  
                                       STR_126 FA13                                         STR_119 FF71  
                                       STR_127 FC6D                                         STR_128 FCA6  
                                       STR_129 FD81                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                               __end_of___awtoft 6BD2  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                             __end_of___ftpack 5876                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                               __end_of___lltoft 666C  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1300 39C4  
                                       i2l1310 316E                                         i2l1303 2F74  
                                       i2l1304 2E8E                                         i2l1401 21E2  
                                       i2l1321 1978                                         i2l1402 20E8  
                                       i2l1330 1894                                         i2l1314 17AA  
                                       i2l1307 2F4A                                         i2l1331 18BC  
                                       i2l1315 17BC                                         i2l1308 30B2  
                                       i2l1404 21FA                                         i2l1340 1960  
                                       i2l1332 18CC                                         i2l1324 188C  
                                       i2l1316 187E                                         i2l1405 216A  
                                       i2l1325 19E0                                         i2l1341 1972  
                                       i2l1333 18C6                                         i2l1317 1852  
                                       i2l1342 1F68                                         i2l1350 1B94  
                                       i2l1318 1800                                         i2l1351 1C5C  
                                       i2l1343 19F4                                         i2l1360 1CC2  
                                       i2l1344 1A36                                         i2l1328 1890  
                                       i2l1337 194C                                         i2l1354 1C04  
                                       i2l1346 1AC8                                         i2l1338 1920  
                                       i2l1371 1DF0                                         i2l1347 1B2E  
                                       i2l2180 5478                                         i2l1380 1FB8  
                                       i2l1372 1DF4                                         i2l1373 1E0C  
                                       i2l1365 1DB2                                         i2l1349 1B54  
                                       i2l1710 59A8                                         i2l2094 45F6  
                                       i2l1390 2090                                         i2l1382 1FDC  
                                       i2l1374 1F44                                         i2l1366 1D20  
                                       i2l1711 599E                                         i2l2095 45E6  
                                       i2l1631 5FC0                                         i2l1391 2038  
                                       i2l1375 1E5E                                         i2l1704 594C  
                                       i2l1800 502A                                         i2l2176 53E4  
                                       i2l1552 3A54                                         i2l1632 5FB8  
                                       i2l1384 207A                                         i2l1368 1DCC  
                                       i2l1705 5942                                         i2l2185 6120  
                                       i2l2177 53D6                                         i2l2097 4648  
                                       i2l1641 62F0                                         i2l1297 38EC  
                                       i2l1385 1FF6                                         i2l1377 1F5E  
                                       i2l1369 1DBE                                         i2l1802 5052  
                                       i2l1554 3B48                                         i2l1650 6342  
                                       i2l1642 62FC                                         i2l1378 1F50  
                                       i2l1707 5980                                         i2l1803 5084  
                                       i2l2179 53FE                                         i2l1811 6E8C  
                                       i2l1571 40D0                                         i2l1555 3BF8  
                                       i2l1635 5FE0                                         i2l1395 20AC  
                                       i2l1708 596A                                         i2l1804 5094  
                                       i2l1636 5FEA                                         i2l1628 5F92  
                                       i2l1644 6312                                         i2l1821 4F3A  
                                       i2l1573 4128                                         i2l1637 5FF8  
                                       i2l1629 5FA2                                         i2l1645 630A  
                                       i2l1397 20CC                                         i2l1750 44D8  
                                       i2l1806 50AC                                         i2l1662 554A  
                                       i2l1830 4FC8                                         i2l1574 422C  
                                       i2l1735 445C                                         i2l1807 50BC  
                                       i2l1663 54CA                                         i2l1823 4FB0  
                                       i2l1399 2200                                         i2l1744 44EC  
                                       i2l1832 4FF0                                         i2l1824 4FA0  
                                       i2l1576 423E                                         i2l1672 4AFA  
                                       i2l1648 632A                                         i2l1761 4544  
                                       i2l1817 6AB8                                         i2l1649 6334  
                                       i2l1762 4560                                         i2l1498 61AA  
                                       i2l1770 522E                                         i2l1674 4B18  
                                       i2l1763 4590                                         i2l1739 4486  
                                       i2l1499 619E                                         i2l1771 526C  
                                       i2l1675 4B5A                                         i2l1772 5292  
                                       i2l1668 6D2E                                         i2l1684 4BEC  
                                       i2l1676 4B8A                                         i2l1780 493A  
                                       i2l1836 6F16                                         i2l1749 44E2  
                                       i2l1829 4FD4                                         i2l1685 4BE0  
                                       i2l1758 4520                                         i2l1678 4BC8  
                                       i2l1782 4976                                         i2l1759 4516  
                                       i2l1679 4BB8                                         i2l1783 4966  
                                       i2l1768 5206                                         i2l1880 6064  
                                       i2l1776 48AC                                         i2l1793 5C70  
                                       i2l1881 6072                                         i2l1794 5CA0  
                                       i2l1890 64CC                                         i2l1778 48D8  
                                       i2l1891 64DA                                         i2l1779 4912  
                                       i2l1876 6030                                         i2l1788 499A  
                                       i2l1965 3CA2                                         i2l1877 6024  
                                       i2l1789 498E                                         i2l1966 3D84  
                                       i2l1886 64A4                                         i2l1967 3DDC  
                                       i2l1887 6498                                         i2l1968 3EC6  
                                       i2l1897 667E                                         i2l1898 6672  
                                       _RG7PPS 000E89                                         _TABLAT 000FF5  
                                i2putch@txData 0002                                         _FVRCON 000EC4  
                                    ??i2_scale 0039                               __end_of___lwtoft 6EBE  
                      TMR7_WriteTimer@timerVal 0100                                         _OSCFRQ 000E49  
                                       _NVMDAT 000F76                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 681A                               __end_of__powers_ ECAE  
                                 i2_scale$3895 0039           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 4D20                                         ___ftge 5B1E  
                                       ___wmul 6D66                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                                    ??___lwdiv 011B                                      ??___lwmod 011B  
                     ??_terminal_setCursorHome 0190                                         _fround 3500  
                                       clear_0 60CA                                         clear_1 60D6  
                                       clear_2 60E2                                         clear_3 60F2  
                         _eusart2RxStringReady 07F8                               ___awdiv@quotient 0123  
                              ___awmod@divisor 0119                                ___awmod@counter 011B  
                                       _printf 0CE2                                         _strcat 65B0  
                                       _strchr 6BD2                                         _strcmp 67CA  
                                       _strcpy 6948                                      ?_ADCC_ISR 0001  
                                       _strlen 66C8                                 i2___awdiv@sign 000C  
                                       _strstr 5D5E                                         floor@i 0059  
                                       floor@x 0056                          ___ftmul@f3_as_product 0150  
                 getCauseOfResetString@strings 0119                               _background_color 00EA  
                              _ADCC_Initialize 64EC                              ??i2_EUSART2_Write 0001  
                    _ADCPostProcessingCallback 2250                                 _PMD_Initialize 6F1E  
                      FLASH_ReadWord@flashAddr 011B                                      ??_isdigit 0117  
                            __end_ofi2___awdiv 6002                              __end_ofi2___ftadd 45B6  
                            __end_ofi2___awmod 634C                              __end_ofi2___ftdiv 52C4  
                               i2___ftadd@exp1 004B                                 i2___ftadd@exp2 004A  
                            __end_ofi2___ftneg 6E9A                              __end_ofi2___lldiv 6084  
                                       sin@sgn 0072                              __end_ofi2___ftmul 50F6  
                            __end_ofi2___llmod 64EC                              __end_ofi2___ftsub 6AE2  
                            __end_ofi2___fttol 5002                                 i2___ftadd@sign 0049  
                                 __mediumconst EC5E                                         tblptrh 000FF7  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                         _EUSART2_Transmit_ISR 6C0A                         ??_ADCC_StartConversion 0100  
                               i2___awmod@sign 0006                                         sqrt@og 006C  
                              ??_EUSART2_Write 0117       TMR5_SetInterruptHandler@InterruptHandler 0117  
     TMR7_SetInterruptHandler@InterruptHandler 0117    ADCC_SetADIInterruptHandler@InterruptHandler 0117  
     TMR6_SetInterruptHandler@InterruptHandler 0117                                 peakToRMS@Angle 0097  
                                    ??_strncmp 0123                                      ??_strncpy 011D  
      terminal_textAttributes@background_color 0190                  __size_of_INTERRUPT_Initialize 0012  
                              _eusart2RxBuffer 0200                        __end_of_TMR5_Initialize 68FE  
                            __end_ofi2_isdigit 6F1E                   __size_of_getRevisionIDString 008E  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00B6  
                            _SYSTEM_Initialize 6D3C           __end_of_TMR7_DefaultInterruptHandler 70BC  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 70BA  
                               i2___ftdiv@cntr 001E                                _eusart2TxBuffer 0300  
                                   __accesstop 0060                        __end_of__initialization 60FA  
                                   ___altoft@c 004C                                 i2___ftdiv@sign 0023  
                                   ___ftadd@f1 012B                                     ___ftadd@f2 012E  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 007C  
                                   ___ftge@ff1 0117                                     ___ftge@ff2 011A  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                 eval_poly@res 0055                                  ___rparam_used 000001  
                                   ___ftdiv@f1 0137                                     ___ftdiv@f2 013A  
                                   ___ftdiv@f3 0141                                _TMR5_WriteTimer 6F56  
                                   ___ftneg@f1 0123                                     ___awtoft@c 011F  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 0146  
                                   ___ftmul@f2 0149              terminal_ringBufferPull@charNumber 01AB  
                                   ___ftsub@f1 0137                                     ___ftsub@f2 013A  
                   __end_of_getMajorRevisionID 6B98                                     ___fttol@f1 0155  
                               __pcstackCOMRAM 0001                             i2___lldiv@dividend 0001  
                      ??_terminal_printNewline 0190                                   __pidataBANK0 700C  
                                 __pidataBANK2 6F8C                            ??_SYSTEM_Initialize 011C  
                                   ___lltoft@c 011F                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 5486                                  __end_of_frexp 617C  
                               i2___ftmul@cntr 0034                                  __end_of_scale 2D48  
                               i2___ftmul@sign 0035                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 7028                                    i2printf@idx 0071  
                     ??_terminal_clearTerminal 0190                                    i2printf@len 0072  
                                  i2printf@exp 007A                                    i2printf@val 0083  
                      __end_of_TMR6_Initialize 6D0C                       __size_of_getCauseOfReset 00E4  
                       __end_of_PMD_Initialize 6F3A                                 i2___fttol@exp1 004B  
                        _getCauseOfResetString 6CA8                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0047                                      ?i2___ftge 002A  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 69D8  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 4880  
                                   __div_to_l_ 49B2                                _TMR7_StartTimer 70A8  
                    __size_ofi2_TMR7_StopTimer 0006                             __size_of_getUserID 003C  
                                    ?i2_fround 0036                          ?_EUSART2_Transmit_ISR 0001  
                  __size_of_getMinorRevisionID 0026                                      ?i2_printf 0066  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0122  
                                      ??_floor 0059                                __div_to_l_@cntr 0121  
                                      ??_frexp 0006                                        ??_scale 0158  
                    __end_of_SYSTEM_Initialize 6D66                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 011D                                        ??_putch 0118  
                                 peakToRMS@RMS 00A3                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00ED                                  _eusart2TxHead 01D6  
                                   __pbssBANK0 00C8                                     __pbssBANK1 01B3  
                                   __pbssBANK2 0200                                     __pbssBANK3 0300  
                                _eusart2RxTail 01D3                                  _eusart2TxTail 01D5  
                           __size_of_eval_poly 00DA                               i2__tdiv_to_l_@f1 0001  
                             i2__tdiv_to_l_@f2 0004                        __end_of_TMR7_Initialize 6868  
                           __size_of_peakToRMS 01C6                  ?_TMR7_DefaultInterruptHandler 0001  
                                __div_to_l_@f1 0117                                  __div_to_l_@f2 011A  
                        EUSART2_Read@readValue 0117                                _TMR7_WriteTimer 6E2A  
                             ??_FVR_Initialize 0117                          ringBufferLUT@arg_buff 029B  
                               _peakToRMS$3880 009A                                 _peakToRMS$3881 009D  
                               _peakToRMS$3879 00A0                                    _Irms_offset 00F1  
                                      ?___ftge 0117              terminal_ringBufferPull@index_2151 01AD  
                                      ?___wmul 0125                          _currentMeasuredToPeak 6550  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 7044  
                      __end_of_ADCC_Initialize 6550                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                    ?___altoft 004C                                        ?_fround 0155  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                    ?___awtoft 011F                                      ?___ftpack 0117  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0164  
                              ?_PMD_Initialize 0001                                      ?___lltoft 011F  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___ftge 0030  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strcpy 0117  
                                      ?_strlen 0117                                 _FLASH_ReadByte 6F72  
                                    ?___lwtoft 0009                                        ?_strstr 0126  
                                   ??i2___wmul 0013                                 _FLASH_ReadWord 6A1C  
                                      u1430_41 48BC                                        u1428_41 4890  
                                      u1815_41 5012                                        u1824_41 51EE  
                                      u1817_41 503A                                        u1826_41 5216  
                                      i2l14835 1BDE                                        i2l14827 1B94  
                                      i2l14763 1920                                        i2l13981 5CCC  
                                      i2l14855 1CC6                                        i2l14953 203C  
                                      i2l14939 1FFA                                        i2l14879 1DBE  
                                      u1845_41 4F1E                                        i2l14989 21E2  
                                      u1794_41 441A                                        u1795_41 442E  
                                      _SP2BRGH 000EF4                                     ??i2_fround 0039  
                                      _SP2BRGL 000EF3                                        _OSCCON1 000E43  
                                      _OSCCON3 000E45                    __end_of_EUSART2_Receive_ISR 5924  
                                      _TBLPTRH 000FF7                                        _TBLPTRL 000FF6  
                                      _TBLPTRU 000FF8                                     ??i2_printf 0068  
                                      _NVMADRH 000F75                                        _NVMADRL 000F74  
                                      _OSCTUNE 000E48                                        _NVMCON2 000F78  
                                      _SLRCONA 000E8F                                        _SLRCONB 000E97  
                                      _SLRCONC 000E9F                                        _SLRCOND 000EA4  
                                      _SLRCONE 000EAC                                        _SLRCONF 000EB1  
                                      _SLRCONG 000EB9                                        _SLRCONH 000EBE  
               __size_of_ADCC_IsConversionDone 000C                  __end_of_ADCC_IsConversionDone 7096  
                     _acquisitionTimerCallback 5704                        __end_of_TMR5_WriteTimer 6F72  
             __size_of_terminal_textAttributes 0368                                        i2_scale 2D48  
                             ?_TMR5_Initialize 0001                                        i2_putch 7096  
         __end_of_terminal_textAttributesReset 6FCA          __size_of_terminal_textAttributesReset 0012  
                 _terminal_textAttributesReset 6FB8                              __end_of__npowers_ ECD5  
                                      __Hparam 0000                                     _scale$3695 0158  
                                      __Lparam 0000                              __end_of_getUserID 6B5C  
                   ??_TMR5_SetInterruptHandler 011A                                 _adc_error_flag 02F0  
                              __size_of___ftge 0092                                        ___awdiv 5E74  
                                      ___ftadd 425C                                        ___awmod 626A  
                                      ___ftdiv 50F6                                        ___ftneg 6E04  
                      __end_of_TMR7_StartTimer 70AE                                        ___lldiv 5EFA  
                              __size_of___wmul 0028                                        ___ftmul 4E18  
                                      ___llmod 641E                                        ___ftsub 6A5E  
                                      ___fttol 4D20                                        ___lwdiv 6776  
                                      ___lwmod 69D8                                     ??___altoft 0050  
                       __end_of_FLASH_ReadByte 6F8C                         ?_getCauseOfResetString 0117  
                       __end_of_FLASH_ReadWord 6A5E                                        __pcinit 6084  
                                 ??i2___ftpack 0006                                     ??___awtoft 0122  
                                   ??___ftpack 011C                              __end_of_eval_poly 5560  
                              __size_of_fround 0294                               ?_TMR6_Initialize 0001  
                      i2___ftmul@f3_as_product 0031                                        __ramtop 0E00  
              __size_of_terminal_clearTerminal 0010                                   ??i2___lltoft 000D  
                                   ??___lltoft 0123                                        __ptext0 61F4  
                                      __ptext1 6FDC                                        __ptext2 4C04  
                                      __ptext3 0000                                        __ptext4 6FB8  
                                      __ptext5 3198                                        __ptext6 63B6  
                                      __ptext7 6FEC                                        __ptext8 5D5E  
                                      __ptext9 5BB0                              __end_of_peakToRMS 409A  
                              __size_of_printf 0ABA                  currentMeasuredToPeak@Measured 0073  
                                   ??___lwtoft 000C                     ringBufferLUT@angle_degrees 0298  
                              __size_of_strcat 005E                                __size_of_strchr 0038  
                              __size_of_strcmp 0050                                  i2_fround$3893 003C  
                              __size_of_strcpy 0048                                  i2_fround$3894 0039  
                              __size_of_strlen 0058                              __end_of_hexpowers ECF5  
                       getCauseOfResetString@r 0131                                    ?__div_to_l_ 0117  
                              __size_of_strstr 008C                                        _dpowers EC5F  
                        _OSCILLATOR_Initialize 6F3A                         ??_EUSART2_Transmit_ISR 0100  
                                 i2fround@prec 003F                                        _isdigit 6EBE  
                              atan@val_squared 0067                                   __size_of_sin 025E  
                             ___awmod@dividend 0117     ADCPostProcessingCallback@currentADCChannel 00AF  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 006A  
                                    _T5CONbits 000FC3                              ??_getCauseOfReset 0117  
            __size_of_TMR7_SetInterruptHandler 000E                      ?_TMR7_SetInterruptHandler 0117  
                                    _T6CONbits 000FB1                                        asin@sgn 007C  
                                    _T7CONbits 000F30                        ringBufferLUT@percentage 02A0  
                                    _T6HLTbits 000FB2                     __size_of_SYSTEM_Initialize 002A  
                        i2EUSART2_Write@txData 0001                                        _strncmp 5BB0  
                               __pintcode_body 5638                                        _strncpy 63B6  
                         end_of_initialization 60FA                        __end_of_TMR7_WriteTimer 6E50  
                       _terminal_setCursorHome 6FDC                                      _PCON0bits 000FD7  
                             ?_TMR7_Initialize 0001                                        int_func 5638  
                          i2___wmul@multiplier 000F                                      _T6RSTbits 000FB4  
                      __size_of_TMR7_StopTimer 0006                                      i1u1943_28 6DA2  
                                    i1u1945_28 6C60                                      i2u1331_40 5FC4  
                                    i1u1963_28 0086                                      i2u1440_40 6034  
                           __end_ofi2___ftpack 59D2                                      i2u1337_40 6316  
                                    i2u1443_40 64A8                                      i2u1427_40 4BF2  
                                    i2u1436_40 49A0                                      i2u1801_40 4478  
                                    i2u1811_40 4528                                      i2u1804_40 44B6  
                                    i2u1910_40 1BDE                                      i2u1902_40 1A6E  
                                    i2u1902_45 1A64                                      i2u1808_40 44F4  
                                    i2u1914_40 1D04                                      i2u1906_40 1B66  
                                    i2u1851_40 4FDA                                      i2u1907_40 1BA6  
                                    i2u1844_40 6148                                      i2u1844_48 614A  
                                    i2u1917_40 1DDA                             __end_ofi2___lltoft 66C8  
                                    i2u1862_40 3D80                                      i2u1838_40 40F4  
                                    i2u1941_48 6DCA                                      i2u1918_40 1DEA  
                                    i2u1791_40 59B2                                      i2u1847_40 4F58  
                                    i2u1863_40 3D82                                      i2u1839_40 40F6  
                                    i2u1935_40 2212                                      i2u1847_45 4F50  
                                    i2u1936_40 2242                                      i2u1936_47 2238  
                                    i2u1858_40 53F0                                ___lldiv@divisor 011B  
                                    i2u1787_40 5934                                      i2u1891_40 18FA  
                                    i2u1954_48 568C                                      i2u1891_47 18F0  
                                    i2u1876_40 2378                                      i2u1892_40 1900  
                                    i2u1939_48 6C94                                      i2u1885_40 17E8  
                                    i2u1949_40 58BC                                      i2u1885_47 17DE  
                                    i2u1798_40 444E                                      i2u1895_40 1942  
                                    i2u1887_40 1836                                      i2u1895_47 1938  
                                    i2u1887_47 182C                                      i2u1888_40 1874  
                                    i2u1888_47 186A                                      i2u1897_40 19A8  
                                    i2u1897_47 199E                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 634C                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0073                    getDeviceIDString@inputDevID 011D  
                              i2_EUSART2_Write 68FE                                  ??_getDeviceID 0124  
                                      printf@c 018F                                        printf@f 0164  
                     ??_heartbeatTimerCallback 0100                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0048                               ?_ADCC_Initialize 0001  
               _ADCPostProcessingCallback$3882 00B3                 _ADCPostProcessingCallback$3883 00B0  
               _ADCPostProcessingCallback$3884 00A6                 _ADCPostProcessingCallback$3885 00A9  
               _ADCPostProcessingCallback$3886 00AC                                        utoa@buf 011E  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                                      utoa@val 0120                                ??i2__tdiv_to_l_ 0007  
                                      strcmp@r 011C                          __CFG_WDTCPS$WDTCPS_11 000000  
                              ?_FLASH_ReadByte 0117                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01AF  
                          _getRevisionIDString 5CD0                                  ??__tdiv_to_l_ 011D  
                              ?_FLASH_ReadWord 011B                       _TMR6_SetInterruptHandler 7036  
                        _TMR5_InterruptHandler 01BE                               i2_TMR7_StopTimer 70B4  
                     ?_terminal_ringBufferPull 0001                           __CFG_WDTCCS$LFINTOSC 000000  
                            __size_of_ADCC_ISR 0028            __end_of_ADCC_SetADIInterruptHandler 707C  
                  _ADCC_SetADIInterruptHandler 706E                                      i2___awdiv 5F7E  
                                    i2___ftadd 440A                                      i2___awmod 62DC  
                             __CFG_FEXTOSC$ECH 000000                                      i2___ftdiv 51DE  
                                    i2___ftneg 6E76                                      i2___lldiv 6002  
                                    i2___ftmul 5002                                      i2___llmod 6486  
                                    i2___ftsub 6AA0                                      i2___fttol 4F0E  
                             ?_TMR5_WriteTimer 0001                           ??_EUSART2_Initialize 011A  
                         ?_getRevisionIDString 0127                         _terminal_clearTerminal 6FFC  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 0CE2  
                ??_ADCC_SetADIInterruptHandler 011A                                    ___ftdiv@exp 0144  
                                 _EUSART2_Read 6990                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                                    i2_isdigit 6F00                            __size_of__div_to_l_ 012A  
                                  ___ftmul@exp 014F                                      _Avg_Power 01BB  
                 __end_of_INTERRUPT_Initialize 6FDC                 ??_ADCC_DefaultInterruptHandler 0001  
               __size_of_terminal_printNewline 0010                               ?_TMR7_StartTimer 0001  
                               __end_of___ftge 5BB0                  __end_of_terminal_printNewline 6FFC  
                               __end_of___wmul 6D8E                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 07F8  
                          __end_of_getDeviceID 6F00                                 __end_of_fround 3794  
            __size_of_ADCC_GetConversionResult 0014                      ?_ADCC_GetConversionResult 0001  
                                   floor@expon 005C                               i2___wmul@product 0013  
                               __end_of_printf 179C                                  i2_printf$3896 006E  
                           _getMajorRevisionID 6B5C                                 __end_of_strcat 660E  
                               __end_of_strchr 6C0A                                 __end_of_strcmp 681A  
                                 i2printf@flag 0078                                 __end_of_strcpy 6990  
                               __end_of_strlen 6720                                   i2printf@fval 0080  
                               __end_of_strstr 5DEA                                   i2printf@prec 0087  
                          start_initialization 6084                              __size_ofi2___ftge 0090  
                                   eval_poly@d 004F                                     eval_poly@n 0051  
                                   eval_poly@x 004C                             i2___awdiv@quotient 000D  
                            __size_ofi2___wmul 0026           __end_of_TMR5_DefaultInterruptHandler 70C0  
        __size_of_TMR5_DefaultInterruptHandler 0002                   _TMR5_DefaultInterruptHandler 70BE  
              __size_of_PIN_MANAGER_Initialize 00A2                            __end_of__tdiv_to_l_ 4880  
                                  __end_of_sin 3ED4                                      i2printf@c 0089  
                                    i2printf@f 0066                                i2___fttol@sign1 0046  
                      _terminal_textAttributes 3198  EUSART2_SetRxInterruptHandler@interruptHandler 0117  
EUSART2_SetTxInterruptHandler@interruptHandler 0117                              __size_ofi2_fround 0276  
                                   ?i2___awdiv 0007                                     ?i2___ftadd 0040  
                                   ?i2___awmod 0001                                     ?i2___ftdiv 0015  
                                   ?i2___ftneg 0024                                     ?i2___lldiv 0001  
                                   ?i2___ftmul 0027                                     ?i2___llmod 000E  
                                   ?i2___ftsub 0060                                     ?i2___fttol 003D  
                __size_of_ADCC_StartConversion 000E                            ?_getMajorRevisionID 0001  
                                  putch@txData 0118                          ??_getRevisionIDString 0129  
                            __size_ofi2_printf 0AB4                          __end_of_EUSART2_Write 68B4  
                             ?_TMR7_WriteTimer 0100                                     frexp@value 0001  
           terminal_textAttributes@output_buff 0193                        __end_ofi2_EUSART2_Write 6948  
                              ___llmod@divisor 0128                                ___llmod@counter 012C  
                                   ?i2_isdigit 0001                                 _FVR_ADC_Result 00EE  
                             __CFG_LPBOREN$OFF 000000                               ??_PMD_Initialize 0117  
                                     ??___ftge 011D                                       ??___wmul 0129  
              __size_of_heartbeatTimerCallback 003E                           ??_getMajorRevisionID 0122  
                                  __pdataBANK0 00F1                                    __pdataBANK2 02A4  
                                     ??_fround 0158                                  _ringBufferLUT 0000  
               ??_terminal_textAttributesReset 01A2                                       ??_printf 016E  
                            _POS3P3_ADC_Result 00DD                                       ??_strcat 011B  
                   ??_acquisitionTimerCallback 0101                                       ??_strchr 011B  
                                     ??_strcmp 011B                                       ??_strcpy 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 0094  
                   __end_of_getMinorRevisionID 6E04                                       ??_strstr 012A  
                            __size_of___altoft 0078                                      _Vpk_const 00F4  
                                   fround@prec 015E                                 _eusart2RxCount 01D2  
                                ?i2__div_to_l_ 0001                              __size_of___awtoft 003A  
                            __size_of___ftpack 00B0                                      _acos$3887 0091  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                __pcstackBANK2 0282                                   _isdigit$3018 0118  
                ?_TMR5_DefaultInterruptHandler 0001                            EUSART2_Write@txData 0117  
                                 _load_on_time 01B3                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                       ?i2_putch 0001  
                                    _asin$3890 0085                                      _asin$3891 0082  
                                    _asin$3888 007F                                      _asin$3889 008B  
                                   sin@coeff_a ED07                                     sin@coeff_b ED25  
                               _TMR7_StopTimer 70AE                          _TMR6_InterruptHandler 01C4  
                  getMinorRevisionID@REVID_RAW 0122                               ___lwdiv@dividend 0117  
                       _PIN_MANAGER_Initialize 5A7C                        ??_getCauseOfResetString 0119  
                                    __pintcode 0008                                    _getDeviceID 6EE0  
                                __pmediumconst EC5E                                       ?___awdiv 011D  
                                    __ptext100 6486                                      __ptext101 6002  
                                    __ptext110 409A                                      __ptext102 6DB6  
                                    __ptext111 6D0C                                      __ptext103 70C0  
                                    __ptext120 6104                                      __ptext112 6550  
                                    __ptext104 2250                                      __ptext121 617C  
                                    __ptext113 3C76                                      __ptext105 70B4  
                                    __ptext122 5486                                      __ptext114 6AA0  
                                    __ptext106 3ED4                                      __ptext123 6E50  
                                    __ptext115 6E76                                      __ptext107 6720  
                                    __ptext124 5002                                      __ptext116 51DE  
                                    __ptext108 3A0A                                      __ptext125 440A  
                                    __ptext117 53A8                                      __ptext109 45B6  
                                     ?___ftadd 012B                                      __ptext126 6E9A  
                                    __ptext118 4F0E                                      __ptext127 5924  
                                    __ptext119 5C40                                      __ptext128 6FA4  
                                    __ptext129 0000                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 7036  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ ECAE  
                                     ?___fttol 0155                                       ?___lwdiv 0117  
                              _getCauseOfReset 52C4                                       ?___lwmod 0117  
                               ?_ringBufferLUT 01A2                                      _getUserID 6B20  
            _EUSART2_TxDefaultInterruptHandler 01CA                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 474C                                       _ADCC_ISR 6DB6  
                               ??i2__div_to_l_ 0007                  getDeviceIDString@returnString 0121  
                                 ??__div_to_l_ 011D                               _POS12_ADC_Result 00DA  
                                     _BAUD2CON 000EF7                                       ?_isdigit 0001  
                                  _dev_on_time 01B7                                      _eval_poly 5486  
                    ??_terminal_textAttributes 0192                                      _attribute 00EC  
                                    _peakToRMS 3ED4                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers ECD5  
                       _heartbeatTimerCallback 6AE2                                 _dimming_period 00FA  
                             ___lwdiv@quotient 011C                                    ??i2___awdiv 000B  
                                  ??i2___ftadd 0046                                    ??i2___awmod 0005  
                               __size_of_floor 00DE                                    ??i2___ftdiv 001B  
                               __size_of_frexp 0078                                    ??i2___ftneg 0027  
                                  ??i2___lldiv 0009                                    ??i2___ftmul 002D  
                               __size_of_scale 0480                                    ??i2___llmod 0016  
                                  ??i2___ftsub 005E                                    ??i2___fttol 0041  
                                     ?_strncmp 011D                                       ?_strncpy 0117  
                               __size_of_putch 000E                           _INTERRUPT_Initialize 6FCA  
                       __end_of_TMR7_StopTimer 70B4                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 708A         terminal_textAttributes@input_attribute 0191  
                 __size_of_EUSART2_Receive_ISR 00AE                                 ___wmul@product 0129  
                    currentMeasuredToPeak@Peak 0079                               ?i2_EUSART2_Write 0001  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0066                                       _IPR1bits 000E20  
              getRevisionIDString@returnString 012B                                       _IPR3bits 000E22  
                                     _PIE1bits 000E2A                       __end_ofi2_TMR7_StopTimer 70BA  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       i1u810_20 7092  
                                     _PIR1bits 000E34                             __end_of__div_to_l_ 4ADC  
                                     i1u923_20 6AEE                               ??_FLASH_ReadByte 011B  
                                     i1u924_28 6AF2                                       _PIR3bits 000E36  
                                     _PIR5bits 000E38                                       _PIR8bits 000E3B  
                             ??_FLASH_ReadWord 011F                     ??_TMR6_SetInterruptHandler 011A  
                     __size_of_TMR5_Initialize 004A                                       _TMR5_ISR 6C74  
                                     _TMR6_ISR 6D8E                                       _TMR7_ISR 6C40  
                              i2__div_to_l_@f1 0001                                i2__div_to_l_@f2 0004  
                                   ?_getUserID 0122                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0125  
                                     i2___ftge 5C40                                       i2___wmul 6E50  
                      __size_of_FVR_Initialize 0008                                     printf@flag 017E  
                                   printf@fval 018A                                     printf@prec 018D  
                                   ?_eval_poly 004C                 __end_of_terminal_setCursorHome 6FEC  
                            i2___awdiv@divisor 0009                                       i2_fround 3794  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 0094  
                            i2___awdiv@counter 000B                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 179C  
                          __end_ofatan@coeff_a ED07                            __end_ofatan@coeff_b ED25  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                                    copy_data0 6098                                      copy_data1 60B8  
                        ?_INTERRUPT_Initialize 0001                            _current_adc_channel 01D1  
                           i2___awmod@dividend 0001                                ?_TMR7_StopTimer 0001  
             __size_of_terminal_ringBufferPull 011C                               __size_ofi2_scale 0450  
               ??_TMR5_DefaultInterruptHandler 0001                               __size_ofi2_putch 000A  
                                    frexp@eptr 0004                        __end_of_getCauseOfReset 53A8  
              __end_of_terminal_textAttributes 3500                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 6FB8  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 706E  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 7060  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01A4                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 00EB                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___awdiv 0086                               __size_of___ftadd 01AE  
                             __size_of___awmod 0072                               __size_of___ftdiv 00E8  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0011  
                             __size_of___lldiv 0084                                       ___altoft 617C  
                             __size_of___ftmul 00F6                               __size_of___llmod 0068  
                             __size_of___ftsub 0042                               __size_of___fttol 00F8  
                             __size_of___lwdiv 0054                               __size_of___lwmod 0044  
                                  _load_enable 02F1                                       ___awtoft 6B98  
                                     ___ftpack 57C6               __end_of_acquisitionTimerCallback 57C6  
                                  _fround$3693 015B                                    _fround$3694 0158  
                                     ___lltoft 660E                          __end_ofi2__tdiv_to_l_ 49B2  
                                     ___lwtoft 6E9A                       _TMR7_SetInterruptHandler 7028  
                        _TMR7_InterruptHandler 01C1                             _ADC_Result_Scaling 00E0  
      terminal_textAttributes@foreground_color 0192                       __size_of_ADCC_Initialize 0064  
                                   strcat@from 0119                ??_INTERRUPT_InterruptManagerLow 0102  
               __end_of_terminal_clearTerminal 700C                               __size_of_isdigit 0022  
                              ___lwdiv@divisor 0119                                ___lwdiv@counter 011B  
                                     __ptext10 66C8                                       __ptext11 6BD2  
                                     __ptext20 6B5C                                       __ptext12 67CA  
                                     __ptext21 5DEA                                       __ptext13 6B20  
                                     __ptext30 6B98                                       __ptext22 6948  
                                     __ptext14 5CD0                                       __ptext31 70A8  
                                     __ptext23 6EE0                                       __ptext15 59D2  
                                     __ptext40 6D66                                       __ptext32 6990  
                                     __ptext24 6A1C                                       __ptext16 69D8  
                                     __ptext41 4E18                                       __ptext33 6FFC  
                                     __ptext25 6F72                                       __ptext17 6776  
                                     __ptext50 6A5E                                       __ptext42 626A  
                                     __ptext34 0CE2                                       __ptext26 6CA8  
                                     __ptext18 65B0                                       __ptext51 425C  
                                     __ptext43 5E74                                       __ptext35 28C8  
                                     __ptext27 52C4                                       __ptext19 6DDE  
                                     __ptext60 68B4                                       __ptext52 57C6  
                                     __ptext44 474C                                       __ptext36 701A  
                                     __ptext28 5560                                       __ptext61 7044  
                                     __ptext53 6E04                                       __ptext45 49B2  
                                     __ptext37 6868                                       __ptext29 50F6  
                                     __ptext70 64EC                                       __ptext62 6F1E  
                                     __ptext54 5B1E                                       __ptext46 660E  
                                     __ptext38 6EBE                                       __ptext71 706E  
                                     __ptext63 5A7C                                       __ptext55 6D3C  
                                     __ptext47 641E                                       __ptext39 3500  
                                     __ptext80 6D8E                                       __ptext64 6F3A  
                                     __ptext56 681A                                       __ptext48 5EFA  
                                     __ptext81 70BC                                       __ptext73 6C40  
                                     __ptext65 6FCA                                       __ptext57 7028  
                                     __ptext49 4D20                                       __ptext90 2D48  
                                     __ptext82 6AE2                                       __ptext74 70BA  
                                     __ptext66 70A0                                       __ptext58 6CDA  
                                     __ptext91 7096                                       __ptext83 6C0A  
                                     __ptext75 5704                                       __ptext67 634C  
                                     __ptext59 7036                                       __ptext92 68FE  
                                     __ptext76 70AE                                       __ptext68 7052  
                                     __ptext93 6F00                                       __ptext85 6C74  
                                     __ptext77 707C                                       __ptext69 7060  
                                     __ptext94 3794                                       __ptext86 6F56  
                                     __ptext78 708A                                       __ptext95 62DC  
                                     __ptext87 70BE                                       __ptext79 6E2A  
                                     __ptext96 5F7E                                       __ptext88 5876  
                                     __ptext97 4880                                       __ptext89 179C  
                                     __ptext98 4ADC                                       __ptext99 666C  
                                     _sin$3892 006C                                       __powers_ EC87  
                       ?_ADCC_IsConversionDone 0001                            ringBufferLUT@userID 02A2  
                              _Temp_ADC_Offset 00F7                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 006A  
                                   strcpy@from 0119                                 i2_isdigit$3018 0002  
                              _Temp_ADC_Result 00D7                                  __size_of_acos 0056  
                                __size_of_fabs 0030                                  __size_of_atan 01C2  
                                __size_of_asin 026C                                  __size_of_atoi 00D8  
                                __size_of_main 0076                                     _T5GCONbits 000FC4  
                                __size_of_sqrt 0196                                  __size_of_utoa 00AA  
           __size_of_ADCPostProcessingCallback 0678                           __end_ofi2__div_to_l_ 4C04  
                                   strncmp@len 0121                     ?_ADCPostProcessingCallback 0001  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    ringBufferLUT@channel_name 0282                      _ADCC_ADI_InterruptHandler 00E6  
                                   _RC2STAbits 000EF5                   __end_of_ADCC_StartConversion 708A  
                                     int$flags 005F                                       atoi@sign 012F  
                                  ??_getUserID 0124                                      printf@idx 0177  
                                    printf@len 0178                                      printf@exp 0180  
                                    printf@val 0186                                    atan@coeff_a ECF5  
                                  atan@coeff_b ED16                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 6FEC                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0053                    __end_of_getRevisionIDString 5D5E  
                     __size_of_TMR7_StartTimer 0006                                    _NVMCON1bits 000F77  
                                  ??_peakToRMS 005E                                     _FVRCONbits 000EC4  
                                     isdigit@c 0119                         ??_INTERRUPT_Initialize 0117  
                                     scale@scl 015B           __end_of_TMR6_DefaultInterruptHandler 70BE  
        __size_of_TMR6_DefaultInterruptHandler 0002                   _TMR6_DefaultInterruptHandler 70BC  
         __end_of_ADCC_DefaultInterruptHandler 70C2          __size_of_ADCC_DefaultInterruptHandler 0002  
                 _ADCC_DefaultInterruptHandler 70C0                                       intlevel1 0000  
                                     intlevel2 0000                               __tdiv_to_l_@exp1 0125  
                             __tdiv_to_l_@cntr 0124                             _getMinorRevisionID 6DDE  
                             __tdiv_to_l_@quot 0120                                      strchr@chr 0119  
                             ___lwmod@dividend 0117                                      strchr@ptr 0117  
                           ringBufferLUT@index 029E                               ___lldiv@dividend 0117  
                      ?_PIN_MANAGER_Initialize 0001                              ??_TMR6_Initialize 011A  
                            __CFG_CLKOUTEN$OFF 000000                                    _reset_cause 00E9  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                             ?_getCauseOfReset 0001                                _AVSS_ADC_Result 00E3  
            __end_of_ADCPostProcessingCallback 28C8                            ?_getMinorRevisionID 0001  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                   ?_getDeviceID 0122  
                                     printf@ap 017C                                       printf@cp 017A  
               __size_of_getCauseOfResetString 0032                  __end_of_getCauseOfResetString 6CDA  
                  __size_of_getMajorRevisionID 003C                       _ADCC_GetConversionResult 6FA4  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 004C                            _EUSART2_Receive_ISR 5876  
                                     utoa@base 0122         __end_of_INTERRUPT_InterruptManagerHigh 5704  
      __size_of_INTERRUPT_InterruptManagerHigh 56FC                 _INTERRUPT_InterruptManagerHigh 0008  
                  getMajorRevisionID@REVID_RAW 0125                              ??_TMR7_Initialize 011A  
                               _FVR_Initialize 70A0                                    _printf$3696 0174  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01A2  
                             ___lldiv@quotient 011F                                ___lwmod@divisor 0119  
                                     strcpy@cp 011B                                       strlen@cp 011B  
                                     strcpy@to 0117                           ??_getMinorRevisionID 0122  
                              ___lwmod@counter 011B                              _getDeviceIDString 5DEA  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6                             ?_getDeviceIDString 011D  
        __end_of_INTERRUPT_InterruptManagerLow 00FE         __size_of_INTERRUPT_InterruptManagerLow 00E6  
                _INTERRUPT_InterruptManagerLow 0018                 __end_of_PIN_MANAGER_Initialize 5B1E  
                            ??_ADCC_Initialize 011A                              i2__div_to_l_@exp1 000C  
                            i2__div_to_l_@cntr 000B                        _terminal_ringBufferPull 4C04  
                ?_TMR6_DefaultInterruptHandler 0001                ??_EUSART2_SetTxInterruptHandler 011A  
                            i2__div_to_l_@quot 0007                           ?_EUSART2_Receive_ISR 0001  
            __size_of_acquisitionTimerCallback 00C2                  ?_ADCC_DefaultInterruptHandler 0001  
                    ?_acquisitionTimerCallback 0001                                     _STATUSbits 000FD8  
                          ??_getDeviceIDString 011F                              ?i2_TMR7_StopTimer 0001  
            _EUSART2_RxDefaultInterruptHandler 01C7                 __size_of_currentMeasuredToPeak 0060  
                __end_of_currentMeasuredToPeak 65B0  
