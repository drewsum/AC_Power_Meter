

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Nov 01 18:19:24 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18LF67K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	text65,global,reloc=2,class=CODE,delta=1
    82                           	psect	text66,global,reloc=2,class=CODE,delta=1
    83                           	psect	text67,global,reloc=2,class=CODE,delta=1
    84                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    85                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    86                           	psect	text69,global,reloc=2,class=CODE,delta=1
    87                           	psect	text70,global,reloc=2,class=CODE,delta=1
    88                           	psect	text71,global,reloc=2,class=CODE,delta=1
    89                           	psect	text72,global,reloc=2,class=CODE,delta=1
    90                           	psect	text73,global,reloc=2,class=CODE,delta=1
    91                           	psect	text74,global,reloc=2,class=CODE,delta=1
    92                           	psect	text75,global,reloc=2,class=CODE,delta=1
    93                           	psect	text76,global,reloc=2,class=CODE,delta=1
    94                           	psect	text77,global,reloc=2,class=CODE,delta=1
    95                           	psect	text78,global,reloc=2,class=CODE,delta=1
    96                           	psect	text79,global,reloc=2,class=CODE,delta=1
    97                           	psect	text80,global,reloc=2,class=CODE,delta=1
    98                           	psect	text81,global,reloc=2,class=CODE,delta=1
    99                           	psect	text82,global,reloc=2,class=CODE,delta=1
   100                           	psect	text83,global,reloc=2,class=CODE,delta=1
   101                           	psect	text84,global,reloc=2,class=CODE,delta=1
   102                           	psect	text85,global,reloc=2,class=CODE,delta=1
   103                           	psect	text86,global,reloc=2,class=CODE,delta=1
   104                           	psect	text87,global,reloc=2,class=CODE,delta=1
   105                           	psect	text88,global,reloc=2,class=CODE,delta=1
   106                           	psect	text89,global,reloc=2,class=CODE,delta=1
   107                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=1
   108                           	psect	text91,global,reloc=2,class=CODE,delta=1,group=1
   109                           	psect	text92,global,reloc=2,class=CODE,delta=1,group=1
   110                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=1
   111                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=1
   112                           	psect	text95,global,reloc=2,class=CODE,delta=1
   113                           	psect	text96,global,reloc=2,class=CODE,delta=1,group=1
   114                           	psect	text97,global,reloc=2,class=CODE,delta=1
   115                           	psect	text98,global,reloc=2,class=CODE,delta=1
   116                           	psect	text99,global,reloc=2,class=CODE,delta=1
   117                           	psect	text100,global,reloc=2,class=CODE,delta=1,group=1
   118                           	psect	text101,global,reloc=2,class=CODE,delta=1
   119                           	psect	text102,global,reloc=2,class=CODE,delta=1
   120                           	psect	text103,global,reloc=2,class=CODE,delta=1,group=1
   121                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text106,global,reloc=2,class=CODE,delta=1
   124                           	psect	text107,global,reloc=2,class=CODE,delta=1
   125                           	psect	text108,global,reloc=2,class=CODE,delta=1
   126                           	psect	text109,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text110,global,reloc=2,class=CODE,delta=1
   128                           	psect	text111,global,reloc=2,class=CODE,delta=1
   129                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   130                           	psect	text112,global,reloc=2,class=CODE,delta=1
   131                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   132                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   133  0000                     
   134                           ; Version 1.45 (B)
   135                           ; Generated 30/01/2018 GMT
   136                           ; 
   137                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   138                           ; All rights reserved.
   139                           ; 
   140                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   141                           ; 
   142                           ; Redistribution and use in source and binary forms, with or without modification, are
   143                           ; permitted provided that the following conditions are met:
   144                           ; 
   145                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   146                           ;        conditions and the following disclaimer.
   147                           ; 
   148                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   149                           ;        of conditions and the following disclaimer in the documentation and/or other
   150                           ;        materials provided with the distribution.
   151                           ; 
   152                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   153                           ;        software without specific prior written permission.
   154                           ; 
   155                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   156                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   157                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   158                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   159                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   160                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   161                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   162                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   163                           ; 
   164                           ; 
   165                           ; Code-generator required, PIC18LF67K40 Definitions
   166                           ; 
   167                           ; SFR Addresses
   168  0000                     
   169                           	psect	idataBANK0
   170  016264                     __pidataBANK0:
   171                           	opt stack 0
   172                           
   173                           ;initializer for _Vpk
   174                           ;main.c: 58: volatile bit eusart2RxStringReady = 0;
   175                           ;main.c: 61: unsigned long on_time = 0;
   176                           ;main.c: 64: double FVR_ADC_Result;
   177                           ;main.c: 65: double ADC_Result_Scaling;
   178                           ;main.c: 66: double POS3P3_ADC_Result;
   179                           ;main.c: 67: double POS12_ADC_Result;
   180                           ;main.c: 68: double Temp_ADC_Result;
   181                           ;main.c: 69: double Temp_ADC_Offset = -267.409;
   182  016264  B5                 	db	181
   183  016265  29                 	db	41
   184  016266  43                 	db	67
   185                           
   186                           ;initializer for _Temp_ADC_Offset
   187  016267  B4                 	db	180
   188  016268  85                 	db	133
   189  016269  C3                 	db	195
   190                           
   191                           	psect	mediumconst
   192  00F3E8                     __pmediumconst:
   193                           	opt stack 0
   194  00F3E8  00                 	db	0
   195  00F3E9                     _dpowers:
   196                           	opt stack 0
   197  00F3E9  0001               	dw	1
   198  00F3EB  0000               	dw	0
   199  00F3ED  000A               	dw	10
   200  00F3EF  0000               	dw	0
   201  00F3F1  0064               	dw	100
   202  00F3F3  0000               	dw	0
   203  00F3F5  03E8               	dw	1000
   204  00F3F7  0000               	dw	0
   205  00F3F9  2710               	dw	10000
   206  00F3FB  0000               	dw	0
   207  00F3FD  86A0               	dw	34464
   208  00F3FF  0001               	dw	1
   209  00F401  4240               	dw	16960
   210  00F403  000F               	dw	15
   211  00F405  9680               	dw	38528
   212  00F407  0098               	dw	152
   213  00F409  E100               	dw	57600
   214  00F40B  05F5               	dw	1525
   215  00F40D  CA00               	dw	51712
   216  00F40F  3B9A               	dw	15258
   217  00F411                     __end_of_dpowers:
   218                           	opt stack 0
   219  00F411                     __powers_:
   220                           	opt stack 0
   221  00F411  00                 	db	0
   222  00F412  80                 	db	128
   223  00F413  3F                 	db	63
   224  00F414  00                 	db	0
   225  00F415  20                 	db	32
   226  00F416  41                 	db	65
   227  00F417  00                 	db	0
   228  00F418  C8                 	db	200
   229  00F419  42                 	db	66
   230  00F41A  00                 	db	0
   231  00F41B  7A                 	db	122
   232  00F41C  44                 	db	68
   233  00F41D  40                 	db	64
   234  00F41E  1C                 	db	28
   235  00F41F  46                 	db	70
   236  00F420  50                 	db	80
   237  00F421  C3                 	db	195
   238  00F422  47                 	db	71
   239  00F423  24                 	db	36
   240  00F424  74                 	db	116
   241  00F425  49                 	db	73
   242  00F426  97                 	db	151
   243  00F427  18                 	db	24
   244  00F428  4B                 	db	75
   245  00F429  BC                 	db	188
   246  00F42A  BE                 	db	190
   247  00F42B  4C                 	db	76
   248  00F42C  6B                 	db	107
   249  00F42D  6E                 	db	110
   250  00F42E  4E                 	db	78
   251  00F42F  03                 	db	3
   252  00F430  15                 	db	21
   253  00F431  50                 	db	80
   254  00F432  79                 	db	121
   255  00F433  AD                 	db	173
   256  00F434  60                 	db	96
   257  00F435  F3                 	db	243
   258  00F436  49                 	db	73
   259  00F437  71                 	db	113
   260  00F438                     __end_of__powers_:
   261                           	opt stack 0
   262  00F438                     __npowers_:
   263                           	opt stack 0
   264  00F438  00                 	db	0
   265  00F439  80                 	db	128
   266  00F43A  3F                 	db	63
   267  00F43B  CD                 	db	205
   268  00F43C  CC                 	db	204
   269  00F43D  3D                 	db	61
   270  00F43E  D7                 	db	215
   271  00F43F  23                 	db	35
   272  00F440  3C                 	db	60
   273  00F441  12                 	db	18
   274  00F442  83                 	db	131
   275  00F443  3A                 	db	58
   276  00F444  B7                 	db	183
   277  00F445  D1                 	db	209
   278  00F446  38                 	db	56
   279  00F447  C6                 	db	198
   280  00F448  27                 	db	39
   281  00F449  37                 	db	55
   282  00F44A  38                 	db	56
   283  00F44B  86                 	db	134
   284  00F44C  35                 	db	53
   285  00F44D  C0                 	db	192
   286  00F44E  D6                 	db	214
   287  00F44F  33                 	db	51
   288  00F450  CC                 	db	204
   289  00F451  2B                 	db	43
   290  00F452  32                 	db	50
   291  00F453  70                 	db	112
   292  00F454  89                 	db	137
   293  00F455  30                 	db	48
   294  00F456  E7                 	db	231
   295  00F457  DB                 	db	219
   296  00F458  2E                 	db	46
   297  00F459  E5                 	db	229
   298  00F45A  3C                 	db	60
   299  00F45B  1E                 	db	30
   300  00F45C  42                 	db	66
   301  00F45D  A2                 	db	162
   302  00F45E  0D                 	db	13
   303  00F45F                     __end_of__npowers_:
   304                           	opt stack 0
   305  00F45F                     _hexpowers:
   306                           	opt stack 0
   307  00F45F  0001               	dw	1
   308  00F461  0000               	dw	0
   309  00F463  0010               	dw	16
   310  00F465  0000               	dw	0
   311  00F467  0100               	dw	256
   312  00F469  0000               	dw	0
   313  00F46B  1000               	dw	4096
   314  00F46D  0000               	dw	0
   315  00F46F  0000               	dw	0
   316  00F471  0001               	dw	1
   317  00F473  0000               	dw	0
   318  00F475  0010               	dw	16
   319  00F477  0000               	dw	0
   320  00F479  0100               	dw	256
   321  00F47B  0000               	dw	0
   322  00F47D  1000               	dw	4096
   323  00F47F                     __end_of_hexpowers:
   324                           	opt stack 0
   325  00F47F                     atan@coeff_a:
   326                           	opt stack 0
   327  00F47F  3C                 	db	60
   328  00F480  04                 	db	4
   329  00F481  42                 	db	66
   330  00F482  9F                 	db	159
   331  00F483  6A                 	db	106
   332  00F484  42                 	db	66
   333  00F485  90                 	db	144
   334  00F486  01                 	db	1
   335  00F487  42                 	db	66
   336  00F488  4D                 	db	77
   337  00F489  BB                 	db	187
   338  00F48A  40                 	db	64
   339  00F48B  EC                 	db	236
   340  00F48C  47                 	db	71
   341  00F48D  3E                 	db	62
   342  00F48E  8E                 	db	142
   343  00F48F  1F                 	db	31
   344  00F490  BB                 	db	187
   345  00F491                     __end_ofatan@coeff_a:
   346                           	opt stack 0
   347  00F491                     sin@coeff_a:
   348                           	opt stack 0
   349  00F491  F4                 	db	244
   350  00F492  4A                 	db	74
   351  00F493  48                 	db	72
   352  00F494  95                 	db	149
   353  00F495  95                 	db	149
   354  00F496  C7                 	db	199
   355  00F497  C1                 	db	193
   356  00F498  DC                 	db	220
   357  00F499  45                 	db	69
   358  00F49A  DC                 	db	220
   359  00F49B  6D                 	db	109
   360  00F49C  C3                 	db	195
   361  00F49D  B3                 	db	179
   362  00F49E  33                 	db	51
   363  00F49F  40                 	db	64
   364  00F4A0                     __end_ofsin@coeff_a:
   365                           	opt stack 0
   366  00F4A0                     atan@coeff_b:
   367                           	opt stack 0
   368  00F4A0  3C                 	db	60
   369  00F4A1  04                 	db	4
   370  00F4A2  42                 	db	66
   371  00F4A3  5A                 	db	90
   372  00F4A4  8B                 	db	139
   373  00F4A5  42                 	db	66
   374  00F4A6  04                 	db	4
   375  00F4A7  44                 	db	68
   376  00F4A8  42                 	db	66
   377  00F4A9  9C                 	db	156
   378  00F4AA  4F                 	db	79
   379  00F4AB  41                 	db	65
   380  00F4AC  00                 	db	0
   381  00F4AD  80                 	db	128
   382  00F4AE  3F                 	db	63
   383  00F4AF                     __end_ofatan@coeff_b:
   384                           	opt stack 0
   385  00F4AF                     sin@coeff_b:
   386                           	opt stack 0
   387  00F4AF  34                 	db	52
   388  00F4B0  01                 	db	1
   389  00F4B1  48                 	db	72
   390  00F4B2  9D                 	db	157
   391  00F4B3  B0                 	db	176
   392  00F4B4  45                 	db	69
   393  00F4B5  00                 	db	0
   394  00F4B6  DA                 	db	218
   395  00F4B7  42                 	db	66
   396  00F4B8  00                 	db	0
   397  00F4B9  80                 	db	128
   398  00F4BA  3F                 	db	63
   399  00F4BB                     __end_ofsin@coeff_b:
   400                           	opt stack 0
   401  0000                     _FVRCONbits	set	3780
   402  0000                     _FVRCON	set	3780
   403  0000                     _RC2REG	set	3825
   404  0000                     _RC2STAbits	set	3829
   405  0000                     _TX2REG	set	3826
   406  0000                     _TX2STAbits	set	3830
   407  0000                     _SP2BRGH	set	3828
   408  0000                     _SP2BRGL	set	3827
   409  0000                     _TX2STA	set	3830
   410  0000                     _RC2STA	set	3829
   411  0000                     _BAUD2CON	set	3831
   412  0000                     _PIR1bits	set	3636
   413  0000                     _PIE1bits	set	3626
   414  0000                     _PIR5bits	set	3640
   415  0000                     _PIE5bits	set	3630
   416  0000                     _PIR3bits	set	3638
   417  0000                     _PIE3bits	set	3628
   418  0000                     _IPR1bits	set	3616
   419  0000                     _IPR5bits	set	3620
   420  0000                     _IPR3bits	set	3618
   421  0000                     _RX2PPS	set	3601
   422  0000                     _RG7PPS	set	3721
   423  0000                     _SLRCONH	set	3774
   424  0000                     _SLRCONG	set	3769
   425  0000                     _SLRCONF	set	3761
   426  0000                     _SLRCONE	set	3756
   427  0000                     _SLRCOND	set	3748
   428  0000                     _SLRCONC	set	3743
   429  0000                     _SLRCONB	set	3735
   430  0000                     _SLRCONA	set	3727
   431  0000                     _ODCOND	set	3749
   432  0000                     _ODCONC	set	3744
   433  0000                     _ODCONH	set	3775
   434  0000                     _ODCONB	set	3736
   435  0000                     _ODCONG	set	3770
   436  0000                     _ODCONA	set	3728
   437  0000                     _ODCONF	set	3762
   438  0000                     _ODCONE	set	3757
   439  0000                     _WPUH	set	3776
   440  0000                     _WPUC	set	3745
   441  0000                     _WPUA	set	3729
   442  0000                     _WPUG	set	3771
   443  0000                     _WPUB	set	3737
   444  0000                     _WPUE	set	3758
   445  0000                     _WPUF	set	3763
   446  0000                     _WPUD	set	3750
   447  0000                     _ANSELA	set	3730
   448  0000                     _ANSELF	set	3764
   449  0000                     _ANSELG	set	3772
   450  0000                     _ANSELE	set	3759
   451  0000                     _ANSELB	set	3738
   452  0000                     _ANSELD	set	3751
   453  0000                     _PMD5	set	3665
   454  0000                     _PMD4	set	3664
   455  0000                     _PMD3	set	3663
   456  0000                     _PMD2	set	3662
   457  0000                     _PMD1	set	3661
   458  0000                     _PMD0	set	3660
   459  0000                     _OSCTUNE	set	3656
   460  0000                     _OSCFRQ	set	3657
   461  0000                     _OSCEN	set	3655
   462  0000                     _OSCCON3	set	3653
   463  0000                     _OSCCON1	set	3651
   464  0000                     _PLLR	set	29232
   465  0000                     _T7GCONbits	set	3889
   466  0000                     _T7CONbits	set	3888
   467  0000                     _T7CON	set	3888
   468  0000                     _TMR7L	set	3886
   469  0000                     _TMR7H	set	3887
   470  0000                     _T7CLK	set	3891
   471  0000                     _T7GATE	set	3890
   472  0000                     _T7GCON	set	3889
   473  0000                     _ADCON1bits	set	3929
   474  0000                     _ADCON2bits	set	3930
   475  0000                     _ADPRE	set	3934
   476  0000                     _ADCON3bits	set	3931
   477  0000                     _ADACQ	set	3932
   478  0000                     _ADCLK	set	3927
   479  0000                     _ADACT	set	3926
   480  0000                     _ADREF	set	3928
   481  0000                     _ADCON3	set	3931
   482  0000                     _ADCON2	set	3930
   483  0000                     _ADCON1	set	3929
   484  0000                     _ADCAP	set	3933
   485  0000                     _ADPCH	set	3935
   486  0000                     _T5GCONbits	set	4036
   487  0000                     _T5CONbits	set	4035
   488  0000                     _T5CON	set	4035
   489  0000                     _TMR5L	set	4033
   490  0000                     _TMR5H	set	4034
   491  0000                     _T5CLK	set	4038
   492  0000                     _T5GATE	set	4037
   493  0000                     _T5GCON	set	4036
   494  0000                     _LATGbits	set	3967
   495  0000                     _LATFbits	set	3966
   496  0000                     _ADERRL	set	3950
   497  0000                     _ADERRH	set	3951
   498  0000                     _ADPREVL	set	3937
   499  0000                     _ADPREVH	set	3938
   500  0000                     _ADFLTRL	set	3954
   501  0000                     _ADFLTRH	set	3955
   502  0000                     _ADSTATbits	set	3941
   503  0000                     _ADACCL	set	3952
   504  0000                     _ADACCH	set	3953
   505  0000                     _ADCNT	set	3943
   506  0000                     _ADRESL	set	3939
   507  0000                     _ADRESH	set	3940
   508  0000                     _ADCON0bits	set	3936
   509  0000                     _ADCON0	set	3936
   510  0000                     _ADSTAT	set	3941
   511  0000                     _ADRPT	set	3942
   512  0000                     _ADSTPTH	set	3945
   513  0000                     _ADSTPTL	set	3944
   514  0000                     _ADUTHH	set	3949
   515  0000                     _ADUTHL	set	3948
   516  0000                     _ADLTHH	set	3947
   517  0000                     _ADLTHL	set	3946
   518  0000                     _PR6	set	4016
   519  0000                     _TMR6	set	4015
   520  0000                     _T6CONbits	set	4017
   521  0000                     _T6RSTbits	set	4020
   522  0000                     _T6HLTbits	set	4018
   523  0000                     _T6CON	set	4017
   524  0000                     _T6TMR	set	4015
   525  0000                     _T6PR	set	4016
   526  0000                     _T6RST	set	4020
   527  0000                     _T6HLT	set	4018
   528  0000                     _T6CLKCON	set	4019
   529  0000                     _INTCONbits	set	4082
   530  0000                     _TRISD	set	3972
   531  0000                     _TRISC	set	3971
   532  0000                     _TRISH	set	3976
   533  0000                     _TRISB	set	3970
   534  0000                     _TRISG	set	3975
   535  0000                     _TRISA	set	3969
   536  0000                     _TRISF	set	3974
   537  0000                     _TRISE	set	3973
   538  0000                     _LATH	set	3968
   539  0000                     _LATC	set	3963
   540  0000                     _LATG	set	3967
   541  0000                     _LATB	set	3962
   542  0000                     _LATF	set	3966
   543  0000                     _LATA	set	3961
   544  0000                     _LATD	set	3964
   545  0000                     _LATE	set	3965
   546  00F4BB                     STR_82:
   547  00F4BB  4C                 	db	76	;'L'
   548  00F4BC  69                 	db	105	;'i'
   549  00F4BD  73                 	db	115	;'s'
   550  00F4BE  74                 	db	116	;'t'
   551  00F4BF  20                 	db	32
   552  00F4C0  6F                 	db	111	;'o'
   553  00F4C1  66                 	db	102	;'f'
   554  00F4C2  20                 	db	32
   555  00F4C3  73                 	db	115	;'s'
   556  00F4C4  75                 	db	117	;'u'
   557  00F4C5  70                 	db	112	;'p'
   558  00F4C6  70                 	db	112	;'p'
   559  00F4C7  6F                 	db	111	;'o'
   560  00F4C8  72                 	db	114	;'r'
   561  00F4C9  74                 	db	116	;'t'
   562  00F4CA  65                 	db	101	;'e'
   563  00F4CB  64                 	db	100	;'d'
   564  00F4CC  20                 	db	32
   565  00F4CD  63                 	db	99	;'c'
   566  00F4CE  6F                 	db	111	;'o'
   567  00F4CF  6D                 	db	109	;'m'
   568  00F4D0  6D                 	db	109	;'m'
   569  00F4D1  61                 	db	97	;'a'
   570  00F4D2  6E                 	db	110	;'n'
   571  00F4D3  64                 	db	100	;'d'
   572  00F4D4  73                 	db	115	;'s'
   573  00F4D5  3A                 	db	58	;':'
   574  00F4D6  0A                 	db	10
   575  00F4D7  0D                 	db	13
   576  00F4D8  20                 	db	32
   577  00F4D9  20                 	db	32
   578  00F4DA  20                 	db	32
   579  00F4DB  52                 	db	82	;'R'
   580  00F4DC  65                 	db	101	;'e'
   581  00F4DD  73                 	db	115	;'s'
   582  00F4DE  65                 	db	101	;'e'
   583  00F4DF  74                 	db	116	;'t'
   584  00F4E0  3A                 	db	58	;':'
   585  00F4E1  20                 	db	32
   586  00F4E2  43                 	db	67	;'C'
   587  00F4E3  6C                 	db	108	;'l'
   588  00F4E4  65                 	db	101	;'e'
   589  00F4E5  61                 	db	97	;'a'
   590  00F4E6  72                 	db	114	;'r'
   591  00F4E7  73                 	db	115	;'s'
   592  00F4E8  20                 	db	32
   593  00F4E9  74                 	db	116	;'t'
   594  00F4EA  68                 	db	104	;'h'
   595  00F4EB  65                 	db	101	;'e'
   596  00F4EC  20                 	db	32
   597  00F4ED  74                 	db	116	;'t'
   598  00F4EE  65                 	db	101	;'e'
   599  00F4EF  72                 	db	114	;'r'
   600  00F4F0  6D                 	db	109	;'m'
   601  00F4F1  69                 	db	105	;'i'
   602  00F4F2  6E                 	db	110	;'n'
   603  00F4F3  61                 	db	97	;'a'
   604  00F4F4  6C                 	db	108	;'l'
   605  00F4F5  20                 	db	32
   606  00F4F6  61                 	db	97	;'a'
   607  00F4F7  6E                 	db	110	;'n'
   608  00F4F8  64                 	db	100	;'d'
   609  00F4F9  20                 	db	32
   610  00F4FA  72                 	db	114	;'r'
   611  00F4FB  65                 	db	101	;'e'
   612  00F4FC  73                 	db	115	;'s'
   613  00F4FD  65                 	db	101	;'e'
   614  00F4FE  74                 	db	116	;'t'
   615  00F4FF  73                 	db	115	;'s'
   616  00F500  20                 	db	32
   617  00F501  74                 	db	116	;'t'
   618  00F502  68                 	db	104	;'h'
   619  00F503  65                 	db	101	;'e'
   620  00F504  20                 	db	32
   621  00F505  6D                 	db	109	;'m'
   622  00F506  69                 	db	105	;'i'
   623  00F507  63                 	db	99	;'c'
   624  00F508  72                 	db	114	;'r'
   625  00F509  6F                 	db	111	;'o'
   626  00F50A  0A                 	db	10
   627  00F50B  0D                 	db	13
   628  00F50C  20                 	db	32
   629  00F50D  20                 	db	32
   630  00F50E  20                 	db	32
   631  00F50F  43                 	db	67	;'C'
   632  00F510  6C                 	db	108	;'l'
   633  00F511  65                 	db	101	;'e'
   634  00F512  61                 	db	97	;'a'
   635  00F513  72                 	db	114	;'r'
   636  00F514  3A                 	db	58	;':'
   637  00F515  20                 	db	32
   638  00F516  43                 	db	67	;'C'
   639  00F517  6C                 	db	108	;'l'
   640  00F518  65                 	db	101	;'e'
   641  00F519  61                 	db	97	;'a'
   642  00F51A  72                 	db	114	;'r'
   643  00F51B  73                 	db	115	;'s'
   644  00F51C  20                 	db	32
   645  00F51D  74                 	db	116	;'t'
   646  00F51E  68                 	db	104	;'h'
   647  00F51F  65                 	db	101	;'e'
   648  00F520  20                 	db	32
   649  00F521  74                 	db	116	;'t'
   650  00F522  65                 	db	101	;'e'
   651  00F523  72                 	db	114	;'r'
   652  00F524  6D                 	db	109	;'m'
   653  00F525  69                 	db	105	;'i'
   654  00F526  6E                 	db	110	;'n'
   655  00F527  61                 	db	97	;'a'
   656  00F528  6C                 	db	108	;'l'
   657  00F529  20                 	db	32
   658  00F52A  62                 	db	98	;'b'
   659  00F52B  75                 	db	117	;'u'
   660  00F52C  74                 	db	116	;'t'
   661  00F52D  20                 	db	32
   662  00F52E  64                 	db	100	;'d'
   663  00F52F  6F                 	db	111	;'o'
   664  00F530  65                 	db	101	;'e'
   665  00F531  73                 	db	115	;'s'
   666  00F532  6E                 	db	110	;'n'
   667  00F533  27                 	db	39
   668  00F534  74                 	db	116	;'t'
   669  00F535  20                 	db	32
   670  00F536  72                 	db	114	;'r'
   671  00F537  65                 	db	101	;'e'
   672  00F538  73                 	db	115	;'s'
   673  00F539  65                 	db	101	;'e'
   674  00F53A  74                 	db	116	;'t'
   675  00F53B  20                 	db	32
   676  00F53C  74                 	db	116	;'t'
   677  00F53D  68                 	db	104	;'h'
   678  00F53E  65                 	db	101	;'e'
   679  00F53F  20                 	db	32
   680  00F540  6D                 	db	109	;'m'
   681  00F541  69                 	db	105	;'i'
   682  00F542  63                 	db	99	;'c'
   683  00F543  72                 	db	114	;'r'
   684  00F544  6F                 	db	111	;'o'
   685  00F545  0A                 	db	10
   686  00F546  0D                 	db	13
   687  00F547  20                 	db	32
   688  00F548  20                 	db	32
   689  00F549  20                 	db	32
   690  00F54A  2A                 	db	42
   691  00F54B  49                 	db	73	;'I'
   692  00F54C  44                 	db	68	;'D'
   693  00F54D  4E                 	db	78	;'N'
   694  00F54E  3F                 	db	63	;'?'
   695  00F54F  3A                 	db	58	;':'
   696  00F550  20                 	db	32
   697  00F551  52                 	db	82	;'R'
   698  00F552  65                 	db	101	;'e'
   699  00F553  74                 	db	116	;'t'
   700  00F554  75                 	db	117	;'u'
   701  00F555  72                 	db	114	;'r'
   702  00F556  6E                 	db	110	;'n'
   703  00F557  73                 	db	115	;'s'
   704  00F558  20                 	db	32
   705  00F559  64                 	db	100	;'d'
   706  00F55A  65                 	db	101	;'e'
   707  00F55B  76                 	db	118	;'v'
   708  00F55C  69                 	db	105	;'i'
   709  00F55D  63                 	db	99	;'c'
   710  00F55E  65                 	db	101	;'e'
   711  00F55F  20                 	db	32
   712  00F560  69                 	db	105	;'i'
   713  00F561  64                 	db	100	;'d'
   714  00F562  65                 	db	101	;'e'
   715  00F563  6E                 	db	110	;'n'
   716  00F564  74                 	db	116	;'t'
   717  00F565  69                 	db	105	;'i'
   718  00F566  66                 	db	102	;'f'
   719  00F567  69                 	db	105	;'i'
   720  00F568  63                 	db	99	;'c'
   721  00F569  61                 	db	97	;'a'
   722  00F56A  74                 	db	116	;'t'
   723  00F56B  69                 	db	105	;'i'
   724  00F56C  6F                 	db	111	;'o'
   725  00F56D  6E                 	db	110	;'n'
   726  00F56E  0A                 	db	10
   727  00F56F  0D                 	db	13
   728  00F570  20                 	db	32
   729  00F571  20                 	db	32
   730  00F572  20                 	db	32
   731  00F573  4D                 	db	77	;'M'
   732  00F574  65                 	db	101	;'e'
   733  00F575  61                 	db	97	;'a'
   734  00F576  73                 	db	115	;'s'
   735  00F577  75                 	db	117	;'u'
   736  00F578  72                 	db	114	;'r'
   737  00F579  65                 	db	101	;'e'
   738  00F57A  20                 	db	32
   739  00F57B  50                 	db	80	;'P'
   740  00F57C  4F                 	db	79	;'O'
   741  00F57D  53                 	db	83	;'S'
   742  00F57E  33                 	db	51	;'3'
   743  00F57F  50                 	db	80	;'P'
   744  00F580  33                 	db	51	;'3'
   745  00F581  3F                 	db	63	;'?'
   746  00F582  3A                 	db	58	;':'
   747  00F583  20                 	db	32
   748  00F584  52                 	db	82	;'R'
   749  00F585  65                 	db	101	;'e'
   750  00F586  74                 	db	116	;'t'
   751  00F587  75                 	db	117	;'u'
   752  00F588  72                 	db	114	;'r'
   753  00F589  6E                 	db	110	;'n'
   754  00F58A  73                 	db	115	;'s'
   755  00F58B  20                 	db	32
   756  00F58C  2B                 	db	43
   757  00F58D  33                 	db	51	;'3'
   758  00F58E  2E                 	db	46
   759  00F58F  33                 	db	51	;'3'
   760  00F590  56                 	db	86	;'V'
   761  00F591  20                 	db	32
   762  00F592  41                 	db	65	;'A'
   763  00F593  44                 	db	68	;'D'
   764  00F594  43                 	db	67	;'C'
   765  00F595  20                 	db	32
   766  00F596  43                 	db	67	;'C'
   767  00F597  6F                 	db	111	;'o'
   768  00F598  6E                 	db	110	;'n'
   769  00F599  76                 	db	118	;'v'
   770  00F59A  65                 	db	101	;'e'
   771  00F59B  72                 	db	114	;'r'
   772  00F59C  73                 	db	115	;'s'
   773  00F59D  69                 	db	105	;'i'
   774  00F59E  6F                 	db	111	;'o'
   775  00F59F  6E                 	db	110	;'n'
   776  00F5A0  20                 	db	32
   777  00F5A1  69                 	db	105	;'i'
   778  00F5A2  6E                 	db	110	;'n'
   779  00F5A3  20                 	db	32
   780  00F5A4  76                 	db	118	;'v'
   781  00F5A5  6F                 	db	111	;'o'
   782  00F5A6  6C                 	db	108	;'l'
   783  00F5A7  74                 	db	116	;'t'
   784  00F5A8  73                 	db	115	;'s'
   785  00F5A9  0A                 	db	10
   786  00F5AA  0D                 	db	13
   787  00F5AB  20                 	db	32
   788  00F5AC  20                 	db	32
   789  00F5AD  20                 	db	32
   790  00F5AE  4D                 	db	77	;'M'
   791  00F5AF  65                 	db	101	;'e'
   792  00F5B0  61                 	db	97	;'a'
   793  00F5B1  73                 	db	115	;'s'
   794  00F5B2  75                 	db	117	;'u'
   795  00F5B3  72                 	db	114	;'r'
   796  00F5B4  65                 	db	101	;'e'
   797  00F5B5  20                 	db	32
   798  00F5B6  50                 	db	80	;'P'
   799  00F5B7  4F                 	db	79	;'O'
   800  00F5B8  53                 	db	83	;'S'
   801  00F5B9  31                 	db	49	;'1'
   802  00F5BA  32                 	db	50	;'2'
   803  00F5BB  3F                 	db	63	;'?'
   804  00F5BC  3A                 	db	58	;':'
   805  00F5BD  20                 	db	32
   806  00F5BE  52                 	db	82	;'R'
   807  00F5BF  65                 	db	101	;'e'
   808  00F5C0  74                 	db	116	;'t'
   809  00F5C1  75                 	db	117	;'u'
   810  00F5C2  72                 	db	114	;'r'
   811  00F5C3  6E                 	db	110	;'n'
   812  00F5C4  73                 	db	115	;'s'
   813  00F5C5  20                 	db	32
   814  00F5C6  2B                 	db	43
   815  00F5C7  31                 	db	49	;'1'
   816  00F5C8  32                 	db	50	;'2'
   817  00F5C9  56                 	db	86	;'V'
   818  00F5CA  20                 	db	32
   819  00F5CB  41                 	db	65	;'A'
   820  00F5CC  44                 	db	68	;'D'
   821  00F5CD  43                 	db	67	;'C'
   822  00F5CE  20                 	db	32
   823  00F5CF  43                 	db	67	;'C'
   824  00F5D0  6F                 	db	111	;'o'
   825  00F5D1  6E                 	db	110	;'n'
   826  00F5D2  76                 	db	118	;'v'
   827  00F5D3  65                 	db	101	;'e'
   828  00F5D4  72                 	db	114	;'r'
   829  00F5D5  73                 	db	115	;'s'
   830  00F5D6  69                 	db	105	;'i'
   831  00F5D7  6F                 	db	111	;'o'
   832  00F5D8  6E                 	db	110	;'n'
   833  00F5D9  20                 	db	32
   834  00F5DA  69                 	db	105	;'i'
   835  00F5DB  6E                 	db	110	;'n'
   836  00F5DC  20                 	db	32
   837  00F5DD  76                 	db	118	;'v'
   838  00F5DE  6F                 	db	111	;'o'
   839  00F5DF  6C                 	db	108	;'l'
   840  00F5E0  74                 	db	116	;'t'
   841  00F5E1  73                 	db	115	;'s'
   842  00F5E2  0A                 	db	10
   843  00F5E3  0D                 	db	13
   844  00F5E4  20                 	db	32
   845  00F5E5  20                 	db	32
   846  00F5E6  20                 	db	32
   847  00F5E7  4D                 	db	77	;'M'
   848  00F5E8  65                 	db	101	;'e'
   849  00F5E9  61                 	db	97	;'a'
   850  00F5EA  73                 	db	115	;'s'
   851  00F5EB  75                 	db	117	;'u'
   852  00F5EC  72                 	db	114	;'r'
   853  00F5ED  65                 	db	101	;'e'
   854  00F5EE  20                 	db	32
   855  00F5EF  44                 	db	68	;'D'
   856  00F5F0  69                 	db	105	;'i'
   857  00F5F1  65                 	db	101	;'e'
   858  00F5F2  20                 	db	32
   859  00F5F3  54                 	db	84	;'T'
   860  00F5F4  65                 	db	101	;'e'
   861  00F5F5  6D                 	db	109	;'m'
   862  00F5F6  70                 	db	112	;'p'
   863  00F5F7  3F                 	db	63	;'?'
   864  00F5F8  3A                 	db	58	;':'
   865  00F5F9  20                 	db	32
   866  00F5FA  52                 	db	82	;'R'
   867  00F5FB  65                 	db	101	;'e'
   868  00F5FC  74                 	db	116	;'t'
   869  00F5FD  75                 	db	117	;'u'
   870  00F5FE  72                 	db	114	;'r'
   871  00F5FF  6E                 	db	110	;'n'
   872  00F600  73                 	db	115	;'s'
   873  00F601  20                 	db	32
   874  00F602  74                 	db	116	;'t'
   875  00F603  68                 	db	104	;'h'
   876  00F604  65                 	db	101	;'e'
   877  00F605  20                 	db	32
   878  00F606  6D                 	db	109	;'m'
   879  00F607  69                 	db	105	;'i'
   880  00F608  63                 	db	99	;'c'
   881  00F609  72                 	db	114	;'r'
   882  00F60A  6F                 	db	111	;'o'
   883  00F60B  63                 	db	99	;'c'
   884  00F60C  6F                 	db	111	;'o'
   885  00F60D  6E                 	db	110	;'n'
   886  00F60E  74                 	db	116	;'t'
   887  00F60F  72                 	db	114	;'r'
   888  00F610  6F                 	db	111	;'o'
   889  00F611  6C                 	db	108	;'l'
   890  00F612  6C                 	db	108	;'l'
   891  00F613  65                 	db	101	;'e'
   892  00F614  72                 	db	114	;'r'
   893  00F615  20                 	db	32
   894  00F616  64                 	db	100	;'d'
   895  00F617  69                 	db	105	;'i'
   896  00F618  65                 	db	101	;'e'
   897  00F619  20                 	db	32
   898  00F61A  74                 	db	116	;'t'
   899  00F61B  65                 	db	101	;'e'
   900  00F61C  6D                 	db	109	;'m'
   901  00F61D  70                 	db	112	;'p'
   902  00F61E  65                 	db	101	;'e'
   903  00F61F  72                 	db	114	;'r'
   904  00F620  61                 	db	97	;'a'
   905  00F621  74                 	db	116	;'t'
   906  00F622  75                 	db	117	;'u'
   907  00F623  72                 	db	114	;'r'
   908  00F624  65                 	db	101	;'e'
   909  00F625  20                 	db	32
   910  00F626  69                 	db	105	;'i'
   911  00F627  6E                 	db	110	;'n'
   912  00F628  20                 	db	32
   913  00F629  64                 	db	100	;'d'
   914  00F62A  65                 	db	101	;'e'
   915  00F62B  67                 	db	103	;'g'
   916  00F62C  72                 	db	114	;'r'
   917  00F62D  65                 	db	101	;'e'
   918  00F62E  65                 	db	101	;'e'
   919  00F62F  73                 	db	115	;'s'
   920  00F630  20                 	db	32
   921  00F631  43                 	db	67	;'C'
   922  00F632  0A                 	db	10
   923  00F633  0D                 	db	13
   924  00F634  20                 	db	32
   925  00F635  20                 	db	32
   926  00F636  20                 	db	32
   927  00F637  4D                 	db	77	;'M'
   928  00F638  65                 	db	101	;'e'
   929  00F639  61                 	db	97	;'a'
   930  00F63A  73                 	db	115	;'s'
   931  00F63B  75                 	db	117	;'u'
   932  00F63C  72                 	db	114	;'r'
   933  00F63D  65                 	db	101	;'e'
   934  00F63E  20                 	db	32
   935  00F63F  44                 	db	68	;'D'
   936  00F640  65                 	db	101	;'e'
   937  00F641  74                 	db	116	;'t'
   938  00F642  65                 	db	101	;'e'
   939  00F643  63                 	db	99	;'c'
   940  00F644  74                 	db	116	;'t'
   941  00F645  65                 	db	101	;'e'
   942  00F646  64                 	db	100	;'d'
   943  00F647  20                 	db	32
   944  00F648  43                 	db	67	;'C'
   945  00F649  75                 	db	117	;'u'
   946  00F64A  72                 	db	114	;'r'
   947  00F64B  72                 	db	114	;'r'
   948  00F64C  65                 	db	101	;'e'
   949  00F64D  6E                 	db	110	;'n'
   950  00F64E  74                 	db	116	;'t'
   951  00F64F  3F                 	db	63	;'?'
   952  00F650  3A                 	db	58	;':'
   953  00F651  20                 	db	32
   954  00F652  52                 	db	82	;'R'
   955  00F653  65                 	db	101	;'e'
   956  00F654  74                 	db	116	;'t'
   957  00F655  75                 	db	117	;'u'
   958  00F656  72                 	db	114	;'r'
   959  00F657  6E                 	db	110	;'n'
   960  00F658  73                 	db	115	;'s'
   961  00F659  20                 	db	32
   962  00F65A  6D                 	db	109	;'m'
   963  00F65B  65                 	db	101	;'e'
   964  00F65C  61                 	db	97	;'a'
   965  00F65D  73                 	db	115	;'s'
   966  00F65E  75                 	db	117	;'u'
   967  00F65F  72                 	db	114	;'r'
   968  00F660  65                 	db	101	;'e'
   969  00F661  64                 	db	100	;'d'
   970  00F662  20                 	db	32
   971  00F663  6F                 	db	111	;'o'
   972  00F664  75                 	db	117	;'u'
   973  00F665  74                 	db	116	;'t'
   974  00F666  70                 	db	112	;'p'
   975  00F667  75                 	db	117	;'u'
   976  00F668  74                 	db	116	;'t'
   977  00F669  20                 	db	32
   978  00F66A  63                 	db	99	;'c'
   979  00F66B  75                 	db	117	;'u'
   980  00F66C  72                 	db	114	;'r'
   981  00F66D  72                 	db	114	;'r'
   982  00F66E  65                 	db	101	;'e'
   983  00F66F  6E                 	db	110	;'n'
   984  00F670  74                 	db	116	;'t'
   985  00F671  20                 	db	32
   986  00F672  69                 	db	105	;'i'
   987  00F673  6E                 	db	110	;'n'
   988  00F674  20                 	db	32
   989  00F675  61                 	db	97	;'a'
   990  00F676  6D                 	db	109	;'m'
   991  00F677  70                 	db	112	;'p'
   992  00F678  73                 	db	115	;'s'
   993  00F679  20                 	db	32
   994  00F67A  61                 	db	97	;'a'
   995  00F67B  73                 	db	115	;'s'
   996  00F67C  20                 	db	32
   997  00F67D  73                 	db	115	;'s'
   998  00F67E  65                 	db	101	;'e'
   999  00F67F  65                 	db	101	;'e'
  1000  00F680  6E                 	db	110	;'n'
  1001  00F681  20                 	db	32
  1002  00F682  62                 	db	98	;'b'
  1003  00F683  79                 	db	121	;'y'
  1004  00F684  20                 	db	32
  1005  00F685  41                 	db	65	;'A'
  1006  00F686  44                 	db	68	;'D'
  1007  00F687  43                 	db	67	;'C'
  1008  00F688  0A                 	db	10
  1009  00F689  0D                 	db	13
  1010  00F68A  20                 	db	32
  1011  00F68B  20                 	db	32
  1012  00F68C  20                 	db	32
  1013  00F68D  4D                 	db	77	;'M'
  1014  00F68E  65                 	db	101	;'e'
  1015  00F68F  61                 	db	97	;'a'
  1016  00F690  73                 	db	115	;'s'
  1017  00F691  75                 	db	117	;'u'
  1018  00F692  72                 	db	114	;'r'
  1019  00F693  65                 	db	101	;'e'
  1020  00F694  20                 	db	32
  1021  00F695  52                 	db	82	;'R'
  1022  00F696  4D                 	db	77	;'M'
  1023  00F697  53                 	db	83	;'S'
  1024  00F698  20                 	db	32
  1025  00F699  43                 	db	67	;'C'
  1026  00F69A  75                 	db	117	;'u'
  1027  00F69B  72                 	db	114	;'r'
  1028  00F69C  72                 	db	114	;'r'
  1029  00F69D  65                 	db	101	;'e'
  1030  00F69E  6E                 	db	110	;'n'
  1031  00F69F  74                 	db	116	;'t'
  1032  00F6A0  3F                 	db	63	;'?'
  1033  00F6A1  3A                 	db	58	;':'
  1034  00F6A2  20                 	db	32
  1035  00F6A3  52                 	db	82	;'R'
  1036  00F6A4  65                 	db	101	;'e'
  1037  00F6A5  74                 	db	116	;'t'
  1038  00F6A6  75                 	db	117	;'u'
  1039  00F6A7  72                 	db	114	;'r'
  1040  00F6A8  6E                 	db	110	;'n'
  1041  00F6A9  73                 	db	115	;'s'
  1042  00F6AA  20                 	db	32
  1043  00F6AB  74                 	db	116	;'t'
  1044  00F6AC  68                 	db	104	;'h'
  1045  00F6AD  65                 	db	101	;'e'
  1046  00F6AE  20                 	db	32
  1047  00F6AF  63                 	db	99	;'c'
  1048  00F6B0  61                 	db	97	;'a'
  1049  00F6B1  6C                 	db	108	;'l'
  1050  00F6B2  63                 	db	99	;'c'
  1051  00F6B3  75                 	db	117	;'u'
  1052  00F6B4  6C                 	db	108	;'l'
  1053  00F6B5  61                 	db	97	;'a'
  1054  00F6B6  74                 	db	116	;'t'
  1055  00F6B7  65                 	db	101	;'e'
  1056  00F6B8  64                 	db	100	;'d'
  1057  00F6B9  20                 	db	32
  1058  00F6BA  52                 	db	82	;'R'
  1059  00F6BB  4D                 	db	77	;'M'
  1060  00F6BC  53                 	db	83	;'S'
  1061  00F6BD  20                 	db	32
  1062  00F6BE  6F                 	db	111	;'o'
  1063  00F6BF  75                 	db	117	;'u'
  1064  00F6C0  74                 	db	116	;'t'
  1065  00F6C1  70                 	db	112	;'p'
  1066  00F6C2  75                 	db	117	;'u'
  1067  00F6C3  74                 	db	116	;'t'
  1068  00F6C4  20                 	db	32
  1069  00F6C5  63                 	db	99	;'c'
  1070  00F6C6  75                 	db	117	;'u'
  1071  00F6C7  72                 	db	114	;'r'
  1072  00F6C8  72                 	db	114	;'r'
  1073  00F6C9  65                 	db	101	;'e'
  1074  00F6CA  6E                 	db	110	;'n'
  1075  00F6CB  74                 	db	116	;'t'
  1076  00F6CC  20                 	db	32
  1077  00F6CD  66                 	db	102	;'f'
  1078  00F6CE  72                 	db	114	;'r'
  1079  00F6CF  6F                 	db	111	;'o'
  1080  00F6D0  6D                 	db	109	;'m'
  1081  00F6D1  20                 	db	32
  1082  00F6D2  6D                 	db	109	;'m'
  1083  00F6D3  65                 	db	101	;'e'
  1084  00F6D4  61                 	db	97	;'a'
  1085  00F6D5  73                 	db	115	;'s'
  1086  00F6D6  75                 	db	117	;'u'
  1087  00F6D7  72                 	db	114	;'r'
  1088  00F6D8  65                 	db	101	;'e'
  1089  00F6D9  6D                 	db	109	;'m'
  1090  00F6DA  65                 	db	101	;'e'
  1091  00F6DB  6E                 	db	110	;'n'
  1092  00F6DC  74                 	db	116	;'t'
  1093  00F6DD  73                 	db	115	;'s'
  1094  00F6DE  20                 	db	32
  1095  00F6DF  61                 	db	97	;'a'
  1096  00F6E0  6E                 	db	110	;'n'
  1097  00F6E1  64                 	db	100	;'d'
  1098  00F6E2  20                 	db	32
  1099  00F6E3  54                 	db	84	;'T'
  1100  00F6E4  52                 	db	82	;'R'
  1101  00F6E5  49                 	db	73	;'I'
  1102  00F6E6  41                 	db	65	;'A'
  1103  00F6E7  43                 	db	67	;'C'
  1104  00F6E8  20                 	db	32
  1105  00F6E9  66                 	db	102	;'f'
  1106  00F6EA  69                 	db	105	;'i'
  1107  00F6EB  72                 	db	114	;'r'
  1108  00F6EC  69                 	db	105	;'i'
  1109  00F6ED  6E                 	db	110	;'n'
  1110  00F6EE  67                 	db	103	;'g'
  1111  00F6EF  20                 	db	32
  1112  00F6F0  61                 	db	97	;'a'
  1113  00F6F1  6E                 	db	110	;'n'
  1114  00F6F2  67                 	db	103	;'g'
  1115  00F6F3  6C                 	db	108	;'l'
  1116  00F6F4  65                 	db	101	;'e'
  1117  00F6F5  0A                 	db	10
  1118  00F6F6  0D                 	db	13
  1119  00F6F7  20                 	db	32
  1120  00F6F8  20                 	db	32
  1121  00F6F9  20                 	db	32
  1122  00F6FA  4D                 	db	77	;'M'
  1123  00F6FB  65                 	db	101	;'e'
  1124  00F6FC  61                 	db	97	;'a'
  1125  00F6FD  73                 	db	115	;'s'
  1126  00F6FE  75                 	db	117	;'u'
  1127  00F6FF  72                 	db	114	;'r'
  1128  00F700  65                 	db	101	;'e'
  1129  00F701  20                 	db	32
  1130  00F702  52                 	db	82	;'R'
  1131  00F703  4D                 	db	77	;'M'
  1132  00F704  53                 	db	83	;'S'
  1133  00F705  20                 	db	32
  1134  00F706  56                 	db	86	;'V'
  1135  00F707  6F                 	db	111	;'o'
  1136  00F708  6C                 	db	108	;'l'
  1137  00F709  74                 	db	116	;'t'
  1138  00F70A  61                 	db	97	;'a'
  1139  00F70B  67                 	db	103	;'g'
  1140  00F70C  65                 	db	101	;'e'
  1141  00F70D  3F                 	db	63	;'?'
  1142  00F70E  3A                 	db	58	;':'
  1143  00F70F  20                 	db	32
  1144  00F710  52                 	db	82	;'R'
  1145  00F711  65                 	db	101	;'e'
  1146  00F712  74                 	db	116	;'t'
  1147  00F713  75                 	db	117	;'u'
  1148  00F714  72                 	db	114	;'r'
  1149  00F715  6E                 	db	110	;'n'
  1150  00F716  73                 	db	115	;'s'
  1151  00F717  20                 	db	32
  1152  00F718  74                 	db	116	;'t'
  1153  00F719  68                 	db	104	;'h'
  1154  00F71A  65                 	db	101	;'e'
  1155  00F71B  20                 	db	32
  1156  00F71C  63                 	db	99	;'c'
  1157  00F71D  61                 	db	97	;'a'
  1158  00F71E  6C                 	db	108	;'l'
  1159  00F71F  63                 	db	99	;'c'
  1160  00F720  75                 	db	117	;'u'
  1161  00F721  6C                 	db	108	;'l'
  1162  00F722  61                 	db	97	;'a'
  1163  00F723  74                 	db	116	;'t'
  1164  00F724  65                 	db	101	;'e'
  1165  00F725  64                 	db	100	;'d'
  1166  00F726  20                 	db	32
  1167  00F727  52                 	db	82	;'R'
  1168  00F728  4D                 	db	77	;'M'
  1169  00F729  53                 	db	83	;'S'
  1170  00F72A  20                 	db	32
  1171  00F72B  6F                 	db	111	;'o'
  1172  00F72C  75                 	db	117	;'u'
  1173  00F72D  74                 	db	116	;'t'
  1174  00F72E  70                 	db	112	;'p'
  1175  00F72F  75                 	db	117	;'u'
  1176  00F730  74                 	db	116	;'t'
  1177  00F731  20                 	db	32
  1178  00F732  76                 	db	118	;'v'
  1179  00F733  6F                 	db	111	;'o'
  1180  00F734  6C                 	db	108	;'l'
  1181  00F735  74                 	db	116	;'t'
  1182  00F736  61                 	db	97	;'a'
  1183  00F737  67                 	db	103	;'g'
  1184  00F738  65                 	db	101	;'e'
  1185  00F739  20                 	db	32
  1186  00F73A  66                 	db	102	;'f'
  1187  00F73B  72                 	db	114	;'r'
  1188  00F73C  6F                 	db	111	;'o'
  1189  00F73D  6D                 	db	109	;'m'
  1190  00F73E  20                 	db	32
  1191  00F73F  54                 	db	84	;'T'
  1192  00F740  52                 	db	82	;'R'
  1193  00F741  49                 	db	73	;'I'
  1194  00F742  41                 	db	65	;'A'
  1195  00F743  43                 	db	67	;'C'
  1196  00F744  20                 	db	32
  1197  00F745  66                 	db	102	;'f'
  1198  00F746  69                 	db	105	;'i'
  1199  00F747  72                 	db	114	;'r'
  1200  00F748  69                 	db	105	;'i'
  1201  00F749  6E                 	db	110	;'n'
  1202  00F74A  67                 	db	103	;'g'
  1203  00F74B  20                 	db	32
  1204  00F74C  61                 	db	97	;'a'
  1205  00F74D  6E                 	db	110	;'n'
  1206  00F74E  67                 	db	103	;'g'
  1207  00F74F  6C                 	db	108	;'l'
  1208  00F750  65                 	db	101	;'e'
  1209  00F751  0A                 	db	10
  1210  00F752  0D                 	db	13
  1211  00F753  20                 	db	32
  1212  00F754  20                 	db	32
  1213  00F755  20                 	db	32
  1214  00F756  4D                 	db	77	;'M'
  1215  00F757  65                 	db	101	;'e'
  1216  00F758  61                 	db	97	;'a'
  1217  00F759  73                 	db	115	;'s'
  1218  00F75A  75                 	db	117	;'u'
  1219  00F75B  72                 	db	114	;'r'
  1220  00F75C  65                 	db	101	;'e'
  1221  00F75D  20                 	db	32
  1222  00F75E  46                 	db	70	;'F'
  1223  00F75F  56                 	db	86	;'V'
  1224  00F760  52                 	db	82	;'R'
  1225  00F761  3F                 	db	63	;'?'
  1226  00F762  3A                 	db	58	;':'
  1227  00F763  20                 	db	32
  1228  00F764  52                 	db	82	;'R'
  1229  00F765  65                 	db	101	;'e'
  1230  00F766  74                 	db	116	;'t'
  1231  00F767  75                 	db	117	;'u'
  1232  00F768  72                 	db	114	;'r'
  1233  00F769  6E                 	db	110	;'n'
  1234  00F76A  73                 	db	115	;'s'
  1235  00F76B  20                 	db	32
  1236  00F76C  74                 	db	116	;'t'
  1237  00F76D  68                 	db	104	;'h'
  1238  00F76E  65                 	db	101	;'e'
  1239  00F76F  20                 	db	32
  1240  00F770  69                 	db	105	;'i'
  1241  00F771  6E                 	db	110	;'n'
  1242  00F772  74                 	db	116	;'t'
  1243  00F773  65                 	db	101	;'e'
  1244  00F774  72                 	db	114	;'r'
  1245  00F775  6E                 	db	110	;'n'
  1246  00F776  61                 	db	97	;'a'
  1247  00F777  6C                 	db	108	;'l'
  1248  00F778  20                 	db	32
  1249  00F779  66                 	db	102	;'f'
  1250  00F77A  69                 	db	105	;'i'
  1251  00F77B  78                 	db	120	;'x'
  1252  00F77C  65                 	db	101	;'e'
  1253  00F77D  64                 	db	100	;'d'
  1254  00F77E  20                 	db	32
  1255  00F77F  76                 	db	118	;'v'
  1256  00F780  6F                 	db	111	;'o'
  1257  00F781  6C                 	db	108	;'l'
  1258  00F782  74                 	db	116	;'t'
  1259  00F783  61                 	db	97	;'a'
  1260  00F784  67                 	db	103	;'g'
  1261  00F785  65                 	db	101	;'e'
  1262  00F786  20                 	db	32
  1263  00F787  72                 	db	114	;'r'
  1264  00F788  65                 	db	101	;'e'
  1265  00F789  66                 	db	102	;'f'
  1266  00F78A  65                 	db	101	;'e'
  1267  00F78B  72                 	db	114	;'r'
  1268  00F78C  65                 	db	101	;'e'
  1269  00F78D  6E                 	db	110	;'n'
  1270  00F78E  63                 	db	99	;'c'
  1271  00F78F  65                 	db	101	;'e'
  1272  00F790  20                 	db	32
  1273  00F791  62                 	db	98	;'b'
  1274  00F792  75                 	db	117	;'u'
  1275  00F793  66                 	db	102	;'f'
  1276  00F794  66                 	db	102	;'f'
  1277  00F795  65                 	db	101	;'e'
  1278  00F796  72                 	db	114	;'r'
  1279  00F797  20                 	db	32
  1280  00F798  31                 	db	49	;'1'
  1281  00F799  20                 	db	32
  1282  00F79A  6F                 	db	111	;'o'
  1283  00F79B  75                 	db	117	;'u'
  1284  00F79C  74                 	db	116	;'t'
  1285  00F79D  70                 	db	112	;'p'
  1286  00F79E  75                 	db	117	;'u'
  1287  00F79F  74                 	db	116	;'t'
  1288  00F7A0  20                 	db	32
  1289  00F7A1  69                 	db	105	;'i'
  1290  00F7A2  6E                 	db	110	;'n'
  1291  00F7A3  20                 	db	32
  1292  00F7A4  76                 	db	118	;'v'
  1293  00F7A5  6F                 	db	111	;'o'
  1294  00F7A6  6C                 	db	108	;'l'
  1295  00F7A7  74                 	db	116	;'t'
  1296  00F7A8  73                 	db	115	;'s'
  1297  00F7A9  0A                 	db	10
  1298  00F7AA  0D                 	db	13
  1299  00F7AB  20                 	db	32
  1300  00F7AC  20                 	db	32
  1301  00F7AD  20                 	db	32
  1302  00F7AE  4F                 	db	79	;'O'
  1303  00F7AF  6E                 	db	110	;'n'
  1304  00F7B0  20                 	db	32
  1305  00F7B1  54                 	db	84	;'T'
  1306  00F7B2  69                 	db	105	;'i'
  1307  00F7B3  6D                 	db	109	;'m'
  1308  00F7B4  65                 	db	101	;'e'
  1309  00F7B5  3F                 	db	63	;'?'
  1310  00F7B6  3A                 	db	58	;':'
  1311  00F7B7  20                 	db	32
  1312  00F7B8  52                 	db	82	;'R'
  1313  00F7B9  65                 	db	101	;'e'
  1314  00F7BA  74                 	db	116	;'t'
  1315  00F7BB  75                 	db	117	;'u'
  1316  00F7BC  72                 	db	114	;'r'
  1317  00F7BD  6E                 	db	110	;'n'
  1318  00F7BE  73                 	db	115	;'s'
  1319  00F7BF  20                 	db	32
  1320  00F7C0  64                 	db	100	;'d'
  1321  00F7C1  65                 	db	101	;'e'
  1322  00F7C2  76                 	db	118	;'v'
  1323  00F7C3  69                 	db	105	;'i'
  1324  00F7C4  63                 	db	99	;'c'
  1325  00F7C5  65                 	db	101	;'e'
  1326  00F7C6  20                 	db	32
  1327  00F7C7  6F                 	db	111	;'o'
  1328  00F7C8  6E                 	db	110	;'n'
  1329  00F7C9  20                 	db	32
  1330  00F7CA  74                 	db	116	;'t'
  1331  00F7CB  69                 	db	105	;'i'
  1332  00F7CC  6D                 	db	109	;'m'
  1333  00F7CD  65                 	db	101	;'e'
  1334  00F7CE  20                 	db	32
  1335  00F7CF  73                 	db	115	;'s'
  1336  00F7D0  69                 	db	105	;'i'
  1337  00F7D1  6E                 	db	110	;'n'
  1338  00F7D2  63                 	db	99	;'c'
  1339  00F7D3  65                 	db	101	;'e'
  1340  00F7D4  20                 	db	32
  1341  00F7D5  6C                 	db	108	;'l'
  1342  00F7D6  61                 	db	97	;'a'
  1343  00F7D7  73                 	db	115	;'s'
  1344  00F7D8  74                 	db	116	;'t'
  1345  00F7D9  20                 	db	32
  1346  00F7DA  64                 	db	100	;'d'
  1347  00F7DB  65                 	db	101	;'e'
  1348  00F7DC  76                 	db	118	;'v'
  1349  00F7DD  69                 	db	105	;'i'
  1350  00F7DE  63                 	db	99	;'c'
  1351  00F7DF  65                 	db	101	;'e'
  1352  00F7E0  20                 	db	32
  1353  00F7E1  72                 	db	114	;'r'
  1354  00F7E2  65                 	db	101	;'e'
  1355  00F7E3  73                 	db	115	;'s'
  1356  00F7E4  65                 	db	101	;'e'
  1357  00F7E5  74                 	db	116	;'t'
  1358  00F7E6  0A                 	db	10
  1359  00F7E7  0D                 	db	13
  1360  00F7E8  20                 	db	32
  1361  00F7E9  20                 	db	32
  1362  00F7EA  20                 	db	32
  1363  00F7EB  45                 	db	69	;'E'
  1364  00F7EC  6E                 	db	110	;'n'
  1365  00F7ED  61                 	db	97	;'a'
  1366  00F7EE  62                 	db	98	;'b'
  1367  00F7EF  6C                 	db	108	;'l'
  1368  00F7F0  65                 	db	101	;'e'
  1369  00F7F1  20                 	db	32
  1370  00F7F2  44                 	db	68	;'D'
  1371  00F7F3  69                 	db	105	;'i'
  1372  00F7F4  6D                 	db	109	;'m'
  1373  00F7F5  6D                 	db	109	;'m'
  1374  00F7F6  69                 	db	105	;'i'
  1375  00F7F7  6E                 	db	110	;'n'
  1376  00F7F8  67                 	db	103	;'g'
  1377  00F7F9  3A                 	db	58	;':'
  1378  00F7FA  20                 	db	32
  1379  00F7FB  45                 	db	69	;'E'
  1380  00F7FC  6E                 	db	110	;'n'
  1381  00F7FD  61                 	db	97	;'a'
  1382  00F7FE  62                 	db	98	;'b'
  1383  00F7FF  6C                 	db	108	;'l'
  1384  00F800  65                 	db	101	;'e'
  1385  00F801  20                 	db	32
  1386  00F802  54                 	db	84	;'T'
  1387  00F803  52                 	db	82	;'R'
  1388  00F804  49                 	db	73	;'I'
  1389  00F805  41                 	db	65	;'A'
  1390  00F806  43                 	db	67	;'C'
  1391  00F807  20                 	db	32
  1392  00F808  6F                 	db	111	;'o'
  1393  00F809  75                 	db	117	;'u'
  1394  00F80A  74                 	db	116	;'t'
  1395  00F80B  70                 	db	112	;'p'
  1396  00F80C  75                 	db	117	;'u'
  1397  00F80D  74                 	db	116	;'t'
  1398  00F80E  20                 	db	32
  1399  00F80F  64                 	db	100	;'d'
  1400  00F810  69                 	db	105	;'i'
  1401  00F811  6D                 	db	109	;'m'
  1402  00F812  6D                 	db	109	;'m'
  1403  00F813  69                 	db	105	;'i'
  1404  00F814  6E                 	db	110	;'n'
  1405  00F815  67                 	db	103	;'g'
  1406  00F816  0A                 	db	10
  1407  00F817  0D                 	db	13
  1408  00F818  20                 	db	32
  1409  00F819  20                 	db	32
  1410  00F81A  20                 	db	32
  1411  00F81B  44                 	db	68	;'D'
  1412  00F81C  69                 	db	105	;'i'
  1413  00F81D  73                 	db	115	;'s'
  1414  00F81E  61                 	db	97	;'a'
  1415  00F81F  62                 	db	98	;'b'
  1416  00F820  6C                 	db	108	;'l'
  1417  00F821  65                 	db	101	;'e'
  1418  00F822  20                 	db	32
  1419  00F823  44                 	db	68	;'D'
  1420  00F824  69                 	db	105	;'i'
  1421  00F825  6D                 	db	109	;'m'
  1422  00F826  6D                 	db	109	;'m'
  1423  00F827  69                 	db	105	;'i'
  1424  00F828  6E                 	db	110	;'n'
  1425  00F829  67                 	db	103	;'g'
  1426  00F82A  3A                 	db	58	;':'
  1427  00F82B  20                 	db	32
  1428  00F82C  44                 	db	68	;'D'
  1429  00F82D  69                 	db	105	;'i'
  1430  00F82E  73                 	db	115	;'s'
  1431  00F82F  61                 	db	97	;'a'
  1432  00F830  62                 	db	98	;'b'
  1433  00F831  6C                 	db	108	;'l'
  1434  00F832  65                 	db	101	;'e'
  1435  00F833  20                 	db	32
  1436  00F834  54                 	db	84	;'T'
  1437  00F835  52                 	db	82	;'R'
  1438  00F836  49                 	db	73	;'I'
  1439  00F837  41                 	db	65	;'A'
  1440  00F838  43                 	db	67	;'C'
  1441  00F839  20                 	db	32
  1442  00F83A  6F                 	db	111	;'o'
  1443  00F83B  75                 	db	117	;'u'
  1444  00F83C  74                 	db	116	;'t'
  1445  00F83D  70                 	db	112	;'p'
  1446  00F83E  75                 	db	117	;'u'
  1447  00F83F  74                 	db	116	;'t'
  1448  00F840  20                 	db	32
  1449  00F841  64                 	db	100	;'d'
  1450  00F842  69                 	db	105	;'i'
  1451  00F843  6D                 	db	109	;'m'
  1452  00F844  6D                 	db	109	;'m'
  1453  00F845  69                 	db	105	;'i'
  1454  00F846  6E                 	db	110	;'n'
  1455  00F847  67                 	db	103	;'g'
  1456  00F848  0A                 	db	10
  1457  00F849  0D                 	db	13
  1458  00F84A  20                 	db	32
  1459  00F84B  20                 	db	32
  1460  00F84C  20                 	db	32
  1461  00F84D  45                 	db	69	;'E'
  1462  00F84E  6E                 	db	110	;'n'
  1463  00F84F  61                 	db	97	;'a'
  1464  00F850  62                 	db	98	;'b'
  1465  00F851  6C                 	db	108	;'l'
  1466  00F852  65                 	db	101	;'e'
  1467  00F853  20                 	db	32
  1468  00F854  4C                 	db	76	;'L'
  1469  00F855  6F                 	db	111	;'o'
  1470  00F856  61                 	db	97	;'a'
  1471  00F857  64                 	db	100	;'d'
  1472  00F858  3A                 	db	58	;':'
  1473  00F859  20                 	db	32
  1474  00F85A  45                 	db	69	;'E'
  1475  00F85B  6E                 	db	110	;'n'
  1476  00F85C  61                 	db	97	;'a'
  1477  00F85D  62                 	db	98	;'b'
  1478  00F85E  6C                 	db	108	;'l'
  1479  00F85F  65                 	db	101	;'e'
  1480  00F860  73                 	db	115	;'s'
  1481  00F861  20                 	db	32
  1482  00F862  74                 	db	116	;'t'
  1483  00F863  68                 	db	104	;'h'
  1484  00F864  65                 	db	101	;'e'
  1485  00F865  20                 	db	32
  1486  00F866  6F                 	db	111	;'o'
  1487  00F867  75                 	db	117	;'u'
  1488  00F868  74                 	db	116	;'t'
  1489  00F869  70                 	db	112	;'p'
  1490  00F86A  75                 	db	117	;'u'
  1491  00F86B  74                 	db	116	;'t'
  1492  00F86C  20                 	db	32
  1493  00F86D  54                 	db	84	;'T'
  1494  00F86E  52                 	db	82	;'R'
  1495  00F86F  49                 	db	73	;'I'
  1496  00F870  41                 	db	65	;'A'
  1497  00F871  43                 	db	67	;'C'
  1498  00F872  20                 	db	32
  1499  00F873  77                 	db	119	;'w'
  1500  00F874  69                 	db	105	;'i'
  1501  00F875  74                 	db	116	;'t'
  1502  00F876  68                 	db	104	;'h'
  1503  00F877  20                 	db	32
  1504  00F878  6F                 	db	111	;'o'
  1505  00F879  72                 	db	114	;'r'
  1506  00F87A  20                 	db	32
  1507  00F87B  77                 	db	119	;'w'
  1508  00F87C  69                 	db	105	;'i'
  1509  00F87D  74                 	db	116	;'t'
  1510  00F87E  68                 	db	104	;'h'
  1511  00F87F  6F                 	db	111	;'o'
  1512  00F880  75                 	db	117	;'u'
  1513  00F881  74                 	db	116	;'t'
  1514  00F882  20                 	db	32
  1515  00F883  64                 	db	100	;'d'
  1516  00F884  69                 	db	105	;'i'
  1517  00F885  6D                 	db	109	;'m'
  1518  00F886  6D                 	db	109	;'m'
  1519  00F887  69                 	db	105	;'i'
  1520  00F888  6E                 	db	110	;'n'
  1521  00F889  67                 	db	103	;'g'
  1522  00F88A  0A                 	db	10
  1523  00F88B  0D                 	db	13
  1524  00F88C  20                 	db	32
  1525  00F88D  20                 	db	32
  1526  00F88E  20                 	db	32
  1527  00F88F  44                 	db	68	;'D'
  1528  00F890  69                 	db	105	;'i'
  1529  00F891  73                 	db	115	;'s'
  1530  00F892  61                 	db	97	;'a'
  1531  00F893  62                 	db	98	;'b'
  1532  00F894  6C                 	db	108	;'l'
  1533  00F895  65                 	db	101	;'e'
  1534  00F896  20                 	db	32
  1535  00F897  4C                 	db	76	;'L'
  1536  00F898  6F                 	db	111	;'o'
  1537  00F899  61                 	db	97	;'a'
  1538  00F89A  64                 	db	100	;'d'
  1539  00F89B  3A                 	db	58	;':'
  1540  00F89C  20                 	db	32
  1541  00F89D  44                 	db	68	;'D'
  1542  00F89E  69                 	db	105	;'i'
  1543  00F89F  73                 	db	115	;'s'
  1544  00F8A0  61                 	db	97	;'a'
  1545  00F8A1  62                 	db	98	;'b'
  1546  00F8A2  6C                 	db	108	;'l'
  1547  00F8A3  65                 	db	101	;'e'
  1548  00F8A4  73                 	db	115	;'s'
  1549  00F8A5  20                 	db	32
  1550  00F8A6  74                 	db	116	;'t'
  1551  00F8A7  68                 	db	104	;'h'
  1552  00F8A8  65                 	db	101	;'e'
  1553  00F8A9  20                 	db	32
  1554  00F8AA  6F                 	db	111	;'o'
  1555  00F8AB  75                 	db	117	;'u'
  1556  00F8AC  74                 	db	116	;'t'
  1557  00F8AD  70                 	db	112	;'p'
  1558  00F8AE  75                 	db	117	;'u'
  1559  00F8AF  74                 	db	116	;'t'
  1560  00F8B0  20                 	db	32
  1561  00F8B1  54                 	db	84	;'T'
  1562  00F8B2  52                 	db	82	;'R'
  1563  00F8B3  49                 	db	73	;'I'
  1564  00F8B4  41                 	db	65	;'A'
  1565  00F8B5  43                 	db	67	;'C'
  1566  00F8B6  20                 	db	32
  1567  00F8B7  63                 	db	99	;'c'
  1568  00F8B8  6F                 	db	111	;'o'
  1569  00F8B9  6D                 	db	109	;'m'
  1570  00F8BA  70                 	db	112	;'p'
  1571  00F8BB  6C                 	db	108	;'l'
  1572  00F8BC  65                 	db	101	;'e'
  1573  00F8BD  74                 	db	116	;'t'
  1574  00F8BE  65                 	db	101	;'e'
  1575  00F8BF  6C                 	db	108	;'l'
  1576  00F8C0  79                 	db	121	;'y'
  1577  00F8C1  0A                 	db	10
  1578  00F8C2  0D                 	db	13
  1579  00F8C3  20                 	db	32
  1580  00F8C4  20                 	db	32
  1581  00F8C5  20                 	db	32
  1582  00F8C6  53                 	db	83	;'S'
  1583  00F8C7  65                 	db	101	;'e'
  1584  00F8C8  74                 	db	116	;'t'
  1585  00F8C9  20                 	db	32
  1586  00F8CA  44                 	db	68	;'D'
  1587  00F8CB  69                 	db	105	;'i'
  1588  00F8CC  6D                 	db	109	;'m'
  1589  00F8CD  6D                 	db	109	;'m'
  1590  00F8CE  69                 	db	105	;'i'
  1591  00F8CF  6E                 	db	110	;'n'
  1592  00F8D0  67                 	db	103	;'g'
  1593  00F8D1  20                 	db	32
  1594  00F8D2  50                 	db	80	;'P'
  1595  00F8D3  65                 	db	101	;'e'
  1596  00F8D4  72                 	db	114	;'r'
  1597  00F8D5  63                 	db	99	;'c'
  1598  00F8D6  65                 	db	101	;'e'
  1599  00F8D7  6E                 	db	110	;'n'
  1600  00F8D8  74                 	db	116	;'t'
  1601  00F8D9  61                 	db	97	;'a'
  1602  00F8DA  67                 	db	103	;'g'
  1603  00F8DB  65                 	db	101	;'e'
  1604  00F8DC  20                 	db	32
  1605  00F8DD  3C                 	db	60	;'<'
  1606  00F8DE  78                 	db	120	;'x'
  1607  00F8DF  3E                 	db	62	;'>'
  1608  00F8E0  3A                 	db	58	;':'
  1609  00F8E1  20                 	db	32
  1610  00F8E2  53                 	db	83	;'S'
  1611  00F8E3  65                 	db	101	;'e'
  1612  00F8E4  74                 	db	116	;'t'
  1613  00F8E5  73                 	db	115	;'s'
  1614  00F8E6  20                 	db	32
  1615  00F8E7  74                 	db	116	;'t'
  1616  00F8E8  68                 	db	104	;'h'
  1617  00F8E9  65                 	db	101	;'e'
  1618  00F8EA  20                 	db	32
  1619  00F8EB  6F                 	db	111	;'o'
  1620  00F8EC  75                 	db	117	;'u'
  1621  00F8ED  74                 	db	116	;'t'
  1622  00F8EE  70                 	db	112	;'p'
  1623  00F8EF  75                 	db	117	;'u'
  1624  00F8F0  74                 	db	116	;'t'
  1625  00F8F1  20                 	db	32
  1626  00F8F2  64                 	db	100	;'d'
  1627  00F8F3  69                 	db	105	;'i'
  1628  00F8F4  6D                 	db	109	;'m'
  1629  00F8F5  6D                 	db	109	;'m'
  1630  00F8F6  69                 	db	105	;'i'
  1631  00F8F7  6E                 	db	110	;'n'
  1632  00F8F8  67                 	db	103	;'g'
  1633  00F8F9  20                 	db	32
  1634  00F8FA  70                 	db	112	;'p'
  1635  00F8FB  65                 	db	101	;'e'
  1636  00F8FC  72                 	db	114	;'r'
  1637  00F8FD  63                 	db	99	;'c'
  1638  00F8FE  65                 	db	101	;'e'
  1639  00F8FF  6E                 	db	110	;'n'
  1640  00F900  74                 	db	116	;'t'
  1641  00F901  61                 	db	97	;'a'
  1642  00F902  67                 	db	103	;'g'
  1643  00F903  65                 	db	101	;'e'
  1644  00F904  20                 	db	32
  1645  00F905  61                 	db	97	;'a'
  1646  00F906  73                 	db	115	;'s'
  1647  00F907  20                 	db	32
  1648  00F908  78                 	db	120	;'x'
  1649  00F909  20                 	db	32
  1650  00F90A  70                 	db	112	;'p'
  1651  00F90B  65                 	db	101	;'e'
  1652  00F90C  72                 	db	114	;'r'
  1653  00F90D  63                 	db	99	;'c'
  1654  00F90E  65                 	db	101	;'e'
  1655  00F90F  6E                 	db	110	;'n'
  1656  00F910  74                 	db	116	;'t'
  1657  00F911  0A                 	db	10
  1658  00F912  0D                 	db	13
  1659  00F913  20                 	db	32
  1660  00F914  20                 	db	32
  1661  00F915  20                 	db	32
  1662  00F916  48                 	db	72	;'H'
  1663  00F917  65                 	db	101	;'e'
  1664  00F918  6C                 	db	108	;'l'
  1665  00F919  70                 	db	112	;'p'
  1666  00F91A  3A                 	db	58	;':'
  1667  00F91B  20                 	db	32
  1668  00F91C  54                 	db	84	;'T'
  1669  00F91D  68                 	db	104	;'h'
  1670  00F91E  69                 	db	105	;'i'
  1671  00F91F  73                 	db	115	;'s'
  1672  00F920  20                 	db	32
  1673  00F921  6D                 	db	109	;'m'
  1674  00F922  65                 	db	101	;'e'
  1675  00F923  73                 	db	115	;'s'
  1676  00F924  73                 	db	115	;'s'
  1677  00F925  61                 	db	97	;'a'
  1678  00F926  67                 	db	103	;'g'
  1679  00F927  65                 	db	101	;'e'
  1680  00F928  2C                 	db	44
  1681  00F929  20                 	db	32
  1682  00F92A  6C                 	db	108	;'l'
  1683  00F92B  69                 	db	105	;'i'
  1684  00F92C  73                 	db	115	;'s'
  1685  00F92D  74                 	db	116	;'t'
  1686  00F92E  73                 	db	115	;'s'
  1687  00F92F  20                 	db	32
  1688  00F930  63                 	db	99	;'c'
  1689  00F931  6F                 	db	111	;'o'
  1690  00F932  6D                 	db	109	;'m'
  1691  00F933  6D                 	db	109	;'m'
  1692  00F934  61                 	db	97	;'a'
  1693  00F935  6E                 	db	110	;'n'
  1694  00F936  64                 	db	100	;'d'
  1695  00F937  73                 	db	115	;'s'
  1696  00F938  0A                 	db	10
  1697  00F939  0D                 	db	13
  1698  00F93A  00                 	db	0
  1699  00F93B  20                 	db	32
  1700  00F93C  20                 	db	32
  1701  00F93D  20                 	db	32
  1702  00F93E  20                 	db	32
  1703  00F93F  42                 	db	66	;'B'
  1704  00F940  6F                 	db	111	;'o'
  1705  00F941  6F                 	db	111	;'o'
  1706  00F942  74                 	db	116	;'t'
  1707  00F943  20                 	db	32
  1708  00F944  63                 	db	99	;'c'
  1709  00F945  6F                 	db	111	;'o'
  1710  00F946  6D                 	db	109	;'m'
  1711  00F947  70                 	db	112	;'p'
  1712  00F948  6C                 	db	108	;'l'
  1713  00F949  65                 	db	101	;'e'
  1714  00F94A  74                 	db	116	;'t'
  1715  00F94B  65                 	db	101	;'e'
  1716  00F94C  0A                 	db	10
  1717  00F94D  0D                 	db	13
  1718  00F94E  20                 	db	32
  1719  00F94F  20                 	db	32
  1720  00F950  20                 	db	32
  1721  00F951  20                 	db	32
  1722  00F952  50                 	db	80	;'P'
  1723  00F953  49                 	db	73	;'I'
  1724  00F954  43                 	db	67	;'C'
  1725  00F955  31                 	db	49	;'1'
  1726  00F956  38                 	db	56	;'8'
  1727  00F957  46                 	db	70	;'F'
  1728  00F958  36                 	db	54	;'6'
  1729  00F959  37                 	db	55	;'7'
  1730  00F95A  4B                 	db	75	;'K'
  1731  00F95B  34                 	db	52	;'4'
  1732  00F95C  30                 	db	48	;'0'
  1733  00F95D  20                 	db	32
  1734  00F95E  6D                 	db	109	;'m'
  1735  00F95F  54                 	db	84	;'T'
  1736  00F960  6F                 	db	111	;'o'
  1737  00F961  75                 	db	117	;'u'
  1738  00F962  63                 	db	99	;'c'
  1739  00F963  68                 	db	104	;'h'
  1740  00F964  20                 	db	32
  1741  00F965  54                 	db	84	;'T'
  1742  00F966  65                 	db	101	;'e'
  1743  00F967  73                 	db	115	;'s'
  1744  00F968  74                 	db	116	;'t'
  1745  00F969  20                 	db	32
  1746  00F96A  42                 	db	66	;'B'
  1747  00F96B  6F                 	db	111	;'o'
  1748  00F96C  61                 	db	97	;'a'
  1749  00F96D  72                 	db	114	;'r'
  1750  00F96E  64                 	db	100	;'d'
  1751  00F96F  0A                 	db	10
  1752  00F970  0D                 	db	13
  1753  00F971  20                 	db	32
  1754  00F972  20                 	db	32
  1755  00F973  20                 	db	32
  1756  00F974  20                 	db	32
  1757  00F975  45                 	db	69	;'E'
  1758  00F976  76                 	db	118	;'v'
  1759  00F977  61                 	db	97	;'a'
  1760  00F978  6C                 	db	108	;'l'
  1761  00F979  75                 	db	117	;'u'
  1762  00F97A  61                 	db	97	;'a'
  1763  00F97B  74                 	db	116	;'t'
  1764  00F97C  65                 	db	101	;'e'
  1765  00F97D  73                 	db	115	;'s'
  1766  00F97E  20                 	db	32
  1767  00F97F  74                 	db	116	;'t'
  1768  00F980  68                 	db	104	;'h'
  1769  00F981  65                 	db	101	;'e'
  1770  00F982  20                 	db	32
  1771  00F983  6D                 	db	109	;'m'
  1772  00F984  54                 	db	84	;'T'
  1773  00F985  6F                 	db	111	;'o'
  1774  00F986  75                 	db	117	;'u'
  1775  00F987  63                 	db	99	;'c'
  1776  00F988  68                 	db	104	;'h'
  1777  00F989  20                 	db	32
  1778  00F98A  63                 	db	99	;'c'
  1779  00F98B  61                 	db	97	;'a'
  1780  00F98C  70                 	db	112	;'p'
  1781  00F98D  61                 	db	97	;'a'
  1782  00F98E  63                 	db	99	;'c'
  1783  00F98F  69                 	db	105	;'i'
  1784  00F990  74                 	db	116	;'t'
  1785  00F991  69                 	db	105	;'i'
  1786  00F992  76                 	db	118	;'v'
  1787  00F993  65                 	db	101	;'e'
  1788  00F994  20                 	db	32
  1789  00F995  74                 	db	116	;'t'
  1790  00F996  6F                 	db	111	;'o'
  1791  00F997  75                 	db	117	;'u'
  1792  00F998  63                 	db	99	;'c'
  1793  00F999  68                 	db	104	;'h'
  1794  00F99A  20                 	db	32
  1795  00F99B  6C                 	db	108	;'l'
  1796  00F99C  69                 	db	105	;'i'
  1797  00F99D  62                 	db	98	;'b'
  1798  00F99E  72                 	db	114	;'r'
  1799  00F99F  61                 	db	97	;'a'
  1800  00F9A0  72                 	db	114	;'r'
  1801  00F9A1  79                 	db	121	;'y'
  1802  00F9A2  20                 	db	32
  1803  00F9A3  64                 	db	100	;'d'
  1804  00F9A4  69                 	db	105	;'i'
  1805  00F9A5  73                 	db	115	;'s'
  1806  00F9A6  74                 	db	116	;'t'
  1807  00F9A7  72                 	db	114	;'r'
  1808  00F9A8  69                 	db	105	;'i'
  1809  00F9A9  62                 	db	98	;'b'
  1810  00F9AA  75                 	db	117	;'u'
  1811  00F9AB  74                 	db	116	;'t'
  1812  00F9AC  65                 	db	101	;'e'
  1813  00F9AD  64                 	db	100	;'d'
  1814  00F9AE  20                 	db	32
  1815  00F9AF  62                 	db	98	;'b'
  1816  00F9B0  79                 	db	121	;'y'
  1817  00F9B1  20                 	db	32
  1818  00F9B2  4D                 	db	77	;'M'
  1819  00F9B3  69                 	db	105	;'i'
  1820  00F9B4  63                 	db	99	;'c'
  1821  00F9B5  72                 	db	114	;'r'
  1822  00F9B6  6F                 	db	111	;'o'
  1823  00F9B7  63                 	db	99	;'c'
  1824  00F9B8  68                 	db	104	;'h'
  1825  00F9B9  69                 	db	105	;'i'
  1826  00F9BA  70                 	db	112	;'p'
  1827  00F9BB  0A                 	db	10
  1828  00F9BC  0D                 	db	13
  1829  00F9BD  20                 	db	32
  1830  00F9BE  20                 	db	32
  1831  00F9BF  20                 	db	32
  1832  00F9C0  20                 	db	32
  1833  00F9C1  53                 	db	83	;'S'
  1834  00F9C2  65                 	db	101	;'e'
  1835  00F9C3  74                 	db	116	;'t'
  1836  00F9C4  73                 	db	115	;'s'
  1837  00F9C5  20                 	db	32
  1838  00F9C6  74                 	db	116	;'t'
  1839  00F9C7  68                 	db	104	;'h'
  1840  00F9C8  65                 	db	101	;'e'
  1841  00F9C9  20                 	db	32
  1842  00F9CA  73                 	db	115	;'s'
  1843  00F9CB  74                 	db	116	;'t'
  1844  00F9CC  61                 	db	97	;'a'
  1845  00F9CD  74                 	db	116	;'t'
  1846  00F9CE  65                 	db	101	;'e'
  1847  00F9CF  20                 	db	32
  1848  00F9D0  6F                 	db	111	;'o'
  1849  00F9D1  66                 	db	102	;'f'
  1850  00F9D2  20                 	db	32
  1851  00F9D3  66                 	db	102	;'f'
  1852  00F9D4  69                 	db	105	;'i'
  1853  00F9D5  76                 	db	118	;'v'
  1854  00F9D6  65                 	db	101	;'e'
  1855  00F9D7  20                 	db	32
  1856  00F9D8  4C                 	db	76	;'L'
  1857  00F9D9  45                 	db	69	;'E'
  1858  00F9DA  44                 	db	68	;'D'
  1859  00F9DB  73                 	db	115	;'s'
  1860  00F9DC  20                 	db	32
  1861  00F9DD  62                 	db	98	;'b'
  1862  00F9DE  61                 	db	97	;'a'
  1863  00F9DF  73                 	db	115	;'s'
  1864  00F9E0  65                 	db	101	;'e'
  1865  00F9E1  64                 	db	100	;'d'
  1866  00F9E2  20                 	db	32
  1867  00F9E3  6F                 	db	111	;'o'
  1868  00F9E4  6E                 	db	110	;'n'
  1869  00F9E5  20                 	db	32
  1870  00F9E6  6D                 	db	109	;'m'
  1871  00F9E7  54                 	db	84	;'T'
  1872  00F9E8  6F                 	db	111	;'o'
  1873  00F9E9  75                 	db	117	;'u'
  1874  00F9EA  63                 	db	99	;'c'
  1875  00F9EB  68                 	db	104	;'h'
  1876  00F9EC  20                 	db	32
  1877  00F9ED  63                 	db	99	;'c'
  1878  00F9EE  61                 	db	97	;'a'
  1879  00F9EF  70                 	db	112	;'p'
  1880  00F9F0  61                 	db	97	;'a'
  1881  00F9F1  63                 	db	99	;'c'
  1882  00F9F2  69                 	db	105	;'i'
  1883  00F9F3  74                 	db	116	;'t'
  1884  00F9F4  69                 	db	105	;'i'
  1885  00F9F5  76                 	db	118	;'v'
  1886  00F9F6  65                 	db	101	;'e'
  1887  00F9F7  20                 	db	32
  1888  00F9F8  70                 	db	112	;'p'
  1889  00F9F9  75                 	db	117	;'u'
  1890  00F9FA  73                 	db	115	;'s'
  1891  00F9FB  68                 	db	104	;'h'
  1892  00F9FC  62                 	db	98	;'b'
  1893  00F9FD  75                 	db	117	;'u'
  1894  00F9FE  74                 	db	116	;'t'
  1895  00F9FF  74                 	db	116	;'t'
  1896  00FA00  6F                 	db	111	;'o'
  1897  00FA01  6E                 	db	110	;'n'
  1898  00FA02  73                 	db	115	;'s'
  1899  00FA03  0A                 	db	10
  1900  00FA04  0D                 	db	13
  1901  00FA05  20                 	db	32
  1902  00FA06  20                 	db	32
  1903  00FA07  20                 	db	32
  1904  00FA08  20                 	db	32
  1905  00FA09  42                 	db	66	;'B'
  1906  00FA0A  61                 	db	97	;'a'
  1907  00FA0B  75                 	db	117	;'u'
  1908  00FA0C  64                 	db	100	;'d'
  1909  00FA0D  20                 	db	32
  1910  00FA0E  72                 	db	114	;'r'
  1911  00FA0F  61                 	db	97	;'a'
  1912  00FA10  74                 	db	116	;'t'
  1913  00FA11  65                 	db	101	;'e'
  1914  00FA12  3A                 	db	58	;':'
  1915  00FA13  20                 	db	32
  1916  00FA14  31                 	db	49	;'1'
  1917  00FA15  31                 	db	49	;'1'
  1918  00FA16  35                 	db	53	;'5'
  1919  00FA17  32                 	db	50	;'2'
  1920  00FA18  30                 	db	48	;'0'
  1921  00FA19  30                 	db	48	;'0'
  1922  00FA1A  20                 	db	32
  1923  00FA1B  62                 	db	98	;'b'
  1924  00FA1C  70                 	db	112	;'p'
  1925  00FA1D  73                 	db	115	;'s'
  1926  00FA1E  0A                 	db	10
  1927  00FA1F  0D                 	db	13
  1928  00FA20  20                 	db	32
  1929  00FA21  20                 	db	32
  1930  00FA22  20                 	db	32
  1931  00FA23  20                 	db	32
  1932  00FA24  4E                 	db	78	;'N'
  1933  00FA25  6F                 	db	111	;'o'
  1934  00FA26  20                 	db	32
  1935  00FA27  70                 	db	112	;'p'
  1936  00FA28  61                 	db	97	;'a'
  1937  00FA29  72                 	db	114	;'r'
  1938  00FA2A  69                 	db	105	;'i'
  1939  00FA2B  74                 	db	116	;'t'
  1940  00FA2C  79                 	db	121	;'y'
  1941  00FA2D  2C                 	db	44
  1942  00FA2E  20                 	db	32
  1943  00FA2F  38                 	db	56	;'8'
  1944  00FA30  20                 	db	32
  1945  00FA31  62                 	db	98	;'b'
  1946  00FA32  69                 	db	105	;'i'
  1947  00FA33  74                 	db	116	;'t'
  1948  00FA34  73                 	db	115	;'s'
  1949  00FA35  2C                 	db	44
  1950  00FA36  20                 	db	32
  1951  00FA37  6E                 	db	110	;'n'
  1952  00FA38  6F                 	db	111	;'o'
  1953  00FA39  20                 	db	32
  1954  00FA3A  66                 	db	102	;'f'
  1955  00FA3B  6C                 	db	108	;'l'
  1956  00FA3C  6F                 	db	111	;'o'
  1957  00FA3D  77                 	db	119	;'w'
  1958  00FA3E  20                 	db	32
  1959  00FA3F  63                 	db	99	;'c'
  1960  00FA40  6F                 	db	111	;'o'
  1961  00FA41  6E                 	db	110	;'n'
  1962  00FA42  74                 	db	116	;'t'
  1963  00FA43  72                 	db	114	;'r'
  1964  00FA44  6F                 	db	111	;'o'
  1965  00FA45  6C                 	db	108	;'l'
  1966  00FA46  2C                 	db	44
  1967  00FA47  20                 	db	32
  1968  00FA48  31                 	db	49	;'1'
  1969  00FA49  20                 	db	32
  1970  00FA4A  73                 	db	115	;'s'
  1971  00FA4B  74                 	db	116	;'t'
  1972  00FA4C  6F                 	db	111	;'o'
  1973  00FA4D  70                 	db	112	;'p'
  1974  00FA4E  20                 	db	32
  1975  00FA4F  62                 	db	98	;'b'
  1976  00FA50  69                 	db	105	;'i'
  1977  00FA51  74                 	db	116	;'t'
  1978  00FA52  0A                 	db	10
  1979  00FA53  0D                 	db	13
  1980  00FA54  20                 	db	32
  1981  00FA55  20                 	db	32
  1982  00FA56  20                 	db	32
  1983  00FA57  20                 	db	32
  1984  00FA58  43                 	db	67	;'C'
  1985  00FA59  6F                 	db	111	;'o'
  1986  00FA5A  6D                 	db	109	;'m'
  1987  00FA5B  6D                 	db	109	;'m'
  1988  00FA5C  61                 	db	97	;'a'
  1989  00FA5D  6E                 	db	110	;'n'
  1990  00FA5E  64                 	db	100	;'d'
  1991  00FA5F  73                 	db	115	;'s'
  1992  00FA60  20                 	db	32
  1993  00FA61  61                 	db	97	;'a'
  1994  00FA62  72                 	db	114	;'r'
  1995  00FA63  65                 	db	101	;'e'
  1996  00FA64  20                 	db	32
  1997  00FA65  63                 	db	99	;'c'
  1998  00FA66  61                 	db	97	;'a'
  1999  00FA67  73                 	db	115	;'s'
  2000  00FA68  65                 	db	101	;'e'
  2001  00FA69  20                 	db	32
  2002  00FA6A  73                 	db	115	;'s'
  2003  00FA6B  65                 	db	101	;'e'
  2004  00FA6C  6E                 	db	110	;'n'
  2005  00FA6D  73                 	db	115	;'s'
  2006  00FA6E  69                 	db	105	;'i'
  2007  00FA6F  74                 	db	116	;'t'
  2008  00FA70  69                 	db	105	;'i'
  2009  00FA71  76                 	db	118	;'v'
  2010  00FA72  65                 	db	101	;'e'
  2011  00FA73  0A                 	db	10
  2012  00FA74  0D                 	db	13
  2013  00FA75  20                 	db	32
  2014  00FA76  20                 	db	32
  2015  00FA77  20                 	db	32
  2016  00FA78  20                 	db	32
  2017  00FA79  45                 	db	69	;'E'
  2018  00FA7A  6E                 	db	110	;'n'
  2019  00FA7B  74                 	db	116	;'t'
  2020  00FA7C  65                 	db	101	;'e'
  2021  00FA7D  72                 	db	114	;'r'
  2022  00FA7E  20                 	db	32
  2023  00FA7F  61                 	db	97	;'a'
  2024  00FA80  20                 	db	32
  2025  00FA81  63                 	db	99	;'c'
  2026  00FA82  6F                 	db	111	;'o'
  2027  00FA83  6D                 	db	109	;'m'
  2028  00FA84  6D                 	db	109	;'m'
  2029  00FA85  61                 	db	97	;'a'
  2030  00FA86  6E                 	db	110	;'n'
  2031  00FA87  64                 	db	100	;'d'
  2032  00FA88  2C                 	db	44
  2033  00FA89  20                 	db	32
  2034  00FA8A  6F                 	db	111	;'o'
  2035  00FA8B  72                 	db	114	;'r'
  2036  00FA8C  20                 	db	32
  2037  00FA8D  65                 	db	101	;'e'
  2038  00FA8E  6E                 	db	110	;'n'
  2039  00FA8F  74                 	db	116	;'t'
  2040  00FA90  65                 	db	101	;'e'
  2041  00FA91  72                 	db	114	;'r'
  2042  00FA92  20                 	db	32
  2043  00FA93  48                 	db	72	;'H'
  2044  00FA94  65                 	db	101	;'e'
  2045  00FA95  6C                 	db	108	;'l'
  2046  00FA96  70                 	db	112	;'p'
  2047  00FA97  20                 	db	32
  2048  00FA98  66                 	db	102	;'f'
  2049  00FA99  6F                 	db	111	;'o'
  2050  00FA9A  72                 	db	114	;'r'
  2051  00FA9B  20                 	db	32
  2052  00FA9C  6C                 	db	108	;'l'
  2053  00FA9D  69                 	db	105	;'i'
  2054  00FA9E  73                 	db	115	;'s'
  2055  00FA9F  74                 	db	116	;'t'
  2056  00FAA0  20                 	db	32
  2057  00FAA1  6F                 	db	111	;'o'
  2058  00FAA2  66                 	db	102	;'f'
  2059  00FAA3  20                 	db	32
  2060  00FAA4  63                 	db	99	;'c'
  2061  00FAA5  6F                 	db	111	;'o'
  2062  00FAA6  6D                 	db	109	;'m'
  2063  00FAA7  6D                 	db	109	;'m'
  2064  00FAA8  61                 	db	97	;'a'
  2065  00FAA9  6E                 	db	110	;'n'
  2066  00FAAA  64                 	db	100	;'d'
  2067  00FAAB  73                 	db	115	;'s'
  2068  00FAAC  0A                 	db	10
  2069  00FAAD  0D                 	db	13
  2070  00FAAE  00                 	db	0
  2071  00FAAF                     STR_75:
  2072  00FAAF  49                 	db	73	;'I'
  2073  00FAB0  66                 	db	102	;'f'
  2074  00FAB1  20                 	db	32
  2075  00FAB2  79                 	db	121	;'y'
  2076  00FAB3  6F                 	db	111	;'o'
  2077  00FAB4  75                 	db	117	;'u'
  2078  00FAB5  27                 	db	39
  2079  00FAB6  64                 	db	100	;'d'
  2080  00FAB7  20                 	db	32
  2081  00FAB8  6C                 	db	108	;'l'
  2082  00FAB9  69                 	db	105	;'i'
  2083  00FABA  6B                 	db	107	;'k'
  2084  00FABB  65                 	db	101	;'e'
  2085  00FABC  20                 	db	32
  2086  00FABD  74                 	db	116	;'t'
  2087  00FABE  6F                 	db	111	;'o'
  2088  00FABF  20                 	db	32
  2089  00FAC0  63                 	db	99	;'c'
  2090  00FAC1  6F                 	db	111	;'o'
  2091  00FAC2  6D                 	db	109	;'m'
  2092  00FAC3  70                 	db	112	;'p'
  2093  00FAC4  6C                 	db	108	;'l'
  2094  00FAC5  65                 	db	101	;'e'
  2095  00FAC6  74                 	db	116	;'t'
  2096  00FAC7  65                 	db	101	;'e'
  2097  00FAC8  6C                 	db	108	;'l'
  2098  00FAC9  79                 	db	121	;'y'
  2099  00FACA  20                 	db	32
  2100  00FACB  65                 	db	101	;'e'
  2101  00FACC  6E                 	db	110	;'n'
  2102  00FACD  61                 	db	97	;'a'
  2103  00FACE  62                 	db	98	;'b'
  2104  00FACF  6C                 	db	108	;'l'
  2105  00FAD0  65                 	db	101	;'e'
  2106  00FAD1  20                 	db	32
  2107  00FAD2  6F                 	db	111	;'o'
  2108  00FAD3  72                 	db	114	;'r'
  2109  00FAD4  20                 	db	32
  2110  00FAD5  64                 	db	100	;'d'
  2111  00FAD6  69                 	db	105	;'i'
  2112  00FAD7  73                 	db	115	;'s'
  2113  00FAD8  61                 	db	97	;'a'
  2114  00FAD9  62                 	db	98	;'b'
  2115  00FADA  6C                 	db	108	;'l'
  2116  00FADB  65                 	db	101	;'e'
  2117  00FADC  20                 	db	32
  2118  00FADD  74                 	db	116	;'t'
  2119  00FADE  68                 	db	104	;'h'
  2120  00FADF  65                 	db	101	;'e'
  2121  00FAE0  20                 	db	32
  2122  00FAE1  6C                 	db	108	;'l'
  2123  00FAE2  6F                 	db	111	;'o'
  2124  00FAE3  61                 	db	97	;'a'
  2125  00FAE4  64                 	db	100	;'d'
  2126  00FAE5  2C                 	db	44
  2127  00FAE6  20                 	db	32
  2128  00FAE7  64                 	db	100	;'d'
  2129  00FAE8  69                 	db	105	;'i'
  2130  00FAE9  73                 	db	115	;'s'
  2131  00FAEA  61                 	db	97	;'a'
  2132  00FAEB  62                 	db	98	;'b'
  2133  00FAEC  6C                 	db	108	;'l'
  2134  00FAED  65                 	db	101	;'e'
  2135  00FAEE  20                 	db	32
  2136  00FAEF  64                 	db	100	;'d'
  2137  00FAF0  69                 	db	105	;'i'
  2138  00FAF1  6D                 	db	109	;'m'
  2139  00FAF2  6D                 	db	109	;'m'
  2140  00FAF3  69                 	db	105	;'i'
  2141  00FAF4  6E                 	db	110	;'n'
  2142  00FAF5  67                 	db	103	;'g'
  2143  00FAF6  20                 	db	32
  2144  00FAF7  61                 	db	97	;'a'
  2145  00FAF8  6E                 	db	110	;'n'
  2146  00FAF9  64                 	db	100	;'d'
  2147  00FAFA  20                 	db	32
  2148  00FAFB  75                 	db	117	;'u'
  2149  00FAFC  73                 	db	115	;'s'
  2150  00FAFD  65                 	db	101	;'e'
  2151  00FAFE  20                 	db	32
  2152  00FAFF  72                 	db	114	;'r'
  2153  00FB00  65                 	db	101	;'e'
  2154  00FB01  73                 	db	115	;'s'
  2155  00FB02  70                 	db	112	;'p'
  2156  00FB03  65                 	db	101	;'e'
  2157  00FB04  63                 	db	99	;'c'
  2158  00FB05  74                 	db	116	;'t'
  2159  00FB06  69                 	db	105	;'i'
  2160  00FB07  76                 	db	118	;'v'
  2161  00FB08  65                 	db	101	;'e'
  2162  00FB09  20                 	db	32
  2163  00FB0A  63                 	db	99	;'c'
  2164  00FB0B  6F                 	db	111	;'o'
  2165  00FB0C  6D                 	db	109	;'m'
  2166  00FB0D  6D                 	db	109	;'m'
  2167  00FB0E  61                 	db	97	;'a'
  2168  00FB0F  6E                 	db	110	;'n'
  2169  00FB10  64                 	db	100	;'d'
  2170  00FB11  73                 	db	115	;'s'
  2171  00FB12  0A                 	db	10
  2172  00FB13  0D                 	db	13
  2173  00FB14  00                 	db	0
  2174  00FB15                     STR_74:
  2175  00FB15  45                 	db	69	;'E'
  2176  00FB16  52                 	db	82	;'R'
  2177  00FB17  52                 	db	82	;'R'
  2178  00FB18  4F                 	db	79	;'O'
  2179  00FB19  52                 	db	82	;'R'
  2180  00FB1A  3A                 	db	58	;':'
  2181  00FB1B  20                 	db	32
  2182  00FB1C  50                 	db	80	;'P'
  2183  00FB1D  6C                 	db	108	;'l'
  2184  00FB1E  65                 	db	101	;'e'
  2185  00FB1F  61                 	db	97	;'a'
  2186  00FB20  73                 	db	115	;'s'
  2187  00FB21  65                 	db	101	;'e'
  2188  00FB22  20                 	db	32
  2189  00FB23  73                 	db	115	;'s'
  2190  00FB24  65                 	db	101	;'e'
  2191  00FB25  74                 	db	116	;'t'
  2192  00FB26  20                 	db	32
  2193  00FB27  64                 	db	100	;'d'
  2194  00FB28  69                 	db	105	;'i'
  2195  00FB29  6D                 	db	109	;'m'
  2196  00FB2A  6D                 	db	109	;'m'
  2197  00FB2B  69                 	db	105	;'i'
  2198  00FB2C  6E                 	db	110	;'n'
  2199  00FB2D  67                 	db	103	;'g'
  2200  00FB2E  20                 	db	32
  2201  00FB2F  70                 	db	112	;'p'
  2202  00FB30  65                 	db	101	;'e'
  2203  00FB31  72                 	db	114	;'r'
  2204  00FB32  63                 	db	99	;'c'
  2205  00FB33  65                 	db	101	;'e'
  2206  00FB34  6E                 	db	110	;'n'
  2207  00FB35  74                 	db	116	;'t'
  2208  00FB36  61                 	db	97	;'a'
  2209  00FB37  67                 	db	103	;'g'
  2210  00FB38  65                 	db	101	;'e'
  2211  00FB39  20                 	db	32
  2212  00FB3A  74                 	db	116	;'t'
  2213  00FB3B  6F                 	db	111	;'o'
  2214  00FB3C  20                 	db	32
  2215  00FB3D  61                 	db	97	;'a'
  2216  00FB3E  6E                 	db	110	;'n'
  2217  00FB3F  20                 	db	32
  2218  00FB40  69                 	db	105	;'i'
  2219  00FB41  6E                 	db	110	;'n'
  2220  00FB42  74                 	db	116	;'t'
  2221  00FB43  65                 	db	101	;'e'
  2222  00FB44  67                 	db	103	;'g'
  2223  00FB45  65                 	db	101	;'e'
  2224  00FB46  72                 	db	114	;'r'
  2225  00FB47  20                 	db	32
  2226  00FB48  67                 	db	103	;'g'
  2227  00FB49  72                 	db	114	;'r'
  2228  00FB4A  65                 	db	101	;'e'
  2229  00FB4B  61                 	db	97	;'a'
  2230  00FB4C  74                 	db	116	;'t'
  2231  00FB4D  65                 	db	101	;'e'
  2232  00FB4E  72                 	db	114	;'r'
  2233  00FB4F  20                 	db	32
  2234  00FB50  74                 	db	116	;'t'
  2235  00FB51  68                 	db	104	;'h'
  2236  00FB52  61                 	db	97	;'a'
  2237  00FB53  6E                 	db	110	;'n'
  2238  00FB54  20                 	db	32
  2239  00FB55  30                 	db	48	;'0'
  2240  00FB56  20                 	db	32
  2241  00FB57  61                 	db	97	;'a'
  2242  00FB58  6E                 	db	110	;'n'
  2243  00FB59  64                 	db	100	;'d'
  2244  00FB5A  20                 	db	32
  2245  00FB5B  6C                 	db	108	;'l'
  2246  00FB5C  65                 	db	101	;'e'
  2247  00FB5D  73                 	db	115	;'s'
  2248  00FB5E  73                 	db	115	;'s'
  2249  00FB5F  20                 	db	32
  2250  00FB60  74                 	db	116	;'t'
  2251  00FB61  68                 	db	104	;'h'
  2252  00FB62  61                 	db	97	;'a'
  2253  00FB63  6E                 	db	110	;'n'
  2254  00FB64  20                 	db	32
  2255  00FB65  31                 	db	49	;'1'
  2256  00FB66  30                 	db	48	;'0'
  2257  00FB67  30                 	db	48	;'0'
  2258  00FB68  0A                 	db	10
  2259  00FB69  0D                 	db	13
  2260  00FB6A  00                 	db	0
  2261  00FB6B                     STR_78:
  2262  00FB6B  54                 	db	84	;'T'
  2263  00FB6C  68                 	db	104	;'h'
  2264  00FB6D  69                 	db	105	;'i'
  2265  00FB6E  73                 	db	115	;'s'
  2266  00FB6F  20                 	db	32
  2267  00FB70  63                 	db	99	;'c'
  2268  00FB71  6F                 	db	111	;'o'
  2269  00FB72  72                 	db	114	;'r'
  2270  00FB73  72                 	db	114	;'r'
  2271  00FB74  65                 	db	101	;'e'
  2272  00FB75  73                 	db	115	;'s'
  2273  00FB76  70                 	db	112	;'p'
  2274  00FB77  6F                 	db	111	;'o'
  2275  00FB78  6E                 	db	110	;'n'
  2276  00FB79  64                 	db	100	;'d'
  2277  00FB7A  73                 	db	115	;'s'
  2278  00FB7B  20                 	db	32
  2279  00FB7C  74                 	db	116	;'t'
  2280  00FB7D  6F                 	db	111	;'o'
  2281  00FB7E  20                 	db	32
  2282  00FB7F  61                 	db	97	;'a'
  2283  00FB80  20                 	db	32
  2284  00FB81  31                 	db	49	;'1'
  2285  00FB82  36                 	db	54	;'6'
  2286  00FB83  20                 	db	32
  2287  00FB84  62                 	db	98	;'b'
  2288  00FB85  69                 	db	105	;'i'
  2289  00FB86  74                 	db	116	;'t'
  2290  00FB87  20                 	db	32
  2291  00FB88  70                 	db	112	;'p'
  2292  00FB89  65                 	db	101	;'e'
  2293  00FB8A  72                 	db	114	;'r'
  2294  00FB8B  69                 	db	105	;'i'
  2295  00FB8C  6F                 	db	111	;'o'
  2296  00FB8D  64                 	db	100	;'d'
  2297  00FB8E  20                 	db	32
  2298  00FB8F  76                 	db	118	;'v'
  2299  00FB90  61                 	db	97	;'a'
  2300  00FB91  6C                 	db	108	;'l'
  2301  00FB92  75                 	db	117	;'u'
  2302  00FB93  65                 	db	101	;'e'
  2303  00FB94  20                 	db	32
  2304  00FB95  6F                 	db	111	;'o'
  2305  00FB96  66                 	db	102	;'f'
  2306  00FB97  20                 	db	32
  2307  00FB98  30                 	db	48	;'0'
  2308  00FB99  78                 	db	120	;'x'
  2309  00FB9A  25                 	db	37
  2310  00FB9B  58                 	db	88	;'X'
  2311  00FB9C  20                 	db	32
  2312  00FB9D  28                 	db	40
  2313  00FB9E  25                 	db	37
  2314  00FB9F  75                 	db	117	;'u'
  2315  00FBA0  20                 	db	32
  2316  00FBA1  4C                 	db	76	;'L'
  2317  00FBA2  53                 	db	83	;'S'
  2318  00FBA3  42                 	db	66	;'B'
  2319  00FBA4  73                 	db	115	;'s'
  2320  00FBA5  29                 	db	41
  2321  00FBA6  20                 	db	32
  2322  00FBA7  0A                 	db	10
  2323  00FBA8  0D                 	db	13
  2324  00FBA9  00                 	db	0
  2325  00FBAA                     STR_77:
  2326  00FBAA  43                 	db	67	;'C'
  2327  00FBAB  61                 	db	97	;'a'
  2328  00FBAC  6C                 	db	108	;'l'
  2329  00FBAD  63                 	db	99	;'c'
  2330  00FBAE  75                 	db	117	;'u'
  2331  00FBAF  6C                 	db	108	;'l'
  2332  00FBB0  61                 	db	97	;'a'
  2333  00FBB1  74                 	db	116	;'t'
  2334  00FBB2  65                 	db	101	;'e'
  2335  00FBB3  64                 	db	100	;'d'
  2336  00FBB4  20                 	db	32
  2337  00FBB5  54                 	db	84	;'T'
  2338  00FBB6  52                 	db	82	;'R'
  2339  00FBB7  49                 	db	73	;'I'
  2340  00FBB8  41                 	db	65	;'A'
  2341  00FBB9  43                 	db	67	;'C'
  2342  00FBBA  20                 	db	32
  2343  00FBBB  66                 	db	102	;'f'
  2344  00FBBC  69                 	db	105	;'i'
  2345  00FBBD  72                 	db	114	;'r'
  2346  00FBBE  69                 	db	105	;'i'
  2347  00FBBF  6E                 	db	110	;'n'
  2348  00FBC0  67                 	db	103	;'g'
  2349  00FBC1  20                 	db	32
  2350  00FBC2  61                 	db	97	;'a'
  2351  00FBC3  6E                 	db	110	;'n'
  2352  00FBC4  67                 	db	103	;'g'
  2353  00FBC5  6C                 	db	108	;'l'
  2354  00FBC6  65                 	db	101	;'e'
  2355  00FBC7  20                 	db	32
  2356  00FBC8  69                 	db	105	;'i'
  2357  00FBC9  73                 	db	115	;'s'
  2358  00FBCA  20                 	db	32
  2359  00FBCB  25                 	db	37
  2360  00FBCC  2E                 	db	46
  2361  00FBCD  33                 	db	51	;'3'
  2362  00FBCE  66                 	db	102	;'f'
  2363  00FBCF  20                 	db	32
  2364  00FBD0  72                 	db	114	;'r'
  2365  00FBD1  61                 	db	97	;'a'
  2366  00FBD2  64                 	db	100	;'d'
  2367  00FBD3  69                 	db	105	;'i'
  2368  00FBD4  61                 	db	97	;'a'
  2369  00FBD5  6E                 	db	110	;'n'
  2370  00FBD6  73                 	db	115	;'s'
  2371  00FBD7  20                 	db	32
  2372  00FBD8  28                 	db	40
  2373  00FBD9  25                 	db	37
  2374  00FBDA  2E                 	db	46
  2375  00FBDB  33                 	db	51	;'3'
  2376  00FBDC  66                 	db	102	;'f'
  2377  00FBDD  20                 	db	32
  2378  00FBDE  64                 	db	100	;'d'
  2379  00FBDF  65                 	db	101	;'e'
  2380  00FBE0  67                 	db	103	;'g'
  2381  00FBE1  72                 	db	114	;'r'
  2382  00FBE2  65                 	db	101	;'e'
  2383  00FBE3  65                 	db	101	;'e'
  2384  00FBE4  73                 	db	115	;'s'
  2385  00FBE5  29                 	db	41
  2386  00FBE6  0A                 	db	10
  2387  00FBE7  0D                 	db	13
  2388  00FBE8  00                 	db	0
  2389  00FBE9                     STR_80:
  2390  00FBE9  44                 	db	68	;'D'
  2391  00FBEA  65                 	db	101	;'e'
  2392  00FBEB  76                 	db	118	;'v'
  2393  00FBEC  69                 	db	105	;'i'
  2394  00FBED  63                 	db	99	;'c'
  2395  00FBEE  65                 	db	101	;'e'
  2396  00FBEF  20                 	db	32
  2397  00FBF0  6F                 	db	111	;'o'
  2398  00FBF1  6E                 	db	110	;'n'
  2399  00FBF2  20                 	db	32
  2400  00FBF3  74                 	db	116	;'t'
  2401  00FBF4  69                 	db	105	;'i'
  2402  00FBF5  6D                 	db	109	;'m'
  2403  00FBF6  65                 	db	101	;'e'
  2404  00FBF7  20                 	db	32
  2405  00FBF8  73                 	db	115	;'s'
  2406  00FBF9  69                 	db	105	;'i'
  2407  00FBFA  6E                 	db	110	;'n'
  2408  00FBFB  63                 	db	99	;'c'
  2409  00FBFC  65                 	db	101	;'e'
  2410  00FBFD  20                 	db	32
  2411  00FBFE  6C                 	db	108	;'l'
  2412  00FBFF  61                 	db	97	;'a'
  2413  00FC00  73                 	db	115	;'s'
  2414  00FC01  74                 	db	116	;'t'
  2415  00FC02  20                 	db	32
  2416  00FC03  72                 	db	114	;'r'
  2417  00FC04  65                 	db	101	;'e'
  2418  00FC05  73                 	db	115	;'s'
  2419  00FC06  65                 	db	101	;'e'
  2420  00FC07  74                 	db	116	;'t'
  2421  00FC08  20                 	db	32
  2422  00FC09  63                 	db	99	;'c'
  2423  00FC0A  6F                 	db	111	;'o'
  2424  00FC0B  6E                 	db	110	;'n'
  2425  00FC0C  64                 	db	100	;'d'
  2426  00FC0D  69                 	db	105	;'i'
  2427  00FC0E  74                 	db	116	;'t'
  2428  00FC0F  69                 	db	105	;'i'
  2429  00FC10  6F                 	db	111	;'o'
  2430  00FC11  6E                 	db	110	;'n'
  2431  00FC12  20                 	db	32
  2432  00FC13  69                 	db	105	;'i'
  2433  00FC14  73                 	db	115	;'s'
  2434  00FC15  20                 	db	32
  2435  00FC16  25                 	db	37
  2436  00FC17  64                 	db	100	;'d'
  2437  00FC18  20                 	db	32
  2438  00FC19  73                 	db	115	;'s'
  2439  00FC1A  65                 	db	101	;'e'
  2440  00FC1B  63                 	db	99	;'c'
  2441  00FC1C  6F                 	db	111	;'o'
  2442  00FC1D  6E                 	db	110	;'n'
  2443  00FC1E  64                 	db	100	;'d'
  2444  00FC1F  73                 	db	115	;'s'
  2445  00FC20  0A                 	db	10
  2446  00FC21  0D                 	db	13
  2447  00FC22  00                 	db	0
  2448  00FC23                     STR_58:
  2449  00FC23  46                 	db	70	;'F'
  2450  00FC24  69                 	db	105	;'i'
  2451  00FC25  78                 	db	120	;'x'
  2452  00FC26  65                 	db	101	;'e'
  2453  00FC27  64                 	db	100	;'d'
  2454  00FC28  20                 	db	32
  2455  00FC29  56                 	db	86	;'V'
  2456  00FC2A  6F                 	db	111	;'o'
  2457  00FC2B  6C                 	db	108	;'l'
  2458  00FC2C  74                 	db	116	;'t'
  2459  00FC2D  61                 	db	97	;'a'
  2460  00FC2E  67                 	db	103	;'g'
  2461  00FC2F  65                 	db	101	;'e'
  2462  00FC30  20                 	db	32
  2463  00FC31  52                 	db	82	;'R'
  2464  00FC32  65                 	db	101	;'e'
  2465  00FC33  66                 	db	102	;'f'
  2466  00FC34  65                 	db	101	;'e'
  2467  00FC35  72                 	db	114	;'r'
  2468  00FC36  65                 	db	101	;'e'
  2469  00FC37  6E                 	db	110	;'n'
  2470  00FC38  63                 	db	99	;'c'
  2471  00FC39  65                 	db	101	;'e'
  2472  00FC3A  20                 	db	32
  2473  00FC3B  42                 	db	66	;'B'
  2474  00FC3C  75                 	db	117	;'u'
  2475  00FC3D  66                 	db	102	;'f'
  2476  00FC3E  66                 	db	102	;'f'
  2477  00FC3F  65                 	db	101	;'e'
  2478  00FC40  72                 	db	114	;'r'
  2479  00FC41  20                 	db	32
  2480  00FC42  31                 	db	49	;'1'
  2481  00FC43  20                 	db	32
  2482  00FC44  6D                 	db	109	;'m'
  2483  00FC45  65                 	db	101	;'e'
  2484  00FC46  61                 	db	97	;'a'
  2485  00FC47  73                 	db	115	;'s'
  2486  00FC48  75                 	db	117	;'u'
  2487  00FC49  72                 	db	114	;'r'
  2488  00FC4A  65                 	db	101	;'e'
  2489  00FC4B  64                 	db	100	;'d'
  2490  00FC4C  20                 	db	32
  2491  00FC4D  61                 	db	97	;'a'
  2492  00FC4E  73                 	db	115	;'s'
  2493  00FC4F  20                 	db	32
  2494  00FC50  25                 	db	37
  2495  00FC51  66                 	db	102	;'f'
  2496  00FC52  20                 	db	32
  2497  00FC53  56                 	db	86	;'V'
  2498  00FC54  6F                 	db	111	;'o'
  2499  00FC55  6C                 	db	108	;'l'
  2500  00FC56  74                 	db	116	;'t'
  2501  00FC57  73                 	db	115	;'s'
  2502  00FC58  0A                 	db	10
  2503  00FC59  0D                 	db	13
  2504  00FC5A  00                 	db	0
  2505  00FC5B                     STR_50:
  2506  00FC5B  4D                 	db	77	;'M'
  2507  00FC5C  61                 	db	97	;'a'
  2508  00FC5D  72                 	db	114	;'r'
  2509  00FC5E  71                 	db	113	;'q'
  2510  00FC5F  75                 	db	117	;'u'
  2511  00FC60  65                 	db	101	;'e'
  2512  00FC61  74                 	db	116	;'t'
  2513  00FC62  74                 	db	116	;'t'
  2514  00FC63  65                 	db	101	;'e'
  2515  00FC64  20                 	db	32
  2516  00FC65  55                 	db	85	;'U'
  2517  00FC66  6E                 	db	110	;'n'
  2518  00FC67  69                 	db	105	;'i'
  2519  00FC68  76                 	db	118	;'v'
  2520  00FC69  65                 	db	101	;'e'
  2521  00FC6A  72                 	db	114	;'r'
  2522  00FC6B  73                 	db	115	;'s'
  2523  00FC6C  69                 	db	105	;'i'
  2524  00FC6D  74                 	db	116	;'t'
  2525  00FC6E  79                 	db	121	;'y'
  2526  00FC6F  20                 	db	32
  2527  00FC70  45                 	db	69	;'E'
  2528  00FC71  4C                 	db	76	;'L'
  2529  00FC72  45                 	db	69	;'E'
  2530  00FC73  4E                 	db	78	;'N'
  2531  00FC74  20                 	db	32
  2532  00FC75  33                 	db	51	;'3'
  2533  00FC76  30                 	db	48	;'0'
  2534  00FC77  33                 	db	51	;'3'
  2535  00FC78  35                 	db	53	;'5'
  2536  00FC79  20                 	db	32
  2537  00FC7A  46                 	db	70	;'F'
  2538  00FC7B  69                 	db	105	;'i'
  2539  00FC7C  6E                 	db	110	;'n'
  2540  00FC7D  61                 	db	97	;'a'
  2541  00FC7E  6C                 	db	108	;'l'
  2542  00FC7F  20                 	db	32
  2543  00FC80  50                 	db	80	;'P'
  2544  00FC81  72                 	db	114	;'r'
  2545  00FC82  6F                 	db	111	;'o'
  2546  00FC83  6A                 	db	106	;'j'
  2547  00FC84  65                 	db	101	;'e'
  2548  00FC85  63                 	db	99	;'c'
  2549  00FC86  74                 	db	116	;'t'
  2550  00FC87  0A                 	db	10
  2551  00FC88  0D                 	db	13
  2552  00FC89  00                 	db	0
  2553  00FC8A                     STR_68:
  2554  00FC8A  54                 	db	84	;'T'
  2555  00FC8B  52                 	db	82	;'R'
  2556  00FC8C  49                 	db	73	;'I'
  2557  00FC8D  41                 	db	65	;'A'
  2558  00FC8E  43                 	db	67	;'C'
  2559  00FC8F  20                 	db	32
  2560  00FC90  6F                 	db	111	;'o'
  2561  00FC91  75                 	db	117	;'u'
  2562  00FC92  74                 	db	116	;'t'
  2563  00FC93  70                 	db	112	;'p'
  2564  00FC94  75                 	db	117	;'u'
  2565  00FC95  74                 	db	116	;'t'
  2566  00FC96  20                 	db	32
  2567  00FC97  64                 	db	100	;'d'
  2568  00FC98  69                 	db	105	;'i'
  2569  00FC99  6D                 	db	109	;'m'
  2570  00FC9A  6D                 	db	109	;'m'
  2571  00FC9B  69                 	db	105	;'i'
  2572  00FC9C  6E                 	db	110	;'n'
  2573  00FC9D  67                 	db	103	;'g'
  2574  00FC9E  20                 	db	32
  2575  00FC9F  68                 	db	104	;'h'
  2576  00FCA0  61                 	db	97	;'a'
  2577  00FCA1  73                 	db	115	;'s'
  2578  00FCA2  20                 	db	32
  2579  00FCA3  62                 	db	98	;'b'
  2580  00FCA4  65                 	db	101	;'e'
  2581  00FCA5  65                 	db	101	;'e'
  2582  00FCA6  6E                 	db	110	;'n'
  2583  00FCA7  20                 	db	32
  2584  00FCA8  64                 	db	100	;'d'
  2585  00FCA9  69                 	db	105	;'i'
  2586  00FCAA  73                 	db	115	;'s'
  2587  00FCAB  61                 	db	97	;'a'
  2588  00FCAC  62                 	db	98	;'b'
  2589  00FCAD  6C                 	db	108	;'l'
  2590  00FCAE  65                 	db	101	;'e'
  2591  00FCAF  64                 	db	100	;'d'
  2592  00FCB0  0A                 	db	10
  2593  00FCB1  0D                 	db	13
  2594  00FCB2  00                 	db	0
  2595  00FCB3                     STR_66:
  2596  00FCB3  54                 	db	84	;'T'
  2597  00FCB4  52                 	db	82	;'R'
  2598  00FCB5  49                 	db	73	;'I'
  2599  00FCB6  41                 	db	65	;'A'
  2600  00FCB7  43                 	db	67	;'C'
  2601  00FCB8  20                 	db	32
  2602  00FCB9  6F                 	db	111	;'o'
  2603  00FCBA  75                 	db	117	;'u'
  2604  00FCBB  74                 	db	116	;'t'
  2605  00FCBC  70                 	db	112	;'p'
  2606  00FCBD  75                 	db	117	;'u'
  2607  00FCBE  74                 	db	116	;'t'
  2608  00FCBF  20                 	db	32
  2609  00FCC0  64                 	db	100	;'d'
  2610  00FCC1  69                 	db	105	;'i'
  2611  00FCC2  6D                 	db	109	;'m'
  2612  00FCC3  6D                 	db	109	;'m'
  2613  00FCC4  69                 	db	105	;'i'
  2614  00FCC5  6E                 	db	110	;'n'
  2615  00FCC6  67                 	db	103	;'g'
  2616  00FCC7  20                 	db	32
  2617  00FCC8  68                 	db	104	;'h'
  2618  00FCC9  61                 	db	97	;'a'
  2619  00FCCA  73                 	db	115	;'s'
  2620  00FCCB  20                 	db	32
  2621  00FCCC  62                 	db	98	;'b'
  2622  00FCCD  65                 	db	101	;'e'
  2623  00FCCE  65                 	db	101	;'e'
  2624  00FCCF  6E                 	db	110	;'n'
  2625  00FCD0  20                 	db	32
  2626  00FCD1  65                 	db	101	;'e'
  2627  00FCD2  6E                 	db	110	;'n'
  2628  00FCD3  61                 	db	97	;'a'
  2629  00FCD4  62                 	db	98	;'b'
  2630  00FCD5  6C                 	db	108	;'l'
  2631  00FCD6  65                 	db	101	;'e'
  2632  00FCD7  64                 	db	100	;'d'
  2633  00FCD8  0A                 	db	10
  2634  00FCD9  0D                 	db	13
  2635  00FCDA  00                 	db	0
  2636  00FCDB                     STR_85:
  2637  00FCDB  4D                 	db	77	;'M'
  2638  00FCDC  65                 	db	101	;'e'
  2639  00FCDD  61                 	db	97	;'a'
  2640  00FCDE  73                 	db	115	;'s'
  2641  00FCDF  75                 	db	117	;'u'
  2642  00FCE0  72                 	db	114	;'r'
  2643  00FCE1  65                 	db	101	;'e'
  2644  00FCE2  6D                 	db	109	;'m'
  2645  00FCE3  65                 	db	101	;'e'
  2646  00FCE4  6E                 	db	110	;'n'
  2647  00FCE5  74                 	db	116	;'t'
  2648  00FCE6  73                 	db	115	;'s'
  2649  00FCE7  20                 	db	32
  2650  00FCE8  72                 	db	114	;'r'
  2651  00FCE9  65                 	db	101	;'e'
  2652  00FCEA  73                 	db	115	;'s'
  2653  00FCEB  70                 	db	112	;'p'
  2654  00FCEC  6F                 	db	111	;'o'
  2655  00FCED  6E                 	db	110	;'n'
  2656  00FCEE  73                 	db	115	;'s'
  2657  00FCEF  65                 	db	101	;'e'
  2658  00FCF0  73                 	db	115	;'s'
  2659  00FCF1  20                 	db	32
  2660  00FCF2  61                 	db	97	;'a'
  2661  00FCF3  70                 	db	112	;'p'
  2662  00FCF4  70                 	db	112	;'p'
  2663  00FCF5  65                 	db	101	;'e'
  2664  00FCF6  61                 	db	97	;'a'
  2665  00FCF7  72                 	db	114	;'r'
  2666  00FCF8  20                 	db	32
  2667  00FCF9  69                 	db	105	;'i'
  2668  00FCFA  6E                 	db	110	;'n'
  2669  00FCFB  20                 	db	32
  2670  00FCFC  63                 	db	99	;'c'
  2671  00FCFD  79                 	db	121	;'y'
  2672  00FCFE  61                 	db	97	;'a'
  2673  00FCFF  6E                 	db	110	;'n'
  2674  00FD00  0A                 	db	10
  2675  00FD01  0D                 	db	13
  2676  00FD02  00                 	db	0
  2677  00FD03                     STR_76:
  2678  00FD03  44                 	db	68	;'D'
  2679  00FD04  69                 	db	105	;'i'
  2680  00FD05  6D                 	db	109	;'m'
  2681  00FD06  6D                 	db	109	;'m'
  2682  00FD07  69                 	db	105	;'i'
  2683  00FD08  6E                 	db	110	;'n'
  2684  00FD09  67                 	db	103	;'g'
  2685  00FD0A  20                 	db	32
  2686  00FD0B  68                 	db	104	;'h'
  2687  00FD0C  61                 	db	97	;'a'
  2688  00FD0D  73                 	db	115	;'s'
  2689  00FD0E  20                 	db	32
  2690  00FD0F  62                 	db	98	;'b'
  2691  00FD10  65                 	db	101	;'e'
  2692  00FD11  65                 	db	101	;'e'
  2693  00FD12  6E                 	db	110	;'n'
  2694  00FD13  20                 	db	32
  2695  00FD14  73                 	db	115	;'s'
  2696  00FD15  65                 	db	101	;'e'
  2697  00FD16  74                 	db	116	;'t'
  2698  00FD17  20                 	db	32
  2699  00FD18  74                 	db	116	;'t'
  2700  00FD19  6F                 	db	111	;'o'
  2701  00FD1A  20                 	db	32
  2702  00FD1B  25                 	db	37
  2703  00FD1C  64                 	db	100	;'d'
  2704  00FD1D  20                 	db	32
  2705  00FD1E  70                 	db	112	;'p'
  2706  00FD1F  65                 	db	101	;'e'
  2707  00FD20  72                 	db	114	;'r'
  2708  00FD21  63                 	db	99	;'c'
  2709  00FD22  65                 	db	101	;'e'
  2710  00FD23  6E                 	db	110	;'n'
  2711  00FD24  74                 	db	116	;'t'
  2712  00FD25  0A                 	db	10
  2713  00FD26  0D                 	db	13
  2714  00FD27  00                 	db	0
  2715  00FD28                     STR_52:
  2716  00FD28  2B                 	db	43
  2717  00FD29  33                 	db	51	;'3'
  2718  00FD2A  2E                 	db	46
  2719  00FD2B  33                 	db	51	;'3'
  2720  00FD2C  56                 	db	86	;'V'
  2721  00FD2D  20                 	db	32
  2722  00FD2E  72                 	db	114	;'r'
  2723  00FD2F  61                 	db	97	;'a'
  2724  00FD30  69                 	db	105	;'i'
  2725  00FD31  6C                 	db	108	;'l'
  2726  00FD32  20                 	db	32
  2727  00FD33  6D                 	db	109	;'m'
  2728  00FD34  65                 	db	101	;'e'
  2729  00FD35  61                 	db	97	;'a'
  2730  00FD36  73                 	db	115	;'s'
  2731  00FD37  75                 	db	117	;'u'
  2732  00FD38  72                 	db	114	;'r'
  2733  00FD39  65                 	db	101	;'e'
  2734  00FD3A  64                 	db	100	;'d'
  2735  00FD3B  20                 	db	32
  2736  00FD3C  61                 	db	97	;'a'
  2737  00FD3D  73                 	db	115	;'s'
  2738  00FD3E  20                 	db	32
  2739  00FD3F  2B                 	db	43
  2740  00FD40  25                 	db	37
  2741  00FD41  66                 	db	102	;'f'
  2742  00FD42  20                 	db	32
  2743  00FD43  56                 	db	86	;'V'
  2744  00FD44  6F                 	db	111	;'o'
  2745  00FD45  6C                 	db	108	;'l'
  2746  00FD46  74                 	db	116	;'t'
  2747  00FD47  73                 	db	115	;'s'
  2748  00FD48  0A                 	db	10
  2749  00FD49  0D                 	db	13
  2750  00FD4A  00                 	db	0
  2751  00FD4B                     STR_56:
  2752  00FD4B  44                 	db	68	;'D'
  2753  00FD4C  69                 	db	105	;'i'
  2754  00FD4D  65                 	db	101	;'e'
  2755  00FD4E  20                 	db	32
  2756  00FD4F  54                 	db	84	;'T'
  2757  00FD50  65                 	db	101	;'e'
  2758  00FD51  6D                 	db	109	;'m'
  2759  00FD52  70                 	db	112	;'p'
  2760  00FD53  65                 	db	101	;'e'
  2761  00FD54  72                 	db	114	;'r'
  2762  00FD55  61                 	db	97	;'a'
  2763  00FD56  74                 	db	116	;'t'
  2764  00FD57  75                 	db	117	;'u'
  2765  00FD58  72                 	db	114	;'r'
  2766  00FD59  65                 	db	101	;'e'
  2767  00FD5A  20                 	db	32
  2768  00FD5B  6D                 	db	109	;'m'
  2769  00FD5C  65                 	db	101	;'e'
  2770  00FD5D  61                 	db	97	;'a'
  2771  00FD5E  73                 	db	115	;'s'
  2772  00FD5F  75                 	db	117	;'u'
  2773  00FD60  72                 	db	114	;'r'
  2774  00FD61  65                 	db	101	;'e'
  2775  00FD62  64                 	db	100	;'d'
  2776  00FD63  20                 	db	32
  2777  00FD64  61                 	db	97	;'a'
  2778  00FD65  73                 	db	115	;'s'
  2779  00FD66  20                 	db	32
  2780  00FD67  25                 	db	37
  2781  00FD68  66                 	db	102	;'f'
  2782  00FD69  43                 	db	67	;'C'
  2783  00FD6A  0A                 	db	10
  2784  00FD6B  0D                 	db	13
  2785  00FD6C  00                 	db	0
  2786  00FD6D                     STR_62:
  2787  00FD6D  52                 	db	82	;'R'
  2788  00FD6E  4D                 	db	77	;'M'
  2789  00FD6F  53                 	db	83	;'S'
  2790  00FD70  20                 	db	32
  2791  00FD71  4F                 	db	79	;'O'
  2792  00FD72  75                 	db	117	;'u'
  2793  00FD73  74                 	db	116	;'t'
  2794  00FD74  70                 	db	112	;'p'
  2795  00FD75  75                 	db	117	;'u'
  2796  00FD76  74                 	db	116	;'t'
  2797  00FD77  20                 	db	32
  2798  00FD78  43                 	db	67	;'C'
  2799  00FD79  75                 	db	117	;'u'
  2800  00FD7A  72                 	db	114	;'r'
  2801  00FD7B  72                 	db	114	;'r'
  2802  00FD7C  65                 	db	101	;'e'
  2803  00FD7D  6E                 	db	110	;'n'
  2804  00FD7E  74                 	db	116	;'t'
  2805  00FD7F  20                 	db	32
  2806  00FD80  69                 	db	105	;'i'
  2807  00FD81  73                 	db	115	;'s'
  2808  00FD82  20                 	db	32
  2809  00FD83  25                 	db	37
  2810  00FD84  2E                 	db	46
  2811  00FD85  33                 	db	51	;'3'
  2812  00FD86  66                 	db	102	;'f'
  2813  00FD87  20                 	db	32
  2814  00FD88  41                 	db	65	;'A'
  2815  00FD89  72                 	db	114	;'r'
  2816  00FD8A  6D                 	db	109	;'m'
  2817  00FD8B  73                 	db	115	;'s'
  2818  00FD8C  0A                 	db	10
  2819  00FD8D  0D                 	db	13
  2820  00FD8E  00                 	db	0
  2821  00FD8F                     STR_64:
  2822  00FD8F  52                 	db	82	;'R'
  2823  00FD90  4D                 	db	77	;'M'
  2824  00FD91  53                 	db	83	;'S'
  2825  00FD92  20                 	db	32
  2826  00FD93  4F                 	db	79	;'O'
  2827  00FD94  75                 	db	117	;'u'
  2828  00FD95  74                 	db	116	;'t'
  2829  00FD96  70                 	db	112	;'p'
  2830  00FD97  75                 	db	117	;'u'
  2831  00FD98  74                 	db	116	;'t'
  2832  00FD99  20                 	db	32
  2833  00FD9A  56                 	db	86	;'V'
  2834  00FD9B  6F                 	db	111	;'o'
  2835  00FD9C  6C                 	db	108	;'l'
  2836  00FD9D  74                 	db	116	;'t'
  2837  00FD9E  61                 	db	97	;'a'
  2838  00FD9F  67                 	db	103	;'g'
  2839  00FDA0  65                 	db	101	;'e'
  2840  00FDA1  20                 	db	32
  2841  00FDA2  69                 	db	105	;'i'
  2842  00FDA3  73                 	db	115	;'s'
  2843  00FDA4  20                 	db	32
  2844  00FDA5  25                 	db	37
  2845  00FDA6  2E                 	db	46
  2846  00FDA7  33                 	db	51	;'3'
  2847  00FDA8  66                 	db	102	;'f'
  2848  00FDA9  20                 	db	32
  2849  00FDAA  56                 	db	86	;'V'
  2850  00FDAB  72                 	db	114	;'r'
  2851  00FDAC  6D                 	db	109	;'m'
  2852  00FDAD  73                 	db	115	;'s'
  2853  00FDAE  0A                 	db	10
  2854  00FDAF  0D                 	db	13
  2855  00FDB0  00                 	db	0
  2856  00FDB1                     STR_54:
  2857  00FDB1  2B                 	db	43
  2858  00FDB2  31                 	db	49	;'1'
  2859  00FDB3  32                 	db	50	;'2'
  2860  00FDB4  56                 	db	86	;'V'
  2861  00FDB5  20                 	db	32
  2862  00FDB6  72                 	db	114	;'r'
  2863  00FDB7  61                 	db	97	;'a'
  2864  00FDB8  69                 	db	105	;'i'
  2865  00FDB9  6C                 	db	108	;'l'
  2866  00FDBA  20                 	db	32
  2867  00FDBB  6D                 	db	109	;'m'
  2868  00FDBC  65                 	db	101	;'e'
  2869  00FDBD  61                 	db	97	;'a'
  2870  00FDBE  73                 	db	115	;'s'
  2871  00FDBF  75                 	db	117	;'u'
  2872  00FDC0  72                 	db	114	;'r'
  2873  00FDC1  65                 	db	101	;'e'
  2874  00FDC2  64                 	db	100	;'d'
  2875  00FDC3  20                 	db	32
  2876  00FDC4  61                 	db	97	;'a'
  2877  00FDC5  73                 	db	115	;'s'
  2878  00FDC6  20                 	db	32
  2879  00FDC7  2B                 	db	43
  2880  00FDC8  25                 	db	37
  2881  00FDC9  66                 	db	102	;'f'
  2882  00FDCA  20                 	db	32
  2883  00FDCB  56                 	db	86	;'V'
  2884  00FDCC  6F                 	db	111	;'o'
  2885  00FDCD  6C                 	db	108	;'l'
  2886  00FDCE  74                 	db	116	;'t'
  2887  00FDCF  73                 	db	115	;'s'
  2888  00FDD0  0A                 	db	10
  2889  00FDD1  0D                 	db	13
  2890  00FDD2  00                 	db	0
  2891  00FDD3                     STR_83:
  2892  00FDD3  48                 	db	72	;'H'
  2893  00FDD4  65                 	db	101	;'e'
  2894  00FDD5  6C                 	db	108	;'l'
  2895  00FDD6  70                 	db	112	;'p'
  2896  00FDD7  20                 	db	32
  2897  00FDD8  6D                 	db	109	;'m'
  2898  00FDD9  65                 	db	101	;'e'
  2899  00FDDA  73                 	db	115	;'s'
  2900  00FDDB  73                 	db	115	;'s'
  2901  00FDDC  61                 	db	97	;'a'
  2902  00FDDD  67                 	db	103	;'g'
  2903  00FDDE  65                 	db	101	;'e'
  2904  00FDDF  73                 	db	115	;'s'
  2905  00FDE0  20                 	db	32
  2906  00FDE1  61                 	db	97	;'a'
  2907  00FDE2  70                 	db	112	;'p'
  2908  00FDE3  70                 	db	112	;'p'
  2909  00FDE4  65                 	db	101	;'e'
  2910  00FDE5  61                 	db	97	;'a'
  2911  00FDE6  72                 	db	114	;'r'
  2912  00FDE7  20                 	db	32
  2913  00FDE8  69                 	db	105	;'i'
  2914  00FDE9  6E                 	db	110	;'n'
  2915  00FDEA  20                 	db	32
  2916  00FDEB  79                 	db	121	;'y'
  2917  00FDEC  65                 	db	101	;'e'
  2918  00FDED  6C                 	db	108	;'l'
  2919  00FDEE  6C                 	db	108	;'l'
  2920  00FDEF  6F                 	db	111	;'o'
  2921  00FDF0  77                 	db	119	;'w'
  2922  00FDF1  0A                 	db	10
  2923  00FDF2  0D                 	db	13
  2924  00FDF3  00                 	db	0
  2925  00FDF4                     STR_60:
  2926  00FDF4  4D                 	db	77	;'M'
  2927  00FDF5  65                 	db	101	;'e'
  2928  00FDF6  61                 	db	97	;'a'
  2929  00FDF7  73                 	db	115	;'s'
  2930  00FDF8  75                 	db	117	;'u'
  2931  00FDF9  72                 	db	114	;'r'
  2932  00FDFA  65                 	db	101	;'e'
  2933  00FDFB  64                 	db	100	;'d'
  2934  00FDFC  20                 	db	32
  2935  00FDFD  43                 	db	67	;'C'
  2936  00FDFE  75                 	db	117	;'u'
  2937  00FDFF  72                 	db	114	;'r'
  2938  00FE00  72                 	db	114	;'r'
  2939  00FE01  65                 	db	101	;'e'
  2940  00FE02  6E                 	db	110	;'n'
  2941  00FE03  74                 	db	116	;'t'
  2942  00FE04  20                 	db	32
  2943  00FE05  69                 	db	105	;'i'
  2944  00FE06  73                 	db	115	;'s'
  2945  00FE07  20                 	db	32
  2946  00FE08  25                 	db	37
  2947  00FE09  2E                 	db	46
  2948  00FE0A  33                 	db	51	;'3'
  2949  00FE0B  66                 	db	102	;'f'
  2950  00FE0C  20                 	db	32
  2951  00FE0D  41                 	db	65	;'A'
  2952  00FE0E  6D                 	db	109	;'m'
  2953  00FE0F  70                 	db	112	;'p'
  2954  00FE10  73                 	db	115	;'s'
  2955  00FE11  0A                 	db	10
  2956  00FE12  0D                 	db	13
  2957  00FE13  00                 	db	0
  2958  00FE14                     STR_87:
  2959  00FE14  55                 	db	85	;'U'
  2960  00FE15  73                 	db	115	;'s'
  2961  00FE16  65                 	db	101	;'e'
  2962  00FE17  72                 	db	114	;'r'
  2963  00FE18  20                 	db	32
  2964  00FE19  69                 	db	105	;'i'
  2965  00FE1A  6E                 	db	110	;'n'
  2966  00FE1B  70                 	db	112	;'p'
  2967  00FE1C  75                 	db	117	;'u'
  2968  00FE1D  74                 	db	116	;'t'
  2969  00FE1E  20                 	db	32
  2970  00FE1F  61                 	db	97	;'a'
  2971  00FE20  70                 	db	112	;'p'
  2972  00FE21  70                 	db	112	;'p'
  2973  00FE22  65                 	db	101	;'e'
  2974  00FE23  61                 	db	97	;'a'
  2975  00FE24  72                 	db	114	;'r'
  2976  00FE25  73                 	db	115	;'s'
  2977  00FE26  20                 	db	32
  2978  00FE27  69                 	db	105	;'i'
  2979  00FE28  6E                 	db	110	;'n'
  2980  00FE29  20                 	db	32
  2981  00FE2A  77                 	db	119	;'w'
  2982  00FE2B  68                 	db	104	;'h'
  2983  00FE2C  69                 	db	105	;'i'
  2984  00FE2D  74                 	db	116	;'t'
  2985  00FE2E  65                 	db	101	;'e'
  2986  00FE2F  0A                 	db	10
  2987  00FE30  0D                 	db	13
  2988  00FE31  00                 	db	0
  2989  00FE32                     STR_84:
  2990  00FE32  49                 	db	73	;'I'
  2991  00FE33  44                 	db	68	;'D'
  2992  00FE34  4E                 	db	78	;'N'
  2993  00FE35  20                 	db	32
  2994  00FE36  73                 	db	115	;'s'
  2995  00FE37  74                 	db	116	;'t'
  2996  00FE38  72                 	db	114	;'r'
  2997  00FE39  69                 	db	105	;'i'
  2998  00FE3A  6E                 	db	110	;'n'
  2999  00FE3B  67                 	db	103	;'g'
  3000  00FE3C  20                 	db	32
  3001  00FE3D  61                 	db	97	;'a'
  3002  00FE3E  70                 	db	112	;'p'
  3003  00FE3F  70                 	db	112	;'p'
  3004  00FE40  65                 	db	101	;'e'
  3005  00FE41  61                 	db	97	;'a'
  3006  00FE42  72                 	db	114	;'r'
  3007  00FE43  73                 	db	115	;'s'
  3008  00FE44  20                 	db	32
  3009  00FE45  69                 	db	105	;'i'
  3010  00FE46  6E                 	db	110	;'n'
  3011  00FE47  20                 	db	32
  3012  00FE48  67                 	db	103	;'g'
  3013  00FE49  72                 	db	114	;'r'
  3014  00FE4A  65                 	db	101	;'e'
  3015  00FE4B  65                 	db	101	;'e'
  3016  00FE4C  6E                 	db	110	;'n'
  3017  00FE4D  0A                 	db	10
  3018  00FE4E  0D                 	db	13
  3019  00FE4F  00                 	db	0
  3020  00FE50                     STR_59:
  3021  00FE50  4D                 	db	77	;'M'
  3022  00FE51  65                 	db	101	;'e'
  3023  00FE52  61                 	db	97	;'a'
  3024  00FE53  73                 	db	115	;'s'
  3025  00FE54  75                 	db	117	;'u'
  3026  00FE55  72                 	db	114	;'r'
  3027  00FE56  65                 	db	101	;'e'
  3028  00FE57  20                 	db	32
  3029  00FE58  44                 	db	68	;'D'
  3030  00FE59  65                 	db	101	;'e'
  3031  00FE5A  74                 	db	116	;'t'
  3032  00FE5B  65                 	db	101	;'e'
  3033  00FE5C  63                 	db	99	;'c'
  3034  00FE5D  74                 	db	116	;'t'
  3035  00FE5E  65                 	db	101	;'e'
  3036  00FE5F  64                 	db	100	;'d'
  3037  00FE60  20                 	db	32
  3038  00FE61  43                 	db	67	;'C'
  3039  00FE62  75                 	db	117	;'u'
  3040  00FE63  72                 	db	114	;'r'
  3041  00FE64  72                 	db	114	;'r'
  3042  00FE65  65                 	db	101	;'e'
  3043  00FE66  6E                 	db	110	;'n'
  3044  00FE67  74                 	db	116	;'t'
  3045  00FE68  3F                 	db	63	;'?'
  3046  00FE69  00                 	db	0
  3047  00FE6A                     STR_72:
  3048  00FE6A  4C                 	db	76	;'L'
  3049  00FE6B  6F                 	db	111	;'o'
  3050  00FE6C  61                 	db	97	;'a'
  3051  00FE6D  64                 	db	100	;'d'
  3052  00FE6E  20                 	db	32
  3053  00FE6F  68                 	db	104	;'h'
  3054  00FE70  61                 	db	97	;'a'
  3055  00FE71  73                 	db	115	;'s'
  3056  00FE72  20                 	db	32
  3057  00FE73  62                 	db	98	;'b'
  3058  00FE74  65                 	db	101	;'e'
  3059  00FE75  65                 	db	101	;'e'
  3060  00FE76  6E                 	db	110	;'n'
  3061  00FE77  20                 	db	32
  3062  00FE78  64                 	db	100	;'d'
  3063  00FE79  69                 	db	105	;'i'
  3064  00FE7A  73                 	db	115	;'s'
  3065  00FE7B  61                 	db	97	;'a'
  3066  00FE7C  62                 	db	98	;'b'
  3067  00FE7D  6C                 	db	108	;'l'
  3068  00FE7E  65                 	db	101	;'e'
  3069  00FE7F  64                 	db	100	;'d'
  3070  00FE80  0A                 	db	10
  3071  00FE81  0D                 	db	13
  3072  00FE82  00                 	db	0
  3073  00FE83                     STR_70:
  3074  00FE83  4C                 	db	76	;'L'
  3075  00FE84  6F                 	db	111	;'o'
  3076  00FE85  61                 	db	97	;'a'
  3077  00FE86  64                 	db	100	;'d'
  3078  00FE87  20                 	db	32
  3079  00FE88  68                 	db	104	;'h'
  3080  00FE89  61                 	db	97	;'a'
  3081  00FE8A  73                 	db	115	;'s'
  3082  00FE8B  20                 	db	32
  3083  00FE8C  62                 	db	98	;'b'
  3084  00FE8D  65                 	db	101	;'e'
  3085  00FE8E  65                 	db	101	;'e'
  3086  00FE8F  6E                 	db	110	;'n'
  3087  00FE90  20                 	db	32
  3088  00FE91  65                 	db	101	;'e'
  3089  00FE92  6E                 	db	110	;'n'
  3090  00FE93  61                 	db	97	;'a'
  3091  00FE94  62                 	db	98	;'b'
  3092  00FE95  6C                 	db	108	;'l'
  3093  00FE96  65                 	db	101	;'e'
  3094  00FE97  64                 	db	100	;'d'
  3095  00FE98  0A                 	db	10
  3096  00FE99  0D                 	db	13
  3097  00FE9A  00                 	db	0
  3098  00FE9B                     STR_73:
  3099  00FE9B  53                 	db	83	;'S'
  3100  00FE9C  65                 	db	101	;'e'
  3101  00FE9D  74                 	db	116	;'t'
  3102  00FE9E  20                 	db	32
  3103  00FE9F  44                 	db	68	;'D'
  3104  00FEA0  69                 	db	105	;'i'
  3105  00FEA1  6D                 	db	109	;'m'
  3106  00FEA2  6D                 	db	109	;'m'
  3107  00FEA3  69                 	db	105	;'i'
  3108  00FEA4  6E                 	db	110	;'n'
  3109  00FEA5  67                 	db	103	;'g'
  3110  00FEA6  20                 	db	32
  3111  00FEA7  50                 	db	80	;'P'
  3112  00FEA8  65                 	db	101	;'e'
  3113  00FEA9  72                 	db	114	;'r'
  3114  00FEAA  63                 	db	99	;'c'
  3115  00FEAB  65                 	db	101	;'e'
  3116  00FEAC  6E                 	db	110	;'n'
  3117  00FEAD  74                 	db	116	;'t'
  3118  00FEAE  61                 	db	97	;'a'
  3119  00FEAF  67                 	db	103	;'g'
  3120  00FEB0  65                 	db	101	;'e'
  3121  00FEB1  20                 	db	32
  3122  00FEB2  00                 	db	0
  3123  00FEB3                     STR_86:
  3124  00FEB3  45                 	db	69	;'E'
  3125  00FEB4  72                 	db	114	;'r'
  3126  00FEB5  72                 	db	114	;'r'
  3127  00FEB6  6F                 	db	111	;'o'
  3128  00FEB7  72                 	db	114	;'r'
  3129  00FEB8  73                 	db	115	;'s'
  3130  00FEB9  20                 	db	32
  3131  00FEBA  61                 	db	97	;'a'
  3132  00FEBB  70                 	db	112	;'p'
  3133  00FEBC  70                 	db	112	;'p'
  3134  00FEBD  65                 	db	101	;'e'
  3135  00FEBE  61                 	db	97	;'a'
  3136  00FEBF  72                 	db	114	;'r'
  3137  00FEC0  20                 	db	32
  3138  00FEC1  69                 	db	105	;'i'
  3139  00FEC2  6E                 	db	110	;'n'
  3140  00FEC3  20                 	db	32
  3141  00FEC4  72                 	db	114	;'r'
  3142  00FEC5  65                 	db	101	;'e'
  3143  00FEC6  64                 	db	100	;'d'
  3144  00FEC7  0A                 	db	10
  3145  00FEC8  0D                 	db	13
  3146  00FEC9  00                 	db	0
  3147  00FECA                     STR_63:
  3148  00FECA  4D                 	db	77	;'M'
  3149  00FECB  65                 	db	101	;'e'
  3150  00FECC  61                 	db	97	;'a'
  3151  00FECD  73                 	db	115	;'s'
  3152  00FECE  75                 	db	117	;'u'
  3153  00FECF  72                 	db	114	;'r'
  3154  00FED0  65                 	db	101	;'e'
  3155  00FED1  20                 	db	32
  3156  00FED2  52                 	db	82	;'R'
  3157  00FED3  4D                 	db	77	;'M'
  3158  00FED4  53                 	db	83	;'S'
  3159  00FED5  20                 	db	32
  3160  00FED6  56                 	db	86	;'V'
  3161  00FED7  6F                 	db	111	;'o'
  3162  00FED8  6C                 	db	108	;'l'
  3163  00FED9  74                 	db	116	;'t'
  3164  00FEDA  61                 	db	97	;'a'
  3165  00FEDB  67                 	db	103	;'g'
  3166  00FEDC  65                 	db	101	;'e'
  3167  00FEDD  3F                 	db	63	;'?'
  3168  00FEDE  00                 	db	0
  3169  00FEDF                     STR_61:
  3170  00FEDF  4D                 	db	77	;'M'
  3171  00FEE0  65                 	db	101	;'e'
  3172  00FEE1  61                 	db	97	;'a'
  3173  00FEE2  73                 	db	115	;'s'
  3174  00FEE3  75                 	db	117	;'u'
  3175  00FEE4  72                 	db	114	;'r'
  3176  00FEE5  65                 	db	101	;'e'
  3177  00FEE6  20                 	db	32
  3178  00FEE7  52                 	db	82	;'R'
  3179  00FEE8  4D                 	db	77	;'M'
  3180  00FEE9  53                 	db	83	;'S'
  3181  00FEEA  20                 	db	32
  3182  00FEEB  43                 	db	67	;'C'
  3183  00FEEC  75                 	db	117	;'u'
  3184  00FEED  72                 	db	114	;'r'
  3185  00FEEE  72                 	db	114	;'r'
  3186  00FEEF  65                 	db	101	;'e'
  3187  00FEF0  6E                 	db	110	;'n'
  3188  00FEF1  74                 	db	116	;'t'
  3189  00FEF2  3F                 	db	63	;'?'
  3190  00FEF3  00                 	db	0
  3191  00FEF4                     STR_55:
  3192  00FEF4  4D                 	db	77	;'M'
  3193  00FEF5  65                 	db	101	;'e'
  3194  00FEF6  61                 	db	97	;'a'
  3195  00FEF7  73                 	db	115	;'s'
  3196  00FEF8  75                 	db	117	;'u'
  3197  00FEF9  72                 	db	114	;'r'
  3198  00FEFA  65                 	db	101	;'e'
  3199  00FEFB  20                 	db	32
  3200  00FEFC  44                 	db	68	;'D'
  3201  00FEFD  69                 	db	105	;'i'
  3202  00FEFE  65                 	db	101	;'e'
  3203  00FEFF  20                 	db	32
  3204  00FF00  54                 	db	84	;'T'
  3205  00FF01  65                 	db	101	;'e'
  3206  00FF02  6D                 	db	109	;'m'
  3207  00FF03  70                 	db	112	;'p'
  3208  00FF04  3F                 	db	63	;'?'
  3209  00FF05  00                 	db	0
  3210  00FF06                     STR_88:
  3211  00FF06  30                 	db	48	;'0'
  3212  00FF07  31                 	db	49	;'1'
  3213  00FF08  32                 	db	50	;'2'
  3214  00FF09  33                 	db	51	;'3'
  3215  00FF0A  34                 	db	52	;'4'
  3216  00FF0B  35                 	db	53	;'5'
  3217  00FF0C  36                 	db	54	;'6'
  3218  00FF0D  37                 	db	55	;'7'
  3219  00FF0E  38                 	db	56	;'8'
  3220  00FF0F  39                 	db	57	;'9'
  3221  00FF10  41                 	db	65	;'A'
  3222  00FF11  42                 	db	66	;'B'
  3223  00FF12  43                 	db	67	;'C'
  3224  00FF13  44                 	db	68	;'D'
  3225  00FF14  45                 	db	69	;'E'
  3226  00FF15  46                 	db	70	;'F'
  3227  00FF16  00                 	db	0
  3228  00FF17                     STR_49:
  3229  00FF17  41                 	db	65	;'A'
  3230  00FF18  43                 	db	67	;'C'
  3231  00FF19  20                 	db	32
  3232  00FF1A  50                 	db	80	;'P'
  3233  00FF1B  6F                 	db	111	;'o'
  3234  00FF1C  77                 	db	119	;'w'
  3235  00FF1D  65                 	db	101	;'e'
  3236  00FF1E  72                 	db	114	;'r'
  3237  00FF1F  20                 	db	32
  3238  00FF20  4D                 	db	77	;'M'
  3239  00FF21  65                 	db	101	;'e'
  3240  00FF22  74                 	db	116	;'t'
  3241  00FF23  65                 	db	101	;'e'
  3242  00FF24  72                 	db	114	;'r'
  3243  00FF25  0A                 	db	10
  3244  00FF26  0D                 	db	13
  3245  00FF27  00                 	db	0
  3246  00FF28                     STR_51:
  3247  00FF28  4D                 	db	77	;'M'
  3248  00FF29  65                 	db	101	;'e'
  3249  00FF2A  61                 	db	97	;'a'
  3250  00FF2B  73                 	db	115	;'s'
  3251  00FF2C  75                 	db	117	;'u'
  3252  00FF2D  72                 	db	114	;'r'
  3253  00FF2E  65                 	db	101	;'e'
  3254  00FF2F  20                 	db	32
  3255  00FF30  50                 	db	80	;'P'
  3256  00FF31  4F                 	db	79	;'O'
  3257  00FF32  53                 	db	83	;'S'
  3258  00FF33  33                 	db	51	;'3'
  3259  00FF34  50                 	db	80	;'P'
  3260  00FF35  33                 	db	51	;'3'
  3261  00FF36  3F                 	db	63	;'?'
  3262  00FF37  00                 	db	0
  3263  00FF38                     STR_67:
  3264  00FF38  44                 	db	68	;'D'
  3265  00FF39  69                 	db	105	;'i'
  3266  00FF3A  73                 	db	115	;'s'
  3267  00FF3B  61                 	db	97	;'a'
  3268  00FF3C  62                 	db	98	;'b'
  3269  00FF3D  6C                 	db	108	;'l'
  3270  00FF3E  65                 	db	101	;'e'
  3271  00FF3F  20                 	db	32
  3272  00FF40  44                 	db	68	;'D'
  3273  00FF41  69                 	db	105	;'i'
  3274  00FF42  6D                 	db	109	;'m'
  3275  00FF43  6D                 	db	109	;'m'
  3276  00FF44  69                 	db	105	;'i'
  3277  00FF45  6E                 	db	110	;'n'
  3278  00FF46  67                 	db	103	;'g'
  3279  00FF47  00                 	db	0
  3280  00FF48                     STR_53:
  3281  00FF48  4D                 	db	77	;'M'
  3282  00FF49  65                 	db	101	;'e'
  3283  00FF4A  61                 	db	97	;'a'
  3284  00FF4B  73                 	db	115	;'s'
  3285  00FF4C  75                 	db	117	;'u'
  3286  00FF4D  72                 	db	114	;'r'
  3287  00FF4E  65                 	db	101	;'e'
  3288  00FF4F  20                 	db	32
  3289  00FF50  50                 	db	80	;'P'
  3290  00FF51  4F                 	db	79	;'O'
  3291  00FF52  53                 	db	83	;'S'
  3292  00FF53  31                 	db	49	;'1'
  3293  00FF54  32                 	db	50	;'2'
  3294  00FF55  3F                 	db	63	;'?'
  3295  00FF56  00                 	db	0
  3296  00FF57                     STR_65:
  3297  00FF57  45                 	db	69	;'E'
  3298  00FF58  6E                 	db	110	;'n'
  3299  00FF59  61                 	db	97	;'a'
  3300  00FF5A  62                 	db	98	;'b'
  3301  00FF5B  6C                 	db	108	;'l'
  3302  00FF5C  65                 	db	101	;'e'
  3303  00FF5D  20                 	db	32
  3304  00FF5E  44                 	db	68	;'D'
  3305  00FF5F  69                 	db	105	;'i'
  3306  00FF60  6D                 	db	109	;'m'
  3307  00FF61  6D                 	db	109	;'m'
  3308  00FF62  69                 	db	105	;'i'
  3309  00FF63  6E                 	db	110	;'n'
  3310  00FF64  67                 	db	103	;'g'
  3311  00FF65  00                 	db	0
  3312  00FF66                     STR_57:
  3313  00FF66  4D                 	db	77	;'M'
  3314  00FF67  65                 	db	101	;'e'
  3315  00FF68  61                 	db	97	;'a'
  3316  00FF69  73                 	db	115	;'s'
  3317  00FF6A  75                 	db	117	;'u'
  3318  00FF6B  72                 	db	114	;'r'
  3319  00FF6C  65                 	db	101	;'e'
  3320  00FF6D  20                 	db	32
  3321  00FF6E  46                 	db	70	;'F'
  3322  00FF6F  56                 	db	86	;'V'
  3323  00FF70  52                 	db	82	;'R'
  3324  00FF71  3F                 	db	63	;'?'
  3325  00FF72  00                 	db	0
  3326  00FF73                     STR_71:
  3327  00FF73  44                 	db	68	;'D'
  3328  00FF74  69                 	db	105	;'i'
  3329  00FF75  73                 	db	115	;'s'
  3330  00FF76  61                 	db	97	;'a'
  3331  00FF77  62                 	db	98	;'b'
  3332  00FF78  6C                 	db	108	;'l'
  3333  00FF79  65                 	db	101	;'e'
  3334  00FF7A  20                 	db	32
  3335  00FF7B  4C                 	db	76	;'L'
  3336  00FF7C  6F                 	db	111	;'o'
  3337  00FF7D  61                 	db	97	;'a'
  3338  00FF7E  64                 	db	100	;'d'
  3339  00FF7F  00                 	db	0
  3340  00FF80                     STR_69:
  3341  00FF80  45                 	db	69	;'E'
  3342  00FF81  6E                 	db	110	;'n'
  3343  00FF82  61                 	db	97	;'a'
  3344  00FF83  62                 	db	98	;'b'
  3345  00FF84  6C                 	db	108	;'l'
  3346  00FF85  65                 	db	101	;'e'
  3347  00FF86  20                 	db	32
  3348  00FF87  4C                 	db	76	;'L'
  3349  00FF88  6F                 	db	111	;'o'
  3350  00FF89  61                 	db	97	;'a'
  3351  00FF8A  64                 	db	100	;'d'
  3352  00FF8B  00                 	db	0
  3353  00FF8C                     STR_79:
  3354  00FF8C  4F                 	db	79	;'O'
  3355  00FF8D  6E                 	db	110	;'n'
  3356  00FF8E  20                 	db	32
  3357  00FF8F  54                 	db	84	;'T'
  3358  00FF90  69                 	db	105	;'i'
  3359  00FF91  6D                 	db	109	;'m'
  3360  00FF92  65                 	db	101	;'e'
  3361  00FF93  3F                 	db	63	;'?'
  3362  00FF94  00                 	db	0
  3363  00FF95                     STR_47:
  3364  00FF95  2A                 	db	42
  3365  00FF96  49                 	db	73	;'I'
  3366  00FF97  44                 	db	68	;'D'
  3367  00FF98  4E                 	db	78	;'N'
  3368  00FF99  3F                 	db	63	;'?'
  3369  00FF9A  00                 	db	0
  3370  00FF9B                     STR_44:
  3371  00FF9B  43                 	db	67	;'C'
  3372  00FF9C  6C                 	db	108	;'l'
  3373  00FF9D  65                 	db	101	;'e'
  3374  00FF9E  61                 	db	97	;'a'
  3375  00FF9F  72                 	db	114	;'r'
  3376  00FFA0  00                 	db	0
  3377  00FFA1                     STR_41:
  3378  00FFA1  52                 	db	82	;'R'
  3379  00FFA2  65                 	db	101	;'e'
  3380  00FFA3  73                 	db	115	;'s'
  3381  00FFA4  65                 	db	101	;'e'
  3382  00FFA5  74                 	db	116	;'t'
  3383  00FFA6  00                 	db	0
  3384  00FFA7                     STR_81:
  3385  00FFA7  48                 	db	72	;'H'
  3386  00FFA8  65                 	db	101	;'e'
  3387  00FFA9  6C                 	db	108	;'l'
  3388  00FFAA  70                 	db	112	;'p'
  3389  00FFAB  00                 	db	0
  3390  00FFAC                     STR_2:
  3391  00FFAC  1B                 	db	27
  3392  00FFAD  5B                 	db	91	;'['
  3393  00FFAE  32                 	db	50	;'2'
  3394  00FFAF  4A                 	db	74	;'J'
  3395  00FFB0  00                 	db	0
  3396  00FFB1                     STR_48:
  3397  00FFB1  49                 	db	73	;'I'
  3398  00FFB2  44                 	db	68	;'D'
  3399  00FFB3  4E                 	db	78	;'N'
  3400  00FFB4  00                 	db	0
  3401  00FFB5                     STR_3:
  3402  00FFB5  1B                 	db	27
  3403  00FFB6  5B                 	db	91	;'['
  3404  00FFB7  48                 	db	72	;'H'
  3405  00FFB8  00                 	db	0
  3406  00FFB9  1B                 	db	27
  3407  00FFBA  5B                 	db	91	;'['
  3408  00FFBB  73                 	db	115	;'s'
  3409  00FFBC  00                 	db	0
  3410  00FFBD  1B                 	db	27
  3411  00FFBE  5B                 	db	91	;'['
  3412  00FFBF  75                 	db	117	;'u'
  3413  00FFC0  00                 	db	0
  3414  00FFC1                     STR_1:
  3415  00FFC1  1B                 	db	27
  3416  00FFC2  5B                 	db	91	;'['
  3417  00FFC3  4B                 	db	75	;'K'
  3418  00FFC4  00                 	db	0
  3419  00FFC5                     STR_20:
  3420  00FFC5  33                 	db	51	;'3'
  3421  00FFC6  30                 	db	48	;'0'
  3422  00FFC7  00                 	db	0
  3423  00FFC8                     STR_30:
  3424  00FFC8  34                 	db	52	;'4'
  3425  00FFC9  30                 	db	48	;'0'
  3426  00FFCA  00                 	db	0
  3427  00FFCB                     STR_21:
  3428  00FFCB  33                 	db	51	;'3'
  3429  00FFCC  31                 	db	49	;'1'
  3430  00FFCD  00                 	db	0
  3431  00FFCE                     STR_31:
  3432  00FFCE  34                 	db	52	;'4'
  3433  00FFCF  31                 	db	49	;'1'
  3434  00FFD0  00                 	db	0
  3435  00FFD1                     STR_22:
  3436  00FFD1  33                 	db	51	;'3'
  3437  00FFD2  32                 	db	50	;'2'
  3438  00FFD3  00                 	db	0
  3439  00FFD4                     STR_32:
  3440  00FFD4  34                 	db	52	;'4'
  3441  00FFD5  32                 	db	50	;'2'
  3442  00FFD6  00                 	db	0
  3443  00FFD7                     STR_23:
  3444  00FFD7  33                 	db	51	;'3'
  3445  00FFD8  33                 	db	51	;'3'
  3446  00FFD9  00                 	db	0
  3447  00FFDA                     STR_33:
  3448  00FFDA  34                 	db	52	;'4'
  3449  00FFDB  33                 	db	51	;'3'
  3450  00FFDC  00                 	db	0
  3451  00FFDD                     STR_24:
  3452  00FFDD  33                 	db	51	;'3'
  3453  00FFDE  34                 	db	52	;'4'
  3454  00FFDF  00                 	db	0
  3455  00FFE0                     STR_34:
  3456  00FFE0  34                 	db	52	;'4'
  3457  00FFE1  34                 	db	52	;'4'
  3458  00FFE2  00                 	db	0
  3459  00FFE3                     STR_25:
  3460  00FFE3  33                 	db	51	;'3'
  3461  00FFE4  35                 	db	53	;'5'
  3462  00FFE5  00                 	db	0
  3463  00FFE6                     STR_35:
  3464  00FFE6  34                 	db	52	;'4'
  3465  00FFE7  35                 	db	53	;'5'
  3466  00FFE8  00                 	db	0
  3467  00FFE9                     STR_26:
  3468  00FFE9  33                 	db	51	;'3'
  3469  00FFEA  36                 	db	54	;'6'
  3470  00FFEB  00                 	db	0
  3471  00FFEC                     STR_36:
  3472  00FFEC  34                 	db	52	;'4'
  3473  00FFED  36                 	db	54	;'6'
  3474  00FFEE  00                 	db	0
  3475  00FFEF                     STR_27:
  3476  00FFEF  33                 	db	51	;'3'
  3477  00FFF0  37                 	db	55	;'7'
  3478  00FFF1  00                 	db	0
  3479  00FFF2                     STR_37:
  3480  00FFF2  34                 	db	52	;'4'
  3481  00FFF3  37                 	db	55	;'7'
  3482  00FFF4  00                 	db	0
  3483  00FFF5                     STR_11:
  3484  00FFF5  1B                 	db	27
  3485  00FFF6  5B                 	db	91	;'['
  3486  00FFF7  00                 	db	0
  3487  00FFF8                     STR_17:
  3488  00FFF8  38                 	db	56	;'8'
  3489  00FFF9  00                 	db	0
  3490  00FFFA                     STR_19:
  3491  00FFFA  3B                 	db	59	;';'
  3492  00FFFB  00                 	db	0
  3493  00FFFC                     STR_39:
  3494  00FFFC  6D                 	db	109	;'m'
  3495  00FFFD  00                 	db	0
  3496  0000                     
  3497                           ; #config settings
  3498  00FFFE  00                 	db	0	; dummy byte at the end
  3499  0000                     
  3500                           	psect	cinit
  3501  0159FA                     __pcinit:
  3502                           	opt stack 0
  3503  0159FA                     start_initialization:
  3504                           	opt stack 0
  3505  0159FA                     __initialization:
  3506                           	opt stack 0
  3507                           
  3508                           ; Initialize objects allocated to BANK0 (6 bytes)
  3509                           ; load TBLPTR registers with __pidataBANK0
  3510  0159FA  0E64               	movlw	low __pidataBANK0
  3511  0159FC  6EF6               	movwf	tblptrl,c
  3512  0159FE  0E62               	movlw	high __pidataBANK0
  3513  015A00  6EF7               	movwf	tblptrh,c
  3514  015A02  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3515  015A04  6EF8               	movwf	tblptru,c
  3516  015A06  EE00  F0E3         	lfsr	0,__pdataBANK0
  3517  015A0A  EE10 F006          	lfsr	1,6
  3518  015A0E                     copy_data0:
  3519  015A0E  0009               	tblrd		*+
  3520  015A10  CFF5 FFEE          	movff	tablat,postinc0
  3521  015A14  50E5               	movf	postdec1,w,c
  3522  015A16  50E1               	movf	fsr1l,w,c
  3523  015A18  E1FA               	bnz	copy_data0
  3524                           
  3525                           ; Clear objects allocated to BANK2 (256 bytes)
  3526  015A1A  EE02  F000         	lfsr	0,__pbssBANK2
  3527  015A1E  EE11 F000          	lfsr	1,256
  3528  015A22                     clear_0:
  3529  015A22  6AEE               	clrf	postinc0,c
  3530  015A24  50E5               	movf	postdec1,w,c
  3531  015A26  50E1               	movf	fsr1l,w,c
  3532  015A28  E1FC               	bnz	clear_0
  3533  015A2A  50E2               	movf	fsr1h,w,c
  3534  015A2C  E1FA               	bnz	clear_0
  3535                           
  3536                           ; Clear objects allocated to BANK1 (39 bytes)
  3537  015A2E  EE01  F0B9         	lfsr	0,__pbssBANK1
  3538  015A32  0E27               	movlw	39
  3539  015A34                     clear_1:
  3540  015A34  6AEE               	clrf	postinc0,c
  3541  015A36  06E8               	decf	wreg,f,c
  3542  015A38  E1FD               	bnz	clear_1
  3543                           
  3544                           ; Clear objects allocated to BITBANK0 (1 bytes)
  3545  015A3A  0100               	movlb	0
  3546  015A3C  6BE9               	clrf	(__pbitbssBANK0/(0+8))& (0+255),b
  3547                           
  3548                           ; Clear objects allocated to BANK0 (30 bytes)
  3549  015A3E  EE00  F0C5         	lfsr	0,__pbssBANK0
  3550  015A42  0E1E               	movlw	30
  3551  015A44                     clear_2:
  3552  015A44  6AEE               	clrf	postinc0,c
  3553  015A46  06E8               	decf	wreg,f,c
  3554  015A48  E1FD               	bnz	clear_2
  3555  015A4A                     end_of_initialization:
  3556                           	opt stack 0
  3557  015A4A                     __end_of__initialization:
  3558                           	opt stack 0
  3559  015A4A  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3560  015A4C  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3561  015A4E  0100               	movlb	0
  3562  015A50  EFC6  F0AA         	goto	_main	;jump to C main() function
  3563                           tblptru	equ	0xFF8
  3564                           tblptrh	equ	0xFF7
  3565                           tblptrl	equ	0xFF6
  3566                           tablat	equ	0xFF5
  3567                           postinc0	equ	0xFEE
  3568                           wreg	equ	0xFE8
  3569                           postdec1	equ	0xFE5
  3570                           fsr1h	equ	0xFE2
  3571                           fsr1l	equ	0xFE1
  3572                           
  3573                           	psect	bitbssBANK0
  3574  000748                     __pbitbssBANK0:
  3575                           	opt stack 0
  3576  000748                     _eusart2RxStringReady:
  3577                           	opt stack 0
  3578  000748                     	ds	1
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           postinc0	equ	0xFEE
  3584                           wreg	equ	0xFE8
  3585                           postdec1	equ	0xFE5
  3586                           fsr1h	equ	0xFE2
  3587                           fsr1l	equ	0xFE1
  3588                           
  3589                           	psect	bssBANK0
  3590  0000C5                     __pbssBANK0:
  3591                           	opt stack 0
  3592  0000C5                     _Imeas:
  3593                           	opt stack 0
  3594  0000C5                     	ds	3
  3595  0000C8                     _Ipk:
  3596                           	opt stack 0
  3597  0000C8                     	ds	3
  3598  0000CB                     _POS3P3_ADC_Result:
  3599                           	opt stack 0
  3600  0000CB                     	ds	3
  3601  0000CE                     _ADC_Result_Scaling:
  3602                           	opt stack 0
  3603  0000CE                     	ds	3
  3604  0000D1                     _ADCC_ADI_InterruptHandler:
  3605                           	opt stack 0
  3606  0000D1                     	ds	3
  3607  0000D4                     _EUSART2_RxDefaultInterruptHandler:
  3608                           	opt stack 0
  3609  0000D4                     	ds	3
  3610  0000D7                     _errno:
  3611                           	opt stack 0
  3612  0000D7                     	ds	2
  3613  0000D9                     _background_color:
  3614                           	opt stack 0
  3615  0000D9                     	ds	1
  3616  0000DA                     _foreground_color:
  3617                           	opt stack 0
  3618  0000DA                     	ds	1
  3619  0000DB                     _attribute:
  3620                           	opt stack 0
  3621  0000DB                     	ds	1
  3622  0000DC                     _eusart2RxHead:
  3623                           	opt stack 0
  3624  0000DC                     	ds	1
  3625  0000DD                     _TRIAC_Firing_Angle:
  3626                           	opt stack 0
  3627  0000DD                     	ds	3
  3628  0000E0                     _FVR_ADC_Result:
  3629                           	opt stack 0
  3630  0000E0                     	ds	3
  3631                           tblptru	equ	0xFF8
  3632                           tblptrh	equ	0xFF7
  3633                           tblptrl	equ	0xFF6
  3634                           tablat	equ	0xFF5
  3635                           postinc0	equ	0xFEE
  3636                           wreg	equ	0xFE8
  3637                           postdec1	equ	0xFE5
  3638                           fsr1h	equ	0xFE2
  3639                           fsr1l	equ	0xFE1
  3640                           
  3641                           	psect	dataBANK0
  3642  0000E3                     __pdataBANK0:
  3643                           	opt stack 0
  3644  0000E3                     _Vpk:
  3645                           	opt stack 0
  3646  0000E3                     	ds	3
  3647  0000E6                     _Temp_ADC_Offset:
  3648                           	opt stack 0
  3649  0000E6                     	ds	3
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           postinc0	equ	0xFEE
  3655                           wreg	equ	0xFE8
  3656                           postdec1	equ	0xFE5
  3657                           fsr1h	equ	0xFE2
  3658                           fsr1l	equ	0xFE1
  3659                           
  3660                           	psect	bssBANK1
  3661  0001B9                     __pbssBANK1:
  3662                           	opt stack 0
  3663  0001B9                     _on_time:
  3664                           	opt stack 0
  3665  0001B9                     	ds	4
  3666  0001BD                     _TMR5_InterruptHandler:
  3667                           	opt stack 0
  3668  0001BD                     	ds	3
  3669  0001C0                     _Vrms:
  3670                           	opt stack 0
  3671  0001C0                     	ds	3
  3672  0001C3                     _Irms:
  3673                           	opt stack 0
  3674  0001C3                     	ds	3
  3675  0001C6                     _Temp_ADC_Result:
  3676                           	opt stack 0
  3677  0001C6                     	ds	3
  3678  0001C9                     _POS12_ADC_Result:
  3679                           	opt stack 0
  3680  0001C9                     	ds	3
  3681  0001CC                     _TMR7_InterruptHandler:
  3682                           	opt stack 0
  3683  0001CC                     	ds	3
  3684  0001CF                     _TMR6_InterruptHandler:
  3685                           	opt stack 0
  3686  0001CF                     	ds	3
  3687  0001D2                     _EUSART2_TxDefaultInterruptHandler:
  3688                           	opt stack 0
  3689  0001D2                     	ds	3
  3690  0001D5                     _timer5ReloadVal:
  3691                           	opt stack 0
  3692  0001D5                     	ds	2
  3693  0001D7                     _dimming_period:
  3694                           	opt stack 0
  3695  0001D7                     	ds	2
  3696  0001D9                     _timer7ReloadVal:
  3697                           	opt stack 0
  3698  0001D9                     	ds	2
  3699  0001DB                     _eusart2RxCount:
  3700                           	opt stack 0
  3701  0001DB                     	ds	1
  3702  0001DC                     _eusart2RxTail:
  3703                           	opt stack 0
  3704  0001DC                     	ds	1
  3705  0001DD                     _eusart2TxBufferRemaining:
  3706                           	opt stack 0
  3707  0001DD                     	ds	1
  3708  0001DE                     _eusart2TxTail:
  3709                           	opt stack 0
  3710  0001DE                     	ds	1
  3711  0001DF                     _eusart2TxHead:
  3712                           	opt stack 0
  3713  0001DF                     	ds	1
  3714                           tblptru	equ	0xFF8
  3715                           tblptrh	equ	0xFF7
  3716                           tblptrl	equ	0xFF6
  3717                           tablat	equ	0xFF5
  3718                           postinc0	equ	0xFEE
  3719                           wreg	equ	0xFE8
  3720                           postdec1	equ	0xFE5
  3721                           fsr1h	equ	0xFE2
  3722                           fsr1l	equ	0xFE1
  3723                           
  3724                           	psect	bssBANK2
  3725  000200                     __pbssBANK2:
  3726                           	opt stack 0
  3727  000200                     _eusart2TxBuffer:
  3728                           	opt stack 0
  3729  000200                     	ds	128
  3730  000280                     _eusart2RxBuffer:
  3731                           	opt stack 0
  3732  000280                     	ds	64
  3733  0002C0                     _line:
  3734                           	opt stack 0
  3735  0002C0                     	ds	64
  3736                           tblptru	equ	0xFF8
  3737                           tblptrh	equ	0xFF7
  3738                           tblptrl	equ	0xFF6
  3739                           tablat	equ	0xFF5
  3740                           postinc0	equ	0xFEE
  3741                           wreg	equ	0xFE8
  3742                           postdec1	equ	0xFE5
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           
  3746                           	psect	cstackBANK1
  3747  000100                     __pcstackBANK1:
  3748                           	opt stack 0
  3749  000100                     ??_heartbeatTimerCallback:
  3750  000100                     ADCC_StartConversion@channel:
  3751                           	opt stack 0
  3752  000100                     TMR7_WriteTimer@timerVal:
  3753                           	opt stack 0
  3754                           
  3755                           ; 2 bytes @ 0x0
  3756  000100                     	ds	1
  3757  000101                     
  3758                           ; 1 bytes @ 0x1
  3759  000101                     	ds	1
  3760  000102                     ??_INTERRUPT_InterruptManagerLow:
  3761  000102                     
  3762                           ; 1 bytes @ 0x2
  3763  000102                     	ds	21
  3764  000117                     ??_isdigit:
  3765  000117                     ?_strlen:
  3766                           	opt stack 0
  3767  000117                     ?_strcmp:
  3768                           	opt stack 0
  3769  000117                     ?_strchr:
  3770                           	opt stack 0
  3771  000117                     ?___awmod:
  3772                           	opt stack 0
  3773  000117                     ?___ftpack:
  3774                           	opt stack 0
  3775  000117                     ?__tdiv_to_l_:
  3776                           	opt stack 0
  3777  000117                     ?__div_to_l_:
  3778                           	opt stack 0
  3779  000117                     ?___lldiv:
  3780                           	opt stack 0
  3781  000117                     EUSART2_Read@readValue:
  3782                           	opt stack 0
  3783  000117                     EUSART2_Write@txData:
  3784                           	opt stack 0
  3785  000117                     ___awmod@dividend:
  3786                           	opt stack 0
  3787  000117                     strcat@to:
  3788                           	opt stack 0
  3789  000117                     strcmp@s1:
  3790                           	opt stack 0
  3791  000117                     strlen@s:
  3792                           	opt stack 0
  3793  000117                     strncpy@to:
  3794                           	opt stack 0
  3795  000117                     strchr@ptr:
  3796                           	opt stack 0
  3797  000117                     TMR6_SetInterruptHandler@InterruptHandler:
  3798                           	opt stack 0
  3799  000117                     EUSART2_SetTxInterruptHandler@interruptHandler:
  3800                           	opt stack 0
  3801  000117                     EUSART2_SetRxInterruptHandler@interruptHandler:
  3802                           	opt stack 0
  3803  000117                     ADCC_SetADIInterruptHandler@InterruptHandler:
  3804                           	opt stack 0
  3805  000117                     TMR7_SetInterruptHandler@InterruptHandler:
  3806                           	opt stack 0
  3807  000117                     TMR5_SetInterruptHandler@InterruptHandler:
  3808                           	opt stack 0
  3809  000117                     __div_to_l_@f1:
  3810                           	opt stack 0
  3811  000117                     ___ftpack@arg:
  3812                           	opt stack 0
  3813  000117                     __tdiv_to_l_@f1:
  3814                           	opt stack 0
  3815  000117                     ___ftge@ff1:
  3816                           	opt stack 0
  3817  000117                     ___lldiv@dividend:
  3818                           	opt stack 0
  3819                           
  3820                           ; 4 bytes @ 0x17
  3821  000117                     	ds	1
  3822  000118                     putch@txData:
  3823                           	opt stack 0
  3824  000118                     _isdigit$2489:
  3825                           	opt stack 0
  3826                           
  3827                           ; 1 bytes @ 0x18
  3828  000118                     	ds	1
  3829  000119                     ??_strlen:
  3830  000119                     isdigit@c:
  3831                           	opt stack 0
  3832  000119                     ___awmod@divisor:
  3833                           	opt stack 0
  3834  000119                     strcat@from:
  3835                           	opt stack 0
  3836  000119                     strcmp@s2:
  3837                           	opt stack 0
  3838  000119                     strncpy@from:
  3839                           	opt stack 0
  3840  000119                     strchr@chr:
  3841                           	opt stack 0
  3842                           
  3843                           ; 2 bytes @ 0x19
  3844  000119                     	ds	1
  3845  00011A                     ??_TMR7_Initialize:
  3846  00011A                     ??_TMR5_Initialize:
  3847  00011A                     ___ftpack@exp:
  3848                           	opt stack 0
  3849  00011A                     __div_to_l_@f2:
  3850                           	opt stack 0
  3851  00011A                     __tdiv_to_l_@f2:
  3852                           	opt stack 0
  3853  00011A                     ___ftge@ff2:
  3854                           	opt stack 0
  3855                           
  3856                           ; 3 bytes @ 0x1A
  3857  00011A                     	ds	1
  3858  00011B                     ??_strcmp:
  3859  00011B                     ___awmod@counter:
  3860                           	opt stack 0
  3861  00011B                     ___ftpack@sign:
  3862                           	opt stack 0
  3863  00011B                     strcat@cp:
  3864                           	opt stack 0
  3865  00011B                     strlen@cp:
  3866                           	opt stack 0
  3867  00011B                     strncpy@size:
  3868                           	opt stack 0
  3869  00011B                     ___lldiv@divisor:
  3870                           	opt stack 0
  3871                           
  3872                           ; 4 bytes @ 0x1B
  3873  00011B                     	ds	1
  3874  00011C                     ??___ftpack:
  3875  00011C                     ___awmod@sign:
  3876                           	opt stack 0
  3877  00011C                     strcmp@r:
  3878                           	opt stack 0
  3879                           
  3880                           ; 1 bytes @ 0x1C
  3881  00011C                     	ds	1
  3882  00011D                     ??__tdiv_to_l_:
  3883  00011D                     ??___ftge:
  3884  00011D                     ?_strncmp:
  3885                           	opt stack 0
  3886  00011D                     ?___awdiv:
  3887                           	opt stack 0
  3888  00011D                     ___awdiv@dividend:
  3889                           	opt stack 0
  3890  00011D                     strncpy@cp:
  3891                           	opt stack 0
  3892  00011D                     strncmp@s1:
  3893                           	opt stack 0
  3894  00011D                     __div_to_l_@quot:
  3895                           	opt stack 0
  3896                           
  3897                           ; 4 bytes @ 0x1D
  3898  00011D                     	ds	2
  3899  00011F                     ?___awtoft:
  3900                           	opt stack 0
  3901  00011F                     ?___lltoft:
  3902                           	opt stack 0
  3903  00011F                     ___awdiv@divisor:
  3904                           	opt stack 0
  3905  00011F                     ___awtoft@c:
  3906                           	opt stack 0
  3907  00011F                     strncmp@s2:
  3908                           	opt stack 0
  3909  00011F                     ___lldiv@quotient:
  3910                           	opt stack 0
  3911  00011F                     ___lltoft@c:
  3912                           	opt stack 0
  3913                           
  3914                           ; 4 bytes @ 0x1F
  3915  00011F                     	ds	1
  3916  000120                     __tdiv_to_l_@quot:
  3917                           	opt stack 0
  3918                           
  3919                           ; 4 bytes @ 0x20
  3920  000120                     	ds	1
  3921  000121                     ___awdiv@counter:
  3922                           	opt stack 0
  3923  000121                     __div_to_l_@cntr:
  3924                           	opt stack 0
  3925  000121                     strncmp@len:
  3926                           	opt stack 0
  3927                           
  3928                           ; 2 bytes @ 0x21
  3929  000121                     	ds	1
  3930  000122                     ___awdiv@sign:
  3931                           	opt stack 0
  3932  000122                     ___awtoft@sign:
  3933                           	opt stack 0
  3934  000122                     __div_to_l_@exp1:
  3935                           	opt stack 0
  3936                           
  3937                           ; 1 bytes @ 0x22
  3938  000122                     	ds	1
  3939  000123                     ??_strncmp:
  3940  000123                     ??___lltoft:
  3941  000123                     ?___ftneg:
  3942                           	opt stack 0
  3943  000123                     ___lldiv@counter:
  3944                           	opt stack 0
  3945  000123                     ___awdiv@quotient:
  3946                           	opt stack 0
  3947  000123                     ___ftneg@f1:
  3948                           	opt stack 0
  3949                           
  3950                           ; 3 bytes @ 0x23
  3951  000123                     	ds	1
  3952  000124                     ?___llmod:
  3953                           	opt stack 0
  3954  000124                     __tdiv_to_l_@cntr:
  3955                           	opt stack 0
  3956  000124                     ___llmod@dividend:
  3957                           	opt stack 0
  3958                           
  3959                           ; 4 bytes @ 0x24
  3960  000124                     	ds	1
  3961  000125                     ?___wmul:
  3962                           	opt stack 0
  3963  000125                     __tdiv_to_l_@exp1:
  3964                           	opt stack 0
  3965  000125                     ___wmul@multiplier:
  3966                           	opt stack 0
  3967                           
  3968                           ; 2 bytes @ 0x25
  3969  000125                     	ds	1
  3970  000126                     ?_strstr:
  3971                           	opt stack 0
  3972  000126                     strstr@s1:
  3973                           	opt stack 0
  3974                           
  3975                           ; 2 bytes @ 0x26
  3976  000126                     	ds	1
  3977  000127                     ___lltoft@exp:
  3978                           	opt stack 0
  3979  000127                     ___wmul@multiplicand:
  3980                           	opt stack 0
  3981                           
  3982                           ; 2 bytes @ 0x27
  3983  000127                     	ds	1
  3984  000128                     strstr@s2:
  3985                           	opt stack 0
  3986  000128                     ___llmod@divisor:
  3987                           	opt stack 0
  3988                           
  3989                           ; 4 bytes @ 0x28
  3990  000128                     	ds	1
  3991  000129                     ___wmul@product:
  3992                           	opt stack 0
  3993                           
  3994                           ; 2 bytes @ 0x29
  3995  000129                     	ds	1
  3996  00012A                     
  3997                           ; 1 bytes @ 0x2A
  3998  00012A                     	ds	1
  3999  00012B                     ?_atoi:
  4000                           	opt stack 0
  4001  00012B                     ?___ftadd:
  4002                           	opt stack 0
  4003  00012B                     atoi@s:
  4004                           	opt stack 0
  4005  00012B                     ___ftadd@f1:
  4006                           	opt stack 0
  4007                           
  4008                           ; 3 bytes @ 0x2B
  4009  00012B                     	ds	1
  4010  00012C                     ___llmod@counter:
  4011                           	opt stack 0
  4012                           
  4013                           ; 1 bytes @ 0x2C
  4014  00012C                     	ds	1
  4015  00012D                     ??_atoi:
  4016                           
  4017                           ; 1 bytes @ 0x2D
  4018  00012D                     	ds	1
  4019  00012E                     ___ftadd@f2:
  4020                           	opt stack 0
  4021                           
  4022                           ; 3 bytes @ 0x2E
  4023  00012E                     	ds	1
  4024  00012F                     atoi@sign:
  4025                           	opt stack 0
  4026                           
  4027                           ; 1 bytes @ 0x2F
  4028  00012F                     	ds	1
  4029  000130                     atoi@a:
  4030                           	opt stack 0
  4031                           
  4032                           ; 2 bytes @ 0x30
  4033  000130                     	ds	1
  4034  000131                     ??___ftadd:
  4035                           
  4036                           ; 1 bytes @ 0x31
  4037  000131                     	ds	3
  4038  000134                     ___ftadd@sign:
  4039                           	opt stack 0
  4040                           
  4041                           ; 1 bytes @ 0x34
  4042  000134                     	ds	1
  4043  000135                     ___ftadd@exp2:
  4044                           	opt stack 0
  4045                           
  4046                           ; 1 bytes @ 0x35
  4047  000135                     	ds	1
  4048  000136                     ___ftadd@exp1:
  4049                           	opt stack 0
  4050                           
  4051                           ; 1 bytes @ 0x36
  4052  000136                     	ds	1
  4053  000137                     ?___ftdiv:
  4054                           	opt stack 0
  4055  000137                     ?___ftsub:
  4056                           	opt stack 0
  4057  000137                     ___ftdiv@f1:
  4058                           	opt stack 0
  4059  000137                     ___ftsub@f1:
  4060                           	opt stack 0
  4061                           
  4062                           ; 3 bytes @ 0x37
  4063  000137                     	ds	3
  4064  00013A                     ___ftdiv@f2:
  4065                           	opt stack 0
  4066  00013A                     ___ftsub@f2:
  4067                           	opt stack 0
  4068                           
  4069                           ; 3 bytes @ 0x3A
  4070  00013A                     	ds	3
  4071  00013D                     ??___ftdiv:
  4072  00013D                     
  4073                           ; 1 bytes @ 0x3D
  4074  00013D                     	ds	3
  4075  000140                     ___ftdiv@cntr:
  4076                           	opt stack 0
  4077                           
  4078                           ; 1 bytes @ 0x40
  4079  000140                     	ds	1
  4080  000141                     ___ftdiv@f3:
  4081                           	opt stack 0
  4082                           
  4083                           ; 3 bytes @ 0x41
  4084  000141                     	ds	3
  4085  000144                     ___ftdiv@exp:
  4086                           	opt stack 0
  4087                           
  4088                           ; 1 bytes @ 0x44
  4089  000144                     	ds	1
  4090  000145                     ___ftdiv@sign:
  4091                           	opt stack 0
  4092                           
  4093                           ; 1 bytes @ 0x45
  4094  000145                     	ds	1
  4095  000146                     ?___ftmul:
  4096                           	opt stack 0
  4097  000146                     ___ftmul@f1:
  4098                           	opt stack 0
  4099                           
  4100                           ; 3 bytes @ 0x46
  4101  000146                     	ds	3
  4102  000149                     ___ftmul@f2:
  4103                           	opt stack 0
  4104                           
  4105                           ; 3 bytes @ 0x49
  4106  000149                     	ds	3
  4107  00014C                     ??___ftmul:
  4108                           
  4109                           ; 1 bytes @ 0x4C
  4110  00014C                     	ds	3
  4111  00014F                     ___ftmul@exp:
  4112                           	opt stack 0
  4113                           
  4114                           ; 1 bytes @ 0x4F
  4115  00014F                     	ds	1
  4116  000150                     ___ftmul@f3_as_product:
  4117                           	opt stack 0
  4118                           
  4119                           ; 3 bytes @ 0x50
  4120  000150                     	ds	3
  4121  000153                     ___ftmul@cntr:
  4122                           	opt stack 0
  4123                           
  4124                           ; 1 bytes @ 0x53
  4125  000153                     	ds	1
  4126  000154                     ___ftmul@sign:
  4127                           	opt stack 0
  4128                           
  4129                           ; 1 bytes @ 0x54
  4130  000154                     	ds	1
  4131  000155                     ?_fround:
  4132                           	opt stack 0
  4133  000155                     ?_scale:
  4134                           	opt stack 0
  4135  000155                     ?___fttol:
  4136                           	opt stack 0
  4137  000155                     ___fttol@f1:
  4138                           	opt stack 0
  4139                           
  4140                           ; 3 bytes @ 0x55
  4141  000155                     	ds	3
  4142  000158                     _fround$3132:
  4143                           	opt stack 0
  4144  000158                     _scale$3133:
  4145                           	opt stack 0
  4146                           
  4147                           ; 3 bytes @ 0x58
  4148  000158                     	ds	1
  4149  000159                     ??___fttol:
  4150                           
  4151                           ; 1 bytes @ 0x59
  4152  000159                     	ds	2
  4153  00015B                     scale@scl:
  4154                           	opt stack 0
  4155  00015B                     _fround$3131:
  4156                           	opt stack 0
  4157                           
  4158                           ; 3 bytes @ 0x5B
  4159  00015B                     	ds	3
  4160  00015E                     fround@prec:
  4161                           	opt stack 0
  4162  00015E                     ___fttol@sign1:
  4163                           	opt stack 0
  4164                           
  4165                           ; 1 bytes @ 0x5E
  4166  00015E                     	ds	1
  4167  00015F                     ___fttol@lval:
  4168                           	opt stack 0
  4169                           
  4170                           ; 4 bytes @ 0x5F
  4171  00015F                     	ds	4
  4172  000163                     ___fttol@exp1:
  4173                           	opt stack 0
  4174                           
  4175                           ; 1 bytes @ 0x63
  4176  000163                     	ds	1
  4177  000164                     ?_printf:
  4178                           	opt stack 0
  4179  000164                     printf@f:
  4180                           	opt stack 0
  4181                           
  4182                           ; 2 bytes @ 0x64
  4183  000164                     	ds	8
  4184  00016C                     ??_printf:
  4185                           
  4186                           ; 1 bytes @ 0x6C
  4187  00016C                     	ds	6
  4188  000172                     _printf$3134:
  4189                           	opt stack 0
  4190                           
  4191                           ; 3 bytes @ 0x72
  4192  000172                     	ds	3
  4193  000175                     printf@idx:
  4194                           	opt stack 0
  4195                           
  4196                           ; 1 bytes @ 0x75
  4197  000175                     	ds	1
  4198  000176                     printf@cp:
  4199                           	opt stack 0
  4200                           
  4201                           ; 2 bytes @ 0x76
  4202  000176                     	ds	2
  4203  000178                     printf@len:
  4204                           	opt stack 0
  4205                           
  4206                           ; 2 bytes @ 0x78
  4207  000178                     	ds	2
  4208  00017A                     printf@ap:
  4209                           	opt stack 0
  4210                           
  4211                           ; 2 bytes @ 0x7A
  4212  00017A                     	ds	2
  4213  00017C                     printf@flag:
  4214                           	opt stack 0
  4215                           
  4216                           ; 2 bytes @ 0x7C
  4217  00017C                     	ds	2
  4218  00017E                     printf@exp:
  4219                           	opt stack 0
  4220                           
  4221                           ; 2 bytes @ 0x7E
  4222  00017E                     	ds	2
  4223  000180                     printf@tmpval:
  4224                           	opt stack 0
  4225                           
  4226                           ; 4 bytes @ 0x80
  4227  000180                     	ds	4
  4228  000184                     printf@val:
  4229                           	opt stack 0
  4230                           
  4231                           ; 4 bytes @ 0x84
  4232  000184                     	ds	4
  4233  000188                     printf@fval:
  4234                           	opt stack 0
  4235                           
  4236                           ; 3 bytes @ 0x88
  4237  000188                     	ds	3
  4238  00018B                     printf@prec:
  4239                           	opt stack 0
  4240                           
  4241                           ; 2 bytes @ 0x8B
  4242  00018B                     	ds	2
  4243  00018D                     printf@c:
  4244                           	opt stack 0
  4245                           
  4246                           ; 1 bytes @ 0x8D
  4247  00018D                     	ds	1
  4248  00018E                     terminal_textAttributes@background_color:
  4249                           	opt stack 0
  4250                           
  4251                           ; 1 bytes @ 0x8E
  4252  00018E                     	ds	1
  4253  00018F                     terminal_textAttributes@input_attribute:
  4254                           	opt stack 0
  4255                           
  4256                           ; 1 bytes @ 0x8F
  4257  00018F                     	ds	1
  4258  000190                     terminal_textAttributes@foreground_color:
  4259                           	opt stack 0
  4260                           
  4261                           ; 1 bytes @ 0x90
  4262  000190                     	ds	1
  4263  000191                     terminal_textAttributes@output_buff:
  4264                           	opt stack 0
  4265                           
  4266                           ; 15 bytes @ 0x91
  4267  000191                     	ds	15
  4268  0001A0                     ringBufferLUT@line:
  4269                           	opt stack 0
  4270                           
  4271                           ; 2 bytes @ 0xA0
  4272  0001A0                     	ds	2
  4273  0001A2                     ??_ringBufferLUT:
  4274                           
  4275                           ; 1 bytes @ 0xA2
  4276  0001A2                     	ds	2
  4277  0001A4                     ringBufferLUT@angle_degrees:
  4278                           	opt stack 0
  4279                           
  4280                           ; 3 bytes @ 0xA4
  4281  0001A4                     	ds	3
  4282  0001A7                     ringBufferLUT@arg_buff:
  4283                           	opt stack 0
  4284                           
  4285                           ; 3 bytes @ 0xA7
  4286  0001A7                     	ds	3
  4287  0001AA                     ringBufferLUT@index:
  4288                           	opt stack 0
  4289                           
  4290                           ; 2 bytes @ 0xAA
  4291  0001AA                     	ds	2
  4292  0001AC                     ringBufferLUT@percentage:
  4293                           	opt stack 0
  4294                           
  4295                           ; 2 bytes @ 0xAC
  4296  0001AC                     	ds	2
  4297  0001AE                     ??_terminal_ringBufferPull:
  4298                           
  4299                           ; 1 bytes @ 0xAE
  4300  0001AE                     	ds	3
  4301  0001B1                     terminal_ringBufferPull@charNumber:
  4302                           	opt stack 0
  4303                           
  4304                           ; 2 bytes @ 0xB1
  4305  0001B1                     	ds	2
  4306  0001B3                     terminal_ringBufferPull@index_1778:
  4307                           	opt stack 0
  4308                           
  4309                           ; 2 bytes @ 0xB3
  4310  0001B3                     	ds	2
  4311  0001B5                     terminal_ringBufferPull@index:
  4312                           	opt stack 0
  4313                           
  4314                           ; 2 bytes @ 0xB5
  4315  0001B5                     	ds	2
  4316  0001B7                     ??_main:
  4317                           
  4318                           ; 1 bytes @ 0xB7
  4319  0001B7                     	ds	2
  4320                           tblptru	equ	0xFF8
  4321                           tblptrh	equ	0xFF7
  4322                           tblptrl	equ	0xFF6
  4323                           tablat	equ	0xFF5
  4324                           postinc0	equ	0xFEE
  4325                           wreg	equ	0xFE8
  4326                           postdec1	equ	0xFE5
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           
  4330                           	psect	cstackBANK0
  4331  000060                     __pcstackBANK0:
  4332                           	opt stack 0
  4333  000060                     ?i2___ftsub:
  4334                           	opt stack 0
  4335  000060                     atan@y:
  4336                           	opt stack 0
  4337  000060                     i2___ftsub@f1:
  4338                           	opt stack 0
  4339                           
  4340                           ; 3 bytes @ 0x0
  4341  000060                     	ds	3
  4342  000063                     atan@x:
  4343                           	opt stack 0
  4344  000063                     i2___ftsub@f2:
  4345                           	opt stack 0
  4346                           
  4347                           ; 3 bytes @ 0x3
  4348  000063                     	ds	3
  4349  000066                     ?i2_printf:
  4350                           	opt stack 0
  4351  000066                     ?_sin:
  4352                           	opt stack 0
  4353  000066                     ?_sqrt:
  4354                           	opt stack 0
  4355  000066                     atan@recip:
  4356                           	opt stack 0
  4357  000066                     i2printf@f:
  4358                           	opt stack 0
  4359  000066                     sin@f:
  4360                           	opt stack 0
  4361  000066                     sqrt@a:
  4362                           	opt stack 0
  4363                           
  4364                           ; 3 bytes @ 0x6
  4365  000066                     	ds	1
  4366  000067                     atan@val_squared:
  4367                           	opt stack 0
  4368                           
  4369                           ; 3 bytes @ 0x7
  4370  000067                     	ds	1
  4371  000068                     ??i2_printf:
  4372                           
  4373                           ; 1 bytes @ 0x8
  4374  000068                     	ds	1
  4375  000069                     ??_sqrt:
  4376  000069                     sin@y:
  4377                           	opt stack 0
  4378                           
  4379                           ; 3 bytes @ 0x9
  4380  000069                     	ds	1
  4381  00006A                     atan@val:
  4382                           	opt stack 0
  4383                           
  4384                           ; 3 bytes @ 0xA
  4385  00006A                     	ds	2
  4386  00006C                     sqrt@og:
  4387                           	opt stack 0
  4388  00006C                     _sin$3325:
  4389                           	opt stack 0
  4390                           
  4391                           ; 3 bytes @ 0xC
  4392  00006C                     	ds	2
  4393  00006E                     i2_printf$3329:
  4394                           	opt stack 0
  4395                           
  4396                           ; 3 bytes @ 0xE
  4397  00006E                     	ds	1
  4398  00006F                     sqrt@i:
  4399                           	opt stack 0
  4400  00006F                     sin@x2:
  4401                           	opt stack 0
  4402                           
  4403                           ; 3 bytes @ 0xF
  4404  00006F                     	ds	1
  4405  000070                     sqrt@z:
  4406                           	opt stack 0
  4407                           
  4408                           ; 3 bytes @ 0x10
  4409  000070                     	ds	1
  4410  000071                     i2printf@idx:
  4411                           	opt stack 0
  4412                           
  4413                           ; 1 bytes @ 0x11
  4414  000071                     	ds	1
  4415  000072                     sin@sgn:
  4416                           	opt stack 0
  4417  000072                     i2printf@cp:
  4418                           	opt stack 0
  4419                           
  4420                           ; 2 bytes @ 0x12
  4421  000072                     	ds	1
  4422  000073                     ?_currentMeasuredToPeak:
  4423                           	opt stack 0
  4424  000073                     currentMeasuredToPeak@Measured:
  4425                           	opt stack 0
  4426  000073                     sqrt@q:
  4427                           	opt stack 0
  4428                           
  4429                           ; 3 bytes @ 0x13
  4430  000073                     	ds	1
  4431  000074                     i2printf@len:
  4432                           	opt stack 0
  4433                           
  4434                           ; 2 bytes @ 0x14
  4435  000074                     	ds	2
  4436  000076                     i2printf@ap:
  4437                           	opt stack 0
  4438  000076                     currentMeasuredToPeak@Angle:
  4439                           	opt stack 0
  4440  000076                     sqrt@x:
  4441                           	opt stack 0
  4442                           
  4443                           ; 3 bytes @ 0x16
  4444  000076                     	ds	2
  4445  000078                     i2printf@flag:
  4446                           	opt stack 0
  4447                           
  4448                           ; 2 bytes @ 0x18
  4449  000078                     	ds	1
  4450  000079                     ?_asin:
  4451                           	opt stack 0
  4452  000079                     currentMeasuredToPeak@Peak:
  4453                           	opt stack 0
  4454  000079                     asin@x:
  4455                           	opt stack 0
  4456                           
  4457                           ; 3 bytes @ 0x19
  4458  000079                     	ds	1
  4459  00007A                     i2printf@exp:
  4460                           	opt stack 0
  4461                           
  4462                           ; 2 bytes @ 0x1A
  4463  00007A                     	ds	2
  4464  00007C                     asin@sgn:
  4465                           	opt stack 0
  4466  00007C                     i2printf@tmpval:
  4467                           	opt stack 0
  4468                           
  4469                           ; 4 bytes @ 0x1C
  4470  00007C                     	ds	3
  4471  00007F                     _asin$3321:
  4472                           	opt stack 0
  4473                           
  4474                           ; 3 bytes @ 0x1F
  4475  00007F                     	ds	1
  4476  000080                     i2printf@fval:
  4477                           	opt stack 0
  4478                           
  4479                           ; 3 bytes @ 0x20
  4480  000080                     	ds	2
  4481  000082                     _asin$3324:
  4482                           	opt stack 0
  4483                           
  4484                           ; 3 bytes @ 0x22
  4485  000082                     	ds	1
  4486  000083                     i2printf@val:
  4487                           	opt stack 0
  4488                           
  4489                           ; 4 bytes @ 0x23
  4490  000083                     	ds	2
  4491  000085                     _asin$3323:
  4492                           	opt stack 0
  4493                           
  4494                           ; 3 bytes @ 0x25
  4495  000085                     	ds	2
  4496  000087                     i2printf@prec:
  4497                           	opt stack 0
  4498                           
  4499                           ; 2 bytes @ 0x27
  4500  000087                     	ds	1
  4501  000088                     asin@y:
  4502                           	opt stack 0
  4503                           
  4504                           ; 3 bytes @ 0x28
  4505  000088                     	ds	1
  4506  000089                     i2printf@c:
  4507                           	opt stack 0
  4508                           
  4509                           ; 1 bytes @ 0x29
  4510  000089                     	ds	2
  4511  00008B                     _asin$3322:
  4512                           	opt stack 0
  4513                           
  4514                           ; 3 bytes @ 0x2B
  4515  00008B                     	ds	3
  4516  00008E                     ?_acos:
  4517                           	opt stack 0
  4518  00008E                     acos@x:
  4519                           	opt stack 0
  4520                           
  4521                           ; 3 bytes @ 0x2E
  4522  00008E                     	ds	3
  4523  000091                     _acos$3320:
  4524                           	opt stack 0
  4525                           
  4526                           ; 3 bytes @ 0x31
  4527  000091                     	ds	3
  4528  000094                     ?_peakToRMS:
  4529                           	opt stack 0
  4530  000094                     peakToRMS@Peak:
  4531                           	opt stack 0
  4532                           
  4533                           ; 3 bytes @ 0x34
  4534  000094                     	ds	3
  4535  000097                     peakToRMS@Angle:
  4536                           	opt stack 0
  4537                           
  4538                           ; 3 bytes @ 0x37
  4539  000097                     	ds	3
  4540  00009A                     _peakToRMS$3314:
  4541                           	opt stack 0
  4542                           
  4543                           ; 3 bytes @ 0x3A
  4544  00009A                     	ds	3
  4545  00009D                     _peakToRMS$3315:
  4546                           	opt stack 0
  4547                           
  4548                           ; 3 bytes @ 0x3D
  4549  00009D                     	ds	3
  4550  0000A0                     _peakToRMS$3313:
  4551                           	opt stack 0
  4552                           
  4553                           ; 3 bytes @ 0x40
  4554  0000A0                     	ds	3
  4555  0000A3                     peakToRMS@RMS:
  4556                           	opt stack 0
  4557                           
  4558                           ; 3 bytes @ 0x43
  4559  0000A3                     	ds	3
  4560  0000A6                     _ADC_postProcessingCallback$3317:
  4561                           	opt stack 0
  4562                           
  4563                           ; 3 bytes @ 0x46
  4564  0000A6                     	ds	3
  4565  0000A9                     _ADC_postProcessingCallback$3318:
  4566                           	opt stack 0
  4567                           
  4568                           ; 3 bytes @ 0x49
  4569  0000A9                     	ds	3
  4570  0000AC                     _ADC_postProcessingCallback$3319:
  4571                           	opt stack 0
  4572                           
  4573                           ; 3 bytes @ 0x4C
  4574  0000AC                     	ds	3
  4575  0000AF                     ADC_postProcessingCallback@currentADCChannel:
  4576                           	opt stack 0
  4577                           
  4578                           ; 1 bytes @ 0x4F
  4579  0000AF                     	ds	1
  4580  0000B0                     _ADC_postProcessingCallback$3316:
  4581                           	opt stack 0
  4582                           
  4583                           ; 3 bytes @ 0x50
  4584  0000B0                     	ds	3
  4585  0000B3                     ??_INTERRUPT_InterruptManagerHigh:
  4586                           
  4587                           ; 1 bytes @ 0x53
  4588  0000B3                     	ds	18
  4589                           tblptru	equ	0xFF8
  4590                           tblptrh	equ	0xFF7
  4591                           tblptrl	equ	0xFF6
  4592                           tablat	equ	0xFF5
  4593                           postinc0	equ	0xFEE
  4594                           wreg	equ	0xFE8
  4595                           postdec1	equ	0xFE5
  4596                           fsr1h	equ	0xFE2
  4597                           fsr1l	equ	0xFE1
  4598                           
  4599                           	psect	cstackCOMRAM
  4600  000001                     __pcstackCOMRAM:
  4601                           	opt stack 0
  4602  000001                     ??i2_isdigit:
  4603  000001                     ?_ADCC_GetConversionResult:
  4604                           	opt stack 0
  4605  000001                     ?i2___awmod:
  4606                           	opt stack 0
  4607  000001                     ?i2___ftpack:
  4608                           	opt stack 0
  4609  000001                     ?i2__div_to_l_:
  4610                           	opt stack 0
  4611  000001                     ?i2__tdiv_to_l_:
  4612                           	opt stack 0
  4613  000001                     ?i2___lldiv:
  4614                           	opt stack 0
  4615  000001                     i2EUSART2_Write@txData:
  4616                           	opt stack 0
  4617  000001                     TMR5_WriteTimer@timerVal:
  4618                           	opt stack 0
  4619  000001                     i2___awmod@dividend:
  4620                           	opt stack 0
  4621  000001                     frexp@value:
  4622                           	opt stack 0
  4623  000001                     i2__div_to_l_@f1:
  4624                           	opt stack 0
  4625  000001                     i2___ftpack@arg:
  4626                           	opt stack 0
  4627  000001                     i2__tdiv_to_l_@f1:
  4628                           	opt stack 0
  4629  000001                     i2___lldiv@dividend:
  4630                           	opt stack 0
  4631                           
  4632                           ; 4 bytes @ 0x0
  4633  000001                     	ds	1
  4634  000002                     i2putch@txData:
  4635                           	opt stack 0
  4636  000002                     i2_isdigit$2489:
  4637                           	opt stack 0
  4638                           
  4639                           ; 1 bytes @ 0x1
  4640  000002                     	ds	1
  4641  000003                     ??_ADCC_GetConversionResult:
  4642  000003                     i2isdigit@c:
  4643                           	opt stack 0
  4644  000003                     i2___awmod@divisor:
  4645                           	opt stack 0
  4646                           
  4647                           ; 2 bytes @ 0x2
  4648  000003                     	ds	1
  4649  000004                     i2___ftpack@exp:
  4650                           	opt stack 0
  4651  000004                     frexp@eptr:
  4652                           	opt stack 0
  4653  000004                     i2__div_to_l_@f2:
  4654                           	opt stack 0
  4655  000004                     i2__tdiv_to_l_@f2:
  4656                           	opt stack 0
  4657                           
  4658                           ; 3 bytes @ 0x3
  4659  000004                     	ds	1
  4660  000005                     i2___awmod@counter:
  4661                           	opt stack 0
  4662  000005                     i2___ftpack@sign:
  4663                           	opt stack 0
  4664  000005                     i2___lldiv@divisor:
  4665                           	opt stack 0
  4666                           
  4667                           ; 4 bytes @ 0x4
  4668  000005                     	ds	1
  4669  000006                     ??_frexp:
  4670  000006                     ??i2___ftpack:
  4671  000006                     i2___awmod@sign:
  4672                           	opt stack 0
  4673                           
  4674                           ; 1 bytes @ 0x5
  4675  000006                     	ds	1
  4676  000007                     ??i2__tdiv_to_l_:
  4677  000007                     ?i2___awdiv:
  4678                           	opt stack 0
  4679  000007                     i2___awdiv@dividend:
  4680                           	opt stack 0
  4681  000007                     i2__div_to_l_@quot:
  4682                           	opt stack 0
  4683                           
  4684                           ; 4 bytes @ 0x6
  4685  000007                     	ds	2
  4686  000009                     ?___lwtoft:
  4687                           	opt stack 0
  4688  000009                     ?i2___lltoft:
  4689                           	opt stack 0
  4690  000009                     ___lwtoft@c:
  4691                           	opt stack 0
  4692  000009                     i2___awdiv@divisor:
  4693                           	opt stack 0
  4694  000009                     i2___lldiv@quotient:
  4695                           	opt stack 0
  4696  000009                     i2___lltoft@c:
  4697                           	opt stack 0
  4698                           
  4699                           ; 4 bytes @ 0x8
  4700  000009                     	ds	1
  4701  00000A                     i2__tdiv_to_l_@quot:
  4702                           	opt stack 0
  4703                           
  4704                           ; 4 bytes @ 0x9
  4705  00000A                     	ds	1
  4706  00000B                     i2___awdiv@counter:
  4707                           	opt stack 0
  4708  00000B                     i2__div_to_l_@cntr:
  4709                           	opt stack 0
  4710                           
  4711                           ; 1 bytes @ 0xA
  4712  00000B                     	ds	1
  4713  00000C                     i2___awdiv@sign:
  4714                           	opt stack 0
  4715  00000C                     i2__div_to_l_@exp1:
  4716                           	opt stack 0
  4717                           
  4718                           ; 1 bytes @ 0xB
  4719  00000C                     	ds	1
  4720  00000D                     ??i2___lltoft:
  4721  00000D                     i2___lldiv@counter:
  4722                           	opt stack 0
  4723  00000D                     i2___awdiv@quotient:
  4724                           	opt stack 0
  4725                           
  4726                           ; 2 bytes @ 0xC
  4727  00000D                     	ds	1
  4728  00000E                     ?i2___llmod:
  4729                           	opt stack 0
  4730  00000E                     i2__tdiv_to_l_@cntr:
  4731                           	opt stack 0
  4732  00000E                     i2___llmod@dividend:
  4733                           	opt stack 0
  4734                           
  4735                           ; 4 bytes @ 0xD
  4736  00000E                     	ds	1
  4737  00000F                     ?i2___wmul:
  4738                           	opt stack 0
  4739  00000F                     i2__tdiv_to_l_@exp1:
  4740                           	opt stack 0
  4741  00000F                     i2___wmul@multiplier:
  4742                           	opt stack 0
  4743                           
  4744                           ; 2 bytes @ 0xE
  4745  00000F                     	ds	2
  4746  000011                     i2___lltoft@exp:
  4747                           	opt stack 0
  4748  000011                     i2___wmul@multiplicand:
  4749                           	opt stack 0
  4750                           
  4751                           ; 2 bytes @ 0x10
  4752  000011                     	ds	1
  4753  000012                     i2___llmod@divisor:
  4754                           	opt stack 0
  4755                           
  4756                           ; 4 bytes @ 0x11
  4757  000012                     	ds	1
  4758  000013                     i2___wmul@product:
  4759                           	opt stack 0
  4760                           
  4761                           ; 2 bytes @ 0x12
  4762  000013                     	ds	2
  4763  000015                     ?i2___ftdiv:
  4764                           	opt stack 0
  4765  000015                     i2___ftdiv@f1:
  4766                           	opt stack 0
  4767                           
  4768                           ; 3 bytes @ 0x14
  4769  000015                     	ds	1
  4770  000016                     i2___llmod@counter:
  4771                           	opt stack 0
  4772                           
  4773                           ; 1 bytes @ 0x15
  4774  000016                     	ds	2
  4775  000018                     i2___ftdiv@f2:
  4776                           	opt stack 0
  4777                           
  4778                           ; 3 bytes @ 0x17
  4779  000018                     	ds	3
  4780  00001B                     ??i2___ftdiv:
  4781                           
  4782                           ; 1 bytes @ 0x1A
  4783  00001B                     	ds	3
  4784  00001E                     i2___ftdiv@cntr:
  4785                           	opt stack 0
  4786                           
  4787                           ; 1 bytes @ 0x1D
  4788  00001E                     	ds	1
  4789  00001F                     i2___ftdiv@exp:
  4790                           	opt stack 0
  4791                           
  4792                           ; 1 bytes @ 0x1E
  4793  00001F                     	ds	1
  4794  000020                     i2___ftdiv@f3:
  4795                           	opt stack 0
  4796                           
  4797                           ; 3 bytes @ 0x1F
  4798  000020                     	ds	3
  4799  000023                     i2___ftdiv@sign:
  4800                           	opt stack 0
  4801                           
  4802                           ; 1 bytes @ 0x22
  4803  000023                     	ds	1
  4804  000024                     ?i2___ftneg:
  4805                           	opt stack 0
  4806  000024                     i2___ftneg@f1:
  4807                           	opt stack 0
  4808                           
  4809                           ; 3 bytes @ 0x23
  4810  000024                     	ds	3
  4811  000027                     ?_fabs:
  4812                           	opt stack 0
  4813  000027                     ?i2___ftmul:
  4814                           	opt stack 0
  4815  000027                     fabs@d:
  4816                           	opt stack 0
  4817  000027                     i2___ftmul@f1:
  4818                           	opt stack 0
  4819                           
  4820                           ; 3 bytes @ 0x26
  4821  000027                     	ds	3
  4822  00002A                     i2___ftge@ff1:
  4823                           	opt stack 0
  4824  00002A                     i2___ftmul@f2:
  4825                           	opt stack 0
  4826                           
  4827                           ; 3 bytes @ 0x29
  4828  00002A                     	ds	3
  4829  00002D                     ??i2___ftmul:
  4830  00002D                     i2___ftge@ff2:
  4831                           	opt stack 0
  4832                           
  4833                           ; 3 bytes @ 0x2C
  4834  00002D                     	ds	3
  4835  000030                     ??i2___ftge:
  4836  000030                     i2___ftmul@exp:
  4837                           	opt stack 0
  4838                           
  4839                           ; 1 bytes @ 0x2F
  4840  000030                     	ds	1
  4841  000031                     i2___ftmul@f3_as_product:
  4842                           	opt stack 0
  4843                           
  4844                           ; 3 bytes @ 0x30
  4845  000031                     	ds	3
  4846  000034                     i2___ftmul@cntr:
  4847                           	opt stack 0
  4848                           
  4849                           ; 1 bytes @ 0x33
  4850  000034                     	ds	1
  4851  000035                     i2___ftmul@sign:
  4852                           	opt stack 0
  4853                           
  4854                           ; 1 bytes @ 0x34
  4855  000035                     	ds	1
  4856  000036                     ?i2_fround:
  4857                           	opt stack 0
  4858  000036                     ?i2_scale:
  4859                           	opt stack 0
  4860                           
  4861                           ; 3 bytes @ 0x35
  4862  000036                     	ds	3
  4863  000039                     i2_fround$3327:
  4864                           	opt stack 0
  4865  000039                     i2_scale$3328:
  4866                           	opt stack 0
  4867                           
  4868                           ; 3 bytes @ 0x38
  4869  000039                     	ds	3
  4870  00003C                     i2scale@scl:
  4871                           	opt stack 0
  4872  00003C                     i2_fround$3326:
  4873                           	opt stack 0
  4874                           
  4875                           ; 3 bytes @ 0x3B
  4876  00003C                     	ds	1
  4877  00003D                     ?i2___fttol:
  4878                           	opt stack 0
  4879  00003D                     i2___fttol@f1:
  4880                           	opt stack 0
  4881                           
  4882                           ; 3 bytes @ 0x3C
  4883  00003D                     	ds	2
  4884  00003F                     i2fround@prec:
  4885                           	opt stack 0
  4886                           
  4887                           ; 1 bytes @ 0x3E
  4888  00003F                     	ds	1
  4889  000040                     ?i2___ftadd:
  4890                           	opt stack 0
  4891  000040                     i2___ftadd@f1:
  4892                           	opt stack 0
  4893                           
  4894                           ; 3 bytes @ 0x3F
  4895  000040                     	ds	1
  4896  000041                     ??i2___fttol:
  4897                           
  4898                           ; 1 bytes @ 0x40
  4899  000041                     	ds	2
  4900  000043                     i2___ftadd@f2:
  4901                           	opt stack 0
  4902                           
  4903                           ; 3 bytes @ 0x42
  4904  000043                     	ds	3
  4905  000046                     ??i2___ftadd:
  4906  000046                     i2___fttol@sign1:
  4907                           	opt stack 0
  4908                           
  4909                           ; 1 bytes @ 0x45
  4910  000046                     	ds	1
  4911  000047                     i2___fttol@lval:
  4912                           	opt stack 0
  4913                           
  4914                           ; 4 bytes @ 0x46
  4915  000047                     	ds	2
  4916  000049                     i2___ftadd@sign:
  4917                           	opt stack 0
  4918                           
  4919                           ; 1 bytes @ 0x48
  4920  000049                     	ds	1
  4921  00004A                     i2___ftadd@exp2:
  4922                           	opt stack 0
  4923                           
  4924                           ; 1 bytes @ 0x49
  4925  00004A                     	ds	1
  4926  00004B                     i2___ftadd@exp1:
  4927                           	opt stack 0
  4928  00004B                     i2___fttol@exp1:
  4929                           	opt stack 0
  4930                           
  4931                           ; 1 bytes @ 0x4A
  4932  00004B                     	ds	1
  4933  00004C                     ?_eval_poly:
  4934                           	opt stack 0
  4935  00004C                     ?___altoft:
  4936                           	opt stack 0
  4937  00004C                     eval_poly@x:
  4938                           	opt stack 0
  4939  00004C                     ___altoft@c:
  4940                           	opt stack 0
  4941                           
  4942                           ; 4 bytes @ 0x4B
  4943  00004C                     	ds	3
  4944  00004F                     eval_poly@d:
  4945                           	opt stack 0
  4946                           
  4947                           ; 2 bytes @ 0x4E
  4948  00004F                     	ds	1
  4949  000050                     ??___altoft:
  4950                           
  4951                           ; 1 bytes @ 0x4F
  4952  000050                     	ds	1
  4953  000051                     eval_poly@n:
  4954                           	opt stack 0
  4955                           
  4956                           ; 2 bytes @ 0x50
  4957  000051                     	ds	2
  4958  000053                     ??_eval_poly:
  4959                           
  4960                           ; 1 bytes @ 0x52
  4961  000053                     	ds	1
  4962  000054                     ___altoft@exp:
  4963                           	opt stack 0
  4964                           
  4965                           ; 1 bytes @ 0x53
  4966  000054                     	ds	1
  4967  000055                     ___altoft@sign:
  4968                           	opt stack 0
  4969  000055                     eval_poly@res:
  4970                           	opt stack 0
  4971                           
  4972                           ; 3 bytes @ 0x54
  4973  000055                     	ds	1
  4974  000056                     ?_floor:
  4975                           	opt stack 0
  4976  000056                     floor@x:
  4977                           	opt stack 0
  4978                           
  4979                           ; 3 bytes @ 0x55
  4980  000056                     	ds	2
  4981  000058                     ?_atan:
  4982                           	opt stack 0
  4983  000058                     atan@f:
  4984                           	opt stack 0
  4985                           
  4986                           ; 3 bytes @ 0x57
  4987  000058                     	ds	1
  4988  000059                     floor@i:
  4989                           	opt stack 0
  4990                           
  4991                           ; 3 bytes @ 0x58
  4992  000059                     	ds	2
  4993  00005B                     
  4994                           ; 1 bytes @ 0x5A
  4995  00005B                     	ds	1
  4996  00005C                     floor@expon:
  4997                           	opt stack 0
  4998                           
  4999                           ; 2 bytes @ 0x5B
  5000  00005C                     	ds	2
  5001  00005E                     tblptru	equ	0xFF8
  5002                           tblptrh	equ	0xFF7
  5003                           tblptrl	equ	0xFF6
  5004                           tablat	equ	0xFF5
  5005                           postinc0	equ	0xFEE
  5006                           wreg	equ	0xFE8
  5007                           postdec1	equ	0xFE5
  5008                           fsr1h	equ	0xFE2
  5009                           fsr1l	equ	0xFE1
  5010                           
  5011                           ; 1 bytes @ 0x5D
  5012 ;;
  5013 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5014 ;;
  5015 ;; *************** function _main *****************
  5016 ;; Defined at:
  5017 ;;		line 239 in file "main.c"
  5018 ;; Parameters:    Size  Location     Type
  5019 ;;		None
  5020 ;; Auto vars:     Size  Location     Type
  5021 ;;		None
  5022 ;; Return value:  Size  Location     Type
  5023 ;;                  1    wreg      void 
  5024 ;; Registers used:
  5025 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5026 ;; Tracked objects:
  5027 ;;		On entry : 0/0
  5028 ;;		On exit  : 0/0
  5029 ;;		Unchanged: 0/0
  5030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5035 ;;Total ram usage:        2 bytes
  5036 ;; Hardware stack levels required when called:   22
  5037 ;; This function calls:
  5038 ;;		_ADCC_SetADIInterruptHandler
  5039 ;;		_SYSTEM_Initialize
  5040 ;;		_TMR6_SetInterruptHandler
  5041 ;;		_TMR7_SetInterruptHandler
  5042 ;;		_terminal_clearTerminal
  5043 ;;		_terminal_ringBufferPull
  5044 ;;		_terminal_setCursorHome
  5045 ;;		_terminal_textAttributesReset
  5046 ;; This function is called by:
  5047 ;;		Startup code after reset
  5048 ;; This function uses a non-reentrant model
  5049 ;;
  5050                           
  5051                           	psect	text0
  5052  01558C                     __ptext0:
  5053                           	opt stack 0
  5054  01558C                     _main:
  5055                           	opt stack 9
  5056                           
  5057                           ;main.c: 244: _delay((unsigned long)((250)*(64000000/4000.0)));
  5058                           
  5059                           ;incstack = 0
  5060  01558C  0E15               	movlw	21
  5061  01558E  0101               	movlb	1	; () banked
  5062  015590  6FB8               	movwf	(??_main+1)& (0+255),b
  5063  015592  0E4B               	movlw	75
  5064  015594  6FB7               	movwf	??_main& (0+255),b
  5065  015596  0EBE               	movlw	190
  5066  015598                     u16177:
  5067  015598  2EE8               	decfsz	wreg,f,c
  5068  01559A  D7FE               	bra	u16177
  5069  01559C  2FB7               	decfsz	??_main& (0+255),f,b
  5070  01559E  D7FC               	bra	u16177
  5071  0155A0  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  5072  0155A2  D7FA               	bra	u16177
  5073  0155A4  F000               	nop	
  5074                           
  5075                           ;main.c: 247: SYSTEM_Initialize();
  5076  0155A6  ECBF  F0AF         	call	_SYSTEM_Initialize	;wreg free
  5077                           
  5078                           ;main.c: 250: LATGbits.LATG0 = 1;
  5079  0155AA  807F               	bsf	3967,0,c	;volatile
  5080                           
  5081                           ;main.c: 253: TMR6_SetInterruptHandler(heartbeatTimerCallback);
  5082  0155AC  0E50               	movlw	low _heartbeatTimerCallback
  5083  0155AE  0101               	movlb	1	; () banked
  5084  0155B0  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
  5085  0155B2  0E5F               	movlw	high _heartbeatTimerCallback
  5086  0155B4  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5087  0155B6  0E01               	movlw	low (_heartbeatTimerCallback shr (0+16))
  5088  0155B8  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5089  0155BA  ECF9  F0B0         	call	_TMR6_SetInterruptHandler	;wreg free
  5090                           
  5091                           ;main.c: 256: ADCC_SetADIInterruptHandler(ADC_postProcessingCallback);
  5092  0155BE  0E14               	movlw	low _ADC_postProcessingCallback
  5093  0155C0  0101               	movlb	1	; () banked
  5094  0155C2  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
  5095  0155C4  0E25               	movlw	high _ADC_postProcessingCallback
  5096  0155C6  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
  5097  0155C8  0E01               	movlw	low (_ADC_postProcessingCallback shr (0+16))
  5098  0155CA  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
  5099  0155CC  EC15  F0B1         	call	_ADCC_SetADIInterruptHandler	;wreg free
  5100                           
  5101                           ;main.c: 259: TMR7_SetInterruptHandler(acquisitionTimerCallback);
  5102  0155D0  0E02               	movlw	low _acquisitionTimerCallback
  5103  0155D2  0101               	movlb	1	; () banked
  5104  0155D4  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
  5105  0155D6  0E5B               	movlw	high _acquisitionTimerCallback
  5106  0155D8  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  5107  0155DA  0E01               	movlw	low (_acquisitionTimerCallback shr (0+16))
  5108  0155DC  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
  5109  0155DE  ECF2  F0B0         	call	_TMR7_SetInterruptHandler	;wreg free
  5110                           
  5111                           ;main.c: 262: (INTCONbits.GIEH = 1);
  5112  0155E2  8EF2               	bsf	intcon,7,c	;volatile
  5113                           
  5114                           ;main.c: 265: (INTCONbits.GIEL = 1);
  5115  0155E4  8CF2               	bsf	intcon,6,c	;volatile
  5116                           
  5117                           ;main.c: 269: terminal_clearTerminal();
  5118  0155E6  ECE3  F0B0         	call	_terminal_clearTerminal	;wreg free
  5119                           
  5120                           ;main.c: 270: terminal_setCursorHome();
  5121  0155EA  ECD3  F0B0         	call	_terminal_setCursorHome	;wreg free
  5122                           
  5123                           ;main.c: 271: terminal_textAttributesReset();
  5124  0155EE  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5125  0155F2                     
  5126                           ;main.c: 275: {
  5127                           ;main.c: 278: if (eusart2RxStringReady) {
  5128  0155F2  0100               	movlb	0	; () banked
  5129  0155F4  A1E9               	btfss	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5130  0155F6  D7FD               	goto	l776
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;main.c: 280: terminal_ringBufferPull();
  5134  0155F8  ECC4  F0A1         	call	_terminal_ringBufferPull	;wreg free
  5135  0155FC  D7FA               	goto	l776
  5136  0155FE                     __end_of_main:
  5137                           	opt stack 0
  5138                           tblptru	equ	0xFF8
  5139                           tblptrh	equ	0xFF7
  5140                           tblptrl	equ	0xFF6
  5141                           tablat	equ	0xFF5
  5142                           intcon	equ	0xFF2
  5143                           postinc0	equ	0xFEE
  5144                           wreg	equ	0xFE8
  5145                           postdec1	equ	0xFE5
  5146                           fsr1h	equ	0xFE2
  5147                           fsr1l	equ	0xFE1
  5148                           
  5149 ;; *************** function _terminal_setCursorHome *****************
  5150 ;; Defined at:
  5151 ;;		line 85 in file "ring_buffer_interface.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;		None
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      void 
  5158 ;; Registers used:
  5159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;Total ram usage:        0 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:   18
  5172 ;; This function calls:
  5173 ;;		_printf
  5174 ;; This function is called by:
  5175 ;;		_main
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text1
  5180  0161A6                     __ptext1:
  5181                           	opt stack 0
  5182  0161A6                     _terminal_setCursorHome:
  5183                           	opt stack 12
  5184                           
  5185                           ;ring_buffer_interface.c: 86: printf("\033[H");
  5186                           
  5187                           ;incstack = 0
  5188  0161A6  0EB5               	movlw	low STR_3
  5189  0161A8  0101               	movlb	1	; () banked
  5190  0161AA  6F64               	movwf	printf@f& (0+255),b
  5191  0161AC  0EFF               	movlw	high STR_3
  5192  0161AE  6F65               	movwf	(printf@f+1)& (0+255),b
  5193  0161B0  EC00  F080         	call	_printf	;wreg free
  5194  0161B4  0012               	return		;funcret
  5195  0161B6                     __end_of_terminal_setCursorHome:
  5196                           	opt stack 0
  5197                           tblptru	equ	0xFF8
  5198                           tblptrh	equ	0xFF7
  5199                           tblptrl	equ	0xFF6
  5200                           tablat	equ	0xFF5
  5201                           intcon	equ	0xFF2
  5202                           postinc0	equ	0xFEE
  5203                           wreg	equ	0xFE8
  5204                           postdec1	equ	0xFE5
  5205                           fsr1h	equ	0xFE2
  5206                           fsr1l	equ	0xFE1
  5207                           
  5208 ;; *************** function _terminal_ringBufferPull *****************
  5209 ;; Defined at:
  5210 ;;		line 12 in file "ring_buffer_interface.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;		None
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  index           2  179[BANK1 ] int 
  5215 ;;  index           2  181[BANK1 ] int 
  5216 ;;  charNumber      2  177[BANK1 ] int 
  5217 ;; Return value:  Size  Location     Type
  5218 ;;                  1    wreg      void 
  5219 ;; Registers used:
  5220 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5221 ;; Tracked objects:
  5222 ;;		On entry : 0/0
  5223 ;;		On exit  : 0/0
  5224 ;;		Unchanged: 0/0
  5225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5227 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5228 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5229 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5230 ;;Total ram usage:        9 bytes
  5231 ;; Hardware stack levels used:    1
  5232 ;; Hardware stack levels required when called:   21
  5233 ;; This function calls:
  5234 ;;		_EUSART2_Read
  5235 ;;		_ringBufferLUT
  5236 ;;		_strlen
  5237 ;; This function is called by:
  5238 ;;		_main
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text2
  5243  014388                     __ptext2:
  5244                           	opt stack 0
  5245  014388                     _terminal_ringBufferPull:
  5246                           	opt stack 9
  5247                           
  5248                           ;ring_buffer_interface.c: 14: int charNumber = eusart2RxCount;
  5249                           
  5250                           ;incstack = 0
  5251  014388  C1DB  F1B1         	movff	_eusart2RxCount,terminal_ringBufferPull@charNumber	;volatile
  5252  01438C  0101               	movlb	1	; () banked
  5253  01438E  6BB2               	clrf	(terminal_ringBufferPull@charNumber+1)& (0+255),b
  5254                           
  5255                           ; BSR set to: 1
  5256                           ;ring_buffer_interface.c: 17: for (int index = 0; index < 64; index++) {
  5257  014390  0E00               	movlw	0
  5258  014392  6FB6               	movwf	(terminal_ringBufferPull@index+1)& (0+255),b
  5259  014394  0E00               	movlw	0
  5260  014396  6FB5               	movwf	terminal_ringBufferPull@index& (0+255),b
  5261  014398                     l10351:
  5262                           
  5263                           ; BSR set to: 1
  5264  014398  BFB6               	btfsc	(terminal_ringBufferPull@index+1)& (0+255),7,b
  5265  01439A  D006               	goto	l815
  5266  01439C  51B6               	movf	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5267  01439E  E10F               	bnz	l10361
  5268  0143A0  0E40               	movlw	64
  5269  0143A2  5DB5               	subwf	terminal_ringBufferPull@index& (0+255),w,b
  5270  0143A4  B0D8               	btfsc	status,0,c
  5271  0143A6  D00B               	goto	u12400
  5272  0143A8                     l815:
  5273                           
  5274                           ; BSR set to: 1
  5275                           ;ring_buffer_interface.c: 19: line[index] = '\0';
  5276                           
  5277                           ; BSR set to: 1
  5278  0143A8  0EC0               	movlw	low _line
  5279  0143AA  25B5               	addwf	terminal_ringBufferPull@index& (0+255),w,b
  5280  0143AC  6ED9               	movwf	fsr2l,c
  5281  0143AE  0E02               	movlw	high _line
  5282  0143B0  21B6               	addwfc	(terminal_ringBufferPull@index+1)& (0+255),w,b
  5283  0143B2  6EDA               	movwf	fsr2h,c
  5284  0143B4  0E00               	movlw	0
  5285  0143B6  6EDF               	movwf	indf2,c
  5286                           
  5287                           ; BSR set to: 1
  5288  0143B8  4BB5               	infsnz	terminal_ringBufferPull@index& (0+255),f,b
  5289  0143BA  2BB6               	incf	(terminal_ringBufferPull@index+1)& (0+255),f,b
  5290  0143BC  D7ED               	goto	l10351
  5291  0143BE                     u12400:
  5292  0143BE                     l10361:
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;ring_buffer_interface.c: 21: }
  5296                           ;ring_buffer_interface.c: 24: for(int index = 0; index < charNumber; index++){
  5297  0143BE  0E00               	movlw	0
  5298  0143C0  6FB4               	movwf	(terminal_ringBufferPull@index_1778+1)& (0+255),b
  5299  0143C2  0E00               	movlw	0
  5300  0143C4  6FB3               	movwf	terminal_ringBufferPull@index_1778& (0+255),b
  5301  0143C6  D00E               	goto	l817
  5302  0143C8                     
  5303                           ; BSR set to: 1
  5304                           ;ring_buffer_interface.c: 26: line[index] = EUSART2_Read();
  5305                           
  5306                           ; BSR set to: 1
  5307  0143C8  EC8B  F0AE         	call	_EUSART2_Read	;wreg free
  5308  0143CC  0101               	movlb	1	; () banked
  5309  0143CE  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5310  0143D0  0EC0               	movlw	low _line
  5311  0143D2  25B3               	addwf	terminal_ringBufferPull@index_1778& (0+255),w,b
  5312  0143D4  6ED9               	movwf	fsr2l,c
  5313  0143D6  0E02               	movlw	high _line
  5314  0143D8  21B4               	addwfc	(terminal_ringBufferPull@index_1778+1)& (0+255),w,b
  5315  0143DA  6EDA               	movwf	fsr2h,c
  5316  0143DC  C1AE  FFDF         	movff	??_terminal_ringBufferPull,indf2
  5317                           
  5318                           ; BSR set to: 1
  5319  0143E0  4BB3               	infsnz	terminal_ringBufferPull@index_1778& (0+255),f,b
  5320  0143E2  2BB4               	incf	(terminal_ringBufferPull@index_1778+1)& (0+255),f,b
  5321  0143E4                     l817:
  5322                           
  5323                           ; BSR set to: 1
  5324                           
  5325                           ; BSR set to: 1
  5326  0143E4  51B1               	movf	terminal_ringBufferPull@charNumber& (0+255),w,b
  5327  0143E6  5DB3               	subwf	terminal_ringBufferPull@index_1778& (0+255),w,b
  5328  0143E8  51B4               	movf	(terminal_ringBufferPull@index_1778+1)& (0+255),w,b
  5329  0143EA  0A80               	xorlw	128
  5330  0143EC  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5331  0143EE  51B2               	movf	(terminal_ringBufferPull@charNumber+1)& (0+255),w,b
  5332  0143F0  0A80               	xorlw	128
  5333  0143F2  59AE               	subwfb	??_terminal_ringBufferPull& (0+255),w,b
  5334  0143F4  A0D8               	btfss	status,0,c
  5335  0143F6  D7E8               	goto	l818
  5336                           
  5337                           ; BSR set to: 1
  5338                           ;ring_buffer_interface.c: 28: }
  5339                           ;ring_buffer_interface.c: 31: eusart2RxTail = eusart2RxHead;
  5340  0143F8  C0DC  F1DC         	movff	_eusart2RxHead,_eusart2RxTail	;volatile
  5341                           
  5342                           ;ring_buffer_interface.c: 34: while((line[strlen(line) - 1] == (int) '\n') ||
  5343                           ;ring_buffer_interface.c: 35: (line[strlen(line) - 1] == (int) '\r')) {
  5344  0143FC  D017               	goto	l820
  5345  0143FE                     
  5346                           ; BSR set to: 1
  5347                           ;ring_buffer_interface.c: 38: line[strlen(line) - 1] = '\0';
  5348                           
  5349                           ; BSR set to: 1
  5350  0143FE  0EFF               	movlw	255
  5351  014400  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5352  014402  0EFF               	movlw	255
  5353  014404  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5354  014406  0EC0               	movlw	low _line
  5355  014408  6F17               	movwf	strlen@s& (0+255),b
  5356  01440A  0E02               	movlw	high _line
  5357  01440C  6F18               	movwf	(strlen@s+1)& (0+255),b
  5358  01440E  EC2A  F0AD         	call	_strlen	;wreg free
  5359  014412  0101               	movlb	1	; () banked
  5360  014414  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5361  014416  2717               	addwf	?_strlen& (0+255),f,b
  5362  014418  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5363  01441A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5364  01441C  0EC0               	movlw	low _line
  5365  01441E  2517               	addwf	?_strlen& (0+255),w,b
  5366  014420  6ED9               	movwf	fsr2l,c
  5367  014422  0E02               	movlw	high _line
  5368  014424  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5369  014426  6EDA               	movwf	fsr2h,c
  5370  014428  0E00               	movlw	0
  5371  01442A  6EDF               	movwf	indf2,c
  5372  01442C                     l820:
  5373                           
  5374                           ; BSR set to: 1
  5375  01442C  0EFF               	movlw	255
  5376  01442E  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5377  014430  0EFF               	movlw	255
  5378  014432  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5379  014434  0EC0               	movlw	low _line
  5380  014436  6F17               	movwf	strlen@s& (0+255),b
  5381  014438  0E02               	movlw	high _line
  5382  01443A  6F18               	movwf	(strlen@s+1)& (0+255),b
  5383  01443C  EC2A  F0AD         	call	_strlen	;wreg free
  5384  014440  0101               	movlb	1	; () banked
  5385  014442  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5386  014444  2717               	addwf	?_strlen& (0+255),f,b
  5387  014446  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5388  014448  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5389  01444A  0EC0               	movlw	low _line
  5390  01444C  2517               	addwf	?_strlen& (0+255),w,b
  5391  01444E  6ED9               	movwf	fsr2l,c
  5392  014450  0E02               	movlw	high _line
  5393  014452  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5394  014454  6EDA               	movwf	fsr2h,c
  5395  014456  0E0A               	movlw	10
  5396  014458  18DE               	xorwf	postinc2,w,c
  5397  01445A  B4D8               	btfsc	status,2,c
  5398  01445C  D7D0               	goto	l821
  5399                           
  5400                           ; BSR set to: 1
  5401  01445E  0EFF               	movlw	255
  5402  014460  6FAE               	movwf	??_terminal_ringBufferPull& (0+255),b
  5403  014462  0EFF               	movlw	255
  5404  014464  6FAF               	movwf	(??_terminal_ringBufferPull+1)& (0+255),b
  5405  014466  0EC0               	movlw	low _line
  5406  014468  6F17               	movwf	strlen@s& (0+255),b
  5407  01446A  0E02               	movlw	high _line
  5408  01446C  6F18               	movwf	(strlen@s+1)& (0+255),b
  5409  01446E  EC2A  F0AD         	call	_strlen	;wreg free
  5410  014472  0101               	movlb	1	; () banked
  5411  014474  51AE               	movf	??_terminal_ringBufferPull& (0+255),w,b
  5412  014476  2717               	addwf	?_strlen& (0+255),f,b
  5413  014478  51AF               	movf	(??_terminal_ringBufferPull+1)& (0+255),w,b
  5414  01447A  2318               	addwfc	(?_strlen+1)& (0+255),f,b
  5415  01447C  0EC0               	movlw	low _line
  5416  01447E  2517               	addwf	?_strlen& (0+255),w,b
  5417  014480  6ED9               	movwf	fsr2l,c
  5418  014482  0E02               	movlw	high _line
  5419  014484  2118               	addwfc	(?_strlen+1)& (0+255),w,b
  5420  014486  6EDA               	movwf	fsr2h,c
  5421  014488  0E0D               	movlw	13
  5422  01448A  18DE               	xorwf	postinc2,w,c
  5423  01448C  B4D8               	btfsc	status,2,c
  5424  01448E  D7B7               	goto	l821
  5425                           
  5426                           ; BSR set to: 1
  5427                           ;ring_buffer_interface.c: 40: }
  5428                           ;ring_buffer_interface.c: 44: eusart2RxStringReady = 0;
  5429  014490  0100               	movlb	0	; () banked
  5430  014492  91E9               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
  5431                           
  5432                           ; BSR set to: 0
  5433                           ;ring_buffer_interface.c: 47: ringBufferLUT(line);
  5434  014494  0EC0               	movlw	low _line
  5435  014496  0101               	movlb	1	; () banked
  5436  014498  6FA0               	movwf	ringBufferLUT@line& (0+255),b
  5437  01449A  0E02               	movlw	high _line
  5438  01449C  6FA1               	movwf	(ringBufferLUT@line+1)& (0+255),b
  5439  01449E  EC2B  F08A         	call	_ringBufferLUT	;wreg free
  5440  0144A2  0012               	return		;funcret
  5441  0144A4                     __end_of_terminal_ringBufferPull:
  5442                           	opt stack 0
  5443                           tblptru	equ	0xFF8
  5444                           tblptrh	equ	0xFF7
  5445                           tblptrl	equ	0xFF6
  5446                           tablat	equ	0xFF5
  5447                           intcon	equ	0xFF2
  5448                           postinc0	equ	0xFEE
  5449                           wreg	equ	0xFE8
  5450                           postdec1	equ	0xFE5
  5451                           fsr1h	equ	0xFE2
  5452                           fsr1l	equ	0xFE1
  5453                           indf2	equ	0xFDF
  5454                           postinc2	equ	0xFDE
  5455                           fsr2h	equ	0xFDA
  5456                           fsr2l	equ	0xFD9
  5457                           status	equ	0xFD8
  5458                           
  5459 ;; *************** function _ringBufferLUT *****************
  5460 ;; Defined at:
  5461 ;;		line 30 in file "ring_buffer_LUT.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  line            2  160[BANK1 ] PTR unsigned char 
  5464 ;;		 -> line(64), 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  angle_degree    3  164[BANK1 ] PTR unsigned char 
  5467 ;;  index           2  170[BANK1 ] int 
  5468 ;;  arg_buff        3  167[BANK1 ] unsigned char [3]
  5469 ;;  percentage      2  172[BANK1 ] int 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  5479 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5480 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5481 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5482 ;;      Totals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5483 ;;Total ram usage:       14 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:   20
  5486 ;; This function calls:
  5487 ;;		___awtoft
  5488 ;;		___ftadd
  5489 ;;		___ftdiv
  5490 ;;		___ftmul
  5491 ;;		___ftneg
  5492 ;;		___wmul
  5493 ;;		_atoi
  5494 ;;		_printf
  5495 ;;		_strcmp
  5496 ;;		_strstr
  5497 ;;		_terminal_printNewline
  5498 ;;		_terminal_textAttributes
  5499 ;;		_terminal_textAttributesReset
  5500 ;; This function is called by:
  5501 ;;		_terminal_ringBufferPull
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           
  5505                           	psect	text3
  5506  011456                     __ptext3:
  5507                           	opt stack 0
  5508  011456                     _ringBufferLUT:
  5509                           	opt stack 9
  5510                           
  5511                           ;ring_buffer_LUT.c: 36: if((0 == strcmp(line, "Reset"))) {
  5512                           
  5513                           ;incstack = 0
  5514  011456  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5515  01145A  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5516  01145E  0EA1               	movlw	low STR_41
  5517  011460  0101               	movlb	1	; () banked
  5518  011462  6F19               	movwf	strcmp@s2& (0+255),b
  5519  011464  0EFF               	movlw	high STR_41
  5520  011466  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5521  011468  ECAA  F0AD         	call	_strcmp	;wreg free
  5522  01146C  0101               	movlb	1	; () banked
  5523  01146E  5117               	movf	?_strcmp& (0+255),w,b
  5524  011470  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5525  011472  A4D8               	btfss	status,2,c
  5526  011474  D00F               	goto	l926
  5527                           
  5528                           ; BSR set to: 1
  5529                           ;ring_buffer_LUT.c: 39: printf("\033[2J");
  5530  011476  0EAC               	movlw	low STR_2
  5531  011478  6F64               	movwf	printf@f& (0+255),b
  5532  01147A  0EFF               	movlw	high STR_2
  5533  01147C  6F65               	movwf	(printf@f+1)& (0+255),b
  5534  01147E  EC00  F080         	call	_printf	;wreg free
  5535                           
  5536                           ;ring_buffer_LUT.c: 42: printf("\033[H");
  5537  011482  0EB5               	movlw	low STR_3
  5538  011484  0101               	movlb	1	; () banked
  5539  011486  6F64               	movwf	printf@f& (0+255),b
  5540  011488  0EFF               	movlw	high STR_3
  5541  01148A  6F65               	movwf	(printf@f+1)& (0+255),b
  5542  01148C  EC00  F080         	call	_printf	;wreg free
  5543  011490  00FF               	reset		;# 
  5544                           
  5545                           ;ring_buffer_LUT.c: 47: }
  5546  011492  0012               	return	
  5547  011494                     l926:
  5548                           
  5549                           ;ring_buffer_LUT.c: 50: else if((0 == strcmp(line, "Clear"))) {
  5550  011494  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5551  011498  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5552  01149C  0E9B               	movlw	low STR_44
  5553  01149E  0101               	movlb	1	; () banked
  5554  0114A0  6F19               	movwf	strcmp@s2& (0+255),b
  5555  0114A2  0EFF               	movlw	high STR_44
  5556  0114A4  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5557  0114A6  ECAA  F0AD         	call	_strcmp	;wreg free
  5558  0114AA  0101               	movlb	1	; () banked
  5559  0114AC  5117               	movf	?_strcmp& (0+255),w,b
  5560  0114AE  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5561  0114B0  A4D8               	btfss	status,2,c
  5562  0114B2  D00E               	goto	l928
  5563                           
  5564                           ; BSR set to: 1
  5565                           ;ring_buffer_LUT.c: 53: printf("\033[2J");
  5566  0114B4  0EAC               	movlw	low STR_2
  5567  0114B6  6F64               	movwf	printf@f& (0+255),b
  5568  0114B8  0EFF               	movlw	high STR_2
  5569  0114BA  6F65               	movwf	(printf@f+1)& (0+255),b
  5570  0114BC  EC00  F080         	call	_printf	;wreg free
  5571                           
  5572                           ;ring_buffer_LUT.c: 56: printf("\033[H");
  5573  0114C0  0EB5               	movlw	low STR_3
  5574  0114C2  0101               	movlb	1	; () banked
  5575  0114C4  6F64               	movwf	printf@f& (0+255),b
  5576  0114C6  0EFF               	movlw	high STR_3
  5577  0114C8  6F65               	movwf	(printf@f+1)& (0+255),b
  5578  0114CA  EC00  F080         	call	_printf	;wreg free
  5579                           
  5580                           ;ring_buffer_LUT.c: 58: }
  5581  0114CE  0012               	return	
  5582  0114D0                     l928:
  5583                           
  5584                           ;ring_buffer_LUT.c: 61: else if((0 == strcmp(line, "*IDN?")) || (0 == strcmp(line, "IDN"
      +                          ))) {
  5585  0114D0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5586  0114D4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5587  0114D8  0E95               	movlw	low STR_47
  5588  0114DA  0101               	movlb	1	; () banked
  5589  0114DC  6F19               	movwf	strcmp@s2& (0+255),b
  5590  0114DE  0EFF               	movlw	high STR_47
  5591  0114E0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5592  0114E2  ECAA  F0AD         	call	_strcmp	;wreg free
  5593  0114E6  0101               	movlb	1	; () banked
  5594  0114E8  5117               	movf	?_strcmp& (0+255),w,b
  5595  0114EA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5596  0114EC  B4D8               	btfsc	status,2,c
  5597  0114EE  D00F               	goto	u11560
  5598                           
  5599                           ; BSR set to: 1
  5600  0114F0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5601  0114F4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5602  0114F8  0EB1               	movlw	low STR_48
  5603  0114FA  6F19               	movwf	strcmp@s2& (0+255),b
  5604  0114FC  0EFF               	movlw	high STR_48
  5605  0114FE  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5606  011500  ECAA  F0AD         	call	_strcmp	;wreg free
  5607  011504  0101               	movlb	1	; () banked
  5608  011506  5117               	movf	?_strcmp& (0+255),w,b
  5609  011508  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5610  01150A  A4D8               	btfss	status,2,c
  5611  01150C  D01D               	goto	l930
  5612  01150E                     u11560:
  5613                           
  5614                           ; BSR set to: 1
  5615                           ;ring_buffer_LUT.c: 64: terminal_printNewline();
  5616                           
  5617                           ; BSR set to: 1
  5618  01150E  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5619                           
  5620                           ;ring_buffer_LUT.c: 66: terminal_textAttributes(GREEN, BLACK, NORMAL);
  5621  011512  0E00               	movlw	0
  5622  011514  0101               	movlb	1	; () banked
  5623  011516  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5624  011518  0E00               	movlw	0
  5625  01151A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5626  01151C  0E02               	movlw	2
  5627  01151E  EC91  F094         	call	_terminal_textAttributes
  5628                           
  5629                           ;ring_buffer_LUT.c: 68: printf("AC Power Meter\n\r");
  5630  011522  0E17               	movlw	low STR_49
  5631  011524  0101               	movlb	1	; () banked
  5632  011526  6F64               	movwf	printf@f& (0+255),b
  5633  011528  0EFF               	movlw	high STR_49
  5634  01152A  6F65               	movwf	(printf@f+1)& (0+255),b
  5635  01152C  EC00  F080         	call	_printf	;wreg free
  5636                           
  5637                           ;ring_buffer_LUT.c: 69: printf("Marquette University ELEN 3035 Final Project\n\r");
  5638  011530  0E5B               	movlw	low STR_50
  5639  011532  0101               	movlb	1	; () banked
  5640  011534  6F64               	movwf	printf@f& (0+255),b
  5641  011536  0EFC               	movlw	high STR_50
  5642  011538  6F65               	movwf	(printf@f+1)& (0+255),b
  5643  01153A  EC00  F080         	call	_printf	;wreg free
  5644                           
  5645                           ;ring_buffer_LUT.c: 71: terminal_textAttributesReset();
  5646  01153E  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5647                           
  5648                           ;ring_buffer_LUT.c: 73: terminal_printNewline();
  5649  011542  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5650                           
  5651                           ;ring_buffer_LUT.c: 75: }
  5652  011546  0012               	return	
  5653  011548                     l930:
  5654                           
  5655                           ;ring_buffer_LUT.c: 78: else if((0 == strcmp(line, "Measure POS3P3?"))) {
  5656  011548  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5657  01154C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5658  011550  0E28               	movlw	low STR_51
  5659  011552  0101               	movlb	1	; () banked
  5660  011554  6F19               	movwf	strcmp@s2& (0+255),b
  5661  011556  0EFF               	movlw	high STR_51
  5662  011558  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5663  01155A  ECAA  F0AD         	call	_strcmp	;wreg free
  5664  01155E  0101               	movlb	1	; () banked
  5665  011560  5117               	movf	?_strcmp& (0+255),w,b
  5666  011562  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5667  011564  A4D8               	btfss	status,2,c
  5668  011566  D01C               	goto	l934
  5669                           
  5670                           ; BSR set to: 1
  5671                           ;ring_buffer_LUT.c: 81: terminal_printNewline();
  5672  011568  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5673                           
  5674                           ;ring_buffer_LUT.c: 83: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5675  01156C  0E00               	movlw	0
  5676  01156E  0101               	movlb	1	; () banked
  5677  011570  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5678  011572  0E00               	movlw	0
  5679  011574  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5680  011576  0E06               	movlw	6
  5681  011578  EC91  F094         	call	_terminal_textAttributes
  5682                           
  5683                           ;ring_buffer_LUT.c: 84: printf("+3.3V rail measured as +%f Volts\n\r", POS3P3_ADC_Result
      +                          );
  5684  01157C  0E28               	movlw	low STR_52
  5685  01157E  0101               	movlb	1	; () banked
  5686  011580  6F64               	movwf	printf@f& (0+255),b
  5687  011582  0EFD               	movlw	high STR_52
  5688  011584  6F65               	movwf	(printf@f+1)& (0+255),b
  5689  011586  C0CB  F166         	movff	_POS3P3_ADC_Result,?_printf+2
  5690  01158A  C0CC  F167         	movff	_POS3P3_ADC_Result+1,?_printf+3
  5691  01158E  C0CD  F168         	movff	_POS3P3_ADC_Result+2,?_printf+4
  5692  011592  EC00  F080         	call	_printf	;wreg free
  5693                           
  5694                           ;ring_buffer_LUT.c: 86: terminal_textAttributesReset();
  5695  011596  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5696                           
  5697                           ;ring_buffer_LUT.c: 88: terminal_printNewline();
  5698  01159A  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5699                           
  5700                           ;ring_buffer_LUT.c: 91: }
  5701  01159E  0012               	return	
  5702  0115A0                     l934:
  5703                           
  5704                           ;ring_buffer_LUT.c: 94: else if((0 == strcmp(line, "Measure POS12?"))) {
  5705  0115A0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5706  0115A4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5707  0115A8  0E48               	movlw	low STR_53
  5708  0115AA  0101               	movlb	1	; () banked
  5709  0115AC  6F19               	movwf	strcmp@s2& (0+255),b
  5710  0115AE  0EFF               	movlw	high STR_53
  5711  0115B0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5712  0115B2  ECAA  F0AD         	call	_strcmp	;wreg free
  5713  0115B6  0101               	movlb	1	; () banked
  5714  0115B8  5117               	movf	?_strcmp& (0+255),w,b
  5715  0115BA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5716  0115BC  A4D8               	btfss	status,2,c
  5717  0115BE  D01C               	goto	l936
  5718                           
  5719                           ; BSR set to: 1
  5720                           ;ring_buffer_LUT.c: 97: terminal_printNewline();
  5721  0115C0  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5722                           
  5723                           ;ring_buffer_LUT.c: 99: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5724  0115C4  0E00               	movlw	0
  5725  0115C6  0101               	movlb	1	; () banked
  5726  0115C8  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5727  0115CA  0E00               	movlw	0
  5728  0115CC  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5729  0115CE  0E06               	movlw	6
  5730  0115D0  EC91  F094         	call	_terminal_textAttributes
  5731                           
  5732                           ;ring_buffer_LUT.c: 100: printf("+12V rail measured as +%f Volts\n\r", POS12_ADC_Result)
      +                          ;
  5733  0115D4  0EB1               	movlw	low STR_54
  5734  0115D6  0101               	movlb	1	; () banked
  5735  0115D8  6F64               	movwf	printf@f& (0+255),b
  5736  0115DA  0EFD               	movlw	high STR_54
  5737  0115DC  6F65               	movwf	(printf@f+1)& (0+255),b
  5738  0115DE  C1C9  F166         	movff	_POS12_ADC_Result,?_printf+2
  5739  0115E2  C1CA  F167         	movff	_POS12_ADC_Result+1,?_printf+3
  5740  0115E6  C1CB  F168         	movff	_POS12_ADC_Result+2,?_printf+4
  5741  0115EA  EC00  F080         	call	_printf	;wreg free
  5742                           
  5743                           ;ring_buffer_LUT.c: 102: terminal_textAttributesReset();
  5744  0115EE  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5745                           
  5746                           ;ring_buffer_LUT.c: 104: terminal_printNewline();
  5747  0115F2  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5748                           
  5749                           ;ring_buffer_LUT.c: 107: }
  5750  0115F6  0012               	return	
  5751  0115F8                     l936:
  5752                           
  5753                           ;ring_buffer_LUT.c: 110: else if((0 == strcmp(line, "Measure Die Temp?"))) {
  5754  0115F8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5755  0115FC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5756  011600  0EF4               	movlw	low STR_55
  5757  011602  0101               	movlb	1	; () banked
  5758  011604  6F19               	movwf	strcmp@s2& (0+255),b
  5759  011606  0EFE               	movlw	high STR_55
  5760  011608  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5761  01160A  ECAA  F0AD         	call	_strcmp	;wreg free
  5762  01160E  0101               	movlb	1	; () banked
  5763  011610  5117               	movf	?_strcmp& (0+255),w,b
  5764  011612  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5765  011614  A4D8               	btfss	status,2,c
  5766  011616  D01C               	goto	l938
  5767                           
  5768                           ; BSR set to: 1
  5769                           ;ring_buffer_LUT.c: 113: terminal_printNewline();
  5770  011618  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5771                           
  5772                           ;ring_buffer_LUT.c: 115: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5773  01161C  0E00               	movlw	0
  5774  01161E  0101               	movlb	1	; () banked
  5775  011620  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5776  011622  0E00               	movlw	0
  5777  011624  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5778  011626  0E06               	movlw	6
  5779  011628  EC91  F094         	call	_terminal_textAttributes
  5780                           
  5781                           ;ring_buffer_LUT.c: 116: printf("Die Temperature measured as %fC\n\r", Temp_ADC_Result);
  5782  01162C  0E4B               	movlw	low STR_56
  5783  01162E  0101               	movlb	1	; () banked
  5784  011630  6F64               	movwf	printf@f& (0+255),b
  5785  011632  0EFD               	movlw	high STR_56
  5786  011634  6F65               	movwf	(printf@f+1)& (0+255),b
  5787  011636  C1C6  F166         	movff	_Temp_ADC_Result,?_printf+2
  5788  01163A  C1C7  F167         	movff	_Temp_ADC_Result+1,?_printf+3
  5789  01163E  C1C8  F168         	movff	_Temp_ADC_Result+2,?_printf+4
  5790  011642  EC00  F080         	call	_printf	;wreg free
  5791                           
  5792                           ;ring_buffer_LUT.c: 118: terminal_textAttributesReset();
  5793  011646  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5794                           
  5795                           ;ring_buffer_LUT.c: 120: terminal_printNewline();
  5796  01164A  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5797                           
  5798                           ;ring_buffer_LUT.c: 123: }
  5799  01164E  0012               	return	
  5800  011650                     l938:
  5801                           
  5802                           ;ring_buffer_LUT.c: 126: else if((0 == strcmp(line, "Measure FVR?"))) {
  5803  011650  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5804  011654  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5805  011658  0E66               	movlw	low STR_57
  5806  01165A  0101               	movlb	1	; () banked
  5807  01165C  6F19               	movwf	strcmp@s2& (0+255),b
  5808  01165E  0EFF               	movlw	high STR_57
  5809  011660  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5810  011662  ECAA  F0AD         	call	_strcmp	;wreg free
  5811  011666  0101               	movlb	1	; () banked
  5812  011668  5117               	movf	?_strcmp& (0+255),w,b
  5813  01166A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5814  01166C  A4D8               	btfss	status,2,c
  5815  01166E  D01C               	goto	l940
  5816                           
  5817                           ; BSR set to: 1
  5818                           ;ring_buffer_LUT.c: 129: terminal_printNewline();
  5819  011670  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5820                           
  5821                           ;ring_buffer_LUT.c: 131: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5822  011674  0E00               	movlw	0
  5823  011676  0101               	movlb	1	; () banked
  5824  011678  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5825  01167A  0E00               	movlw	0
  5826  01167C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5827  01167E  0E06               	movlw	6
  5828  011680  EC91  F094         	call	_terminal_textAttributes
  5829                           
  5830                           ;ring_buffer_LUT.c: 132: printf("Fixed Voltage Reference Buffer 1 measured as %f Volts\n
      +                          \r", FVR_ADC_Result);
  5831  011684  0E23               	movlw	low STR_58
  5832  011686  0101               	movlb	1	; () banked
  5833  011688  6F64               	movwf	printf@f& (0+255),b
  5834  01168A  0EFC               	movlw	high STR_58
  5835  01168C  6F65               	movwf	(printf@f+1)& (0+255),b
  5836  01168E  C0E0  F166         	movff	_FVR_ADC_Result,?_printf+2
  5837  011692  C0E1  F167         	movff	_FVR_ADC_Result+1,?_printf+3
  5838  011696  C0E2  F168         	movff	_FVR_ADC_Result+2,?_printf+4
  5839  01169A  EC00  F080         	call	_printf	;wreg free
  5840                           
  5841                           ;ring_buffer_LUT.c: 134: terminal_textAttributesReset();
  5842  01169E  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5843                           
  5844                           ;ring_buffer_LUT.c: 136: terminal_printNewline();
  5845  0116A2  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5846                           
  5847                           ;ring_buffer_LUT.c: 139: }
  5848  0116A6  0012               	return	
  5849  0116A8                     l940:
  5850                           
  5851                           ;ring_buffer_LUT.c: 142: else if ((0 == strcmp(line, "Measure Detected Current?"))) {
  5852  0116A8  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5853  0116AC  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5854  0116B0  0E50               	movlw	low STR_59
  5855  0116B2  0101               	movlb	1	; () banked
  5856  0116B4  6F19               	movwf	strcmp@s2& (0+255),b
  5857  0116B6  0EFE               	movlw	high STR_59
  5858  0116B8  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5859  0116BA  ECAA  F0AD         	call	_strcmp	;wreg free
  5860  0116BE  0101               	movlb	1	; () banked
  5861  0116C0  5117               	movf	?_strcmp& (0+255),w,b
  5862  0116C2  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5863  0116C4  A4D8               	btfss	status,2,c
  5864  0116C6  D01C               	goto	l942
  5865                           
  5866                           ; BSR set to: 1
  5867                           ;ring_buffer_LUT.c: 145: terminal_printNewline();
  5868  0116C8  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5869                           
  5870                           ;ring_buffer_LUT.c: 147: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5871  0116CC  0E00               	movlw	0
  5872  0116CE  0101               	movlb	1	; () banked
  5873  0116D0  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5874  0116D2  0E00               	movlw	0
  5875  0116D4  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5876  0116D6  0E06               	movlw	6
  5877  0116D8  EC91  F094         	call	_terminal_textAttributes
  5878                           
  5879                           ;ring_buffer_LUT.c: 148: printf("Measured Current is %.3f Amps\n\r", Imeas);
  5880  0116DC  0EF4               	movlw	low STR_60
  5881  0116DE  0101               	movlb	1	; () banked
  5882  0116E0  6F64               	movwf	printf@f& (0+255),b
  5883  0116E2  0EFD               	movlw	high STR_60
  5884  0116E4  6F65               	movwf	(printf@f+1)& (0+255),b
  5885  0116E6  C0C5  F166         	movff	_Imeas,?_printf+2
  5886  0116EA  C0C6  F167         	movff	_Imeas+1,?_printf+3
  5887  0116EE  C0C7  F168         	movff	_Imeas+2,?_printf+4
  5888  0116F2  EC00  F080         	call	_printf	;wreg free
  5889                           
  5890                           ;ring_buffer_LUT.c: 150: terminal_textAttributesReset();
  5891  0116F6  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5892                           
  5893                           ;ring_buffer_LUT.c: 152: terminal_printNewline();
  5894  0116FA  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5895                           
  5896                           ;ring_buffer_LUT.c: 154: }
  5897  0116FE  0012               	return	
  5898  011700                     l942:
  5899                           
  5900                           ;ring_buffer_LUT.c: 157: else if ((0 == strcmp(line, "Measure RMS Current?"))) {
  5901  011700  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5902  011704  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5903  011708  0EDF               	movlw	low STR_61
  5904  01170A  0101               	movlb	1	; () banked
  5905  01170C  6F19               	movwf	strcmp@s2& (0+255),b
  5906  01170E  0EFE               	movlw	high STR_61
  5907  011710  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5908  011712  ECAA  F0AD         	call	_strcmp	;wreg free
  5909  011716  0101               	movlb	1	; () banked
  5910  011718  5117               	movf	?_strcmp& (0+255),w,b
  5911  01171A  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5912  01171C  A4D8               	btfss	status,2,c
  5913  01171E  D01C               	goto	l944
  5914                           
  5915                           ; BSR set to: 1
  5916                           ;ring_buffer_LUT.c: 160: terminal_printNewline();
  5917  011720  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5918                           
  5919                           ;ring_buffer_LUT.c: 162: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5920  011724  0E00               	movlw	0
  5921  011726  0101               	movlb	1	; () banked
  5922  011728  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5923  01172A  0E00               	movlw	0
  5924  01172C  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5925  01172E  0E06               	movlw	6
  5926  011730  EC91  F094         	call	_terminal_textAttributes
  5927                           
  5928                           ;ring_buffer_LUT.c: 163: printf("RMS Output Current is %.3f Arms\n\r", Irms);
  5929  011734  0E6D               	movlw	low STR_62
  5930  011736  0101               	movlb	1	; () banked
  5931  011738  6F64               	movwf	printf@f& (0+255),b
  5932  01173A  0EFD               	movlw	high STR_62
  5933  01173C  6F65               	movwf	(printf@f+1)& (0+255),b
  5934  01173E  C1C3  F166         	movff	_Irms,?_printf+2
  5935  011742  C1C4  F167         	movff	_Irms+1,?_printf+3
  5936  011746  C1C5  F168         	movff	_Irms+2,?_printf+4
  5937  01174A  EC00  F080         	call	_printf	;wreg free
  5938                           
  5939                           ;ring_buffer_LUT.c: 165: terminal_textAttributesReset();
  5940  01174E  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5941                           
  5942                           ;ring_buffer_LUT.c: 167: terminal_printNewline();
  5943  011752  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5944                           
  5945                           ;ring_buffer_LUT.c: 169: }
  5946  011756  0012               	return	
  5947  011758                     l944:
  5948                           
  5949                           ;ring_buffer_LUT.c: 172: else if ((0 == strcmp(line, "Measure RMS Voltage?"))) {
  5950  011758  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  5951  01175C  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  5952  011760  0ECA               	movlw	low STR_63
  5953  011762  0101               	movlb	1	; () banked
  5954  011764  6F19               	movwf	strcmp@s2& (0+255),b
  5955  011766  0EFE               	movlw	high STR_63
  5956  011768  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  5957  01176A  ECAA  F0AD         	call	_strcmp	;wreg free
  5958  01176E  0101               	movlb	1	; () banked
  5959  011770  5117               	movf	?_strcmp& (0+255),w,b
  5960  011772  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  5961  011774  A4D8               	btfss	status,2,c
  5962  011776  D01C               	goto	l946
  5963                           
  5964                           ; BSR set to: 1
  5965                           ;ring_buffer_LUT.c: 175: terminal_printNewline();
  5966  011778  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5967                           
  5968                           ;ring_buffer_LUT.c: 177: terminal_textAttributes(CYAN, BLACK, NORMAL);
  5969  01177C  0E00               	movlw	0
  5970  01177E  0101               	movlb	1	; () banked
  5971  011780  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  5972  011782  0E00               	movlw	0
  5973  011784  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  5974  011786  0E06               	movlw	6
  5975  011788  EC91  F094         	call	_terminal_textAttributes
  5976                           
  5977                           ;ring_buffer_LUT.c: 178: printf("RMS Output Voltage is %.3f Vrms\n\r", Vrms);
  5978  01178C  0E8F               	movlw	low STR_64
  5979  01178E  0101               	movlb	1	; () banked
  5980  011790  6F64               	movwf	printf@f& (0+255),b
  5981  011792  0EFD               	movlw	high STR_64
  5982  011794  6F65               	movwf	(printf@f+1)& (0+255),b
  5983  011796  C1C0  F166         	movff	_Vrms,?_printf+2
  5984  01179A  C1C1  F167         	movff	_Vrms+1,?_printf+3
  5985  01179E  C1C2  F168         	movff	_Vrms+2,?_printf+4
  5986  0117A2  EC00  F080         	call	_printf	;wreg free
  5987                           
  5988                           ;ring_buffer_LUT.c: 180: terminal_textAttributesReset();
  5989  0117A6  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  5990                           
  5991                           ;ring_buffer_LUT.c: 182: terminal_printNewline();
  5992  0117AA  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  5993                           
  5994                           ;ring_buffer_LUT.c: 184: }
  5995  0117AE  0012               	return	
  5996  0117B0                     l946:
  5997                           
  5998                           ;ring_buffer_LUT.c: 187: else if ((0 == strcmp(line, "Enable Dimming"))) {
  5999  0117B0  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6000  0117B4  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6001  0117B8  0E57               	movlw	low STR_65
  6002  0117BA  0101               	movlb	1	; () banked
  6003  0117BC  6F19               	movwf	strcmp@s2& (0+255),b
  6004  0117BE  0EFF               	movlw	high STR_65
  6005  0117C0  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6006  0117C2  ECAA  F0AD         	call	_strcmp	;wreg free
  6007  0117C6  0101               	movlb	1	; () banked
  6008  0117C8  5117               	movf	?_strcmp& (0+255),w,b
  6009  0117CA  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6010  0117CC  A4D8               	btfss	status,2,c
  6011  0117CE  D017               	goto	l948
  6012                           
  6013                           ; BSR set to: 1
  6014                           ;ring_buffer_LUT.c: 190: LATGbits.LATG0 = 0;
  6015  0117D0  907F               	bcf	3967,0,c	;volatile
  6016                           
  6017                           ; BSR set to: 1
  6018                           ;ring_buffer_LUT.c: 193: terminal_printNewline();
  6019  0117D2  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6020                           
  6021                           ;ring_buffer_LUT.c: 195: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6022  0117D6  0E00               	movlw	0
  6023  0117D8  0101               	movlb	1	; () banked
  6024  0117DA  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6025  0117DC  0E00               	movlw	0
  6026  0117DE  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6027  0117E0  0E06               	movlw	6
  6028  0117E2  EC91  F094         	call	_terminal_textAttributes
  6029                           
  6030                           ;ring_buffer_LUT.c: 196: printf("TRIAC output dimming has been enabled\n\r");
  6031  0117E6  0EB3               	movlw	low STR_66
  6032  0117E8  0101               	movlb	1	; () banked
  6033  0117EA  6F64               	movwf	printf@f& (0+255),b
  6034  0117EC  0EFC               	movlw	high STR_66
  6035  0117EE  6F65               	movwf	(printf@f+1)& (0+255),b
  6036  0117F0  EC00  F080         	call	_printf	;wreg free
  6037                           
  6038                           ;ring_buffer_LUT.c: 198: terminal_textAttributesReset();
  6039  0117F4  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6040                           
  6041                           ;ring_buffer_LUT.c: 200: terminal_printNewline();
  6042  0117F8  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6043                           
  6044                           ;ring_buffer_LUT.c: 202: }
  6045  0117FC  0012               	return	
  6046  0117FE                     l948:
  6047                           
  6048                           ;ring_buffer_LUT.c: 205: else if ((0 == strcmp(line, "Disable Dimming"))) {
  6049  0117FE  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6050  011802  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6051  011806  0E38               	movlw	low STR_67
  6052  011808  0101               	movlb	1	; () banked
  6053  01180A  6F19               	movwf	strcmp@s2& (0+255),b
  6054  01180C  0EFF               	movlw	high STR_67
  6055  01180E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6056  011810  ECAA  F0AD         	call	_strcmp	;wreg free
  6057  011814  0101               	movlb	1	; () banked
  6058  011816  5117               	movf	?_strcmp& (0+255),w,b
  6059  011818  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6060  01181A  A4D8               	btfss	status,2,c
  6061  01181C  D018               	goto	l950
  6062                           
  6063                           ; BSR set to: 1
  6064                           ;ring_buffer_LUT.c: 208: LATGbits.LATG0 = 1;
  6065  01181E  807F               	bsf	3967,0,c	;volatile
  6066                           
  6067                           ;ring_buffer_LUT.c: 209: LATGbits.LATG1 = 1;
  6068  011820  827F               	bsf	3967,1,c	;volatile
  6069                           
  6070                           ; BSR set to: 1
  6071                           ;ring_buffer_LUT.c: 212: terminal_printNewline();
  6072  011822  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6073                           
  6074                           ;ring_buffer_LUT.c: 214: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6075  011826  0E00               	movlw	0
  6076  011828  0101               	movlb	1	; () banked
  6077  01182A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6078  01182C  0E00               	movlw	0
  6079  01182E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6080  011830  0E06               	movlw	6
  6081  011832  EC91  F094         	call	_terminal_textAttributes
  6082                           
  6083                           ;ring_buffer_LUT.c: 215: printf("TRIAC output dimming has been disabled\n\r");
  6084  011836  0E8A               	movlw	low STR_68
  6085  011838  0101               	movlb	1	; () banked
  6086  01183A  6F64               	movwf	printf@f& (0+255),b
  6087  01183C  0EFC               	movlw	high STR_68
  6088  01183E  6F65               	movwf	(printf@f+1)& (0+255),b
  6089  011840  EC00  F080         	call	_printf	;wreg free
  6090                           
  6091                           ;ring_buffer_LUT.c: 217: terminal_textAttributesReset();
  6092  011844  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6093                           
  6094                           ;ring_buffer_LUT.c: 219: terminal_printNewline();
  6095  011848  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6096                           
  6097                           ;ring_buffer_LUT.c: 221: }
  6098  01184C  0012               	return	
  6099  01184E                     l950:
  6100                           
  6101                           ;ring_buffer_LUT.c: 224: else if ((0 == strcmp(line, "Enable Load"))) {
  6102  01184E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6103  011852  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6104  011856  0E80               	movlw	low STR_69
  6105  011858  0101               	movlb	1	; () banked
  6106  01185A  6F19               	movwf	strcmp@s2& (0+255),b
  6107  01185C  0EFF               	movlw	high STR_69
  6108  01185E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6109  011860  ECAA  F0AD         	call	_strcmp	;wreg free
  6110  011864  0101               	movlb	1	; () banked
  6111  011866  5117               	movf	?_strcmp& (0+255),w,b
  6112  011868  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6113  01186A  A4D8               	btfss	status,2,c
  6114  01186C  D016               	goto	l952
  6115                           
  6116                           ; BSR set to: 1
  6117                           ;ring_buffer_LUT.c: 228: terminal_printNewline();
  6118  01186E  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6119                           
  6120                           ;ring_buffer_LUT.c: 230: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6121  011872  0E00               	movlw	0
  6122  011874  0101               	movlb	1	; () banked
  6123  011876  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6124  011878  0E00               	movlw	0
  6125  01187A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6126  01187C  0E06               	movlw	6
  6127  01187E  EC91  F094         	call	_terminal_textAttributes
  6128                           
  6129                           ;ring_buffer_LUT.c: 231: printf("Load has been enabled\n\r");
  6130  011882  0E83               	movlw	low STR_70
  6131  011884  0101               	movlb	1	; () banked
  6132  011886  6F64               	movwf	printf@f& (0+255),b
  6133  011888  0EFE               	movlw	high STR_70
  6134  01188A  6F65               	movwf	(printf@f+1)& (0+255),b
  6135  01188C  EC00  F080         	call	_printf	;wreg free
  6136                           
  6137                           ;ring_buffer_LUT.c: 233: terminal_textAttributesReset();
  6138  011890  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6139                           
  6140                           ;ring_buffer_LUT.c: 235: terminal_printNewline();
  6141  011894  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6142                           
  6143                           ;ring_buffer_LUT.c: 237: }
  6144  011898  0012               	return	
  6145  01189A                     l952:
  6146                           
  6147                           ;ring_buffer_LUT.c: 240: else if ((0 == strcmp(line, "Disable Load"))) {
  6148  01189A  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6149  01189E  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6150  0118A2  0E73               	movlw	low STR_71
  6151  0118A4  0101               	movlb	1	; () banked
  6152  0118A6  6F19               	movwf	strcmp@s2& (0+255),b
  6153  0118A8  0EFF               	movlw	high STR_71
  6154  0118AA  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6155  0118AC  ECAA  F0AD         	call	_strcmp	;wreg free
  6156  0118B0  0101               	movlb	1	; () banked
  6157  0118B2  5117               	movf	?_strcmp& (0+255),w,b
  6158  0118B4  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6159  0118B6  A4D8               	btfss	status,2,c
  6160  0118B8  D018               	goto	l954
  6161                           
  6162                           ; BSR set to: 1
  6163                           ;ring_buffer_LUT.c: 242: LATGbits.LATG1 = 0;
  6164  0118BA  927F               	bcf	3967,1,c	;volatile
  6165                           
  6166                           ;ring_buffer_LUT.c: 243: LATGbits.LATG0 = 0;
  6167  0118BC  907F               	bcf	3967,0,c	;volatile
  6168                           
  6169                           ; BSR set to: 1
  6170                           ;ring_buffer_LUT.c: 246: terminal_printNewline();
  6171  0118BE  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6172                           
  6173                           ;ring_buffer_LUT.c: 248: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6174  0118C2  0E00               	movlw	0
  6175  0118C4  0101               	movlb	1	; () banked
  6176  0118C6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6177  0118C8  0E00               	movlw	0
  6178  0118CA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6179  0118CC  0E06               	movlw	6
  6180  0118CE  EC91  F094         	call	_terminal_textAttributes
  6181                           
  6182                           ;ring_buffer_LUT.c: 249: printf("Load has been disabled\n\r");
  6183  0118D2  0E6A               	movlw	low STR_72
  6184  0118D4  0101               	movlb	1	; () banked
  6185  0118D6  6F64               	movwf	printf@f& (0+255),b
  6186  0118D8  0EFE               	movlw	high STR_72
  6187  0118DA  6F65               	movwf	(printf@f+1)& (0+255),b
  6188  0118DC  EC00  F080         	call	_printf	;wreg free
  6189                           
  6190                           ;ring_buffer_LUT.c: 251: terminal_textAttributesReset();
  6191  0118E0  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6192                           
  6193                           ;ring_buffer_LUT.c: 253: terminal_printNewline();
  6194  0118E4  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6195                           
  6196                           ;ring_buffer_LUT.c: 255: }
  6197  0118E8  0012               	return	
  6198  0118EA                     l954:
  6199                           
  6200                           ;ring_buffer_LUT.c: 258: else if ((strstr(line, "Set Dimming Percentage "))) {
  6201  0118EA  C1A0  F126         	movff	ringBufferLUT@line,strstr@s1
  6202  0118EE  C1A1  F127         	movff	ringBufferLUT@line+1,strstr@s1+1
  6203  0118F2  0E9B               	movlw	low STR_73
  6204  0118F4  0101               	movlb	1	; () banked
  6205  0118F6  6F28               	movwf	strstr@s2& (0+255),b
  6206  0118F8  0EFE               	movlw	high STR_73
  6207  0118FA  6F29               	movwf	(strstr@s2+1)& (0+255),b
  6208  0118FC  EC00  F0A9         	call	_strstr	;wreg free
  6209  011900  0101               	movlb	1	; () banked
  6210  011902  5126               	movf	?_strstr& (0+255),w,b
  6211  011904  1127               	iorwf	(?_strstr+1)& (0+255),w,b
  6212  011906  B4D8               	btfsc	status,2,c
  6213  011908  D10C               	goto	l956
  6214                           
  6215                           ; BSR set to: 1
  6216                           ;ring_buffer_LUT.c: 261: char arg_buff[3];
  6217                           ;ring_buffer_LUT.c: 264: for (int index = 0; index < 3; index++) {
  6218  01190A  0E00               	movlw	0
  6219  01190C  6FAB               	movwf	(ringBufferLUT@index+1)& (0+255),b
  6220  01190E  0E00               	movlw	0
  6221  011910  6FAA               	movwf	ringBufferLUT@index& (0+255),b
  6222  011912                     l9947:
  6223                           
  6224                           ; BSR set to: 1
  6225  011912  BFAB               	btfsc	(ringBufferLUT@index+1)& (0+255),7,b
  6226  011914  D006               	goto	l957
  6227  011916  51AB               	movf	(ringBufferLUT@index+1)& (0+255),w,b
  6228  011918  E11B               	bnz	l9957
  6229  01191A  0E03               	movlw	3
  6230  01191C  5DAA               	subwf	ringBufferLUT@index& (0+255),w,b
  6231  01191E  B0D8               	btfsc	status,0,c
  6232  011920  D017               	goto	u11700
  6233  011922                     l957:
  6234                           
  6235                           ; BSR set to: 1
  6236                           ;ring_buffer_LUT.c: 266: arg_buff[index] = line[index + 23];
  6237                           
  6238                           ; BSR set to: 1
  6239  011922  0E17               	movlw	23
  6240  011924  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  6241  011926  6FA2               	movwf	??_ringBufferLUT& (0+255),b
  6242  011928  0E00               	movlw	0
  6243  01192A  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6244  01192C  6FA3               	movwf	(??_ringBufferLUT+1)& (0+255),b
  6245  01192E  51A2               	movf	??_ringBufferLUT& (0+255),w,b
  6246  011930  25A0               	addwf	ringBufferLUT@line& (0+255),w,b
  6247  011932  6ED9               	movwf	fsr2l,c
  6248  011934  51A3               	movf	(??_ringBufferLUT+1)& (0+255),w,b
  6249  011936  21A1               	addwfc	(ringBufferLUT@line+1)& (0+255),w,b
  6250  011938  6EDA               	movwf	fsr2h,c
  6251  01193A  0EA7               	movlw	low ringBufferLUT@arg_buff
  6252  01193C  25AA               	addwf	ringBufferLUT@index& (0+255),w,b
  6253  01193E  6EE1               	movwf	fsr1l,c
  6254  011940  0E01               	movlw	high ringBufferLUT@arg_buff
  6255  011942  21AB               	addwfc	(ringBufferLUT@index+1)& (0+255),w,b
  6256  011944  6EE2               	movwf	fsr1h,c
  6257  011946  CFDF FFE7          	movff	indf2,indf1
  6258                           
  6259                           ; BSR set to: 1
  6260  01194A  4BAA               	infsnz	ringBufferLUT@index& (0+255),f,b
  6261  01194C  2BAB               	incf	(ringBufferLUT@index+1)& (0+255),f,b
  6262  01194E  D7E1               	goto	l9947
  6263  011950                     u11700:
  6264  011950                     l9957:
  6265                           
  6266                           ; BSR set to: 1
  6267                           ;ring_buffer_LUT.c: 268: }
  6268                           ;ring_buffer_LUT.c: 270: int percentage = atoi(arg_buff);
  6269  011950  0EA7               	movlw	low ringBufferLUT@arg_buff
  6270  011952  6F2B               	movwf	atoi@s& (0+255),b
  6271  011954  0E01               	movlw	high ringBufferLUT@arg_buff
  6272  011956  6F2C               	movwf	(atoi@s+1)& (0+255),b
  6273  011958  EC00  F0A6         	call	_atoi	;wreg free
  6274  01195C  C12B  F1AC         	movff	?_atoi,ringBufferLUT@percentage
  6275  011960  C12C  F1AD         	movff	?_atoi+1,ringBufferLUT@percentage+1
  6276                           
  6277                           ;ring_buffer_LUT.c: 273: if ( (percentage >= 100) ||
  6278                           ;ring_buffer_LUT.c: 274: (percentage <= 0)) {
  6279  011964  0101               	movlb	1	; () banked
  6280  011966  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6281  011968  D006               	goto	u11710
  6282  01196A  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6283  01196C  E10B               	bnz	l9963
  6284  01196E  0E64               	movlw	100
  6285  011970  5DAC               	subwf	ringBufferLUT@percentage& (0+255),w,b
  6286  011972  B0D8               	btfsc	status,0,c
  6287  011974  D007               	goto	u11720
  6288  011976                     u11710:
  6289                           
  6290                           ; BSR set to: 1
  6291  011976  BFAD               	btfsc	(ringBufferLUT@percentage+1)& (0+255),7,b
  6292  011978  D005               	goto	u11720
  6293  01197A  51AD               	movf	(ringBufferLUT@percentage+1)& (0+255),w,b
  6294  01197C  E128               	bnz	l9965
  6295  01197E  05AC               	decf	ringBufferLUT@percentage& (0+255),w,b
  6296  011980  B0D8               	btfsc	status,0,c
  6297  011982  D025               	goto	l959
  6298  011984                     u11720:
  6299  011984                     l9963:
  6300                           
  6301                           ; BSR set to: 1
  6302                           ;ring_buffer_LUT.c: 277: terminal_printNewline();
  6303  011984  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6304                           
  6305                           ;ring_buffer_LUT.c: 279: terminal_textAttributes(RED, BLACK, NORMAL);
  6306  011988  0E00               	movlw	0
  6307  01198A  0101               	movlb	1	; () banked
  6308  01198C  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6309  01198E  0E00               	movlw	0
  6310  011990  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6311  011992  0E01               	movlw	1
  6312  011994  EC91  F094         	call	_terminal_textAttributes
  6313                           
  6314                           ;ring_buffer_LUT.c: 280: printf("ERROR: Please set dimming percentage to an integer grea
      +                          ter than 0 and less than 100\n\r");
  6315  011998  0E15               	movlw	low STR_74
  6316  01199A  0101               	movlb	1	; () banked
  6317  01199C  6F64               	movwf	printf@f& (0+255),b
  6318  01199E  0EFB               	movlw	high STR_74
  6319  0119A0  6F65               	movwf	(printf@f+1)& (0+255),b
  6320  0119A2  EC00  F080         	call	_printf	;wreg free
  6321                           
  6322                           ;ring_buffer_LUT.c: 282: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6323  0119A6  0E00               	movlw	0
  6324  0119A8  0101               	movlb	1	; () banked
  6325  0119AA  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6326  0119AC  0E00               	movlw	0
  6327  0119AE  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6328  0119B0  0E03               	movlw	3
  6329  0119B2  EC91  F094         	call	_terminal_textAttributes
  6330                           
  6331                           ;ring_buffer_LUT.c: 283: printf("If you'd like to completely enable or disable the load,
      +                           disable dimming and use respective commands\n\r");
  6332  0119B6  0EAF               	movlw	low STR_75
  6333  0119B8  0101               	movlb	1	; () banked
  6334  0119BA  6F64               	movwf	printf@f& (0+255),b
  6335  0119BC  0EFA               	movlw	high STR_75
  6336  0119BE  6F65               	movwf	(printf@f+1)& (0+255),b
  6337  0119C0  EC00  F080         	call	_printf	;wreg free
  6338                           
  6339                           ;ring_buffer_LUT.c: 285: terminal_textAttributesReset();
  6340  0119C4  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6341                           
  6342                           ;ring_buffer_LUT.c: 287: terminal_printNewline();
  6343  0119C8  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6344                           
  6345                           ;ring_buffer_LUT.c: 289: }
  6346  0119CC  0012               	return	
  6347  0119CE                     l959:
  6348  0119CE                     l9965:
  6349                           
  6350                           ;ring_buffer_LUT.c: 292: else {
  6351                           ;ring_buffer_LUT.c: 295: TRIAC_Firing_Angle = ((100.0 - (double) percentage) / 100.0) * 
      +                          3.14159265358979323846;
  6352  0119CE  0E00               	movlw	0
  6353  0119D0  0101               	movlb	1	; () banked
  6354  0119D2  6F3A               	movwf	___ftdiv@f2& (0+255),b
  6355  0119D4  0EC8               	movlw	200
  6356  0119D6  6F3B               	movwf	(___ftdiv@f2+1)& (0+255),b
  6357  0119D8  0E42               	movlw	66
  6358  0119DA  6F3C               	movwf	(___ftdiv@f2+2)& (0+255),b
  6359  0119DC  0E00               	movlw	0
  6360  0119DE  6F2E               	movwf	___ftadd@f2& (0+255),b
  6361  0119E0  0EC8               	movlw	200
  6362  0119E2  6F2F               	movwf	(___ftadd@f2+1)& (0+255),b
  6363  0119E4  0E42               	movlw	66
  6364  0119E6  6F30               	movwf	(___ftadd@f2+2)& (0+255),b
  6365  0119E8  C1AC  F11F         	movff	ringBufferLUT@percentage,___awtoft@c
  6366  0119EC  C1AD  F120         	movff	ringBufferLUT@percentage+1,___awtoft@c+1
  6367  0119F0  ECEF  F0AE         	call	___awtoft	;wreg free
  6368  0119F4  C11F  F123         	movff	?___awtoft,___ftneg@f1
  6369  0119F8  C120  F124         	movff	?___awtoft+1,___ftneg@f1+1
  6370  0119FC  C121  F125         	movff	?___awtoft+2,___ftneg@f1+2
  6371  011A00  EC10  F0B0         	call	___ftneg	;wreg free
  6372  011A04  C123  F12B         	movff	?___ftneg,___ftadd@f1
  6373  011A08  C124  F12C         	movff	?___ftneg+1,___ftadd@f1+1
  6374  011A0C  C125  F12D         	movff	?___ftneg+2,___ftadd@f1+2
  6375  011A10  ECF2  F09C         	call	___ftadd	;wreg free
  6376  011A14  C12B  F137         	movff	?___ftadd,___ftdiv@f1
  6377  011A18  C12C  F138         	movff	?___ftadd+1,___ftdiv@f1+1
  6378  011A1C  C12D  F139         	movff	?___ftadd+2,___ftdiv@f1+2
  6379  011A20  EC3D  F0A4         	call	___ftdiv	;wreg free
  6380  011A24  C137  F146         	movff	?___ftdiv,___ftmul@f1
  6381  011A28  C138  F147         	movff	?___ftdiv+1,___ftmul@f1+1
  6382  011A2C  C139  F148         	movff	?___ftdiv+2,___ftmul@f1+2
  6383  011A30  0E10               	movlw	16
  6384  011A32  0101               	movlb	1	; () banked
  6385  011A34  6F49               	movwf	___ftmul@f2& (0+255),b
  6386  011A36  0E49               	movlw	73
  6387  011A38  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6388  011A3A  0E40               	movlw	64
  6389  011A3C  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6390  011A3E  ECCE  F0A2         	call	___ftmul	;wreg free
  6391  011A42  C146  F0DD         	movff	?___ftmul,_TRIAC_Firing_Angle
  6392  011A46  C147  F0DE         	movff	?___ftmul+1,_TRIAC_Firing_Angle+1
  6393  011A4A  C148  F0DF         	movff	?___ftmul+2,_TRIAC_Firing_Angle+2
  6394                           
  6395                           ;ring_buffer_LUT.c: 296: double angle_degrees = TRIAC_Firing_Angle * (180.0 / 3.14159265
      +                          358979323846);
  6396  011A4E  C0DD  F146         	movff	_TRIAC_Firing_Angle,___ftmul@f1
  6397  011A52  C0DE  F147         	movff	_TRIAC_Firing_Angle+1,___ftmul@f1+1
  6398  011A56  C0DF  F148         	movff	_TRIAC_Firing_Angle+2,___ftmul@f1+2
  6399  011A5A  0E2F               	movlw	47
  6400  011A5C  0101               	movlb	1	; () banked
  6401  011A5E  6F49               	movwf	___ftmul@f2& (0+255),b
  6402  011A60  0E65               	movlw	101
  6403  011A62  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
  6404  011A64  0E42               	movlw	66
  6405  011A66  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
  6406  011A68  ECCE  F0A2         	call	___ftmul	;wreg free
  6407  011A6C  C146  F1A4         	movff	?___ftmul,ringBufferLUT@angle_degrees
  6408  011A70  C147  F1A5         	movff	?___ftmul+1,ringBufferLUT@angle_degrees+1
  6409  011A74  C148  F1A6         	movff	?___ftmul+2,ringBufferLUT@angle_degrees+2
  6410                           
  6411                           ;ring_buffer_LUT.c: 297: dimming_period = (100 - percentage) * (0xFFFF / 100);
  6412  011A78  C1AC  F1A2         	movff	ringBufferLUT@percentage,??_ringBufferLUT
  6413  011A7C  C1AD  F1A3         	movff	ringBufferLUT@percentage+1,??_ringBufferLUT+1
  6414  011A80  0101               	movlb	1	; () banked
  6415  011A82  1FA2               	comf	??_ringBufferLUT& (0+255),f,b
  6416  011A84  1FA3               	comf	(??_ringBufferLUT+1)& (0+255),f,b
  6417  011A86  4BA2               	infsnz	??_ringBufferLUT& (0+255),f,b
  6418  011A88  2BA3               	incf	(??_ringBufferLUT+1)& (0+255),f,b
  6419  011A8A  0E64               	movlw	100
  6420  011A8C  25A2               	addwf	??_ringBufferLUT& (0+255),w,b
  6421  011A8E  6F25               	movwf	___wmul@multiplier& (0+255),b
  6422  011A90  0E00               	movlw	0
  6423  011A92  21A3               	addwfc	(??_ringBufferLUT+1)& (0+255),w,b
  6424  011A94  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
  6425  011A96  0E02               	movlw	2
  6426  011A98  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  6427  011A9A  0E8F               	movlw	143
  6428  011A9C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  6429  011A9E  ECD4  F0AF         	call	___wmul	;wreg free
  6430  011AA2  C125  F1D7         	movff	?___wmul,_dimming_period
  6431  011AA6  C126  F1D8         	movff	?___wmul+1,_dimming_period+1
  6432                           
  6433                           ;ring_buffer_LUT.c: 300: terminal_printNewline();
  6434  011AAA  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6435                           
  6436                           ;ring_buffer_LUT.c: 302: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6437  011AAE  0E00               	movlw	0
  6438  011AB0  0101               	movlb	1	; () banked
  6439  011AB2  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6440  011AB4  0E00               	movlw	0
  6441  011AB6  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6442  011AB8  0E06               	movlw	6
  6443  011ABA  EC91  F094         	call	_terminal_textAttributes
  6444                           
  6445                           ;ring_buffer_LUT.c: 303: printf("Dimming has been set to %d percent\n\r", percentage);
  6446  011ABE  0E03               	movlw	low STR_76
  6447  011AC0  0101               	movlb	1	; () banked
  6448  011AC2  6F64               	movwf	printf@f& (0+255),b
  6449  011AC4  0EFD               	movlw	high STR_76
  6450  011AC6  6F65               	movwf	(printf@f+1)& (0+255),b
  6451  011AC8  C1AC  F166         	movff	ringBufferLUT@percentage,?_printf+2
  6452  011ACC  C1AD  F167         	movff	ringBufferLUT@percentage+1,?_printf+3
  6453  011AD0  EC00  F080         	call	_printf	;wreg free
  6454                           
  6455                           ;ring_buffer_LUT.c: 304: printf("Calculated TRIAC firing angle is %.3f radians (%.3f deg
      +                          rees)\n\r", TRIAC_Firing_Angle, angle_degrees);
  6456  011AD4  0EAA               	movlw	low STR_77
  6457  011AD6  0101               	movlb	1	; () banked
  6458  011AD8  6F64               	movwf	printf@f& (0+255),b
  6459  011ADA  0EFB               	movlw	high STR_77
  6460  011ADC  6F65               	movwf	(printf@f+1)& (0+255),b
  6461  011ADE  C0DD  F166         	movff	_TRIAC_Firing_Angle,?_printf+2
  6462  011AE2  C0DE  F167         	movff	_TRIAC_Firing_Angle+1,?_printf+3
  6463  011AE6  C0DF  F168         	movff	_TRIAC_Firing_Angle+2,?_printf+4
  6464  011AEA  C1A4  F169         	movff	ringBufferLUT@angle_degrees,?_printf+5
  6465  011AEE  C1A5  F16A         	movff	ringBufferLUT@angle_degrees+1,?_printf+6
  6466  011AF2  C1A6  F16B         	movff	ringBufferLUT@angle_degrees+2,?_printf+7
  6467  011AF6  EC00  F080         	call	_printf	;wreg free
  6468                           
  6469                           ;ring_buffer_LUT.c: 305: printf("This corresponds to a 16 bit period value of 0x%X (%u L
      +                          SBs) \n\r", dimming_period, dimming_period);
  6470  011AFA  0E6B               	movlw	low STR_78
  6471  011AFC  0101               	movlb	1	; () banked
  6472  011AFE  6F64               	movwf	printf@f& (0+255),b
  6473  011B00  0EFB               	movlw	high STR_78
  6474  011B02  6F65               	movwf	(printf@f+1)& (0+255),b
  6475  011B04  C1D7  F166         	movff	_dimming_period,?_printf+2
  6476  011B08  C1D8  F167         	movff	_dimming_period+1,?_printf+3
  6477  011B0C  C1D7  F168         	movff	_dimming_period,?_printf+4
  6478  011B10  C1D8  F169         	movff	_dimming_period+1,?_printf+5
  6479  011B14  EC00  F080         	call	_printf	;wreg free
  6480                           
  6481                           ;ring_buffer_LUT.c: 307: terminal_textAttributesReset();
  6482  011B18  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6483                           
  6484                           ;ring_buffer_LUT.c: 309: terminal_printNewline();
  6485  011B1C  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6486                           
  6487                           ;ring_buffer_LUT.c: 311: }
  6488                           ;ring_buffer_LUT.c: 313: }
  6489  011B20  0012               	return	
  6490  011B22                     l956:
  6491                           
  6492                           ;ring_buffer_LUT.c: 316: else if((0 == strcmp(line, "On Time?"))) {
  6493  011B22  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6494  011B26  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6495  011B2A  0E8C               	movlw	low STR_79
  6496  011B2C  0101               	movlb	1	; () banked
  6497  011B2E  6F19               	movwf	strcmp@s2& (0+255),b
  6498  011B30  0EFF               	movlw	high STR_79
  6499  011B32  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6500  011B34  ECAA  F0AD         	call	_strcmp	;wreg free
  6501  011B38  0101               	movlb	1	; () banked
  6502  011B3A  5117               	movf	?_strcmp& (0+255),w,b
  6503  011B3C  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6504  011B3E  A4D8               	btfss	status,2,c
  6505  011B40  D01E               	goto	l964
  6506                           
  6507                           ; BSR set to: 1
  6508                           ;ring_buffer_LUT.c: 319: terminal_printNewline();
  6509  011B42  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6510                           
  6511                           ;ring_buffer_LUT.c: 321: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6512  011B46  0E00               	movlw	0
  6513  011B48  0101               	movlb	1	; () banked
  6514  011B4A  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6515  011B4C  0E00               	movlw	0
  6516  011B4E  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6517  011B50  0E06               	movlw	6
  6518  011B52  EC91  F094         	call	_terminal_textAttributes
  6519                           
  6520                           ;ring_buffer_LUT.c: 322: printf("Device on time since last reset condition is %d seconds
      +                          \n\r", on_time);
  6521  011B56  0EE9               	movlw	low STR_80
  6522  011B58  0101               	movlb	1	; () banked
  6523  011B5A  6F64               	movwf	printf@f& (0+255),b
  6524  011B5C  0EFB               	movlw	high STR_80
  6525  011B5E  6F65               	movwf	(printf@f+1)& (0+255),b
  6526  011B60  C1B9  F166         	movff	_on_time,?_printf+2
  6527  011B64  C1BA  F167         	movff	_on_time+1,?_printf+3
  6528  011B68  C1BB  F168         	movff	_on_time+2,?_printf+4
  6529  011B6C  C1BC  F169         	movff	_on_time+3,?_printf+5
  6530  011B70  EC00  F080         	call	_printf	;wreg free
  6531                           
  6532                           ;ring_buffer_LUT.c: 324: terminal_textAttributesReset();
  6533  011B74  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6534                           
  6535                           ;ring_buffer_LUT.c: 326: terminal_printNewline();
  6536  011B78  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6537                           
  6538                           ;ring_buffer_LUT.c: 329: }
  6539  011B7C  0012               	return	
  6540  011B7E                     l964:
  6541                           
  6542                           ;ring_buffer_LUT.c: 334: else if((0 == strcmp(line, "Help"))) {
  6543  011B7E  C1A0  F117         	movff	ringBufferLUT@line,strcmp@s1
  6544  011B82  C1A1  F118         	movff	ringBufferLUT@line+1,strcmp@s1+1
  6545  011B86  0EA7               	movlw	low STR_81
  6546  011B88  0101               	movlb	1	; () banked
  6547  011B8A  6F19               	movwf	strcmp@s2& (0+255),b
  6548  011B8C  0EFF               	movlw	high STR_81
  6549  011B8E  6F1A               	movwf	(strcmp@s2+1)& (0+255),b
  6550  011B90  ECAA  F0AD         	call	_strcmp	;wreg free
  6551  011B94  0101               	movlb	1	; () banked
  6552  011B96  5117               	movf	?_strcmp& (0+255),w,b
  6553  011B98  1118               	iorwf	(?_strcmp+1)& (0+255),w,b
  6554  011B9A  A4D8               	btfss	status,2,c
  6555  011B9C  0012               	return	
  6556                           
  6557                           ; BSR set to: 1
  6558                           ;ring_buffer_LUT.c: 337: terminal_printNewline();
  6559  011B9E  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6560                           
  6561                           ;ring_buffer_LUT.c: 339: terminal_textAttributes(YELLOW, BLACK, NORMAL);
  6562  011BA2  0E00               	movlw	0
  6563  011BA4  0101               	movlb	1	; () banked
  6564  011BA6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6565  011BA8  0E00               	movlw	0
  6566  011BAA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6567  011BAC  0E03               	movlw	3
  6568  011BAE  EC91  F094         	call	_terminal_textAttributes
  6569                           
  6570                           ;ring_buffer_LUT.c: 340: printf("List of supported commands:\n\r"
  6571                           ;ring_buffer_LUT.c: 341: "   Reset: Clears the terminal and resets the micro\n\r"
  6572                           ;ring_buffer_LUT.c: 342: "   Clear: Clears the terminal but doesn't reset the micro\n\r"
  6573                           ;ring_buffer_LUT.c: 343: "   *IDN?: Returns device identification\n\r"
  6574                           ;ring_buffer_LUT.c: 344: "   Measure POS3P3?: Returns +3.3V ADC Conversion in volts\n\r"
  6575                           ;ring_buffer_LUT.c: 345: "   Measure POS12?: Returns +12V ADC Conversion in volts\n\r"
  6576                           ;ring_buffer_LUT.c: 346: "   Measure Die Temp?: Returns the microcontroller die temperat
      +                          ure in degrees C\n\r"
  6577  011BB2  0EBB               	movlw	low STR_82
  6578  011BB4  0101               	movlb	1	; () banked
  6579  011BB6  6F64               	movwf	printf@f& (0+255),b
  6580  011BB8  0EF4               	movlw	high STR_82
  6581  011BBA  6F65               	movwf	(printf@f+1)& (0+255),b
  6582  011BBC  EC00  F080         	call	_printf	;wreg free
  6583                           
  6584                           ;ring_buffer_LUT.c: 360: terminal_printNewline();
  6585  011BC0  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6586                           
  6587                           ;ring_buffer_LUT.c: 361: printf("Help messages appear in yellow\n\r");
  6588  011BC4  0ED3               	movlw	low STR_83
  6589  011BC6  0101               	movlb	1	; () banked
  6590  011BC8  6F64               	movwf	printf@f& (0+255),b
  6591  011BCA  0EFD               	movlw	high STR_83
  6592  011BCC  6F65               	movwf	(printf@f+1)& (0+255),b
  6593  011BCE  EC00  F080         	call	_printf	;wreg free
  6594                           
  6595                           ;ring_buffer_LUT.c: 363: terminal_textAttributes(GREEN, BLACK, NORMAL);
  6596  011BD2  0E00               	movlw	0
  6597  011BD4  0101               	movlb	1	; () banked
  6598  011BD6  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6599  011BD8  0E00               	movlw	0
  6600  011BDA  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6601  011BDC  0E02               	movlw	2
  6602  011BDE  EC91  F094         	call	_terminal_textAttributes
  6603                           
  6604                           ;ring_buffer_LUT.c: 364: printf("IDN string appears in green\n\r");
  6605  011BE2  0E32               	movlw	low STR_84
  6606  011BE4  0101               	movlb	1	; () banked
  6607  011BE6  6F64               	movwf	printf@f& (0+255),b
  6608  011BE8  0EFE               	movlw	high STR_84
  6609  011BEA  6F65               	movwf	(printf@f+1)& (0+255),b
  6610  011BEC  EC00  F080         	call	_printf	;wreg free
  6611                           
  6612                           ;ring_buffer_LUT.c: 365: terminal_textAttributes(CYAN, BLACK, NORMAL);
  6613  011BF0  0E00               	movlw	0
  6614  011BF2  0101               	movlb	1	; () banked
  6615  011BF4  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6616  011BF6  0E00               	movlw	0
  6617  011BF8  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6618  011BFA  0E06               	movlw	6
  6619  011BFC  EC91  F094         	call	_terminal_textAttributes
  6620                           
  6621                           ;ring_buffer_LUT.c: 366: printf("Measurements responses appear in cyan\n\r");
  6622  011C00  0EDB               	movlw	low STR_85
  6623  011C02  0101               	movlb	1	; () banked
  6624  011C04  6F64               	movwf	printf@f& (0+255),b
  6625  011C06  0EFC               	movlw	high STR_85
  6626  011C08  6F65               	movwf	(printf@f+1)& (0+255),b
  6627  011C0A  EC00  F080         	call	_printf	;wreg free
  6628                           
  6629                           ;ring_buffer_LUT.c: 367: terminal_textAttributes(RED, BLACK, NORMAL);
  6630  011C0E  0E00               	movlw	0
  6631  011C10  0101               	movlb	1	; () banked
  6632  011C12  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6633  011C14  0E00               	movlw	0
  6634  011C16  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6635  011C18  0E01               	movlw	1
  6636  011C1A  EC91  F094         	call	_terminal_textAttributes
  6637                           
  6638                           ;ring_buffer_LUT.c: 368: printf("Errors appear in red\n\r");
  6639  011C1E  0EB3               	movlw	low STR_86
  6640  011C20  0101               	movlb	1	; () banked
  6641  011C22  6F64               	movwf	printf@f& (0+255),b
  6642  011C24  0EFE               	movlw	high STR_86
  6643  011C26  6F65               	movwf	(printf@f+1)& (0+255),b
  6644  011C28  EC00  F080         	call	_printf	;wreg free
  6645                           
  6646                           ;ring_buffer_LUT.c: 369: terminal_textAttributesReset();
  6647  011C2C  ECC1  F0B0         	call	_terminal_textAttributesReset	;wreg free
  6648                           
  6649                           ;ring_buffer_LUT.c: 370: printf("User input appears in white\n\r");
  6650  011C30  0E14               	movlw	low STR_87
  6651  011C32  0101               	movlb	1	; () banked
  6652  011C34  6F64               	movwf	printf@f& (0+255),b
  6653  011C36  0EFE               	movlw	high STR_87
  6654  011C38  6F65               	movwf	(printf@f+1)& (0+255),b
  6655  011C3A  EC00  F080         	call	_printf	;wreg free
  6656                           
  6657                           ;ring_buffer_LUT.c: 373: terminal_printNewline();
  6658  011C3E  ECDB  F0B0         	call	_terminal_printNewline	;wreg free
  6659  011C42  0012               	return	
  6660  011C44                     __end_of_ringBufferLUT:
  6661                           	opt stack 0
  6662                           tblptru	equ	0xFF8
  6663                           tblptrh	equ	0xFF7
  6664                           tblptrl	equ	0xFF6
  6665                           tablat	equ	0xFF5
  6666                           intcon	equ	0xFF2
  6667                           postinc0	equ	0xFEE
  6668                           wreg	equ	0xFE8
  6669                           indf1	equ	0xFE7
  6670                           postdec1	equ	0xFE5
  6671                           fsr1h	equ	0xFE2
  6672                           fsr1l	equ	0xFE1
  6673                           indf2	equ	0xFDF
  6674                           postinc2	equ	0xFDE
  6675                           fsr2h	equ	0xFDA
  6676                           fsr2l	equ	0xFD9
  6677                           status	equ	0xFD8
  6678                           
  6679 ;; *************** function _terminal_textAttributesReset *****************
  6680 ;; Defined at:
  6681 ;;		line 223 in file "ring_buffer_interface.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;		None
  6684 ;; Auto vars:     Size  Location     Type
  6685 ;;		None
  6686 ;; Return value:  Size  Location     Type
  6687 ;;                  1    wreg      void 
  6688 ;; Registers used:
  6689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6690 ;; Tracked objects:
  6691 ;;		On entry : 0/0
  6692 ;;		On exit  : 0/0
  6693 ;;		Unchanged: 0/0
  6694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6699 ;;Total ram usage:        0 bytes
  6700 ;; Hardware stack levels used:    1
  6701 ;; Hardware stack levels required when called:   19
  6702 ;; This function calls:
  6703 ;;		_terminal_textAttributes
  6704 ;; This function is called by:
  6705 ;;		_main
  6706 ;;		_ringBufferLUT
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text4
  6711  016182                     __ptext4:
  6712                           	opt stack 0
  6713  016182                     _terminal_textAttributesReset:
  6714                           	opt stack 11
  6715                           
  6716                           ;ring_buffer_interface.c: 225: terminal_textAttributes(WHITE, BLACK, NORMAL);
  6717                           
  6718                           ;incstack = 0
  6719  016182  0E00               	movlw	0
  6720  016184  0101               	movlb	1	; () banked
  6721  016186  6F8E               	movwf	terminal_textAttributes@background_color& (0+255),b
  6722  016188  0E00               	movlw	0
  6723  01618A  6F8F               	movwf	terminal_textAttributes@input_attribute& (0+255),b
  6724  01618C  0E07               	movlw	7
  6725  01618E  EC91  F094         	call	_terminal_textAttributes
  6726  016192  0012               	return		;funcret
  6727  016194                     __end_of_terminal_textAttributesReset:
  6728                           	opt stack 0
  6729                           tblptru	equ	0xFF8
  6730                           tblptrh	equ	0xFF7
  6731                           tblptrl	equ	0xFF6
  6732                           tablat	equ	0xFF5
  6733                           intcon	equ	0xFF2
  6734                           postinc0	equ	0xFEE
  6735                           wreg	equ	0xFE8
  6736                           indf1	equ	0xFE7
  6737                           postdec1	equ	0xFE5
  6738                           fsr1h	equ	0xFE2
  6739                           fsr1l	equ	0xFE1
  6740                           indf2	equ	0xFDF
  6741                           postinc2	equ	0xFDE
  6742                           fsr2h	equ	0xFDA
  6743                           fsr2l	equ	0xFD9
  6744                           status	equ	0xFD8
  6745                           
  6746 ;; *************** function _terminal_textAttributes *****************
  6747 ;; Defined at:
  6748 ;;		line 115 in file "ring_buffer_interface.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;  foreground_c    1    wreg     enum E17839
  6751 ;;  background_c    1  142[BANK1 ] enum E17839
  6752 ;;  input_attrib    1  143[BANK1 ] enum E17831
  6753 ;; Auto vars:     Size  Location     Type
  6754 ;;  foreground_c    1  144[BANK1 ] enum E17839
  6755 ;;  output_buff    15  145[BANK1 ] unsigned char [15]
  6756 ;; Return value:  Size  Location     Type
  6757 ;;                  1    wreg      void 
  6758 ;; Registers used:
  6759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6760 ;; Tracked objects:
  6761 ;;		On entry : 0/0
  6762 ;;		On exit  : 0/0
  6763 ;;		Unchanged: 0/0
  6764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  6765 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6766 ;;      Locals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6768 ;;      Totals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6769 ;;Total ram usage:       18 bytes
  6770 ;; Hardware stack levels used:    1
  6771 ;; Hardware stack levels required when called:   18
  6772 ;; This function calls:
  6773 ;;		_printf
  6774 ;;		_strcat
  6775 ;;		_strncpy
  6776 ;; This function is called by:
  6777 ;;		_terminal_textAttributesReset
  6778 ;;		_ringBufferLUT
  6779 ;; This function uses a non-reentrant model
  6780 ;;
  6781                           
  6782                           	psect	text5
  6783  012922                     __ptext5:
  6784                           	opt stack 0
  6785  012922                     _terminal_textAttributes:
  6786                           	opt stack 11
  6787                           
  6788                           ;incstack = 0
  6789                           ;terminal_textAttributes@foreground_color stored from wreg
  6790  012922  0101               	movlb	1	; () banked
  6791  012924  6F90               	movwf	terminal_textAttributes@foreground_color& (0+255),b
  6792                           
  6793                           ;ring_buffer_interface.c: 119: char output_buff[15];
  6794                           ;ring_buffer_interface.c: 121: strncpy(output_buff, "\033[", sizeof(output_buff));
  6795  012926  0E91               	movlw	low terminal_textAttributes@output_buff
  6796  012928  0101               	movlb	1	; () banked
  6797  01292A  6F17               	movwf	strncpy@to& (0+255),b
  6798  01292C  0E01               	movlw	high terminal_textAttributes@output_buff
  6799  01292E  6F18               	movwf	(strncpy@to+1)& (0+255),b
  6800  012930  0EF5               	movlw	low STR_11
  6801  012932  6F19               	movwf	strncpy@from& (0+255),b
  6802  012934  0EFF               	movlw	high STR_11
  6803  012936  6F1A               	movwf	(strncpy@from+1)& (0+255),b
  6804  012938  0E00               	movlw	0
  6805  01293A  6F1C               	movwf	(strncpy@size+1)& (0+255),b
  6806  01293C  0E0F               	movlw	15
  6807  01293E  6F1B               	movwf	strncpy@size& (0+255),b
  6808  012940  EC70  F0AB         	call	_strncpy	;wreg free
  6809                           
  6810                           ;ring_buffer_interface.c: 123: switch (input_attribute) {
  6811  012944  D054               	goto	l844
  6812  012946                     
  6813                           ;ring_buffer_interface.c: 126: strcat(output_buff,"0");
  6814  012946  0E91               	movlw	low terminal_textAttributes@output_buff
  6815  012948  0101               	movlb	1	; () banked
  6816  01294A  6F17               	movwf	strcat@to& (0+255),b
  6817  01294C  0E01               	movlw	high terminal_textAttributes@output_buff
  6818  01294E  6F18               	movwf	(strcat@to+1)& (0+255),b
  6819  012950  0EC6               	movlw	low (STR_20+1)
  6820  012952  6F19               	movwf	strcat@from& (0+255),b
  6821  012954  0EFF               	movlw	high (STR_20+1)
  6822  012956  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6823  012958  ECF9  F0AD         	call	_strcat	;wreg free
  6824                           
  6825                           ;ring_buffer_interface.c: 127: break;
  6826  01295C  D05D               	goto	l846
  6827  01295E                     
  6828                           ;ring_buffer_interface.c: 129: strcat(output_buff,"1");
  6829  01295E  0E91               	movlw	low terminal_textAttributes@output_buff
  6830  012960  0101               	movlb	1	; () banked
  6831  012962  6F17               	movwf	strcat@to& (0+255),b
  6832  012964  0E01               	movlw	high terminal_textAttributes@output_buff
  6833  012966  6F18               	movwf	(strcat@to+1)& (0+255),b
  6834  012968  0ECC               	movlw	low (STR_21+1)
  6835  01296A  6F19               	movwf	strcat@from& (0+255),b
  6836  01296C  0EFF               	movlw	high (STR_21+1)
  6837  01296E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6838  012970  ECF9  F0AD         	call	_strcat	;wreg free
  6839                           
  6840                           ;ring_buffer_interface.c: 130: break;
  6841  012974  D051               	goto	l846
  6842  012976                     
  6843                           ;ring_buffer_interface.c: 132: strcat(output_buff,"4");
  6844  012976  0E91               	movlw	low terminal_textAttributes@output_buff
  6845  012978  0101               	movlb	1	; () banked
  6846  01297A  6F17               	movwf	strcat@to& (0+255),b
  6847  01297C  0E01               	movlw	high terminal_textAttributes@output_buff
  6848  01297E  6F18               	movwf	(strcat@to+1)& (0+255),b
  6849  012980  0EDE               	movlw	low (STR_24+1)
  6850  012982  6F19               	movwf	strcat@from& (0+255),b
  6851  012984  0EFF               	movlw	high (STR_24+1)
  6852  012986  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6853  012988  ECF9  F0AD         	call	_strcat	;wreg free
  6854                           
  6855                           ;ring_buffer_interface.c: 133: break;
  6856  01298C  D045               	goto	l846
  6857  01298E                     
  6858                           ;ring_buffer_interface.c: 135: strcat(output_buff,"5");
  6859  01298E  0E91               	movlw	low terminal_textAttributes@output_buff
  6860  012990  0101               	movlb	1	; () banked
  6861  012992  6F17               	movwf	strcat@to& (0+255),b
  6862  012994  0E01               	movlw	high terminal_textAttributes@output_buff
  6863  012996  6F18               	movwf	(strcat@to+1)& (0+255),b
  6864  012998  0EE4               	movlw	low (STR_25+1)
  6865  01299A  6F19               	movwf	strcat@from& (0+255),b
  6866  01299C  0EFF               	movlw	high (STR_25+1)
  6867  01299E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6868  0129A0  ECF9  F0AD         	call	_strcat	;wreg free
  6869                           
  6870                           ;ring_buffer_interface.c: 136: break;
  6871  0129A4  D039               	goto	l846
  6872  0129A6                     
  6873                           ;ring_buffer_interface.c: 138: strcat(output_buff,"7");
  6874  0129A6  0E91               	movlw	low terminal_textAttributes@output_buff
  6875  0129A8  0101               	movlb	1	; () banked
  6876  0129AA  6F17               	movwf	strcat@to& (0+255),b
  6877  0129AC  0E01               	movlw	high terminal_textAttributes@output_buff
  6878  0129AE  6F18               	movwf	(strcat@to+1)& (0+255),b
  6879  0129B0  0EF0               	movlw	low (STR_27+1)
  6880  0129B2  6F19               	movwf	strcat@from& (0+255),b
  6881  0129B4  0EFF               	movlw	high (STR_27+1)
  6882  0129B6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6883  0129B8  ECF9  F0AD         	call	_strcat	;wreg free
  6884                           
  6885                           ;ring_buffer_interface.c: 139: break;
  6886  0129BC  D02D               	goto	l846
  6887  0129BE                     
  6888                           ;ring_buffer_interface.c: 141: strcat(output_buff,"8");
  6889  0129BE  0E91               	movlw	low terminal_textAttributes@output_buff
  6890  0129C0  0101               	movlb	1	; () banked
  6891  0129C2  6F17               	movwf	strcat@to& (0+255),b
  6892  0129C4  0E01               	movlw	high terminal_textAttributes@output_buff
  6893  0129C6  6F18               	movwf	(strcat@to+1)& (0+255),b
  6894  0129C8  0EF8               	movlw	low STR_17
  6895  0129CA  6F19               	movwf	strcat@from& (0+255),b
  6896  0129CC  0EFF               	movlw	high STR_17
  6897  0129CE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6898  0129D0  ECF9  F0AD         	call	_strcat	;wreg free
  6899                           
  6900                           ;ring_buffer_interface.c: 142: break;
  6901  0129D4  D021               	goto	l846
  6902  0129D6                     
  6903                           ;ring_buffer_interface.c: 145: strcat(output_buff,"0");
  6904  0129D6  0E91               	movlw	low terminal_textAttributes@output_buff
  6905  0129D8  0101               	movlb	1	; () banked
  6906  0129DA  6F17               	movwf	strcat@to& (0+255),b
  6907  0129DC  0E01               	movlw	high terminal_textAttributes@output_buff
  6908  0129DE  6F18               	movwf	(strcat@to+1)& (0+255),b
  6909  0129E0  0EC6               	movlw	low (STR_20+1)
  6910  0129E2  6F19               	movwf	strcat@from& (0+255),b
  6911  0129E4  0EFF               	movlw	high (STR_20+1)
  6912  0129E6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6913  0129E8  ECF9  F0AD         	call	_strcat	;wreg free
  6914                           
  6915                           ;ring_buffer_interface.c: 147: }
  6916                           
  6917                           ;ring_buffer_interface.c: 146: break;
  6918  0129EC  D015               	goto	l846
  6919  0129EE                     l844:
  6920  0129EE  0101               	movlb	1	; () banked
  6921  0129F0  518F               	movf	terminal_textAttributes@input_attribute& (0+255),w,b
  6922                           
  6923                           ; Switch size 1, requested type "space"
  6924                           ; Number of cases is 6, Range of values is 0 to 5
  6925                           ; switch strategies available:
  6926                           ; Name         Instructions Cycles
  6927                           ; simple_byte           19    10 (average)
  6928                           ;	Chosen strategy is simple_byte
  6929  0129F2  0A00               	xorlw	0	; case 0
  6930  0129F4  B4D8               	btfsc	status,2,c
  6931  0129F6  D7A7               	goto	l845
  6932  0129F8  0A01               	xorlw	1	; case 1
  6933  0129FA  B4D8               	btfsc	status,2,c
  6934  0129FC  D7B0               	goto	l847
  6935  0129FE  0A03               	xorlw	3	; case 2
  6936  012A00  B4D8               	btfsc	status,2,c
  6937  012A02  D7B9               	goto	l848
  6938  012A04  0A01               	xorlw	1	; case 3
  6939  012A06  B4D8               	btfsc	status,2,c
  6940  012A08  D7C2               	goto	l849
  6941  012A0A  0A07               	xorlw	7	; case 4
  6942  012A0C  B4D8               	btfsc	status,2,c
  6943  012A0E  D7CB               	goto	l850
  6944  012A10  0A01               	xorlw	1	; case 5
  6945  012A12  B4D8               	btfsc	status,2,c
  6946  012A14  D7D4               	goto	l851
  6947  012A16  D7DF               	goto	l852
  6948  012A18                     l846:
  6949                           
  6950                           ;ring_buffer_interface.c: 149: strcat(output_buff,";");
  6951                           
  6952                           ; BSR set to: 1
  6953  012A18  0E91               	movlw	low terminal_textAttributes@output_buff
  6954  012A1A  0101               	movlb	1	; () banked
  6955  012A1C  6F17               	movwf	strcat@to& (0+255),b
  6956  012A1E  0E01               	movlw	high terminal_textAttributes@output_buff
  6957  012A20  6F18               	movwf	(strcat@to+1)& (0+255),b
  6958  012A22  0EFA               	movlw	low STR_19
  6959  012A24  6F19               	movwf	strcat@from& (0+255),b
  6960  012A26  0EFF               	movlw	high STR_19
  6961  012A28  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6962  012A2A  ECF9  F0AD         	call	_strcat	;wreg free
  6963                           
  6964                           ;ring_buffer_interface.c: 151: switch (foreground_color) {
  6965  012A2E  D06C               	goto	l853
  6966  012A30                     
  6967                           ;ring_buffer_interface.c: 154: strcat(output_buff,"30");
  6968  012A30  0E91               	movlw	low terminal_textAttributes@output_buff
  6969  012A32  0101               	movlb	1	; () banked
  6970  012A34  6F17               	movwf	strcat@to& (0+255),b
  6971  012A36  0E01               	movlw	high terminal_textAttributes@output_buff
  6972  012A38  6F18               	movwf	(strcat@to+1)& (0+255),b
  6973  012A3A  0EC5               	movlw	low STR_20
  6974  012A3C  6F19               	movwf	strcat@from& (0+255),b
  6975  012A3E  0EFF               	movlw	high STR_20
  6976  012A40  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6977  012A42  ECF9  F0AD         	call	_strcat	;wreg free
  6978                           
  6979                           ;ring_buffer_interface.c: 155: break;
  6980  012A46  D07B               	goto	l855
  6981  012A48                     
  6982                           ;ring_buffer_interface.c: 157: strcat(output_buff,"31");
  6983  012A48  0E91               	movlw	low terminal_textAttributes@output_buff
  6984  012A4A  0101               	movlb	1	; () banked
  6985  012A4C  6F17               	movwf	strcat@to& (0+255),b
  6986  012A4E  0E01               	movlw	high terminal_textAttributes@output_buff
  6987  012A50  6F18               	movwf	(strcat@to+1)& (0+255),b
  6988  012A52  0ECB               	movlw	low STR_21
  6989  012A54  6F19               	movwf	strcat@from& (0+255),b
  6990  012A56  0EFF               	movlw	high STR_21
  6991  012A58  6F1A               	movwf	(strcat@from+1)& (0+255),b
  6992  012A5A  ECF9  F0AD         	call	_strcat	;wreg free
  6993                           
  6994                           ;ring_buffer_interface.c: 158: break;
  6995  012A5E  D06F               	goto	l855
  6996  012A60                     
  6997                           ;ring_buffer_interface.c: 160: strcat(output_buff,"32");
  6998  012A60  0E91               	movlw	low terminal_textAttributes@output_buff
  6999  012A62  0101               	movlb	1	; () banked
  7000  012A64  6F17               	movwf	strcat@to& (0+255),b
  7001  012A66  0E01               	movlw	high terminal_textAttributes@output_buff
  7002  012A68  6F18               	movwf	(strcat@to+1)& (0+255),b
  7003  012A6A  0ED1               	movlw	low STR_22
  7004  012A6C  6F19               	movwf	strcat@from& (0+255),b
  7005  012A6E  0EFF               	movlw	high STR_22
  7006  012A70  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7007  012A72  ECF9  F0AD         	call	_strcat	;wreg free
  7008                           
  7009                           ;ring_buffer_interface.c: 161: break;
  7010  012A76  D063               	goto	l855
  7011  012A78                     
  7012                           ;ring_buffer_interface.c: 163: strcat(output_buff,"33");
  7013  012A78  0E91               	movlw	low terminal_textAttributes@output_buff
  7014  012A7A  0101               	movlb	1	; () banked
  7015  012A7C  6F17               	movwf	strcat@to& (0+255),b
  7016  012A7E  0E01               	movlw	high terminal_textAttributes@output_buff
  7017  012A80  6F18               	movwf	(strcat@to+1)& (0+255),b
  7018  012A82  0ED7               	movlw	low STR_23
  7019  012A84  6F19               	movwf	strcat@from& (0+255),b
  7020  012A86  0EFF               	movlw	high STR_23
  7021  012A88  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7022  012A8A  ECF9  F0AD         	call	_strcat	;wreg free
  7023                           
  7024                           ;ring_buffer_interface.c: 164: break;
  7025  012A8E  D057               	goto	l855
  7026  012A90                     
  7027                           ;ring_buffer_interface.c: 166: strcat(output_buff,"34");
  7028  012A90  0E91               	movlw	low terminal_textAttributes@output_buff
  7029  012A92  0101               	movlb	1	; () banked
  7030  012A94  6F17               	movwf	strcat@to& (0+255),b
  7031  012A96  0E01               	movlw	high terminal_textAttributes@output_buff
  7032  012A98  6F18               	movwf	(strcat@to+1)& (0+255),b
  7033  012A9A  0EDD               	movlw	low STR_24
  7034  012A9C  6F19               	movwf	strcat@from& (0+255),b
  7035  012A9E  0EFF               	movlw	high STR_24
  7036  012AA0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7037  012AA2  ECF9  F0AD         	call	_strcat	;wreg free
  7038                           
  7039                           ;ring_buffer_interface.c: 167: break;
  7040  012AA6  D04B               	goto	l855
  7041  012AA8                     
  7042                           ;ring_buffer_interface.c: 169: strcat(output_buff,"35");
  7043  012AA8  0E91               	movlw	low terminal_textAttributes@output_buff
  7044  012AAA  0101               	movlb	1	; () banked
  7045  012AAC  6F17               	movwf	strcat@to& (0+255),b
  7046  012AAE  0E01               	movlw	high terminal_textAttributes@output_buff
  7047  012AB0  6F18               	movwf	(strcat@to+1)& (0+255),b
  7048  012AB2  0EE3               	movlw	low STR_25
  7049  012AB4  6F19               	movwf	strcat@from& (0+255),b
  7050  012AB6  0EFF               	movlw	high STR_25
  7051  012AB8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7052  012ABA  ECF9  F0AD         	call	_strcat	;wreg free
  7053                           
  7054                           ;ring_buffer_interface.c: 170: break;
  7055  012ABE  D03F               	goto	l855
  7056  012AC0                     
  7057                           ;ring_buffer_interface.c: 172: strcat(output_buff,"36");
  7058  012AC0  0E91               	movlw	low terminal_textAttributes@output_buff
  7059  012AC2  0101               	movlb	1	; () banked
  7060  012AC4  6F17               	movwf	strcat@to& (0+255),b
  7061  012AC6  0E01               	movlw	high terminal_textAttributes@output_buff
  7062  012AC8  6F18               	movwf	(strcat@to+1)& (0+255),b
  7063  012ACA  0EE9               	movlw	low STR_26
  7064  012ACC  6F19               	movwf	strcat@from& (0+255),b
  7065  012ACE  0EFF               	movlw	high STR_26
  7066  012AD0  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7067  012AD2  ECF9  F0AD         	call	_strcat	;wreg free
  7068                           
  7069                           ;ring_buffer_interface.c: 173: break;
  7070  012AD6  D033               	goto	l855
  7071  012AD8                     
  7072                           ;ring_buffer_interface.c: 175: strcat(output_buff,"37");
  7073  012AD8  0E91               	movlw	low terminal_textAttributes@output_buff
  7074  012ADA  0101               	movlb	1	; () banked
  7075  012ADC  6F17               	movwf	strcat@to& (0+255),b
  7076  012ADE  0E01               	movlw	high terminal_textAttributes@output_buff
  7077  012AE0  6F18               	movwf	(strcat@to+1)& (0+255),b
  7078  012AE2  0EEF               	movlw	low STR_27
  7079  012AE4  6F19               	movwf	strcat@from& (0+255),b
  7080  012AE6  0EFF               	movlw	high STR_27
  7081  012AE8  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7082  012AEA  ECF9  F0AD         	call	_strcat	;wreg free
  7083                           
  7084                           ;ring_buffer_interface.c: 176: break;
  7085  012AEE  D027               	goto	l855
  7086  012AF0                     
  7087                           ;ring_buffer_interface.c: 179: strcat(output_buff,"37");
  7088  012AF0  0E91               	movlw	low terminal_textAttributes@output_buff
  7089  012AF2  0101               	movlb	1	; () banked
  7090  012AF4  6F17               	movwf	strcat@to& (0+255),b
  7091  012AF6  0E01               	movlw	high terminal_textAttributes@output_buff
  7092  012AF8  6F18               	movwf	(strcat@to+1)& (0+255),b
  7093  012AFA  0EEF               	movlw	low STR_27
  7094  012AFC  6F19               	movwf	strcat@from& (0+255),b
  7095  012AFE  0EFF               	movlw	high STR_27
  7096  012B00  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7097  012B02  ECF9  F0AD         	call	_strcat	;wreg free
  7098                           
  7099                           ;ring_buffer_interface.c: 181: }
  7100                           
  7101                           ;ring_buffer_interface.c: 180: break;
  7102  012B06  D01B               	goto	l855
  7103  012B08                     l853:
  7104  012B08  0101               	movlb	1	; () banked
  7105  012B0A  5190               	movf	terminal_textAttributes@foreground_color& (0+255),w,b
  7106                           
  7107                           ; Switch size 1, requested type "space"
  7108                           ; Number of cases is 8, Range of values is 0 to 7
  7109                           ; switch strategies available:
  7110                           ; Name         Instructions Cycles
  7111                           ; simple_byte           25    13 (average)
  7112                           ;	Chosen strategy is simple_byte
  7113  012B0C  0A00               	xorlw	0	; case 0
  7114  012B0E  B4D8               	btfsc	status,2,c
  7115  012B10  D78F               	goto	l854
  7116  012B12  0A01               	xorlw	1	; case 1
  7117  012B14  B4D8               	btfsc	status,2,c
  7118  012B16  D798               	goto	l856
  7119  012B18  0A03               	xorlw	3	; case 2
  7120  012B1A  B4D8               	btfsc	status,2,c
  7121  012B1C  D7A1               	goto	l857
  7122  012B1E  0A01               	xorlw	1	; case 3
  7123  012B20  B4D8               	btfsc	status,2,c
  7124  012B22  D7AA               	goto	l858
  7125  012B24  0A07               	xorlw	7	; case 4
  7126  012B26  B4D8               	btfsc	status,2,c
  7127  012B28  D7B3               	goto	l859
  7128  012B2A  0A01               	xorlw	1	; case 5
  7129  012B2C  B4D8               	btfsc	status,2,c
  7130  012B2E  D7BC               	goto	l860
  7131  012B30  0A03               	xorlw	3	; case 6
  7132  012B32  B4D8               	btfsc	status,2,c
  7133  012B34  D7C5               	goto	l861
  7134  012B36  0A01               	xorlw	1	; case 7
  7135  012B38  B4D8               	btfsc	status,2,c
  7136  012B3A  D7CE               	goto	l862
  7137  012B3C  D7D9               	goto	l863
  7138  012B3E                     l855:
  7139                           
  7140                           ;ring_buffer_interface.c: 183: strcat(output_buff,";");
  7141                           
  7142                           ; BSR set to: 1
  7143  012B3E  0E91               	movlw	low terminal_textAttributes@output_buff
  7144  012B40  0101               	movlb	1	; () banked
  7145  012B42  6F17               	movwf	strcat@to& (0+255),b
  7146  012B44  0E01               	movlw	high terminal_textAttributes@output_buff
  7147  012B46  6F18               	movwf	(strcat@to+1)& (0+255),b
  7148  012B48  0EFA               	movlw	low STR_19
  7149  012B4A  6F19               	movwf	strcat@from& (0+255),b
  7150  012B4C  0EFF               	movlw	high STR_19
  7151  012B4E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7152  012B50  ECF9  F0AD         	call	_strcat	;wreg free
  7153                           
  7154                           ;ring_buffer_interface.c: 185: switch (background_color) {
  7155  012B54  D06C               	goto	l864
  7156  012B56                     
  7157                           ;ring_buffer_interface.c: 188: strcat(output_buff,"40");
  7158  012B56  0E91               	movlw	low terminal_textAttributes@output_buff
  7159  012B58  0101               	movlb	1	; () banked
  7160  012B5A  6F17               	movwf	strcat@to& (0+255),b
  7161  012B5C  0E01               	movlw	high terminal_textAttributes@output_buff
  7162  012B5E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7163  012B60  0EC8               	movlw	low STR_30
  7164  012B62  6F19               	movwf	strcat@from& (0+255),b
  7165  012B64  0EFF               	movlw	high STR_30
  7166  012B66  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7167  012B68  ECF9  F0AD         	call	_strcat	;wreg free
  7168                           
  7169                           ;ring_buffer_interface.c: 189: break;
  7170  012B6C  D07B               	goto	l866
  7171  012B6E                     
  7172                           ;ring_buffer_interface.c: 191: strcat(output_buff,"41");
  7173  012B6E  0E91               	movlw	low terminal_textAttributes@output_buff
  7174  012B70  0101               	movlb	1	; () banked
  7175  012B72  6F17               	movwf	strcat@to& (0+255),b
  7176  012B74  0E01               	movlw	high terminal_textAttributes@output_buff
  7177  012B76  6F18               	movwf	(strcat@to+1)& (0+255),b
  7178  012B78  0ECE               	movlw	low STR_31
  7179  012B7A  6F19               	movwf	strcat@from& (0+255),b
  7180  012B7C  0EFF               	movlw	high STR_31
  7181  012B7E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7182  012B80  ECF9  F0AD         	call	_strcat	;wreg free
  7183                           
  7184                           ;ring_buffer_interface.c: 192: break;
  7185  012B84  D06F               	goto	l866
  7186  012B86                     
  7187                           ;ring_buffer_interface.c: 194: strcat(output_buff,"42");
  7188  012B86  0E91               	movlw	low terminal_textAttributes@output_buff
  7189  012B88  0101               	movlb	1	; () banked
  7190  012B8A  6F17               	movwf	strcat@to& (0+255),b
  7191  012B8C  0E01               	movlw	high terminal_textAttributes@output_buff
  7192  012B8E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7193  012B90  0ED4               	movlw	low STR_32
  7194  012B92  6F19               	movwf	strcat@from& (0+255),b
  7195  012B94  0EFF               	movlw	high STR_32
  7196  012B96  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7197  012B98  ECF9  F0AD         	call	_strcat	;wreg free
  7198                           
  7199                           ;ring_buffer_interface.c: 195: break;
  7200  012B9C  D063               	goto	l866
  7201  012B9E                     
  7202                           ;ring_buffer_interface.c: 197: strcat(output_buff,"43");
  7203  012B9E  0E91               	movlw	low terminal_textAttributes@output_buff
  7204  012BA0  0101               	movlb	1	; () banked
  7205  012BA2  6F17               	movwf	strcat@to& (0+255),b
  7206  012BA4  0E01               	movlw	high terminal_textAttributes@output_buff
  7207  012BA6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7208  012BA8  0EDA               	movlw	low STR_33
  7209  012BAA  6F19               	movwf	strcat@from& (0+255),b
  7210  012BAC  0EFF               	movlw	high STR_33
  7211  012BAE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7212  012BB0  ECF9  F0AD         	call	_strcat	;wreg free
  7213                           
  7214                           ;ring_buffer_interface.c: 198: break;
  7215  012BB4  D057               	goto	l866
  7216  012BB6                     
  7217                           ;ring_buffer_interface.c: 200: strcat(output_buff,"44");
  7218  012BB6  0E91               	movlw	low terminal_textAttributes@output_buff
  7219  012BB8  0101               	movlb	1	; () banked
  7220  012BBA  6F17               	movwf	strcat@to& (0+255),b
  7221  012BBC  0E01               	movlw	high terminal_textAttributes@output_buff
  7222  012BBE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7223  012BC0  0EE0               	movlw	low STR_34
  7224  012BC2  6F19               	movwf	strcat@from& (0+255),b
  7225  012BC4  0EFF               	movlw	high STR_34
  7226  012BC6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7227  012BC8  ECF9  F0AD         	call	_strcat	;wreg free
  7228                           
  7229                           ;ring_buffer_interface.c: 201: break;
  7230  012BCC  D04B               	goto	l866
  7231  012BCE                     
  7232                           ;ring_buffer_interface.c: 203: strcat(output_buff,"45");
  7233  012BCE  0E91               	movlw	low terminal_textAttributes@output_buff
  7234  012BD0  0101               	movlb	1	; () banked
  7235  012BD2  6F17               	movwf	strcat@to& (0+255),b
  7236  012BD4  0E01               	movlw	high terminal_textAttributes@output_buff
  7237  012BD6  6F18               	movwf	(strcat@to+1)& (0+255),b
  7238  012BD8  0EE6               	movlw	low STR_35
  7239  012BDA  6F19               	movwf	strcat@from& (0+255),b
  7240  012BDC  0EFF               	movlw	high STR_35
  7241  012BDE  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7242  012BE0  ECF9  F0AD         	call	_strcat	;wreg free
  7243                           
  7244                           ;ring_buffer_interface.c: 204: break;
  7245  012BE4  D03F               	goto	l866
  7246  012BE6                     
  7247                           ;ring_buffer_interface.c: 206: strcat(output_buff,"46");
  7248  012BE6  0E91               	movlw	low terminal_textAttributes@output_buff
  7249  012BE8  0101               	movlb	1	; () banked
  7250  012BEA  6F17               	movwf	strcat@to& (0+255),b
  7251  012BEC  0E01               	movlw	high terminal_textAttributes@output_buff
  7252  012BEE  6F18               	movwf	(strcat@to+1)& (0+255),b
  7253  012BF0  0EEC               	movlw	low STR_36
  7254  012BF2  6F19               	movwf	strcat@from& (0+255),b
  7255  012BF4  0EFF               	movlw	high STR_36
  7256  012BF6  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7257  012BF8  ECF9  F0AD         	call	_strcat	;wreg free
  7258                           
  7259                           ;ring_buffer_interface.c: 207: break;
  7260  012BFC  D033               	goto	l866
  7261  012BFE                     
  7262                           ;ring_buffer_interface.c: 209: strcat(output_buff,"47");
  7263  012BFE  0E91               	movlw	low terminal_textAttributes@output_buff
  7264  012C00  0101               	movlb	1	; () banked
  7265  012C02  6F17               	movwf	strcat@to& (0+255),b
  7266  012C04  0E01               	movlw	high terminal_textAttributes@output_buff
  7267  012C06  6F18               	movwf	(strcat@to+1)& (0+255),b
  7268  012C08  0EF2               	movlw	low STR_37
  7269  012C0A  6F19               	movwf	strcat@from& (0+255),b
  7270  012C0C  0EFF               	movlw	high STR_37
  7271  012C0E  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7272  012C10  ECF9  F0AD         	call	_strcat	;wreg free
  7273                           
  7274                           ;ring_buffer_interface.c: 210: break;
  7275  012C14  D027               	goto	l866
  7276  012C16                     
  7277                           ;ring_buffer_interface.c: 213: strcat(output_buff,"47");
  7278  012C16  0E91               	movlw	low terminal_textAttributes@output_buff
  7279  012C18  0101               	movlb	1	; () banked
  7280  012C1A  6F17               	movwf	strcat@to& (0+255),b
  7281  012C1C  0E01               	movlw	high terminal_textAttributes@output_buff
  7282  012C1E  6F18               	movwf	(strcat@to+1)& (0+255),b
  7283  012C20  0EF2               	movlw	low STR_37
  7284  012C22  6F19               	movwf	strcat@from& (0+255),b
  7285  012C24  0EFF               	movlw	high STR_37
  7286  012C26  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7287  012C28  ECF9  F0AD         	call	_strcat	;wreg free
  7288                           
  7289                           ;ring_buffer_interface.c: 215: }
  7290                           
  7291                           ;ring_buffer_interface.c: 214: break;
  7292  012C2C  D01B               	goto	l866
  7293  012C2E                     l864:
  7294  012C2E  0101               	movlb	1	; () banked
  7295  012C30  518E               	movf	terminal_textAttributes@background_color& (0+255),w,b
  7296                           
  7297                           ; Switch size 1, requested type "space"
  7298                           ; Number of cases is 8, Range of values is 0 to 7
  7299                           ; switch strategies available:
  7300                           ; Name         Instructions Cycles
  7301                           ; simple_byte           25    13 (average)
  7302                           ;	Chosen strategy is simple_byte
  7303  012C32  0A00               	xorlw	0	; case 0
  7304  012C34  B4D8               	btfsc	status,2,c
  7305  012C36  D78F               	goto	l865
  7306  012C38  0A01               	xorlw	1	; case 1
  7307  012C3A  B4D8               	btfsc	status,2,c
  7308  012C3C  D798               	goto	l867
  7309  012C3E  0A03               	xorlw	3	; case 2
  7310  012C40  B4D8               	btfsc	status,2,c
  7311  012C42  D7A1               	goto	l868
  7312  012C44  0A01               	xorlw	1	; case 3
  7313  012C46  B4D8               	btfsc	status,2,c
  7314  012C48  D7AA               	goto	l869
  7315  012C4A  0A07               	xorlw	7	; case 4
  7316  012C4C  B4D8               	btfsc	status,2,c
  7317  012C4E  D7B3               	goto	l870
  7318  012C50  0A01               	xorlw	1	; case 5
  7319  012C52  B4D8               	btfsc	status,2,c
  7320  012C54  D7BC               	goto	l871
  7321  012C56  0A03               	xorlw	3	; case 6
  7322  012C58  B4D8               	btfsc	status,2,c
  7323  012C5A  D7C5               	goto	l872
  7324  012C5C  0A01               	xorlw	1	; case 7
  7325  012C5E  B4D8               	btfsc	status,2,c
  7326  012C60  D7CE               	goto	l873
  7327  012C62  D7D9               	goto	l874
  7328  012C64                     l866:
  7329                           
  7330                           ;ring_buffer_interface.c: 217: strcat(output_buff,"m");
  7331                           
  7332                           ; BSR set to: 1
  7333  012C64  0E91               	movlw	low terminal_textAttributes@output_buff
  7334  012C66  0101               	movlb	1	; () banked
  7335  012C68  6F17               	movwf	strcat@to& (0+255),b
  7336  012C6A  0E01               	movlw	high terminal_textAttributes@output_buff
  7337  012C6C  6F18               	movwf	(strcat@to+1)& (0+255),b
  7338  012C6E  0EFC               	movlw	low STR_39
  7339  012C70  6F19               	movwf	strcat@from& (0+255),b
  7340  012C72  0EFF               	movlw	high STR_39
  7341  012C74  6F1A               	movwf	(strcat@from+1)& (0+255),b
  7342  012C76  ECF9  F0AD         	call	_strcat	;wreg free
  7343                           
  7344                           ;ring_buffer_interface.c: 219: printf(output_buff);
  7345  012C7A  0E91               	movlw	low terminal_textAttributes@output_buff
  7346  012C7C  0101               	movlb	1	; () banked
  7347  012C7E  6F64               	movwf	printf@f& (0+255),b
  7348  012C80  0E01               	movlw	high terminal_textAttributes@output_buff
  7349  012C82  6F65               	movwf	(printf@f+1)& (0+255),b
  7350  012C84  EC00  F080         	call	_printf	;wreg free
  7351  012C88  0012               	return		;funcret
  7352  012C8A                     __end_of_terminal_textAttributes:
  7353                           	opt stack 0
  7354                           tblptru	equ	0xFF8
  7355                           tblptrh	equ	0xFF7
  7356                           tblptrl	equ	0xFF6
  7357                           tablat	equ	0xFF5
  7358                           intcon	equ	0xFF2
  7359                           postinc0	equ	0xFEE
  7360                           wreg	equ	0xFE8
  7361                           indf1	equ	0xFE7
  7362                           postdec1	equ	0xFE5
  7363                           fsr1h	equ	0xFE2
  7364                           fsr1l	equ	0xFE1
  7365                           indf2	equ	0xFDF
  7366                           postinc2	equ	0xFDE
  7367                           fsr2h	equ	0xFDA
  7368                           fsr2l	equ	0xFD9
  7369                           status	equ	0xFD8
  7370                           
  7371 ;; *************** function _strncpy *****************
  7372 ;; Defined at:
  7373 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncpy.c"
  7374 ;; Parameters:    Size  Location     Type
  7375 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7376 ;;		 -> terminal_textAttributes@output_buff(15), 
  7377 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7378 ;;		 -> STR_11(3), 
  7379 ;;  size            2   27[BANK1 ] unsigned int 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  cp              2   29[BANK1 ] PTR unsigned char 
  7382 ;;		 -> terminal_textAttributes@output_buff(15), 
  7383 ;; Return value:  Size  Location     Type
  7384 ;;                  2   23[BANK1 ] PTR unsigned char 
  7385 ;; Registers used:
  7386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7387 ;; Tracked objects:
  7388 ;;		On entry : 0/0
  7389 ;;		On exit  : 0/0
  7390 ;;		Unchanged: 0/0
  7391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7392 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7396 ;;Total ram usage:        8 bytes
  7397 ;; Hardware stack levels used:    1
  7398 ;; Hardware stack levels required when called:   14
  7399 ;; This function calls:
  7400 ;;		Nothing
  7401 ;; This function is called by:
  7402 ;;		_terminal_textAttributes
  7403 ;; This function uses a non-reentrant model
  7404 ;;
  7405                           
  7406                           	psect	text6
  7407  0156E0                     __ptext6:
  7408                           	opt stack 0
  7409  0156E0                     _strncpy:
  7410                           	opt stack 14
  7411                           
  7412                           ;incstack = 0
  7413  0156E0  C117  F11D         	movff	strncpy@to,strncpy@cp
  7414  0156E4  C118  F11E         	movff	strncpy@to+1,strncpy@cp+1
  7415  0156E8  D018               	goto	l1864
  7416  0156EA  0101               	movlb	1	; () banked
  7417  0156EC  071B               	decf	strncpy@size& (0+255),f,b
  7418  0156EE  A0D8               	btfss	status,0,c
  7419  0156F0  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7420                           
  7421                           ; BSR set to: 1
  7422  0156F2  C119  FFF6         	movff	strncpy@from,tblptrl
  7423  0156F6  C11A  FFF7         	movff	strncpy@from+1,tblptrh
  7424  0156FA  4B19               	infsnz	strncpy@from& (0+255),f,b
  7425  0156FC  2B1A               	incf	(strncpy@from+1)& (0+255),f,b
  7426  0156FE                     	if	0	;tblptru may be non-zero
  7427  0156FE                     	endif
  7428  0156FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7429  0156FE  0E00               	movlw	low (__mediumconst shr (0+16))
  7430  015700  6EF8               	movwf	tblptru,c
  7431  015702                     	endif
  7432  015702  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7433  015706  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7434  01570A  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7435  01570C  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7436  01570E  0008               	tblrd		*
  7437  015710  CFF5 FFDF          	movff	tablat,indf2
  7438  015714  50DF               	movf	indf2,w,c
  7439  015716  B4D8               	btfsc	status,2,c
  7440  015718  D00E               	goto	l1866
  7441  01571A                     l1864:
  7442                           
  7443                           ; BSR set to: 1
  7444                           
  7445                           ; BSR set to: 1
  7446  01571A  0101               	movlb	1	; () banked
  7447  01571C  511B               	movf	strncpy@size& (0+255),w,b
  7448  01571E  111C               	iorwf	(strncpy@size+1)& (0+255),w,b
  7449  015720  B4D8               	btfsc	status,2,c
  7450  015722  D009               	goto	l1866
  7451  015724  D7E2               	goto	l1863
  7452  015726                     l8979:
  7453                           
  7454                           ; BSR set to: 1
  7455  015726  C11D  FFD9         	movff	strncpy@cp,fsr2l
  7456  01572A  C11E  FFDA         	movff	strncpy@cp+1,fsr2h
  7457  01572E  0E00               	movlw	0
  7458  015730  6EDF               	movwf	indf2,c
  7459                           
  7460                           ; BSR set to: 1
  7461  015732  4B1D               	infsnz	strncpy@cp& (0+255),f,b
  7462  015734  2B1E               	incf	(strncpy@cp+1)& (0+255),f,b
  7463  015736                     l1866:
  7464                           
  7465                           ; BSR set to: 1
  7466                           
  7467                           ; BSR set to: 1
  7468  015736  071B               	decf	strncpy@size& (0+255),f,b
  7469  015738  A0D8               	btfss	status,0,c
  7470  01573A  071C               	decf	(strncpy@size+1)& (0+255),f,b
  7471  01573C  291B               	incf	strncpy@size& (0+255),w,b
  7472  01573E  E1F3               	bnz	l8979
  7473  015740  291C               	incf	(strncpy@size+1)& (0+255),w,b
  7474  015742  B4D8               	btfsc	status,2,c
  7475  015744  0012               	return	
  7476  015746  D7EF               	goto	l1867
  7477  015748                     __end_of_strncpy:
  7478                           	opt stack 0
  7479                           tblptru	equ	0xFF8
  7480                           tblptrh	equ	0xFF7
  7481                           tblptrl	equ	0xFF6
  7482                           tablat	equ	0xFF5
  7483                           intcon	equ	0xFF2
  7484                           postinc0	equ	0xFEE
  7485                           wreg	equ	0xFE8
  7486                           indf1	equ	0xFE7
  7487                           postdec1	equ	0xFE5
  7488                           fsr1h	equ	0xFE2
  7489                           fsr1l	equ	0xFE1
  7490                           indf2	equ	0xFDF
  7491                           postinc2	equ	0xFDE
  7492                           fsr2h	equ	0xFDA
  7493                           fsr2l	equ	0xFD9
  7494                           status	equ	0xFD8
  7495                           
  7496 ;; *************** function _strcat *****************
  7497 ;; Defined at:
  7498 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcat.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  to              2   23[BANK1 ] PTR unsigned char 
  7501 ;;		 -> terminal_textAttributes@output_buff(15), 
  7502 ;;  from            2   25[BANK1 ] PTR const unsigned char 
  7503 ;;		 -> STR_39(2), STR_38(3), STR_37(3), STR_36(3), 
  7504 ;;		 -> STR_35(3), STR_34(3), STR_33(3), STR_32(3), 
  7505 ;;		 -> STR_31(3), STR_30(3), STR_29(2), STR_28(3), 
  7506 ;;		 -> STR_27(3), STR_26(3), STR_25(3), STR_24(3), 
  7507 ;;		 -> STR_23(3), STR_22(3), STR_21(3), STR_20(3), 
  7508 ;;		 -> STR_19(2), STR_18(2), STR_17(2), STR_16(2), 
  7509 ;;		 -> STR_15(2), STR_14(2), STR_13(2), STR_12(2), 
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;  cp              2   27[BANK1 ] PTR unsigned char 
  7512 ;;		 -> terminal_textAttributes@output_buff(15), 
  7513 ;; Return value:  Size  Location     Type
  7514 ;;                  2   23[BANK1 ] PTR unsigned char 
  7515 ;; Registers used:
  7516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7517 ;; Tracked objects:
  7518 ;;		On entry : 0/0
  7519 ;;		On exit  : 0/0
  7520 ;;		Unchanged: 0/0
  7521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7522 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7526 ;;Total ram usage:        6 bytes
  7527 ;; Hardware stack levels used:    1
  7528 ;; Hardware stack levels required when called:   14
  7529 ;; This function calls:
  7530 ;;		Nothing
  7531 ;; This function is called by:
  7532 ;;		_terminal_textAttributes
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text7
  7537  015BF2                     __ptext7:
  7538                           	opt stack 0
  7539  015BF2                     _strcat:
  7540                           	opt stack 14
  7541                           
  7542                           ; BSR set to: 1
  7543                           ;incstack = 0
  7544  015BF2  C117  F11B         	movff	strcat@to,strcat@cp
  7545  015BF6  C118  F11C         	movff	strcat@to+1,strcat@cp+1
  7546  015BFA  D003               	goto	l1839
  7547  015BFC  0101               	movlb	1	; () banked
  7548  015BFE  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7549  015C00  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7550  015C02                     l1839:
  7551                           
  7552                           ; BSR set to: 1
  7553  015C02  C11B  FFD9         	movff	strcat@cp,fsr2l
  7554  015C06  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7555  015C0A  50DF               	movf	indf2,w,c
  7556  015C0C  B4D8               	btfsc	status,2,c
  7557  015C0E  D006               	goto	l1842
  7558  015C10  D7F5               	goto	l1840
  7559  015C12  0101               	movlb	1	; () banked
  7560  015C14  4B1B               	infsnz	strcat@cp& (0+255),f,b
  7561  015C16  2B1C               	incf	(strcat@cp+1)& (0+255),f,b
  7562  015C18  4B19               	infsnz	strcat@from& (0+255),f,b
  7563  015C1A  2B1A               	incf	(strcat@from+1)& (0+255),f,b
  7564  015C1C                     l1842:
  7565                           
  7566                           ; BSR set to: 1
  7567  015C1C  C119  FFF6         	movff	strcat@from,tblptrl
  7568  015C20  C11A  FFF7         	movff	strcat@from+1,tblptrh
  7569  015C24                     	if	0	;tblptru may be non-zero
  7570  015C24                     	endif
  7571  015C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7572  015C24  0E00               	movlw	low (__mediumconst shr (0+16))
  7573  015C26  6EF8               	movwf	tblptru,c
  7574  015C28                     	endif
  7575  015C28  C11B  FFD9         	movff	strcat@cp,fsr2l
  7576  015C2C  C11C  FFDA         	movff	strcat@cp+1,fsr2h
  7577  015C30  0008               	tblrd		*
  7578  015C32  CFF5 FFDF          	movff	tablat,indf2
  7579  015C36  50DF               	movf	indf2,w,c
  7580  015C38  B4D8               	btfsc	status,2,c
  7581  015C3A  0012               	return	
  7582  015C3C  D7EA               	goto	l1843
  7583  015C3E                     __end_of_strcat:
  7584                           	opt stack 0
  7585                           tblptru	equ	0xFF8
  7586                           tblptrh	equ	0xFF7
  7587                           tblptrl	equ	0xFF6
  7588                           tablat	equ	0xFF5
  7589                           intcon	equ	0xFF2
  7590                           postinc0	equ	0xFEE
  7591                           wreg	equ	0xFE8
  7592                           indf1	equ	0xFE7
  7593                           postdec1	equ	0xFE5
  7594                           fsr1h	equ	0xFE2
  7595                           fsr1l	equ	0xFE1
  7596                           indf2	equ	0xFDF
  7597                           postinc2	equ	0xFDE
  7598                           fsr2h	equ	0xFDA
  7599                           fsr2l	equ	0xFD9
  7600                           status	equ	0xFD8
  7601                           
  7602 ;; *************** function _terminal_printNewline *****************
  7603 ;; Defined at:
  7604 ;;		line 230 in file "ring_buffer_interface.c"
  7605 ;; Parameters:    Size  Location     Type
  7606 ;;		None
  7607 ;; Auto vars:     Size  Location     Type
  7608 ;;		None
  7609 ;; Return value:  Size  Location     Type
  7610 ;;                  1    wreg      void 
  7611 ;; Registers used:
  7612 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7613 ;; Tracked objects:
  7614 ;;		On entry : 0/0
  7615 ;;		On exit  : 0/0
  7616 ;;		Unchanged: 0/0
  7617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7622 ;;Total ram usage:        0 bytes
  7623 ;; Hardware stack levels used:    1
  7624 ;; Hardware stack levels required when called:   18
  7625 ;; This function calls:
  7626 ;;		_printf
  7627 ;; This function is called by:
  7628 ;;		_ringBufferLUT
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text8
  7633  0161B6                     __ptext8:
  7634                           	opt stack 0
  7635  0161B6                     _terminal_printNewline:
  7636                           	opt stack 10
  7637                           
  7638                           ;ring_buffer_interface.c: 232: printf("\n\r");
  7639                           
  7640                           ;incstack = 0
  7641  0161B6  0EA7               	movlw	low (STR_78+60)
  7642  0161B8  0101               	movlb	1	; () banked
  7643  0161BA  6F64               	movwf	printf@f& (0+255),b
  7644  0161BC  0EFB               	movlw	high (STR_78+60)
  7645  0161BE  6F65               	movwf	(printf@f+1)& (0+255),b
  7646  0161C0  EC00  F080         	call	_printf	;wreg free
  7647  0161C4  0012               	return		;funcret
  7648  0161C6                     __end_of_terminal_printNewline:
  7649                           	opt stack 0
  7650                           tblptru	equ	0xFF8
  7651                           tblptrh	equ	0xFF7
  7652                           tblptrl	equ	0xFF6
  7653                           tablat	equ	0xFF5
  7654                           intcon	equ	0xFF2
  7655                           postinc0	equ	0xFEE
  7656                           wreg	equ	0xFE8
  7657                           indf1	equ	0xFE7
  7658                           postdec1	equ	0xFE5
  7659                           fsr1h	equ	0xFE2
  7660                           fsr1l	equ	0xFE1
  7661                           indf2	equ	0xFDF
  7662                           postinc2	equ	0xFDE
  7663                           fsr2h	equ	0xFDA
  7664                           fsr2l	equ	0xFD9
  7665                           status	equ	0xFD8
  7666                           
  7667 ;; *************** function _strstr *****************
  7668 ;; Defined at:
  7669 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strstr.c"
  7670 ;; Parameters:    Size  Location     Type
  7671 ;;  s1              2   38[BANK1 ] PTR const unsigned char 
  7672 ;;		 -> NULL(0), line(64), 
  7673 ;;  s2              2   40[BANK1 ] PTR const unsigned char 
  7674 ;;		 -> STR_73(24), 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  2   38[BANK1 ] PTR unsigned char 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7686 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7689 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7690 ;;Total ram usage:        4 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:   15
  7693 ;; This function calls:
  7694 ;;		_strchr
  7695 ;;		_strlen
  7696 ;;		_strncmp
  7697 ;; This function is called by:
  7698 ;;		_ringBufferLUT
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text9
  7703  015200                     __ptext9:
  7704                           	opt stack 0
  7705  015200                     _strstr:
  7706                           	opt stack 13
  7707                           
  7708                           ;incstack = 0
  7709  015200  D034               	goto	l1878
  7710  015202  C126  F11D         	movff	strstr@s1,strncmp@s1
  7711  015206  C127  F11E         	movff	strstr@s1+1,strncmp@s1+1
  7712  01520A  C128  F11F         	movff	strstr@s2,strncmp@s2
  7713  01520E  C129  F120         	movff	strstr@s2+1,strncmp@s2+1
  7714  015212  C128  F117         	movff	strstr@s2,strlen@s
  7715  015216  C129  F118         	movff	strstr@s2+1,strlen@s+1
  7716  01521A  EC2A  F0AD         	call	_strlen	;wreg free
  7717  01521E  C117  F121         	movff	?_strlen,strncmp@len
  7718  015222  C118  F122         	movff	?_strlen+1,strncmp@len+1
  7719  015226  EC70  F0A8         	call	_strncmp	;wreg free
  7720  01522A  0101               	movlb	1	; () banked
  7721  01522C  511D               	movf	?_strncmp& (0+255),w,b
  7722  01522E  111E               	iorwf	(?_strncmp+1)& (0+255),w,b
  7723  015230  A4D8               	btfss	status,2,c
  7724  015232  D005               	goto	l1880
  7725                           
  7726                           ; BSR set to: 1
  7727  015234  C126  F126         	movff	strstr@s1,?_strstr
  7728  015238  C127  F127         	movff	strstr@s1+1,?_strstr+1
  7729                           
  7730                           ; BSR set to: 1
  7731  01523C  0012               	return	
  7732  01523E                     l1880:
  7733                           
  7734                           ; BSR set to: 1
  7735                           
  7736                           ; BSR set to: 1
  7737  01523E  0E01               	movlw	1
  7738  015240  2526               	addwf	strstr@s1& (0+255),w,b
  7739  015242  6F17               	movwf	strchr@ptr& (0+255),b
  7740  015244  0E00               	movlw	0
  7741  015246  2127               	addwfc	(strstr@s1+1)& (0+255),w,b
  7742  015248  6F18               	movwf	(strchr@ptr+1)& (0+255),b
  7743  01524A  C128  FFF6         	movff	strstr@s2,tblptrl
  7744  01524E  C129  FFF7         	movff	strstr@s2+1,tblptrh
  7745  015252                     	if	0	;tblptru may be non-zero
  7746  015252                     	endif
  7747  015252                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7748  015252  0E00               	movlw	low (__mediumconst shr (0+16))
  7749  015254  6EF8               	movwf	tblptru,c
  7750  015256                     	endif
  7751  015256  0008               	tblrd		*
  7752  015258  50F5               	movf	tablat,w,c
  7753  01525A  6F19               	movwf	strchr@chr& (0+255),b
  7754  01525C  6B1A               	clrf	(strchr@chr+1)& (0+255),b
  7755  01525E  EC0C  F0AF         	call	_strchr	;wreg free
  7756  015262  C117  F126         	movff	?_strchr,strstr@s1
  7757  015266  C118  F127         	movff	?_strchr+1,strstr@s1+1
  7758  01526A                     l1878:
  7759  01526A  0101               	movlb	1	; () banked
  7760  01526C  5126               	movf	strstr@s1& (0+255),w,b
  7761  01526E  1127               	iorwf	(strstr@s1+1)& (0+255),w,b
  7762  015270  B4D8               	btfsc	status,2,c
  7763  015272  D007               	goto	u11040
  7764                           
  7765                           ; BSR set to: 1
  7766  015274  C126  FFD9         	movff	strstr@s1,fsr2l
  7767  015278  C127  FFDA         	movff	strstr@s1+1,fsr2h
  7768  01527C  50DF               	movf	indf2,w,c
  7769  01527E  A4D8               	btfss	status,2,c
  7770  015280  D7C0               	goto	l1879
  7771  015282                     u11040:
  7772                           
  7773                           ; BSR set to: 1
  7774                           
  7775                           ; BSR set to: 1
  7776                           
  7777                           ; BSR set to: 1
  7778  015282  0E00               	movlw	0
  7779  015284  6F26               	movwf	?_strstr& (0+255),b
  7780  015286  0E00               	movlw	0
  7781  015288  6F27               	movwf	(?_strstr+1)& (0+255),b
  7782  01528A  0012               	return	
  7783  01528C                     __end_of_strstr:
  7784                           	opt stack 0
  7785                           tblptru	equ	0xFF8
  7786                           tblptrh	equ	0xFF7
  7787                           tblptrl	equ	0xFF6
  7788                           tablat	equ	0xFF5
  7789                           intcon	equ	0xFF2
  7790                           postinc0	equ	0xFEE
  7791                           wreg	equ	0xFE8
  7792                           indf1	equ	0xFE7
  7793                           postdec1	equ	0xFE5
  7794                           fsr1h	equ	0xFE2
  7795                           fsr1l	equ	0xFE1
  7796                           indf2	equ	0xFDF
  7797                           postinc2	equ	0xFDE
  7798                           fsr2h	equ	0xFDA
  7799                           fsr2l	equ	0xFD9
  7800                           status	equ	0xFD8
  7801                           
  7802 ;; *************** function _strncmp *****************
  7803 ;; Defined at:
  7804 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strncmp.c"
  7805 ;; Parameters:    Size  Location     Type
  7806 ;;  s1              2   29[BANK1 ] PTR const unsigned char 
  7807 ;;		 -> NULL(0), line(64), 
  7808 ;;  s2              2   31[BANK1 ] PTR const unsigned char 
  7809 ;;		 -> STR_73(24), 
  7810 ;;  len             2   33[BANK1 ] unsigned int 
  7811 ;; Auto vars:     Size  Location     Type
  7812 ;;		None
  7813 ;; Return value:  Size  Location     Type
  7814 ;;                  2   29[BANK1 ] int 
  7815 ;; Registers used:
  7816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7817 ;; Tracked objects:
  7818 ;;		On entry : 0/0
  7819 ;;		On exit  : 0/0
  7820 ;;		Unchanged: 0/0
  7821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7822 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7825 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7826 ;;Total ram usage:        9 bytes
  7827 ;; Hardware stack levels used:    1
  7828 ;; Hardware stack levels required when called:   14
  7829 ;; This function calls:
  7830 ;;		Nothing
  7831 ;; This function is called by:
  7832 ;;		_strstr
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text10
  7837  0150E0                     __ptext10:
  7838                           	opt stack 0
  7839  0150E0                     _strncmp:
  7840                           	opt stack 13
  7841                           
  7842                           ; BSR set to: 1
  7843                           ;incstack = 0
  7844  0150E0  D039               	goto	l1937
  7845  0150E2                     l9183:
  7846  0150E2  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7847  0150E6  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7848  0150EA  50DF               	movf	indf2,w,c
  7849  0150EC  B4D8               	btfsc	status,2,c
  7850  0150EE  D012               	goto	u10810
  7851  0150F0  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7852  0150F4  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7853  0150F8  50DF               	movf	indf2,w,c
  7854  0150FA  0101               	movlb	1	; () banked
  7855  0150FC  6F23               	movwf	??_strncmp& (0+255),b
  7856  0150FE  C11F  FFF6         	movff	strncmp@s2,tblptrl
  7857  015102  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  7858  015106                     	if	0	;tblptru may be non-zero
  7859  015106                     	endif
  7860  015106                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7861  015106  0E00               	movlw	low (__mediumconst shr (0+16))
  7862  015108  6EF8               	movwf	tblptru,c
  7863  01510A                     	endif
  7864  01510A  0008               	tblrd		*
  7865  01510C  50F5               	movf	tablat,w,c
  7866  01510E  1923               	xorwf	??_strncmp& (0+255),w,b
  7867  015110  B4D8               	btfsc	status,2,c
  7868  015112  D01C               	goto	l1939
  7869  015114                     u10810:
  7870                           
  7871                           ; BSR set to: 1
  7872  015114  C11F  FFF6         	movff	strncmp@s2,tblptrl
  7873  015118  C120  FFF7         	movff	strncmp@s2+1,tblptrh
  7874  01511C                     	if	0	;tblptru may be non-zero
  7875  01511C                     	endif
  7876  01511C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7877  01511C  0E00               	movlw	low (__mediumconst shr (0+16))
  7878  01511E  6EF8               	movwf	tblptru,c
  7879  015120                     	endif
  7880  015120  0008               	tblrd		*
  7881  015122  50F5               	movf	tablat,w,c
  7882  015124  0101               	movlb	1	; () banked
  7883  015126  6F23               	movwf	??_strncmp& (0+255),b
  7884  015128  6B24               	clrf	(??_strncmp+1)& (0+255),b
  7885  01512A  1F23               	comf	??_strncmp& (0+255),f,b
  7886  01512C  1F24               	comf	(??_strncmp+1)& (0+255),f,b
  7887  01512E  4B23               	infsnz	??_strncmp& (0+255),f,b
  7888  015130  2B24               	incf	(??_strncmp+1)& (0+255),f,b
  7889  015132  C11D  FFD9         	movff	strncmp@s1,fsr2l
  7890  015136  C11E  FFDA         	movff	strncmp@s1+1,fsr2h
  7891  01513A  50DF               	movf	indf2,w,c
  7892  01513C  6F25               	movwf	(??_strncmp+2)& (0+255),b
  7893  01513E  5125               	movf	(??_strncmp+2)& (0+255),w,b
  7894  015140  2523               	addwf	??_strncmp& (0+255),w,b
  7895  015142  6F1D               	movwf	?_strncmp& (0+255),b
  7896  015144  0E00               	movlw	0
  7897  015146  2124               	addwfc	(??_strncmp+1)& (0+255),w,b
  7898  015148  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  7899                           
  7900                           ; BSR set to: 1
  7901  01514A  0012               	return	
  7902  01514C                     l1939:
  7903                           
  7904                           ; BSR set to: 1
  7905                           
  7906                           ; BSR set to: 1
  7907  01514C  4B1D               	infsnz	strncmp@s1& (0+255),f,b
  7908  01514E  2B1E               	incf	(strncmp@s1+1)& (0+255),f,b
  7909  015150  4B1F               	infsnz	strncmp@s2& (0+255),f,b
  7910  015152  2B20               	incf	(strncmp@s2+1)& (0+255),f,b
  7911  015154                     l1937:
  7912                           
  7913                           ; BSR set to: 1
  7914  015154  0101               	movlb	1	; () banked
  7915  015156  0721               	decf	strncmp@len& (0+255),f,b
  7916  015158  A0D8               	btfss	status,0,c
  7917  01515A  0722               	decf	(strncmp@len+1)& (0+255),f,b
  7918  01515C  2921               	incf	strncmp@len& (0+255),w,b
  7919  01515E  E1C1               	bnz	l9183
  7920  015160  2922               	incf	(strncmp@len+1)& (0+255),w,b
  7921  015162  A4D8               	btfss	status,2,c
  7922  015164  D7BE               	goto	l1938
  7923                           
  7924                           ; BSR set to: 1
  7925                           
  7926                           ; BSR set to: 1
  7927  015166  0E00               	movlw	0
  7928  015168  6F1E               	movwf	(?_strncmp+1)& (0+255),b
  7929  01516A  0E00               	movlw	0
  7930  01516C  6F1D               	movwf	?_strncmp& (0+255),b
  7931  01516E  0012               	return	
  7932  015170                     __end_of_strncmp:
  7933                           	opt stack 0
  7934                           tblptru	equ	0xFF8
  7935                           tblptrh	equ	0xFF7
  7936                           tblptrl	equ	0xFF6
  7937                           tablat	equ	0xFF5
  7938                           intcon	equ	0xFF2
  7939                           postinc0	equ	0xFEE
  7940                           wreg	equ	0xFE8
  7941                           indf1	equ	0xFE7
  7942                           postdec1	equ	0xFE5
  7943                           fsr1h	equ	0xFE2
  7944                           fsr1l	equ	0xFE1
  7945                           indf2	equ	0xFDF
  7946                           postinc2	equ	0xFDE
  7947                           fsr2h	equ	0xFDA
  7948                           fsr2l	equ	0xFD9
  7949                           status	equ	0xFD8
  7950                           
  7951 ;; *************** function _strlen *****************
  7952 ;; Defined at:
  7953 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strlen.c"
  7954 ;; Parameters:    Size  Location     Type
  7955 ;;  s               2   23[BANK1 ] PTR const unsigned char 
  7956 ;;		 -> STR_73(24), line(64), 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;  cp              2   27[BANK1 ] PTR const unsigned char 
  7959 ;;		 -> STR_73(24), line(64), 
  7960 ;; Return value:  Size  Location     Type
  7961 ;;                  2   23[BANK1 ] unsigned int 
  7962 ;; Registers used:
  7963 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  7964 ;; Tracked objects:
  7965 ;;		On entry : 0/0
  7966 ;;		On exit  : 0/0
  7967 ;;		Unchanged: 0/0
  7968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  7969 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7970 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7971 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7972 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7973 ;;Total ram usage:        6 bytes
  7974 ;; Hardware stack levels used:    1
  7975 ;; Hardware stack levels required when called:   14
  7976 ;; This function calls:
  7977 ;;		Nothing
  7978 ;; This function is called by:
  7979 ;;		_terminal_ringBufferPull
  7980 ;;		_strstr
  7981 ;; This function uses a non-reentrant model
  7982 ;;
  7983                           
  7984                           	psect	text11
  7985  015A54                     __ptext11:
  7986                           	opt stack 0
  7987  015A54                     _strlen:
  7988                           	opt stack 15
  7989                           
  7990                           ; BSR set to: 1
  7991                           ;incstack = 0
  7992  015A54  C117  F11B         	movff	strlen@s,strlen@cp
  7993  015A58  C118  F11C         	movff	strlen@s+1,strlen@cp+1
  7994  015A5C  D003               	goto	l1856
  7995  015A5E  0101               	movlb	1	; () banked
  7996  015A60  4B1B               	infsnz	strlen@cp& (0+255),f,b
  7997  015A62  2B1C               	incf	(strlen@cp+1)& (0+255),f,b
  7998  015A64                     l1856:
  7999                           
  8000                           ; BSR set to: 1
  8001  015A64  C11B  FFF6         	movff	strlen@cp,tblptrl
  8002  015A68  C11C  FFF7         	movff	strlen@cp+1,tblptrh
  8003  015A6C  0E00               	movlw	low (__mediumconst shr (0+16))
  8004  015A6E  6EF8               	movwf	tblptru,c
  8005  015A70  0E0D               	movlw	(high __ramtop+-1)
  8006  015A72  64F7               	cpfsgt	tblptrh,c
  8007  015A74  D003               	bra	u10787
  8008  015A76  0008               	tblrd		*
  8009  015A78  50F5               	movf	tablat,w,c
  8010  015A7A  D005               	bra	u10780
  8011  015A7C                     u10787:
  8012  015A7C  CFF6 FFE1          	movff	tblptrl,fsr1l
  8013  015A80  CFF7 FFE2          	movff	tblptrh,fsr1h
  8014  015A84  50E7               	movf	indf1,w,c
  8015  015A86                     u10780:
  8016  015A86  0900               	iorlw	0
  8017  015A88  A4D8               	btfss	status,2,c
  8018  015A8A  D7E9               	goto	l1857
  8019  015A8C  C117  F119         	movff	strlen@s,??_strlen
  8020  015A90  C118  F11A         	movff	strlen@s+1,??_strlen+1
  8021  015A94  0101               	movlb	1	; () banked
  8022  015A96  1F19               	comf	??_strlen& (0+255),f,b
  8023  015A98  1F1A               	comf	(??_strlen+1)& (0+255),f,b
  8024  015A9A  4B19               	infsnz	??_strlen& (0+255),f,b
  8025  015A9C  2B1A               	incf	(??_strlen+1)& (0+255),f,b
  8026  015A9E  511B               	movf	strlen@cp& (0+255),w,b
  8027  015AA0  2519               	addwf	??_strlen& (0+255),w,b
  8028  015AA2  6F17               	movwf	?_strlen& (0+255),b
  8029  015AA4  511C               	movf	(strlen@cp+1)& (0+255),w,b
  8030  015AA6  211A               	addwfc	(??_strlen+1)& (0+255),w,b
  8031  015AA8  6F18               	movwf	(?_strlen+1)& (0+255),b
  8032  015AAA  0012               	return	
  8033  015AAC                     __end_of_strlen:
  8034                           	opt stack 0
  8035                           tblptru	equ	0xFF8
  8036                           tblptrh	equ	0xFF7
  8037                           tblptrl	equ	0xFF6
  8038                           tablat	equ	0xFF5
  8039                           intcon	equ	0xFF2
  8040                           postinc0	equ	0xFEE
  8041                           wreg	equ	0xFE8
  8042                           indf1	equ	0xFE7
  8043                           postdec1	equ	0xFE5
  8044                           fsr1h	equ	0xFE2
  8045                           fsr1l	equ	0xFE1
  8046                           indf2	equ	0xFDF
  8047                           postinc2	equ	0xFDE
  8048                           fsr2h	equ	0xFDA
  8049                           fsr2l	equ	0xFD9
  8050                           status	equ	0xFD8
  8051                           
  8052 ;; *************** function _strchr *****************
  8053 ;; Defined at:
  8054 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strchr.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;  ptr             2   23[BANK1 ] PTR const unsigned char 
  8057 ;;		 -> NULL(0), line(64), 
  8058 ;;  chr             2   25[BANK1 ] int 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  2   23[BANK1 ] PTR unsigned char 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8065 ;; Tracked objects:
  8066 ;;		On entry : 0/0
  8067 ;;		On exit  : 0/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8070 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8073 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;Total ram usage:        5 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:   14
  8077 ;; This function calls:
  8078 ;;		Nothing
  8079 ;; This function is called by:
  8080 ;;		_strstr
  8081 ;; This function uses a non-reentrant model
  8082 ;;
  8083                           
  8084                           	psect	text12
  8085  015E18                     __ptext12:
  8086                           	opt stack 0
  8087  015E18                     _strchr:
  8088                           	opt stack 13
  8089                           
  8090                           ; BSR set to: 1
  8091                           ;incstack = 0
  8092  015E18  C117  FFD9         	movff	strchr@ptr,fsr2l
  8093  015E1C  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8094  015E20  0101               	movlb	1	; () banked
  8095  015E22  5119               	movf	strchr@chr& (0+255),w,b
  8096  015E24  18DE               	xorwf	postinc2,w,c
  8097  015E26  A4D8               	btfss	status,2,c
  8098  015E28  D005               	goto	l1932
  8099                           
  8100                           ; BSR set to: 1
  8101  015E2A  C117  F117         	movff	strchr@ptr,?_strchr
  8102  015E2E  C118  F118         	movff	strchr@ptr+1,?_strchr+1
  8103                           
  8104                           ; BSR set to: 1
  8105  015E32  0012               	return	
  8106  015E34                     l1932:
  8107                           
  8108                           ; BSR set to: 1
  8109                           
  8110                           ; BSR set to: 1
  8111  015E34  C117  FFD9         	movff	strchr@ptr,fsr2l
  8112  015E38  C118  FFDA         	movff	strchr@ptr+1,fsr2h
  8113  015E3C  4B17               	infsnz	strchr@ptr& (0+255),f,b
  8114  015E3E  2B18               	incf	(strchr@ptr+1)& (0+255),f,b
  8115  015E40  50DF               	movf	indf2,w,c
  8116  015E42  A4D8               	btfss	status,2,c
  8117  015E44  D7E9               	goto	_strchr
  8118                           
  8119                           ; BSR set to: 1
  8120                           
  8121                           ; BSR set to: 1
  8122  015E46  0E00               	movlw	0
  8123  015E48  6F17               	movwf	?_strchr& (0+255),b
  8124  015E4A  0E00               	movlw	0
  8125  015E4C  6F18               	movwf	(?_strchr+1)& (0+255),b
  8126  015E4E  0012               	return	
  8127  015E50                     __end_of_strchr:
  8128                           	opt stack 0
  8129                           tblptru	equ	0xFF8
  8130                           tblptrh	equ	0xFF7
  8131                           tblptrl	equ	0xFF6
  8132                           tablat	equ	0xFF5
  8133                           intcon	equ	0xFF2
  8134                           postinc0	equ	0xFEE
  8135                           wreg	equ	0xFE8
  8136                           indf1	equ	0xFE7
  8137                           postdec1	equ	0xFE5
  8138                           fsr1h	equ	0xFE2
  8139                           fsr1l	equ	0xFE1
  8140                           indf2	equ	0xFDF
  8141                           postinc2	equ	0xFDE
  8142                           fsr2h	equ	0xFDA
  8143                           fsr2l	equ	0xFD9
  8144                           status	equ	0xFD8
  8145                           
  8146 ;; *************** function _strcmp *****************
  8147 ;; Defined at:
  8148 ;;		line 33 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\strcmp.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  s1              2   23[BANK1 ] PTR const unsigned char 
  8151 ;;		 -> line(64), 
  8152 ;;  s2              2   25[BANK1 ] PTR const unsigned char 
  8153 ;;		 -> STR_81(5), STR_79(9), STR_71(13), STR_69(12), 
  8154 ;;		 -> STR_67(16), STR_65(15), STR_63(21), STR_61(21), 
  8155 ;;		 -> STR_59(26), STR_57(13), STR_55(18), STR_53(15), 
  8156 ;;		 -> STR_51(16), STR_48(4), STR_47(6), STR_44(6), 
  8157 ;;		 -> STR_41(6), 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  r               1   28[BANK1 ] char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  2   23[BANK1 ] int 
  8162 ;; Registers used:
  8163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8169 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8170 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8171 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8172 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8173 ;;Total ram usage:        6 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:   14
  8176 ;; This function calls:
  8177 ;;		Nothing
  8178 ;; This function is called by:
  8179 ;;		_ringBufferLUT
  8180 ;; This function uses a non-reentrant model
  8181 ;;
  8182                           
  8183                           	psect	text13
  8184  015B54                     __ptext13:
  8185                           	opt stack 0
  8186  015B54                     _strcmp:
  8187                           	opt stack 14
  8188                           
  8189                           ; BSR set to: 1
  8190                           ;incstack = 0
  8191  015B54  D005               	goto	l1848
  8192  015B56  0101               	movlb	1	; () banked
  8193  015B58  4B17               	infsnz	strcmp@s1& (0+255),f,b
  8194  015B5A  2B18               	incf	(strcmp@s1+1)& (0+255),f,b
  8195  015B5C  4B19               	infsnz	strcmp@s2& (0+255),f,b
  8196  015B5E  2B1A               	incf	(strcmp@s2+1)& (0+255),f,b
  8197  015B60                     l1848:
  8198                           
  8199                           ; BSR set to: 1
  8200  015B60  C117  FFD9         	movff	strcmp@s1,fsr2l
  8201  015B64  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8202  015B68  50DF               	movf	indf2,w,c
  8203  015B6A  0101               	movlb	1	; () banked
  8204  015B6C  6F1B               	movwf	??_strcmp& (0+255),b
  8205  015B6E  C119  FFF6         	movff	strcmp@s2,tblptrl
  8206  015B72  C11A  FFF7         	movff	strcmp@s2+1,tblptrh
  8207  015B76                     	if	0	;tblptru may be non-zero
  8208  015B76                     	endif
  8209  015B76                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8210  015B76  0E00               	movlw	low (__mediumconst shr (0+16))
  8211  015B78  6EF8               	movwf	tblptru,c
  8212  015B7A                     	endif
  8213  015B7A  0008               	tblrd		*
  8214  015B7C  50F5               	movf	tablat,w,c
  8215  015B7E  0800               	sublw	0
  8216  015B80  251B               	addwf	??_strcmp& (0+255),w,b
  8217  015B82  6F1C               	movwf	strcmp@r& (0+255),b
  8218  015B84  511C               	movf	strcmp@r& (0+255),w,b
  8219  015B86  A4D8               	btfss	status,2,c
  8220  015B88  D007               	goto	u11010
  8221                           
  8222                           ; BSR set to: 1
  8223  015B8A  C117  FFD9         	movff	strcmp@s1,fsr2l
  8224  015B8E  C118  FFDA         	movff	strcmp@s1+1,fsr2h
  8225  015B92  50DF               	movf	indf2,w,c
  8226  015B94  A4D8               	btfss	status,2,c
  8227  015B96  D7DF               	goto	l1849
  8228  015B98                     u11010:
  8229                           
  8230                           ; BSR set to: 1
  8231                           
  8232                           ; BSR set to: 1
  8233                           
  8234                           ; BSR set to: 1
  8235  015B98  511C               	movf	strcmp@r& (0+255),w,b
  8236  015B9A  6F17               	movwf	?_strcmp& (0+255),b
  8237  015B9C  6B18               	clrf	(?_strcmp+1)& (0+255),b
  8238  015B9E  BF17               	btfsc	?_strcmp& (0+255),7,b
  8239  015BA0  0718               	decf	(?_strcmp+1)& (0+255),f,b
  8240  015BA2  0012               	return	
  8241  015BA4                     __end_of_strcmp:
  8242                           	opt stack 0
  8243                           tblptru	equ	0xFF8
  8244                           tblptrh	equ	0xFF7
  8245                           tblptrl	equ	0xFF6
  8246                           tablat	equ	0xFF5
  8247                           intcon	equ	0xFF2
  8248                           postinc0	equ	0xFEE
  8249                           wreg	equ	0xFE8
  8250                           indf1	equ	0xFE7
  8251                           postdec1	equ	0xFE5
  8252                           fsr1h	equ	0xFE2
  8253                           fsr1l	equ	0xFE1
  8254                           indf2	equ	0xFDF
  8255                           postinc2	equ	0xFDE
  8256                           fsr2h	equ	0xFDA
  8257                           fsr2l	equ	0xFD9
  8258                           status	equ	0xFD8
  8259                           
  8260 ;; *************** function _atoi *****************
  8261 ;; Defined at:
  8262 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atoi.c"
  8263 ;; Parameters:    Size  Location     Type
  8264 ;;  s               2   43[BANK1 ] PTR const unsigned char 
  8265 ;;		 -> ringBufferLUT@arg_buff(3), 
  8266 ;; Auto vars:     Size  Location     Type
  8267 ;;  a               2   48[BANK1 ] int 
  8268 ;;  sign            1   47[BANK1 ] unsigned char 
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  2   43[BANK1 ] int 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8278 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8280 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8281 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8282 ;;Total ram usage:        7 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:   15
  8285 ;; This function calls:
  8286 ;;		___wmul
  8287 ;;		_isdigit
  8288 ;; This function is called by:
  8289 ;;		_ringBufferLUT
  8290 ;; This function uses a non-reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text14
  8294  014C00                     __ptext14:
  8295                           	opt stack 0
  8296  014C00                     _atoi:
  8297                           	opt stack 13
  8298                           
  8299                           ; BSR set to: 1
  8300                           ;incstack = 0
  8301  014C00  D003               	goto	l1361
  8302  014C02  0101               	movlb	1	; () banked
  8303  014C04  4B2B               	infsnz	atoi@s& (0+255),f,b
  8304  014C06  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8305  014C08                     l1361:
  8306                           
  8307                           ; BSR set to: 1
  8308  014C08  C12B  FFD9         	movff	atoi@s,fsr2l
  8309  014C0C  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8310  014C10  0E20               	movlw	32
  8311  014C12  18DE               	xorwf	postinc2,w,c
  8312  014C14  B4D8               	btfsc	status,2,c
  8313  014C16  D7F5               	goto	l1362
  8314  014C18  C12B  FFD9         	movff	atoi@s,fsr2l
  8315  014C1C  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8316  014C20  0E09               	movlw	9
  8317  014C22  18DE               	xorwf	postinc2,w,c
  8318  014C24  B4D8               	btfsc	status,2,c
  8319  014C26  D7ED               	goto	l1362
  8320  014C28  0E00               	movlw	0
  8321  014C2A  0101               	movlb	1	; () banked
  8322  014C2C  6F31               	movwf	(atoi@a+1)& (0+255),b
  8323  014C2E  0E00               	movlw	0
  8324  014C30  6F30               	movwf	atoi@a& (0+255),b
  8325  014C32  0E00               	movlw	0
  8326  014C34  6F2F               	movwf	atoi@sign& (0+255),b
  8327                           
  8328                           ; BSR set to: 1
  8329  014C36  C12B  FFD9         	movff	atoi@s,fsr2l
  8330  014C3A  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8331  014C3E  0E2D               	movlw	45
  8332  014C40  18DE               	xorwf	postinc2,w,c
  8333  014C42  A4D8               	btfss	status,2,c
  8334  014C44  D002               	goto	l1364
  8335                           
  8336                           ; BSR set to: 1
  8337  014C46  2B2F               	incf	atoi@sign& (0+255),f,b
  8338  014C48  D026               	goto	l9409
  8339  014C4A                     l1364:
  8340                           
  8341                           ; BSR set to: 1
  8342                           
  8343                           ; BSR set to: 1
  8344  014C4A  C12B  FFD9         	movff	atoi@s,fsr2l
  8345  014C4E  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8346  014C52  0E2B               	movlw	43
  8347  014C54  18DE               	xorwf	postinc2,w,c
  8348  014C56  A4D8               	btfss	status,2,c
  8349  014C58  D020               	goto	l1367
  8350  014C5A  D01D               	goto	l9409
  8351  014C5C                     
  8352                           ; BSR set to: 1
  8353  014C5C  C130  F125         	movff	atoi@a,___wmul@multiplier
  8354  014C60  C131  F126         	movff	atoi@a+1,___wmul@multiplier+1
  8355  014C64  0E00               	movlw	0
  8356  014C66  0101               	movlb	1	; () banked
  8357  014C68  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  8358  014C6A  0E0A               	movlw	10
  8359  014C6C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  8360  014C6E  ECD4  F0AF         	call	___wmul	;wreg free
  8361  014C72  C12B  FFD9         	movff	atoi@s,fsr2l
  8362  014C76  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8363  014C7A  50DF               	movf	indf2,w,c
  8364  014C7C  0101               	movlb	1	; () banked
  8365  014C7E  6F2D               	movwf	??_atoi& (0+255),b
  8366  014C80  6B2E               	clrf	(??_atoi+1)& (0+255),b
  8367  014C82  5125               	movf	?___wmul& (0+255),w,b
  8368  014C84  272D               	addwf	??_atoi& (0+255),f,b
  8369  014C86  5126               	movf	(?___wmul+1)& (0+255),w,b
  8370  014C88  232E               	addwfc	(??_atoi+1)& (0+255),f,b
  8371  014C8A  0ED0               	movlw	208
  8372  014C8C  252D               	addwf	??_atoi& (0+255),w,b
  8373  014C8E  6F30               	movwf	atoi@a& (0+255),b
  8374  014C90  0EFF               	movlw	255
  8375  014C92  212E               	addwfc	(??_atoi+1)& (0+255),w,b
  8376  014C94  6F31               	movwf	(atoi@a+1)& (0+255),b
  8377  014C96                     l9409:
  8378                           
  8379                           ; BSR set to: 1
  8380  014C96  4B2B               	infsnz	atoi@s& (0+255),f,b
  8381  014C98  2B2C               	incf	(atoi@s+1)& (0+255),f,b
  8382  014C9A                     l1367:
  8383                           
  8384                           ; BSR set to: 1
  8385                           
  8386                           ; BSR set to: 1
  8387  014C9A  C12B  FFD9         	movff	atoi@s,fsr2l
  8388  014C9E  C12C  FFDA         	movff	atoi@s+1,fsr2h
  8389  014CA2  50DF               	movf	indf2,w,c
  8390  014CA4  EC6D  F0B0         	call	_isdigit
  8391  014CA8  B0D8               	btfsc	status,0,c
  8392  014CAA  D7D8               	goto	l1368
  8393  014CAC  0101               	movlb	1	; () banked
  8394  014CAE  512F               	movf	atoi@sign& (0+255),w,b
  8395  014CB0  B4D8               	btfsc	status,2,c
  8396  014CB2  D00D               	goto	l1370
  8397                           
  8398                           ; BSR set to: 1
  8399  014CB4  C130  F12D         	movff	atoi@a,??_atoi
  8400  014CB8  C131  F12E         	movff	atoi@a+1,??_atoi+1
  8401  014CBC  1F2D               	comf	??_atoi& (0+255),f,b
  8402  014CBE  1F2E               	comf	(??_atoi+1)& (0+255),f,b
  8403  014CC0  4B2D               	infsnz	??_atoi& (0+255),f,b
  8404  014CC2  2B2E               	incf	(??_atoi+1)& (0+255),f,b
  8405  014CC4  C12D  F12B         	movff	??_atoi,?_atoi
  8406  014CC8  C12E  F12C         	movff	??_atoi+1,?_atoi+1
  8407  014CCC  0012               	return	
  8408  014CCE                     l1370:
  8409                           
  8410                           ; BSR set to: 1
  8411  014CCE  C130  F12B         	movff	atoi@a,?_atoi
  8412  014CD2  C131  F12C         	movff	atoi@a+1,?_atoi+1
  8413                           
  8414                           ; BSR set to: 1
  8415  014CD6  0012               	return		;funcret
  8416  014CD8                     __end_of_atoi:
  8417                           	opt stack 0
  8418                           tblptru	equ	0xFF8
  8419                           tblptrh	equ	0xFF7
  8420                           tblptrl	equ	0xFF6
  8421                           tablat	equ	0xFF5
  8422                           intcon	equ	0xFF2
  8423                           postinc0	equ	0xFEE
  8424                           wreg	equ	0xFE8
  8425                           indf1	equ	0xFE7
  8426                           postdec1	equ	0xFE5
  8427                           fsr1h	equ	0xFE2
  8428                           fsr1l	equ	0xFE1
  8429                           indf2	equ	0xFDF
  8430                           postinc2	equ	0xFDE
  8431                           fsr2h	equ	0xFDA
  8432                           fsr2l	equ	0xFD9
  8433                           status	equ	0xFD8
  8434                           
  8435 ;; *************** function ___ftdiv *****************
  8436 ;; Defined at:
  8437 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  f1              3   55[BANK1 ] float 
  8440 ;;  f2              3   58[BANK1 ] float 
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  f3              3   65[BANK1 ] float 
  8443 ;;  sign            1   69[BANK1 ] unsigned char 
  8444 ;;  exp             1   68[BANK1 ] unsigned char 
  8445 ;;  cntr            1   64[BANK1 ] unsigned char 
  8446 ;; Return value:  Size  Location     Type
  8447 ;;                  3   55[BANK1 ] float 
  8448 ;; Registers used:
  8449 ;;		wreg, status,2, status,0, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8455 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8456 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8457 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8458 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8459 ;;Total ram usage:       15 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:   15
  8462 ;; This function calls:
  8463 ;;		___ftpack
  8464 ;; This function is called by:
  8465 ;;		_ringBufferLUT
  8466 ;; This function uses a non-reentrant model
  8467 ;;
  8468                           
  8469                           	psect	text15
  8470  01487A                     __ptext15:
  8471                           	opt stack 0
  8472  01487A                     ___ftdiv:
  8473                           	opt stack 13
  8474                           
  8475                           ; BSR set to: 1
  8476                           ;incstack = 0
  8477  01487A  C139  F13D         	movff	___ftdiv@f1+2,??___ftdiv
  8478  01487E  0101               	movlb	1	; () banked
  8479  014880  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8480  014882  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8481  014884  3538               	rlcf	(___ftdiv@f1+1)& (0+255),w,b
  8482  014886  373D               	rlcf	??___ftdiv& (0+255),f,b
  8483  014888  E301               	bnc	u11111
  8484  01488A  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8485  01488C                     u11111:
  8486  01488C  513D               	movf	??___ftdiv& (0+255),w,b
  8487  01488E  6F44               	movwf	___ftdiv@exp& (0+255),b
  8488  014890  5144               	movf	___ftdiv@exp& (0+255),w,b
  8489  014892  A4D8               	btfss	status,2,c
  8490  014894  D007               	goto	l1520
  8491                           
  8492                           ; BSR set to: 1
  8493  014896  0E00               	movlw	0
  8494  014898  6F37               	movwf	?___ftdiv& (0+255),b
  8495  01489A  0E00               	movlw	0
  8496  01489C  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8497  01489E  0E00               	movlw	0
  8498  0148A0  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8499                           
  8500                           ; BSR set to: 1
  8501  0148A2  0012               	return	
  8502  0148A4                     l1520:
  8503                           
  8504                           ; BSR set to: 1
  8505                           
  8506                           ; BSR set to: 1
  8507  0148A4  C13C  F13D         	movff	___ftdiv@f2+2,??___ftdiv
  8508  0148A8  6B3E               	clrf	(??___ftdiv+1)& (0+255),b
  8509  0148AA  6B3F               	clrf	(??___ftdiv+2)& (0+255),b
  8510  0148AC  353B               	rlcf	(___ftdiv@f2+1)& (0+255),w,b
  8511  0148AE  373D               	rlcf	??___ftdiv& (0+255),f,b
  8512  0148B0  E301               	bnc	u11131
  8513  0148B2  813E               	bsf	(??___ftdiv+1)& (0+255),0,b
  8514  0148B4                     u11131:
  8515  0148B4  513D               	movf	??___ftdiv& (0+255),w,b
  8516  0148B6  6F45               	movwf	___ftdiv@sign& (0+255),b
  8517  0148B8  5145               	movf	___ftdiv@sign& (0+255),w,b
  8518  0148BA  A4D8               	btfss	status,2,c
  8519  0148BC  D007               	goto	l1522
  8520                           
  8521                           ; BSR set to: 1
  8522  0148BE  0E00               	movlw	0
  8523  0148C0  6F37               	movwf	?___ftdiv& (0+255),b
  8524  0148C2  0E00               	movlw	0
  8525  0148C4  6F38               	movwf	(?___ftdiv+1)& (0+255),b
  8526  0148C6  0E00               	movlw	0
  8527  0148C8  6F39               	movwf	(?___ftdiv+2)& (0+255),b
  8528                           
  8529                           ; BSR set to: 1
  8530  0148CA  0012               	return	
  8531  0148CC                     l1522:
  8532                           
  8533                           ; BSR set to: 1
  8534                           
  8535                           ; BSR set to: 1
  8536  0148CC  0E00               	movlw	0
  8537  0148CE  6F41               	movwf	___ftdiv@f3& (0+255),b
  8538  0148D0  0E00               	movlw	0
  8539  0148D2  6F42               	movwf	(___ftdiv@f3+1)& (0+255),b
  8540  0148D4  0E00               	movlw	0
  8541  0148D6  6F43               	movwf	(___ftdiv@f3+2)& (0+255),b
  8542                           
  8543                           ; BSR set to: 1
  8544  0148D8  5145               	movf	___ftdiv@sign& (0+255),w,b
  8545  0148DA  0F89               	addlw	137
  8546  0148DC  5F44               	subwf	___ftdiv@exp& (0+255),f,b
  8547                           
  8548                           ; BSR set to: 1
  8549  0148DE  C139  F145         	movff	___ftdiv@f1+2,___ftdiv@sign
  8550                           
  8551                           ; BSR set to: 1
  8552  0148E2  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8553  0148E4  1B45               	xorwf	___ftdiv@sign& (0+255),f,b
  8554                           
  8555                           ; BSR set to: 1
  8556  0148E6  0E80               	movlw	128
  8557  0148E8  1745               	andwf	___ftdiv@sign& (0+255),f,b
  8558                           
  8559                           ; BSR set to: 1
  8560  0148EA  8F38               	bsf	(___ftdiv@f1+1)& (0+255),7,b
  8561                           
  8562                           ; BSR set to: 1
  8563  0148EC  0EFF               	movlw	255
  8564  0148EE  1737               	andwf	___ftdiv@f1& (0+255),f,b
  8565  0148F0  0EFF               	movlw	255
  8566  0148F2  1738               	andwf	(___ftdiv@f1+1)& (0+255),f,b
  8567  0148F4  0E00               	movlw	0
  8568  0148F6  1739               	andwf	(___ftdiv@f1+2)& (0+255),f,b
  8569                           
  8570                           ; BSR set to: 1
  8571  0148F8  8F3B               	bsf	(___ftdiv@f2+1)& (0+255),7,b
  8572                           
  8573                           ; BSR set to: 1
  8574  0148FA  0EFF               	movlw	255
  8575  0148FC  173A               	andwf	___ftdiv@f2& (0+255),f,b
  8576  0148FE  0EFF               	movlw	255
  8577  014900  173B               	andwf	(___ftdiv@f2+1)& (0+255),f,b
  8578  014902  0E00               	movlw	0
  8579  014904  173C               	andwf	(___ftdiv@f2+2)& (0+255),f,b
  8580                           
  8581                           ; BSR set to: 1
  8582  014906  0E18               	movlw	24
  8583  014908  6F40               	movwf	___ftdiv@cntr& (0+255),b
  8584  01490A                     
  8585                           ; BSR set to: 1
  8586                           
  8587                           ; BSR set to: 1
  8588  01490A  90D8               	bcf	status,0,c
  8589  01490C  3741               	rlcf	___ftdiv@f3& (0+255),f,b
  8590  01490E  3742               	rlcf	(___ftdiv@f3+1)& (0+255),f,b
  8591  014910  3743               	rlcf	(___ftdiv@f3+2)& (0+255),f,b
  8592                           
  8593                           ; BSR set to: 1
  8594  014912  513A               	movf	___ftdiv@f2& (0+255),w,b
  8595  014914  5D37               	subwf	___ftdiv@f1& (0+255),w,b
  8596  014916  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8597  014918  5938               	subwfb	(___ftdiv@f1+1)& (0+255),w,b
  8598  01491A  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8599  01491C  5939               	subwfb	(___ftdiv@f1+2)& (0+255),w,b
  8600  01491E  A0D8               	btfss	status,0,c
  8601  014920  D007               	goto	l1524
  8602                           
  8603                           ; BSR set to: 1
  8604  014922  513A               	movf	___ftdiv@f2& (0+255),w,b
  8605  014924  5F37               	subwf	___ftdiv@f1& (0+255),f,b
  8606  014926  513B               	movf	(___ftdiv@f2+1)& (0+255),w,b
  8607  014928  5B38               	subwfb	(___ftdiv@f1+1)& (0+255),f,b
  8608  01492A  513C               	movf	(___ftdiv@f2+2)& (0+255),w,b
  8609  01492C  5B39               	subwfb	(___ftdiv@f1+2)& (0+255),f,b
  8610                           
  8611                           ; BSR set to: 1
  8612  01492E  8141               	bsf	___ftdiv@f3& (0+255),0,b
  8613  014930                     l1524:
  8614                           
  8615                           ; BSR set to: 1
  8616  014930  90D8               	bcf	status,0,c
  8617  014932  3737               	rlcf	___ftdiv@f1& (0+255),f,b
  8618  014934  3738               	rlcf	(___ftdiv@f1+1)& (0+255),f,b
  8619  014936  3739               	rlcf	(___ftdiv@f1+2)& (0+255),f,b
  8620                           
  8621                           ; BSR set to: 1
  8622  014938  2F40               	decfsz	___ftdiv@cntr& (0+255),f,b
  8623  01493A  D7E7               	goto	l1523
  8624                           
  8625                           ; BSR set to: 1
  8626                           
  8627                           ; BSR set to: 1
  8628  01493C  C141  F117         	movff	___ftdiv@f3,___ftpack@arg
  8629  014940  C142  F118         	movff	___ftdiv@f3+1,___ftpack@arg+1
  8630  014944  C143  F119         	movff	___ftdiv@f3+2,___ftpack@arg+2
  8631  014948  C144  F11A         	movff	___ftdiv@exp,___ftpack@exp
  8632  01494C  C145  F11B         	movff	___ftdiv@sign,___ftpack@sign
  8633  014950  ECD2  F0A6         	call	___ftpack	;wreg free
  8634  014954  C117  F137         	movff	?___ftpack,?___ftdiv
  8635  014958  C118  F138         	movff	?___ftpack+1,?___ftdiv+1
  8636  01495C  C119  F139         	movff	?___ftpack+2,?___ftdiv+2
  8637  014960  0012               	return	
  8638  014962                     __end_of___ftdiv:
  8639                           	opt stack 0
  8640                           tblptru	equ	0xFF8
  8641                           tblptrh	equ	0xFF7
  8642                           tblptrl	equ	0xFF6
  8643                           tablat	equ	0xFF5
  8644                           intcon	equ	0xFF2
  8645                           postinc0	equ	0xFEE
  8646                           wreg	equ	0xFE8
  8647                           indf1	equ	0xFE7
  8648                           postdec1	equ	0xFE5
  8649                           fsr1h	equ	0xFE2
  8650                           fsr1l	equ	0xFE1
  8651                           indf2	equ	0xFDF
  8652                           postinc2	equ	0xFDE
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657 ;; *************** function ___awtoft *****************
  8658 ;; Defined at:
  8659 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awtoft.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;  c               2   31[BANK1 ] int 
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  sign            1   34[BANK1 ] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  3   31[BANK1 ] float 
  8666 ;; Registers used:
  8667 ;;		wreg, status,2, status,0, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8673 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8674 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;Total ram usage:        4 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:   15
  8680 ;; This function calls:
  8681 ;;		___ftpack
  8682 ;; This function is called by:
  8683 ;;		_ringBufferLUT
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text16
  8688  015DDE                     __ptext16:
  8689                           	opt stack 0
  8690  015DDE                     ___awtoft:
  8691                           	opt stack 13
  8692                           
  8693                           ;incstack = 0
  8694  015DDE  0E00               	movlw	0
  8695  015DE0  0101               	movlb	1	; () banked
  8696  015DE2  6F22               	movwf	___awtoft@sign& (0+255),b
  8697                           
  8698                           ; BSR set to: 1
  8699  015DE4  AF20               	btfss	(___awtoft@c+1)& (0+255),7,b
  8700  015DE6  D006               	goto	l1408
  8701                           
  8702                           ; BSR set to: 1
  8703  015DE8  6D1F               	negf	___awtoft@c& (0+255),b
  8704  015DEA  1F20               	comf	(___awtoft@c+1)& (0+255),f,b
  8705  015DEC  B0D8               	btfsc	status,0,c
  8706  015DEE  2B20               	incf	(___awtoft@c+1)& (0+255),f,b
  8707                           
  8708                           ; BSR set to: 1
  8709  015DF0  0E01               	movlw	1
  8710  015DF2  6F22               	movwf	___awtoft@sign& (0+255),b
  8711  015DF4                     l1408:
  8712                           
  8713                           ; BSR set to: 1
  8714                           
  8715                           ; BSR set to: 1
  8716  015DF4  C11F  F117         	movff	___awtoft@c,___ftpack@arg
  8717  015DF8  C120  F118         	movff	___awtoft@c+1,___ftpack@arg+1
  8718  015DFC  6B19               	clrf	(___ftpack@arg+2)& (0+255),b
  8719  015DFE  0E8E               	movlw	142
  8720  015E00  6F1A               	movwf	___ftpack@exp& (0+255),b
  8721  015E02  C122  F11B         	movff	___awtoft@sign,___ftpack@sign
  8722  015E06  ECD2  F0A6         	call	___ftpack	;wreg free
  8723  015E0A  C117  F11F         	movff	?___ftpack,?___awtoft
  8724  015E0E  C118  F120         	movff	?___ftpack+1,?___awtoft+1
  8725  015E12  C119  F121         	movff	?___ftpack+2,?___awtoft+2
  8726  015E16  0012               	return	
  8727  015E18                     __end_of___awtoft:
  8728                           	opt stack 0
  8729                           tblptru	equ	0xFF8
  8730                           tblptrh	equ	0xFF7
  8731                           tblptrl	equ	0xFF6
  8732                           tablat	equ	0xFF5
  8733                           intcon	equ	0xFF2
  8734                           postinc0	equ	0xFEE
  8735                           wreg	equ	0xFE8
  8736                           indf1	equ	0xFE7
  8737                           postdec1	equ	0xFE5
  8738                           fsr1h	equ	0xFE2
  8739                           fsr1l	equ	0xFE1
  8740                           indf2	equ	0xFDF
  8741                           postinc2	equ	0xFDE
  8742                           fsr2h	equ	0xFDA
  8743                           fsr2l	equ	0xFD9
  8744                           status	equ	0xFD8
  8745                           
  8746 ;; *************** function _EUSART2_Read *****************
  8747 ;; Defined at:
  8748 ;;		line 130 in file "mcc_generated_files/eusart2.c"
  8749 ;; Parameters:    Size  Location     Type
  8750 ;;		None
  8751 ;; Auto vars:     Size  Location     Type
  8752 ;;  readValue       1   23[BANK1 ] unsigned char 
  8753 ;; Return value:  Size  Location     Type
  8754 ;;                  1    wreg      unsigned char 
  8755 ;; Registers used:
  8756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8757 ;; Tracked objects:
  8758 ;;		On entry : 0/0
  8759 ;;		On exit  : 0/0
  8760 ;;		Unchanged: 0/0
  8761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8763 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8765 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8766 ;;Total ram usage:        1 bytes
  8767 ;; Hardware stack levels used:    1
  8768 ;; Hardware stack levels required when called:   14
  8769 ;; This function calls:
  8770 ;;		Nothing
  8771 ;; This function is called by:
  8772 ;;		_terminal_ringBufferPull
  8773 ;;		_getch
  8774 ;; This function uses a non-reentrant model
  8775 ;;
  8776                           
  8777                           	psect	text17
  8778  015D16                     __ptext17:
  8779                           	opt stack 0
  8780  015D16                     _EUSART2_Read:
  8781                           	opt stack 15
  8782                           
  8783                           ;eusart2.c: 132: uint8_t readValue = 0;
  8784                           
  8785                           ;incstack = 0
  8786  015D16  0E00               	movlw	0
  8787  015D18  0101               	movlb	1	; () banked
  8788  015D1A  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  8789                           
  8790                           ;eusart2.c: 134: while(0 == eusart2RxCount)
  8791  015D1C  D001               	goto	l367
  8792  015D1E                     l368:
  8793                           
  8794                           ; BSR set to: 1
  8795  015D1E  0004               	clrwdt		;# 
  8796  015D20                     l367:
  8797  015D20  0101               	movlb	1	; () banked
  8798  015D22  51DB               	movf	_eusart2RxCount& (0+255),w,b	;volatile
  8799  015D24  B4D8               	btfsc	status,2,c
  8800  015D26  D7FB               	goto	l368
  8801                           
  8802                           ; BSR set to: 1
  8803                           ;eusart2.c: 137: }
  8804                           ;eusart2.c: 139: readValue = eusart2RxBuffer[eusart2RxTail++];
  8805                           
  8806                           ; BSR set to: 1
  8807  015D28  51DC               	movf	_eusart2RxTail& (0+255),w,b	;volatile
  8808  015D2A  0D01               	mullw	1
  8809  015D2C  0E80               	movlw	low _eusart2RxBuffer
  8810  015D2E  24F3               	addwf	prodl,w,c
  8811  015D30  6ED9               	movwf	fsr2l,c
  8812  015D32  0E02               	movlw	high _eusart2RxBuffer
  8813  015D34  20F4               	addwfc	prodh,w,c
  8814  015D36  6EDA               	movwf	fsr2h,c
  8815  015D38  50DF               	movf	indf2,w,c
  8816  015D3A  6F17               	movwf	EUSART2_Read@readValue& (0+255),b
  8817                           
  8818                           ; BSR set to: 1
  8819  015D3C  2BDC               	incf	_eusart2RxTail& (0+255),f,b	;volatile
  8820                           
  8821                           ; BSR set to: 1
  8822                           ;eusart2.c: 140: if(sizeof(eusart2RxBuffer) <= eusart2RxTail)
  8823  015D3E  0E3F               	movlw	63
  8824  015D40  65DC               	cpfsgt	_eusart2RxTail& (0+255),b	;volatile
  8825  015D42  D002               	goto	l370
  8826                           
  8827                           ; BSR set to: 1
  8828                           ;eusart2.c: 141: {
  8829                           ;eusart2.c: 142: eusart2RxTail = 0;
  8830  015D44  0E00               	movlw	0
  8831  015D46  6FDC               	movwf	_eusart2RxTail& (0+255),b	;volatile
  8832  015D48                     l370:
  8833                           
  8834                           ; BSR set to: 1
  8835                           ;eusart2.c: 143: }
  8836                           ;eusart2.c: 144: PIE3bits.RC2IE = 0;
  8837                           
  8838                           ; BSR set to: 1
  8839  015D48  010E               	movlb	14	; () banked
  8840  015D4A  9F2C               	bcf	44,7,b	;volatile
  8841                           
  8842                           ; BSR set to: 14
  8843                           ;eusart2.c: 145: eusart2RxCount--;
  8844  015D4C  0101               	movlb	1	; () banked
  8845  015D4E  07DB               	decf	_eusart2RxCount& (0+255),f,b	;volatile
  8846                           
  8847                           ; BSR set to: 1
  8848                           ;eusart2.c: 146: PIE3bits.RC2IE = 1;
  8849  015D50  010E               	movlb	14	; () banked
  8850  015D52  8F2C               	bsf	44,7,b	;volatile
  8851                           
  8852                           ; BSR set to: 14
  8853                           ;eusart2.c: 148: return readValue;
  8854  015D54  0101               	movlb	1	; () banked
  8855  015D56  5117               	movf	EUSART2_Read@readValue& (0+255),w,b
  8856  015D58  0012               	return	
  8857  015D5A                     __end_of_EUSART2_Read:
  8858                           	opt stack 0
  8859                           tblptru	equ	0xFF8
  8860                           tblptrh	equ	0xFF7
  8861                           tblptrl	equ	0xFF6
  8862                           tablat	equ	0xFF5
  8863                           prodh	equ	0xFF4
  8864                           prodl	equ	0xFF3
  8865                           intcon	equ	0xFF2
  8866                           postinc0	equ	0xFEE
  8867                           wreg	equ	0xFE8
  8868                           indf1	equ	0xFE7
  8869                           postdec1	equ	0xFE5
  8870                           fsr1h	equ	0xFE2
  8871                           fsr1l	equ	0xFE1
  8872                           indf2	equ	0xFDF
  8873                           postinc2	equ	0xFDE
  8874                           fsr2h	equ	0xFDA
  8875                           fsr2l	equ	0xFD9
  8876                           status	equ	0xFD8
  8877                           
  8878 ;; *************** function _terminal_clearTerminal *****************
  8879 ;; Defined at:
  8880 ;;		line 80 in file "ring_buffer_interface.c"
  8881 ;; Parameters:    Size  Location     Type
  8882 ;;		None
  8883 ;; Auto vars:     Size  Location     Type
  8884 ;;		None
  8885 ;; Return value:  Size  Location     Type
  8886 ;;                  1    wreg      void 
  8887 ;; Registers used:
  8888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8889 ;; Tracked objects:
  8890 ;;		On entry : 0/0
  8891 ;;		On exit  : 0/0
  8892 ;;		Unchanged: 0/0
  8893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8898 ;;Total ram usage:        0 bytes
  8899 ;; Hardware stack levels used:    1
  8900 ;; Hardware stack levels required when called:   18
  8901 ;; This function calls:
  8902 ;;		_printf
  8903 ;; This function is called by:
  8904 ;;		_main
  8905 ;; This function uses a non-reentrant model
  8906 ;;
  8907                           
  8908                           	psect	text18
  8909  0161C6                     __ptext18:
  8910                           	opt stack 0
  8911  0161C6                     _terminal_clearTerminal:
  8912                           	opt stack 12
  8913                           
  8914                           ;ring_buffer_interface.c: 81: printf("\033[2J");
  8915                           
  8916                           ; BSR set to: 1
  8917                           ;incstack = 0
  8918  0161C6  0EAC               	movlw	low STR_2
  8919  0161C8  0101               	movlb	1	; () banked
  8920  0161CA  6F64               	movwf	printf@f& (0+255),b
  8921  0161CC  0EFF               	movlw	high STR_2
  8922  0161CE  6F65               	movwf	(printf@f+1)& (0+255),b
  8923  0161D0  EC00  F080         	call	_printf	;wreg free
  8924  0161D4  0012               	return		;funcret
  8925  0161D6                     __end_of_terminal_clearTerminal:
  8926                           	opt stack 0
  8927                           tblptru	equ	0xFF8
  8928                           tblptrh	equ	0xFF7
  8929                           tblptrl	equ	0xFF6
  8930                           tablat	equ	0xFF5
  8931                           prodh	equ	0xFF4
  8932                           prodl	equ	0xFF3
  8933                           intcon	equ	0xFF2
  8934                           postinc0	equ	0xFEE
  8935                           wreg	equ	0xFE8
  8936                           indf1	equ	0xFE7
  8937                           postdec1	equ	0xFE5
  8938                           fsr1h	equ	0xFE2
  8939                           fsr1l	equ	0xFE1
  8940                           indf2	equ	0xFDF
  8941                           postinc2	equ	0xFDE
  8942                           fsr2h	equ	0xFDA
  8943                           fsr2l	equ	0xFD9
  8944                           status	equ	0xFD8
  8945                           
  8946 ;; *************** function _printf *****************
  8947 ;; Defined at:
  8948 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8949 ;; Parameters:    Size  Location     Type
  8950 ;;  f               2  100[BANK1 ] PTR const unsigned char 
  8951 ;;		 -> STR_87(30), STR_86(23), STR_85(40), STR_84(30), 
  8952 ;;		 -> STR_83(33), STR_82(1152), STR_80(58), STR_78(63), 
  8953 ;;		 -> STR_77(63), STR_76(37), STR_75(102), STR_74(86), 
  8954 ;;		 -> STR_72(25), STR_70(24), STR_68(41), STR_66(40), 
  8955 ;;		 -> STR_64(34), STR_62(34), STR_60(32), STR_58(56), 
  8956 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
  8957 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
  8958 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
  8959 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
  8960 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
  8961 ;;		 -> STR_1(4), 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  idx             1  117[BANK1 ] unsigned char 
  8964 ;;  val             4  132[BANK1 ] unsigned long 
  8965 ;;  tmpval          4  128[BANK1 ] struct .
  8966 ;;  fval            3  136[BANK1 ] struct .
  8967 ;;  prec            2  139[BANK1 ] int 
  8968 ;;  exp             2  126[BANK1 ] int 
  8969 ;;  flag            2  124[BANK1 ] unsigned short 
  8970 ;;  ap              2  122[BANK1 ] PTR void [1]
  8971 ;;		 -> ?i2_printf(2), ?_printf(2), 
  8972 ;;  len             2  120[BANK1 ] unsigned int 
  8973 ;;  cp              2  118[BANK1 ] PTR const unsigned char 
  8974 ;;		 -> printf@c(1), 
  8975 ;;  width           2    0        int 
  8976 ;;  c               1  141[BANK1 ] char 
  8977 ;;  d               1    0        unsigned char 
  8978 ;; Return value:  Size  Location     Type
  8979 ;;                  2  100[BANK1 ] int 
  8980 ;; Registers used:
  8981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8982 ;; Tracked objects:
  8983 ;;		On entry : 0/0
  8984 ;;		On exit  : 0/0
  8985 ;;		Unchanged: 0/0
  8986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
  8987 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8988 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8989 ;;      Temps:          0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8990 ;;      Totals:         0       0      42       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8991 ;;Total ram usage:       42 bytes
  8992 ;; Hardware stack levels used:    1
  8993 ;; Hardware stack levels required when called:   17
  8994 ;; This function calls:
  8995 ;;		___awdiv
  8996 ;;		___ftadd
  8997 ;;		___ftge
  8998 ;;		___ftmul
  8999 ;;		___ftneg
  9000 ;;		___ftsub
  9001 ;;		___fttol
  9002 ;;		___lldiv
  9003 ;;		___llmod
  9004 ;;		___lltoft
  9005 ;;		___wmul
  9006 ;;		__div_to_l_
  9007 ;;		__tdiv_to_l_
  9008 ;;		_fround
  9009 ;;		_isdigit
  9010 ;;		_putch
  9011 ;;		_scale
  9012 ;; This function is called by:
  9013 ;;		_terminal_clearTerminal
  9014 ;;		_terminal_setCursorHome
  9015 ;;		_terminal_textAttributes
  9016 ;;		_terminal_printNewline
  9017 ;;		_ringBufferLUT
  9018 ;;		_terminal_printResetMessage
  9019 ;;		_terminal_clearLine
  9020 ;;		_terminal_saveCursor
  9021 ;;		_terminal_returnCursor
  9022 ;; This function uses a non-reentrant model
  9023 ;;
  9024                           
  9025                           	psect	text19
  9026  010000                     __ptext19:
  9027                           	opt stack 0
  9028  010000                     _printf:
  9029                           	opt stack 11
  9030                           
  9031                           ;doprnt.c: 466: va_list ap;
  9032                           ;doprnt.c: 499: signed char c;
  9033                           ;doprnt.c: 501: int width;
  9034                           ;doprnt.c: 504: int prec;
  9035                           ;doprnt.c: 508: unsigned short flag;
  9036                           ;doprnt.c: 515: char d;
  9037                           ;doprnt.c: 516: double fval;
  9038                           ;doprnt.c: 517: int exp;
  9039                           ;doprnt.c: 523: union {
  9040                           ;doprnt.c: 524: unsigned long vd;
  9041                           ;doprnt.c: 525: double integ;
  9042                           ;doprnt.c: 526: } tmpval;
  9043                           ;doprnt.c: 528: unsigned long val;
  9044                           ;doprnt.c: 529: unsigned len;
  9045                           ;doprnt.c: 530: const char * cp;
  9046                           ;doprnt.c: 533: *ap = __va_start();
  9047                           
  9048                           ;incstack = 0
  9049  010000  0E66               	movlw	low (?_printf+2)
  9050  010002  0101               	movlb	1	; () banked
  9051  010004  6F7A               	movwf	printf@ap& (0+255),b
  9052  010006  0E01               	movlw	high (?_printf+2)
  9053  010008  6F7B               	movwf	(printf@ap+1)& (0+255),b
  9054                           
  9055                           ;doprnt.c: 536: while(c = *f++) {
  9056  01000A  EFF8  F084         	goto	u10570
  9057  01000E                     
  9058                           ; BSR set to: 1
  9059                           ;doprnt.c: 538: if(c != '%')
  9060                           
  9061                           ; BSR set to: 1
  9062  01000E  0E25               	movlw	37
  9063  010010  198D               	xorwf	printf@c& (0+255),w,b
  9064  010012  B4D8               	btfsc	status,2,c
  9065  010014  D005               	goto	l1072
  9066                           
  9067                           ; BSR set to: 1
  9068                           ;doprnt.c: 540: {
  9069                           ;doprnt.c: 541: (putch(c) );
  9070  010016  518D               	movf	printf@c& (0+255),w,b
  9071  010018  ECEB  F0B0         	call	_putch
  9072                           
  9073                           ;doprnt.c: 542: continue;
  9074  01001C  EFF8  F084         	goto	u10570
  9075  010020                     l1072:
  9076                           
  9077                           ;doprnt.c: 543: }
  9078                           ;doprnt.c: 548: flag = 0;
  9079  010020  0E00               	movlw	0
  9080  010022  0101               	movlb	1	; () banked
  9081  010024  6F7D               	movwf	(printf@flag+1)& (0+255),b
  9082  010026  0E00               	movlw	0
  9083  010028  6F7C               	movwf	printf@flag& (0+255),b
  9084                           
  9085                           ; BSR set to: 1
  9086                           ;doprnt.c: 611: if(*f == '.') {
  9087  01002A  C164  FFF6         	movff	printf@f,tblptrl
  9088  01002E  C165  FFF7         	movff	printf@f+1,tblptrh
  9089  010032  0E00               	movlw	low (__mediumconst shr (0+16))
  9090  010034  6EF8               	movwf	tblptru,c
  9091  010036  0E0D               	movlw	(high __ramtop+-1)
  9092  010038  64F7               	cpfsgt	tblptrh,c
  9093  01003A  D003               	bra	u10117
  9094  01003C  0008               	tblrd		*
  9095  01003E  50F5               	movf	tablat,w,c
  9096  010040  D005               	bra	u10110
  9097  010042                     u10117:
  9098  010042  CFF6 FFE1          	movff	tblptrl,fsr1l
  9099  010046  CFF7 FFE2          	movff	tblptrh,fsr1h
  9100  01004A  50E7               	movf	indf1,w,c
  9101  01004C                     u10110:
  9102  01004C  0A2E               	xorlw	46
  9103  01004E  A4D8               	btfss	status,2,c
  9104  010050  D049               	goto	l1073
  9105                           
  9106                           ;doprnt.c: 612: flag |= 0x4000;
  9107  010052  0101               	movlb	1	; () banked
  9108  010054  8D7D               	bsf	(printf@flag+1)& (0+255),6,b
  9109                           
  9110                           ;doprnt.c: 613: f++;
  9111  010056  4B64               	infsnz	printf@f& (0+255),f,b
  9112  010058  2B65               	incf	(printf@f+1)& (0+255),f,b
  9113                           
  9114                           ; BSR set to: 1
  9115                           ;doprnt.c: 620: {
  9116                           ;doprnt.c: 621: prec = 0;
  9117  01005A  0E00               	movlw	0
  9118  01005C  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9119  01005E  0E00               	movlw	0
  9120  010060  6F8B               	movwf	printf@prec& (0+255),b
  9121                           
  9122                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  9123  010062  D02A               	goto	l1074
  9124  010064                     
  9125                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  9126                           
  9127                           ; BSR set to: 1
  9128  010064  C18B  F125         	movff	printf@prec,___wmul@multiplier
  9129  010068  C18C  F126         	movff	printf@prec+1,___wmul@multiplier+1
  9130  01006C  0E00               	movlw	0
  9131  01006E  0101               	movlb	1	; () banked
  9132  010070  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9133  010072  0E0A               	movlw	10
  9134  010074  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9135  010076  ECD4  F0AF         	call	___wmul	;wreg free
  9136  01007A  C164  FFF6         	movff	printf@f,tblptrl
  9137  01007E  C165  FFF7         	movff	printf@f+1,tblptrh
  9138  010082  0E00               	movlw	low (__mediumconst shr (0+16))
  9139  010084  6EF8               	movwf	tblptru,c
  9140  010086  0E0D               	movlw	(high __ramtop+-1)
  9141  010088  64F7               	cpfsgt	tblptrh,c
  9142  01008A  D003               	bra	u10137
  9143  01008C  0008               	tblrd		*
  9144  01008E  50F5               	movf	tablat,w,c
  9145  010090  D005               	bra	u10130
  9146  010092                     u10137:
  9147  010092  CFF6 FFE1          	movff	tblptrl,fsr1l
  9148  010096  CFF7 FFE2          	movff	tblptrh,fsr1h
  9149  01009A  50E7               	movf	indf1,w,c
  9150  01009C                     u10130:
  9151  01009C  0101               	movlb	1	; () banked
  9152  01009E  6F6C               	movwf	??_printf& (0+255),b
  9153  0100A0  516C               	movf	??_printf& (0+255),w,b
  9154  0100A2  2725               	addwf	?___wmul& (0+255),f,b
  9155  0100A4  0E00               	movlw	0
  9156  0100A6  2326               	addwfc	(?___wmul+1)& (0+255),f,b
  9157  0100A8  0ED0               	movlw	208
  9158  0100AA  2525               	addwf	?___wmul& (0+255),w,b
  9159  0100AC  6F8B               	movwf	printf@prec& (0+255),b
  9160  0100AE  0EFF               	movlw	255
  9161  0100B0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
  9162  0100B2  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9163                           
  9164                           ; BSR set to: 1
  9165  0100B4  4B64               	infsnz	printf@f& (0+255),f,b
  9166  0100B6  2B65               	incf	(printf@f+1)& (0+255),f,b
  9167  0100B8                     l1074:
  9168                           
  9169                           ; BSR set to: 1
  9170                           
  9171                           ; BSR set to: 1
  9172  0100B8  C164  FFF6         	movff	printf@f,tblptrl
  9173  0100BC  C165  FFF7         	movff	printf@f+1,tblptrh
  9174  0100C0  0E00               	movlw	low (__mediumconst shr (0+16))
  9175  0100C2  6EF8               	movwf	tblptru,c
  9176  0100C4  0E0D               	movlw	(high __ramtop+-1)
  9177  0100C6  64F7               	cpfsgt	tblptrh,c
  9178  0100C8  D003               	bra	u10147
  9179  0100CA  0008               	tblrd		*
  9180  0100CC  50F5               	movf	tablat,w,c
  9181  0100CE  D005               	bra	u10140
  9182  0100D0                     u10147:
  9183  0100D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9184  0100D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9185  0100D8  50E7               	movf	indf1,w,c
  9186  0100DA                     u10140:
  9187  0100DA  EC6D  F0B0         	call	_isdigit
  9188  0100DE  A0D8               	btfss	status,0,c
  9189  0100E0  D03B               	goto	l1078
  9190  0100E2  D7C0               	goto	l1075
  9191  0100E4                     l1073:
  9192                           
  9193                           ;doprnt.c: 626: prec = 0;
  9194  0100E4  0E00               	movlw	0
  9195  0100E6  0101               	movlb	1	; () banked
  9196  0100E8  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9197  0100EA  0E00               	movlw	0
  9198  0100EC  6F8B               	movwf	printf@prec& (0+255),b
  9199                           
  9200                           ; BSR set to: 1
  9201                           ;doprnt.c: 628: flag |= 0x1000;
  9202  0100EE  897D               	bsf	(printf@flag+1)& (0+255),4,b
  9203                           
  9204                           ; BSR set to: 1
  9205                           ;doprnt.c: 630: }
  9206                           ;doprnt.c: 635: switch(c = *f++) {
  9207  0100F0  D033               	goto	l1078
  9208  0100F2                     
  9209                           ; BSR set to: 1
  9210                           ;doprnt.c: 663: flag |= 0x400;
  9211                           
  9212                           ; BSR set to: 1
  9213  0100F2  857D               	bsf	(printf@flag+1)& (0+255),2,b
  9214                           
  9215                           ; BSR set to: 1
  9216                           ;doprnt.c: 698: case 'i':
  9217                           ;doprnt.c: 699: break;
  9218                           
  9219                           ; BSR set to: 1
  9220                           
  9221                           ;doprnt.c: 697: case 'd':
  9222                           
  9223                           ;doprnt.c: 664: break;
  9224  0100F4  D062               	goto	l1082
  9225  0100F6                     
  9226                           ; BSR set to: 1
  9227                           ;doprnt.c: 718: case 'x':
  9228                           ;doprnt.c: 721: flag |= 0x80;
  9229                           
  9230                           ; BSR set to: 1
  9231                           
  9232                           ; BSR set to: 1
  9233  0100F6  8F7C               	bsf	printf@flag& (0+255),7,b
  9234                           
  9235                           ;doprnt.c: 723: break;
  9236  0100F8  D060               	goto	l1082
  9237  0100FA                     
  9238                           ; BSR set to: 1
  9239                           ;doprnt.c: 753: if(prec && prec < len)
  9240                           
  9241                           ; BSR set to: 1
  9242  0100FA  518B               	movf	printf@prec& (0+255),w,b
  9243  0100FC  118C               	iorwf	(printf@prec+1)& (0+255),w,b
  9244  0100FE  B4D8               	btfsc	status,2,c
  9245  010100  D015               	goto	l1089
  9246                           
  9247                           ; BSR set to: 1
  9248  010102  5178               	movf	printf@len& (0+255),w,b
  9249  010104  5D8B               	subwf	printf@prec& (0+255),w,b
  9250  010106  5179               	movf	(printf@len+1)& (0+255),w,b
  9251  010108  598C               	subwfb	(printf@prec+1)& (0+255),w,b
  9252  01010A  B0D8               	btfsc	status,0,c
  9253  01010C  D00F               	goto	l1089
  9254                           
  9255                           ; BSR set to: 1
  9256                           ;doprnt.c: 754: len = prec;
  9257  01010E  C18B  F178         	movff	printf@prec,printf@len
  9258  010112  C18C  F179         	movff	printf@prec+1,printf@len+1
  9259                           
  9260                           ; BSR set to: 1
  9261                           ;doprnt.c: 767: while(len--)
  9262  010116  D00A               	goto	l1089
  9263  010118                     l8735:
  9264                           
  9265                           ; BSR set to: 1
  9266                           ;doprnt.c: 768: (putch(*cp++) );
  9267  010118  C176  FFD9         	movff	printf@cp,fsr2l
  9268  01011C  C177  FFDA         	movff	printf@cp+1,fsr2h
  9269  010120  50DF               	movf	indf2,w,c
  9270  010122  ECEB  F0B0         	call	_putch
  9271  010126  0101               	movlb	1	; () banked
  9272  010128  4B76               	infsnz	printf@cp& (0+255),f,b
  9273  01012A  2B77               	incf	(printf@cp+1)& (0+255),f,b
  9274  01012C                     l1089:
  9275                           
  9276                           ; BSR set to: 1
  9277                           
  9278                           ; BSR set to: 1
  9279  01012C  0778               	decf	printf@len& (0+255),f,b
  9280  01012E  A0D8               	btfss	status,0,c
  9281  010130  0779               	decf	(printf@len+1)& (0+255),f,b
  9282  010132  2978               	incf	printf@len& (0+255),w,b
  9283  010134  E1F1               	bnz	l8735
  9284  010136  2979               	incf	(printf@len+1)& (0+255),w,b
  9285  010138  B4D8               	btfsc	status,2,c
  9286  01013A  EFF8  F084         	goto	u10570
  9287  01013E  D7EC               	goto	l1090
  9288  010140                     
  9289                           ; BSR set to: 1
  9290                           ;doprnt.c: 805: cp = (char *)&c;
  9291                           
  9292                           ; BSR set to: 1
  9293  010140  0E8D               	movlw	low printf@c
  9294  010142  6F76               	movwf	printf@cp& (0+255),b
  9295  010144  0E01               	movlw	high printf@c
  9296  010146  6F77               	movwf	(printf@cp+1)& (0+255),b
  9297                           
  9298                           ; BSR set to: 1
  9299                           ;doprnt.c: 806: len = 1;
  9300  010148  0E00               	movlw	0
  9301  01014A  6F79               	movwf	(printf@len+1)& (0+255),b
  9302  01014C  0E01               	movlw	1
  9303  01014E  6F78               	movwf	printf@len& (0+255),b
  9304                           
  9305                           ;doprnt.c: 807: goto dostring;
  9306  010150  D7D4               	goto	l1087
  9307  010152                     
  9308                           ; BSR set to: 1
  9309                           ;doprnt.c: 818: flag |= 0xC0;
  9310                           
  9311                           ; BSR set to: 1
  9312  010152  0EC0               	movlw	192
  9313  010154  137C               	iorwf	printf@flag& (0+255),f,b
  9314                           
  9315                           ; BSR set to: 1
  9316                           ;doprnt.c: 822: }
  9317                           
  9318                           ;doprnt.c: 819: break;
  9319  010156  D031               	goto	l1082
  9320  010158                     l1078:
  9321                           
  9322                           ; BSR set to: 1
  9323  010158  0101               	movlb	1	; () banked
  9324  01015A  5164               	movf	printf@f& (0+255),w,b
  9325  01015C  6F6C               	movwf	??_printf& (0+255),b
  9326  01015E  5165               	movf	(printf@f+1)& (0+255),w,b
  9327  010160  6F6D               	movwf	(??_printf+1)& (0+255),b
  9328  010162  4B64               	infsnz	printf@f& (0+255),f,b
  9329  010164  2B65               	incf	(printf@f+1)& (0+255),f,b
  9330  010166  C16C  FFF6         	movff	??_printf,tblptrl
  9331  01016A  C16D  FFF7         	movff	??_printf+1,tblptrh
  9332  01016E  0E00               	movlw	low (__mediumconst shr (0+16))
  9333  010170  6EF8               	movwf	tblptru,c
  9334  010172  0E0D               	movlw	(high __ramtop+-1)
  9335  010174  64F7               	cpfsgt	tblptrh,c
  9336  010176  D003               	bra	u10197
  9337  010178  0008               	tblrd		*
  9338  01017A  50F5               	movf	tablat,w,c
  9339  01017C  D005               	bra	u10190
  9340  01017E                     u10197:
  9341  01017E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9342  010182  CFF7 FFE2          	movff	tblptrh,fsr1h
  9343  010186  50E7               	movf	indf1,w,c
  9344  010188                     u10190:
  9345  010188  0101               	movlb	1	; () banked
  9346  01018A  6F8D               	movwf	printf@c& (0+255),b
  9347  01018C  518D               	movf	printf@c& (0+255),w,b
  9348                           
  9349                           ; Switch size 1, requested type "space"
  9350                           ; Number of cases is 7, Range of values is 0 to 120
  9351                           ; switch strategies available:
  9352                           ; Name         Instructions Cycles
  9353                           ; simple_byte           22    12 (average)
  9354                           ;	Chosen strategy is simple_byte
  9355  01018E  0A00               	xorlw	0	; case 0
  9356  010190  B4D8               	btfsc	status,2,c
  9357  010192  0012               	return	
  9358  010194  0A58               	xorlw	88	; case 88
  9359  010196  B4D8               	btfsc	status,2,c
  9360  010198  D7AE               	goto	l1085
  9361  01019A  0A3C               	xorlw	60	; case 100
  9362  01019C  B4D8               	btfsc	status,2,c
  9363  01019E  D00D               	goto	l1082
  9364  0101A0  0A02               	xorlw	2	; case 102
  9365  0101A2  B4D8               	btfsc	status,2,c
  9366  0101A4  D7A6               	goto	l1081
  9367  0101A6  0A0F               	xorlw	15	; case 105
  9368  0101A8  B4D8               	btfsc	status,2,c
  9369  0101AA  D007               	goto	l1082
  9370  0101AC  0A1C               	xorlw	28	; case 117
  9371  0101AE  B4D8               	btfsc	status,2,c
  9372  0101B0  D7D0               	goto	l1093
  9373  0101B2  0A0D               	xorlw	13	; case 120
  9374  0101B4  B4D8               	btfsc	status,2,c
  9375  0101B6  D79F               	goto	l1085
  9376  0101B8  D7C3               	goto	l1092
  9377  0101BA                     l1082:
  9378                           
  9379                           ; BSR set to: 1
  9380                           ;doprnt.c: 825: if(flag & (0x700)) {
  9381                           
  9382                           ; BSR set to: 1
  9383  0101BA  0E07               	movlw	7
  9384  0101BC  157D               	andwf	(printf@flag+1)& (0+255),w,b
  9385  0101BE  B4D8               	btfsc	status,2,c
  9386  0101C0  D2C1               	goto	l1094
  9387                           
  9388                           ; BSR set to: 1
  9389                           ;doprnt.c: 827: if(flag & 0x1000)
  9390  0101C2  A97D               	btfss	(printf@flag+1)& (0+255),4,b
  9391  0101C4  D004               	goto	l1095
  9392                           
  9393                           ; BSR set to: 1
  9394                           ;doprnt.c: 829: prec = 6;
  9395  0101C6  0E00               	movlw	0
  9396  0101C8  6F8C               	movwf	(printf@prec+1)& (0+255),b
  9397  0101CA  0E06               	movlw	6
  9398  0101CC  6F8B               	movwf	printf@prec& (0+255),b
  9399  0101CE                     l1095:
  9400                           
  9401                           ; BSR set to: 1
  9402                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  9403                           
  9404                           ; BSR set to: 1
  9405  0101CE  C17A  FFD9         	movff	printf@ap,fsr2l
  9406  0101D2  C17B  FFDA         	movff	printf@ap+1,fsr2h
  9407  0101D6  CFDE F188          	movff	postinc2,printf@fval
  9408  0101DA  CFDE F189          	movff	postinc2,printf@fval+1
  9409  0101DE  CFDD F18A          	movff	postdec2,printf@fval+2
  9410                           
  9411                           ; BSR set to: 1
  9412  0101E2  0E03               	movlw	3
  9413  0101E4  277A               	addwf	printf@ap& (0+255),f,b
  9414  0101E6  0E00               	movlw	0
  9415  0101E8  237B               	addwfc	(printf@ap+1)& (0+255),f,b
  9416                           
  9417                           ; BSR set to: 1
  9418                           ;doprnt.c: 831: if(fval < 0.0) {
  9419  0101EA  AF8A               	btfss	(printf@fval+2)& (0+255),7,b
  9420  0101EC  D011               	goto	l1096
  9421                           
  9422                           ; BSR set to: 1
  9423                           ;doprnt.c: 832: fval = -fval;
  9424  0101EE  C188  F123         	movff	printf@fval,___ftneg@f1
  9425  0101F2  C189  F124         	movff	printf@fval+1,___ftneg@f1+1
  9426  0101F6  C18A  F125         	movff	printf@fval+2,___ftneg@f1+2
  9427  0101FA  EC10  F0B0         	call	___ftneg	;wreg free
  9428  0101FE  C123  F188         	movff	?___ftneg,printf@fval
  9429  010202  C124  F189         	movff	?___ftneg+1,printf@fval+1
  9430  010206  C125  F18A         	movff	?___ftneg+2,printf@fval+2
  9431                           
  9432                           ;doprnt.c: 833: flag |= 0x03;
  9433  01020A  0E03               	movlw	3
  9434  01020C  0101               	movlb	1	; () banked
  9435  01020E  137C               	iorwf	printf@flag& (0+255),f,b
  9436  010210                     l1096:
  9437                           
  9438                           ; BSR set to: 1
  9439                           ;doprnt.c: 834: }
  9440                           ;doprnt.c: 835: exp = 0;
  9441                           
  9442                           ; BSR set to: 1
  9443  010210  0E00               	movlw	0
  9444  010212  6F7F               	movwf	(printf@exp+1)& (0+255),b
  9445  010214  0E00               	movlw	0
  9446  010216  6F7E               	movwf	printf@exp& (0+255),b
  9447                           
  9448                           ; BSR set to: 1
  9449                           ;doprnt.c: 836: if( fval!=0) {
  9450  010218  5188               	movf	printf@fval& (0+255),w,b
  9451  01021A  1189               	iorwf	(printf@fval+1)& (0+255),w,b
  9452  01021C  118A               	iorwf	(printf@fval+2)& (0+255),w,b
  9453  01021E  B4D8               	btfsc	status,2,c
  9454  010220  D088               	goto	l1101
  9455                           
  9456                           ; BSR set to: 1
  9457                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  9458  010222  0E82               	movlw	130
  9459  010224  6F6C               	movwf	??_printf& (0+255),b
  9460  010226  0EFF               	movlw	255
  9461  010228  6F6D               	movwf	(??_printf+1)& (0+255),b
  9462  01022A  C188  F16E         	movff	printf@fval,??_printf+2
  9463  01022E  C189  F16F         	movff	printf@fval+1,??_printf+3
  9464  010232  C18A  F170         	movff	printf@fval+2,??_printf+4
  9465  010236  C18B  F171         	movff	printf@fval+3,??_printf+5
  9466  01023A  0E10               	movlw	16
  9467  01023C  D005               	goto	u10240
  9468  01023E                     u10245:
  9469  01023E  90D8               	bcf	status,0,c
  9470  010240  3371               	rrcf	(??_printf+5)& (0+255),f,b
  9471  010242  3370               	rrcf	(??_printf+4)& (0+255),f,b
  9472  010244  336F               	rrcf	(??_printf+3)& (0+255),f,b
  9473  010246  336E               	rrcf	(??_printf+2)& (0+255),f,b
  9474  010248                     u10240:
  9475  010248  2EE8               	decfsz	wreg,f,c
  9476  01024A  D7F9               	goto	u10245
  9477  01024C  516E               	movf	(??_printf+2)& (0+255),w,b
  9478  01024E  256C               	addwf	??_printf& (0+255),w,b
  9479  010250  6F7E               	movwf	printf@exp& (0+255),b
  9480  010252  0E00               	movlw	0
  9481  010254  216D               	addwfc	(??_printf+1)& (0+255),w,b
  9482  010256  6F7F               	movwf	(printf@exp+1)& (0+255),b
  9483                           
  9484                           ; BSR set to: 1
  9485                           ;doprnt.c: 838: exp--;
  9486  010258  077E               	decf	printf@exp& (0+255),f,b
  9487  01025A  A0D8               	btfss	status,0,c
  9488  01025C  077F               	decf	(printf@exp+1)& (0+255),f,b
  9489                           
  9490                           ; BSR set to: 1
  9491                           ;doprnt.c: 839: exp *= 3;
  9492  01025E  C17E  F125         	movff	printf@exp,___wmul@multiplier
  9493  010262  C17F  F126         	movff	printf@exp+1,___wmul@multiplier+1
  9494  010266  0E00               	movlw	0
  9495  010268  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
  9496  01026A  0E03               	movlw	3
  9497  01026C  6F27               	movwf	___wmul@multiplicand& (0+255),b
  9498  01026E  ECD4  F0AF         	call	___wmul	;wreg free
  9499  010272  C125  F17E         	movff	?___wmul,printf@exp
  9500  010276  C126  F17F         	movff	?___wmul+1,printf@exp+1
  9501                           
  9502                           ;doprnt.c: 840: exp /= 10;
  9503  01027A  C17E  F11D         	movff	printf@exp,___awdiv@dividend
  9504  01027E  C17F  F11E         	movff	printf@exp+1,___awdiv@dividend+1
  9505  010282  0E00               	movlw	0
  9506  010284  0101               	movlb	1	; () banked
  9507  010286  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
  9508  010288  0E0A               	movlw	10
  9509  01028A  6F1F               	movwf	___awdiv@divisor& (0+255),b
  9510  01028C  EC46  F0A9         	call	___awdiv	;wreg free
  9511  010290  C11D  F17E         	movff	?___awdiv,printf@exp
  9512  010294  C11E  F17F         	movff	?___awdiv+1,printf@exp+1
  9513                           
  9514                           ;doprnt.c: 841: if(exp < 0)
  9515  010298  0101               	movlb	1	; () banked
  9516  01029A  AF7F               	btfss	(printf@exp+1)& (0+255),7,b
  9517  01029C  D003               	goto	l1098
  9518                           
  9519                           ; BSR set to: 1
  9520                           ;doprnt.c: 842: exp--;
  9521  01029E  077E               	decf	printf@exp& (0+255),f,b
  9522  0102A0  A0D8               	btfss	status,0,c
  9523  0102A2  077F               	decf	(printf@exp+1)& (0+255),f,b
  9524  0102A4                     l1098:
  9525                           
  9526                           ; BSR set to: 1
  9527                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  9528                           
  9529                           ; BSR set to: 1
  9530  0102A4  517E               	movf	printf@exp& (0+255),w,b
  9531  0102A6  0800               	sublw	0
  9532  0102A8  EC22  F08E         	call	_scale
  9533  0102AC  C155  F180         	movff	?_scale,printf@tmpval
  9534  0102B0  C156  F181         	movff	?_scale+1,printf@tmpval+1
  9535  0102B4  C157  F182         	movff	?_scale+2,printf@tmpval+2
  9536                           
  9537                           ;doprnt.c: 847: tmpval.integ *= fval;
  9538  0102B8  C180  F146         	movff	printf@tmpval,___ftmul@f1
  9539  0102BC  C181  F147         	movff	printf@tmpval+1,___ftmul@f1+1
  9540  0102C0  C182  F148         	movff	printf@tmpval+2,___ftmul@f1+2
  9541  0102C4  C188  F149         	movff	printf@fval,___ftmul@f2
  9542  0102C8  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
  9543  0102CC  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
  9544  0102D0  ECCE  F0A2         	call	___ftmul	;wreg free
  9545  0102D4  C146  F180         	movff	?___ftmul,printf@tmpval
  9546  0102D8  C147  F181         	movff	?___ftmul+1,printf@tmpval+1
  9547  0102DC  C148  F182         	movff	?___ftmul+2,printf@tmpval+2
  9548                           
  9549                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  9550  0102E0  C180  F117         	movff	printf@tmpval,___ftge@ff1
  9551  0102E4  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9552  0102E8  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9553  0102EC  0E00               	movlw	0
  9554  0102EE  0101               	movlb	1	; () banked
  9555  0102F0  6F1A               	movwf	___ftge@ff2& (0+255),b
  9556  0102F2  0E80               	movlw	128
  9557  0102F4  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9558  0102F6  0E3F               	movlw	63
  9559  0102F8  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9560  0102FA  EC27  F0A8         	call	___ftge	;wreg free
  9561  0102FE  0101               	movlb	1	; () banked
  9562  010300  B0D8               	btfsc	status,0,c
  9563  010302  D004               	goto	l1099
  9564                           
  9565                           ; BSR set to: 1
  9566                           ;doprnt.c: 849: exp--;
  9567  010304  077E               	decf	printf@exp& (0+255),f,b
  9568  010306  A0D8               	btfss	status,0,c
  9569  010308  077F               	decf	(printf@exp+1)& (0+255),f,b
  9570  01030A  D013               	goto	l1101
  9571  01030C                     l1099:
  9572                           
  9573                           ; BSR set to: 1
  9574                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  9575                           
  9576                           ; BSR set to: 1
  9577  01030C  C180  F117         	movff	printf@tmpval,___ftge@ff1
  9578  010310  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9579  010314  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9580  010318  0E00               	movlw	0
  9581  01031A  6F1A               	movwf	___ftge@ff2& (0+255),b
  9582  01031C  0E20               	movlw	32
  9583  01031E  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9584  010320  0E41               	movlw	65
  9585  010322  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9586  010324  EC27  F0A8         	call	___ftge	;wreg free
  9587  010328  0101               	movlb	1	; () banked
  9588  01032A  A0D8               	btfss	status,0,c
  9589  01032C  D002               	goto	l1101
  9590                           
  9591                           ; BSR set to: 1
  9592                           ;doprnt.c: 851: exp++;
  9593  01032E  4B7E               	infsnz	printf@exp& (0+255),f,b
  9594  010330  2B7F               	incf	(printf@exp+1)& (0+255),f,b
  9595  010332                     l1101:
  9596                           
  9597                           ; BSR set to: 1
  9598                           ;doprnt.c: 852: }
  9599                           ;doprnt.c: 1112: if(prec <= 12)
  9600                           
  9601                           ; BSR set to: 1
  9602                           
  9603                           ; BSR set to: 1
  9604                           
  9605                           ; BSR set to: 1
  9606  010332  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
  9607  010334  D006               	goto	u10280
  9608  010336  518C               	movf	(printf@prec+1)& (0+255),w,b
  9609  010338  E11B               	bnz	l8799
  9610  01033A  0E0D               	movlw	13
  9611  01033C  5D8B               	subwf	printf@prec& (0+255),w,b
  9612  01033E  B0D8               	btfsc	status,0,c
  9613  010340  D017               	goto	l1102
  9614  010342                     u10280:
  9615                           
  9616                           ; BSR set to: 1
  9617                           ;doprnt.c: 1113: fval += fround(prec);
  9618  010342  C188  F12B         	movff	printf@fval,___ftadd@f1
  9619  010346  C189  F12C         	movff	printf@fval+1,___ftadd@f1+1
  9620  01034A  C18A  F12D         	movff	printf@fval+2,___ftadd@f1+2
  9621  01034E  518B               	movf	printf@prec& (0+255),w,b
  9622  010350  EC45  F096         	call	_fround
  9623  010354  C155  F12E         	movff	?_fround,___ftadd@f2
  9624  010358  C156  F12F         	movff	?_fround+1,___ftadd@f2+1
  9625  01035C  C157  F130         	movff	?_fround+2,___ftadd@f2+2
  9626  010360  ECF2  F09C         	call	___ftadd	;wreg free
  9627  010364  C12B  F188         	movff	?___ftadd,printf@fval
  9628  010368  C12C  F189         	movff	?___ftadd+1,printf@fval+1
  9629  01036C  C12D  F18A         	movff	?___ftadd+2,printf@fval+2
  9630  010370                     l1102:
  9631  010370                     l8799:
  9632                           
  9633                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  9634  010370  0101               	movlb	1	; () banked
  9635  010372  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
  9636  010374  D006               	goto	u10290
  9637  010376  517F               	movf	(printf@exp+1)& (0+255),w,b
  9638  010378  E11F               	bnz	l8807
  9639  01037A  0E0A               	movlw	10
  9640  01037C  5D7E               	subwf	printf@exp& (0+255),w,b
  9641  01037E  B0D8               	btfsc	status,0,c
  9642  010380  D01B               	goto	u10320
  9643  010382                     u10290:
  9644                           
  9645                           ; BSR set to: 1
  9646  010382  5188               	movf	printf@fval& (0+255),w,b
  9647  010384  1189               	iorwf	(printf@fval+1)& (0+255),w,b
  9648  010386  118A               	iorwf	(printf@fval+2)& (0+255),w,b
  9649  010388  B4D8               	btfsc	status,2,c
  9650  01038A  D054               	goto	l1103
  9651                           
  9652                           ; BSR set to: 1
  9653  01038C  C188  F155         	movff	printf@fval,___fttol@f1
  9654  010390  C189  F156         	movff	printf@fval+1,___fttol@f1+1
  9655  010394  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
  9656  010398  EC52  F0A2         	call	___fttol	;wreg free
  9657  01039C  0101               	movlb	1	; () banked
  9658  01039E  5155               	movf	?___fttol& (0+255),w,b
  9659  0103A0  1156               	iorwf	(?___fttol+1)& (0+255),w,b
  9660  0103A2  1157               	iorwf	(?___fttol+2)& (0+255),w,b
  9661  0103A4  1158               	iorwf	(?___fttol+3)& (0+255),w,b
  9662  0103A6  B4D8               	btfsc	status,2,c
  9663                           
  9664                           ; BSR set to: 1
  9665  0103A8  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
  9666  0103AA  D044               	goto	l1103
  9667  0103AC  517F               	movf	(printf@exp+1)& (0+255),w,b
  9668  0103AE  E104               	bnz	l8807
  9669  0103B0  0E02               	movlw	2
  9670  0103B2  5D7E               	subwf	printf@exp& (0+255),w,b
  9671  0103B4  A0D8               	btfss	status,0,c
  9672  0103B6  D03E               	goto	l1103
  9673  0103B8                     u10320:
  9674  0103B8                     l8807:
  9675                           
  9676                           ; BSR set to: 1
  9677                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  9678  0103B8  C180  F117         	movff	printf@tmpval,___ftge@ff1
  9679  0103BC  C181  F118         	movff	printf@tmpval+1,___ftge@ff1+1
  9680  0103C0  C182  F119         	movff	printf@tmpval+2,___ftge@ff1+2
  9681  0103C4  0E70               	movlw	112
  9682  0103C6  6F1A               	movwf	___ftge@ff2& (0+255),b
  9683  0103C8  0E89               	movlw	137
  9684  0103CA  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
  9685  0103CC  0E40               	movlw	64
  9686  0103CE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
  9687  0103D0  EC27  F0A8         	call	___ftge	;wreg free
  9688  0103D4  0101               	movlb	1	; () banked
  9689  0103D6  B0D8               	btfsc	status,0,c
  9690  0103D8  D002               	goto	l1106
  9691                           
  9692                           ; BSR set to: 1
  9693                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  9694  0103DA  0EF7               	movlw	247
  9695  0103DC  D001               	goto	L1
  9696  0103DE                     l1106:
  9697                           
  9698                           ; BSR set to: 1
  9699                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  9700                           
  9701                           ; BSR set to: 1
  9702  0103DE  0EF8               	movlw	248
  9703  0103E0                     L1:
  9704  0103E0  277E               	addwf	printf@exp& (0+255),f,b
  9705  0103E2  0EFF               	movlw	255
  9706  0103E4  237F               	addwfc	(printf@exp+1)& (0+255),f,b
  9707                           
  9708                           ; BSR set to: 1
  9709                           ;doprnt.c: 1124: }
  9710                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  9711                           
  9712                           ; BSR set to: 1
  9713  0103E6  517E               	movf	printf@exp& (0+255),w,b
  9714  0103E8  EC22  F08E         	call	_scale
  9715  0103EC  C155  F180         	movff	?_scale,printf@tmpval
  9716  0103F0  C156  F181         	movff	?_scale+1,printf@tmpval+1
  9717  0103F4  C157  F182         	movff	?_scale+2,printf@tmpval+2
  9718                           
  9719                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  9720  0103F8  C188  F117         	movff	printf@fval,__tdiv_to_l_@f1
  9721  0103FC  C189  F118         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  9722  010400  C18A  F119         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  9723  010404  C180  F11A         	movff	printf@tmpval,__tdiv_to_l_@f2
  9724  010408  C181  F11B         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  9725  01040C  C182  F11C         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  9726  010410  EC68  F09F         	call	__tdiv_to_l_	;wreg free
  9727  010414  C117  F184         	movff	?__tdiv_to_l_,printf@val
  9728  010418  C118  F185         	movff	?__tdiv_to_l_+1,printf@val+1
  9729  01041C  C119  F186         	movff	?__tdiv_to_l_+2,printf@val+2
  9730  010420  C11A  F187         	movff	?__tdiv_to_l_+3,printf@val+3
  9731                           
  9732                           ;doprnt.c: 1129: fval = 0.0;
  9733  010424  0E00               	movlw	0
  9734  010426  0101               	movlb	1	; () banked
  9735  010428  6F88               	movwf	printf@fval& (0+255),b
  9736  01042A  0E00               	movlw	0
  9737  01042C  6F89               	movwf	(printf@fval+1)& (0+255),b
  9738  01042E  0E00               	movlw	0
  9739  010430  6F8A               	movwf	(printf@fval+2)& (0+255),b
  9740                           
  9741                           ;doprnt.c: 1130: } else {
  9742  010432  D033               	goto	l1112
  9743  010434                     l1103:
  9744                           
  9745                           ; BSR set to: 1
  9746                           ;doprnt.c: 1131: val = (unsigned long)fval;
  9747                           
  9748                           ; BSR set to: 1
  9749  010434  C188  F155         	movff	printf@fval,___fttol@f1
  9750  010438  C189  F156         	movff	printf@fval+1,___fttol@f1+1
  9751  01043C  C18A  F157         	movff	printf@fval+2,___fttol@f1+2
  9752  010440  EC52  F0A2         	call	___fttol	;wreg free
  9753  010444  C155  F184         	movff	?___fttol,printf@val
  9754  010448  C156  F185         	movff	?___fttol+1,printf@val+1
  9755  01044C  C157  F186         	movff	?___fttol+2,printf@val+2
  9756  010450  C158  F187         	movff	?___fttol+3,printf@val+3
  9757                           
  9758                           ;doprnt.c: 1132: fval -= (double)val;
  9759  010454  C188  F137         	movff	printf@fval,___ftsub@f1
  9760  010458  C189  F138         	movff	printf@fval+1,___ftsub@f1+1
  9761  01045C  C18A  F139         	movff	printf@fval+2,___ftsub@f1+2
  9762  010460  C184  F11F         	movff	printf@val,___lltoft@c
  9763  010464  C185  F120         	movff	printf@val+1,___lltoft@c+1
  9764  010468  C186  F121         	movff	printf@val+2,___lltoft@c+2
  9765  01046C  C187  F122         	movff	printf@val+3,___lltoft@c+3
  9766  010470  ECA0  F0AC         	call	___lltoft	;wreg free
  9767  010474  C11F  F13A         	movff	?___lltoft,___ftsub@f2
  9768  010478  C120  F13B         	movff	?___lltoft+1,___ftsub@f2+1
  9769  01047C  C121  F13C         	movff	?___lltoft+2,___ftsub@f2+2
  9770  010480  ECAD  F0AE         	call	___ftsub	;wreg free
  9771  010484  C137  F188         	movff	?___ftsub,printf@fval
  9772  010488  C138  F189         	movff	?___ftsub+1,printf@fval+1
  9773  01048C  C139  F18A         	movff	?___ftsub+2,printf@fval+2
  9774                           
  9775                           ;doprnt.c: 1133: exp = 0;
  9776  010490  0E00               	movlw	0
  9777  010492  0101               	movlb	1	; () banked
  9778  010494  6F7F               	movwf	(printf@exp+1)& (0+255),b
  9779  010496  0E00               	movlw	0
  9780  010498  6F7E               	movwf	printf@exp& (0+255),b
  9781  01049A                     l1112:
  9782                           
  9783                           ; BSR set to: 1
  9784                           ;doprnt.c: 1134: }
  9785                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9786                           
  9787                           ; BSR set to: 1
  9788  01049A  0E01               	movlw	1
  9789  01049C  6F8D               	movwf	printf@c& (0+255),b
  9790  01049E                     l8827:
  9791                           
  9792                           ; BSR set to: 1
  9793  01049E  0E0A               	movlw	10
  9794  0104A0  198D               	xorwf	printf@c& (0+255),w,b
  9795  0104A2  B4D8               	btfsc	status,2,c
  9796  0104A4  D01B               	goto	u10360
  9797                           
  9798                           ; BSR set to: 1
  9799                           ;doprnt.c: 1137: if(val < dpowers[c])
  9800                           
  9801                           ; BSR set to: 1
  9802                           
  9803                           ; BSR set to: 1
  9804  0104A6  518D               	movf	printf@c& (0+255),w,b
  9805  0104A8  0D04               	mullw	4
  9806  0104AA  0EE9               	movlw	low _dpowers
  9807  0104AC  24F3               	addwf	prodl,w,c
  9808  0104AE  6EF6               	movwf	tblptrl,c
  9809  0104B0  0EF3               	movlw	high _dpowers
  9810  0104B2  20F4               	addwfc	prodh,w,c
  9811  0104B4  6EF7               	movwf	tblptrh,c
  9812  0104B6                     	if	1	;There are 3 active tblptr bytes
  9813  0104B6  6AF8               	clrf	tblptru,c
  9814  0104B8  0E00               	movlw	low (__mediumconst shr (0+16))
  9815  0104BA  22F8               	addwfc	tblptru,f,c
  9816  0104BC                     	endif
  9817  0104BC  0009               	tblrd		*+
  9818  0104BE  50F5               	movf	tablat,w,c
  9819  0104C0  5D84               	subwf	printf@val& (0+255),w,b
  9820  0104C2  0009               	tblrd		*+
  9821  0104C4  50F5               	movf	tablat,w,c
  9822  0104C6  5985               	subwfb	(printf@val+1)& (0+255),w,b
  9823  0104C8  0009               	tblrd		*+
  9824  0104CA  50F5               	movf	tablat,w,c
  9825  0104CC  5986               	subwfb	(printf@val+2)& (0+255),w,b
  9826  0104CE  0009               	tblrd		*+
  9827  0104D0  50F5               	movf	tablat,w,c
  9828  0104D2  5987               	subwfb	(printf@val+3)& (0+255),w,b
  9829  0104D4  A0D8               	btfss	status,0,c
  9830  0104D6  D002               	goto	u10360
  9831                           
  9832                           ; BSR set to: 1
  9833                           
  9834                           ; BSR set to: 1
  9835                           
  9836                           ; BSR set to: 1
  9837                           ;doprnt.c: 1138: break;
  9838  0104D8  2B8D               	incf	printf@c& (0+255),f,b
  9839  0104DA  D7E1               	goto	l8827
  9840  0104DC                     u10360:
  9841                           
  9842                           ; BSR set to: 1
  9843                           ;doprnt.c: 1175: {
  9844                           ;doprnt.c: 1188: if(flag & 0x03)
  9845                           
  9846                           ; BSR set to: 1
  9847  0104DC  0E03               	movlw	3
  9848  0104DE  157C               	andwf	printf@flag& (0+255),w,b
  9849  0104E0  6F6C               	movwf	??_printf& (0+255),b
  9850  0104E2  0E00               	movlw	0
  9851  0104E4  157D               	andwf	(printf@flag+1)& (0+255),w,b
  9852  0104E6  6F6D               	movwf	(??_printf+1)& (0+255),b
  9853  0104E8  516C               	movf	??_printf& (0+255),w,b
  9854  0104EA  116D               	iorwf	(??_printf+1)& (0+255),w,b
  9855  0104EC  B4D8               	btfsc	status,2,c
  9856  0104EE  D04E               	goto	l1117
  9857                           
  9858                           ; BSR set to: 1
  9859                           ;doprnt.c: 1190: (putch('-') );
  9860  0104F0  0E2D               	movlw	45
  9861  0104F2  ECEB  F0B0         	call	_putch
  9862                           
  9863                           ;doprnt.c: 1195: }
  9864                           ;doprnt.c: 1196: while(c--) {
  9865  0104F6  D04A               	goto	l1117
  9866  0104F8                     
  9867                           ;doprnt.c: 1200: {
  9868                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  9869  0104F8  C184  F117         	movff	printf@val,___lldiv@dividend
  9870  0104FC  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
  9871  010500  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
  9872  010504  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
  9873  010508  0101               	movlb	1	; () banked
  9874  01050A  518D               	movf	printf@c& (0+255),w,b
  9875  01050C  0D04               	mullw	4
  9876  01050E  0EE9               	movlw	low _dpowers
  9877  010510  24F3               	addwf	prodl,w,c
  9878  010512  6EF6               	movwf	tblptrl,c
  9879  010514  0EF3               	movlw	high _dpowers
  9880  010516  20F4               	addwfc	prodh,w,c
  9881  010518  6EF7               	movwf	tblptrh,c
  9882  01051A                     	if	1	;There are 3 active tblptr bytes
  9883  01051A  6AF8               	clrf	tblptru,c
  9884  01051C  0E00               	movlw	low (__mediumconst shr (0+16))
  9885  01051E  22F8               	addwfc	tblptru,f,c
  9886  010520                     	endif
  9887  010520  0009               	tblrd		*+
  9888  010522  CFF5 F11B          	movff	tablat,___lldiv@divisor
  9889  010526  0009               	tblrd		*+
  9890  010528  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
  9891  01052C  0009               	tblrd		*+
  9892  01052E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
  9893  010532  000A               	tblrd		*-
  9894  010534  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
  9895  010538  EC89  F0A9         	call	___lldiv	;wreg free
  9896  01053C  C117  F180         	movff	?___lldiv,printf@tmpval
  9897  010540  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
  9898  010544  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
  9899  010548  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
  9900                           
  9901                           ;doprnt.c: 1202: tmpval.vd %= 10;
  9902  01054C  C180  F124         	movff	printf@tmpval,___llmod@dividend
  9903  010550  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
  9904  010554  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
  9905  010558  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
  9906  01055C  0E0A               	movlw	10
  9907  01055E  0101               	movlb	1	; () banked
  9908  010560  6F28               	movwf	___llmod@divisor& (0+255),b
  9909  010562  0E00               	movlw	0
  9910  010564  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
  9911  010566  0E00               	movlw	0
  9912  010568  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
  9913  01056A  0E00               	movlw	0
  9914  01056C  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
  9915  01056E  ECA4  F0AB         	call	___llmod	;wreg free
  9916  010572  C124  F180         	movff	?___llmod,printf@tmpval
  9917  010576  C125  F181         	movff	?___llmod+1,printf@tmpval+1
  9918  01057A  C126  F182         	movff	?___llmod+2,printf@tmpval+2
  9919  01057E  C127  F183         	movff	?___llmod+3,printf@tmpval+3
  9920                           
  9921                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  9922  010582  0101               	movlb	1	; () banked
  9923  010584  5180               	movf	printf@tmpval& (0+255),w,b
  9924  010586  0F30               	addlw	48
  9925  010588  ECEB  F0B0         	call	_putch
  9926  01058C                     l1117:
  9927  01058C  0101               	movlb	1	; () banked
  9928  01058E  078D               	decf	printf@c& (0+255),f,b
  9929  010590  298D               	incf	printf@c& (0+255),w,b
  9930  010592  B4D8               	btfsc	status,2,c
  9931  010594  D008               	goto	l1120
  9932  010596  D7B0               	goto	l1118
  9933  010598                     l8851:
  9934                           
  9935                           ; BSR set to: 1
  9936                           ;doprnt.c: 1208: (putch('0') );
  9937  010598  0E30               	movlw	48
  9938  01059A  ECEB  F0B0         	call	_putch
  9939                           
  9940                           ;doprnt.c: 1209: exp--;
  9941  01059E  0101               	movlb	1	; () banked
  9942  0105A0  077E               	decf	printf@exp& (0+255),f,b
  9943  0105A2  A0D8               	btfss	status,0,c
  9944  0105A4  077F               	decf	(printf@exp+1)& (0+255),f,b
  9945  0105A6                     l1120:
  9946                           
  9947                           ; BSR set to: 1
  9948                           
  9949                           ; BSR set to: 1
  9950  0105A6  BF7F               	btfsc	(printf@exp+1)& (0+255),7,b
  9951  0105A8  D005               	goto	u10390
  9952  0105AA  517F               	movf	(printf@exp+1)& (0+255),w,b
  9953  0105AC  E1F5               	bnz	l8851
  9954  0105AE  057E               	decf	printf@exp& (0+255),w,b
  9955  0105B0  B0D8               	btfsc	status,0,c
  9956  0105B2  D7F2               	goto	l1121
  9957  0105B4                     u10390:
  9958                           
  9959                           ; BSR set to: 1
  9960                           ;doprnt.c: 1210: }
  9961                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  9962                           
  9963                           ; BSR set to: 1
  9964  0105B4  BF8C               	btfsc	(printf@prec+1)& (0+255),7,b
  9965  0105B6  D009               	goto	l1123
  9966  0105B8  518C               	movf	(printf@prec+1)& (0+255),w,b
  9967  0105BA  E104               	bnz	u10400
  9968  0105BC  0E09               	movlw	9
  9969  0105BE  5D8B               	subwf	printf@prec& (0+255),w,b
  9970  0105C0  A0D8               	btfss	status,0,c
  9971  0105C2  D003               	goto	l1123
  9972  0105C4                     u10400:
  9973                           
  9974                           ; BSR set to: 1
  9975                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  9976  0105C4  0E08               	movlw	8
  9977  0105C6  6F8D               	movwf	printf@c& (0+255),b
  9978  0105C8  D002               	goto	l1124
  9979  0105CA                     l1123:
  9980                           
  9981                           ; BSR set to: 1
  9982                           ;doprnt.c: 1213: else
  9983                           ;doprnt.c: 1214: c = prec;
  9984  0105CA  C18B  F18D         	movff	printf@prec,printf@c
  9985  0105CE                     l1124:
  9986                           
  9987                           ; BSR set to: 1
  9988                           ;doprnt.c: 1215: prec -= c;
  9989                           
  9990                           ; BSR set to: 1
  9991  0105CE  518D               	movf	printf@c& (0+255),w,b
  9992  0105D0  5F8B               	subwf	printf@prec& (0+255),f,b
  9993  0105D2  0E00               	movlw	0
  9994  0105D4  BF8D               	btfsc	printf@c& (0+255),7,b
  9995  0105D6  0EFF               	movlw	255
  9996  0105D8  5B8C               	subwfb	(printf@prec+1)& (0+255),f,b
  9997                           
  9998                           ; BSR set to: 1
  9999                           ;doprnt.c: 1219: if(c)
 10000  0105DA  518D               	movf	printf@c& (0+255),w,b
 10001  0105DC  B4D8               	btfsc	status,2,c
 10002  0105DE  D003               	goto	l1125
 10003                           
 10004                           ; BSR set to: 1
 10005                           ;doprnt.c: 1221: (putch('.') );
 10006  0105E0  0E2E               	movlw	46
 10007  0105E2  ECEB  F0B0         	call	_putch
 10008  0105E6                     l1125:
 10009                           
 10010                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10011  0105E6  0101               	movlb	1	; () banked
 10012  0105E8  518D               	movf	printf@c& (0+255),w,b
 10013  0105EA  EC22  F08E         	call	_scale
 10014  0105EE  C155  F172         	movff	?_scale,_printf$3134
 10015  0105F2  C156  F173         	movff	?_scale+1,_printf$3134+1
 10016  0105F6  C157  F174         	movff	?_scale+2,_printf$3134+2
 10017                           
 10018                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 10019  0105FA  C188  F149         	movff	printf@fval,___ftmul@f2
 10020  0105FE  C189  F14A         	movff	printf@fval+1,___ftmul@f2+1
 10021  010602  C18A  F14B         	movff	printf@fval+2,___ftmul@f2+2
 10022  010606  C172  F146         	movff	_printf$3134,___ftmul@f1
 10023  01060A  C173  F147         	movff	_printf$3134+1,___ftmul@f1+1
 10024  01060E  C174  F148         	movff	_printf$3134+2,___ftmul@f1+2
 10025  010612  ECCE  F0A2         	call	___ftmul	;wreg free
 10026  010616  C146  F155         	movff	?___ftmul,___fttol@f1
 10027  01061A  C147  F156         	movff	?___ftmul+1,___fttol@f1+1
 10028  01061E  C148  F157         	movff	?___ftmul+2,___fttol@f1+2
 10029  010622  EC52  F0A2         	call	___fttol	;wreg free
 10030  010626  C155  F184         	movff	?___fttol,printf@val
 10031  01062A  C156  F185         	movff	?___fttol+1,printf@val+1
 10032  01062E  C157  F186         	movff	?___fttol+2,printf@val+2
 10033  010632  C158  F187         	movff	?___fttol+3,printf@val+3
 10034                           
 10035                           ;doprnt.c: 1228: while(c--) {
 10036  010636  D074               	goto	l1126
 10037  010638                     
 10038                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 10039  010638  C184  F117         	movff	printf@val,___lldiv@dividend
 10040  01063C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10041  010640  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10042  010644  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10043  010648  0101               	movlb	1	; () banked
 10044  01064A  518D               	movf	printf@c& (0+255),w,b
 10045  01064C  0D04               	mullw	4
 10046  01064E  0EE9               	movlw	low _dpowers
 10047  010650  24F3               	addwf	prodl,w,c
 10048  010652  6EF6               	movwf	tblptrl,c
 10049  010654  0EF3               	movlw	high _dpowers
 10050  010656  20F4               	addwfc	prodh,w,c
 10051  010658  6EF7               	movwf	tblptrh,c
 10052  01065A                     	if	1	;There are 3 active tblptr bytes
 10053  01065A  6AF8               	clrf	tblptru,c
 10054  01065C  0E00               	movlw	low (__mediumconst shr (0+16))
 10055  01065E  22F8               	addwfc	tblptru,f,c
 10056  010660                     	endif
 10057  010660  0009               	tblrd		*+
 10058  010662  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10059  010666  0009               	tblrd		*+
 10060  010668  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10061  01066C  0009               	tblrd		*+
 10062  01066E  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10063  010672  000A               	tblrd		*-
 10064  010674  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10065  010678  EC89  F0A9         	call	___lldiv	;wreg free
 10066  01067C  C117  F180         	movff	?___lldiv,printf@tmpval
 10067  010680  C118  F181         	movff	?___lldiv+1,printf@tmpval+1
 10068  010684  C119  F182         	movff	?___lldiv+2,printf@tmpval+2
 10069  010688  C11A  F183         	movff	?___lldiv+3,printf@tmpval+3
 10070                           
 10071                           ;doprnt.c: 1230: tmpval.vd %= 10;
 10072  01068C  C180  F124         	movff	printf@tmpval,___llmod@dividend
 10073  010690  C181  F125         	movff	printf@tmpval+1,___llmod@dividend+1
 10074  010694  C182  F126         	movff	printf@tmpval+2,___llmod@dividend+2
 10075  010698  C183  F127         	movff	printf@tmpval+3,___llmod@dividend+3
 10076  01069C  0E0A               	movlw	10
 10077  01069E  0101               	movlb	1	; () banked
 10078  0106A0  6F28               	movwf	___llmod@divisor& (0+255),b
 10079  0106A2  0E00               	movlw	0
 10080  0106A4  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10081  0106A6  0E00               	movlw	0
 10082  0106A8  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10083  0106AA  0E00               	movlw	0
 10084  0106AC  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10085  0106AE  ECA4  F0AB         	call	___llmod	;wreg free
 10086  0106B2  C124  F180         	movff	?___llmod,printf@tmpval
 10087  0106B6  C125  F181         	movff	?___llmod+1,printf@tmpval+1
 10088  0106BA  C126  F182         	movff	?___llmod+2,printf@tmpval+2
 10089  0106BE  C127  F183         	movff	?___llmod+3,printf@tmpval+3
 10090                           
 10091                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 10092  0106C2  0101               	movlb	1	; () banked
 10093  0106C4  5180               	movf	printf@tmpval& (0+255),w,b
 10094  0106C6  0F30               	addlw	48
 10095  0106C8  ECEB  F0B0         	call	_putch
 10096                           
 10097                           ;doprnt.c: 1232: val %= dpowers[c];
 10098  0106CC  C184  F124         	movff	printf@val,___llmod@dividend
 10099  0106D0  C185  F125         	movff	printf@val+1,___llmod@dividend+1
 10100  0106D4  C186  F126         	movff	printf@val+2,___llmod@dividend+2
 10101  0106D8  C187  F127         	movff	printf@val+3,___llmod@dividend+3
 10102  0106DC  0101               	movlb	1	; () banked
 10103  0106DE  518D               	movf	printf@c& (0+255),w,b
 10104  0106E0  0D04               	mullw	4
 10105  0106E2  0EE9               	movlw	low _dpowers
 10106  0106E4  24F3               	addwf	prodl,w,c
 10107  0106E6  6EF6               	movwf	tblptrl,c
 10108  0106E8  0EF3               	movlw	high _dpowers
 10109  0106EA  20F4               	addwfc	prodh,w,c
 10110  0106EC  6EF7               	movwf	tblptrh,c
 10111  0106EE                     	if	1	;There are 3 active tblptr bytes
 10112  0106EE  6AF8               	clrf	tblptru,c
 10113  0106F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10114  0106F2  22F8               	addwfc	tblptru,f,c
 10115  0106F4                     	endif
 10116  0106F4  0009               	tblrd		*+
 10117  0106F6  CFF5 F128          	movff	tablat,___llmod@divisor
 10118  0106FA  0009               	tblrd		*+
 10119  0106FC  CFF5 F129          	movff	tablat,___llmod@divisor+1
 10120  010700  0009               	tblrd		*+
 10121  010702  CFF5 F12A          	movff	tablat,___llmod@divisor+2
 10122  010706  000A               	tblrd		*-
 10123  010708  CFF5 F12B          	movff	tablat,___llmod@divisor+3
 10124  01070C  ECA4  F0AB         	call	___llmod	;wreg free
 10125  010710  C124  F184         	movff	?___llmod,printf@val
 10126  010714  C125  F185         	movff	?___llmod+1,printf@val+1
 10127  010718  C126  F186         	movff	?___llmod+2,printf@val+2
 10128  01071C  C127  F187         	movff	?___llmod+3,printf@val+3
 10129  010720                     l1126:
 10130  010720  0101               	movlb	1	; () banked
 10131  010722  078D               	decf	printf@c& (0+255),f,b
 10132  010724  298D               	incf	printf@c& (0+255),w,b
 10133  010726  B4D8               	btfsc	status,2,c
 10134  010728  D008               	goto	l1129
 10135  01072A  D786               	goto	l1127
 10136  01072C                     
 10137                           ; BSR set to: 1
 10138                           ;doprnt.c: 1236: (putch('0') );
 10139                           
 10140                           ; BSR set to: 1
 10141  01072C  0E30               	movlw	48
 10142  01072E  ECEB  F0B0         	call	_putch
 10143                           
 10144                           ;doprnt.c: 1237: prec--;
 10145  010732  0101               	movlb	1	; () banked
 10146  010734  078B               	decf	printf@prec& (0+255),f,b
 10147  010736  A0D8               	btfss	status,0,c
 10148  010738  078C               	decf	(printf@prec+1)& (0+255),f,b
 10149  01073A                     l1129:
 10150                           
 10151                           ; BSR set to: 1
 10152                           
 10153                           ; BSR set to: 1
 10154  01073A  518B               	movf	printf@prec& (0+255),w,b
 10155  01073C  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 10156  01073E  B4D8               	btfsc	status,2,c
 10157  010740  D157               	goto	u10570
 10158  010742  D7F4               	goto	l1130
 10159  010744                     l1094:
 10160                           
 10161                           ; BSR set to: 1
 10162                           ;doprnt.c: 1246: }
 10163                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 10164                           
 10165                           ; BSR set to: 1
 10166  010744  0EC0               	movlw	192
 10167  010746  157C               	andwf	printf@flag& (0+255),w,b
 10168  010748  6F6C               	movwf	??_printf& (0+255),b
 10169  01074A  0E00               	movlw	0
 10170  01074C  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10171  01074E  6F6D               	movwf	(??_printf+1)& (0+255),b
 10172  010750  516C               	movf	??_printf& (0+255),w,b
 10173  010752  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10174  010754  A4D8               	btfss	status,2,c
 10175  010756  D01E               	goto	l1132
 10176                           
 10177                           ; BSR set to: 1
 10178                           ;doprnt.c: 1253: {
 10179                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10180  010758  C17A  FFD9         	movff	printf@ap,fsr2l
 10181  01075C  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10182  010760  CFDE F184          	movff	postinc2,printf@val
 10183  010764  CFDD F185          	movff	postdec2,printf@val+1
 10184  010768  0E00               	movlw	0
 10185  01076A  BF85               	btfsc	(printf@val+1)& (0+255),7,b
 10186  01076C  0EFF               	movlw	-1
 10187  01076E  6F86               	movwf	(printf@val+2)& (0+255),b
 10188  010770  6F87               	movwf	(printf@val+3)& (0+255),b
 10189                           
 10190                           ; BSR set to: 1
 10191  010772  0E02               	movlw	2
 10192  010774  277A               	addwf	printf@ap& (0+255),f,b
 10193  010776  0E00               	movlw	0
 10194  010778  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10195                           
 10196                           ; BSR set to: 1
 10197                           ;doprnt.c: 1261: if((long)val < 0) {
 10198  01077A  AF87               	btfss	(printf@val+3)& (0+255),7,b
 10199  01077C  D01D               	goto	l1134
 10200                           
 10201                           ; BSR set to: 1
 10202                           ;doprnt.c: 1262: flag |= 0x03;
 10203  01077E  0E03               	movlw	3
 10204  010780  137C               	iorwf	printf@flag& (0+255),f,b
 10205                           
 10206                           ; BSR set to: 1
 10207                           ;doprnt.c: 1263: val = -val;
 10208  010782  1F87               	comf	(printf@val+3)& (0+255),f,b
 10209  010784  1F86               	comf	(printf@val+2)& (0+255),f,b
 10210  010786  1F85               	comf	(printf@val+1)& (0+255),f,b
 10211  010788  6D84               	negf	printf@val& (0+255),b
 10212  01078A  0E00               	movlw	0
 10213  01078C  2385               	addwfc	(printf@val+1)& (0+255),f,b
 10214  01078E  2386               	addwfc	(printf@val+2)& (0+255),f,b
 10215  010790  2387               	addwfc	(printf@val+3)& (0+255),f,b
 10216                           
 10217                           ; BSR set to: 1
 10218                           ;doprnt.c: 1264: }
 10219                           ;doprnt.c: 1266: }
 10220  010792  D012               	goto	l1134
 10221  010794                     l1132:
 10222                           
 10223                           ; BSR set to: 1
 10224                           ;doprnt.c: 1268: else
 10225                           ;doprnt.c: 1273: {
 10226                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 10227                           
 10228                           ; BSR set to: 1
 10229  010794  C17A  FFD9         	movff	printf@ap,fsr2l
 10230  010798  C17B  FFDA         	movff	printf@ap+1,fsr2h
 10231  01079C  CFDE F16C          	movff	postinc2,??_printf
 10232  0107A0  CFDD F16D          	movff	postdec2,??_printf+1
 10233  0107A4  C16C  F184         	movff	??_printf,printf@val
 10234  0107A8  C16D  F185         	movff	??_printf+1,printf@val+1
 10235  0107AC  6B86               	clrf	(printf@val+2)& (0+255),b
 10236  0107AE  6B87               	clrf	(printf@val+3)& (0+255),b
 10237                           
 10238                           ; BSR set to: 1
 10239  0107B0  0E02               	movlw	2
 10240  0107B2  277A               	addwf	printf@ap& (0+255),f,b
 10241  0107B4  0E00               	movlw	0
 10242  0107B6  237B               	addwfc	(printf@ap+1)& (0+255),f,b
 10243  0107B8                     l1134:
 10244                           
 10245                           ; BSR set to: 1
 10246                           ;doprnt.c: 1287: }
 10247                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 10248                           
 10249                           ; BSR set to: 1
 10250  0107B8  518B               	movf	printf@prec& (0+255),w,b
 10251  0107BA  118C               	iorwf	(printf@prec+1)& (0+255),w,b
 10252  0107BC  A4D8               	btfss	status,2,c
 10253  0107BE  D04B               	goto	l1136
 10254                           
 10255                           ; BSR set to: 1
 10256  0107C0  5184               	movf	printf@val& (0+255),w,b
 10257  0107C2  1185               	iorwf	(printf@val+1)& (0+255),w,b
 10258  0107C4  1186               	iorwf	(printf@val+2)& (0+255),w,b
 10259  0107C6  1187               	iorwf	(printf@val+3)& (0+255),w,b
 10260  0107C8  A4D8               	btfss	status,2,c
 10261  0107CA  D045               	goto	l1136
 10262                           
 10263                           ; BSR set to: 1
 10264                           ;doprnt.c: 1291: prec++;
 10265  0107CC  4B8B               	infsnz	printf@prec& (0+255),f,b
 10266  0107CE  2B8C               	incf	(printf@prec+1)& (0+255),f,b
 10267                           
 10268                           ; BSR set to: 1
 10269                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 10270  0107D0  D042               	goto	l1136
 10271  0107D2                     
 10272                           ; BSR set to: 1
 10273                           ;doprnt.c: 1302: case 0xC0:
 10274                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10275                           
 10276                           ; BSR set to: 1
 10277                           
 10278                           ; BSR set to: 1
 10279  0107D2  0E01               	movlw	1
 10280  0107D4  6F8D               	movwf	printf@c& (0+255),b
 10281  0107D6                     l8911:
 10282                           
 10283                           ; BSR set to: 1
 10284  0107D6  0E0A               	movlw	10
 10285  0107D8  198D               	xorwf	printf@c& (0+255),w,b
 10286  0107DA  B4D8               	btfsc	status,2,c
 10287  0107DC  D047               	goto	l1142
 10288                           
 10289                           ; BSR set to: 1
 10290                           ;doprnt.c: 1306: if(val < dpowers[c])
 10291                           
 10292                           ; BSR set to: 1
 10293                           
 10294                           ; BSR set to: 1
 10295  0107DE  518D               	movf	printf@c& (0+255),w,b
 10296  0107E0  0D04               	mullw	4
 10297  0107E2  0EE9               	movlw	low _dpowers
 10298  0107E4  24F3               	addwf	prodl,w,c
 10299  0107E6  6EF6               	movwf	tblptrl,c
 10300  0107E8  0EF3               	movlw	high _dpowers
 10301  0107EA  20F4               	addwfc	prodh,w,c
 10302  0107EC  6EF7               	movwf	tblptrh,c
 10303  0107EE                     	if	1	;There are 3 active tblptr bytes
 10304  0107EE  6AF8               	clrf	tblptru,c
 10305  0107F0  0E00               	movlw	low (__mediumconst shr (0+16))
 10306  0107F2  22F8               	addwfc	tblptru,f,c
 10307  0107F4                     	endif
 10308  0107F4  0009               	tblrd		*+
 10309  0107F6  50F5               	movf	tablat,w,c
 10310  0107F8  5D84               	subwf	printf@val& (0+255),w,b
 10311  0107FA  0009               	tblrd		*+
 10312  0107FC  50F5               	movf	tablat,w,c
 10313  0107FE  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10314  010800  0009               	tblrd		*+
 10315  010802  50F5               	movf	tablat,w,c
 10316  010804  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10317  010806  0009               	tblrd		*+
 10318  010808  50F5               	movf	tablat,w,c
 10319  01080A  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10320  01080C  A0D8               	btfss	status,0,c
 10321  01080E  D02E               	goto	l1142
 10322                           
 10323                           ; BSR set to: 1
 10324                           
 10325                           ; BSR set to: 1
 10326                           
 10327                           ; BSR set to: 1
 10328                           ;doprnt.c: 1307: break;
 10329  010810  2B8D               	incf	printf@c& (0+255),f,b
 10330  010812  D7E1               	goto	l8911
 10331  010814                     
 10332                           ; BSR set to: 1
 10333                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 10334                           
 10335                           ; BSR set to: 1
 10336  010814  0E01               	movlw	1
 10337  010816  6F8D               	movwf	printf@c& (0+255),b
 10338  010818                     l8925:
 10339                           
 10340                           ; BSR set to: 1
 10341  010818  0E08               	movlw	8
 10342  01081A  198D               	xorwf	printf@c& (0+255),w,b
 10343  01081C  B4D8               	btfsc	status,2,c
 10344  01081E  D026               	goto	l1142
 10345                           
 10346                           ; BSR set to: 1
 10347                           ;doprnt.c: 1317: if(val < hexpowers[c])
 10348                           
 10349                           ; BSR set to: 1
 10350                           
 10351                           ; BSR set to: 1
 10352  010820  518D               	movf	printf@c& (0+255),w,b
 10353  010822  0D04               	mullw	4
 10354  010824  0E5F               	movlw	low _hexpowers
 10355  010826  24F3               	addwf	prodl,w,c
 10356  010828  6EF6               	movwf	tblptrl,c
 10357  01082A  0EF4               	movlw	high _hexpowers
 10358  01082C  20F4               	addwfc	prodh,w,c
 10359  01082E  6EF7               	movwf	tblptrh,c
 10360  010830                     	if	1	;There are 3 active tblptr bytes
 10361  010830  6AF8               	clrf	tblptru,c
 10362  010832  0E00               	movlw	low (__mediumconst shr (0+16))
 10363  010834  22F8               	addwfc	tblptru,f,c
 10364  010836                     	endif
 10365  010836  0009               	tblrd		*+
 10366  010838  50F5               	movf	tablat,w,c
 10367  01083A  5D84               	subwf	printf@val& (0+255),w,b
 10368  01083C  0009               	tblrd		*+
 10369  01083E  50F5               	movf	tablat,w,c
 10370  010840  5985               	subwfb	(printf@val+1)& (0+255),w,b
 10371  010842  0009               	tblrd		*+
 10372  010844  50F5               	movf	tablat,w,c
 10373  010846  5986               	subwfb	(printf@val+2)& (0+255),w,b
 10374  010848  0009               	tblrd		*+
 10375  01084A  50F5               	movf	tablat,w,c
 10376  01084C  5987               	subwfb	(printf@val+3)& (0+255),w,b
 10377  01084E  A0D8               	btfss	status,0,c
 10378  010850  D00D               	goto	l1142
 10379                           
 10380                           ; BSR set to: 1
 10381                           
 10382                           ; BSR set to: 1
 10383                           
 10384                           ; BSR set to: 1
 10385                           ;doprnt.c: 1318: break;
 10386  010852  2B8D               	incf	printf@c& (0+255),f,b
 10387  010854  D7E1               	goto	l8925
 10388  010856                     l1136:
 10389                           
 10390                           ; BSR set to: 1
 10391                           
 10392                           ; BSR set to: 1
 10393  010856  517C               	movf	printf@flag& (0+255),w,b
 10394  010858  0BC0               	andlw	192
 10395                           
 10396                           ; Switch size 1, requested type "space"
 10397                           ; Number of cases is 3, Range of values is 0 to 192
 10398                           ; switch strategies available:
 10399                           ; Name         Instructions Cycles
 10400                           ; simple_byte           10     6 (average)
 10401                           ;	Chosen strategy is simple_byte
 10402  01085A  0A00               	xorlw	0	; case 0
 10403  01085C  B4D8               	btfsc	status,2,c
 10404  01085E  D7B9               	goto	l1137
 10405  010860  0A80               	xorlw	128	; case 128
 10406  010862  B4D8               	btfsc	status,2,c
 10407  010864  D7D7               	goto	l1143
 10408  010866  0A40               	xorlw	64	; case 192
 10409  010868  B4D8               	btfsc	status,2,c
 10410  01086A  D7B3               	goto	l1137
 10411  01086C                     l1142:
 10412                           
 10413                           ; BSR set to: 1
 10414                           ;doprnt.c: 1339: if(c < prec)
 10415                           
 10416                           ; BSR set to: 1
 10417  01086C  0E80               	movlw	128
 10418  01086E  BF8D               	btfsc	printf@c& (0+255),7,b
 10419  010870  0E7F               	movlw	127
 10420  010872  6F6C               	movwf	??_printf& (0+255),b
 10421  010874  518B               	movf	printf@prec& (0+255),w,b
 10422  010876  5D8D               	subwf	printf@c& (0+255),w,b
 10423  010878  518C               	movf	(printf@prec+1)& (0+255),w,b
 10424  01087A  0A80               	xorlw	128
 10425  01087C  596C               	subwfb	??_printf& (0+255),w,b
 10426  01087E  B0D8               	btfsc	status,0,c
 10427  010880  D003               	goto	l1147
 10428                           
 10429                           ; BSR set to: 1
 10430                           ;doprnt.c: 1340: c = prec;
 10431  010882  C18B  F18D         	movff	printf@prec,printf@c
 10432  010886  D010               	goto	l1149
 10433  010888                     l1147:
 10434                           
 10435                           ; BSR set to: 1
 10436                           ;doprnt.c: 1341: else if(prec < c)
 10437                           
 10438                           ; BSR set to: 1
 10439  010888  518C               	movf	(printf@prec+1)& (0+255),w,b
 10440  01088A  0A80               	xorlw	128
 10441  01088C  6F6C               	movwf	??_printf& (0+255),b
 10442  01088E  518D               	movf	printf@c& (0+255),w,b
 10443  010890  5D8B               	subwf	printf@prec& (0+255),w,b
 10444  010892  0E80               	movlw	128
 10445  010894  BF8D               	btfsc	printf@c& (0+255),7,b
 10446  010896  0E7F               	movlw	127
 10447  010898  596C               	subwfb	??_printf& (0+255),w,b
 10448  01089A  B0D8               	btfsc	status,0,c
 10449  01089C  D005               	goto	l1149
 10450                           
 10451                           ; BSR set to: 1
 10452                           ;doprnt.c: 1342: prec = c;
 10453  01089E  518D               	movf	printf@c& (0+255),w,b
 10454  0108A0  6F8B               	movwf	printf@prec& (0+255),b
 10455  0108A2  6B8C               	clrf	(printf@prec+1)& (0+255),b
 10456  0108A4  BF8B               	btfsc	printf@prec& (0+255),7,b
 10457  0108A6  078C               	decf	(printf@prec+1)& (0+255),f,b
 10458  0108A8                     l1149:
 10459                           
 10460                           ; BSR set to: 1
 10461                           ;doprnt.c: 1422: {
 10462                           ;doprnt.c: 1438: if(flag & 0x03)
 10463                           
 10464                           ; BSR set to: 1
 10465                           
 10466                           ; BSR set to: 1
 10467  0108A8  0E03               	movlw	3
 10468  0108AA  157C               	andwf	printf@flag& (0+255),w,b
 10469  0108AC  6F6C               	movwf	??_printf& (0+255),b
 10470  0108AE  0E00               	movlw	0
 10471  0108B0  157D               	andwf	(printf@flag+1)& (0+255),w,b
 10472  0108B2  6F6D               	movwf	(??_printf+1)& (0+255),b
 10473  0108B4  516C               	movf	??_printf& (0+255),w,b
 10474  0108B6  116D               	iorwf	(??_printf+1)& (0+255),w,b
 10475  0108B8  B4D8               	btfsc	status,2,c
 10476  0108BA  D091               	goto	l1151
 10477                           
 10478                           ; BSR set to: 1
 10479                           ;doprnt.c: 1439: (putch('-') );
 10480  0108BC  0E2D               	movlw	45
 10481  0108BE  ECEB  F0B0         	call	_putch
 10482                           
 10483                           ;doprnt.c: 1469: }
 10484                           ;doprnt.c: 1474: while(prec--) {
 10485  0108C2  D08D               	goto	l1151
 10486  0108C4                     
 10487                           ;doprnt.c: 1486: case 0xC0:
 10488                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 10489  0108C4  C18B  F16C         	movff	printf@prec,??_printf
 10490  0108C8  C18C  F16D         	movff	printf@prec+1,??_printf+1
 10491  0108CC  0101               	movlb	1	; () banked
 10492  0108CE  90D8               	bcf	status,0,c
 10493  0108D0  376C               	rlcf	??_printf& (0+255),f,b
 10494  0108D2  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10495  0108D4  90D8               	bcf	status,0,c
 10496  0108D6  376C               	rlcf	??_printf& (0+255),f,b
 10497  0108D8  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10498  0108DA  0EE9               	movlw	low _dpowers
 10499  0108DC  256C               	addwf	??_printf& (0+255),w,b
 10500  0108DE  6EF6               	movwf	tblptrl,c
 10501  0108E0  0EF3               	movlw	high _dpowers
 10502  0108E2  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10503  0108E4  6EF7               	movwf	tblptrh,c
 10504  0108E6                     	if	1	;There are 3 active tblptr bytes
 10505  0108E6  6AF8               	clrf	tblptru,c
 10506  0108E8  0E00               	movlw	low (__mediumconst shr (0+16))
 10507  0108EA  22F8               	addwfc	tblptru,f,c
 10508  0108EC                     	endif
 10509  0108EC  0009               	tblrd		*+
 10510  0108EE  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10511  0108F2  0009               	tblrd		*+
 10512  0108F4  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10513  0108F8  0009               	tblrd		*+
 10514  0108FA  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10515  0108FE  000A               	tblrd		*-
 10516  010900  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10517  010904  C184  F117         	movff	printf@val,___lldiv@dividend
 10518  010908  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10519  01090C  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10520  010910  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10521  010914  EC89  F0A9         	call	___lldiv	;wreg free
 10522  010918  C117  F124         	movff	?___lldiv,___llmod@dividend
 10523  01091C  C118  F125         	movff	?___lldiv+1,___llmod@dividend+1
 10524  010920  C119  F126         	movff	?___lldiv+2,___llmod@dividend+2
 10525  010924  C11A  F127         	movff	?___lldiv+3,___llmod@dividend+3
 10526  010928  0E0A               	movlw	10
 10527  01092A  0101               	movlb	1	; () banked
 10528  01092C  6F28               	movwf	___llmod@divisor& (0+255),b
 10529  01092E  0E00               	movlw	0
 10530  010930  6F29               	movwf	(___llmod@divisor+1)& (0+255),b
 10531  010932  0E00               	movlw	0
 10532  010934  6F2A               	movwf	(___llmod@divisor+2)& (0+255),b
 10533  010936  0E00               	movlw	0
 10534  010938  6F2B               	movwf	(___llmod@divisor+3)& (0+255),b
 10535  01093A  ECA4  F0AB         	call	___llmod	;wreg free
 10536  01093E  0101               	movlb	1	; () banked
 10537  010940  5124               	movf	?___llmod& (0+255),w,b
 10538  010942  0F30               	addlw	48
 10539  010944  6F8D               	movwf	printf@c& (0+255),b
 10540                           
 10541                           ;doprnt.c: 1491: break;
 10542  010946  D048               	goto	l1156
 10543  010948                     
 10544                           ; BSR set to: 1
 10545                           ;doprnt.c: 1499: {
 10546                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 10547                           
 10548                           ; BSR set to: 1
 10549  010948  C184  F117         	movff	printf@val,___lldiv@dividend
 10550  01094C  C185  F118         	movff	printf@val+1,___lldiv@dividend+1
 10551  010950  C186  F119         	movff	printf@val+2,___lldiv@dividend+2
 10552  010954  C187  F11A         	movff	printf@val+3,___lldiv@dividend+3
 10553  010958  C18B  F16C         	movff	printf@prec,??_printf
 10554  01095C  C18C  F16D         	movff	printf@prec+1,??_printf+1
 10555  010960  90D8               	bcf	status,0,c
 10556  010962  376C               	rlcf	??_printf& (0+255),f,b
 10557  010964  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10558  010966  90D8               	bcf	status,0,c
 10559  010968  376C               	rlcf	??_printf& (0+255),f,b
 10560  01096A  376D               	rlcf	(??_printf+1)& (0+255),f,b
 10561  01096C  0E5F               	movlw	low _hexpowers
 10562  01096E  256C               	addwf	??_printf& (0+255),w,b
 10563  010970  6EF6               	movwf	tblptrl,c
 10564  010972  0EF4               	movlw	high _hexpowers
 10565  010974  216D               	addwfc	(??_printf+1)& (0+255),w,b
 10566  010976  6EF7               	movwf	tblptrh,c
 10567  010978                     	if	1	;There are 3 active tblptr bytes
 10568  010978  6AF8               	clrf	tblptru,c
 10569  01097A  0E00               	movlw	low (__mediumconst shr (0+16))
 10570  01097C  22F8               	addwfc	tblptru,f,c
 10571  01097E                     	endif
 10572  01097E  0009               	tblrd		*+
 10573  010980  CFF5 F11B          	movff	tablat,___lldiv@divisor
 10574  010984  0009               	tblrd		*+
 10575  010986  CFF5 F11C          	movff	tablat,___lldiv@divisor+1
 10576  01098A  0009               	tblrd		*+
 10577  01098C  CFF5 F11D          	movff	tablat,___lldiv@divisor+2
 10578  010990  000A               	tblrd		*-
 10579  010992  CFF5 F11E          	movff	tablat,___lldiv@divisor+3
 10580  010996  EC89  F0A9         	call	___lldiv	;wreg free
 10581  01099A  0101               	movlb	1	; () banked
 10582  01099C  5117               	movf	?___lldiv& (0+255),w,b
 10583  01099E  0B0F               	andlw	15
 10584  0109A0  6F75               	movwf	printf@idx& (0+255),b
 10585                           
 10586                           ; BSR set to: 1
 10587                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 10588  0109A2  5175               	movf	printf@idx& (0+255),w,b
 10589  0109A4  0D01               	mullw	1
 10590  0109A6  0E06               	movlw	low STR_88
 10591  0109A8  24F3               	addwf	prodl,w,c
 10592  0109AA  6EF6               	movwf	tblptrl,c
 10593  0109AC  0EFF               	movlw	high STR_88
 10594  0109AE  20F4               	addwfc	prodh,w,c
 10595  0109B0  6EF7               	movwf	tblptrh,c
 10596  0109B2                     	if	1	;There are 3 active tblptr bytes
 10597  0109B2  6AF8               	clrf	tblptru,c
 10598  0109B4  0E00               	movlw	low (__mediumconst shr (0+16))
 10599  0109B6  22F8               	addwfc	tblptru,f,c
 10600  0109B8                     	endif
 10601  0109B8  0008               	tblrd		*
 10602  0109BA  CFF5 F18D          	movff	tablat,printf@c
 10603                           
 10604                           ; BSR set to: 1
 10605                           ;doprnt.c: 1523: }
 10606                           
 10607                           ;doprnt.c: 1508: }
 10608                           ;doprnt.c: 1510: break;
 10609  0109BE  D00C               	goto	l1156
 10610  0109C0                     l8961:
 10611  0109C0  0101               	movlb	1	; () banked
 10612  0109C2  517C               	movf	printf@flag& (0+255),w,b
 10613  0109C4  0BC0               	andlw	192
 10614                           
 10615                           ; Switch size 1, requested type "space"
 10616                           ; Number of cases is 3, Range of values is 0 to 192
 10617                           ; switch strategies available:
 10618                           ; Name         Instructions Cycles
 10619                           ; simple_byte           10     6 (average)
 10620                           ;	Chosen strategy is simple_byte
 10621  0109C6  0A00               	xorlw	0	; case 0
 10622  0109C8  B4D8               	btfsc	status,2,c
 10623  0109CA  D77C               	goto	l1154
 10624  0109CC  0A80               	xorlw	128	; case 128
 10625  0109CE  B4D8               	btfsc	status,2,c
 10626  0109D0  D7BB               	goto	l1157
 10627  0109D2  0A40               	xorlw	64	; case 192
 10628  0109D4  B4D8               	btfsc	status,2,c
 10629  0109D6  D776               	goto	l1154
 10630  0109D8                     l1156:
 10631                           
 10632                           ; BSR set to: 1
 10633                           ;doprnt.c: 1524: (putch(c) );
 10634                           
 10635                           ; BSR set to: 1
 10636  0109D8  518D               	movf	printf@c& (0+255),w,b
 10637  0109DA  ECEB  F0B0         	call	_putch
 10638  0109DE                     l1151:
 10639  0109DE  0101               	movlb	1	; () banked
 10640  0109E0  078B               	decf	printf@prec& (0+255),f,b
 10641  0109E2  A0D8               	btfss	status,0,c
 10642  0109E4  078C               	decf	(printf@prec+1)& (0+255),f,b
 10643  0109E6  298B               	incf	printf@prec& (0+255),w,b
 10644  0109E8  E1EB               	bnz	l8961
 10645  0109EA  298C               	incf	(printf@prec+1)& (0+255),w,b
 10646  0109EC  A4D8               	btfss	status,2,c
 10647  0109EE  D7E8               	goto	l1153
 10648  0109F0                     u10570:
 10649                           
 10650                           ; BSR set to: 1
 10651                           
 10652                           ; BSR set to: 1
 10653  0109F0  0101               	movlb	1	; () banked
 10654  0109F2  5164               	movf	printf@f& (0+255),w,b
 10655  0109F4  6F6C               	movwf	??_printf& (0+255),b
 10656  0109F6  5165               	movf	(printf@f+1)& (0+255),w,b
 10657  0109F8  6F6D               	movwf	(??_printf+1)& (0+255),b
 10658  0109FA  4B64               	infsnz	printf@f& (0+255),f,b
 10659  0109FC  2B65               	incf	(printf@f+1)& (0+255),f,b
 10660  0109FE  C16C  FFF6         	movff	??_printf,tblptrl
 10661  010A02  C16D  FFF7         	movff	??_printf+1,tblptrh
 10662  010A06  0E00               	movlw	low (__mediumconst shr (0+16))
 10663  010A08  6EF8               	movwf	tblptru,c
 10664  010A0A  0E0D               	movlw	(high __ramtop+-1)
 10665  010A0C  64F7               	cpfsgt	tblptrh,c
 10666  010A0E  D003               	bra	u10587
 10667  010A10  0008               	tblrd		*
 10668  010A12  50F5               	movf	tablat,w,c
 10669  010A14  D005               	bra	u10580
 10670  010A16                     u10587:
 10671  010A16  CFF6 FFE1          	movff	tblptrl,fsr1l
 10672  010A1A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10673  010A1E  50E7               	movf	indf1,w,c
 10674  010A20                     u10580:
 10675  010A20  0101               	movlb	1	; () banked
 10676  010A22  6F8D               	movwf	printf@c& (0+255),b
 10677  010A24  518D               	movf	printf@c& (0+255),w,b
 10678  010A26  B4D8               	btfsc	status,2,c
 10679  010A28  0012               	return	
 10680  010A2A  EF07  F080         	goto	l1071
 10681  010A2E                     __end_of_printf:
 10682                           	opt stack 0
 10683                           tblptru	equ	0xFF8
 10684                           tblptrh	equ	0xFF7
 10685                           tblptrl	equ	0xFF6
 10686                           tablat	equ	0xFF5
 10687                           prodh	equ	0xFF4
 10688                           prodl	equ	0xFF3
 10689                           intcon	equ	0xFF2
 10690                           postinc0	equ	0xFEE
 10691                           wreg	equ	0xFE8
 10692                           indf1	equ	0xFE7
 10693                           postdec1	equ	0xFE5
 10694                           fsr1h	equ	0xFE2
 10695                           fsr1l	equ	0xFE1
 10696                           indf2	equ	0xFDF
 10697                           postinc2	equ	0xFDE
 10698                           postdec2	equ	0xFDD
 10699                           fsr2h	equ	0xFDA
 10700                           fsr2l	equ	0xFD9
 10701                           status	equ	0xFD8
 10702                           
 10703 ;; *************** function _scale *****************
 10704 ;; Defined at:
 10705 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 10706 ;; Parameters:    Size  Location     Type
 10707 ;;  scl             1    wreg     char 
 10708 ;; Auto vars:     Size  Location     Type
 10709 ;;  scl             1   91[BANK1 ] char 
 10710 ;; Return value:  Size  Location     Type
 10711 ;;                  3   85[BANK1 ] char 
 10712 ;; Registers used:
 10713 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10714 ;; Tracked objects:
 10715 ;;		On entry : 0/0
 10716 ;;		On exit  : 0/0
 10717 ;;		Unchanged: 0/0
 10718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 10719 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10720 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10722 ;;      Totals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10723 ;;Total ram usage:        7 bytes
 10724 ;; Hardware stack levels used:    1
 10725 ;; Hardware stack levels required when called:   16
 10726 ;; This function calls:
 10727 ;;		___awdiv
 10728 ;;		___awmod
 10729 ;;		___ftmul
 10730 ;;		___wmul
 10731 ;; This function is called by:
 10732 ;;		_printf
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text20
 10737  011C44                     __ptext20:
 10738                           	opt stack 0
 10739  011C44                     _scale:
 10740                           	opt stack 11
 10741                           
 10742                           ; BSR set to: 1
 10743                           ;incstack = 0
 10744                           ;scale@scl stored from wreg
 10745  011C44  0101               	movlb	1	; () banked
 10746  011C46  6F5B               	movwf	scale@scl& (0+255),b
 10747                           
 10748                           ;doprnt.c: 428: if(scl < 0) {
 10749  011C48  0101               	movlb	1	; () banked
 10750  011C4A  AF5B               	btfss	scale@scl& (0+255),7,b
 10751  011C4C  D11E               	goto	l1060
 10752                           
 10753                           ; BSR set to: 1
 10754                           ;doprnt.c: 429: scl = -scl;
 10755  011C4E  6D5B               	negf	scale@scl& (0+255),b
 10756                           
 10757                           ;doprnt.c: 430: if(scl>=110)
 10758  011C50  515B               	movf	scale@scl& (0+255),w,b
 10759  011C52  0A80               	xorlw	128
 10760  011C54  0F12               	addlw	-238
 10761  011C56  A0D8               	btfss	status,0,c
 10762  011C58  D0A0               	goto	l1061
 10763                           
 10764                           ; BSR set to: 1
 10765                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10766  011C5A  0E00               	movlw	0
 10767  011C5C  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10768  011C5E  0E03               	movlw	3
 10769  011C60  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10770  011C62  0E00               	movlw	0
 10771  011C64  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10772  011C66  0E0A               	movlw	10
 10773  011C68  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10774  011C6A  0E00               	movlw	0
 10775  011C6C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10776  011C6E  0E64               	movlw	100
 10777  011C70  6F19               	movwf	___awmod@divisor& (0+255),b
 10778  011C72  515B               	movf	scale@scl& (0+255),w,b
 10779  011C74  6F17               	movwf	___awmod@dividend& (0+255),b
 10780  011C76  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10781  011C78  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10782  011C7A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10783  011C7C  ECFF  F0AA         	call	___awmod	;wreg free
 10784  011C80  C117  F11D         	movff	?___awmod,___awdiv@dividend
 10785  011C84  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 10786  011C88  EC46  F0A9         	call	___awdiv	;wreg free
 10787  011C8C  0E09               	movlw	9
 10788  011C8E  0101               	movlb	1	; () banked
 10789  011C90  251D               	addwf	?___awdiv& (0+255),w,b
 10790  011C92  6F25               	movwf	___wmul@multiplier& (0+255),b
 10791  011C94  0E00               	movlw	0
 10792  011C96  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10793  011C98  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10794  011C9A  ECD4  F0AF         	call	___wmul	;wreg free
 10795  011C9E  0E38               	movlw	low __npowers_
 10796  011CA0  0101               	movlb	1	; () banked
 10797  011CA2  2525               	addwf	?___wmul& (0+255),w,b
 10798  011CA4  6EF6               	movwf	tblptrl,c
 10799  011CA6  0EF4               	movlw	high __npowers_
 10800  011CA8  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10801  011CAA  6EF7               	movwf	tblptrh,c
 10802  011CAC                     	if	1	;There are 3 active tblptr bytes
 10803  011CAC  6AF8               	clrf	tblptru,c
 10804  011CAE  0E00               	movlw	low (__mediumconst shr (0+16))
 10805  011CB0  22F8               	addwfc	tblptru,f,c
 10806  011CB2                     	endif
 10807  011CB2  0009               	tblrd		*+
 10808  011CB4  CFF5 F149          	movff	tablat,___ftmul@f2
 10809  011CB8  0009               	tblrd		*+
 10810  011CBA  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10811  011CBE  000A               	tblrd		*-
 10812  011CC0  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10813  011CC4  0E00               	movlw	0
 10814  011CC6  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10815  011CC8  0E64               	movlw	100
 10816  011CCA  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10817  011CCC  515B               	movf	scale@scl& (0+255),w,b
 10818  011CCE  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10819  011CD0  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10820  011CD2  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10821  011CD4  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10822  011CD6  EC46  F0A9         	call	___awdiv	;wreg free
 10823  011CDA  0E12               	movlw	18
 10824  011CDC  0101               	movlb	1	; () banked
 10825  011CDE  251D               	addwf	?___awdiv& (0+255),w,b
 10826  011CE0  6F25               	movwf	___wmul@multiplier& (0+255),b
 10827  011CE2  0E00               	movlw	0
 10828  011CE4  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10829  011CE6  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10830  011CE8  0E00               	movlw	0
 10831  011CEA  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10832  011CEC  0E03               	movlw	3
 10833  011CEE  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10834  011CF0  ECD4  F0AF         	call	___wmul	;wreg free
 10835  011CF4  0E38               	movlw	low __npowers_
 10836  011CF6  0101               	movlb	1	; () banked
 10837  011CF8  2525               	addwf	?___wmul& (0+255),w,b
 10838  011CFA  6EF6               	movwf	tblptrl,c
 10839  011CFC  0EF4               	movlw	high __npowers_
 10840  011CFE  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10841  011D00  6EF7               	movwf	tblptrh,c
 10842  011D02                     	if	1	;There are 3 active tblptr bytes
 10843  011D02  6AF8               	clrf	tblptru,c
 10844  011D04  0E00               	movlw	low (__mediumconst shr (0+16))
 10845  011D06  22F8               	addwfc	tblptru,f,c
 10846  011D08                     	endif
 10847  011D08  0009               	tblrd		*+
 10848  011D0A  CFF5 F146          	movff	tablat,___ftmul@f1
 10849  011D0E  0009               	tblrd		*+
 10850  011D10  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10851  011D14  000A               	tblrd		*-
 10852  011D16  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10853  011D1A  ECCE  F0A2         	call	___ftmul	;wreg free
 10854  011D1E  C146  F158         	movff	?___ftmul,_scale$3133
 10855  011D22  C147  F159         	movff	?___ftmul+1,_scale$3133+1
 10856  011D26  C148  F15A         	movff	?___ftmul+2,_scale$3133+2
 10857                           
 10858                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 10859  011D2A  C158  F146         	movff	_scale$3133,___ftmul@f1
 10860  011D2E  C159  F147         	movff	_scale$3133+1,___ftmul@f1+1
 10861  011D32  C15A  F148         	movff	_scale$3133+2,___ftmul@f1+2
 10862  011D36  0E00               	movlw	0
 10863  011D38  0101               	movlb	1	; () banked
 10864  011D3A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10865  011D3C  0E03               	movlw	3
 10866  011D3E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10867  011D40  0E00               	movlw	0
 10868  011D42  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10869  011D44  0E0A               	movlw	10
 10870  011D46  6F19               	movwf	___awmod@divisor& (0+255),b
 10871  011D48  515B               	movf	scale@scl& (0+255),w,b
 10872  011D4A  6F17               	movwf	___awmod@dividend& (0+255),b
 10873  011D4C  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10874  011D4E  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10875  011D50  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10876  011D52  ECFF  F0AA         	call	___awmod	;wreg free
 10877  011D56  C117  F125         	movff	?___awmod,___wmul@multiplier
 10878  011D5A  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10879  011D5E  ECD4  F0AF         	call	___wmul	;wreg free
 10880  011D62  0E38               	movlw	low __npowers_
 10881  011D64  0101               	movlb	1	; () banked
 10882  011D66  2525               	addwf	?___wmul& (0+255),w,b
 10883  011D68  6EF6               	movwf	tblptrl,c
 10884  011D6A  0EF4               	movlw	high __npowers_
 10885  011D6C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10886  011D6E  6EF7               	movwf	tblptrh,c
 10887  011D70                     	if	1	;There are 3 active tblptr bytes
 10888  011D70  6AF8               	clrf	tblptru,c
 10889  011D72  0E00               	movlw	low (__mediumconst shr (0+16))
 10890  011D74  22F8               	addwfc	tblptru,f,c
 10891  011D76                     	endif
 10892  011D76  0009               	tblrd		*+
 10893  011D78  CFF5 F149          	movff	tablat,___ftmul@f2
 10894  011D7C  0009               	tblrd		*+
 10895  011D7E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10896  011D82  000A               	tblrd		*-
 10897  011D84  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10898  011D88  ECCE  F0A2         	call	___ftmul	;wreg free
 10899  011D8C  C146  F155         	movff	?___ftmul,?_scale
 10900  011D90  C147  F156         	movff	?___ftmul+1,?_scale+1
 10901  011D94  C148  F157         	movff	?___ftmul+2,?_scale+2
 10902  011D98  0012               	return	
 10903  011D9A                     l1061:
 10904                           
 10905                           ;doprnt.c: 432: else if(scl > 10)
 10906  011D9A  0101               	movlb	1	; () banked
 10907  011D9C  515B               	movf	scale@scl& (0+255),w,b
 10908  011D9E  0A80               	xorlw	128
 10909  011DA0  0F75               	addlw	-139
 10910  011DA2  A0D8               	btfss	status,0,c
 10911  011DA4  D05C               	goto	l1064
 10912                           
 10913                           ; BSR set to: 1
 10914                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 10915  011DA6  0E00               	movlw	0
 10916  011DA8  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 10917  011DAA  0E0A               	movlw	10
 10918  011DAC  6F1F               	movwf	___awdiv@divisor& (0+255),b
 10919  011DAE  515B               	movf	scale@scl& (0+255),w,b
 10920  011DB0  6F1D               	movwf	___awdiv@dividend& (0+255),b
 10921  011DB2  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 10922  011DB4  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 10923  011DB6  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 10924  011DB8  EC46  F0A9         	call	___awdiv	;wreg free
 10925  011DBC  0E09               	movlw	9
 10926  011DBE  0101               	movlb	1	; () banked
 10927  011DC0  251D               	addwf	?___awdiv& (0+255),w,b
 10928  011DC2  6F25               	movwf	___wmul@multiplier& (0+255),b
 10929  011DC4  0E00               	movlw	0
 10930  011DC6  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 10931  011DC8  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 10932  011DCA  0E00               	movlw	0
 10933  011DCC  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10934  011DCE  0E03               	movlw	3
 10935  011DD0  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10936  011DD2  ECD4  F0AF         	call	___wmul	;wreg free
 10937  011DD6  0E38               	movlw	low __npowers_
 10938  011DD8  0101               	movlb	1	; () banked
 10939  011DDA  2525               	addwf	?___wmul& (0+255),w,b
 10940  011DDC  6EF6               	movwf	tblptrl,c
 10941  011DDE  0EF4               	movlw	high __npowers_
 10942  011DE0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10943  011DE2  6EF7               	movwf	tblptrh,c
 10944  011DE4                     	if	1	;There are 3 active tblptr bytes
 10945  011DE4  6AF8               	clrf	tblptru,c
 10946  011DE6  0E00               	movlw	low (__mediumconst shr (0+16))
 10947  011DE8  22F8               	addwfc	tblptru,f,c
 10948  011DEA                     	endif
 10949  011DEA  0009               	tblrd		*+
 10950  011DEC  CFF5 F146          	movff	tablat,___ftmul@f1
 10951  011DF0  0009               	tblrd		*+
 10952  011DF2  CFF5 F147          	movff	tablat,___ftmul@f1+1
 10953  011DF6  000A               	tblrd		*-
 10954  011DF8  CFF5 F148          	movff	tablat,___ftmul@f1+2
 10955  011DFC  0E00               	movlw	0
 10956  011DFE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 10957  011E00  0E03               	movlw	3
 10958  011E02  6F27               	movwf	___wmul@multiplicand& (0+255),b
 10959  011E04  0E00               	movlw	0
 10960  011E06  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 10961  011E08  0E0A               	movlw	10
 10962  011E0A  6F19               	movwf	___awmod@divisor& (0+255),b
 10963  011E0C  515B               	movf	scale@scl& (0+255),w,b
 10964  011E0E  6F17               	movwf	___awmod@dividend& (0+255),b
 10965  011E10  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 10966  011E12  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 10967  011E14  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 10968  011E16  ECFF  F0AA         	call	___awmod	;wreg free
 10969  011E1A  C117  F125         	movff	?___awmod,___wmul@multiplier
 10970  011E1E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 10971  011E22  ECD4  F0AF         	call	___wmul	;wreg free
 10972  011E26  0E38               	movlw	low __npowers_
 10973  011E28  0101               	movlb	1	; () banked
 10974  011E2A  2525               	addwf	?___wmul& (0+255),w,b
 10975  011E2C  6EF6               	movwf	tblptrl,c
 10976  011E2E  0EF4               	movlw	high __npowers_
 10977  011E30  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 10978  011E32  6EF7               	movwf	tblptrh,c
 10979  011E34                     	if	1	;There are 3 active tblptr bytes
 10980  011E34  6AF8               	clrf	tblptru,c
 10981  011E36  0E00               	movlw	low (__mediumconst shr (0+16))
 10982  011E38  22F8               	addwfc	tblptru,f,c
 10983  011E3A                     	endif
 10984  011E3A  0009               	tblrd		*+
 10985  011E3C  CFF5 F149          	movff	tablat,___ftmul@f2
 10986  011E40  0009               	tblrd		*+
 10987  011E42  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 10988  011E46  000A               	tblrd		*-
 10989  011E48  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 10990  011E4C  ECCE  F0A2         	call	___ftmul	;wreg free
 10991  011E50  C146  F155         	movff	?___ftmul,?_scale
 10992  011E54  C147  F156         	movff	?___ftmul+1,?_scale+1
 10993  011E58  C148  F157         	movff	?___ftmul+2,?_scale+2
 10994  011E5C  0012               	return	
 10995  011E5E                     l1064:
 10996                           
 10997                           ;doprnt.c: 434: return _npowers_[scl];
 10998  011E5E  0101               	movlb	1	; () banked
 10999  011E60  515B               	movf	scale@scl& (0+255),w,b
 11000  011E62  0D03               	mullw	3
 11001  011E64  0E38               	movlw	low __npowers_
 11002  011E66  24F3               	addwf	prodl,w,c
 11003  011E68  6EF6               	movwf	tblptrl,c
 11004  011E6A  0EF4               	movlw	high __npowers_
 11005  011E6C  20F4               	addwfc	prodh,w,c
 11006  011E6E  6EF7               	movwf	tblptrh,c
 11007  011E70                     	if	1	;There are 3 active tblptr bytes
 11008  011E70  6AF8               	clrf	tblptru,c
 11009  011E72  0E00               	movlw	low (__mediumconst shr (0+16))
 11010  011E74  22F8               	addwfc	tblptru,f,c
 11011  011E76                     	endif
 11012  011E76  0009               	tblrd		*+
 11013  011E78  CFF5 F155          	movff	tablat,?_scale
 11014  011E7C  0009               	tblrd		*+
 11015  011E7E  CFF5 F156          	movff	tablat,?_scale+1
 11016  011E82  000A               	tblrd		*-
 11017  011E84  CFF5 F157          	movff	tablat,?_scale+2
 11018                           
 11019                           ; BSR set to: 1
 11020  011E88  0012               	return	
 11021  011E8A                     l1060:
 11022                           
 11023                           ; BSR set to: 1
 11024                           ;doprnt.c: 435: }
 11025                           ;doprnt.c: 436: if(scl>=110)
 11026                           
 11027                           ; BSR set to: 1
 11028  011E8A  515B               	movf	scale@scl& (0+255),w,b
 11029  011E8C  0A80               	xorlw	128
 11030  011E8E  0F12               	addlw	-238
 11031  011E90  A0D8               	btfss	status,0,c
 11032  011E92  D0A0               	goto	l1065
 11033                           
 11034                           ; BSR set to: 1
 11035                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11036  011E94  0E00               	movlw	0
 11037  011E96  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11038  011E98  0E03               	movlw	3
 11039  011E9A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11040  011E9C  0E00               	movlw	0
 11041  011E9E  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11042  011EA0  0E0A               	movlw	10
 11043  011EA2  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11044  011EA4  0E00               	movlw	0
 11045  011EA6  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11046  011EA8  0E64               	movlw	100
 11047  011EAA  6F19               	movwf	___awmod@divisor& (0+255),b
 11048  011EAC  515B               	movf	scale@scl& (0+255),w,b
 11049  011EAE  6F17               	movwf	___awmod@dividend& (0+255),b
 11050  011EB0  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11051  011EB2  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11052  011EB4  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11053  011EB6  ECFF  F0AA         	call	___awmod	;wreg free
 11054  011EBA  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11055  011EBE  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11056  011EC2  EC46  F0A9         	call	___awdiv	;wreg free
 11057  011EC6  0E09               	movlw	9
 11058  011EC8  0101               	movlb	1	; () banked
 11059  011ECA  251D               	addwf	?___awdiv& (0+255),w,b
 11060  011ECC  6F25               	movwf	___wmul@multiplier& (0+255),b
 11061  011ECE  0E00               	movlw	0
 11062  011ED0  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11063  011ED2  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11064  011ED4  ECD4  F0AF         	call	___wmul	;wreg free
 11065  011ED8  0E11               	movlw	low __powers_
 11066  011EDA  0101               	movlb	1	; () banked
 11067  011EDC  2525               	addwf	?___wmul& (0+255),w,b
 11068  011EDE  6EF6               	movwf	tblptrl,c
 11069  011EE0  0EF4               	movlw	high __powers_
 11070  011EE2  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11071  011EE4  6EF7               	movwf	tblptrh,c
 11072  011EE6                     	if	1	;There are 3 active tblptr bytes
 11073  011EE6  6AF8               	clrf	tblptru,c
 11074  011EE8  0E00               	movlw	low (__mediumconst shr (0+16))
 11075  011EEA  22F8               	addwfc	tblptru,f,c
 11076  011EEC                     	endif
 11077  011EEC  0009               	tblrd		*+
 11078  011EEE  CFF5 F149          	movff	tablat,___ftmul@f2
 11079  011EF2  0009               	tblrd		*+
 11080  011EF4  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11081  011EF8  000A               	tblrd		*-
 11082  011EFA  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11083  011EFE  0E00               	movlw	0
 11084  011F00  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11085  011F02  0E64               	movlw	100
 11086  011F04  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11087  011F06  515B               	movf	scale@scl& (0+255),w,b
 11088  011F08  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11089  011F0A  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11090  011F0C  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11091  011F0E  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11092  011F10  EC46  F0A9         	call	___awdiv	;wreg free
 11093  011F14  0E12               	movlw	18
 11094  011F16  0101               	movlb	1	; () banked
 11095  011F18  251D               	addwf	?___awdiv& (0+255),w,b
 11096  011F1A  6F25               	movwf	___wmul@multiplier& (0+255),b
 11097  011F1C  0E00               	movlw	0
 11098  011F1E  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11099  011F20  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11100  011F22  0E00               	movlw	0
 11101  011F24  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11102  011F26  0E03               	movlw	3
 11103  011F28  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11104  011F2A  ECD4  F0AF         	call	___wmul	;wreg free
 11105  011F2E  0E11               	movlw	low __powers_
 11106  011F30  0101               	movlb	1	; () banked
 11107  011F32  2525               	addwf	?___wmul& (0+255),w,b
 11108  011F34  6EF6               	movwf	tblptrl,c
 11109  011F36  0EF4               	movlw	high __powers_
 11110  011F38  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11111  011F3A  6EF7               	movwf	tblptrh,c
 11112  011F3C                     	if	1	;There are 3 active tblptr bytes
 11113  011F3C  6AF8               	clrf	tblptru,c
 11114  011F3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11115  011F40  22F8               	addwfc	tblptru,f,c
 11116  011F42                     	endif
 11117  011F42  0009               	tblrd		*+
 11118  011F44  CFF5 F146          	movff	tablat,___ftmul@f1
 11119  011F48  0009               	tblrd		*+
 11120  011F4A  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11121  011F4E  000A               	tblrd		*-
 11122  011F50  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11123  011F54  ECCE  F0A2         	call	___ftmul	;wreg free
 11124  011F58  C146  F158         	movff	?___ftmul,_scale$3133
 11125  011F5C  C147  F159         	movff	?___ftmul+1,_scale$3133+1
 11126  011F60  C148  F15A         	movff	?___ftmul+2,_scale$3133+2
 11127                           
 11128                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 11129  011F64  C158  F146         	movff	_scale$3133,___ftmul@f1
 11130  011F68  C159  F147         	movff	_scale$3133+1,___ftmul@f1+1
 11131  011F6C  C15A  F148         	movff	_scale$3133+2,___ftmul@f1+2
 11132  011F70  0E00               	movlw	0
 11133  011F72  0101               	movlb	1	; () banked
 11134  011F74  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11135  011F76  0E03               	movlw	3
 11136  011F78  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11137  011F7A  0E00               	movlw	0
 11138  011F7C  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11139  011F7E  0E0A               	movlw	10
 11140  011F80  6F19               	movwf	___awmod@divisor& (0+255),b
 11141  011F82  515B               	movf	scale@scl& (0+255),w,b
 11142  011F84  6F17               	movwf	___awmod@dividend& (0+255),b
 11143  011F86  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11144  011F88  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11145  011F8A  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11146  011F8C  ECFF  F0AA         	call	___awmod	;wreg free
 11147  011F90  C117  F125         	movff	?___awmod,___wmul@multiplier
 11148  011F94  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11149  011F98  ECD4  F0AF         	call	___wmul	;wreg free
 11150  011F9C  0E11               	movlw	low __powers_
 11151  011F9E  0101               	movlb	1	; () banked
 11152  011FA0  2525               	addwf	?___wmul& (0+255),w,b
 11153  011FA2  6EF6               	movwf	tblptrl,c
 11154  011FA4  0EF4               	movlw	high __powers_
 11155  011FA6  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11156  011FA8  6EF7               	movwf	tblptrh,c
 11157  011FAA                     	if	1	;There are 3 active tblptr bytes
 11158  011FAA  6AF8               	clrf	tblptru,c
 11159  011FAC  0E00               	movlw	low (__mediumconst shr (0+16))
 11160  011FAE  22F8               	addwfc	tblptru,f,c
 11161  011FB0                     	endif
 11162  011FB0  0009               	tblrd		*+
 11163  011FB2  CFF5 F149          	movff	tablat,___ftmul@f2
 11164  011FB6  0009               	tblrd		*+
 11165  011FB8  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11166  011FBC  000A               	tblrd		*-
 11167  011FBE  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11168  011FC2  ECCE  F0A2         	call	___ftmul	;wreg free
 11169  011FC6  C146  F155         	movff	?___ftmul,?_scale
 11170  011FCA  C147  F156         	movff	?___ftmul+1,?_scale+1
 11171  011FCE  C148  F157         	movff	?___ftmul+2,?_scale+2
 11172  011FD2  0012               	return	
 11173  011FD4                     l1065:
 11174                           
 11175                           ;doprnt.c: 438: else if(scl > 10)
 11176  011FD4  0101               	movlb	1	; () banked
 11177  011FD6  515B               	movf	scale@scl& (0+255),w,b
 11178  011FD8  0A80               	xorlw	128
 11179  011FDA  0F75               	addlw	-139
 11180  011FDC  A0D8               	btfss	status,0,c
 11181  011FDE  D05C               	goto	l1067
 11182                           
 11183                           ; BSR set to: 1
 11184                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 11185  011FE0  0E00               	movlw	0
 11186  011FE2  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11187  011FE4  0E0A               	movlw	10
 11188  011FE6  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11189  011FE8  515B               	movf	scale@scl& (0+255),w,b
 11190  011FEA  6F1D               	movwf	___awdiv@dividend& (0+255),b
 11191  011FEC  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11192  011FEE  BF1D               	btfsc	___awdiv@dividend& (0+255),7,b
 11193  011FF0  071E               	decf	(___awdiv@dividend+1)& (0+255),f,b
 11194  011FF2  EC46  F0A9         	call	___awdiv	;wreg free
 11195  011FF6  0E09               	movlw	9
 11196  011FF8  0101               	movlb	1	; () banked
 11197  011FFA  251D               	addwf	?___awdiv& (0+255),w,b
 11198  011FFC  6F25               	movwf	___wmul@multiplier& (0+255),b
 11199  011FFE  0E00               	movlw	0
 11200  012000  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11201  012002  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11202  012004  0E00               	movlw	0
 11203  012006  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11204  012008  0E03               	movlw	3
 11205  01200A  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11206  01200C  ECD4  F0AF         	call	___wmul	;wreg free
 11207  012010  0E11               	movlw	low __powers_
 11208  012012  0101               	movlb	1	; () banked
 11209  012014  2525               	addwf	?___wmul& (0+255),w,b
 11210  012016  6EF6               	movwf	tblptrl,c
 11211  012018  0EF4               	movlw	high __powers_
 11212  01201A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11213  01201C  6EF7               	movwf	tblptrh,c
 11214  01201E                     	if	1	;There are 3 active tblptr bytes
 11215  01201E  6AF8               	clrf	tblptru,c
 11216  012020  0E00               	movlw	low (__mediumconst shr (0+16))
 11217  012022  22F8               	addwfc	tblptru,f,c
 11218  012024                     	endif
 11219  012024  0009               	tblrd		*+
 11220  012026  CFF5 F146          	movff	tablat,___ftmul@f1
 11221  01202A  0009               	tblrd		*+
 11222  01202C  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11223  012030  000A               	tblrd		*-
 11224  012032  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11225  012036  0E00               	movlw	0
 11226  012038  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11227  01203A  0E03               	movlw	3
 11228  01203C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11229  01203E  0E00               	movlw	0
 11230  012040  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11231  012042  0E0A               	movlw	10
 11232  012044  6F19               	movwf	___awmod@divisor& (0+255),b
 11233  012046  515B               	movf	scale@scl& (0+255),w,b
 11234  012048  6F17               	movwf	___awmod@dividend& (0+255),b
 11235  01204A  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11236  01204C  BF17               	btfsc	___awmod@dividend& (0+255),7,b
 11237  01204E  0718               	decf	(___awmod@dividend+1)& (0+255),f,b
 11238  012050  ECFF  F0AA         	call	___awmod	;wreg free
 11239  012054  C117  F125         	movff	?___awmod,___wmul@multiplier
 11240  012058  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11241  01205C  ECD4  F0AF         	call	___wmul	;wreg free
 11242  012060  0E11               	movlw	low __powers_
 11243  012062  0101               	movlb	1	; () banked
 11244  012064  2525               	addwf	?___wmul& (0+255),w,b
 11245  012066  6EF6               	movwf	tblptrl,c
 11246  012068  0EF4               	movlw	high __powers_
 11247  01206A  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11248  01206C  6EF7               	movwf	tblptrh,c
 11249  01206E                     	if	1	;There are 3 active tblptr bytes
 11250  01206E  6AF8               	clrf	tblptru,c
 11251  012070  0E00               	movlw	low (__mediumconst shr (0+16))
 11252  012072  22F8               	addwfc	tblptru,f,c
 11253  012074                     	endif
 11254  012074  0009               	tblrd		*+
 11255  012076  CFF5 F149          	movff	tablat,___ftmul@f2
 11256  01207A  0009               	tblrd		*+
 11257  01207C  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11258  012080  000A               	tblrd		*-
 11259  012082  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11260  012086  ECCE  F0A2         	call	___ftmul	;wreg free
 11261  01208A  C146  F155         	movff	?___ftmul,?_scale
 11262  01208E  C147  F156         	movff	?___ftmul+1,?_scale+1
 11263  012092  C148  F157         	movff	?___ftmul+2,?_scale+2
 11264  012096  0012               	return	
 11265  012098                     l1067:
 11266                           
 11267                           ;doprnt.c: 440: return _powers_[scl];
 11268  012098  0101               	movlb	1	; () banked
 11269  01209A  515B               	movf	scale@scl& (0+255),w,b
 11270  01209C  0D03               	mullw	3
 11271  01209E  0E11               	movlw	low __powers_
 11272  0120A0  24F3               	addwf	prodl,w,c
 11273  0120A2  6EF6               	movwf	tblptrl,c
 11274  0120A4  0EF4               	movlw	high __powers_
 11275  0120A6  20F4               	addwfc	prodh,w,c
 11276  0120A8  6EF7               	movwf	tblptrh,c
 11277  0120AA                     	if	1	;There are 3 active tblptr bytes
 11278  0120AA  6AF8               	clrf	tblptru,c
 11279  0120AC  0E00               	movlw	low (__mediumconst shr (0+16))
 11280  0120AE  22F8               	addwfc	tblptru,f,c
 11281  0120B0                     	endif
 11282  0120B0  0009               	tblrd		*+
 11283  0120B2  CFF5 F155          	movff	tablat,?_scale
 11284  0120B6  0009               	tblrd		*+
 11285  0120B8  CFF5 F156          	movff	tablat,?_scale+1
 11286  0120BC  000A               	tblrd		*-
 11287  0120BE  CFF5 F157          	movff	tablat,?_scale+2
 11288  0120C2  0012               	return	
 11289  0120C4                     __end_of_scale:
 11290                           	opt stack 0
 11291                           tblptru	equ	0xFF8
 11292                           tblptrh	equ	0xFF7
 11293                           tblptrl	equ	0xFF6
 11294                           tablat	equ	0xFF5
 11295                           prodh	equ	0xFF4
 11296                           prodl	equ	0xFF3
 11297                           intcon	equ	0xFF2
 11298                           postinc0	equ	0xFEE
 11299                           wreg	equ	0xFE8
 11300                           indf1	equ	0xFE7
 11301                           postdec1	equ	0xFE5
 11302                           fsr1h	equ	0xFE2
 11303                           fsr1l	equ	0xFE1
 11304                           indf2	equ	0xFDF
 11305                           postinc2	equ	0xFDE
 11306                           postdec2	equ	0xFDD
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8
 11310                           
 11311 ;; *************** function _putch *****************
 11312 ;; Defined at:
 11313 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  txData          1    wreg     unsigned char 
 11316 ;; Auto vars:     Size  Location     Type
 11317 ;;  txData          1   24[BANK1 ] unsigned char 
 11318 ;; Return value:  Size  Location     Type
 11319 ;;                  1    wreg      void 
 11320 ;; Registers used:
 11321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11322 ;; Tracked objects:
 11323 ;;		On entry : 0/0
 11324 ;;		On exit  : 0/0
 11325 ;;		Unchanged: 0/0
 11326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11328 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11330 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11331 ;;Total ram usage:        1 bytes
 11332 ;; Hardware stack levels used:    1
 11333 ;; Hardware stack levels required when called:   15
 11334 ;; This function calls:
 11335 ;;		_EUSART2_Write
 11336 ;; This function is called by:
 11337 ;;		_printf
 11338 ;; This function uses a non-reentrant model
 11339 ;;
 11340                           
 11341                           	psect	text21
 11342  0161D6                     __ptext21:
 11343                           	opt stack 0
 11344  0161D6                     _putch:
 11345                           	opt stack 12
 11346                           
 11347                           ;incstack = 0
 11348                           ;putch@txData stored from wreg
 11349  0161D6  0101               	movlb	1	; () banked
 11350  0161D8  6F18               	movwf	putch@txData& (0+255),b
 11351                           
 11352                           ;eusart2.c: 182: EUSART2_Write(txData);
 11353  0161DA  0101               	movlb	1	; () banked
 11354  0161DC  5118               	movf	putch@txData& (0+255),w,b
 11355  0161DE  EC44  F0AE         	call	_EUSART2_Write
 11356  0161E2  0012               	return		;funcret
 11357  0161E4                     __end_of_putch:
 11358                           	opt stack 0
 11359                           tblptru	equ	0xFF8
 11360                           tblptrh	equ	0xFF7
 11361                           tblptrl	equ	0xFF6
 11362                           tablat	equ	0xFF5
 11363                           prodh	equ	0xFF4
 11364                           prodl	equ	0xFF3
 11365                           intcon	equ	0xFF2
 11366                           postinc0	equ	0xFEE
 11367                           wreg	equ	0xFE8
 11368                           indf1	equ	0xFE7
 11369                           postdec1	equ	0xFE5
 11370                           fsr1h	equ	0xFE2
 11371                           fsr1l	equ	0xFE1
 11372                           indf2	equ	0xFDF
 11373                           postinc2	equ	0xFDE
 11374                           postdec2	equ	0xFDD
 11375                           fsr2h	equ	0xFDA
 11376                           fsr2l	equ	0xFD9
 11377                           status	equ	0xFD8
 11378                           
 11379 ;; *************** function _EUSART2_Write *****************
 11380 ;; Defined at:
 11381 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 11382 ;; Parameters:    Size  Location     Type
 11383 ;;  txData          1    wreg     unsigned char 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;  txData          1   23[BANK1 ] unsigned char 
 11386 ;; Return value:  Size  Location     Type
 11387 ;;                  1    wreg      void 
 11388 ;; Registers used:
 11389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11390 ;; Tracked objects:
 11391 ;;		On entry : 0/0
 11392 ;;		On exit  : 0/0
 11393 ;;		Unchanged: 0/0
 11394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11396 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11398 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11399 ;;Total ram usage:        1 bytes
 11400 ;; Hardware stack levels used:    1
 11401 ;; Hardware stack levels required when called:   14
 11402 ;; This function calls:
 11403 ;;		Nothing
 11404 ;; This function is called by:
 11405 ;;		_putch
 11406 ;; This function uses a non-reentrant model
 11407 ;;
 11408                           
 11409                           	psect	text22
 11410  015C88                     __ptext22:
 11411                           	opt stack 0
 11412  015C88                     _EUSART2_Write:
 11413                           	opt stack 12
 11414                           
 11415                           ;incstack = 0
 11416                           ;EUSART2_Write@txData stored from wreg
 11417  015C88  0101               	movlb	1	; () banked
 11418  015C8A  6F17               	movwf	EUSART2_Write@txData& (0+255),b
 11419                           
 11420                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 11421  015C8C  D001               	goto	l374
 11422  015C8E                     l375:
 11423                           
 11424                           ; BSR set to: 1
 11425  015C8E  0004               	clrwdt		;# 
 11426  015C90                     l374:
 11427  015C90  0101               	movlb	1	; () banked
 11428  015C92  51DD               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 11429  015C94  B4D8               	btfsc	status,2,c
 11430  015C96  D7FB               	goto	l375
 11431                           
 11432                           ; BSR set to: 1
 11433                           ;eusart2.c: 156: }
 11434                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 11435  015C98  010E               	movlb	14	; () banked
 11436  015C9A  BD2C               	btfsc	44,6,b	;volatile
 11437  015C9C  D003               	goto	l377
 11438                           
 11439                           ; BSR set to: 14
 11440                           ;eusart2.c: 159: {
 11441                           ;eusart2.c: 160: TX2REG = txData;
 11442  015C9E  C117  FEF2         	movff	EUSART2_Write@txData,3826	;volatile
 11443                           
 11444                           ;eusart2.c: 161: }
 11445  015CA2  D013               	goto	l378
 11446  015CA4                     l377:
 11447                           
 11448                           ; BSR set to: 14
 11449                           ;eusart2.c: 162: else
 11450                           ;eusart2.c: 163: {
 11451                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 11452  015CA4  9D2C               	bcf	44,6,b	;volatile
 11453                           
 11454                           ; BSR set to: 14
 11455                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 11456  015CA6  0101               	movlb	1	; () banked
 11457  015CA8  51DF               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 11458  015CAA  0D01               	mullw	1
 11459  015CAC  0E00               	movlw	low _eusart2TxBuffer
 11460  015CAE  24F3               	addwf	prodl,w,c
 11461  015CB0  6ED9               	movwf	fsr2l,c
 11462  015CB2  0E02               	movlw	high _eusart2TxBuffer
 11463  015CB4  20F4               	addwfc	prodh,w,c
 11464  015CB6  6EDA               	movwf	fsr2h,c
 11465  015CB8  C117  FFDF         	movff	EUSART2_Write@txData,indf2
 11466                           
 11467                           ; BSR set to: 1
 11468  015CBC  2BDF               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 11469                           
 11470                           ; BSR set to: 1
 11471                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 11472  015CBE  0E7F               	movlw	127
 11473  015CC0  65DF               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 11474  015CC2  D002               	goto	l379
 11475                           
 11476                           ; BSR set to: 1
 11477                           ;eusart2.c: 167: {
 11478                           ;eusart2.c: 168: eusart2TxHead = 0;
 11479  015CC4  0E00               	movlw	0
 11480  015CC6  6FDF               	movwf	_eusart2TxHead& (0+255),b	;volatile
 11481  015CC8                     l379:
 11482                           
 11483                           ; BSR set to: 1
 11484                           ;eusart2.c: 169: }
 11485                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 11486                           
 11487                           ; BSR set to: 1
 11488  015CC8  07DD               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 11489  015CCA                     l378:
 11490                           
 11491                           ;eusart2.c: 171: }
 11492                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 11493                           
 11494                           ; BSR set to: 1
 11495  015CCA  010E               	movlb	14	; () banked
 11496  015CCC  8D2C               	bsf	44,6,b	;volatile
 11497                           
 11498                           ; BSR set to: 14
 11499  015CCE  0012               	return		;funcret
 11500  015CD0                     __end_of_EUSART2_Write:
 11501                           	opt stack 0
 11502                           tblptru	equ	0xFF8
 11503                           tblptrh	equ	0xFF7
 11504                           tblptrl	equ	0xFF6
 11505                           tablat	equ	0xFF5
 11506                           prodh	equ	0xFF4
 11507                           prodl	equ	0xFF3
 11508                           intcon	equ	0xFF2
 11509                           postinc0	equ	0xFEE
 11510                           wreg	equ	0xFE8
 11511                           indf1	equ	0xFE7
 11512                           postdec1	equ	0xFE5
 11513                           fsr1h	equ	0xFE2
 11514                           fsr1l	equ	0xFE1
 11515                           indf2	equ	0xFDF
 11516                           postinc2	equ	0xFDE
 11517                           postdec2	equ	0xFDD
 11518                           fsr2h	equ	0xFDA
 11519                           fsr2l	equ	0xFD9
 11520                           status	equ	0xFD8
 11521                           
 11522 ;; *************** function _isdigit *****************
 11523 ;; Defined at:
 11524 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;  c               1    wreg     unsigned char 
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;  c               1   25[BANK1 ] unsigned char 
 11529 ;; Return value:  Size  Location     Type
 11530 ;;		None               void
 11531 ;; Registers used:
 11532 ;;		wreg, status,2, status,0
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11539 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11540 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11541 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11542 ;;Total ram usage:        3 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:   14
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_printf
 11549 ;;		_atoi
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           	psect	text23
 11554  0160DA                     __ptext23:
 11555                           	opt stack 0
 11556  0160DA                     _isdigit:
 11557                           	opt stack 13
 11558                           
 11559                           ; BSR set to: 14
 11560                           ;incstack = 0
 11561                           ;isdigit@c stored from wreg
 11562  0160DA  0101               	movlb	1	; () banked
 11563  0160DC  6F19               	movwf	isdigit@c& (0+255),b
 11564  0160DE  0E00               	movlw	0
 11565  0160E0  0101               	movlb	1	; () banked
 11566  0160E2  6F18               	movwf	_isdigit$2489& (0+255),b
 11567                           
 11568                           ; BSR set to: 1
 11569  0160E4  0E3A               	movlw	58
 11570  0160E6  6119               	cpfslt	isdigit@c& (0+255),b
 11571  0160E8  D005               	goto	l1588
 11572                           
 11573                           ; BSR set to: 1
 11574  0160EA  0E2F               	movlw	47
 11575  0160EC  6519               	cpfsgt	isdigit@c& (0+255),b
 11576  0160EE  D002               	goto	l1588
 11577                           
 11578                           ; BSR set to: 1
 11579  0160F0  0E01               	movlw	1
 11580  0160F2  6F18               	movwf	_isdigit$2489& (0+255),b
 11581  0160F4                     l1588:
 11582                           
 11583                           ; BSR set to: 1
 11584                           
 11585                           ; BSR set to: 1
 11586  0160F4  C118  F117         	movff	_isdigit$2489,??_isdigit
 11587  0160F8  3117               	rrcf	??_isdigit& (0+255),w,b
 11588  0160FA  0012               	return	
 11589  0160FC                     __end_of_isdigit:
 11590                           	opt stack 0
 11591                           tblptru	equ	0xFF8
 11592                           tblptrh	equ	0xFF7
 11593                           tblptrl	equ	0xFF6
 11594                           tablat	equ	0xFF5
 11595                           prodh	equ	0xFF4
 11596                           prodl	equ	0xFF3
 11597                           intcon	equ	0xFF2
 11598                           postinc0	equ	0xFEE
 11599                           wreg	equ	0xFE8
 11600                           indf1	equ	0xFE7
 11601                           postdec1	equ	0xFE5
 11602                           fsr1h	equ	0xFE2
 11603                           fsr1l	equ	0xFE1
 11604                           indf2	equ	0xFDF
 11605                           postinc2	equ	0xFDE
 11606                           postdec2	equ	0xFDD
 11607                           fsr2h	equ	0xFDA
 11608                           fsr2l	equ	0xFD9
 11609                           status	equ	0xFD8
 11610                           
 11611 ;; *************** function _fround *****************
 11612 ;; Defined at:
 11613 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  prec            1    wreg     unsigned char 
 11616 ;; Auto vars:     Size  Location     Type
 11617 ;;  prec            1   94[BANK1 ] unsigned char 
 11618 ;; Return value:  Size  Location     Type
 11619 ;;                  3   85[BANK1 ] unsigned char 
 11620 ;; Registers used:
 11621 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11622 ;; Tracked objects:
 11623 ;;		On entry : 0/0
 11624 ;;		On exit  : 0/0
 11625 ;;		Unchanged: 0/0
 11626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11627 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11628 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11630 ;;      Totals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11631 ;;Total ram usage:       10 bytes
 11632 ;; Hardware stack levels used:    1
 11633 ;; Hardware stack levels required when called:   16
 11634 ;; This function calls:
 11635 ;;		___awdiv
 11636 ;;		___awmod
 11637 ;;		___ftmul
 11638 ;;		___wmul
 11639 ;; This function is called by:
 11640 ;;		_printf
 11641 ;; This function uses a non-reentrant model
 11642 ;;
 11643                           
 11644                           	psect	text24
 11645  012C8A                     __ptext24:
 11646                           	opt stack 0
 11647  012C8A                     _fround:
 11648                           	opt stack 11
 11649                           
 11650                           ; BSR set to: 1
 11651                           ;incstack = 0
 11652                           ;fround@prec stored from wreg
 11653  012C8A  0101               	movlb	1	; () banked
 11654  012C8C  6F5E               	movwf	fround@prec& (0+255),b
 11655                           
 11656                           ;doprnt.c: 413: if(prec>=110)
 11657  012C8E  0E6D               	movlw	109
 11658  012C90  0101               	movlb	1	; () banked
 11659  012C92  655E               	cpfsgt	fround@prec& (0+255),b
 11660  012C94  D0AF               	goto	l1054
 11661                           
 11662                           ; BSR set to: 1
 11663                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11664  012C96  0E00               	movlw	0
 11665  012C98  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11666  012C9A  0E03               	movlw	3
 11667  012C9C  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11668  012C9E  0E00               	movlw	0
 11669  012CA0  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11670  012CA2  0E0A               	movlw	10
 11671  012CA4  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11672  012CA6  0E00               	movlw	0
 11673  012CA8  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11674  012CAA  0E64               	movlw	100
 11675  012CAC  6F19               	movwf	___awmod@divisor& (0+255),b
 11676  012CAE  C15E  F117         	movff	fround@prec,___awmod@dividend
 11677  012CB2  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11678  012CB4  ECFF  F0AA         	call	___awmod	;wreg free
 11679  012CB8  C117  F11D         	movff	?___awmod,___awdiv@dividend
 11680  012CBC  C118  F11E         	movff	?___awmod+1,___awdiv@dividend+1
 11681  012CC0  EC46  F0A9         	call	___awdiv	;wreg free
 11682  012CC4  0E09               	movlw	9
 11683  012CC6  0101               	movlb	1	; () banked
 11684  012CC8  251D               	addwf	?___awdiv& (0+255),w,b
 11685  012CCA  6F25               	movwf	___wmul@multiplier& (0+255),b
 11686  012CCC  0E00               	movlw	0
 11687  012CCE  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11688  012CD0  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11689  012CD2  ECD4  F0AF         	call	___wmul	;wreg free
 11690  012CD6  0E38               	movlw	low __npowers_
 11691  012CD8  0101               	movlb	1	; () banked
 11692  012CDA  2525               	addwf	?___wmul& (0+255),w,b
 11693  012CDC  6EF6               	movwf	tblptrl,c
 11694  012CDE  0EF4               	movlw	high __npowers_
 11695  012CE0  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11696  012CE2  6EF7               	movwf	tblptrh,c
 11697  012CE4                     	if	1	;There are 3 active tblptr bytes
 11698  012CE4  6AF8               	clrf	tblptru,c
 11699  012CE6  0E00               	movlw	low (__mediumconst shr (0+16))
 11700  012CE8  22F8               	addwfc	tblptru,f,c
 11701  012CEA                     	endif
 11702  012CEA  0009               	tblrd		*+
 11703  012CEC  CFF5 F149          	movff	tablat,___ftmul@f2
 11704  012CF0  0009               	tblrd		*+
 11705  012CF2  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11706  012CF6  000A               	tblrd		*-
 11707  012CF8  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11708  012CFC  0E00               	movlw	0
 11709  012CFE  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11710  012D00  0E64               	movlw	100
 11711  012D02  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11712  012D04  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 11713  012D08  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11714  012D0A  EC46  F0A9         	call	___awdiv	;wreg free
 11715  012D0E  0E12               	movlw	18
 11716  012D10  0101               	movlb	1	; () banked
 11717  012D12  251D               	addwf	?___awdiv& (0+255),w,b
 11718  012D14  6F25               	movwf	___wmul@multiplier& (0+255),b
 11719  012D16  0E00               	movlw	0
 11720  012D18  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11721  012D1A  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11722  012D1C  0E00               	movlw	0
 11723  012D1E  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11724  012D20  0E03               	movlw	3
 11725  012D22  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11726  012D24  ECD4  F0AF         	call	___wmul	;wreg free
 11727  012D28  0E38               	movlw	low __npowers_
 11728  012D2A  0101               	movlb	1	; () banked
 11729  012D2C  2525               	addwf	?___wmul& (0+255),w,b
 11730  012D2E  6EF6               	movwf	tblptrl,c
 11731  012D30  0EF4               	movlw	high __npowers_
 11732  012D32  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11733  012D34  6EF7               	movwf	tblptrh,c
 11734  012D36                     	if	1	;There are 3 active tblptr bytes
 11735  012D36  6AF8               	clrf	tblptru,c
 11736  012D38  0E00               	movlw	low (__mediumconst shr (0+16))
 11737  012D3A  22F8               	addwfc	tblptru,f,c
 11738  012D3C                     	endif
 11739  012D3C  0009               	tblrd		*+
 11740  012D3E  CFF5 F146          	movff	tablat,___ftmul@f1
 11741  012D42  0009               	tblrd		*+
 11742  012D44  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11743  012D48  000A               	tblrd		*-
 11744  012D4A  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11745  012D4E  ECCE  F0A2         	call	___ftmul	;wreg free
 11746  012D52  C146  F15B         	movff	?___ftmul,_fround$3131
 11747  012D56  C147  F15C         	movff	?___ftmul+1,_fround$3131+1
 11748  012D5A  C148  F15D         	movff	?___ftmul+2,_fround$3131+2
 11749                           
 11750                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11751  012D5E  0E00               	movlw	0
 11752  012D60  0101               	movlb	1	; () banked
 11753  012D62  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11754  012D64  0E03               	movlw	3
 11755  012D66  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11756  012D68  0E00               	movlw	0
 11757  012D6A  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11758  012D6C  0E0A               	movlw	10
 11759  012D6E  6F19               	movwf	___awmod@divisor& (0+255),b
 11760  012D70  C15E  F117         	movff	fround@prec,___awmod@dividend
 11761  012D74  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11762  012D76  ECFF  F0AA         	call	___awmod	;wreg free
 11763  012D7A  C117  F125         	movff	?___awmod,___wmul@multiplier
 11764  012D7E  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11765  012D82  ECD4  F0AF         	call	___wmul	;wreg free
 11766  012D86  0E38               	movlw	low __npowers_
 11767  012D88  0101               	movlb	1	; () banked
 11768  012D8A  2525               	addwf	?___wmul& (0+255),w,b
 11769  012D8C  6EF6               	movwf	tblptrl,c
 11770  012D8E  0EF4               	movlw	high __npowers_
 11771  012D90  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11772  012D92  6EF7               	movwf	tblptrh,c
 11773  012D94                     	if	1	;There are 3 active tblptr bytes
 11774  012D94  6AF8               	clrf	tblptru,c
 11775  012D96  0E00               	movlw	low (__mediumconst shr (0+16))
 11776  012D98  22F8               	addwfc	tblptru,f,c
 11777  012D9A                     	endif
 11778  012D9A  0009               	tblrd		*+
 11779  012D9C  CFF5 F149          	movff	tablat,___ftmul@f2
 11780  012DA0  0009               	tblrd		*+
 11781  012DA2  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11782  012DA6  000A               	tblrd		*-
 11783  012DA8  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11784  012DAC  C15B  F146         	movff	_fround$3131,___ftmul@f1
 11785  012DB0  C15C  F147         	movff	_fround$3131+1,___ftmul@f1+1
 11786  012DB4  C15D  F148         	movff	_fround$3131+2,___ftmul@f1+2
 11787  012DB8  ECCE  F0A2         	call	___ftmul	;wreg free
 11788  012DBC  C146  F158         	movff	?___ftmul,_fround$3132
 11789  012DC0  C147  F159         	movff	?___ftmul+1,_fround$3132+1
 11790  012DC4  C148  F15A         	movff	?___ftmul+2,_fround$3132+2
 11791                           
 11792                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 11793  012DC8  C158  F146         	movff	_fround$3132,___ftmul@f1
 11794  012DCC  C159  F147         	movff	_fround$3132+1,___ftmul@f1+1
 11795  012DD0  C15A  F148         	movff	_fround$3132+2,___ftmul@f1+2
 11796  012DD4  0E00               	movlw	0
 11797  012DD6  0101               	movlb	1	; () banked
 11798  012DD8  6F49               	movwf	___ftmul@f2& (0+255),b
 11799  012DDA  0E00               	movlw	0
 11800  012DDC  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11801  012DDE  0E3F               	movlw	63
 11802  012DE0  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11803  012DE2  ECCE  F0A2         	call	___ftmul	;wreg free
 11804  012DE6  C146  F155         	movff	?___ftmul,?_fround
 11805  012DEA  C147  F156         	movff	?___ftmul+1,?_fround+1
 11806  012DEE  C148  F157         	movff	?___ftmul+2,?_fround+2
 11807  012DF2  0012               	return	
 11808  012DF4                     l1054:
 11809                           
 11810                           ;doprnt.c: 415: else if(prec > 10)
 11811  012DF4  0E0A               	movlw	10
 11812  012DF6  0101               	movlb	1	; () banked
 11813  012DF8  655E               	cpfsgt	fround@prec& (0+255),b
 11814  012DFA  D06D               	goto	l1057
 11815                           
 11816                           ; BSR set to: 1
 11817                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11818  012DFC  0E00               	movlw	0
 11819  012DFE  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11820  012E00  0E03               	movlw	3
 11821  012E02  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11822  012E04  0E00               	movlw	0
 11823  012E06  6F1A               	movwf	(___awmod@divisor+1)& (0+255),b
 11824  012E08  0E0A               	movlw	10
 11825  012E0A  6F19               	movwf	___awmod@divisor& (0+255),b
 11826  012E0C  C15E  F117         	movff	fround@prec,___awmod@dividend
 11827  012E10  6B18               	clrf	(___awmod@dividend+1)& (0+255),b
 11828  012E12  ECFF  F0AA         	call	___awmod	;wreg free
 11829  012E16  C117  F125         	movff	?___awmod,___wmul@multiplier
 11830  012E1A  C118  F126         	movff	?___awmod+1,___wmul@multiplier+1
 11831  012E1E  ECD4  F0AF         	call	___wmul	;wreg free
 11832  012E22  0E38               	movlw	low __npowers_
 11833  012E24  0101               	movlb	1	; () banked
 11834  012E26  2525               	addwf	?___wmul& (0+255),w,b
 11835  012E28  6EF6               	movwf	tblptrl,c
 11836  012E2A  0EF4               	movlw	high __npowers_
 11837  012E2C  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11838  012E2E  6EF7               	movwf	tblptrh,c
 11839  012E30                     	if	1	;There are 3 active tblptr bytes
 11840  012E30  6AF8               	clrf	tblptru,c
 11841  012E32  0E00               	movlw	low (__mediumconst shr (0+16))
 11842  012E34  22F8               	addwfc	tblptru,f,c
 11843  012E36                     	endif
 11844  012E36  0009               	tblrd		*+
 11845  012E38  CFF5 F149          	movff	tablat,___ftmul@f2
 11846  012E3C  0009               	tblrd		*+
 11847  012E3E  CFF5 F14A          	movff	tablat,___ftmul@f2+1
 11848  012E42  000A               	tblrd		*-
 11849  012E44  CFF5 F14B          	movff	tablat,___ftmul@f2+2
 11850  012E48  0E00               	movlw	0
 11851  012E4A  6F20               	movwf	(___awdiv@divisor+1)& (0+255),b
 11852  012E4C  0E0A               	movlw	10
 11853  012E4E  6F1F               	movwf	___awdiv@divisor& (0+255),b
 11854  012E50  C15E  F11D         	movff	fround@prec,___awdiv@dividend
 11855  012E54  6B1E               	clrf	(___awdiv@dividend+1)& (0+255),b
 11856  012E56  EC46  F0A9         	call	___awdiv	;wreg free
 11857  012E5A  0E09               	movlw	9
 11858  012E5C  0101               	movlb	1	; () banked
 11859  012E5E  251D               	addwf	?___awdiv& (0+255),w,b
 11860  012E60  6F25               	movwf	___wmul@multiplier& (0+255),b
 11861  012E62  0E00               	movlw	0
 11862  012E64  211E               	addwfc	(?___awdiv+1)& (0+255),w,b
 11863  012E66  6F26               	movwf	(___wmul@multiplier+1)& (0+255),b
 11864  012E68  0E00               	movlw	0
 11865  012E6A  6F28               	movwf	(___wmul@multiplicand+1)& (0+255),b
 11866  012E6C  0E03               	movlw	3
 11867  012E6E  6F27               	movwf	___wmul@multiplicand& (0+255),b
 11868  012E70  ECD4  F0AF         	call	___wmul	;wreg free
 11869  012E74  0E38               	movlw	low __npowers_
 11870  012E76  0101               	movlb	1	; () banked
 11871  012E78  2525               	addwf	?___wmul& (0+255),w,b
 11872  012E7A  6EF6               	movwf	tblptrl,c
 11873  012E7C  0EF4               	movlw	high __npowers_
 11874  012E7E  2126               	addwfc	(?___wmul+1)& (0+255),w,b
 11875  012E80  6EF7               	movwf	tblptrh,c
 11876  012E82                     	if	1	;There are 3 active tblptr bytes
 11877  012E82  6AF8               	clrf	tblptru,c
 11878  012E84  0E00               	movlw	low (__mediumconst shr (0+16))
 11879  012E86  22F8               	addwfc	tblptru,f,c
 11880  012E88                     	endif
 11881  012E88  0009               	tblrd		*+
 11882  012E8A  CFF5 F146          	movff	tablat,___ftmul@f1
 11883  012E8E  0009               	tblrd		*+
 11884  012E90  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11885  012E94  000A               	tblrd		*-
 11886  012E96  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11887  012E9A  ECCE  F0A2         	call	___ftmul	;wreg free
 11888  012E9E  C146  F15B         	movff	?___ftmul,_fround$3131
 11889  012EA2  C147  F15C         	movff	?___ftmul+1,_fround$3131+1
 11890  012EA6  C148  F15D         	movff	?___ftmul+2,_fround$3131+2
 11891                           
 11892                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 11893  012EAA  C15B  F146         	movff	_fround$3131,___ftmul@f1
 11894  012EAE  C15C  F147         	movff	_fround$3131+1,___ftmul@f1+1
 11895  012EB2  C15D  F148         	movff	_fround$3131+2,___ftmul@f1+2
 11896  012EB6  0E00               	movlw	0
 11897  012EB8  0101               	movlb	1	; () banked
 11898  012EBA  6F49               	movwf	___ftmul@f2& (0+255),b
 11899  012EBC  0E00               	movlw	0
 11900  012EBE  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11901  012EC0  0E3F               	movlw	63
 11902  012EC2  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11903  012EC4  ECCE  F0A2         	call	___ftmul	;wreg free
 11904  012EC8  C146  F155         	movff	?___ftmul,?_fround
 11905  012ECC  C147  F156         	movff	?___ftmul+1,?_fround+1
 11906  012ED0  C148  F157         	movff	?___ftmul+2,?_fround+2
 11907  012ED4  0012               	return	
 11908  012ED6                     l1057:
 11909                           
 11910                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 11911  012ED6  0101               	movlb	1	; () banked
 11912  012ED8  515E               	movf	fround@prec& (0+255),w,b
 11913  012EDA  0D03               	mullw	3
 11914  012EDC  0E38               	movlw	low __npowers_
 11915  012EDE  24F3               	addwf	prodl,w,c
 11916  012EE0  6EF6               	movwf	tblptrl,c
 11917  012EE2  0EF4               	movlw	high __npowers_
 11918  012EE4  20F4               	addwfc	prodh,w,c
 11919  012EE6  6EF7               	movwf	tblptrh,c
 11920  012EE8                     	if	1	;There are 3 active tblptr bytes
 11921  012EE8  6AF8               	clrf	tblptru,c
 11922  012EEA  0E00               	movlw	low (__mediumconst shr (0+16))
 11923  012EEC  22F8               	addwfc	tblptru,f,c
 11924  012EEE                     	endif
 11925  012EEE  0009               	tblrd		*+
 11926  012EF0  CFF5 F146          	movff	tablat,___ftmul@f1
 11927  012EF4  0009               	tblrd		*+
 11928  012EF6  CFF5 F147          	movff	tablat,___ftmul@f1+1
 11929  012EFA  000A               	tblrd		*-
 11930  012EFC  CFF5 F148          	movff	tablat,___ftmul@f1+2
 11931  012F00  0E00               	movlw	0
 11932  012F02  6F49               	movwf	___ftmul@f2& (0+255),b
 11933  012F04  0E00               	movlw	0
 11934  012F06  6F4A               	movwf	(___ftmul@f2+1)& (0+255),b
 11935  012F08  0E3F               	movlw	63
 11936  012F0A  6F4B               	movwf	(___ftmul@f2+2)& (0+255),b
 11937  012F0C  ECCE  F0A2         	call	___ftmul	;wreg free
 11938  012F10  C146  F155         	movff	?___ftmul,?_fround
 11939  012F14  C147  F156         	movff	?___ftmul+1,?_fround+1
 11940  012F18  C148  F157         	movff	?___ftmul+2,?_fround+2
 11941  012F1C  0012               	return	
 11942  012F1E                     __end_of_fround:
 11943                           	opt stack 0
 11944                           tblptru	equ	0xFF8
 11945                           tblptrh	equ	0xFF7
 11946                           tblptrl	equ	0xFF6
 11947                           tablat	equ	0xFF5
 11948                           prodh	equ	0xFF4
 11949                           prodl	equ	0xFF3
 11950                           intcon	equ	0xFF2
 11951                           postinc0	equ	0xFEE
 11952                           wreg	equ	0xFE8
 11953                           indf1	equ	0xFE7
 11954                           postdec1	equ	0xFE5
 11955                           fsr1h	equ	0xFE2
 11956                           fsr1l	equ	0xFE1
 11957                           indf2	equ	0xFDF
 11958                           postinc2	equ	0xFDE
 11959                           postdec2	equ	0xFDD
 11960                           fsr2h	equ	0xFDA
 11961                           fsr2l	equ	0xFD9
 11962                           status	equ	0xFD8
 11963                           
 11964 ;; *************** function ___wmul *****************
 11965 ;; Defined at:
 11966 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  multiplier      2   37[BANK1 ] unsigned int 
 11969 ;;  multiplicand    2   39[BANK1 ] unsigned int 
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;  product         2   41[BANK1 ] unsigned int 
 11972 ;; Return value:  Size  Location     Type
 11973 ;;                  2   37[BANK1 ] unsigned int 
 11974 ;; Registers used:
 11975 ;;		wreg, status,2, status,0, prodl, prodh
 11976 ;; Tracked objects:
 11977 ;;		On entry : 0/0
 11978 ;;		On exit  : 0/0
 11979 ;;		Unchanged: 0/0
 11980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 11981 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11982 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11984 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11985 ;;Total ram usage:        6 bytes
 11986 ;; Hardware stack levels used:    1
 11987 ;; Hardware stack levels required when called:   14
 11988 ;; This function calls:
 11989 ;;		Nothing
 11990 ;; This function is called by:
 11991 ;;		_ringBufferLUT
 11992 ;;		_fround
 11993 ;;		_scale
 11994 ;;		_printf
 11995 ;;		_atoi
 11996 ;; This function uses a non-reentrant model
 11997 ;;
 11998                           
 11999                           	psect	text25
 12000  015FA8                     __ptext25:
 12001                           	opt stack 0
 12002  015FA8                     ___wmul:
 12003                           	opt stack 12
 12004                           
 12005                           ;incstack = 0
 12006  015FA8  0101               	movlb	1	; () banked
 12007  015FAA  5125               	movf	___wmul@multiplier& (0+255),w,b
 12008  015FAC  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12009  015FAE  CFF3 F129          	movff	prodl,___wmul@product
 12010  015FB2  CFF4 F12A          	movff	prodh,___wmul@product+1
 12011  015FB6  5125               	movf	___wmul@multiplier& (0+255),w,b
 12012  015FB8  0328               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 12013  015FBA  50F3               	movf	prodl,w,c
 12014  015FBC  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12015  015FBE  5126               	movf	(___wmul@multiplier+1)& (0+255),w,b
 12016  015FC0  0327               	mulwf	___wmul@multiplicand& (0+255),b
 12017  015FC2  50F3               	movf	prodl,w,c
 12018  015FC4  272A               	addwf	(___wmul@product+1)& (0+255),f,b
 12019                           
 12020                           ; BSR set to: 1
 12021  015FC6  C129  F125         	movff	___wmul@product,?___wmul
 12022  015FCA  C12A  F126         	movff	___wmul@product+1,?___wmul+1
 12023  015FCE  0012               	return	
 12024  015FD0                     __end_of___wmul:
 12025                           	opt stack 0
 12026                           tblptru	equ	0xFF8
 12027                           tblptrh	equ	0xFF7
 12028                           tblptrl	equ	0xFF6
 12029                           tablat	equ	0xFF5
 12030                           prodh	equ	0xFF4
 12031                           prodl	equ	0xFF3
 12032                           intcon	equ	0xFF2
 12033                           postinc0	equ	0xFEE
 12034                           wreg	equ	0xFE8
 12035                           indf1	equ	0xFE7
 12036                           postdec1	equ	0xFE5
 12037                           fsr1h	equ	0xFE2
 12038                           fsr1l	equ	0xFE1
 12039                           indf2	equ	0xFDF
 12040                           postinc2	equ	0xFDE
 12041                           postdec2	equ	0xFDD
 12042                           fsr2h	equ	0xFDA
 12043                           fsr2l	equ	0xFD9
 12044                           status	equ	0xFD8
 12045                           
 12046 ;; *************** function ___ftmul *****************
 12047 ;; Defined at:
 12048 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 12049 ;; Parameters:    Size  Location     Type
 12050 ;;  f1              3   70[BANK1 ] float 
 12051 ;;  f2              3   73[BANK1 ] float 
 12052 ;; Auto vars:     Size  Location     Type
 12053 ;;  f3_as_produc    3   80[BANK1 ] unsigned um
 12054 ;;  sign            1   84[BANK1 ] unsigned char 
 12055 ;;  cntr            1   83[BANK1 ] unsigned char 
 12056 ;;  exp             1   79[BANK1 ] unsigned char 
 12057 ;; Return value:  Size  Location     Type
 12058 ;;                  3   70[BANK1 ] float 
 12059 ;; Registers used:
 12060 ;;		wreg, status,2, status,0, cstack
 12061 ;; Tracked objects:
 12062 ;;		On entry : 0/0
 12063 ;;		On exit  : 0/0
 12064 ;;		Unchanged: 0/0
 12065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12066 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12067 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12068 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12069 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12070 ;;Total ram usage:       15 bytes
 12071 ;; Hardware stack levels used:    1
 12072 ;; Hardware stack levels required when called:   15
 12073 ;; This function calls:
 12074 ;;		___ftpack
 12075 ;; This function is called by:
 12076 ;;		_ringBufferLUT
 12077 ;;		_fround
 12078 ;;		_scale
 12079 ;;		_printf
 12080 ;; This function uses a non-reentrant model
 12081 ;;
 12082                           
 12083                           	psect	text26
 12084  01459C                     __ptext26:
 12085                           	opt stack 0
 12086  01459C                     ___ftmul:
 12087                           	opt stack 11
 12088                           
 12089                           ; BSR set to: 1
 12090                           ;incstack = 0
 12091  01459C  C148  F14C         	movff	___ftmul@f1+2,??___ftmul
 12092  0145A0  0101               	movlb	1	; () banked
 12093  0145A2  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12094  0145A4  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12095  0145A6  3547               	rlcf	(___ftmul@f1+1)& (0+255),w,b
 12096  0145A8  374C               	rlcf	??___ftmul& (0+255),f,b
 12097  0145AA  E301               	bnc	u9181
 12098  0145AC  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12099  0145AE                     u9181:
 12100  0145AE  514C               	movf	??___ftmul& (0+255),w,b
 12101  0145B0  6F4F               	movwf	___ftmul@exp& (0+255),b
 12102  0145B2  514F               	movf	___ftmul@exp& (0+255),w,b
 12103  0145B4  A4D8               	btfss	status,2,c
 12104  0145B6  D007               	goto	l1552
 12105                           
 12106                           ; BSR set to: 1
 12107  0145B8  0E00               	movlw	0
 12108  0145BA  6F46               	movwf	?___ftmul& (0+255),b
 12109  0145BC  0E00               	movlw	0
 12110  0145BE  6F47               	movwf	(?___ftmul+1)& (0+255),b
 12111  0145C0  0E00               	movlw	0
 12112  0145C2  6F48               	movwf	(?___ftmul+2)& (0+255),b
 12113                           
 12114                           ; BSR set to: 1
 12115  0145C4  0012               	return	
 12116  0145C6                     l1552:
 12117                           
 12118                           ; BSR set to: 1
 12119                           
 12120                           ; BSR set to: 1
 12121  0145C6  C14B  F14C         	movff	___ftmul@f2+2,??___ftmul
 12122  0145CA  6B4D               	clrf	(??___ftmul+1)& (0+255),b
 12123  0145CC  6B4E               	clrf	(??___ftmul+2)& (0+255),b
 12124  0145CE  354A               	rlcf	(___ftmul@f2+1)& (0+255),w,b
 12125  0145D0  374C               	rlcf	??___ftmul& (0+255),f,b
 12126  0145D2  E301               	bnc	u9201
 12127  0145D4  814D               	bsf	(??___ftmul+1)& (0+255),0,b
 12128  0145D6                     u9201:
 12129  0145D6  514C               	movf	??___ftmul& (0+255),w,b
 12130  0145D8  6F54               	movwf	___ftmul@sign& (0+255),b
 12131  0145DA  5154               	movf	___ftmul@sign& (0+255),w,b
 12132  0145DC  A4D8               	btfss	status,2,c
 12133  0145DE  D007               	goto	l1554
 12134                           
 12135                           ; BSR set to: 1
 12136  0145E0  0E00               	movlw	0
 12137  0145E2  6F46               	movwf	?___ftmul& (0+255),b
 12138  0145E4  0E00               	movlw	0
 12139  0145E6  6F47               	movwf	(?___ftmul+1)& (0+255),b
 12140  0145E8  0E00               	movlw	0
 12141  0145EA  6F48               	movwf	(?___ftmul+2)& (0+255),b
 12142                           
 12143                           ; BSR set to: 1
 12144  0145EC  0012               	return	
 12145  0145EE                     l1554:
 12146                           
 12147                           ; BSR set to: 1
 12148                           
 12149                           ; BSR set to: 1
 12150  0145EE  5154               	movf	___ftmul@sign& (0+255),w,b
 12151  0145F0  0F7B               	addlw	123
 12152  0145F2  274F               	addwf	___ftmul@exp& (0+255),f,b
 12153                           
 12154                           ; BSR set to: 1
 12155  0145F4  C148  F154         	movff	___ftmul@f1+2,___ftmul@sign
 12156  0145F8  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12157  0145FA  1B54               	xorwf	___ftmul@sign& (0+255),f,b
 12158  0145FC  0E80               	movlw	128
 12159  0145FE  1754               	andwf	___ftmul@sign& (0+255),f,b
 12160                           
 12161                           ; BSR set to: 1
 12162  014600  8F47               	bsf	(___ftmul@f1+1)& (0+255),7,b
 12163                           
 12164                           ; BSR set to: 1
 12165  014602  8F4A               	bsf	(___ftmul@f2+1)& (0+255),7,b
 12166                           
 12167                           ; BSR set to: 1
 12168  014604  0EFF               	movlw	255
 12169  014606  1749               	andwf	___ftmul@f2& (0+255),f,b
 12170  014608  0EFF               	movlw	255
 12171  01460A  174A               	andwf	(___ftmul@f2+1)& (0+255),f,b
 12172  01460C  0E00               	movlw	0
 12173  01460E  174B               	andwf	(___ftmul@f2+2)& (0+255),f,b
 12174                           
 12175                           ; BSR set to: 1
 12176  014610  0E00               	movlw	0
 12177  014612  6F50               	movwf	___ftmul@f3_as_product& (0+255),b
 12178  014614  0E00               	movlw	0
 12179  014616  6F51               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
 12180  014618  0E00               	movlw	0
 12181  01461A  6F52               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
 12182                           
 12183                           ; BSR set to: 1
 12184  01461C  0E07               	movlw	7
 12185  01461E  6F53               	movwf	___ftmul@cntr& (0+255),b
 12186  014620                     
 12187                           ; BSR set to: 1
 12188                           
 12189                           ; BSR set to: 1
 12190  014620  A146               	btfss	___ftmul@f1& (0+255),0,b
 12191  014622  D006               	goto	l1556
 12192                           
 12193                           ; BSR set to: 1
 12194  014624  5149               	movf	___ftmul@f2& (0+255),w,b
 12195  014626  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12196  014628  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 12197  01462A  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12198  01462C  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12199  01462E  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12200  014630                     l1556:
 12201                           
 12202                           ; BSR set to: 1
 12203                           
 12204                           ; BSR set to: 1
 12205  014630  90D8               	bcf	status,0,c
 12206  014632  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12207  014634  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12208  014636  3346               	rrcf	___ftmul@f1& (0+255),f,b
 12209  014638  90D8               	bcf	status,0,c
 12210  01463A  3749               	rlcf	___ftmul@f2& (0+255),f,b
 12211  01463C  374A               	rlcf	(___ftmul@f2+1)& (0+255),f,b
 12212  01463E  374B               	rlcf	(___ftmul@f2+2)& (0+255),f,b
 12213                           
 12214                           ; BSR set to: 1
 12215  014640  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 12216  014642  D7EE               	goto	l1555
 12217                           
 12218                           ; BSR set to: 1
 12219                           
 12220                           ; BSR set to: 1
 12221  014644  0E09               	movlw	9
 12222  014646  6F53               	movwf	___ftmul@cntr& (0+255),b
 12223  014648                     
 12224                           ; BSR set to: 1
 12225                           
 12226                           ; BSR set to: 1
 12227  014648  A146               	btfss	___ftmul@f1& (0+255),0,b
 12228  01464A  D006               	goto	l1559
 12229                           
 12230                           ; BSR set to: 1
 12231  01464C  5149               	movf	___ftmul@f2& (0+255),w,b
 12232  01464E  2750               	addwf	___ftmul@f3_as_product& (0+255),f,b
 12233  014650  514A               	movf	(___ftmul@f2+1)& (0+255),w,b
 12234  014652  2351               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
 12235  014654  514B               	movf	(___ftmul@f2+2)& (0+255),w,b
 12236  014656  2352               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
 12237  014658                     l1559:
 12238                           
 12239                           ; BSR set to: 1
 12240                           
 12241                           ; BSR set to: 1
 12242  014658  90D8               	bcf	status,0,c
 12243  01465A  3348               	rrcf	(___ftmul@f1+2)& (0+255),f,b
 12244  01465C  3347               	rrcf	(___ftmul@f1+1)& (0+255),f,b
 12245  01465E  3346               	rrcf	___ftmul@f1& (0+255),f,b
 12246  014660  90D8               	bcf	status,0,c
 12247  014662  3352               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
 12248  014664  3351               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
 12249  014666  3350               	rrcf	___ftmul@f3_as_product& (0+255),f,b
 12250                           
 12251                           ; BSR set to: 1
 12252  014668  2F53               	decfsz	___ftmul@cntr& (0+255),f,b
 12253  01466A  D7EE               	goto	l1558
 12254                           
 12255                           ; BSR set to: 1
 12256                           
 12257                           ; BSR set to: 1
 12258  01466C  C150  F117         	movff	___ftmul@f3_as_product,___ftpack@arg
 12259  014670  C151  F118         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
 12260  014674  C152  F119         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
 12261  014678  C14F  F11A         	movff	___ftmul@exp,___ftpack@exp
 12262  01467C  C154  F11B         	movff	___ftmul@sign,___ftpack@sign
 12263  014680  ECD2  F0A6         	call	___ftpack	;wreg free
 12264  014684  C117  F146         	movff	?___ftpack,?___ftmul
 12265  014688  C118  F147         	movff	?___ftpack+1,?___ftmul+1
 12266  01468C  C119  F148         	movff	?___ftpack+2,?___ftmul+2
 12267  014690  0012               	return	
 12268  014692                     __end_of___ftmul:
 12269                           	opt stack 0
 12270                           tblptru	equ	0xFF8
 12271                           tblptrh	equ	0xFF7
 12272                           tblptrl	equ	0xFF6
 12273                           tablat	equ	0xFF5
 12274                           prodh	equ	0xFF4
 12275                           prodl	equ	0xFF3
 12276                           intcon	equ	0xFF2
 12277                           postinc0	equ	0xFEE
 12278                           wreg	equ	0xFE8
 12279                           indf1	equ	0xFE7
 12280                           postdec1	equ	0xFE5
 12281                           fsr1h	equ	0xFE2
 12282                           fsr1l	equ	0xFE1
 12283                           indf2	equ	0xFDF
 12284                           postinc2	equ	0xFDE
 12285                           postdec2	equ	0xFDD
 12286                           fsr2h	equ	0xFDA
 12287                           fsr2l	equ	0xFD9
 12288                           status	equ	0xFD8
 12289                           
 12290 ;; *************** function ___awmod *****************
 12291 ;; Defined at:
 12292 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 12293 ;; Parameters:    Size  Location     Type
 12294 ;;  dividend        2   23[BANK1 ] int 
 12295 ;;  divisor         2   25[BANK1 ] int 
 12296 ;; Auto vars:     Size  Location     Type
 12297 ;;  sign            1   28[BANK1 ] unsigned char 
 12298 ;;  counter         1   27[BANK1 ] unsigned char 
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  2   23[BANK1 ] int 
 12301 ;; Registers used:
 12302 ;;		wreg, status,2, status,0
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12308 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12309 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12311 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12312 ;;Total ram usage:        6 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:   14
 12315 ;; This function calls:
 12316 ;;		Nothing
 12317 ;; This function is called by:
 12318 ;;		_fround
 12319 ;;		_scale
 12320 ;; This function uses a non-reentrant model
 12321 ;;
 12322                           
 12323                           	psect	text27
 12324  0155FE                     __ptext27:
 12325                           	opt stack 0
 12326  0155FE                     ___awmod:
 12327                           	opt stack 12
 12328                           
 12329                           ;incstack = 0
 12330  0155FE  0E00               	movlw	0
 12331  015600  0101               	movlb	1	; () banked
 12332  015602  6F1C               	movwf	___awmod@sign& (0+255),b
 12333                           
 12334                           ; BSR set to: 1
 12335  015604  AF18               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12336  015606  D006               	goto	l1393
 12337                           
 12338                           ; BSR set to: 1
 12339  015608  6D17               	negf	___awmod@dividend& (0+255),b
 12340  01560A  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12341  01560C  B0D8               	btfsc	status,0,c
 12342  01560E  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12343                           
 12344                           ; BSR set to: 1
 12345  015610  0E01               	movlw	1
 12346  015612  6F1C               	movwf	___awmod@sign& (0+255),b
 12347  015614                     l1393:
 12348                           
 12349                           ; BSR set to: 1
 12350                           
 12351                           ; BSR set to: 1
 12352  015614  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12353  015616  D004               	goto	l1394
 12354                           
 12355                           ; BSR set to: 1
 12356  015618  6D19               	negf	___awmod@divisor& (0+255),b
 12357  01561A  1F1A               	comf	(___awmod@divisor+1)& (0+255),f,b
 12358  01561C  B0D8               	btfsc	status,0,c
 12359  01561E  2B1A               	incf	(___awmod@divisor+1)& (0+255),f,b
 12360  015620                     l1394:
 12361                           
 12362                           ; BSR set to: 1
 12363                           
 12364                           ; BSR set to: 1
 12365  015620  5119               	movf	___awmod@divisor& (0+255),w,b
 12366  015622  111A               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12367  015624  B4D8               	btfsc	status,2,c
 12368  015626  D018               	goto	l1401
 12369                           
 12370                           ; BSR set to: 1
 12371  015628  0E01               	movlw	1
 12372  01562A  6F1B               	movwf	___awmod@counter& (0+255),b
 12373  01562C  D004               	goto	l1396
 12374  01562E                     
 12375                           ; BSR set to: 1
 12376                           
 12377                           ; BSR set to: 1
 12378  01562E  90D8               	bcf	status,0,c
 12379  015630  3719               	rlcf	___awmod@divisor& (0+255),f,b
 12380  015632  371A               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12381  015634  2B1B               	incf	___awmod@counter& (0+255),f,b
 12382  015636                     l1396:
 12383                           
 12384                           ; BSR set to: 1
 12385                           
 12386                           ; BSR set to: 1
 12387  015636  AF1A               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12388  015638  D7FA               	goto	l1397
 12389  01563A                     u9350:
 12390                           
 12391                           ; BSR set to: 1
 12392                           
 12393                           ; BSR set to: 1
 12394                           
 12395                           ; BSR set to: 1
 12396  01563A  5119               	movf	___awmod@divisor& (0+255),w,b
 12397  01563C  5D17               	subwf	___awmod@dividend& (0+255),w,b
 12398  01563E  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 12399  015640  5918               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12400  015642  A0D8               	btfss	status,0,c
 12401  015644  D004               	goto	l1400
 12402                           
 12403                           ; BSR set to: 1
 12404  015646  5119               	movf	___awmod@divisor& (0+255),w,b
 12405  015648  5F17               	subwf	___awmod@dividend& (0+255),f,b
 12406  01564A  511A               	movf	(___awmod@divisor+1)& (0+255),w,b
 12407  01564C  5B18               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12408  01564E                     l1400:
 12409                           
 12410                           ; BSR set to: 1
 12411                           
 12412                           ; BSR set to: 1
 12413  01564E  90D8               	bcf	status,0,c
 12414  015650  331A               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12415  015652  3319               	rrcf	___awmod@divisor& (0+255),f,b
 12416                           
 12417                           ; BSR set to: 1
 12418  015654  2F1B               	decfsz	___awmod@counter& (0+255),f,b
 12419  015656  D7F1               	goto	u9350
 12420  015658                     l1401:
 12421                           
 12422                           ; BSR set to: 1
 12423                           
 12424                           ; BSR set to: 1
 12425                           
 12426                           ; BSR set to: 1
 12427  015658  511C               	movf	___awmod@sign& (0+255),w,b
 12428  01565A  B4D8               	btfsc	status,2,c
 12429  01565C  D004               	goto	l1402
 12430                           
 12431                           ; BSR set to: 1
 12432  01565E  6D17               	negf	___awmod@dividend& (0+255),b
 12433  015660  1F18               	comf	(___awmod@dividend+1)& (0+255),f,b
 12434  015662  B0D8               	btfsc	status,0,c
 12435  015664  2B18               	incf	(___awmod@dividend+1)& (0+255),f,b
 12436  015666                     l1402:
 12437                           
 12438                           ; BSR set to: 1
 12439                           
 12440                           ; BSR set to: 1
 12441  015666  C117  F117         	movff	___awmod@dividend,?___awmod
 12442  01566A  C118  F118         	movff	___awmod@dividend+1,?___awmod+1
 12443  01566E  0012               	return	
 12444  015670                     __end_of___awmod:
 12445                           	opt stack 0
 12446                           tblptru	equ	0xFF8
 12447                           tblptrh	equ	0xFF7
 12448                           tblptrl	equ	0xFF6
 12449                           tablat	equ	0xFF5
 12450                           prodh	equ	0xFF4
 12451                           prodl	equ	0xFF3
 12452                           intcon	equ	0xFF2
 12453                           postinc0	equ	0xFEE
 12454                           wreg	equ	0xFE8
 12455                           indf1	equ	0xFE7
 12456                           postdec1	equ	0xFE5
 12457                           fsr1h	equ	0xFE2
 12458                           fsr1l	equ	0xFE1
 12459                           indf2	equ	0xFDF
 12460                           postinc2	equ	0xFDE
 12461                           postdec2	equ	0xFDD
 12462                           fsr2h	equ	0xFDA
 12463                           fsr2l	equ	0xFD9
 12464                           status	equ	0xFD8
 12465                           
 12466 ;; *************** function ___awdiv *****************
 12467 ;; Defined at:
 12468 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;  dividend        2   29[BANK1 ] int 
 12471 ;;  divisor         2   31[BANK1 ] int 
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;  quotient        2   35[BANK1 ] int 
 12474 ;;  sign            1   34[BANK1 ] unsigned char 
 12475 ;;  counter         1   33[BANK1 ] unsigned char 
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  2   29[BANK1 ] int 
 12478 ;; Registers used:
 12479 ;;		wreg, status,2, status,0
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12485 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12486 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12488 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12489 ;;Total ram usage:        8 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:   14
 12492 ;; This function calls:
 12493 ;;		Nothing
 12494 ;; This function is called by:
 12495 ;;		_fround
 12496 ;;		_scale
 12497 ;;		_printf
 12498 ;; This function uses a non-reentrant model
 12499 ;;
 12500                           
 12501                           	psect	text28
 12502  01528C                     __ptext28:
 12503                           	opt stack 0
 12504  01528C                     ___awdiv:
 12505                           	opt stack 12
 12506                           
 12507                           ; BSR set to: 1
 12508                           ;incstack = 0
 12509  01528C  0E00               	movlw	0
 12510  01528E  0101               	movlb	1	; () banked
 12511  015290  6F22               	movwf	___awdiv@sign& (0+255),b
 12512                           
 12513                           ; BSR set to: 1
 12514  015292  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12515  015294  D006               	goto	l1380
 12516                           
 12517                           ; BSR set to: 1
 12518  015296  6D1F               	negf	___awdiv@divisor& (0+255),b
 12519  015298  1F20               	comf	(___awdiv@divisor+1)& (0+255),f,b
 12520  01529A  B0D8               	btfsc	status,0,c
 12521  01529C  2B20               	incf	(___awdiv@divisor+1)& (0+255),f,b
 12522                           
 12523                           ; BSR set to: 1
 12524  01529E  0E01               	movlw	1
 12525  0152A0  6F22               	movwf	___awdiv@sign& (0+255),b
 12526  0152A2                     l1380:
 12527                           
 12528                           ; BSR set to: 1
 12529                           
 12530                           ; BSR set to: 1
 12531  0152A2  AF1E               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 12532  0152A4  D006               	goto	l1381
 12533                           
 12534                           ; BSR set to: 1
 12535  0152A6  6D1D               	negf	___awdiv@dividend& (0+255),b
 12536  0152A8  1F1E               	comf	(___awdiv@dividend+1)& (0+255),f,b
 12537  0152AA  B0D8               	btfsc	status,0,c
 12538  0152AC  2B1E               	incf	(___awdiv@dividend+1)& (0+255),f,b
 12539                           
 12540                           ; BSR set to: 1
 12541  0152AE  0E01               	movlw	1
 12542  0152B0  1B22               	xorwf	___awdiv@sign& (0+255),f,b
 12543  0152B2                     l1381:
 12544                           
 12545                           ; BSR set to: 1
 12546                           
 12547                           ; BSR set to: 1
 12548  0152B2  0E00               	movlw	0
 12549  0152B4  6F24               	movwf	(___awdiv@quotient+1)& (0+255),b
 12550  0152B6  0E00               	movlw	0
 12551  0152B8  6F23               	movwf	___awdiv@quotient& (0+255),b
 12552                           
 12553                           ; BSR set to: 1
 12554  0152BA  511F               	movf	___awdiv@divisor& (0+255),w,b
 12555  0152BC  1120               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 12556  0152BE  B4D8               	btfsc	status,2,c
 12557  0152C0  D01C               	goto	l1388
 12558                           
 12559                           ; BSR set to: 1
 12560  0152C2  0E01               	movlw	1
 12561  0152C4  6F21               	movwf	___awdiv@counter& (0+255),b
 12562  0152C6  D004               	goto	l1383
 12563  0152C8                     
 12564                           ; BSR set to: 1
 12565                           
 12566                           ; BSR set to: 1
 12567  0152C8  90D8               	bcf	status,0,c
 12568  0152CA  371F               	rlcf	___awdiv@divisor& (0+255),f,b
 12569  0152CC  3720               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 12570  0152CE  2B21               	incf	___awdiv@counter& (0+255),f,b
 12571  0152D0                     l1383:
 12572                           
 12573                           ; BSR set to: 1
 12574                           
 12575                           ; BSR set to: 1
 12576  0152D0  AF20               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 12577  0152D2  D7FA               	goto	l1384
 12578  0152D4                     u9290:
 12579                           
 12580                           ; BSR set to: 1
 12581                           
 12582                           ; BSR set to: 1
 12583                           
 12584                           ; BSR set to: 1
 12585  0152D4  90D8               	bcf	status,0,c
 12586  0152D6  3723               	rlcf	___awdiv@quotient& (0+255),f,b
 12587  0152D8  3724               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 12588                           
 12589                           ; BSR set to: 1
 12590  0152DA  511F               	movf	___awdiv@divisor& (0+255),w,b
 12591  0152DC  5D1D               	subwf	___awdiv@dividend& (0+255),w,b
 12592  0152DE  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12593  0152E0  591E               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 12594  0152E2  A0D8               	btfss	status,0,c
 12595  0152E4  D005               	goto	l1387
 12596                           
 12597                           ; BSR set to: 1
 12598  0152E6  511F               	movf	___awdiv@divisor& (0+255),w,b
 12599  0152E8  5F1D               	subwf	___awdiv@dividend& (0+255),f,b
 12600  0152EA  5120               	movf	(___awdiv@divisor+1)& (0+255),w,b
 12601  0152EC  5B1E               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 12602                           
 12603                           ; BSR set to: 1
 12604  0152EE  8123               	bsf	___awdiv@quotient& (0+255),0,b
 12605  0152F0                     l1387:
 12606                           
 12607                           ; BSR set to: 1
 12608                           
 12609                           ; BSR set to: 1
 12610  0152F0  90D8               	bcf	status,0,c
 12611  0152F2  3320               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 12612  0152F4  331F               	rrcf	___awdiv@divisor& (0+255),f,b
 12613                           
 12614                           ; BSR set to: 1
 12615  0152F6  2F21               	decfsz	___awdiv@counter& (0+255),f,b
 12616  0152F8  D7ED               	goto	u9290
 12617  0152FA                     l1388:
 12618                           
 12619                           ; BSR set to: 1
 12620                           
 12621                           ; BSR set to: 1
 12622                           
 12623                           ; BSR set to: 1
 12624  0152FA  5122               	movf	___awdiv@sign& (0+255),w,b
 12625  0152FC  B4D8               	btfsc	status,2,c
 12626  0152FE  D004               	goto	l1389
 12627                           
 12628                           ; BSR set to: 1
 12629  015300  6D23               	negf	___awdiv@quotient& (0+255),b
 12630  015302  1F24               	comf	(___awdiv@quotient+1)& (0+255),f,b
 12631  015304  B0D8               	btfsc	status,0,c
 12632  015306  2B24               	incf	(___awdiv@quotient+1)& (0+255),f,b
 12633  015308                     l1389:
 12634                           
 12635                           ; BSR set to: 1
 12636                           
 12637                           ; BSR set to: 1
 12638  015308  C123  F11D         	movff	___awdiv@quotient,?___awdiv
 12639  01530C  C124  F11E         	movff	___awdiv@quotient+1,?___awdiv+1
 12640  015310  0012               	return	
 12641  015312                     __end_of___awdiv:
 12642                           	opt stack 0
 12643                           tblptru	equ	0xFF8
 12644                           tblptrh	equ	0xFF7
 12645                           tblptrl	equ	0xFF6
 12646                           tablat	equ	0xFF5
 12647                           prodh	equ	0xFF4
 12648                           prodl	equ	0xFF3
 12649                           intcon	equ	0xFF2
 12650                           postinc0	equ	0xFEE
 12651                           wreg	equ	0xFE8
 12652                           indf1	equ	0xFE7
 12653                           postdec1	equ	0xFE5
 12654                           fsr1h	equ	0xFE2
 12655                           fsr1l	equ	0xFE1
 12656                           indf2	equ	0xFDF
 12657                           postinc2	equ	0xFDE
 12658                           postdec2	equ	0xFDD
 12659                           fsr2h	equ	0xFDA
 12660                           fsr2l	equ	0xFD9
 12661                           status	equ	0xFD8
 12662                           
 12663 ;; *************** function __tdiv_to_l_ *****************
 12664 ;; Defined at:
 12665 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 12666 ;; Parameters:    Size  Location     Type
 12667 ;;  f1              3   23[BANK1 ] float 
 12668 ;;  f2              3   26[BANK1 ] float 
 12669 ;; Auto vars:     Size  Location     Type
 12670 ;;  quot            4   32[BANK1 ] unsigned long 
 12671 ;;  exp1            1   37[BANK1 ] unsigned char 
 12672 ;;  cntr            1   36[BANK1 ] unsigned char 
 12673 ;; Return value:  Size  Location     Type
 12674 ;;                  4   23[BANK1 ] unsigned long 
 12675 ;; Registers used:
 12676 ;;		wreg, status,2, status,0
 12677 ;; Tracked objects:
 12678 ;;		On entry : 0/0
 12679 ;;		On exit  : 0/0
 12680 ;;		Unchanged: 0/0
 12681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12682 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12683 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12684 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12685 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12686 ;;Total ram usage:       15 bytes
 12687 ;; Hardware stack levels used:    1
 12688 ;; Hardware stack levels required when called:   14
 12689 ;; This function calls:
 12690 ;;		Nothing
 12691 ;; This function is called by:
 12692 ;;		_printf
 12693 ;; This function uses a non-reentrant model
 12694 ;;
 12695                           
 12696                           	psect	text29
 12697  013ED0                     __ptext29:
 12698                           	opt stack 0
 12699  013ED0                     __tdiv_to_l_:
 12700                           	opt stack 13
 12701                           
 12702                           ; BSR set to: 1
 12703                           ;incstack = 0
 12704  013ED0  C119  F11D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
 12705  013ED4  0101               	movlb	1	; () banked
 12706  013ED6  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12707  013ED8  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12708  013EDA  3518               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12709  013EDC  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12710  013EDE  E301               	bnc	u9581
 12711  013EE0  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12712  013EE2                     u9581:
 12713  013EE2  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 12714  013EE4  6F25               	movwf	__tdiv_to_l_@exp1& (0+255),b
 12715  013EE6  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12716  013EE8  A4D8               	btfss	status,2,c
 12717  013EEA  D009               	goto	l1528
 12718                           
 12719                           ; BSR set to: 1
 12720  013EEC  0E00               	movlw	0
 12721  013EEE  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12722  013EF0  0E00               	movlw	0
 12723  013EF2  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12724  013EF4  0E00               	movlw	0
 12725  013EF6  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12726  013EF8  0E00               	movlw	0
 12727  013EFA  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12728                           
 12729                           ; BSR set to: 1
 12730  013EFC  0012               	return	
 12731  013EFE                     l1528:
 12732                           
 12733                           ; BSR set to: 1
 12734                           
 12735                           ; BSR set to: 1
 12736  013EFE  C11C  F11D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
 12737  013F02  6B1E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
 12738  013F04  6B1F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
 12739  013F06  351B               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12740  013F08  371D               	rlcf	??__tdiv_to_l_& (0+255),f,b
 12741  013F0A  E301               	bnc	u9601
 12742  013F0C  811E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
 12743  013F0E                     u9601:
 12744  013F0E  511D               	movf	??__tdiv_to_l_& (0+255),w,b
 12745  013F10  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12746  013F12  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12747  013F14  A4D8               	btfss	status,2,c
 12748  013F16  D009               	goto	l1530
 12749                           
 12750                           ; BSR set to: 1
 12751  013F18  0E00               	movlw	0
 12752  013F1A  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12753  013F1C  0E00               	movlw	0
 12754  013F1E  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12755  013F20  0E00               	movlw	0
 12756  013F22  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12757  013F24  0E00               	movlw	0
 12758  013F26  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12759                           
 12760                           ; BSR set to: 1
 12761  013F28  0012               	return	
 12762  013F2A                     l1530:
 12763                           
 12764                           ; BSR set to: 1
 12765                           
 12766                           ; BSR set to: 1
 12767  013F2A  8F18               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
 12768                           
 12769                           ; BSR set to: 1
 12770  013F2C  0EFF               	movlw	255
 12771  013F2E  1717               	andwf	__tdiv_to_l_@f1& (0+255),f,b
 12772  013F30  0EFF               	movlw	255
 12773  013F32  1718               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12774  013F34  0E00               	movlw	0
 12775  013F36  1719               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12776  013F38  8F1B               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
 12777                           
 12778                           ; BSR set to: 1
 12779  013F3A  0EFF               	movlw	255
 12780  013F3C  171A               	andwf	__tdiv_to_l_@f2& (0+255),f,b
 12781  013F3E  0EFF               	movlw	255
 12782  013F40  171B               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
 12783  013F42  0E00               	movlw	0
 12784  013F44  171C               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
 12785                           
 12786                           ; BSR set to: 1
 12787  013F46  0E00               	movlw	0
 12788  013F48  6F20               	movwf	__tdiv_to_l_@quot& (0+255),b
 12789  013F4A  0E00               	movlw	0
 12790  013F4C  6F21               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
 12791  013F4E  0E00               	movlw	0
 12792  013F50  6F22               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
 12793  013F52  0E00               	movlw	0
 12794  013F54  6F23               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
 12795                           
 12796                           ; BSR set to: 1
 12797  013F56  0E7F               	movlw	127
 12798  013F58  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12799                           
 12800                           ; BSR set to: 1
 12801  013F5A  5124               	movf	__tdiv_to_l_@cntr& (0+255),w,b
 12802  013F5C  0F98               	addlw	152
 12803  013F5E  5F25               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
 12804                           
 12805                           ; BSR set to: 1
 12806  013F60  0E18               	movlw	24
 12807  013F62  6F24               	movwf	__tdiv_to_l_@cntr& (0+255),b
 12808  013F64                     l1531:
 12809                           
 12810                           ; BSR set to: 1
 12811  013F64  90D8               	bcf	status,0,c
 12812  013F66  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12813  013F68  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12814  013F6A  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12815  013F6C  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12816                           
 12817                           ; BSR set to: 1
 12818  013F6E  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12819  013F70  5D17               	subwf	__tdiv_to_l_@f1& (0+255),w,b
 12820  013F72  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12821  013F74  5918               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
 12822  013F76  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12823  013F78  5919               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
 12824  013F7A  A0D8               	btfss	status,0,c
 12825  013F7C  D007               	goto	l1532
 12826                           
 12827                           ; BSR set to: 1
 12828  013F7E  511A               	movf	__tdiv_to_l_@f2& (0+255),w,b
 12829  013F80  5F17               	subwf	__tdiv_to_l_@f1& (0+255),f,b
 12830  013F82  511B               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
 12831  013F84  5B18               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12832  013F86  511C               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
 12833  013F88  5B19               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12834                           
 12835                           ; BSR set to: 1
 12836  013F8A  8120               	bsf	__tdiv_to_l_@quot& (0+255),0,b
 12837  013F8C                     l1532:
 12838                           
 12839                           ; BSR set to: 1
 12840  013F8C  90D8               	bcf	status,0,c
 12841  013F8E  3717               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
 12842  013F90  3718               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
 12843  013F92  3719               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
 12844                           
 12845                           ; BSR set to: 1
 12846  013F94  2F24               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
 12847  013F96  D7E6               	goto	l1531
 12848                           
 12849                           ; BSR set to: 1
 12850                           
 12851                           ; BSR set to: 1
 12852  013F98  AF25               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
 12853  013F9A  D016               	goto	l1534
 12854                           
 12855                           ; BSR set to: 1
 12856  013F9C  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12857  013F9E  0A80               	xorlw	128
 12858  013FA0  0F97               	addlw	151
 12859  013FA2  B0D8               	btfsc	status,0,c
 12860  013FA4  D009               	goto	l1535
 12861                           
 12862                           ; BSR set to: 1
 12863  013FA6  0E00               	movlw	0
 12864  013FA8  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12865  013FAA  0E00               	movlw	0
 12866  013FAC  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12867  013FAE  0E00               	movlw	0
 12868  013FB0  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12869  013FB2  0E00               	movlw	0
 12870  013FB4  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12871                           
 12872                           ; BSR set to: 1
 12873  013FB6  0012               	return	
 12874  013FB8                     l1535:
 12875                           
 12876                           ; BSR set to: 1
 12877                           
 12878                           ; BSR set to: 1
 12879                           
 12880                           ; BSR set to: 1
 12881  013FB8  90D8               	bcf	status,0,c
 12882  013FBA  3323               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12883  013FBC  3322               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12884  013FBE  3321               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12885  013FC0  3320               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
 12886                           
 12887                           ; BSR set to: 1
 12888  013FC2  3F25               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
 12889  013FC4  D7F9               	goto	l1535
 12890                           
 12891                           ; BSR set to: 1
 12892  013FC6  D015               	goto	u9660
 12893  013FC8                     l1534:
 12894                           
 12895                           ; BSR set to: 1
 12896                           
 12897                           ; BSR set to: 1
 12898  013FC8  0E17               	movlw	23
 12899  013FCA  6525               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
 12900  013FCC  D00F               	goto	l1540
 12901                           
 12902                           ; BSR set to: 1
 12903  013FCE  0E00               	movlw	0
 12904  013FD0  6F17               	movwf	?__tdiv_to_l_& (0+255),b
 12905  013FD2  0E00               	movlw	0
 12906  013FD4  6F18               	movwf	(?__tdiv_to_l_+1)& (0+255),b
 12907  013FD6  0E00               	movlw	0
 12908  013FD8  6F19               	movwf	(?__tdiv_to_l_+2)& (0+255),b
 12909  013FDA  0E00               	movlw	0
 12910  013FDC  6F1A               	movwf	(?__tdiv_to_l_+3)& (0+255),b
 12911                           
 12912                           ; BSR set to: 1
 12913  013FDE  0012               	return	
 12914  013FE0                     
 12915                           ; BSR set to: 1
 12916                           
 12917                           ; BSR set to: 1
 12918  013FE0  90D8               	bcf	status,0,c
 12919  013FE2  3720               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
 12920  013FE4  3721               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
 12921  013FE6  3722               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
 12922  013FE8  3723               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
 12923  013FEA  0725               	decf	__tdiv_to_l_@exp1& (0+255),f,b
 12924  013FEC                     l1540:
 12925                           
 12926                           ; BSR set to: 1
 12927                           
 12928                           ; BSR set to: 1
 12929  013FEC  5125               	movf	__tdiv_to_l_@exp1& (0+255),w,b
 12930  013FEE  A4D8               	btfss	status,2,c
 12931  013FF0  D7F7               	goto	l1541
 12932  013FF2                     u9660:
 12933                           
 12934                           ; BSR set to: 1
 12935                           
 12936                           ; BSR set to: 1
 12937  013FF2  C120  F117         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
 12938  013FF6  C121  F118         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
 12939  013FFA  C122  F119         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
 12940  013FFE  C123  F11A         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
 12941                           
 12942                           ; BSR set to: 1
 12943  014002  0012               	return		;funcret
 12944  014004                     __end_of__tdiv_to_l_:
 12945                           	opt stack 0
 12946                           tblptru	equ	0xFF8
 12947                           tblptrh	equ	0xFF7
 12948                           tblptrl	equ	0xFF6
 12949                           tablat	equ	0xFF5
 12950                           prodh	equ	0xFF4
 12951                           prodl	equ	0xFF3
 12952                           intcon	equ	0xFF2
 12953                           postinc0	equ	0xFEE
 12954                           wreg	equ	0xFE8
 12955                           indf1	equ	0xFE7
 12956                           postdec1	equ	0xFE5
 12957                           fsr1h	equ	0xFE2
 12958                           fsr1l	equ	0xFE1
 12959                           indf2	equ	0xFDF
 12960                           postinc2	equ	0xFDE
 12961                           postdec2	equ	0xFDD
 12962                           fsr2h	equ	0xFDA
 12963                           fsr2l	equ	0xFD9
 12964                           status	equ	0xFD8
 12965                           
 12966 ;; *************** function __div_to_l_ *****************
 12967 ;; Defined at:
 12968 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 12969 ;; Parameters:    Size  Location     Type
 12970 ;;  f1              3   23[BANK1 ] unsigned long 
 12971 ;;  f2              3   26[BANK1 ] unsigned long 
 12972 ;; Auto vars:     Size  Location     Type
 12973 ;;  quot            4   29[BANK1 ] unsigned long 
 12974 ;;  exp1            1   34[BANK1 ] unsigned char 
 12975 ;;  cntr            1   33[BANK1 ] unsigned char 
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  4   23[BANK1 ] unsigned long 
 12978 ;; Registers used:
 12979 ;;		wreg, status,2, status,0
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 12985 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12986 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12988 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12989 ;;Total ram usage:       12 bytes
 12990 ;; Hardware stack levels used:    1
 12991 ;; Hardware stack levels required when called:   14
 12992 ;; This function calls:
 12993 ;;		Nothing
 12994 ;; This function is called by:
 12995 ;;		_printf
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text30
 13000  014136                     __ptext30:
 13001                           	opt stack 0
 13002  014136                     __div_to_l_:
 13003                           	opt stack 13
 13004                           
 13005                           ; BSR set to: 1
 13006                           ;incstack = 0
 13007  014136  0101               	movlb	1	; () banked
 13008  014138  3519               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 13009  01413A  351A               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 13010  01413C  6F22               	movwf	__div_to_l_@exp1& (0+255),b
 13011  01413E  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13012  014140  A4D8               	btfss	status,2,c
 13013  014142  D009               	goto	l1424
 13014                           
 13015                           ; BSR set to: 1
 13016  014144  0E00               	movlw	0
 13017  014146  6F17               	movwf	?__div_to_l_& (0+255),b
 13018  014148  0E00               	movlw	0
 13019  01414A  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13020  01414C  0E00               	movlw	0
 13021  01414E  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13022  014150  0E00               	movlw	0
 13023  014152  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13024                           
 13025                           ; BSR set to: 1
 13026  014154  0012               	return	
 13027  014156                     l1424:
 13028                           
 13029                           ; BSR set to: 1
 13030                           
 13031                           ; BSR set to: 1
 13032  014156  351C               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 13033  014158  351D               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 13034  01415A  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13035  01415C  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13036  01415E  A4D8               	btfss	status,2,c
 13037  014160  D009               	goto	l1426
 13038                           
 13039                           ; BSR set to: 1
 13040  014162  0E00               	movlw	0
 13041  014164  6F17               	movwf	?__div_to_l_& (0+255),b
 13042  014166  0E00               	movlw	0
 13043  014168  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13044  01416A  0E00               	movlw	0
 13045  01416C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13046  01416E  0E00               	movlw	0
 13047  014170  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13048                           
 13049                           ; BSR set to: 1
 13050  014172  0012               	return	
 13051  014174                     l1426:
 13052                           
 13053                           ; BSR set to: 1
 13054                           
 13055                           ; BSR set to: 1
 13056  014174  8F19               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 13057                           
 13058                           ; BSR set to: 1
 13059  014176  0EFF               	movlw	255
 13060  014178  1717               	andwf	__div_to_l_@f1& (0+255),f,b
 13061  01417A  0EFF               	movlw	255
 13062  01417C  1718               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 13063  01417E  0EFF               	movlw	255
 13064  014180  1719               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 13065  014182  0E00               	movlw	0
 13066  014184  171A               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 13067                           
 13068                           ; BSR set to: 1
 13069  014186  8F1C               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 13070  014188  0EFF               	movlw	255
 13071  01418A  171A               	andwf	__div_to_l_@f2& (0+255),f,b
 13072  01418C  0EFF               	movlw	255
 13073  01418E  171B               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 13074  014190  0EFF               	movlw	255
 13075  014192  171C               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 13076  014194  0E00               	movlw	0
 13077  014196  171D               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 13078                           
 13079                           ; BSR set to: 1
 13080  014198  0E00               	movlw	0
 13081  01419A  6F1D               	movwf	__div_to_l_@quot& (0+255),b
 13082  01419C  0E00               	movlw	0
 13083  01419E  6F1E               	movwf	(__div_to_l_@quot+1)& (0+255),b
 13084  0141A0  0E00               	movlw	0
 13085  0141A2  6F1F               	movwf	(__div_to_l_@quot+2)& (0+255),b
 13086  0141A4  0E00               	movlw	0
 13087  0141A6  6F20               	movwf	(__div_to_l_@quot+3)& (0+255),b
 13088                           
 13089                           ; BSR set to: 1
 13090  0141A8  0E7F               	movlw	127
 13091  0141AA  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13092                           
 13093                           ; BSR set to: 1
 13094  0141AC  5121               	movf	__div_to_l_@cntr& (0+255),w,b
 13095  0141AE  0FA0               	addlw	160
 13096  0141B0  5F22               	subwf	__div_to_l_@exp1& (0+255),f,b
 13097                           
 13098                           ; BSR set to: 1
 13099  0141B2  0E20               	movlw	32
 13100  0141B4  6F21               	movwf	__div_to_l_@cntr& (0+255),b
 13101  0141B6                     
 13102                           ; BSR set to: 1
 13103                           
 13104                           ; BSR set to: 1
 13105  0141B6  90D8               	bcf	status,0,c
 13106  0141B8  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 13107  0141BA  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13108  0141BC  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13109  0141BE  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13110                           
 13111                           ; BSR set to: 1
 13112  0141C0  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13113  0141C2  5D17               	subwf	__div_to_l_@f1& (0+255),w,b
 13114  0141C4  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13115  0141C6  5918               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 13116  0141C8  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13117  0141CA  5919               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 13118  0141CC  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13119  0141CE  591A               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 13120  0141D0  A0D8               	btfss	status,0,c
 13121  0141D2  D009               	goto	l1428
 13122                           
 13123                           ; BSR set to: 1
 13124  0141D4  511A               	movf	__div_to_l_@f2& (0+255),w,b
 13125  0141D6  5F17               	subwf	__div_to_l_@f1& (0+255),f,b
 13126  0141D8  511B               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 13127  0141DA  5B18               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 13128  0141DC  511C               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 13129  0141DE  5B19               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 13130  0141E0  511D               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 13131  0141E2  5B1A               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 13132                           
 13133                           ; BSR set to: 1
 13134  0141E4  811D               	bsf	__div_to_l_@quot& (0+255),0,b
 13135  0141E6                     l1428:
 13136                           
 13137                           ; BSR set to: 1
 13138                           
 13139                           ; BSR set to: 1
 13140  0141E6  90D8               	bcf	status,0,c
 13141  0141E8  3717               	rlcf	__div_to_l_@f1& (0+255),f,b
 13142  0141EA  3718               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 13143  0141EC  3719               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 13144  0141EE  371A               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 13145                           
 13146                           ; BSR set to: 1
 13147  0141F0  2F21               	decfsz	__div_to_l_@cntr& (0+255),f,b
 13148  0141F2  D7E1               	goto	l1427
 13149                           
 13150                           ; BSR set to: 1
 13151                           
 13152                           ; BSR set to: 1
 13153  0141F4  AF22               	btfss	__div_to_l_@exp1& (0+255),7,b
 13154  0141F6  D016               	goto	l1430
 13155                           
 13156                           ; BSR set to: 1
 13157  0141F8  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13158  0141FA  0A80               	xorlw	128
 13159  0141FC  0F9F               	addlw	159
 13160  0141FE  B0D8               	btfsc	status,0,c
 13161  014200  D009               	goto	l1431
 13162                           
 13163                           ; BSR set to: 1
 13164  014202  0E00               	movlw	0
 13165  014204  6F17               	movwf	?__div_to_l_& (0+255),b
 13166  014206  0E00               	movlw	0
 13167  014208  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13168  01420A  0E00               	movlw	0
 13169  01420C  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13170  01420E  0E00               	movlw	0
 13171  014210  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13172                           
 13173                           ; BSR set to: 1
 13174  014212  0012               	return	
 13175  014214                     l1431:
 13176                           
 13177                           ; BSR set to: 1
 13178                           
 13179                           ; BSR set to: 1
 13180                           
 13181                           ; BSR set to: 1
 13182  014214  90D8               	bcf	status,0,c
 13183  014216  3320               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 13184  014218  331F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 13185  01421A  331E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 13186  01421C  331D               	rrcf	__div_to_l_@quot& (0+255),f,b
 13187                           
 13188                           ; BSR set to: 1
 13189  01421E  3F22               	incfsz	__div_to_l_@exp1& (0+255),f,b
 13190  014220  D7F9               	goto	l1431
 13191                           
 13192                           ; BSR set to: 1
 13193  014222  D015               	goto	u9730
 13194  014224                     l1430:
 13195                           
 13196                           ; BSR set to: 1
 13197                           
 13198                           ; BSR set to: 1
 13199  014224  0E1F               	movlw	31
 13200  014226  6522               	cpfsgt	__div_to_l_@exp1& (0+255),b
 13201  014228  D00F               	goto	l1436
 13202                           
 13203                           ; BSR set to: 1
 13204  01422A  0E00               	movlw	0
 13205  01422C  6F17               	movwf	?__div_to_l_& (0+255),b
 13206  01422E  0E00               	movlw	0
 13207  014230  6F18               	movwf	(?__div_to_l_+1)& (0+255),b
 13208  014232  0E00               	movlw	0
 13209  014234  6F19               	movwf	(?__div_to_l_+2)& (0+255),b
 13210  014236  0E00               	movlw	0
 13211  014238  6F1A               	movwf	(?__div_to_l_+3)& (0+255),b
 13212                           
 13213                           ; BSR set to: 1
 13214  01423A  0012               	return	
 13215  01423C                     
 13216                           ; BSR set to: 1
 13217                           
 13218                           ; BSR set to: 1
 13219  01423C  90D8               	bcf	status,0,c
 13220  01423E  371D               	rlcf	__div_to_l_@quot& (0+255),f,b
 13221  014240  371E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 13222  014242  371F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 13223  014244  3720               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 13224  014246  0722               	decf	__div_to_l_@exp1& (0+255),f,b
 13225  014248                     l1436:
 13226                           
 13227                           ; BSR set to: 1
 13228                           
 13229                           ; BSR set to: 1
 13230  014248  5122               	movf	__div_to_l_@exp1& (0+255),w,b
 13231  01424A  A4D8               	btfss	status,2,c
 13232  01424C  D7F7               	goto	l1437
 13233  01424E                     u9730:
 13234                           
 13235                           ; BSR set to: 1
 13236                           
 13237                           ; BSR set to: 1
 13238  01424E  C11D  F117         	movff	__div_to_l_@quot,?__div_to_l_
 13239  014252  C11E  F118         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 13240  014256  C11F  F119         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 13241  01425A  C120  F11A         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 13242                           
 13243                           ; BSR set to: 1
 13244  01425E  0012               	return		;funcret
 13245  014260                     __end_of__div_to_l_:
 13246                           	opt stack 0
 13247                           tblptru	equ	0xFF8
 13248                           tblptrh	equ	0xFF7
 13249                           tblptrl	equ	0xFF6
 13250                           tablat	equ	0xFF5
 13251                           prodh	equ	0xFF4
 13252                           prodl	equ	0xFF3
 13253                           intcon	equ	0xFF2
 13254                           postinc0	equ	0xFEE
 13255                           wreg	equ	0xFE8
 13256                           indf1	equ	0xFE7
 13257                           postdec1	equ	0xFE5
 13258                           fsr1h	equ	0xFE2
 13259                           fsr1l	equ	0xFE1
 13260                           indf2	equ	0xFDF
 13261                           postinc2	equ	0xFDE
 13262                           postdec2	equ	0xFDD
 13263                           fsr2h	equ	0xFDA
 13264                           fsr2l	equ	0xFD9
 13265                           status	equ	0xFD8
 13266                           
 13267 ;; *************** function ___lltoft *****************
 13268 ;; Defined at:
 13269 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 13270 ;; Parameters:    Size  Location     Type
 13271 ;;  c               4   31[BANK1 ] unsigned long 
 13272 ;; Auto vars:     Size  Location     Type
 13273 ;;  exp             1   39[BANK1 ] unsigned char 
 13274 ;; Return value:  Size  Location     Type
 13275 ;;                  3   31[BANK1 ] float 
 13276 ;; Registers used:
 13277 ;;		wreg, status,2, status,0, cstack
 13278 ;; Tracked objects:
 13279 ;;		On entry : 0/0
 13280 ;;		On exit  : 0/0
 13281 ;;		Unchanged: 0/0
 13282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13283 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13284 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13285 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13286 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13287 ;;Total ram usage:        9 bytes
 13288 ;; Hardware stack levels used:    1
 13289 ;; Hardware stack levels required when called:   15
 13290 ;; This function calls:
 13291 ;;		___ftpack
 13292 ;; This function is called by:
 13293 ;;		_printf
 13294 ;; This function uses a non-reentrant model
 13295 ;;
 13296                           
 13297                           	psect	text31
 13298  015940                     __ptext31:
 13299                           	opt stack 0
 13300  015940                     ___lltoft:
 13301                           	opt stack 12
 13302                           
 13303                           ; BSR set to: 1
 13304                           ;incstack = 0
 13305  015940  0E8E               	movlw	142
 13306  015942  0101               	movlb	1	; () banked
 13307  015944  6F27               	movwf	___lltoft@exp& (0+255),b
 13308  015946  D006               	goto	l1635
 13309  015948                     
 13310                           ; BSR set to: 1
 13311                           
 13312                           ; BSR set to: 1
 13313  015948  90D8               	bcf	status,0,c
 13314  01594A  3322               	rrcf	(___lltoft@c+3)& (0+255),f,b
 13315  01594C  3321               	rrcf	(___lltoft@c+2)& (0+255),f,b
 13316  01594E  3320               	rrcf	(___lltoft@c+1)& (0+255),f,b
 13317  015950  331F               	rrcf	___lltoft@c& (0+255),f,b
 13318  015952  2B27               	incf	___lltoft@exp& (0+255),f,b
 13319  015954                     l1635:
 13320                           
 13321                           ; BSR set to: 1
 13322                           
 13323                           ; BSR set to: 1
 13324  015954  0E00               	movlw	0
 13325  015956  151F               	andwf	___lltoft@c& (0+255),w,b
 13326  015958  6F23               	movwf	??___lltoft& (0+255),b
 13327  01595A  0E00               	movlw	0
 13328  01595C  1520               	andwf	(___lltoft@c+1)& (0+255),w,b
 13329  01595E  6F24               	movwf	(??___lltoft+1)& (0+255),b
 13330  015960  0E00               	movlw	0
 13331  015962  1521               	andwf	(___lltoft@c+2)& (0+255),w,b
 13332  015964  6F25               	movwf	(??___lltoft+2)& (0+255),b
 13333  015966  0EFF               	movlw	255
 13334  015968  1522               	andwf	(___lltoft@c+3)& (0+255),w,b
 13335  01596A  6F26               	movwf	(??___lltoft+3)& (0+255),b
 13336  01596C  5123               	movf	??___lltoft& (0+255),w,b
 13337  01596E  1124               	iorwf	(??___lltoft+1)& (0+255),w,b
 13338  015970  1125               	iorwf	(??___lltoft+2)& (0+255),w,b
 13339  015972  1126               	iorwf	(??___lltoft+3)& (0+255),w,b
 13340  015974  A4D8               	btfss	status,2,c
 13341  015976  D7E8               	goto	l1636
 13342                           
 13343                           ; BSR set to: 1
 13344                           
 13345                           ; BSR set to: 1
 13346  015978  C11F  F117         	movff	___lltoft@c,___ftpack@arg
 13347  01597C  C120  F118         	movff	___lltoft@c+1,___ftpack@arg+1
 13348  015980  C121  F119         	movff	___lltoft@c+2,___ftpack@arg+2
 13349  015984  C127  F11A         	movff	___lltoft@exp,___ftpack@exp
 13350  015988  0E00               	movlw	0
 13351  01598A  6F1B               	movwf	___ftpack@sign& (0+255),b
 13352  01598C  ECD2  F0A6         	call	___ftpack	;wreg free
 13353  015990  C117  F11F         	movff	?___ftpack,?___lltoft
 13354  015994  C118  F120         	movff	?___ftpack+1,?___lltoft+1
 13355  015998  C119  F121         	movff	?___ftpack+2,?___lltoft+2
 13356  01599C  0012               	return	
 13357  01599E                     __end_of___lltoft:
 13358                           	opt stack 0
 13359                           tblptru	equ	0xFF8
 13360                           tblptrh	equ	0xFF7
 13361                           tblptrl	equ	0xFF6
 13362                           tablat	equ	0xFF5
 13363                           prodh	equ	0xFF4
 13364                           prodl	equ	0xFF3
 13365                           intcon	equ	0xFF2
 13366                           postinc0	equ	0xFEE
 13367                           wreg	equ	0xFE8
 13368                           indf1	equ	0xFE7
 13369                           postdec1	equ	0xFE5
 13370                           fsr1h	equ	0xFE2
 13371                           fsr1l	equ	0xFE1
 13372                           indf2	equ	0xFDF
 13373                           postinc2	equ	0xFDE
 13374                           postdec2	equ	0xFDD
 13375                           fsr2h	equ	0xFDA
 13376                           fsr2l	equ	0xFD9
 13377                           status	equ	0xFD8
 13378                           
 13379 ;; *************** function ___llmod *****************
 13380 ;; Defined at:
 13381 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 13382 ;; Parameters:    Size  Location     Type
 13383 ;;  dividend        4   36[BANK1 ] unsigned long 
 13384 ;;  divisor         4   40[BANK1 ] unsigned long 
 13385 ;; Auto vars:     Size  Location     Type
 13386 ;;  counter         1   44[BANK1 ] unsigned char 
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  4   36[BANK1 ] unsigned long 
 13389 ;; Registers used:
 13390 ;;		wreg, status,2, status,0
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13396 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13397 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13399 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13400 ;;Total ram usage:        9 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:   14
 13403 ;; This function calls:
 13404 ;;		Nothing
 13405 ;; This function is called by:
 13406 ;;		_printf
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           	psect	text32
 13411  015748                     __ptext32:
 13412                           	opt stack 0
 13413  015748                     ___llmod:
 13414                           	opt stack 13
 13415                           
 13416                           ;incstack = 0
 13417  015748  0101               	movlb	1	; () banked
 13418  01574A  5128               	movf	___llmod@divisor& (0+255),w,b
 13419  01574C  1129               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 13420  01574E  112A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 13421  015750  112B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 13422  015752  B4D8               	btfsc	status,2,c
 13423  015754  D024               	goto	l1629
 13424                           
 13425                           ; BSR set to: 1
 13426  015756  0E01               	movlw	1
 13427  015758  6F2C               	movwf	___llmod@counter& (0+255),b
 13428  01575A  D006               	goto	l1624
 13429  01575C                     
 13430                           ; BSR set to: 1
 13431                           
 13432                           ; BSR set to: 1
 13433  01575C  90D8               	bcf	status,0,c
 13434  01575E  3728               	rlcf	___llmod@divisor& (0+255),f,b
 13435  015760  3729               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 13436  015762  372A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 13437  015764  372B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 13438  015766  2B2C               	incf	___llmod@counter& (0+255),f,b
 13439  015768                     l1624:
 13440                           
 13441                           ; BSR set to: 1
 13442                           
 13443                           ; BSR set to: 1
 13444  015768  AF2B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 13445  01576A  D7F8               	goto	l1625
 13446  01576C                     u9990:
 13447                           
 13448                           ; BSR set to: 1
 13449                           
 13450                           ; BSR set to: 1
 13451                           
 13452                           ; BSR set to: 1
 13453  01576C  5128               	movf	___llmod@divisor& (0+255),w,b
 13454  01576E  5D24               	subwf	___llmod@dividend& (0+255),w,b
 13455  015770  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13456  015772  5925               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 13457  015774  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13458  015776  5926               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 13459  015778  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13460  01577A  5927               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 13461  01577C  A0D8               	btfss	status,0,c
 13462  01577E  D008               	goto	l1628
 13463                           
 13464                           ; BSR set to: 1
 13465  015780  5128               	movf	___llmod@divisor& (0+255),w,b
 13466  015782  5F24               	subwf	___llmod@dividend& (0+255),f,b
 13467  015784  5129               	movf	(___llmod@divisor+1)& (0+255),w,b
 13468  015786  5B25               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 13469  015788  512A               	movf	(___llmod@divisor+2)& (0+255),w,b
 13470  01578A  5B26               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 13471  01578C  512B               	movf	(___llmod@divisor+3)& (0+255),w,b
 13472  01578E  5B27               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 13473  015790                     l1628:
 13474                           
 13475                           ; BSR set to: 1
 13476                           
 13477                           ; BSR set to: 1
 13478  015790  90D8               	bcf	status,0,c
 13479  015792  332B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 13480  015794  332A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 13481  015796  3329               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 13482  015798  3328               	rrcf	___llmod@divisor& (0+255),f,b
 13483                           
 13484                           ; BSR set to: 1
 13485  01579A  2F2C               	decfsz	___llmod@counter& (0+255),f,b
 13486  01579C  D7E7               	goto	u9990
 13487  01579E                     l1629:
 13488                           
 13489                           ; BSR set to: 1
 13490                           
 13491                           ; BSR set to: 1
 13492  01579E  C124  F124         	movff	___llmod@dividend,?___llmod
 13493  0157A2  C125  F125         	movff	___llmod@dividend+1,?___llmod+1
 13494  0157A6  C126  F126         	movff	___llmod@dividend+2,?___llmod+2
 13495  0157AA  C127  F127         	movff	___llmod@dividend+3,?___llmod+3
 13496                           
 13497                           ; BSR set to: 1
 13498  0157AE  0012               	return		;funcret
 13499  0157B0                     __end_of___llmod:
 13500                           	opt stack 0
 13501                           tblptru	equ	0xFF8
 13502                           tblptrh	equ	0xFF7
 13503                           tblptrl	equ	0xFF6
 13504                           tablat	equ	0xFF5
 13505                           prodh	equ	0xFF4
 13506                           prodl	equ	0xFF3
 13507                           intcon	equ	0xFF2
 13508                           postinc0	equ	0xFEE
 13509                           wreg	equ	0xFE8
 13510                           indf1	equ	0xFE7
 13511                           postdec1	equ	0xFE5
 13512                           fsr1h	equ	0xFE2
 13513                           fsr1l	equ	0xFE1
 13514                           indf2	equ	0xFDF
 13515                           postinc2	equ	0xFDE
 13516                           postdec2	equ	0xFDD
 13517                           fsr2h	equ	0xFDA
 13518                           fsr2l	equ	0xFD9
 13519                           status	equ	0xFD8
 13520                           
 13521 ;; *************** function ___lldiv *****************
 13522 ;; Defined at:
 13523 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 13524 ;; Parameters:    Size  Location     Type
 13525 ;;  dividend        4   23[BANK1 ] unsigned long 
 13526 ;;  divisor         4   27[BANK1 ] unsigned long 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;  quotient        4   31[BANK1 ] unsigned long 
 13529 ;;  counter         1   35[BANK1 ] unsigned char 
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  4   23[BANK1 ] unsigned long 
 13532 ;; Registers used:
 13533 ;;		wreg, status,2, status,0
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13539 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13540 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;Total ram usage:       13 bytes
 13544 ;; Hardware stack levels used:    1
 13545 ;; Hardware stack levels required when called:   14
 13546 ;; This function calls:
 13547 ;;		Nothing
 13548 ;; This function is called by:
 13549 ;;		_printf
 13550 ;; This function uses a non-reentrant model
 13551 ;;
 13552                           
 13553                           	psect	text33
 13554  015312                     __ptext33:
 13555                           	opt stack 0
 13556  015312                     ___lldiv:
 13557                           	opt stack 13
 13558                           
 13559                           ; BSR set to: 1
 13560                           ;incstack = 0
 13561  015312  0E00               	movlw	0
 13562  015314  0101               	movlb	1	; () banked
 13563  015316  6F1F               	movwf	___lldiv@quotient& (0+255),b
 13564  015318  0E00               	movlw	0
 13565  01531A  6F20               	movwf	(___lldiv@quotient+1)& (0+255),b
 13566  01531C  0E00               	movlw	0
 13567  01531E  6F21               	movwf	(___lldiv@quotient+2)& (0+255),b
 13568  015320  0E00               	movlw	0
 13569  015322  6F22               	movwf	(___lldiv@quotient+3)& (0+255),b
 13570                           
 13571                           ; BSR set to: 1
 13572  015324  511B               	movf	___lldiv@divisor& (0+255),w,b
 13573  015326  111C               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 13574  015328  111D               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 13575  01532A  111E               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 13576  01532C  B4D8               	btfsc	status,2,c
 13577  01532E  D02A               	goto	l1619
 13578                           
 13579                           ; BSR set to: 1
 13580  015330  0E01               	movlw	1
 13581  015332  6F23               	movwf	___lldiv@counter& (0+255),b
 13582  015334  D006               	goto	l1614
 13583  015336                     
 13584                           ; BSR set to: 1
 13585                           
 13586                           ; BSR set to: 1
 13587  015336  90D8               	bcf	status,0,c
 13588  015338  371B               	rlcf	___lldiv@divisor& (0+255),f,b
 13589  01533A  371C               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 13590  01533C  371D               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 13591  01533E  371E               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 13592  015340  2B23               	incf	___lldiv@counter& (0+255),f,b
 13593  015342                     l1614:
 13594                           
 13595                           ; BSR set to: 1
 13596                           
 13597                           ; BSR set to: 1
 13598  015342  AF1E               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 13599  015344  D7F8               	goto	l1615
 13600  015346                     u9960:
 13601                           
 13602                           ; BSR set to: 1
 13603                           
 13604                           ; BSR set to: 1
 13605                           
 13606                           ; BSR set to: 1
 13607  015346  90D8               	bcf	status,0,c
 13608  015348  371F               	rlcf	___lldiv@quotient& (0+255),f,b
 13609  01534A  3720               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 13610  01534C  3721               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 13611  01534E  3722               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 13612                           
 13613                           ; BSR set to: 1
 13614  015350  511B               	movf	___lldiv@divisor& (0+255),w,b
 13615  015352  5D17               	subwf	___lldiv@dividend& (0+255),w,b
 13616  015354  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13617  015356  5918               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 13618  015358  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13619  01535A  5919               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 13620  01535C  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13621  01535E  591A               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 13622  015360  A0D8               	btfss	status,0,c
 13623  015362  D009               	goto	l1618
 13624                           
 13625                           ; BSR set to: 1
 13626  015364  511B               	movf	___lldiv@divisor& (0+255),w,b
 13627  015366  5F17               	subwf	___lldiv@dividend& (0+255),f,b
 13628  015368  511C               	movf	(___lldiv@divisor+1)& (0+255),w,b
 13629  01536A  5B18               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 13630  01536C  511D               	movf	(___lldiv@divisor+2)& (0+255),w,b
 13631  01536E  5B19               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 13632  015370  511E               	movf	(___lldiv@divisor+3)& (0+255),w,b
 13633  015372  5B1A               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 13634                           
 13635                           ; BSR set to: 1
 13636  015374  811F               	bsf	___lldiv@quotient& (0+255),0,b
 13637  015376                     l1618:
 13638                           
 13639                           ; BSR set to: 1
 13640                           
 13641                           ; BSR set to: 1
 13642  015376  90D8               	bcf	status,0,c
 13643  015378  331E               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 13644  01537A  331D               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 13645  01537C  331C               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 13646  01537E  331B               	rrcf	___lldiv@divisor& (0+255),f,b
 13647                           
 13648                           ; BSR set to: 1
 13649  015380  2F23               	decfsz	___lldiv@counter& (0+255),f,b
 13650  015382  D7E1               	goto	u9960
 13651  015384                     l1619:
 13652                           
 13653                           ; BSR set to: 1
 13654                           
 13655                           ; BSR set to: 1
 13656  015384  C11F  F117         	movff	___lldiv@quotient,?___lldiv
 13657  015388  C120  F118         	movff	___lldiv@quotient+1,?___lldiv+1
 13658  01538C  C121  F119         	movff	___lldiv@quotient+2,?___lldiv+2
 13659  015390  C122  F11A         	movff	___lldiv@quotient+3,?___lldiv+3
 13660                           
 13661                           ; BSR set to: 1
 13662  015394  0012               	return		;funcret
 13663  015396                     __end_of___lldiv:
 13664                           	opt stack 0
 13665                           tblptru	equ	0xFF8
 13666                           tblptrh	equ	0xFF7
 13667                           tblptrl	equ	0xFF6
 13668                           tablat	equ	0xFF5
 13669                           prodh	equ	0xFF4
 13670                           prodl	equ	0xFF3
 13671                           intcon	equ	0xFF2
 13672                           postinc0	equ	0xFEE
 13673                           wreg	equ	0xFE8
 13674                           indf1	equ	0xFE7
 13675                           postdec1	equ	0xFE5
 13676                           fsr1h	equ	0xFE2
 13677                           fsr1l	equ	0xFE1
 13678                           indf2	equ	0xFDF
 13679                           postinc2	equ	0xFDE
 13680                           postdec2	equ	0xFDD
 13681                           fsr2h	equ	0xFDA
 13682                           fsr2l	equ	0xFD9
 13683                           status	equ	0xFD8
 13684                           
 13685 ;; *************** function ___fttol *****************
 13686 ;; Defined at:
 13687 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  f1              3   85[BANK1 ] float 
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;  lval            4   95[BANK1 ] unsigned long 
 13692 ;;  exp1            1   99[BANK1 ] unsigned char 
 13693 ;;  sign1           1   94[BANK1 ] unsigned char 
 13694 ;; Return value:  Size  Location     Type
 13695 ;;                  4   85[BANK1 ] long 
 13696 ;; Registers used:
 13697 ;;		wreg, status,2, status,0
 13698 ;; Tracked objects:
 13699 ;;		On entry : 0/0
 13700 ;;		On exit  : 0/0
 13701 ;;		Unchanged: 0/0
 13702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13703 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13704 ;;      Locals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13705 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13706 ;;      Totals:         0       0      15       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13707 ;;Total ram usage:       15 bytes
 13708 ;; Hardware stack levels used:    1
 13709 ;; Hardware stack levels required when called:   14
 13710 ;; This function calls:
 13711 ;;		Nothing
 13712 ;; This function is called by:
 13713 ;;		_printf
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text34
 13718  0144A4                     __ptext34:
 13719                           	opt stack 0
 13720  0144A4                     ___fttol:
 13721                           	opt stack 13
 13722                           
 13723                           ; BSR set to: 1
 13724                           ;incstack = 0
 13725  0144A4  C157  F159         	movff	___fttol@f1+2,??___fttol
 13726  0144A8  0101               	movlb	1	; () banked
 13727  0144AA  6B5A               	clrf	(??___fttol+1)& (0+255),b
 13728  0144AC  6B5B               	clrf	(??___fttol+2)& (0+255),b
 13729  0144AE  3556               	rlcf	(___fttol@f1+1)& (0+255),w,b
 13730  0144B0  3759               	rlcf	??___fttol& (0+255),f,b
 13731  0144B2  E301               	bnc	u9871
 13732  0144B4  815A               	bsf	(??___fttol+1)& (0+255),0,b
 13733  0144B6                     u9871:
 13734  0144B6  5159               	movf	??___fttol& (0+255),w,b
 13735  0144B8  6F63               	movwf	___fttol@exp1& (0+255),b
 13736  0144BA  5163               	movf	___fttol@exp1& (0+255),w,b
 13737  0144BC  A4D8               	btfss	status,2,c
 13738  0144BE  D009               	goto	l1573
 13739                           
 13740                           ; BSR set to: 1
 13741  0144C0  0E00               	movlw	0
 13742  0144C2  6F55               	movwf	?___fttol& (0+255),b
 13743  0144C4  0E00               	movlw	0
 13744  0144C6  6F56               	movwf	(?___fttol+1)& (0+255),b
 13745  0144C8  0E00               	movlw	0
 13746  0144CA  6F57               	movwf	(?___fttol+2)& (0+255),b
 13747  0144CC  0E00               	movlw	0
 13748  0144CE  6F58               	movwf	(?___fttol+3)& (0+255),b
 13749                           
 13750                           ; BSR set to: 1
 13751  0144D0  0012               	return	
 13752  0144D2                     l1573:
 13753                           
 13754                           ; BSR set to: 1
 13755                           
 13756                           ; BSR set to: 1
 13757  0144D2  0E17               	movlw	23
 13758  0144D4  6F59               	movwf	??___fttol& (0+255),b
 13759  0144D6  C155  F15A         	movff	___fttol@f1,??___fttol+1
 13760  0144DA  C156  F15B         	movff	___fttol@f1+1,??___fttol+2
 13761  0144DE  C157  F15C         	movff	___fttol@f1+2,??___fttol+3
 13762  0144E2  2959               	incf	??___fttol& (0+255),w,b
 13763  0144E4  6F5D               	movwf	(??___fttol+4)& (0+255),b
 13764  0144E6  D004               	goto	u9890
 13765  0144E8                     u9895:
 13766  0144E8  90D8               	bcf	status,0,c
 13767  0144EA  335C               	rrcf	(??___fttol+3)& (0+255),f,b
 13768  0144EC  335B               	rrcf	(??___fttol+2)& (0+255),f,b
 13769  0144EE  335A               	rrcf	(??___fttol+1)& (0+255),f,b
 13770  0144F0                     u9890:
 13771  0144F0  2F5D               	decfsz	(??___fttol+4)& (0+255),f,b
 13772  0144F2  D7FA               	goto	u9895
 13773  0144F4  0101               	movlb	1	; () banked
 13774  0144F6  515A               	movf	(??___fttol+1)& (0+255),w,b
 13775  0144F8  6F5E               	movwf	___fttol@sign1& (0+255),b
 13776                           
 13777                           ; BSR set to: 1
 13778  0144FA  8F56               	bsf	(___fttol@f1+1)& (0+255),7,b
 13779                           
 13780                           ; BSR set to: 1
 13781  0144FC  0EFF               	movlw	255
 13782  0144FE  1755               	andwf	___fttol@f1& (0+255),f,b
 13783  014500  0EFF               	movlw	255
 13784  014502  1756               	andwf	(___fttol@f1+1)& (0+255),f,b
 13785  014504  0E00               	movlw	0
 13786  014506  1757               	andwf	(___fttol@f1+2)& (0+255),f,b
 13787                           
 13788                           ; BSR set to: 1
 13789  014508  5155               	movf	___fttol@f1& (0+255),w,b
 13790  01450A  6F5F               	movwf	___fttol@lval& (0+255),b
 13791  01450C  5156               	movf	(___fttol@f1+1)& (0+255),w,b
 13792  01450E  6F60               	movwf	(___fttol@lval+1)& (0+255),b
 13793  014510  5157               	movf	(___fttol@f1+2)& (0+255),w,b
 13794  014512  6F61               	movwf	(___fttol@lval+2)& (0+255),b
 13795  014514  6B62               	clrf	(___fttol@lval+3)& (0+255),b
 13796                           
 13797                           ; BSR set to: 1
 13798  014516  0E8E               	movlw	142
 13799  014518  5F63               	subwf	___fttol@exp1& (0+255),f,b
 13800                           
 13801                           ; BSR set to: 1
 13802  01451A  AF63               	btfss	___fttol@exp1& (0+255),7,b
 13803  01451C  D016               	goto	l1575
 13804                           
 13805                           ; BSR set to: 1
 13806  01451E  5163               	movf	___fttol@exp1& (0+255),w,b
 13807  014520  0A80               	xorlw	128
 13808  014522  0F8F               	addlw	143
 13809  014524  B0D8               	btfsc	status,0,c
 13810  014526  D009               	goto	l1576
 13811                           
 13812                           ; BSR set to: 1
 13813  014528  0E00               	movlw	0
 13814  01452A  6F55               	movwf	?___fttol& (0+255),b
 13815  01452C  0E00               	movlw	0
 13816  01452E  6F56               	movwf	(?___fttol+1)& (0+255),b
 13817  014530  0E00               	movlw	0
 13818  014532  6F57               	movwf	(?___fttol+2)& (0+255),b
 13819  014534  0E00               	movlw	0
 13820  014536  6F58               	movwf	(?___fttol+3)& (0+255),b
 13821                           
 13822                           ; BSR set to: 1
 13823  014538  0012               	return	
 13824  01453A                     l1576:
 13825                           
 13826                           ; BSR set to: 1
 13827                           
 13828                           ; BSR set to: 1
 13829                           
 13830                           ; BSR set to: 1
 13831  01453A  90D8               	bcf	status,0,c
 13832  01453C  3362               	rrcf	(___fttol@lval+3)& (0+255),f,b
 13833  01453E  3361               	rrcf	(___fttol@lval+2)& (0+255),f,b
 13834  014540  3360               	rrcf	(___fttol@lval+1)& (0+255),f,b
 13835  014542  335F               	rrcf	___fttol@lval& (0+255),f,b
 13836                           
 13837                           ; BSR set to: 1
 13838  014544  3F63               	incfsz	___fttol@exp1& (0+255),f,b
 13839  014546  D7F9               	goto	l1576
 13840                           
 13841                           ; BSR set to: 1
 13842  014548  D015               	goto	u9930
 13843  01454A                     l1575:
 13844                           
 13845                           ; BSR set to: 1
 13846                           
 13847                           ; BSR set to: 1
 13848  01454A  0E17               	movlw	23
 13849  01454C  6563               	cpfsgt	___fttol@exp1& (0+255),b
 13850  01454E  D00F               	goto	l1581
 13851                           
 13852                           ; BSR set to: 1
 13853  014550  0E00               	movlw	0
 13854  014552  6F55               	movwf	?___fttol& (0+255),b
 13855  014554  0E00               	movlw	0
 13856  014556  6F56               	movwf	(?___fttol+1)& (0+255),b
 13857  014558  0E00               	movlw	0
 13858  01455A  6F57               	movwf	(?___fttol+2)& (0+255),b
 13859  01455C  0E00               	movlw	0
 13860  01455E  6F58               	movwf	(?___fttol+3)& (0+255),b
 13861                           
 13862                           ; BSR set to: 1
 13863  014560  0012               	return	
 13864  014562                     
 13865                           ; BSR set to: 1
 13866                           
 13867                           ; BSR set to: 1
 13868  014562  90D8               	bcf	status,0,c
 13869  014564  375F               	rlcf	___fttol@lval& (0+255),f,b
 13870  014566  3760               	rlcf	(___fttol@lval+1)& (0+255),f,b
 13871  014568  3761               	rlcf	(___fttol@lval+2)& (0+255),f,b
 13872  01456A  3762               	rlcf	(___fttol@lval+3)& (0+255),f,b
 13873  01456C  0763               	decf	___fttol@exp1& (0+255),f,b
 13874  01456E                     l1581:
 13875                           
 13876                           ; BSR set to: 1
 13877                           
 13878                           ; BSR set to: 1
 13879  01456E  5163               	movf	___fttol@exp1& (0+255),w,b
 13880  014570  A4D8               	btfss	status,2,c
 13881  014572  D7F7               	goto	l1582
 13882  014574                     u9930:
 13883                           
 13884                           ; BSR set to: 1
 13885                           
 13886                           ; BSR set to: 1
 13887                           
 13888                           ; BSR set to: 1
 13889  014574  515E               	movf	___fttol@sign1& (0+255),w,b
 13890  014576  B4D8               	btfsc	status,2,c
 13891  014578  D008               	goto	l1584
 13892                           
 13893                           ; BSR set to: 1
 13894  01457A  1F62               	comf	(___fttol@lval+3)& (0+255),f,b
 13895  01457C  1F61               	comf	(___fttol@lval+2)& (0+255),f,b
 13896  01457E  1F60               	comf	(___fttol@lval+1)& (0+255),f,b
 13897  014580  6D5F               	negf	___fttol@lval& (0+255),b
 13898  014582  0E00               	movlw	0
 13899  014584  2360               	addwfc	(___fttol@lval+1)& (0+255),f,b
 13900  014586  2361               	addwfc	(___fttol@lval+2)& (0+255),f,b
 13901  014588  2362               	addwfc	(___fttol@lval+3)& (0+255),f,b
 13902  01458A                     l1584:
 13903                           
 13904                           ; BSR set to: 1
 13905                           
 13906                           ; BSR set to: 1
 13907  01458A  C15F  F155         	movff	___fttol@lval,?___fttol
 13908  01458E  C160  F156         	movff	___fttol@lval+1,?___fttol+1
 13909  014592  C161  F157         	movff	___fttol@lval+2,?___fttol+2
 13910  014596  C162  F158         	movff	___fttol@lval+3,?___fttol+3
 13911  01459A  0012               	return	
 13912  01459C                     __end_of___fttol:
 13913                           	opt stack 0
 13914                           tblptru	equ	0xFF8
 13915                           tblptrh	equ	0xFF7
 13916                           tblptrl	equ	0xFF6
 13917                           tablat	equ	0xFF5
 13918                           prodh	equ	0xFF4
 13919                           prodl	equ	0xFF3
 13920                           intcon	equ	0xFF2
 13921                           postinc0	equ	0xFEE
 13922                           wreg	equ	0xFE8
 13923                           indf1	equ	0xFE7
 13924                           postdec1	equ	0xFE5
 13925                           fsr1h	equ	0xFE2
 13926                           fsr1l	equ	0xFE1
 13927                           indf2	equ	0xFDF
 13928                           postinc2	equ	0xFDE
 13929                           postdec2	equ	0xFDD
 13930                           fsr2h	equ	0xFDA
 13931                           fsr2l	equ	0xFD9
 13932                           status	equ	0xFD8
 13933                           
 13934 ;; *************** function ___ftsub *****************
 13935 ;; Defined at:
 13936 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 13937 ;; Parameters:    Size  Location     Type
 13938 ;;  f1              3   55[BANK1 ] float 
 13939 ;;  f2              3   58[BANK1 ] float 
 13940 ;; Auto vars:     Size  Location     Type
 13941 ;;		None
 13942 ;; Return value:  Size  Location     Type
 13943 ;;                  3   55[BANK1 ] float 
 13944 ;; Registers used:
 13945 ;;		wreg, status,2, status,0, cstack
 13946 ;; Tracked objects:
 13947 ;;		On entry : 0/0
 13948 ;;		On exit  : 0/0
 13949 ;;		Unchanged: 0/0
 13950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 13951 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13954 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13955 ;;Total ram usage:        6 bytes
 13956 ;; Hardware stack levels used:    1
 13957 ;; Hardware stack levels required when called:   16
 13958 ;; This function calls:
 13959 ;;		___ftadd
 13960 ;; This function is called by:
 13961 ;;		_printf
 13962 ;; This function uses a non-reentrant model
 13963 ;;
 13964                           
 13965                           	psect	text35
 13966  015D5A                     __ptext35:
 13967                           	opt stack 0
 13968  015D5A                     ___ftsub:
 13969                           	opt stack 11
 13970                           
 13971                           ; BSR set to: 1
 13972                           ;incstack = 0
 13973  015D5A  0101               	movlb	1	; () banked
 13974  015D5C  513A               	movf	___ftsub@f2& (0+255),w,b
 13975  015D5E  113B               	iorwf	(___ftsub@f2+1)& (0+255),w,b
 13976  015D60  113C               	iorwf	(___ftsub@f2+2)& (0+255),w,b
 13977  015D62  B4D8               	btfsc	status,2,c
 13978  015D64  D006               	goto	l1569
 13979                           
 13980                           ; BSR set to: 1
 13981  015D66  0E00               	movlw	0
 13982  015D68  1B3A               	xorwf	___ftsub@f2& (0+255),f,b
 13983  015D6A  0E00               	movlw	0
 13984  015D6C  1B3B               	xorwf	(___ftsub@f2+1)& (0+255),f,b
 13985  015D6E  0E80               	movlw	128
 13986  015D70  1B3C               	xorwf	(___ftsub@f2+2)& (0+255),f,b
 13987  015D72                     l1569:
 13988                           
 13989                           ; BSR set to: 1
 13990                           
 13991                           ; BSR set to: 1
 13992  015D72  C137  F12B         	movff	___ftsub@f1,___ftadd@f1
 13993  015D76  C138  F12C         	movff	___ftsub@f1+1,___ftadd@f1+1
 13994  015D7A  C139  F12D         	movff	___ftsub@f1+2,___ftadd@f1+2
 13995  015D7E  C13A  F12E         	movff	___ftsub@f2,___ftadd@f2
 13996  015D82  C13B  F12F         	movff	___ftsub@f2+1,___ftadd@f2+1
 13997  015D86  C13C  F130         	movff	___ftsub@f2+2,___ftadd@f2+2
 13998  015D8A  ECF2  F09C         	call	___ftadd	;wreg free
 13999  015D8E  C12B  F137         	movff	?___ftadd,?___ftsub
 14000  015D92  C12C  F138         	movff	?___ftadd+1,?___ftsub+1
 14001  015D96  C12D  F139         	movff	?___ftadd+2,?___ftsub+2
 14002  015D9A  0012               	return	
 14003  015D9C                     __end_of___ftsub:
 14004                           	opt stack 0
 14005                           tblptru	equ	0xFF8
 14006                           tblptrh	equ	0xFF7
 14007                           tblptrl	equ	0xFF6
 14008                           tablat	equ	0xFF5
 14009                           prodh	equ	0xFF4
 14010                           prodl	equ	0xFF3
 14011                           intcon	equ	0xFF2
 14012                           postinc0	equ	0xFEE
 14013                           wreg	equ	0xFE8
 14014                           indf1	equ	0xFE7
 14015                           postdec1	equ	0xFE5
 14016                           fsr1h	equ	0xFE2
 14017                           fsr1l	equ	0xFE1
 14018                           indf2	equ	0xFDF
 14019                           postinc2	equ	0xFDE
 14020                           postdec2	equ	0xFDD
 14021                           fsr2h	equ	0xFDA
 14022                           fsr2l	equ	0xFD9
 14023                           status	equ	0xFD8
 14024                           
 14025 ;; *************** function ___ftadd *****************
 14026 ;; Defined at:
 14027 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 14028 ;; Parameters:    Size  Location     Type
 14029 ;;  f1              3   43[BANK1 ] float 
 14030 ;;  f2              3   46[BANK1 ] float 
 14031 ;; Auto vars:     Size  Location     Type
 14032 ;;  exp1            1   54[BANK1 ] unsigned char 
 14033 ;;  exp2            1   53[BANK1 ] unsigned char 
 14034 ;;  sign            1   52[BANK1 ] unsigned char 
 14035 ;; Return value:  Size  Location     Type
 14036 ;;                  3   43[BANK1 ] float 
 14037 ;; Registers used:
 14038 ;;		wreg, status,2, status,0, cstack
 14039 ;; Tracked objects:
 14040 ;;		On entry : 0/0
 14041 ;;		On exit  : 0/0
 14042 ;;		Unchanged: 0/0
 14043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14044 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14045 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14046 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14047 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14048 ;;Total ram usage:       12 bytes
 14049 ;; Hardware stack levels used:    1
 14050 ;; Hardware stack levels required when called:   15
 14051 ;; This function calls:
 14052 ;;		___ftpack
 14053 ;; This function is called by:
 14054 ;;		_ringBufferLUT
 14055 ;;		_printf
 14056 ;;		___ftsub
 14057 ;; This function uses a non-reentrant model
 14058 ;;
 14059                           
 14060                           	psect	text36
 14061  0139E4                     __ptext36:
 14062                           	opt stack 0
 14063  0139E4                     ___ftadd:
 14064                           	opt stack 11
 14065                           
 14066                           ;incstack = 0
 14067  0139E4  C12D  F131         	movff	___ftadd@f1+2,??___ftadd
 14068  0139E8  0101               	movlb	1	; () banked
 14069  0139EA  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14070  0139EC  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14071  0139EE  352C               	rlcf	(___ftadd@f1+1)& (0+255),w,b
 14072  0139F0  3731               	rlcf	??___ftadd& (0+255),f,b
 14073  0139F2  E301               	bnc	u8971
 14074  0139F4  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14075  0139F6                     u8971:
 14076  0139F6  5131               	movf	??___ftadd& (0+255),w,b
 14077  0139F8  6F36               	movwf	___ftadd@exp1& (0+255),b
 14078  0139FA  C130  F131         	movff	___ftadd@f2+2,??___ftadd
 14079  0139FE  6B32               	clrf	(??___ftadd+1)& (0+255),b
 14080  013A00  6B33               	clrf	(??___ftadd+2)& (0+255),b
 14081  013A02  352F               	rlcf	(___ftadd@f2+1)& (0+255),w,b
 14082  013A04  3731               	rlcf	??___ftadd& (0+255),f,b
 14083  013A06  E301               	bnc	u8981
 14084  013A08  8132               	bsf	(??___ftadd+1)& (0+255),0,b
 14085  013A0A                     u8981:
 14086  013A0A  5131               	movf	??___ftadd& (0+255),w,b
 14087  013A0C  6F35               	movwf	___ftadd@exp2& (0+255),b
 14088                           
 14089                           ; BSR set to: 1
 14090  013A0E  5136               	movf	___ftadd@exp1& (0+255),w,b
 14091  013A10  B4D8               	btfsc	status,2,c
 14092  013A12  D00B               	goto	u9010
 14093                           
 14094                           ; BSR set to: 1
 14095  013A14  5135               	movf	___ftadd@exp2& (0+255),w,b
 14096  013A16  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 14097  013A18  B0D8               	btfsc	status,0,c
 14098  013A1A  D00E               	goto	l1487
 14099                           
 14100                           ; BSR set to: 1
 14101  013A1C  5136               	movf	___ftadd@exp1& (0+255),w,b
 14102  013A1E  0800               	sublw	0
 14103  013A20  2535               	addwf	___ftadd@exp2& (0+255),w,b
 14104  013A22  6F31               	movwf	??___ftadd& (0+255),b
 14105  013A24  0E18               	movlw	24
 14106  013A26  6531               	cpfsgt	??___ftadd& (0+255),b
 14107  013A28  D007               	goto	l1487
 14108  013A2A                     u9010:
 14109                           
 14110                           ; BSR set to: 1
 14111  013A2A  C12E  F12B         	movff	___ftadd@f2,?___ftadd
 14112  013A2E  C12F  F12C         	movff	___ftadd@f2+1,?___ftadd+1
 14113  013A32  C130  F12D         	movff	___ftadd@f2+2,?___ftadd+2
 14114  013A36  0012               	return	
 14115  013A38                     l1487:
 14116                           
 14117                           ; BSR set to: 1
 14118                           
 14119                           ; BSR set to: 1
 14120  013A38  5135               	movf	___ftadd@exp2& (0+255),w,b
 14121  013A3A  B4D8               	btfsc	status,2,c
 14122  013A3C  D00B               	goto	u9040
 14123                           
 14124                           ; BSR set to: 1
 14125  013A3E  5136               	movf	___ftadd@exp1& (0+255),w,b
 14126  013A40  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 14127  013A42  B0D8               	btfsc	status,0,c
 14128  013A44  D00E               	goto	l1491
 14129                           
 14130                           ; BSR set to: 1
 14131  013A46  5135               	movf	___ftadd@exp2& (0+255),w,b
 14132  013A48  0800               	sublw	0
 14133  013A4A  2536               	addwf	___ftadd@exp1& (0+255),w,b
 14134  013A4C  6F31               	movwf	??___ftadd& (0+255),b
 14135  013A4E  0E18               	movlw	24
 14136  013A50  6531               	cpfsgt	??___ftadd& (0+255),b
 14137  013A52  D007               	goto	l1491
 14138  013A54                     u9040:
 14139                           
 14140                           ; BSR set to: 1
 14141  013A54  C12B  F12B         	movff	___ftadd@f1,?___ftadd
 14142  013A58  C12C  F12C         	movff	___ftadd@f1+1,?___ftadd+1
 14143  013A5C  C12D  F12D         	movff	___ftadd@f1+2,?___ftadd+2
 14144  013A60  0012               	return	
 14145  013A62                     l1491:
 14146                           
 14147                           ; BSR set to: 1
 14148                           
 14149                           ; BSR set to: 1
 14150  013A62  0E06               	movlw	6
 14151  013A64  6F34               	movwf	___ftadd@sign& (0+255),b
 14152                           
 14153                           ; BSR set to: 1
 14154  013A66  BF2D               	btfsc	(___ftadd@f1+2)& (0+255),7,b
 14155                           
 14156                           ; BSR set to: 1
 14157  013A68  8F34               	bsf	___ftadd@sign& (0+255),7,b
 14158                           
 14159                           ; BSR set to: 1
 14160                           
 14161                           ; BSR set to: 1
 14162  013A6A  BF30               	btfsc	(___ftadd@f2+2)& (0+255),7,b
 14163                           
 14164                           ; BSR set to: 1
 14165  013A6C  8D34               	bsf	___ftadd@sign& (0+255),6,b
 14166                           
 14167                           ; BSR set to: 1
 14168  013A6E  8F2C               	bsf	(___ftadd@f1+1)& (0+255),7,b
 14169                           
 14170                           ; BSR set to: 1
 14171  013A70  0EFF               	movlw	255
 14172  013A72  172B               	andwf	___ftadd@f1& (0+255),f,b
 14173  013A74  0EFF               	movlw	255
 14174  013A76  172C               	andwf	(___ftadd@f1+1)& (0+255),f,b
 14175  013A78  0E00               	movlw	0
 14176  013A7A  172D               	andwf	(___ftadd@f1+2)& (0+255),f,b
 14177  013A7C  8F2F               	bsf	(___ftadd@f2+1)& (0+255),7,b
 14178                           
 14179                           ; BSR set to: 1
 14180  013A7E  0EFF               	movlw	255
 14181  013A80  172E               	andwf	___ftadd@f2& (0+255),f,b
 14182  013A82  0EFF               	movlw	255
 14183  013A84  172F               	andwf	(___ftadd@f2+1)& (0+255),f,b
 14184  013A86  0E00               	movlw	0
 14185  013A88  1730               	andwf	(___ftadd@f2+2)& (0+255),f,b
 14186                           
 14187                           ; BSR set to: 1
 14188  013A8A  5135               	movf	___ftadd@exp2& (0+255),w,b
 14189  013A8C  5D36               	subwf	___ftadd@exp1& (0+255),w,b
 14190  013A8E  B0D8               	btfsc	status,0,c
 14191  013A90  D01B               	goto	l1496
 14192  013A92                     u9070:
 14193                           
 14194                           ; BSR set to: 1
 14195                           
 14196                           ; BSR set to: 1
 14197  013A92  90D8               	bcf	status,0,c
 14198  013A94  372E               	rlcf	___ftadd@f2& (0+255),f,b
 14199  013A96  372F               	rlcf	(___ftadd@f2+1)& (0+255),f,b
 14200  013A98  3730               	rlcf	(___ftadd@f2+2)& (0+255),f,b
 14201  013A9A  0735               	decf	___ftadd@exp2& (0+255),f,b
 14202                           
 14203                           ; BSR set to: 1
 14204  013A9C  5136               	movf	___ftadd@exp1& (0+255),w,b
 14205  013A9E  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 14206  013AA0  B4D8               	btfsc	status,2,c
 14207  013AA2  D00D               	goto	l1501
 14208                           
 14209                           ; BSR set to: 1
 14210  013AA4  0734               	decf	___ftadd@sign& (0+255),f,b
 14211  013AA6  C134  F131         	movff	___ftadd@sign,??___ftadd
 14212  013AAA  0E07               	movlw	7
 14213  013AAC  1731               	andwf	??___ftadd& (0+255),f,b
 14214  013AAE  B4D8               	btfsc	status,2,c
 14215  013AB0  D006               	goto	l1501
 14216  013AB2  D7EF               	goto	u9070
 14217  013AB4                     
 14218                           ; BSR set to: 1
 14219                           
 14220                           ; BSR set to: 1
 14221  013AB4  90D8               	bcf	status,0,c
 14222  013AB6  332D               	rrcf	(___ftadd@f1+2)& (0+255),f,b
 14223  013AB8  332C               	rrcf	(___ftadd@f1+1)& (0+255),f,b
 14224  013ABA  332B               	rrcf	___ftadd@f1& (0+255),f,b
 14225  013ABC  2B36               	incf	___ftadd@exp1& (0+255),f,b
 14226  013ABE                     l1501:
 14227                           
 14228                           ; BSR set to: 1
 14229                           
 14230                           ; BSR set to: 1
 14231  013ABE  5135               	movf	___ftadd@exp2& (0+255),w,b
 14232  013AC0  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 14233  013AC2  B4D8               	btfsc	status,2,c
 14234  013AC4  D01F               	goto	u9140
 14235  013AC6  D7F6               	goto	l1502
 14236  013AC8                     l1496:
 14237                           
 14238                           ; BSR set to: 1
 14239                           
 14240                           ; BSR set to: 1
 14241  013AC8  5136               	movf	___ftadd@exp1& (0+255),w,b
 14242  013ACA  5D35               	subwf	___ftadd@exp2& (0+255),w,b
 14243  013ACC  B0D8               	btfsc	status,0,c
 14244  013ACE  D01A               	goto	u9140
 14245  013AD0                     u9110:
 14246                           
 14247                           ; BSR set to: 1
 14248                           
 14249                           ; BSR set to: 1
 14250  013AD0  90D8               	bcf	status,0,c
 14251  013AD2  372B               	rlcf	___ftadd@f1& (0+255),f,b
 14252  013AD4  372C               	rlcf	(___ftadd@f1+1)& (0+255),f,b
 14253  013AD6  372D               	rlcf	(___ftadd@f1+2)& (0+255),f,b
 14254  013AD8  0736               	decf	___ftadd@exp1& (0+255),f,b
 14255                           
 14256                           ; BSR set to: 1
 14257  013ADA  5136               	movf	___ftadd@exp1& (0+255),w,b
 14258  013ADC  1935               	xorwf	___ftadd@exp2& (0+255),w,b
 14259  013ADE  B4D8               	btfsc	status,2,c
 14260  013AE0  D00D               	goto	l1510
 14261                           
 14262                           ; BSR set to: 1
 14263  013AE2  0734               	decf	___ftadd@sign& (0+255),f,b
 14264  013AE4  C134  F131         	movff	___ftadd@sign,??___ftadd
 14265  013AE8  0E07               	movlw	7
 14266  013AEA  1731               	andwf	??___ftadd& (0+255),f,b
 14267  013AEC  B4D8               	btfsc	status,2,c
 14268  013AEE  D006               	goto	l1510
 14269  013AF0  D7EF               	goto	u9110
 14270  013AF2                     
 14271                           ; BSR set to: 1
 14272                           
 14273                           ; BSR set to: 1
 14274  013AF2  90D8               	bcf	status,0,c
 14275  013AF4  3330               	rrcf	(___ftadd@f2+2)& (0+255),f,b
 14276  013AF6  332F               	rrcf	(___ftadd@f2+1)& (0+255),f,b
 14277  013AF8  332E               	rrcf	___ftadd@f2& (0+255),f,b
 14278  013AFA  2B35               	incf	___ftadd@exp2& (0+255),f,b
 14279  013AFC                     l1510:
 14280                           
 14281                           ; BSR set to: 1
 14282                           
 14283                           ; BSR set to: 1
 14284  013AFC  5135               	movf	___ftadd@exp2& (0+255),w,b
 14285  013AFE  1936               	xorwf	___ftadd@exp1& (0+255),w,b
 14286  013B00  A4D8               	btfss	status,2,c
 14287  013B02  D7F7               	goto	l1511
 14288  013B04                     u9140:
 14289                           
 14290                           ; BSR set to: 1
 14291                           
 14292                           ; BSR set to: 1
 14293                           
 14294                           ; BSR set to: 1
 14295  013B04  AF34               	btfss	___ftadd@sign& (0+255),7,b
 14296  013B06  D00C               	goto	l1513
 14297                           
 14298                           ; BSR set to: 1
 14299  013B08  0EFF               	movlw	255
 14300  013B0A  1B2B               	xorwf	___ftadd@f1& (0+255),f,b
 14301  013B0C  0EFF               	movlw	255
 14302  013B0E  1B2C               	xorwf	(___ftadd@f1+1)& (0+255),f,b
 14303  013B10  0EFF               	movlw	255
 14304  013B12  1B2D               	xorwf	(___ftadd@f1+2)& (0+255),f,b
 14305  013B14  0E01               	movlw	1
 14306  013B16  272B               	addwf	___ftadd@f1& (0+255),f,b
 14307  013B18  0E00               	movlw	0
 14308  013B1A  232C               	addwfc	(___ftadd@f1+1)& (0+255),f,b
 14309  013B1C  0E00               	movlw	0
 14310  013B1E  232D               	addwfc	(___ftadd@f1+2)& (0+255),f,b
 14311  013B20                     l1513:
 14312                           
 14313                           ; BSR set to: 1
 14314  013B20  AD34               	btfss	___ftadd@sign& (0+255),6,b
 14315  013B22  D00C               	goto	l1514
 14316                           
 14317                           ; BSR set to: 1
 14318  013B24  0EFF               	movlw	255
 14319  013B26  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14320  013B28  0EFF               	movlw	255
 14321  013B2A  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14322  013B2C  0EFF               	movlw	255
 14323  013B2E  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14324  013B30  0E01               	movlw	1
 14325  013B32  272E               	addwf	___ftadd@f2& (0+255),f,b
 14326  013B34  0E00               	movlw	0
 14327  013B36  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14328  013B38  0E00               	movlw	0
 14329  013B3A  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14330  013B3C                     l1514:
 14331                           
 14332                           ; BSR set to: 1
 14333                           
 14334                           ; BSR set to: 1
 14335  013B3C  0E00               	movlw	0
 14336  013B3E  6F34               	movwf	___ftadd@sign& (0+255),b
 14337                           
 14338                           ; BSR set to: 1
 14339  013B40  512B               	movf	___ftadd@f1& (0+255),w,b
 14340  013B42  272E               	addwf	___ftadd@f2& (0+255),f,b
 14341  013B44  512C               	movf	(___ftadd@f1+1)& (0+255),w,b
 14342  013B46  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14343  013B48  512D               	movf	(___ftadd@f1+2)& (0+255),w,b
 14344  013B4A  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14345                           
 14346                           ; BSR set to: 1
 14347  013B4C  AF30               	btfss	(___ftadd@f2+2)& (0+255),7,b
 14348  013B4E  D00E               	goto	l1515
 14349                           
 14350                           ; BSR set to: 1
 14351  013B50  0EFF               	movlw	255
 14352  013B52  1B2E               	xorwf	___ftadd@f2& (0+255),f,b
 14353  013B54  0EFF               	movlw	255
 14354  013B56  1B2F               	xorwf	(___ftadd@f2+1)& (0+255),f,b
 14355  013B58  0EFF               	movlw	255
 14356  013B5A  1B30               	xorwf	(___ftadd@f2+2)& (0+255),f,b
 14357  013B5C  0E01               	movlw	1
 14358  013B5E  272E               	addwf	___ftadd@f2& (0+255),f,b
 14359  013B60  0E00               	movlw	0
 14360  013B62  232F               	addwfc	(___ftadd@f2+1)& (0+255),f,b
 14361  013B64  0E00               	movlw	0
 14362  013B66  2330               	addwfc	(___ftadd@f2+2)& (0+255),f,b
 14363                           
 14364                           ; BSR set to: 1
 14365  013B68  0E01               	movlw	1
 14366  013B6A  6F34               	movwf	___ftadd@sign& (0+255),b
 14367  013B6C                     l1515:
 14368                           
 14369                           ; BSR set to: 1
 14370                           
 14371                           ; BSR set to: 1
 14372  013B6C  C12E  F117         	movff	___ftadd@f2,___ftpack@arg
 14373  013B70  C12F  F118         	movff	___ftadd@f2+1,___ftpack@arg+1
 14374  013B74  C130  F119         	movff	___ftadd@f2+2,___ftpack@arg+2
 14375  013B78  C136  F11A         	movff	___ftadd@exp1,___ftpack@exp
 14376  013B7C  C134  F11B         	movff	___ftadd@sign,___ftpack@sign
 14377  013B80  ECD2  F0A6         	call	___ftpack	;wreg free
 14378  013B84  C117  F12B         	movff	?___ftpack,?___ftadd
 14379  013B88  C118  F12C         	movff	?___ftpack+1,?___ftadd+1
 14380  013B8C  C119  F12D         	movff	?___ftpack+2,?___ftadd+2
 14381  013B90  0012               	return	
 14382  013B92                     __end_of___ftadd:
 14383                           	opt stack 0
 14384                           tblptru	equ	0xFF8
 14385                           tblptrh	equ	0xFF7
 14386                           tblptrl	equ	0xFF6
 14387                           tablat	equ	0xFF5
 14388                           prodh	equ	0xFF4
 14389                           prodl	equ	0xFF3
 14390                           intcon	equ	0xFF2
 14391                           postinc0	equ	0xFEE
 14392                           wreg	equ	0xFE8
 14393                           indf1	equ	0xFE7
 14394                           postdec1	equ	0xFE5
 14395                           fsr1h	equ	0xFE2
 14396                           fsr1l	equ	0xFE1
 14397                           indf2	equ	0xFDF
 14398                           postinc2	equ	0xFDE
 14399                           postdec2	equ	0xFDD
 14400                           fsr2h	equ	0xFDA
 14401                           fsr2l	equ	0xFD9
 14402                           status	equ	0xFD8
 14403                           
 14404 ;; *************** function ___ftpack *****************
 14405 ;; Defined at:
 14406 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 14407 ;; Parameters:    Size  Location     Type
 14408 ;;  arg             3   23[BANK1 ] unsigned um
 14409 ;;  exp             1   26[BANK1 ] unsigned char 
 14410 ;;  sign            1   27[BANK1 ] unsigned char 
 14411 ;; Auto vars:     Size  Location     Type
 14412 ;;		None
 14413 ;; Return value:  Size  Location     Type
 14414 ;;                  3   23[BANK1 ] float 
 14415 ;; Registers used:
 14416 ;;		wreg, status,2, status,0
 14417 ;; Tracked objects:
 14418 ;;		On entry : 0/0
 14419 ;;		On exit  : 0/0
 14420 ;;		Unchanged: 0/0
 14421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14422 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14424 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14425 ;;      Totals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14426 ;;Total ram usage:        8 bytes
 14427 ;; Hardware stack levels used:    1
 14428 ;; Hardware stack levels required when called:   14
 14429 ;; This function calls:
 14430 ;;		Nothing
 14431 ;; This function is called by:
 14432 ;;		___awtoft
 14433 ;;		___ftadd
 14434 ;;		___ftdiv
 14435 ;;		___ftmul
 14436 ;;		___lltoft
 14437 ;; This function uses a non-reentrant model
 14438 ;;
 14439                           
 14440                           	psect	text37
 14441  014DA4                     __ptext37:
 14442                           	opt stack 0
 14443  014DA4                     ___ftpack:
 14444                           	opt stack 11
 14445                           
 14446                           ;incstack = 0
 14447  014DA4  0101               	movlb	1	; () banked
 14448  014DA6  511A               	movf	___ftpack@exp& (0+255),w,b
 14449  014DA8  B4D8               	btfsc	status,2,c
 14450  014DAA  D005               	goto	u8590
 14451                           
 14452                           ; BSR set to: 1
 14453  014DAC  5117               	movf	___ftpack@arg& (0+255),w,b
 14454  014DAE  1118               	iorwf	(___ftpack@arg+1)& (0+255),w,b
 14455  014DB0  1119               	iorwf	(___ftpack@arg+2)& (0+255),w,b
 14456  014DB2  A4D8               	btfss	status,2,c
 14457  014DB4  D00C               	goto	l1456
 14458  014DB6                     u8590:
 14459                           
 14460                           ; BSR set to: 1
 14461                           
 14462                           ; BSR set to: 1
 14463  014DB6  0E00               	movlw	0
 14464  014DB8  6F17               	movwf	?___ftpack& (0+255),b
 14465  014DBA  0E00               	movlw	0
 14466  014DBC  6F18               	movwf	(?___ftpack+1)& (0+255),b
 14467  014DBE  0E00               	movlw	0
 14468  014DC0  6F19               	movwf	(?___ftpack+2)& (0+255),b
 14469                           
 14470                           ; BSR set to: 1
 14471  014DC2  0012               	return	
 14472  014DC4                     
 14473                           ; BSR set to: 1
 14474                           
 14475                           ; BSR set to: 1
 14476  014DC4  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14477  014DC6  90D8               	bcf	status,0,c
 14478  014DC8  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14479  014DCA  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14480  014DCC  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14481  014DCE                     l1456:
 14482                           
 14483                           ; BSR set to: 1
 14484                           
 14485                           ; BSR set to: 1
 14486  014DCE  0E00               	movlw	0
 14487  014DD0  1517               	andwf	___ftpack@arg& (0+255),w,b
 14488  014DD2  6F1C               	movwf	??___ftpack& (0+255),b
 14489  014DD4  0E00               	movlw	0
 14490  014DD6  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14491  014DD8  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14492  014DDA  0EFE               	movlw	254
 14493  014DDC  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14494  014DDE  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14495  014DE0  511C               	movf	??___ftpack& (0+255),w,b
 14496  014DE2  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14497  014DE4  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14498  014DE6  B4D8               	btfsc	status,2,c
 14499  014DE8  D00C               	goto	l1459
 14500  014DEA  D7EC               	goto	l1457
 14501  014DEC                     
 14502                           ; BSR set to: 1
 14503                           
 14504                           ; BSR set to: 1
 14505  014DEC  2B1A               	incf	___ftpack@exp& (0+255),f,b
 14506                           
 14507                           ; BSR set to: 1
 14508  014DEE  0E01               	movlw	1
 14509  014DF0  2717               	addwf	___ftpack@arg& (0+255),f,b
 14510  014DF2  0E00               	movlw	0
 14511  014DF4  2318               	addwfc	(___ftpack@arg+1)& (0+255),f,b
 14512  014DF6  0E00               	movlw	0
 14513  014DF8  2319               	addwfc	(___ftpack@arg+2)& (0+255),f,b
 14514  014DFA  90D8               	bcf	status,0,c
 14515  014DFC  3319               	rrcf	(___ftpack@arg+2)& (0+255),f,b
 14516  014DFE  3318               	rrcf	(___ftpack@arg+1)& (0+255),f,b
 14517  014E00  3317               	rrcf	___ftpack@arg& (0+255),f,b
 14518  014E02                     l1459:
 14519                           
 14520                           ; BSR set to: 1
 14521                           
 14522                           ; BSR set to: 1
 14523  014E02  0E00               	movlw	0
 14524  014E04  1517               	andwf	___ftpack@arg& (0+255),w,b
 14525  014E06  6F1C               	movwf	??___ftpack& (0+255),b
 14526  014E08  0E00               	movlw	0
 14527  014E0A  1518               	andwf	(___ftpack@arg+1)& (0+255),w,b
 14528  014E0C  6F1D               	movwf	(??___ftpack+1)& (0+255),b
 14529  014E0E  0EFF               	movlw	255
 14530  014E10  1519               	andwf	(___ftpack@arg+2)& (0+255),w,b
 14531  014E12  6F1E               	movwf	(??___ftpack+2)& (0+255),b
 14532  014E14  511C               	movf	??___ftpack& (0+255),w,b
 14533  014E16  111D               	iorwf	(??___ftpack+1)& (0+255),w,b
 14534  014E18  111E               	iorwf	(??___ftpack+2)& (0+255),w,b
 14535  014E1A  B4D8               	btfsc	status,2,c
 14536  014E1C  D006               	goto	l1462
 14537  014E1E  D7E6               	goto	l1460
 14538  014E20                     
 14539                           ; BSR set to: 1
 14540                           
 14541                           ; BSR set to: 1
 14542  014E20  071A               	decf	___ftpack@exp& (0+255),f,b
 14543  014E22  90D8               	bcf	status,0,c
 14544  014E24  3717               	rlcf	___ftpack@arg& (0+255),f,b
 14545  014E26  3718               	rlcf	(___ftpack@arg+1)& (0+255),f,b
 14546  014E28  3719               	rlcf	(___ftpack@arg+2)& (0+255),f,b
 14547  014E2A                     l1462:
 14548                           
 14549                           ; BSR set to: 1
 14550                           
 14551                           ; BSR set to: 1
 14552  014E2A  BF18               	btfsc	(___ftpack@arg+1)& (0+255),7,b
 14553  014E2C  D003               	goto	u8630
 14554                           
 14555                           ; BSR set to: 1
 14556  014E2E  0E02               	movlw	2
 14557  014E30  611A               	cpfslt	___ftpack@exp& (0+255),b
 14558  014E32  D7F6               	goto	l1463
 14559  014E34                     u8630:
 14560                           
 14561                           ; BSR set to: 1
 14562                           
 14563                           ; BSR set to: 1
 14564  014E34  A11A               	btfss	___ftpack@exp& (0+255),0,b
 14565                           
 14566                           ; BSR set to: 1
 14567  014E36  9F18               	bcf	(___ftpack@arg+1)& (0+255),7,b
 14568                           
 14569                           ; BSR set to: 1
 14570                           
 14571                           ; BSR set to: 1
 14572  014E38  90D8               	bcf	status,0,c
 14573  014E3A  331A               	rrcf	___ftpack@exp& (0+255),f,b
 14574  014E3C  511A               	movf	___ftpack@exp& (0+255),w,b
 14575  014E3E  1319               	iorwf	(___ftpack@arg+2)& (0+255),f,b
 14576                           
 14577                           ; BSR set to: 1
 14578  014E40  511B               	movf	___ftpack@sign& (0+255),w,b
 14579  014E42  A4D8               	btfss	status,2,c
 14580                           
 14581                           ; BSR set to: 1
 14582  014E44  8F19               	bsf	(___ftpack@arg+2)& (0+255),7,b
 14583                           
 14584                           ; BSR set to: 1
 14585                           
 14586                           ; BSR set to: 1
 14587  014E46  C117  F117         	movff	___ftpack@arg,?___ftpack
 14588  014E4A  C118  F118         	movff	___ftpack@arg+1,?___ftpack+1
 14589  014E4E  C119  F119         	movff	___ftpack@arg+2,?___ftpack+2
 14590  014E52  0012               	return	
 14591  014E54                     __end_of___ftpack:
 14592                           	opt stack 0
 14593                           tblptru	equ	0xFF8
 14594                           tblptrh	equ	0xFF7
 14595                           tblptrl	equ	0xFF6
 14596                           tablat	equ	0xFF5
 14597                           prodh	equ	0xFF4
 14598                           prodl	equ	0xFF3
 14599                           intcon	equ	0xFF2
 14600                           postinc0	equ	0xFEE
 14601                           wreg	equ	0xFE8
 14602                           indf1	equ	0xFE7
 14603                           postdec1	equ	0xFE5
 14604                           fsr1h	equ	0xFE2
 14605                           fsr1l	equ	0xFE1
 14606                           indf2	equ	0xFDF
 14607                           postinc2	equ	0xFDE
 14608                           postdec2	equ	0xFDD
 14609                           fsr2h	equ	0xFDA
 14610                           fsr2l	equ	0xFD9
 14611                           status	equ	0xFD8
 14612                           
 14613 ;; *************** function ___ftneg *****************
 14614 ;; Defined at:
 14615 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 14616 ;; Parameters:    Size  Location     Type
 14617 ;;  f1              3   35[BANK1 ] float 
 14618 ;; Auto vars:     Size  Location     Type
 14619 ;;		None
 14620 ;; Return value:  Size  Location     Type
 14621 ;;                  3   35[BANK1 ] float 
 14622 ;; Registers used:
 14623 ;;		wreg, status,2, status,0
 14624 ;; Tracked objects:
 14625 ;;		On entry : 0/0
 14626 ;;		On exit  : 0/0
 14627 ;;		Unchanged: 0/0
 14628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14629 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14630 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14632 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14633 ;;Total ram usage:        3 bytes
 14634 ;; Hardware stack levels used:    1
 14635 ;; Hardware stack levels required when called:   14
 14636 ;; This function calls:
 14637 ;;		Nothing
 14638 ;; This function is called by:
 14639 ;;		_ringBufferLUT
 14640 ;;		_printf
 14641 ;; This function uses a non-reentrant model
 14642 ;;
 14643                           
 14644                           	psect	text38
 14645  016020                     __ptext38:
 14646                           	opt stack 0
 14647  016020                     ___ftneg:
 14648                           	opt stack 13
 14649                           
 14650                           ; BSR set to: 1
 14651                           ;incstack = 0
 14652  016020  0101               	movlb	1	; () banked
 14653  016022  5123               	movf	___ftneg@f1& (0+255),w,b
 14654  016024  1124               	iorwf	(___ftneg@f1+1)& (0+255),w,b
 14655  016026  1125               	iorwf	(___ftneg@f1+2)& (0+255),w,b
 14656  016028  B4D8               	btfsc	status,2,c
 14657  01602A  D006               	goto	l1563
 14658                           
 14659                           ; BSR set to: 1
 14660  01602C  0E00               	movlw	0
 14661  01602E  1B23               	xorwf	___ftneg@f1& (0+255),f,b
 14662  016030  0E00               	movlw	0
 14663  016032  1B24               	xorwf	(___ftneg@f1+1)& (0+255),f,b
 14664  016034  0E80               	movlw	128
 14665  016036  1B25               	xorwf	(___ftneg@f1+2)& (0+255),f,b
 14666  016038                     l1563:
 14667                           
 14668                           ; BSR set to: 1
 14669  016038  C123  F123         	movff	___ftneg@f1,?___ftneg
 14670  01603C  C124  F124         	movff	___ftneg@f1+1,?___ftneg+1
 14671  016040  C125  F125         	movff	___ftneg@f1+2,?___ftneg+2
 14672                           
 14673                           ; BSR set to: 1
 14674  016044  0012               	return		;funcret
 14675  016046                     __end_of___ftneg:
 14676                           	opt stack 0
 14677                           tblptru	equ	0xFF8
 14678                           tblptrh	equ	0xFF7
 14679                           tblptrl	equ	0xFF6
 14680                           tablat	equ	0xFF5
 14681                           prodh	equ	0xFF4
 14682                           prodl	equ	0xFF3
 14683                           intcon	equ	0xFF2
 14684                           postinc0	equ	0xFEE
 14685                           wreg	equ	0xFE8
 14686                           indf1	equ	0xFE7
 14687                           postdec1	equ	0xFE5
 14688                           fsr1h	equ	0xFE2
 14689                           fsr1l	equ	0xFE1
 14690                           indf2	equ	0xFDF
 14691                           postinc2	equ	0xFDE
 14692                           postdec2	equ	0xFDD
 14693                           fsr2h	equ	0xFDA
 14694                           fsr2l	equ	0xFD9
 14695                           status	equ	0xFD8
 14696                           
 14697 ;; *************** function ___ftge *****************
 14698 ;; Defined at:
 14699 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 14700 ;; Parameters:    Size  Location     Type
 14701 ;;  ff1             3   23[BANK1 ] float 
 14702 ;;  ff2             3   26[BANK1 ] float 
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;		None
 14705 ;; Return value:  Size  Location     Type
 14706 ;;		None               void
 14707 ;; Registers used:
 14708 ;;		wreg, status,2, status,0
 14709 ;; Tracked objects:
 14710 ;;		On entry : 0/0
 14711 ;;		On exit  : 0/0
 14712 ;;		Unchanged: 0/0
 14713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14714 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14716 ;;      Temps:          0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14717 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14718 ;;Total ram usage:        9 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; Hardware stack levels required when called:   14
 14721 ;; This function calls:
 14722 ;;		Nothing
 14723 ;; This function is called by:
 14724 ;;		_printf
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text39
 14729  01504E                     __ptext39:
 14730                           	opt stack 0
 14731  01504E                     ___ftge:
 14732                           	opt stack 13
 14733                           
 14734                           ; BSR set to: 1
 14735                           ;incstack = 0
 14736  01504E  0101               	movlb	1	; () banked
 14737  015050  AF19               	btfss	(___ftge@ff1+2)& (0+255),7,b
 14738  015052  D016               	goto	l1545
 14739                           
 14740                           ; BSR set to: 1
 14741  015054  C117  F11D         	movff	___ftge@ff1,??___ftge
 14742  015058  C118  F11E         	movff	___ftge@ff1+1,??___ftge+1
 14743  01505C  C119  F11F         	movff	___ftge@ff1+2,??___ftge+2
 14744  015060  1F1D               	comf	??___ftge& (0+255),f,b
 14745  015062  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 14746  015064  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 14747  015066  2B1D               	incf	??___ftge& (0+255),f,b
 14748  015068  0E00               	movlw	0
 14749  01506A  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 14750  01506C  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 14751  01506E  0E00               	movlw	0
 14752  015070  251D               	addwf	??___ftge& (0+255),w,b
 14753  015072  6F17               	movwf	___ftge@ff1& (0+255),b
 14754  015074  0E00               	movlw	0
 14755  015076  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 14756  015078  6F18               	movwf	(___ftge@ff1+1)& (0+255),b
 14757  01507A  0E80               	movlw	128
 14758  01507C  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 14759  01507E  6F19               	movwf	(___ftge@ff1+2)& (0+255),b
 14760  015080                     l1545:
 14761                           
 14762                           ; BSR set to: 1
 14763                           
 14764                           ; BSR set to: 1
 14765  015080  AF1C               	btfss	(___ftge@ff2+2)& (0+255),7,b
 14766  015082  D016               	goto	l1546
 14767                           
 14768                           ; BSR set to: 1
 14769  015084  C11A  F11D         	movff	___ftge@ff2,??___ftge
 14770  015088  C11B  F11E         	movff	___ftge@ff2+1,??___ftge+1
 14771  01508C  C11C  F11F         	movff	___ftge@ff2+2,??___ftge+2
 14772  015090  1F1D               	comf	??___ftge& (0+255),f,b
 14773  015092  1F1E               	comf	(??___ftge+1)& (0+255),f,b
 14774  015094  1F1F               	comf	(??___ftge+2)& (0+255),f,b
 14775  015096  2B1D               	incf	??___ftge& (0+255),f,b
 14776  015098  0E00               	movlw	0
 14777  01509A  231E               	addwfc	(??___ftge+1)& (0+255),f,b
 14778  01509C  231F               	addwfc	(??___ftge+2)& (0+255),f,b
 14779  01509E  0E00               	movlw	0
 14780  0150A0  251D               	addwf	??___ftge& (0+255),w,b
 14781  0150A2  6F1A               	movwf	___ftge@ff2& (0+255),b
 14782  0150A4  0E00               	movlw	0
 14783  0150A6  211E               	addwfc	(??___ftge+1)& (0+255),w,b
 14784  0150A8  6F1B               	movwf	(___ftge@ff2+1)& (0+255),b
 14785  0150AA  0E80               	movlw	128
 14786  0150AC  211F               	addwfc	(??___ftge+2)& (0+255),w,b
 14787  0150AE  6F1C               	movwf	(___ftge@ff2+2)& (0+255),b
 14788  0150B0                     l1546:
 14789                           
 14790                           ; BSR set to: 1
 14791                           
 14792                           ; BSR set to: 1
 14793  0150B0  0E00               	movlw	0
 14794  0150B2  1B17               	xorwf	___ftge@ff1& (0+255),f,b
 14795  0150B4  0E00               	movlw	0
 14796  0150B6  1B18               	xorwf	(___ftge@ff1+1)& (0+255),f,b
 14797  0150B8  0E80               	movlw	128
 14798  0150BA  1B19               	xorwf	(___ftge@ff1+2)& (0+255),f,b
 14799                           
 14800                           ; BSR set to: 1
 14801  0150BC  0E00               	movlw	0
 14802  0150BE  1B1A               	xorwf	___ftge@ff2& (0+255),f,b
 14803  0150C0  0E00               	movlw	0
 14804  0150C2  1B1B               	xorwf	(___ftge@ff2+1)& (0+255),f,b
 14805  0150C4  0E80               	movlw	128
 14806  0150C6  1B1C               	xorwf	(___ftge@ff2+2)& (0+255),f,b
 14807  0150C8  511A               	movf	___ftge@ff2& (0+255),w,b
 14808  0150CA  5D17               	subwf	___ftge@ff1& (0+255),w,b
 14809  0150CC  511B               	movf	(___ftge@ff2+1)& (0+255),w,b
 14810  0150CE  5918               	subwfb	(___ftge@ff1+1)& (0+255),w,b
 14811  0150D0  511C               	movf	(___ftge@ff2+2)& (0+255),w,b
 14812  0150D2  5919               	subwfb	(___ftge@ff1+2)& (0+255),w,b
 14813  0150D4  B0D8               	btfsc	status,0,c
 14814  0150D6  D002               	goto	l7751
 14815                           
 14816                           ; BSR set to: 1
 14817  0150D8  90D8               	bcf	status,0,c
 14818  0150DA  0012               	return	
 14819  0150DC                     l7751:
 14820                           
 14821                           ; BSR set to: 1
 14822                           
 14823                           ; BSR set to: 1
 14824  0150DC  80D8               	bsf	status,0,c
 14825                           
 14826                           ; BSR set to: 1
 14827  0150DE  0012               	return	
 14828  0150E0                     __end_of___ftge:
 14829                           	opt stack 0
 14830                           tblptru	equ	0xFF8
 14831                           tblptrh	equ	0xFF7
 14832                           tblptrl	equ	0xFF6
 14833                           tablat	equ	0xFF5
 14834                           prodh	equ	0xFF4
 14835                           prodl	equ	0xFF3
 14836                           intcon	equ	0xFF2
 14837                           postinc0	equ	0xFEE
 14838                           wreg	equ	0xFE8
 14839                           indf1	equ	0xFE7
 14840                           postdec1	equ	0xFE5
 14841                           fsr1h	equ	0xFE2
 14842                           fsr1l	equ	0xFE1
 14843                           indf2	equ	0xFDF
 14844                           postinc2	equ	0xFDE
 14845                           postdec2	equ	0xFDD
 14846                           fsr2h	equ	0xFDA
 14847                           fsr2l	equ	0xFD9
 14848                           status	equ	0xFD8
 14849                           
 14850 ;; *************** function _SYSTEM_Initialize *****************
 14851 ;; Defined at:
 14852 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14853 ;; Parameters:    Size  Location     Type
 14854 ;;		None
 14855 ;; Auto vars:     Size  Location     Type
 14856 ;;		None
 14857 ;; Return value:  Size  Location     Type
 14858 ;;                  1    wreg      void 
 14859 ;; Registers used:
 14860 ;;		wreg, status,2, status,0, cstack
 14861 ;; Tracked objects:
 14862 ;;		On entry : 0/0
 14863 ;;		On exit  : 0/0
 14864 ;;		Unchanged: 0/0
 14865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14870 ;;Total ram usage:        0 bytes
 14871 ;; Hardware stack levels used:    1
 14872 ;; Hardware stack levels required when called:   16
 14873 ;; This function calls:
 14874 ;;		_ADCC_Initialize
 14875 ;;		_EUSART2_Initialize
 14876 ;;		_FVR_Initialize
 14877 ;;		_INTERRUPT_Initialize
 14878 ;;		_OSCILLATOR_Initialize
 14879 ;;		_PIN_MANAGER_Initialize
 14880 ;;		_PMD_Initialize
 14881 ;;		_TMR5_Initialize
 14882 ;;		_TMR6_Initialize
 14883 ;;		_TMR7_Initialize
 14884 ;; This function is called by:
 14885 ;;		_main
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text40
 14890  015F7E                     __ptext40:
 14891                           	opt stack 0
 14892  015F7E                     _SYSTEM_Initialize:
 14893                           	opt stack 14
 14894                           
 14895                           ;mcc.c: 52: INTERRUPT_Initialize();
 14896                           
 14897                           ; BSR set to: 1
 14898                           ;incstack = 0
 14899  015F7E  ECCA  F0B0         	call	_INTERRUPT_Initialize	;wreg free
 14900                           
 14901                           ;mcc.c: 53: PMD_Initialize();
 14902  015F82  EC8D  F0B0         	call	_PMD_Initialize	;wreg free
 14903                           
 14904                           ;mcc.c: 54: PIN_MANAGER_Initialize();
 14905  015F86  ECD6  F0A7         	call	_PIN_MANAGER_Initialize	;wreg free
 14906                           
 14907                           ;mcc.c: 55: OSCILLATOR_Initialize();
 14908  015F8A  EC9B  F0B0         	call	_OSCILLATOR_Initialize	;wreg free
 14909                           
 14910                           ;mcc.c: 56: FVR_Initialize();
 14911  015F8E  EC2E  F0B1         	call	_FVR_Initialize	;wreg free
 14912                           
 14913                           ;mcc.c: 57: TMR7_Initialize();
 14914  015F92  ECD2  F0AD         	call	_TMR7_Initialize	;wreg free
 14915                           
 14916                           ;mcc.c: 58: TMR6_Initialize();
 14917  015F96  EC77  F0AF         	call	_TMR6_Initialize	;wreg free
 14918                           
 14919                           ;mcc.c: 59: ADCC_Initialize();
 14920  015F9A  EC3E  F0AC         	call	_ADCC_Initialize	;wreg free
 14921                           
 14922                           ;mcc.c: 60: TMR5_Initialize();
 14923  015F9E  EC1F  F0AE         	call	_TMR5_Initialize	;wreg free
 14924                           
 14925                           ;mcc.c: 61: EUSART2_Initialize();
 14926  015FA2  ECD8  F0AB         	call	_EUSART2_Initialize	;wreg free
 14927  015FA6  0012               	return		;funcret
 14928  015FA8                     __end_of_SYSTEM_Initialize:
 14929                           	opt stack 0
 14930                           tblptru	equ	0xFF8
 14931                           tblptrh	equ	0xFF7
 14932                           tblptrl	equ	0xFF6
 14933                           tablat	equ	0xFF5
 14934                           prodh	equ	0xFF4
 14935                           prodl	equ	0xFF3
 14936                           intcon	equ	0xFF2
 14937                           postinc0	equ	0xFEE
 14938                           wreg	equ	0xFE8
 14939                           indf1	equ	0xFE7
 14940                           postdec1	equ	0xFE5
 14941                           fsr1h	equ	0xFE2
 14942                           fsr1l	equ	0xFE1
 14943                           indf2	equ	0xFDF
 14944                           postinc2	equ	0xFDE
 14945                           postdec2	equ	0xFDD
 14946                           fsr2h	equ	0xFDA
 14947                           fsr2l	equ	0xFD9
 14948                           status	equ	0xFD8
 14949                           
 14950 ;; *************** function _TMR7_Initialize *****************
 14951 ;; Defined at:
 14952 ;;		line 64 in file "mcc_generated_files/tmr7.c"
 14953 ;; Parameters:    Size  Location     Type
 14954 ;;		None
 14955 ;; Auto vars:     Size  Location     Type
 14956 ;;		None
 14957 ;; Return value:  Size  Location     Type
 14958 ;;                  1    wreg      void 
 14959 ;; Registers used:
 14960 ;;		wreg, status,2, status,0, cstack
 14961 ;; Tracked objects:
 14962 ;;		On entry : 0/0
 14963 ;;		On exit  : 0/0
 14964 ;;		Unchanged: 0/0
 14965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 14966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14968 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14969 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14970 ;;Total ram usage:        2 bytes
 14971 ;; Hardware stack levels used:    1
 14972 ;; Hardware stack levels required when called:   15
 14973 ;; This function calls:
 14974 ;;		_TMR7_SetInterruptHandler
 14975 ;; This function is called by:
 14976 ;;		_SYSTEM_Initialize
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           	psect	text41
 14981  015BA4                     __ptext41:
 14982                           	opt stack 0
 14983  015BA4                     _TMR7_Initialize:
 14984                           	opt stack 14
 14985                           
 14986                           ;tmr7.c: 69: T7GCON = 0x00;
 14987                           
 14988                           ;incstack = 0
 14989  015BA4  0E00               	movlw	0
 14990  015BA6  010F               	movlb	15	; () banked
 14991  015BA8  6F31               	movwf	49,b	;volatile
 14992                           
 14993                           ;tmr7.c: 72: T7GATE = 0x00;
 14994  015BAA  0E00               	movlw	0
 14995  015BAC  6F32               	movwf	50,b	;volatile
 14996                           
 14997                           ;tmr7.c: 75: T7CLK = 0x03;
 14998  015BAE  0E03               	movlw	3
 14999  015BB0  6F33               	movwf	51,b	;volatile
 15000                           
 15001                           ;tmr7.c: 78: TMR7H = 0x3C;
 15002  015BB2  0E3C               	movlw	60
 15003  015BB4  6F2F               	movwf	47,b	;volatile
 15004                           
 15005                           ;tmr7.c: 81: TMR7L = 0xB0;
 15006  015BB6  0EB0               	movlw	176
 15007  015BB8  6F2E               	movwf	46,b	;volatile
 15008                           
 15009                           ; BSR set to: 15
 15010                           ;tmr7.c: 84: timer7ReloadVal=(uint16_t)((TMR7H << 8) | TMR7L);
 15011  015BBA  512E               	movf	46,w,b	;volatile
 15012  015BBC  CF2F F11A          	movff	3887,??_TMR7_Initialize	;volatile
 15013  015BC0  0101               	movlb	1	; () banked
 15014  015BC2  6B1B               	clrf	(??_TMR7_Initialize+1)& (0+255),b
 15015  015BC4  C11A  F11B         	movff	??_TMR7_Initialize,??_TMR7_Initialize+1
 15016  015BC8  6B1A               	clrf	??_TMR7_Initialize& (0+255),b
 15017  015BCA  111A               	iorwf	??_TMR7_Initialize& (0+255),w,b
 15018  015BCC  6FD9               	movwf	_timer7ReloadVal& (0+255),b	;volatile
 15019  015BCE  511B               	movf	(??_TMR7_Initialize+1)& (0+255),w,b
 15020  015BD0  6FDA               	movwf	(_timer7ReloadVal+1)& (0+255),b	;volatile
 15021                           
 15022                           ; BSR set to: 1
 15023                           ;tmr7.c: 87: PIR5bits.TMR7IF = 0;
 15024  015BD2  010E               	movlb	14	; () banked
 15025  015BD4  9D38               	bcf	56,6,b	;volatile
 15026                           
 15027                           ; BSR set to: 14
 15028                           ;tmr7.c: 90: PIE5bits.TMR7IE = 1;
 15029  015BD6  8D2E               	bsf	46,6,b	;volatile
 15030                           
 15031                           ; BSR set to: 14
 15032                           ;tmr7.c: 93: TMR7_SetInterruptHandler(TMR7_DefaultInterruptHandler);
 15033  015BD8  0E6A               	movlw	low _TMR7_DefaultInterruptHandler
 15034  015BDA  0101               	movlb	1	; () banked
 15035  015BDC  6F17               	movwf	TMR7_SetInterruptHandler@InterruptHandler& (0+255),b
 15036  015BDE  0E62               	movlw	high _TMR7_DefaultInterruptHandler
 15037  015BE0  6F18               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15038  015BE2  0E01               	movlw	low (_TMR7_DefaultInterruptHandler shr (0+16))
 15039  015BE4  6F19               	movwf	(TMR7_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15040  015BE6  ECF2  F0B0         	call	_TMR7_SetInterruptHandler	;wreg free
 15041                           
 15042                           ;tmr7.c: 96: T7CON = 0x31;
 15043  015BEA  0E31               	movlw	49
 15044  015BEC  010F               	movlb	15	; () banked
 15045  015BEE  6F30               	movwf	48,b	;volatile
 15046                           
 15047                           ; BSR set to: 15
 15048  015BF0  0012               	return		;funcret
 15049  015BF2                     __end_of_TMR7_Initialize:
 15050                           	opt stack 0
 15051                           tblptru	equ	0xFF8
 15052                           tblptrh	equ	0xFF7
 15053                           tblptrl	equ	0xFF6
 15054                           tablat	equ	0xFF5
 15055                           prodh	equ	0xFF4
 15056                           prodl	equ	0xFF3
 15057                           intcon	equ	0xFF2
 15058                           postinc0	equ	0xFEE
 15059                           wreg	equ	0xFE8
 15060                           indf1	equ	0xFE7
 15061                           postdec1	equ	0xFE5
 15062                           fsr1h	equ	0xFE2
 15063                           fsr1l	equ	0xFE1
 15064                           indf2	equ	0xFDF
 15065                           postinc2	equ	0xFDE
 15066                           postdec2	equ	0xFDD
 15067                           fsr2h	equ	0xFDA
 15068                           fsr2l	equ	0xFD9
 15069                           status	equ	0xFD8
 15070                           
 15071 ;; *************** function _TMR7_SetInterruptHandler *****************
 15072 ;; Defined at:
 15073 ;;		line 178 in file "mcc_generated_files/tmr7.c"
 15074 ;; Parameters:    Size  Location     Type
 15075 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15076 ;;		 -> acquisitionTimerCallback(1), TMR7_DefaultInterruptHandler(1), 
 15077 ;; Auto vars:     Size  Location     Type
 15078 ;;		None
 15079 ;; Return value:  Size  Location     Type
 15080 ;;                  1    wreg      void 
 15081 ;; Registers used:
 15082 ;;		wreg, status,2, status,0
 15083 ;; Tracked objects:
 15084 ;;		On entry : 0/0
 15085 ;;		On exit  : 0/0
 15086 ;;		Unchanged: 0/0
 15087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15088 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15091 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15092 ;;Total ram usage:        3 bytes
 15093 ;; Hardware stack levels used:    1
 15094 ;; Hardware stack levels required when called:   14
 15095 ;; This function calls:
 15096 ;;		Nothing
 15097 ;; This function is called by:
 15098 ;;		_TMR7_Initialize
 15099 ;;		_main
 15100 ;; This function uses a non-reentrant model
 15101 ;;
 15102                           
 15103                           	psect	text42
 15104  0161E4                     __ptext42:
 15105                           	opt stack 0
 15106  0161E4                     _TMR7_SetInterruptHandler:
 15107                           	opt stack 16
 15108                           
 15109                           ;tmr7.c: 179: TMR7_InterruptHandler = InterruptHandler;
 15110                           
 15111                           ; BSR set to: 15
 15112                           ;incstack = 0
 15113  0161E4  C117  F1CC         	movff	TMR7_SetInterruptHandler@InterruptHandler,_TMR7_InterruptHandler
 15114  0161E8  C118  F1CD         	movff	TMR7_SetInterruptHandler@InterruptHandler+1,_TMR7_InterruptHandler+1
 15115  0161EC  C119  F1CE         	movff	TMR7_SetInterruptHandler@InterruptHandler+2,_TMR7_InterruptHandler+2
 15116  0161F0  0012               	return		;funcret
 15117  0161F2                     __end_of_TMR7_SetInterruptHandler:
 15118                           	opt stack 0
 15119                           tblptru	equ	0xFF8
 15120                           tblptrh	equ	0xFF7
 15121                           tblptrl	equ	0xFF6
 15122                           tablat	equ	0xFF5
 15123                           prodh	equ	0xFF4
 15124                           prodl	equ	0xFF3
 15125                           intcon	equ	0xFF2
 15126                           postinc0	equ	0xFEE
 15127                           wreg	equ	0xFE8
 15128                           indf1	equ	0xFE7
 15129                           postdec1	equ	0xFE5
 15130                           fsr1h	equ	0xFE2
 15131                           fsr1l	equ	0xFE1
 15132                           indf2	equ	0xFDF
 15133                           postinc2	equ	0xFDE
 15134                           postdec2	equ	0xFDD
 15135                           fsr2h	equ	0xFDA
 15136                           fsr2l	equ	0xFD9
 15137                           status	equ	0xFD8
 15138                           
 15139 ;; *************** function _TMR6_Initialize *****************
 15140 ;; Defined at:
 15141 ;;		line 64 in file "mcc_generated_files/tmr6.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;		None
 15144 ;; Auto vars:     Size  Location     Type
 15145 ;;		None
 15146 ;; Return value:  Size  Location     Type
 15147 ;;                  1    wreg      void 
 15148 ;; Registers used:
 15149 ;;		wreg, status,2, status,0, cstack
 15150 ;; Tracked objects:
 15151 ;;		On entry : 0/0
 15152 ;;		On exit  : 0/0
 15153 ;;		Unchanged: 0/0
 15154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15159 ;;Total ram usage:        0 bytes
 15160 ;; Hardware stack levels used:    1
 15161 ;; Hardware stack levels required when called:   15
 15162 ;; This function calls:
 15163 ;;		_TMR6_SetInterruptHandler
 15164 ;; This function is called by:
 15165 ;;		_SYSTEM_Initialize
 15166 ;; This function uses a non-reentrant model
 15167 ;;
 15168                           
 15169                           	psect	text43
 15170  015EEE                     __ptext43:
 15171                           	opt stack 0
 15172  015EEE                     _TMR6_Initialize:
 15173                           	opt stack 14
 15174                           
 15175                           ;tmr6.c: 69: T6CLKCON = 0x04;
 15176                           
 15177                           ;incstack = 0
 15178  015EEE  0E04               	movlw	4
 15179  015EF0  6EB3               	movwf	4019,c	;volatile
 15180                           
 15181                           ;tmr6.c: 72: T6HLT = 0x20;
 15182  015EF2  0E20               	movlw	32
 15183  015EF4  6EB2               	movwf	4018,c	;volatile
 15184                           
 15185                           ;tmr6.c: 75: T6RST = 0x00;
 15186  015EF6  0E00               	movlw	0
 15187  015EF8  6EB4               	movwf	4020,c	;volatile
 15188                           
 15189                           ;tmr6.c: 78: T6PR = 0xF1;
 15190  015EFA  0EF1               	movlw	241
 15191  015EFC  6EB0               	movwf	4016,c	;volatile
 15192                           
 15193                           ;tmr6.c: 81: T6TMR = 0x00;
 15194  015EFE  0E00               	movlw	0
 15195  015F00  6EAF               	movwf	4015,c	;volatile
 15196                           
 15197                           ;tmr6.c: 84: PIR5bits.TMR6IF = 0;
 15198  015F02  010E               	movlb	14	; () banked
 15199  015F04  9B38               	bcf	56,5,b	;volatile
 15200                           
 15201                           ; BSR set to: 14
 15202                           ;tmr6.c: 87: PIE5bits.TMR6IE = 1;
 15203  015F06  8B2E               	bsf	46,5,b	;volatile
 15204                           
 15205                           ; BSR set to: 14
 15206                           ;tmr6.c: 90: TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler);
 15207  015F08  0E6C               	movlw	low _TMR6_DefaultInterruptHandler
 15208  015F0A  0101               	movlb	1	; () banked
 15209  015F0C  6F17               	movwf	TMR6_SetInterruptHandler@InterruptHandler& (0+255),b
 15210  015F0E  0E62               	movlw	high _TMR6_DefaultInterruptHandler
 15211  015F10  6F18               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15212  015F12  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 15213  015F14  6F19               	movwf	(TMR6_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15214  015F16  ECF9  F0B0         	call	_TMR6_SetInterruptHandler	;wreg free
 15215                           
 15216                           ;tmr6.c: 93: T6CON = 0xBF;
 15217  015F1A  0EBF               	movlw	191
 15218  015F1C  6EB1               	movwf	4017,c	;volatile
 15219  015F1E  0012               	return		;funcret
 15220  015F20                     __end_of_TMR6_Initialize:
 15221                           	opt stack 0
 15222                           tblptru	equ	0xFF8
 15223                           tblptrh	equ	0xFF7
 15224                           tblptrl	equ	0xFF6
 15225                           tablat	equ	0xFF5
 15226                           prodh	equ	0xFF4
 15227                           prodl	equ	0xFF3
 15228                           intcon	equ	0xFF2
 15229                           postinc0	equ	0xFEE
 15230                           wreg	equ	0xFE8
 15231                           indf1	equ	0xFE7
 15232                           postdec1	equ	0xFE5
 15233                           fsr1h	equ	0xFE2
 15234                           fsr1l	equ	0xFE1
 15235                           indf2	equ	0xFDF
 15236                           postinc2	equ	0xFDE
 15237                           postdec2	equ	0xFDD
 15238                           fsr2h	equ	0xFDA
 15239                           fsr2l	equ	0xFD9
 15240                           status	equ	0xFD8
 15241                           
 15242 ;; *************** function _TMR6_SetInterruptHandler *****************
 15243 ;; Defined at:
 15244 ;;		line 178 in file "mcc_generated_files/tmr6.c"
 15245 ;; Parameters:    Size  Location     Type
 15246 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15247 ;;		 -> heartbeatTimerCallback(1), TMR6_DefaultInterruptHandler(1), 
 15248 ;; Auto vars:     Size  Location     Type
 15249 ;;		None
 15250 ;; Return value:  Size  Location     Type
 15251 ;;                  1    wreg      void 
 15252 ;; Registers used:
 15253 ;;		wreg, status,2, status,0
 15254 ;; Tracked objects:
 15255 ;;		On entry : 0/0
 15256 ;;		On exit  : 0/0
 15257 ;;		Unchanged: 0/0
 15258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15259 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15262 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15263 ;;Total ram usage:        3 bytes
 15264 ;; Hardware stack levels used:    1
 15265 ;; Hardware stack levels required when called:   14
 15266 ;; This function calls:
 15267 ;;		Nothing
 15268 ;; This function is called by:
 15269 ;;		_TMR6_Initialize
 15270 ;;		_main
 15271 ;; This function uses a non-reentrant model
 15272 ;;
 15273                           
 15274                           	psect	text44
 15275  0161F2                     __ptext44:
 15276                           	opt stack 0
 15277  0161F2                     _TMR6_SetInterruptHandler:
 15278                           	opt stack 16
 15279                           
 15280                           ;tmr6.c: 179: TMR6_InterruptHandler = InterruptHandler;
 15281                           
 15282                           ;incstack = 0
 15283  0161F2  C117  F1CF         	movff	TMR6_SetInterruptHandler@InterruptHandler,_TMR6_InterruptHandler
 15284  0161F6  C118  F1D0         	movff	TMR6_SetInterruptHandler@InterruptHandler+1,_TMR6_InterruptHandler+1
 15285  0161FA  C119  F1D1         	movff	TMR6_SetInterruptHandler@InterruptHandler+2,_TMR6_InterruptHandler+2
 15286  0161FE  0012               	return		;funcret
 15287  016200                     __end_of_TMR6_SetInterruptHandler:
 15288                           	opt stack 0
 15289                           tblptru	equ	0xFF8
 15290                           tblptrh	equ	0xFF7
 15291                           tblptrl	equ	0xFF6
 15292                           tablat	equ	0xFF5
 15293                           prodh	equ	0xFF4
 15294                           prodl	equ	0xFF3
 15295                           intcon	equ	0xFF2
 15296                           postinc0	equ	0xFEE
 15297                           wreg	equ	0xFE8
 15298                           indf1	equ	0xFE7
 15299                           postdec1	equ	0xFE5
 15300                           fsr1h	equ	0xFE2
 15301                           fsr1l	equ	0xFE1
 15302                           indf2	equ	0xFDF
 15303                           postinc2	equ	0xFDE
 15304                           postdec2	equ	0xFDD
 15305                           fsr2h	equ	0xFDA
 15306                           fsr2l	equ	0xFD9
 15307                           status	equ	0xFD8
 15308                           
 15309 ;; *************** function _TMR5_Initialize *****************
 15310 ;; Defined at:
 15311 ;;		line 64 in file "mcc_generated_files/tmr5.c"
 15312 ;; Parameters:    Size  Location     Type
 15313 ;;		None
 15314 ;; Auto vars:     Size  Location     Type
 15315 ;;		None
 15316 ;; Return value:  Size  Location     Type
 15317 ;;                  1    wreg      void 
 15318 ;; Registers used:
 15319 ;;		wreg, status,2, status,0, cstack
 15320 ;; Tracked objects:
 15321 ;;		On entry : 0/0
 15322 ;;		On exit  : 0/0
 15323 ;;		Unchanged: 0/0
 15324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15327 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15328 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15329 ;;Total ram usage:        2 bytes
 15330 ;; Hardware stack levels used:    1
 15331 ;; Hardware stack levels required when called:   15
 15332 ;; This function calls:
 15333 ;;		_TMR5_SetInterruptHandler
 15334 ;; This function is called by:
 15335 ;;		_SYSTEM_Initialize
 15336 ;; This function uses a non-reentrant model
 15337 ;;
 15338                           
 15339                           	psect	text45
 15340  015C3E                     __ptext45:
 15341                           	opt stack 0
 15342  015C3E                     _TMR5_Initialize:
 15343                           	opt stack 14
 15344                           
 15345                           ;tmr5.c: 69: T5GCON = 0x00;
 15346                           
 15347                           ;incstack = 0
 15348  015C3E  0E00               	movlw	0
 15349  015C40  6EC4               	movwf	4036,c	;volatile
 15350                           
 15351                           ;tmr5.c: 72: T5GATE = 0x00;
 15352  015C42  0E00               	movlw	0
 15353  015C44  6EC5               	movwf	4037,c	;volatile
 15354                           
 15355                           ;tmr5.c: 75: T5CLK = 0x01;
 15356  015C46  0E01               	movlw	1
 15357  015C48  6EC6               	movwf	4038,c	;volatile
 15358                           
 15359                           ;tmr5.c: 78: TMR5H = 0x00;
 15360  015C4A  0E00               	movlw	0
 15361  015C4C  6EC2               	movwf	4034,c	;volatile
 15362                           
 15363                           ;tmr5.c: 81: TMR5L = 0x00;
 15364  015C4E  0E00               	movlw	0
 15365  015C50  6EC1               	movwf	4033,c	;volatile
 15366                           
 15367                           ;tmr5.c: 84: timer5ReloadVal=(uint16_t)((TMR5H << 8) | TMR5L);
 15368  015C52  50C1               	movf	4033,w,c	;volatile
 15369  015C54  CFC2 F11A          	movff	4034,??_TMR5_Initialize	;volatile
 15370  015C58  0101               	movlb	1	; () banked
 15371  015C5A  6B1B               	clrf	(??_TMR5_Initialize+1)& (0+255),b
 15372  015C5C  C11A  F11B         	movff	??_TMR5_Initialize,??_TMR5_Initialize+1
 15373  015C60  6B1A               	clrf	??_TMR5_Initialize& (0+255),b
 15374  015C62  111A               	iorwf	??_TMR5_Initialize& (0+255),w,b
 15375  015C64  6FD5               	movwf	_timer5ReloadVal& (0+255),b	;volatile
 15376  015C66  511B               	movf	(??_TMR5_Initialize+1)& (0+255),w,b
 15377  015C68  6FD6               	movwf	(_timer5ReloadVal+1)& (0+255),b	;volatile
 15378                           
 15379                           ; BSR set to: 1
 15380                           ;tmr5.c: 87: PIR5bits.TMR5IF = 0;
 15381  015C6A  010E               	movlb	14	; () banked
 15382  015C6C  9938               	bcf	56,4,b	;volatile
 15383                           
 15384                           ; BSR set to: 14
 15385                           ;tmr5.c: 90: PIE5bits.TMR5IE = 1;
 15386  015C6E  892E               	bsf	46,4,b	;volatile
 15387                           
 15388                           ; BSR set to: 14
 15389                           ;tmr5.c: 93: TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler);
 15390  015C70  0E6E               	movlw	low _TMR5_DefaultInterruptHandler
 15391  015C72  0101               	movlb	1	; () banked
 15392  015C74  6F17               	movwf	TMR5_SetInterruptHandler@InterruptHandler& (0+255),b
 15393  015C76  0E62               	movlw	high _TMR5_DefaultInterruptHandler
 15394  015C78  6F18               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
 15395  015C7A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15396  015C7C  6F19               	movwf	(TMR5_SetInterruptHandler@InterruptHandler+2)& (0+255),b
 15397  015C7E  EC00  F0B1         	call	_TMR5_SetInterruptHandler	;wreg free
 15398                           
 15399                           ;tmr5.c: 96: T5CON = 0x13;
 15400  015C82  0E13               	movlw	19
 15401  015C84  6EC3               	movwf	4035,c	;volatile
 15402  015C86  0012               	return		;funcret
 15403  015C88                     __end_of_TMR5_Initialize:
 15404                           	opt stack 0
 15405                           tblptru	equ	0xFF8
 15406                           tblptrh	equ	0xFF7
 15407                           tblptrl	equ	0xFF6
 15408                           tablat	equ	0xFF5
 15409                           prodh	equ	0xFF4
 15410                           prodl	equ	0xFF3
 15411                           intcon	equ	0xFF2
 15412                           postinc0	equ	0xFEE
 15413                           wreg	equ	0xFE8
 15414                           indf1	equ	0xFE7
 15415                           postdec1	equ	0xFE5
 15416                           fsr1h	equ	0xFE2
 15417                           fsr1l	equ	0xFE1
 15418                           indf2	equ	0xFDF
 15419                           postinc2	equ	0xFDE
 15420                           postdec2	equ	0xFDD
 15421                           fsr2h	equ	0xFDA
 15422                           fsr2l	equ	0xFD9
 15423                           status	equ	0xFD8
 15424                           
 15425 ;; *************** function _TMR5_SetInterruptHandler *****************
 15426 ;; Defined at:
 15427 ;;		line 178 in file "mcc_generated_files/tmr5.c"
 15428 ;; Parameters:    Size  Location     Type
 15429 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 15430 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15431 ;; Auto vars:     Size  Location     Type
 15432 ;;		None
 15433 ;; Return value:  Size  Location     Type
 15434 ;;                  1    wreg      void 
 15435 ;; Registers used:
 15436 ;;		wreg, status,2, status,0
 15437 ;; Tracked objects:
 15438 ;;		On entry : 0/0
 15439 ;;		On exit  : 0/0
 15440 ;;		Unchanged: 0/0
 15441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15442 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15445 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15446 ;;Total ram usage:        3 bytes
 15447 ;; Hardware stack levels used:    1
 15448 ;; Hardware stack levels required when called:   14
 15449 ;; This function calls:
 15450 ;;		Nothing
 15451 ;; This function is called by:
 15452 ;;		_TMR5_Initialize
 15453 ;; This function uses a non-reentrant model
 15454 ;;
 15455                           
 15456                           	psect	text46
 15457  016200                     __ptext46:
 15458                           	opt stack 0
 15459  016200                     _TMR5_SetInterruptHandler:
 15460                           	opt stack 14
 15461                           
 15462                           ;tmr5.c: 179: TMR5_InterruptHandler = InterruptHandler;
 15463                           
 15464                           ;incstack = 0
 15465  016200  C117  F1BD         	movff	TMR5_SetInterruptHandler@InterruptHandler,_TMR5_InterruptHandler
 15466  016204  C118  F1BE         	movff	TMR5_SetInterruptHandler@InterruptHandler+1,_TMR5_InterruptHandler+1
 15467  016208  C119  F1BF         	movff	TMR5_SetInterruptHandler@InterruptHandler+2,_TMR5_InterruptHandler+2
 15468  01620C  0012               	return		;funcret
 15469  01620E                     __end_of_TMR5_SetInterruptHandler:
 15470                           	opt stack 0
 15471                           tblptru	equ	0xFF8
 15472                           tblptrh	equ	0xFF7
 15473                           tblptrl	equ	0xFF6
 15474                           tablat	equ	0xFF5
 15475                           prodh	equ	0xFF4
 15476                           prodl	equ	0xFF3
 15477                           intcon	equ	0xFF2
 15478                           postinc0	equ	0xFEE
 15479                           wreg	equ	0xFE8
 15480                           indf1	equ	0xFE7
 15481                           postdec1	equ	0xFE5
 15482                           fsr1h	equ	0xFE2
 15483                           fsr1l	equ	0xFE1
 15484                           indf2	equ	0xFDF
 15485                           postinc2	equ	0xFDE
 15486                           postdec2	equ	0xFDD
 15487                           fsr2h	equ	0xFDA
 15488                           fsr2l	equ	0xFD9
 15489                           status	equ	0xFD8
 15490                           
 15491 ;; *************** function _PMD_Initialize *****************
 15492 ;; Defined at:
 15493 ;;		line 82 in file "mcc_generated_files/mcc.c"
 15494 ;; Parameters:    Size  Location     Type
 15495 ;;		None
 15496 ;; Auto vars:     Size  Location     Type
 15497 ;;		None
 15498 ;; Return value:  Size  Location     Type
 15499 ;;                  1    wreg      void 
 15500 ;; Registers used:
 15501 ;;		wreg, status,2
 15502 ;; Tracked objects:
 15503 ;;		On entry : 0/0
 15504 ;;		On exit  : 0/0
 15505 ;;		Unchanged: 0/0
 15506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15511 ;;Total ram usage:        0 bytes
 15512 ;; Hardware stack levels used:    1
 15513 ;; Hardware stack levels required when called:   14
 15514 ;; This function calls:
 15515 ;;		Nothing
 15516 ;; This function is called by:
 15517 ;;		_SYSTEM_Initialize
 15518 ;; This function uses a non-reentrant model
 15519 ;;
 15520                           
 15521                           	psect	text47
 15522  01611A                     __ptext47:
 15523                           	opt stack 0
 15524  01611A                     _PMD_Initialize:
 15525                           	opt stack 15
 15526                           
 15527                           ;mcc.c: 85: PMD0 = 0x00;
 15528                           
 15529                           ;incstack = 0
 15530  01611A  0E00               	movlw	0
 15531  01611C  010E               	movlb	14	; () banked
 15532  01611E  6F4C               	movwf	76,b	;volatile
 15533                           
 15534                           ;mcc.c: 87: PMD1 = 0x00;
 15535  016120  0E00               	movlw	0
 15536  016122  6F4D               	movwf	77,b	;volatile
 15537                           
 15538                           ;mcc.c: 89: PMD2 = 0x00;
 15539  016124  0E00               	movlw	0
 15540  016126  6F4E               	movwf	78,b	;volatile
 15541                           
 15542                           ;mcc.c: 91: PMD3 = 0x00;
 15543  016128  0E00               	movlw	0
 15544  01612A  6F4F               	movwf	79,b	;volatile
 15545                           
 15546                           ;mcc.c: 93: PMD4 = 0x00;
 15547  01612C  0E00               	movlw	0
 15548  01612E  6F50               	movwf	80,b	;volatile
 15549                           
 15550                           ;mcc.c: 95: PMD5 = 0x00;
 15551  016130  0E00               	movlw	0
 15552  016132  6F51               	movwf	81,b	;volatile
 15553                           
 15554                           ; BSR set to: 14
 15555  016134  0012               	return		;funcret
 15556  016136                     __end_of_PMD_Initialize:
 15557                           	opt stack 0
 15558                           tblptru	equ	0xFF8
 15559                           tblptrh	equ	0xFF7
 15560                           tblptrl	equ	0xFF6
 15561                           tablat	equ	0xFF5
 15562                           prodh	equ	0xFF4
 15563                           prodl	equ	0xFF3
 15564                           intcon	equ	0xFF2
 15565                           postinc0	equ	0xFEE
 15566                           wreg	equ	0xFE8
 15567                           indf1	equ	0xFE7
 15568                           postdec1	equ	0xFE5
 15569                           fsr1h	equ	0xFE2
 15570                           fsr1l	equ	0xFE1
 15571                           indf2	equ	0xFDF
 15572                           postinc2	equ	0xFDE
 15573                           postdec2	equ	0xFDD
 15574                           fsr2h	equ	0xFDA
 15575                           fsr2l	equ	0xFD9
 15576                           status	equ	0xFD8
 15577                           
 15578 ;; *************** function _PIN_MANAGER_Initialize *****************
 15579 ;; Defined at:
 15580 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15581 ;; Parameters:    Size  Location     Type
 15582 ;;		None
 15583 ;; Auto vars:     Size  Location     Type
 15584 ;;		None
 15585 ;; Return value:  Size  Location     Type
 15586 ;;                  1    wreg      void 
 15587 ;; Registers used:
 15588 ;;		wreg, status,2
 15589 ;; Tracked objects:
 15590 ;;		On entry : 0/0
 15591 ;;		On exit  : 0/0
 15592 ;;		Unchanged: 0/0
 15593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15598 ;;Total ram usage:        0 bytes
 15599 ;; Hardware stack levels used:    1
 15600 ;; Hardware stack levels required when called:   14
 15601 ;; This function calls:
 15602 ;;		Nothing
 15603 ;; This function is called by:
 15604 ;;		_SYSTEM_Initialize
 15605 ;; This function uses a non-reentrant model
 15606 ;;
 15607                           
 15608                           	psect	text48
 15609  014FAC                     __ptext48:
 15610                           	opt stack 0
 15611  014FAC                     _PIN_MANAGER_Initialize:
 15612                           	opt stack 15
 15613                           
 15614                           ;pin_manager.c: 62: LATE = 0x00;
 15615                           
 15616                           ; BSR set to: 14
 15617                           ;incstack = 0
 15618  014FAC  0E00               	movlw	0
 15619  014FAE  6E7D               	movwf	3965,c	;volatile
 15620                           
 15621                           ;pin_manager.c: 63: LATD = 0x00;
 15622  014FB0  0E00               	movlw	0
 15623  014FB2  6E7C               	movwf	3964,c	;volatile
 15624                           
 15625                           ;pin_manager.c: 64: LATA = 0x00;
 15626  014FB4  0E00               	movlw	0
 15627  014FB6  6E79               	movwf	3961,c	;volatile
 15628                           
 15629                           ;pin_manager.c: 65: LATF = 0x00;
 15630  014FB8  0E00               	movlw	0
 15631  014FBA  6E7E               	movwf	3966,c	;volatile
 15632                           
 15633                           ;pin_manager.c: 66: LATB = 0x00;
 15634  014FBC  0E00               	movlw	0
 15635  014FBE  6E7A               	movwf	3962,c	;volatile
 15636                           
 15637                           ;pin_manager.c: 67: LATG = 0x00;
 15638  014FC0  0E00               	movlw	0
 15639  014FC2  6E7F               	movwf	3967,c	;volatile
 15640                           
 15641                           ;pin_manager.c: 68: LATC = 0x00;
 15642  014FC4  0E00               	movlw	0
 15643  014FC6  6E7B               	movwf	3963,c	;volatile
 15644                           
 15645                           ;pin_manager.c: 69: LATH = 0x00;
 15646  014FC8  0E00               	movlw	0
 15647  014FCA  6E80               	movwf	3968,c	;volatile
 15648                           
 15649                           ;pin_manager.c: 74: TRISE = 0xFF;
 15650  014FCC  6885               	setf	3973,c	;volatile
 15651                           
 15652                           ;pin_manager.c: 75: TRISF = 0xF0;
 15653  014FCE  0EF0               	movlw	240
 15654  014FD0  6E86               	movwf	3974,c	;volatile
 15655                           
 15656                           ;pin_manager.c: 76: TRISA = 0xFF;
 15657  014FD2  6881               	setf	3969,c	;volatile
 15658                           
 15659                           ;pin_manager.c: 77: TRISG = 0x5C;
 15660  014FD4  0E5C               	movlw	92
 15661  014FD6  6E87               	movwf	3975,c	;volatile
 15662                           
 15663                           ;pin_manager.c: 78: TRISB = 0xFF;
 15664  014FD8  6882               	setf	3970,c	;volatile
 15665                           
 15666                           ;pin_manager.c: 79: TRISH = 0x0F;
 15667  014FDA  0E0F               	movlw	15
 15668  014FDC  6E88               	movwf	3976,c	;volatile
 15669                           
 15670                           ;pin_manager.c: 80: TRISC = 0xFF;
 15671  014FDE  6883               	setf	3971,c	;volatile
 15672                           
 15673                           ;pin_manager.c: 81: TRISD = 0xFF;
 15674  014FE0  6884               	setf	3972,c	;volatile
 15675                           
 15676                           ;pin_manager.c: 86: ANSELD = 0xFF;
 15677  014FE2  010E               	movlb	14	; () banked
 15678  014FE4  69A7               	setf	167,b	;volatile
 15679                           
 15680                           ; BSR set to: 14
 15681                           ;pin_manager.c: 87: ANSELB = 0xFF;
 15682  014FE6  699A               	setf	154,b	;volatile
 15683                           
 15684                           ; BSR set to: 14
 15685                           ;pin_manager.c: 88: ANSELE = 0xFF;
 15686  014FE8  69AF               	setf	175,b	;volatile
 15687                           
 15688                           ;pin_manager.c: 89: ANSELG = 0x3C;
 15689  014FEA  0E3C               	movlw	60
 15690  014FEC  6FBC               	movwf	188,b	;volatile
 15691                           
 15692                           ;pin_manager.c: 90: ANSELF = 0xF0;
 15693  014FEE  0EF0               	movlw	240
 15694  014FF0  6FB4               	movwf	180,b	;volatile
 15695                           
 15696                           ; BSR set to: 14
 15697                           ;pin_manager.c: 91: ANSELA = 0xFF;
 15698  014FF2  6992               	setf	146,b	;volatile
 15699                           
 15700                           ;pin_manager.c: 96: WPUD = 0x00;
 15701  014FF4  0E00               	movlw	0
 15702  014FF6  6FA6               	movwf	166,b	;volatile
 15703                           
 15704                           ;pin_manager.c: 97: WPUF = 0x00;
 15705  014FF8  0E00               	movlw	0
 15706  014FFA  6FB3               	movwf	179,b	;volatile
 15707                           
 15708                           ;pin_manager.c: 98: WPUE = 0x00;
 15709  014FFC  0E00               	movlw	0
 15710  014FFE  6FAE               	movwf	174,b	;volatile
 15711                           
 15712                           ;pin_manager.c: 99: WPUB = 0x00;
 15713  015000  0E00               	movlw	0
 15714  015002  6F99               	movwf	153,b	;volatile
 15715                           
 15716                           ;pin_manager.c: 100: WPUG = 0x00;
 15717  015004  0E00               	movlw	0
 15718  015006  6FBB               	movwf	187,b	;volatile
 15719                           
 15720                           ;pin_manager.c: 101: WPUA = 0x00;
 15721  015008  0E00               	movlw	0
 15722  01500A  6F91               	movwf	145,b	;volatile
 15723                           
 15724                           ;pin_manager.c: 102: WPUC = 0x00;
 15725  01500C  0E00               	movlw	0
 15726  01500E  6FA1               	movwf	161,b	;volatile
 15727                           
 15728                           ;pin_manager.c: 103: WPUH = 0x00;
 15729  015010  0E00               	movlw	0
 15730  015012  6FC0               	movwf	192,b	;volatile
 15731                           
 15732                           ;pin_manager.c: 108: ODCONE = 0x00;
 15733  015014  0E00               	movlw	0
 15734  015016  6FAD               	movwf	173,b	;volatile
 15735                           
 15736                           ;pin_manager.c: 109: ODCONF = 0x01;
 15737  015018  0E01               	movlw	1
 15738  01501A  6FB2               	movwf	178,b	;volatile
 15739                           
 15740                           ;pin_manager.c: 110: ODCONA = 0x00;
 15741  01501C  0E00               	movlw	0
 15742  01501E  6F90               	movwf	144,b	;volatile
 15743                           
 15744                           ;pin_manager.c: 111: ODCONG = 0x00;
 15745  015020  0E00               	movlw	0
 15746  015022  6FBA               	movwf	186,b	;volatile
 15747                           
 15748                           ;pin_manager.c: 112: ODCONB = 0x00;
 15749  015024  0E00               	movlw	0
 15750  015026  6F98               	movwf	152,b	;volatile
 15751                           
 15752                           ;pin_manager.c: 113: ODCONH = 0x00;
 15753  015028  0E00               	movlw	0
 15754  01502A  6FBF               	movwf	191,b	;volatile
 15755                           
 15756                           ;pin_manager.c: 114: ODCONC = 0x00;
 15757  01502C  0E00               	movlw	0
 15758  01502E  6FA0               	movwf	160,b	;volatile
 15759                           
 15760                           ;pin_manager.c: 115: ODCOND = 0x00;
 15761  015030  0E00               	movlw	0
 15762  015032  6FA5               	movwf	165,b	;volatile
 15763                           
 15764                           ; BSR set to: 14
 15765                           ;pin_manager.c: 120: SLRCONA = 0xFF;
 15766  015034  698F               	setf	143,b	;volatile
 15767                           
 15768                           ; BSR set to: 14
 15769                           ;pin_manager.c: 121: SLRCONB = 0xFF;
 15770  015036  6997               	setf	151,b	;volatile
 15771                           
 15772                           ; BSR set to: 14
 15773                           ;pin_manager.c: 122: SLRCONC = 0xFF;
 15774  015038  699F               	setf	159,b	;volatile
 15775                           
 15776                           ; BSR set to: 14
 15777                           ;pin_manager.c: 123: SLRCOND = 0xFF;
 15778  01503A  69A4               	setf	164,b	;volatile
 15779                           
 15780                           ; BSR set to: 14
 15781                           ;pin_manager.c: 124: SLRCONE = 0xFF;
 15782  01503C  69AC               	setf	172,b	;volatile
 15783                           
 15784                           ; BSR set to: 14
 15785                           ;pin_manager.c: 125: SLRCONF = 0xFF;
 15786  01503E  69B1               	setf	177,b	;volatile
 15787                           
 15788                           ; BSR set to: 14
 15789                           ;pin_manager.c: 126: SLRCONG = 0xFF;
 15790  015040  69B9               	setf	185,b	;volatile
 15791                           
 15792                           ; BSR set to: 14
 15793                           ;pin_manager.c: 127: SLRCONH = 0xFF;
 15794  015042  69BE               	setf	190,b	;volatile
 15795                           
 15796                           ;pin_manager.c: 136: RG7PPS = 0x0E;
 15797  015044  0E0E               	movlw	14
 15798  015046  6F89               	movwf	137,b	;volatile
 15799                           
 15800                           ;pin_manager.c: 137: RX2PPS = 0x36;
 15801  015048  0E36               	movlw	54
 15802  01504A  6F11               	movwf	17,b	;volatile
 15803                           
 15804                           ; BSR set to: 14
 15805  01504C  0012               	return		;funcret
 15806  01504E                     __end_of_PIN_MANAGER_Initialize:
 15807                           	opt stack 0
 15808                           tblptru	equ	0xFF8
 15809                           tblptrh	equ	0xFF7
 15810                           tblptrl	equ	0xFF6
 15811                           tablat	equ	0xFF5
 15812                           prodh	equ	0xFF4
 15813                           prodl	equ	0xFF3
 15814                           intcon	equ	0xFF2
 15815                           postinc0	equ	0xFEE
 15816                           wreg	equ	0xFE8
 15817                           indf1	equ	0xFE7
 15818                           postdec1	equ	0xFE5
 15819                           fsr1h	equ	0xFE2
 15820                           fsr1l	equ	0xFE1
 15821                           indf2	equ	0xFDF
 15822                           postinc2	equ	0xFDE
 15823                           postdec2	equ	0xFDD
 15824                           fsr2h	equ	0xFDA
 15825                           fsr2l	equ	0xFD9
 15826                           status	equ	0xFD8
 15827                           
 15828 ;; *************** function _OSCILLATOR_Initialize *****************
 15829 ;; Defined at:
 15830 ;;		line 64 in file "mcc_generated_files/mcc.c"
 15831 ;; Parameters:    Size  Location     Type
 15832 ;;		None
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;		None
 15835 ;; Return value:  Size  Location     Type
 15836 ;;                  1    wreg      void 
 15837 ;; Registers used:
 15838 ;;		wreg, status,2
 15839 ;; Tracked objects:
 15840 ;;		On entry : 0/0
 15841 ;;		On exit  : 0/0
 15842 ;;		Unchanged: 0/0
 15843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15848 ;;Total ram usage:        0 bytes
 15849 ;; Hardware stack levels used:    1
 15850 ;; Hardware stack levels required when called:   14
 15851 ;; This function calls:
 15852 ;;		Nothing
 15853 ;; This function is called by:
 15854 ;;		_SYSTEM_Initialize
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           	psect	text49
 15859  016136                     __ptext49:
 15860                           	opt stack 0
 15861  016136                     _OSCILLATOR_Initialize:
 15862                           	opt stack 15
 15863                           
 15864                           ;mcc.c: 67: OSCCON1 = 0x20;
 15865                           
 15866                           ; BSR set to: 14
 15867                           ;incstack = 0
 15868  016136  0E20               	movlw	32
 15869  016138  010E               	movlb	14	; () banked
 15870  01613A  6F43               	movwf	67,b	;volatile
 15871                           
 15872                           ;mcc.c: 69: OSCCON3 = 0x00;
 15873  01613C  0E00               	movlw	0
 15874  01613E  6F45               	movwf	69,b	;volatile
 15875                           
 15876                           ;mcc.c: 71: OSCEN = 0x00;
 15877  016140  0E00               	movlw	0
 15878  016142  6F47               	movwf	71,b	;volatile
 15879                           
 15880                           ;mcc.c: 73: OSCFRQ = 0x02;
 15881  016144  0E02               	movlw	2
 15882  016146  6F49               	movwf	73,b	;volatile
 15883                           
 15884                           ;mcc.c: 75: OSCTUNE = 0x00;
 15885  016148  0E00               	movlw	0
 15886  01614A  6F48               	movwf	72,b	;volatile
 15887  01614C                     
 15888                           ; BSR set to: 14
 15889                           
 15890                           ; BSR set to: 14
 15891                           ;mcc.c: 78: {
 15892  01614C  B146               	btfsc	70,0,b	;volatile
 15893  01614E  0012               	return	
 15894  016150  D7FD               	goto	l55
 15895  016152                     __end_of_OSCILLATOR_Initialize:
 15896                           	opt stack 0
 15897                           tblptru	equ	0xFF8
 15898                           tblptrh	equ	0xFF7
 15899                           tblptrl	equ	0xFF6
 15900                           tablat	equ	0xFF5
 15901                           prodh	equ	0xFF4
 15902                           prodl	equ	0xFF3
 15903                           intcon	equ	0xFF2
 15904                           postinc0	equ	0xFEE
 15905                           wreg	equ	0xFE8
 15906                           indf1	equ	0xFE7
 15907                           postdec1	equ	0xFE5
 15908                           fsr1h	equ	0xFE2
 15909                           fsr1l	equ	0xFE1
 15910                           indf2	equ	0xFDF
 15911                           postinc2	equ	0xFDE
 15912                           postdec2	equ	0xFDD
 15913                           fsr2h	equ	0xFDA
 15914                           fsr2l	equ	0xFD9
 15915                           status	equ	0xFD8
 15916                           
 15917 ;; *************** function _INTERRUPT_Initialize *****************
 15918 ;; Defined at:
 15919 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15920 ;; Parameters:    Size  Location     Type
 15921 ;;		None
 15922 ;; Auto vars:     Size  Location     Type
 15923 ;;		None
 15924 ;; Return value:  Size  Location     Type
 15925 ;;                  1    wreg      void 
 15926 ;; Registers used:
 15927 ;;		None
 15928 ;; Tracked objects:
 15929 ;;		On entry : 0/0
 15930 ;;		On exit  : 0/0
 15931 ;;		Unchanged: 0/0
 15932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 15933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15937 ;;Total ram usage:        0 bytes
 15938 ;; Hardware stack levels used:    1
 15939 ;; Hardware stack levels required when called:   14
 15940 ;; This function calls:
 15941 ;;		Nothing
 15942 ;; This function is called by:
 15943 ;;		_SYSTEM_Initialize
 15944 ;; This function uses a non-reentrant model
 15945 ;;
 15946                           
 15947                           	psect	text50
 15948  016194                     __ptext50:
 15949                           	opt stack 0
 15950  016194                     _INTERRUPT_Initialize:
 15951                           	opt stack 15
 15952                           
 15953                           ;interrupt_manager.c: 55: INTCONbits.IPEN = 1;
 15954                           
 15955                           ; BSR set to: 14
 15956                           ;incstack = 0
 15957  016194  8AF2               	bsf	intcon,5,c	;volatile
 15958                           
 15959                           ;interrupt_manager.c: 60: IPR3bits.RC2IP = 1;
 15960  016196  010E               	movlb	14	; () banked
 15961  016198  8F22               	bsf	34,7,b	;volatile
 15962                           
 15963                           ;interrupt_manager.c: 63: IPR5bits.TMR5IP = 1;
 15964  01619A  8924               	bsf	36,4,b	;volatile
 15965                           
 15966                           ;interrupt_manager.c: 66: IPR1bits.ADIP = 1;
 15967  01619C  8120               	bsf	32,0,b	;volatile
 15968                           
 15969                           ;interrupt_manager.c: 70: IPR5bits.TMR6IP = 0;
 15970  01619E  9B24               	bcf	36,5,b	;volatile
 15971                           
 15972                           ;interrupt_manager.c: 73: IPR3bits.TX2IP = 0;
 15973  0161A0  9D22               	bcf	34,6,b	;volatile
 15974                           
 15975                           ;interrupt_manager.c: 76: IPR5bits.TMR7IP = 0;
 15976  0161A2  9D24               	bcf	36,6,b	;volatile
 15977                           
 15978                           ; BSR set to: 14
 15979  0161A4  0012               	return		;funcret
 15980  0161A6                     __end_of_INTERRUPT_Initialize:
 15981                           	opt stack 0
 15982                           tblptru	equ	0xFF8
 15983                           tblptrh	equ	0xFF7
 15984                           tblptrl	equ	0xFF6
 15985                           tablat	equ	0xFF5
 15986                           prodh	equ	0xFF4
 15987                           prodl	equ	0xFF3
 15988                           intcon	equ	0xFF2
 15989                           postinc0	equ	0xFEE
 15990                           wreg	equ	0xFE8
 15991                           indf1	equ	0xFE7
 15992                           postdec1	equ	0xFE5
 15993                           fsr1h	equ	0xFE2
 15994                           fsr1l	equ	0xFE1
 15995                           indf2	equ	0xFDF
 15996                           postinc2	equ	0xFDE
 15997                           postdec2	equ	0xFDD
 15998                           fsr2h	equ	0xFDA
 15999                           fsr2l	equ	0xFD9
 16000                           status	equ	0xFD8
 16001                           
 16002 ;; *************** function _FVR_Initialize *****************
 16003 ;; Defined at:
 16004 ;;		line 58 in file "mcc_generated_files/fvr.c"
 16005 ;; Parameters:    Size  Location     Type
 16006 ;;		None
 16007 ;; Auto vars:     Size  Location     Type
 16008 ;;		None
 16009 ;; Return value:  Size  Location     Type
 16010 ;;                  1    wreg      void 
 16011 ;; Registers used:
 16012 ;;		wreg, status,2
 16013 ;; Tracked objects:
 16014 ;;		On entry : 0/0
 16015 ;;		On exit  : 0/0
 16016 ;;		Unchanged: 0/0
 16017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16022 ;;Total ram usage:        0 bytes
 16023 ;; Hardware stack levels used:    1
 16024 ;; Hardware stack levels required when called:   14
 16025 ;; This function calls:
 16026 ;;		Nothing
 16027 ;; This function is called by:
 16028 ;;		_SYSTEM_Initialize
 16029 ;; This function uses a non-reentrant model
 16030 ;;
 16031                           
 16032                           	psect	text51
 16033  01625C                     __ptext51:
 16034                           	opt stack 0
 16035  01625C                     _FVR_Initialize:
 16036                           	opt stack 15
 16037                           
 16038                           ;fvr.c: 61: FVRCON = 0xA6;
 16039                           
 16040                           ; BSR set to: 14
 16041                           ;incstack = 0
 16042  01625C  0EA6               	movlw	166
 16043  01625E  010E               	movlb	14	; () banked
 16044  016260  6FC4               	movwf	196,b	;volatile
 16045                           
 16046                           ; BSR set to: 14
 16047  016262  0012               	return		;funcret
 16048  016264                     __end_of_FVR_Initialize:
 16049                           	opt stack 0
 16050                           tblptru	equ	0xFF8
 16051                           tblptrh	equ	0xFF7
 16052                           tblptrl	equ	0xFF6
 16053                           tablat	equ	0xFF5
 16054                           prodh	equ	0xFF4
 16055                           prodl	equ	0xFF3
 16056                           intcon	equ	0xFF2
 16057                           postinc0	equ	0xFEE
 16058                           wreg	equ	0xFE8
 16059                           indf1	equ	0xFE7
 16060                           postdec1	equ	0xFE5
 16061                           fsr1h	equ	0xFE2
 16062                           fsr1l	equ	0xFE1
 16063                           indf2	equ	0xFDF
 16064                           postinc2	equ	0xFDE
 16065                           postdec2	equ	0xFDD
 16066                           fsr2h	equ	0xFDA
 16067                           fsr2l	equ	0xFD9
 16068                           status	equ	0xFD8
 16069                           
 16070 ;; *************** function _EUSART2_Initialize *****************
 16071 ;; Defined at:
 16072 ;;		line 77 in file "mcc_generated_files/eusart2.c"
 16073 ;; Parameters:    Size  Location     Type
 16074 ;;		None
 16075 ;; Auto vars:     Size  Location     Type
 16076 ;;		None
 16077 ;; Return value:  Size  Location     Type
 16078 ;;                  1    wreg      void 
 16079 ;; Registers used:
 16080 ;;		wreg, status,2, status,0, cstack
 16081 ;; Tracked objects:
 16082 ;;		On entry : 0/0
 16083 ;;		On exit  : 0/0
 16084 ;;		Unchanged: 0/0
 16085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16089 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16090 ;;Total ram usage:        0 bytes
 16091 ;; Hardware stack levels used:    1
 16092 ;; Hardware stack levels required when called:   15
 16093 ;; This function calls:
 16094 ;;		_EUSART2_SetRxInterruptHandler
 16095 ;;		_EUSART2_SetTxInterruptHandler
 16096 ;; This function is called by:
 16097 ;;		_SYSTEM_Initialize
 16098 ;; This function uses a non-reentrant model
 16099 ;;
 16100                           
 16101                           	psect	text52
 16102  0157B0                     __ptext52:
 16103                           	opt stack 0
 16104  0157B0                     _EUSART2_Initialize:
 16105                           	opt stack 14
 16106                           
 16107                           ;eusart2.c: 80: PIE3bits.RC2IE = 0;
 16108                           
 16109                           ; BSR set to: 14
 16110                           ;incstack = 0
 16111  0157B0  010E               	movlb	14	; () banked
 16112  0157B2  9F2C               	bcf	44,7,b	;volatile
 16113                           
 16114                           ; BSR set to: 14
 16115                           ;eusart2.c: 81: EUSART2_SetRxInterruptHandler(EUSART2_Receive_ISR);
 16116  0157B4  0E02               	movlw	low _EUSART2_Receive_ISR
 16117  0157B6  0101               	movlb	1	; () banked
 16118  0157B8  6F17               	movwf	EUSART2_SetRxInterruptHandler@interruptHandler& (0+255),b
 16119  0157BA  0E4F               	movlw	high _EUSART2_Receive_ISR
 16120  0157BC  6F18               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+1)& (0+255),b
 16121  0157BE  0E01               	movlw	low (_EUSART2_Receive_ISR shr (0+16))
 16122  0157C0  6F19               	movwf	(EUSART2_SetRxInterruptHandler@interruptHandler+2)& (0+255),b
 16123  0157C2  EC0E  F0B1         	call	_EUSART2_SetRxInterruptHandler	;wreg free
 16124                           
 16125                           ;eusart2.c: 82: PIE3bits.TX2IE = 0;
 16126  0157C6  010E               	movlb	14	; () banked
 16127  0157C8  9D2C               	bcf	44,6,b	;volatile
 16128                           
 16129                           ;eusart2.c: 83: EUSART2_SetTxInterruptHandler(EUSART2_Transmit_ISR);
 16130  0157CA  0E50               	movlw	low _EUSART2_Transmit_ISR
 16131  0157CC  0101               	movlb	1	; () banked
 16132  0157CE  6F17               	movwf	EUSART2_SetTxInterruptHandler@interruptHandler& (0+255),b
 16133  0157D0  0E5E               	movlw	high _EUSART2_Transmit_ISR
 16134  0157D2  6F18               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+1)& (0+255),b
 16135  0157D4  0E01               	movlw	low (_EUSART2_Transmit_ISR shr (0+16))
 16136  0157D6  6F19               	movwf	(EUSART2_SetTxInterruptHandler@interruptHandler+2)& (0+255),b
 16137  0157D8  EC07  F0B1         	call	_EUSART2_SetTxInterruptHandler	;wreg free
 16138                           
 16139                           ;eusart2.c: 87: BAUD2CON = 0x08;
 16140  0157DC  0E08               	movlw	8
 16141  0157DE  010E               	movlb	14	; () banked
 16142  0157E0  6FF7               	movwf	247,b	;volatile
 16143                           
 16144                           ; BSR set to: 14
 16145                           ;eusart2.c: 90: RC2STA = 0x90;
 16146  0157E2  0E90               	movlw	144
 16147  0157E4  6FF5               	movwf	245,b	;volatile
 16148                           
 16149                           ; BSR set to: 14
 16150                           ;eusart2.c: 93: TX2STA = 0x24;
 16151  0157E6  0E24               	movlw	36
 16152  0157E8  6FF6               	movwf	246,b	;volatile
 16153                           
 16154                           ; BSR set to: 14
 16155                           ;eusart2.c: 96: SP2BRGL = 0x8A;
 16156  0157EA  0E8A               	movlw	138
 16157  0157EC  6FF3               	movwf	243,b	;volatile
 16158                           
 16159                           ; BSR set to: 14
 16160                           ;eusart2.c: 99: SP2BRGH = 0x00;
 16161  0157EE  0E00               	movlw	0
 16162  0157F0  6FF4               	movwf	244,b	;volatile
 16163                           
 16164                           ; BSR set to: 14
 16165                           ;eusart2.c: 103: eusart2TxHead = 0;
 16166  0157F2  0E00               	movlw	0
 16167  0157F4  0101               	movlb	1	; () banked
 16168  0157F6  6FDF               	movwf	_eusart2TxHead& (0+255),b	;volatile
 16169                           
 16170                           ; BSR set to: 1
 16171                           ;eusart2.c: 104: eusart2TxTail = 0;
 16172  0157F8  0E00               	movlw	0
 16173  0157FA  6FDE               	movwf	_eusart2TxTail& (0+255),b	;volatile
 16174                           
 16175                           ; BSR set to: 1
 16176                           ;eusart2.c: 105: eusart2TxBufferRemaining = sizeof(eusart2TxBuffer);
 16177  0157FC  0E80               	movlw	128
 16178  0157FE  6FDD               	movwf	_eusart2TxBufferRemaining& (0+255),b	;volatile
 16179                           
 16180                           ; BSR set to: 1
 16181                           ;eusart2.c: 107: eusart2RxHead = 0;
 16182  015800  0E00               	movlw	0
 16183  015802  0100               	movlb	0	; () banked
 16184  015804  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 16185                           
 16186                           ; BSR set to: 0
 16187                           ;eusart2.c: 108: eusart2RxTail = 0;
 16188  015806  0E00               	movlw	0
 16189  015808  0101               	movlb	1	; () banked
 16190  01580A  6FDC               	movwf	_eusart2RxTail& (0+255),b	;volatile
 16191                           
 16192                           ; BSR set to: 1
 16193                           ;eusart2.c: 109: eusart2RxCount = 0;
 16194  01580C  0E00               	movlw	0
 16195  01580E  6FDB               	movwf	_eusart2RxCount& (0+255),b	;volatile
 16196                           
 16197                           ; BSR set to: 1
 16198                           ;eusart2.c: 112: PIE3bits.RC2IE = 1;
 16199  015810  010E               	movlb	14	; () banked
 16200  015812  8F2C               	bsf	44,7,b	;volatile
 16201                           
 16202                           ; BSR set to: 14
 16203  015814  0012               	return		;funcret
 16204  015816                     __end_of_EUSART2_Initialize:
 16205                           	opt stack 0
 16206                           tblptru	equ	0xFF8
 16207                           tblptrh	equ	0xFF7
 16208                           tblptrl	equ	0xFF6
 16209                           tablat	equ	0xFF5
 16210                           prodh	equ	0xFF4
 16211                           prodl	equ	0xFF3
 16212                           intcon	equ	0xFF2
 16213                           postinc0	equ	0xFEE
 16214                           wreg	equ	0xFE8
 16215                           indf1	equ	0xFE7
 16216                           postdec1	equ	0xFE5
 16217                           fsr1h	equ	0xFE2
 16218                           fsr1l	equ	0xFE1
 16219                           indf2	equ	0xFDF
 16220                           postinc2	equ	0xFDE
 16221                           postdec2	equ	0xFDD
 16222                           fsr2h	equ	0xFDA
 16223                           fsr2l	equ	0xFD9
 16224                           status	equ	0xFD8
 16225                           
 16226 ;; *************** function _EUSART2_SetTxInterruptHandler *****************
 16227 ;; Defined at:
 16228 ;;		line 264 in file "mcc_generated_files/eusart2.c"
 16229 ;; Parameters:    Size  Location     Type
 16230 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 16231 ;;		 -> EUSART2_Transmit_ISR(1), 
 16232 ;; Auto vars:     Size  Location     Type
 16233 ;;		None
 16234 ;; Return value:  Size  Location     Type
 16235 ;;                  1    wreg      void 
 16236 ;; Registers used:
 16237 ;;		wreg, status,2, status,0
 16238 ;; Tracked objects:
 16239 ;;		On entry : 0/0
 16240 ;;		On exit  : 0/0
 16241 ;;		Unchanged: 0/0
 16242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16243 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16246 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16247 ;;Total ram usage:        3 bytes
 16248 ;; Hardware stack levels used:    1
 16249 ;; Hardware stack levels required when called:   14
 16250 ;; This function calls:
 16251 ;;		Nothing
 16252 ;; This function is called by:
 16253 ;;		_EUSART2_Initialize
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text53
 16258  01620E                     __ptext53:
 16259                           	opt stack 0
 16260  01620E                     _EUSART2_SetTxInterruptHandler:
 16261                           	opt stack 14
 16262                           
 16263                           ;eusart2.c: 265: EUSART2_TxDefaultInterruptHandler = interruptHandler;
 16264                           
 16265                           ; BSR set to: 14
 16266                           ;incstack = 0
 16267  01620E  C117  F1D2         	movff	EUSART2_SetTxInterruptHandler@interruptHandler,_EUSART2_TxDefaultInterruptHandler
 16268  016212  C118  F1D3         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+1,_EUSART2_TxDefaultInterruptHandl
      +                          er+1
 16269  016216  C119  F1D4         	movff	EUSART2_SetTxInterruptHandler@interruptHandler+2,_EUSART2_TxDefaultInterruptHandl
      +                          er+2
 16270  01621A  0012               	return		;funcret
 16271  01621C                     __end_of_EUSART2_SetTxInterruptHandler:
 16272                           	opt stack 0
 16273                           tblptru	equ	0xFF8
 16274                           tblptrh	equ	0xFF7
 16275                           tblptrl	equ	0xFF6
 16276                           tablat	equ	0xFF5
 16277                           prodh	equ	0xFF4
 16278                           prodl	equ	0xFF3
 16279                           intcon	equ	0xFF2
 16280                           postinc0	equ	0xFEE
 16281                           wreg	equ	0xFE8
 16282                           indf1	equ	0xFE7
 16283                           postdec1	equ	0xFE5
 16284                           fsr1h	equ	0xFE2
 16285                           fsr1l	equ	0xFE1
 16286                           indf2	equ	0xFDF
 16287                           postinc2	equ	0xFDE
 16288                           postdec2	equ	0xFDD
 16289                           fsr2h	equ	0xFDA
 16290                           fsr2l	equ	0xFD9
 16291                           status	equ	0xFD8
 16292                           
 16293 ;; *************** function _EUSART2_SetRxInterruptHandler *****************
 16294 ;; Defined at:
 16295 ;;		line 268 in file "mcc_generated_files/eusart2.c"
 16296 ;; Parameters:    Size  Location     Type
 16297 ;;  interruptHan    3   23[BANK1 ] PTR FTN()void 
 16298 ;;		 -> EUSART2_Receive_ISR(1), 
 16299 ;; Auto vars:     Size  Location     Type
 16300 ;;		None
 16301 ;; Return value:  Size  Location     Type
 16302 ;;                  1    wreg      void 
 16303 ;; Registers used:
 16304 ;;		wreg, status,2, status,0
 16305 ;; Tracked objects:
 16306 ;;		On entry : 0/0
 16307 ;;		On exit  : 0/0
 16308 ;;		Unchanged: 0/0
 16309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16310 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16313 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16314 ;;Total ram usage:        3 bytes
 16315 ;; Hardware stack levels used:    1
 16316 ;; Hardware stack levels required when called:   14
 16317 ;; This function calls:
 16318 ;;		Nothing
 16319 ;; This function is called by:
 16320 ;;		_EUSART2_Initialize
 16321 ;; This function uses a non-reentrant model
 16322 ;;
 16323                           
 16324                           	psect	text54
 16325  01621C                     __ptext54:
 16326                           	opt stack 0
 16327  01621C                     _EUSART2_SetRxInterruptHandler:
 16328                           	opt stack 14
 16329                           
 16330                           ;eusart2.c: 269: EUSART2_RxDefaultInterruptHandler = interruptHandler;
 16331                           
 16332                           ;incstack = 0
 16333  01621C  C117  F0D4         	movff	EUSART2_SetRxInterruptHandler@interruptHandler,_EUSART2_RxDefaultInterruptHandler
 16334  016220  C118  F0D5         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+1,_EUSART2_RxDefaultInterruptHandl
      +                          er+1
 16335  016224  C119  F0D6         	movff	EUSART2_SetRxInterruptHandler@interruptHandler+2,_EUSART2_RxDefaultInterruptHandl
      +                          er+2
 16336  016228  0012               	return		;funcret
 16337  01622A                     __end_of_EUSART2_SetRxInterruptHandler:
 16338                           	opt stack 0
 16339                           tblptru	equ	0xFF8
 16340                           tblptrh	equ	0xFF7
 16341                           tblptrl	equ	0xFF6
 16342                           tablat	equ	0xFF5
 16343                           prodh	equ	0xFF4
 16344                           prodl	equ	0xFF3
 16345                           intcon	equ	0xFF2
 16346                           postinc0	equ	0xFEE
 16347                           wreg	equ	0xFE8
 16348                           indf1	equ	0xFE7
 16349                           postdec1	equ	0xFE5
 16350                           fsr1h	equ	0xFE2
 16351                           fsr1l	equ	0xFE1
 16352                           indf2	equ	0xFDF
 16353                           postinc2	equ	0xFDE
 16354                           postdec2	equ	0xFDD
 16355                           fsr2h	equ	0xFDA
 16356                           fsr2l	equ	0xFD9
 16357                           status	equ	0xFD8
 16358                           
 16359 ;; *************** function _ADCC_Initialize *****************
 16360 ;; Defined at:
 16361 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16362 ;; Parameters:    Size  Location     Type
 16363 ;;		None
 16364 ;; Auto vars:     Size  Location     Type
 16365 ;;		None
 16366 ;; Return value:  Size  Location     Type
 16367 ;;                  1    wreg      void 
 16368 ;; Registers used:
 16369 ;;		wreg, status,2, status,0, cstack
 16370 ;; Tracked objects:
 16371 ;;		On entry : 0/0
 16372 ;;		On exit  : 0/0
 16373 ;;		Unchanged: 0/0
 16374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16379 ;;Total ram usage:        0 bytes
 16380 ;; Hardware stack levels used:    1
 16381 ;; Hardware stack levels required when called:   15
 16382 ;; This function calls:
 16383 ;;		_ADCC_SetADIInterruptHandler
 16384 ;; This function is called by:
 16385 ;;		_SYSTEM_Initialize
 16386 ;; This function uses a non-reentrant model
 16387 ;;
 16388                           
 16389                           	psect	text55
 16390  01587C                     __ptext55:
 16391                           	opt stack 0
 16392  01587C                     _ADCC_Initialize:
 16393                           	opt stack 14
 16394                           
 16395                           ;adcc.c: 67: ADLTHL = 0x00;
 16396                           
 16397                           ;incstack = 0
 16398  01587C  0E00               	movlw	0
 16399  01587E  6E6A               	movwf	3946,c	;volatile
 16400                           
 16401                           ;adcc.c: 69: ADLTHH = 0x00;
 16402  015880  0E00               	movlw	0
 16403  015882  6E6B               	movwf	3947,c	;volatile
 16404                           
 16405                           ;adcc.c: 71: ADUTHL = 0x00;
 16406  015884  0E00               	movlw	0
 16407  015886  6E6C               	movwf	3948,c	;volatile
 16408                           
 16409                           ;adcc.c: 73: ADUTHH = 0x00;
 16410  015888  0E00               	movlw	0
 16411  01588A  6E6D               	movwf	3949,c	;volatile
 16412                           
 16413                           ;adcc.c: 75: ADSTPTL = 0x00;
 16414  01588C  0E00               	movlw	0
 16415  01588E  6E68               	movwf	3944,c	;volatile
 16416                           
 16417                           ;adcc.c: 77: ADSTPTH = 0x00;
 16418  015890  0E00               	movlw	0
 16419  015892  6E69               	movwf	3945,c	;volatile
 16420                           
 16421                           ;adcc.c: 79: ADRPT = 0x00;
 16422  015894  0E00               	movlw	0
 16423  015896  6E66               	movwf	3942,c	;volatile
 16424                           
 16425                           ;adcc.c: 81: ADPCH = 0x00;
 16426  015898  0E00               	movlw	0
 16427  01589A  010F               	movlb	15	; () banked
 16428  01589C  6F5F               	movwf	95,b	;volatile
 16429                           
 16430                           ;adcc.c: 83: ADCAP = 0x00;
 16431  01589E  0E00               	movlw	0
 16432  0158A0  6F5D               	movwf	93,b	;volatile
 16433                           
 16434                           ;adcc.c: 85: ADCON1 = 0x00;
 16435  0158A2  0E00               	movlw	0
 16436  0158A4  6F59               	movwf	89,b	;volatile
 16437                           
 16438                           ;adcc.c: 87: ADCON2 = 0x04;
 16439  0158A6  0E04               	movlw	4
 16440  0158A8  6F5A               	movwf	90,b	;volatile
 16441                           
 16442                           ;adcc.c: 89: ADCON3 = 0x00;
 16443  0158AA  0E00               	movlw	0
 16444  0158AC  6F5B               	movwf	91,b	;volatile
 16445                           
 16446                           ;adcc.c: 91: ADSTAT = 0x00;
 16447  0158AE  0E00               	movlw	0
 16448  0158B0  6E65               	movwf	3941,c	;volatile
 16449                           
 16450                           ;adcc.c: 93: ADREF = 0x12;
 16451  0158B2  0E12               	movlw	18
 16452  0158B4  6F58               	movwf	88,b	;volatile
 16453                           
 16454                           ;adcc.c: 95: ADACT = 0x00;
 16455  0158B6  0E00               	movlw	0
 16456  0158B8  6F56               	movwf	86,b	;volatile
 16457                           
 16458                           ;adcc.c: 97: ADCLK = 0x00;
 16459  0158BA  0E00               	movlw	0
 16460  0158BC  6F57               	movwf	87,b	;volatile
 16461                           
 16462                           ;adcc.c: 99: ADCON0 = 0x94;
 16463  0158BE  0E94               	movlw	148
 16464  0158C0  6E60               	movwf	3936,c	;volatile
 16465                           
 16466                           ;adcc.c: 101: ADACQ = 0x00;
 16467  0158C2  0E00               	movlw	0
 16468  0158C4  6F5C               	movwf	92,b	;volatile
 16469                           
 16470                           ; BSR set to: 15
 16471                           ;adcc.c: 104: PIR1bits.ADIF = 0;
 16472  0158C6  010E               	movlb	14	; () banked
 16473  0158C8  9134               	bcf	52,0,b	;volatile
 16474                           
 16475                           ; BSR set to: 14
 16476                           ;adcc.c: 106: PIE1bits.ADIE = 1;
 16477  0158CA  812A               	bsf	42,0,b	;volatile
 16478                           
 16479                           ; BSR set to: 14
 16480                           ;adcc.c: 108: ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptHandler);
 16481  0158CC  0E70               	movlw	low _ADCC_DefaultInterruptHandler
 16482  0158CE  0101               	movlb	1	; () banked
 16483  0158D0  6F17               	movwf	ADCC_SetADIInterruptHandler@InterruptHandler& (0+255),b
 16484  0158D2  0E62               	movlw	high _ADCC_DefaultInterruptHandler
 16485  0158D4  6F18               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+1)& (0+255),b
 16486  0158D6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 16487  0158D8  6F19               	movwf	(ADCC_SetADIInterruptHandler@InterruptHandler+2)& (0+255),b
 16488  0158DA  EC15  F0B1         	call	_ADCC_SetADIInterruptHandler	;wreg free
 16489  0158DE  0012               	return		;funcret
 16490  0158E0                     __end_of_ADCC_Initialize:
 16491                           	opt stack 0
 16492                           tblptru	equ	0xFF8
 16493                           tblptrh	equ	0xFF7
 16494                           tblptrl	equ	0xFF6
 16495                           tablat	equ	0xFF5
 16496                           prodh	equ	0xFF4
 16497                           prodl	equ	0xFF3
 16498                           intcon	equ	0xFF2
 16499                           postinc0	equ	0xFEE
 16500                           wreg	equ	0xFE8
 16501                           indf1	equ	0xFE7
 16502                           postdec1	equ	0xFE5
 16503                           fsr1h	equ	0xFE2
 16504                           fsr1l	equ	0xFE1
 16505                           indf2	equ	0xFDF
 16506                           postinc2	equ	0xFDE
 16507                           postdec2	equ	0xFDD
 16508                           fsr2h	equ	0xFDA
 16509                           fsr2l	equ	0xFD9
 16510                           status	equ	0xFD8
 16511                           
 16512 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 16513 ;; Defined at:
 16514 ;;		line 306 in file "mcc_generated_files/adcc.c"
 16515 ;; Parameters:    Size  Location     Type
 16516 ;;  InterruptHan    3   23[BANK1 ] PTR FTN()void 
 16517 ;;		 -> ADC_postProcessingCallback(1), ADCC_DefaultInterruptHandler(1), 
 16518 ;; Auto vars:     Size  Location     Type
 16519 ;;		None
 16520 ;; Return value:  Size  Location     Type
 16521 ;;                  1    wreg      void 
 16522 ;; Registers used:
 16523 ;;		wreg, status,2, status,0
 16524 ;; Tracked objects:
 16525 ;;		On entry : 0/0
 16526 ;;		On exit  : 0/0
 16527 ;;		Unchanged: 0/0
 16528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16529 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16532 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16533 ;;Total ram usage:        3 bytes
 16534 ;; Hardware stack levels used:    1
 16535 ;; Hardware stack levels required when called:   14
 16536 ;; This function calls:
 16537 ;;		Nothing
 16538 ;; This function is called by:
 16539 ;;		_ADCC_Initialize
 16540 ;;		_main
 16541 ;; This function uses a non-reentrant model
 16542 ;;
 16543                           
 16544                           	psect	text56
 16545  01622A                     __ptext56:
 16546                           	opt stack 0
 16547  01622A                     _ADCC_SetADIInterruptHandler:
 16548                           	opt stack 14
 16549                           
 16550                           ;adcc.c: 307: ADCC_ADI_InterruptHandler = InterruptHandler;
 16551                           
 16552                           ;incstack = 0
 16553  01622A  C117  F0D1         	movff	ADCC_SetADIInterruptHandler@InterruptHandler,_ADCC_ADI_InterruptHandler
 16554  01622E  C118  F0D2         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+1,_ADCC_ADI_InterruptHandler+1
 16555  016232  C119  F0D3         	movff	ADCC_SetADIInterruptHandler@InterruptHandler+2,_ADCC_ADI_InterruptHandler+2
 16556  016236  0012               	return		;funcret
 16557  016238                     __end_of_ADCC_SetADIInterruptHandler:
 16558                           	opt stack 0
 16559                           tblptru	equ	0xFF8
 16560                           tblptrh	equ	0xFF7
 16561                           tblptrl	equ	0xFF6
 16562                           tablat	equ	0xFF5
 16563                           prodh	equ	0xFF4
 16564                           prodl	equ	0xFF3
 16565                           intcon	equ	0xFF2
 16566                           postinc0	equ	0xFEE
 16567                           wreg	equ	0xFE8
 16568                           indf1	equ	0xFE7
 16569                           postdec1	equ	0xFE5
 16570                           fsr1h	equ	0xFE2
 16571                           fsr1l	equ	0xFE1
 16572                           indf2	equ	0xFDF
 16573                           postinc2	equ	0xFDE
 16574                           postdec2	equ	0xFDD
 16575                           fsr2h	equ	0xFDA
 16576                           fsr2l	equ	0xFD9
 16577                           status	equ	0xFD8
 16578                           
 16579 ;; *************** function _INTERRUPT_InterruptManagerLow *****************
 16580 ;; Defined at:
 16581 ;;		line 101 in file "mcc_generated_files/interrupt_manager.c"
 16582 ;; Parameters:    Size  Location     Type
 16583 ;;		None
 16584 ;; Auto vars:     Size  Location     Type
 16585 ;;		None
 16586 ;; Return value:  Size  Location     Type
 16587 ;;                  1    wreg      void 
 16588 ;; Registers used:
 16589 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16590 ;; Tracked objects:
 16591 ;;		On entry : 0/0
 16592 ;;		On exit  : 0/0
 16593 ;;		Unchanged: 0/0
 16594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16595 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16596 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16597 ;;      Temps:          0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16598 ;;      Totals:         0       0      21       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16599 ;;Total ram usage:       21 bytes
 16600 ;; Hardware stack levels used:    1
 16601 ;; Hardware stack levels required when called:   13
 16602 ;; This function calls:
 16603 ;;		Absolute function
 16604 ;;		_EUSART2_Transmit_ISR
 16605 ;;		_TMR6_ISR
 16606 ;;		_TMR7_ISR
 16607 ;; This function is called by:
 16608 ;;		Interrupt level 1
 16609 ;; This function uses a non-reentrant model
 16610 ;;
 16611                           
 16612                           	psect	intcodelo
 16613  000018                     __pintcodelo:
 16614                           	opt stack 0
 16615  000018                     _INTERRUPT_InterruptManagerLow:
 16616                           	opt stack 9
 16617                           
 16618                           ;incstack = 0
 16619  000018  805E               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 16620  00001A  CFD8 F102          	movff	status,??_INTERRUPT_InterruptManagerLow
 16621  00001E  CFE8 F103          	movff	wreg,??_INTERRUPT_InterruptManagerLow+1
 16622  000022  CFE0 F104          	movff	bsr,??_INTERRUPT_InterruptManagerLow+2
 16623  000026  CFFA F105          	movff	pclath,??_INTERRUPT_InterruptManagerLow+3
 16624  00002A  CFFB F106          	movff	pclatu,??_INTERRUPT_InterruptManagerLow+4
 16625  00002E  CFE9 F107          	movff	fsr0l,??_INTERRUPT_InterruptManagerLow+5
 16626  000032  CFEA F108          	movff	fsr0h,??_INTERRUPT_InterruptManagerLow+6
 16627  000036  CFE1 F109          	movff	fsr1l,??_INTERRUPT_InterruptManagerLow+7
 16628  00003A  CFE2 F10A          	movff	fsr1h,??_INTERRUPT_InterruptManagerLow+8
 16629  00003E  CFD9 F10B          	movff	fsr2l,??_INTERRUPT_InterruptManagerLow+9
 16630  000042  CFDA F10C          	movff	fsr2h,??_INTERRUPT_InterruptManagerLow+10
 16631  000046  CFF3 F10D          	movff	prodl,??_INTERRUPT_InterruptManagerLow+11
 16632  00004A  CFF4 F10E          	movff	prodh,??_INTERRUPT_InterruptManagerLow+12
 16633  00004E  CFF6 F10F          	movff	tblptrl,??_INTERRUPT_InterruptManagerLow+13
 16634  000052  CFF7 F110          	movff	tblptrh,??_INTERRUPT_InterruptManagerLow+14
 16635  000056  CFF8 F111          	movff	tblptru,??_INTERRUPT_InterruptManagerLow+15
 16636  00005A  CFF5 F112          	movff	tablat,??_INTERRUPT_InterruptManagerLow+16
 16637  00005E  C05E  F113         	movff	btemp,??_INTERRUPT_InterruptManagerLow+17
 16638  000062  C05F  F114         	movff	btemp+1,??_INTERRUPT_InterruptManagerLow+18
 16639  000066  C060  F115         	movff	btemp+2,??_INTERRUPT_InterruptManagerLow+19
 16640  00006A  C061  F116         	movff	btemp+3,??_INTERRUPT_InterruptManagerLow+20
 16641                           
 16642                           ;interrupt_manager.c: 104: if(PIE5bits.TMR6IE == 1 && PIR5bits.TMR6IF == 1)
 16643  00006E  010E               	movlb	14	; () banked
 16644  000070  BB2E               	btfsc	46,5,b	;volatile
 16645                           
 16646                           ; BSR set to: 14
 16647  000072  AB38               	btfss	56,5,b	;volatile
 16648  000074  D003               	goto	i1l213
 16649                           
 16650                           ; BSR set to: 14
 16651                           ;interrupt_manager.c: 105: {
 16652                           ;interrupt_manager.c: 106: TMR6_ISR();
 16653  000076  ECE8  F0AF         	call	_TMR6_ISR	;wreg free
 16654                           
 16655                           ;interrupt_manager.c: 107: }
 16656  00007A  D015               	goto	i1l217
 16657  00007C                     i1l213:
 16658                           
 16659                           ; BSR set to: 14
 16660                           ;interrupt_manager.c: 108: else if(PIE3bits.TX2IE == 1 && PIR3bits.TX2IF == 1)
 16661  00007C  BD2C               	btfsc	44,6,b	;volatile
 16662                           
 16663                           ; BSR set to: 14
 16664  00007E  AD36               	btfss	54,6,b	;volatile
 16665  000080  D00D               	goto	i1l215
 16666                           
 16667                           ; BSR set to: 14
 16668                           ;interrupt_manager.c: 109: {
 16669                           ;interrupt_manager.c: 110: EUSART2_TxDefaultInterruptHandler();
 16670  000082  D801               	call	i1u1613_28
 16671  000084  D010               	goto	i1l217
 16672  000086                     i1u1613_28:
 16673  000086  0005               	push	
 16674  000088  6EFA               	movwf	pclath,c
 16675  00008A  0101               	movlb	1	; () banked
 16676  00008C  51D2               	movf	_EUSART2_TxDefaultInterruptHandler& (0+255),w,b
 16677  00008E  6EFD               	movwf	tosl,c
 16678  000090  51D3               	movf	(_EUSART2_TxDefaultInterruptHandler+1)& (0+255),w,b
 16679  000092  6EFE               	movwf	tosh,c
 16680  000094  51D4               	movf	(_EUSART2_TxDefaultInterruptHandler+2)& (0+255),w,b
 16681  000096  6EFF               	movwf	tosu,c
 16682  000098  50FA               	movf	pclath,w,c
 16683  00009A  0012               	return		;indir
 16684  00009C                     i1l215:
 16685                           
 16686                           ; BSR set to: 14
 16687                           ;interrupt_manager.c: 112: else if(PIE5bits.TMR7IE == 1 && PIR5bits.TMR7IF == 1)
 16688  00009C  BD2E               	btfsc	46,6,b	;volatile
 16689                           
 16690                           ; BSR set to: 14
 16691  00009E  AD38               	btfss	56,6,b	;volatile
 16692  0000A0  D002               	goto	i1l217
 16693                           
 16694                           ; BSR set to: 14
 16695                           ;interrupt_manager.c: 113: {
 16696                           ;interrupt_manager.c: 114: TMR7_ISR();
 16697  0000A2  EC43  F0AF         	call	_TMR7_ISR	;wreg free
 16698  0000A6                     i1l217:
 16699                           
 16700                           ;interrupt_manager.c: 116: else
 16701                           ;interrupt_manager.c: 117: {
 16702  0000A6  C116  F061         	movff	??_INTERRUPT_InterruptManagerLow+20,btemp+3
 16703  0000AA  C115  F060         	movff	??_INTERRUPT_InterruptManagerLow+19,btemp+2
 16704  0000AE  C114  F05F         	movff	??_INTERRUPT_InterruptManagerLow+18,btemp+1
 16705  0000B2  C113  F05E         	movff	??_INTERRUPT_InterruptManagerLow+17,btemp
 16706  0000B6  C112  FFF5         	movff	??_INTERRUPT_InterruptManagerLow+16,tablat
 16707  0000BA  C111  FFF8         	movff	??_INTERRUPT_InterruptManagerLow+15,tblptru
 16708  0000BE  C110  FFF7         	movff	??_INTERRUPT_InterruptManagerLow+14,tblptrh
 16709  0000C2  C10F  FFF6         	movff	??_INTERRUPT_InterruptManagerLow+13,tblptrl
 16710  0000C6  C10E  FFF4         	movff	??_INTERRUPT_InterruptManagerLow+12,prodh
 16711  0000CA  C10D  FFF3         	movff	??_INTERRUPT_InterruptManagerLow+11,prodl
 16712  0000CE  C10C  FFDA         	movff	??_INTERRUPT_InterruptManagerLow+10,fsr2h
 16713  0000D2  C10B  FFD9         	movff	??_INTERRUPT_InterruptManagerLow+9,fsr2l
 16714  0000D6  C10A  FFE2         	movff	??_INTERRUPT_InterruptManagerLow+8,fsr1h
 16715  0000DA  C109  FFE1         	movff	??_INTERRUPT_InterruptManagerLow+7,fsr1l
 16716  0000DE  C108  FFEA         	movff	??_INTERRUPT_InterruptManagerLow+6,fsr0h
 16717  0000E2  C107  FFE9         	movff	??_INTERRUPT_InterruptManagerLow+5,fsr0l
 16718  0000E6  C106  FFFB         	movff	??_INTERRUPT_InterruptManagerLow+4,pclatu
 16719  0000EA  C105  FFFA         	movff	??_INTERRUPT_InterruptManagerLow+3,pclath
 16720  0000EE  C104  FFE0         	movff	??_INTERRUPT_InterruptManagerLow+2,bsr
 16721  0000F2  C103  FFE8         	movff	??_INTERRUPT_InterruptManagerLow+1,wreg
 16722  0000F6  C102  FFD8         	movff	??_INTERRUPT_InterruptManagerLow,status
 16723  0000FA  905E               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 16724  0000FC  0010               	retfie	
 16725  0000FE                     __end_of_INTERRUPT_InterruptManagerLow:
 16726                           	opt stack 0
 16727                           tosu	equ	0xFFF
 16728                           tosh	equ	0xFFE
 16729                           tosl	equ	0xFFD
 16730                           pclatu	equ	0xFFB
 16731                           pclath	equ	0xFFA
 16732                           tblptru	equ	0xFF8
 16733                           tblptrh	equ	0xFF7
 16734                           tblptrl	equ	0xFF6
 16735                           tablat	equ	0xFF5
 16736                           prodh	equ	0xFF4
 16737                           prodl	equ	0xFF3
 16738                           intcon	equ	0xFF2
 16739                           postinc0	equ	0xFEE
 16740                           fsr0h	equ	0xFEA
 16741                           fsr0l	equ	0xFE9
 16742                           wreg	equ	0xFE8
 16743                           indf1	equ	0xFE7
 16744                           postdec1	equ	0xFE5
 16745                           fsr1h	equ	0xFE2
 16746                           fsr1l	equ	0xFE1
 16747                           bsr	equ	0xFE0
 16748                           indf2	equ	0xFDF
 16749                           postinc2	equ	0xFDE
 16750                           postdec2	equ	0xFDD
 16751                           fsr2h	equ	0xFDA
 16752                           fsr2l	equ	0xFD9
 16753                           status	equ	0xFD8
 16754                           
 16755 ;; *************** function _TMR7_ISR *****************
 16756 ;; Defined at:
 16757 ;;		line 164 in file "mcc_generated_files/tmr7.c"
 16758 ;; Parameters:    Size  Location     Type
 16759 ;;		None
 16760 ;; Auto vars:     Size  Location     Type
 16761 ;;		None
 16762 ;; Return value:  Size  Location     Type
 16763 ;;                  1    wreg      void 
 16764 ;; Registers used:
 16765 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 16766 ;; Tracked objects:
 16767 ;;		On entry : 0/0
 16768 ;;		On exit  : 0/0
 16769 ;;		Unchanged: 0/0
 16770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16775 ;;Total ram usage:        0 bytes
 16776 ;; Hardware stack levels used:    1
 16777 ;; Hardware stack levels required when called:   12
 16778 ;; This function calls:
 16779 ;;		Absolute function
 16780 ;;		_TMR7_DefaultInterruptHandler
 16781 ;;		_TMR7_WriteTimer
 16782 ;;		_acquisitionTimerCallback
 16783 ;; This function is called by:
 16784 ;;		_INTERRUPT_InterruptManagerLow
 16785 ;; This function uses a non-reentrant model
 16786 ;;
 16787                           
 16788                           	psect	text58
 16789  015E86                     __ptext58:
 16790                           	opt stack 0
 16791  015E86                     _TMR7_ISR:
 16792                           	opt stack 9
 16793                           
 16794                           ;tmr7.c: 168: PIR5bits.TMR7IF = 0;
 16795                           
 16796                           ;incstack = 0
 16797  015E86  010E               	movlb	14	; () banked
 16798  015E88  9D38               	bcf	56,6,b	;volatile
 16799                           
 16800                           ; BSR set to: 14
 16801                           ;tmr7.c: 169: TMR7_WriteTimer(timer7ReloadVal);
 16802  015E8A  C1D9  F100         	movff	_timer7ReloadVal,TMR7_WriteTimer@timerVal	;volatile
 16803  015E8E  C1DA  F101         	movff	_timer7ReloadVal+1,TMR7_WriteTimer@timerVal+1	;volatile
 16804  015E92  EC23  F0B0         	call	_TMR7_WriteTimer	;wreg free
 16805                           
 16806                           ;tmr7.c: 171: if(TMR7_InterruptHandler)
 16807  015E96  0101               	movlb	1	; () banked
 16808  015E98  51CC               	movf	_TMR7_InterruptHandler& (0+255),w,b
 16809  015E9A  11CD               	iorwf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 16810  015E9C  11CE               	iorwf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 16811  015E9E  B4D8               	btfsc	status,2,c
 16812  015EA0  0012               	return	
 16813                           
 16814                           ; BSR set to: 1
 16815                           ;tmr7.c: 172: {
 16816                           ;tmr7.c: 173: TMR7_InterruptHandler();
 16817  015EA2  D801               	call	i1u1595_28
 16818  015EA4  0012               	return	
 16819  015EA6                     i1u1595_28:
 16820  015EA6  0005               	push	
 16821  015EA8  6EFA               	movwf	pclath,c
 16822  015EAA  51CC               	movf	_TMR7_InterruptHandler& (0+255),w,b
 16823  015EAC  6EFD               	movwf	tosl,c
 16824  015EAE  51CD               	movf	(_TMR7_InterruptHandler+1)& (0+255),w,b
 16825  015EB0  6EFE               	movwf	tosh,c
 16826  015EB2  51CE               	movf	(_TMR7_InterruptHandler+2)& (0+255),w,b
 16827  015EB4  6EFF               	movwf	tosu,c
 16828  015EB6  50FA               	movf	pclath,w,c
 16829  015EB8  0012               	return		;indir
 16830  015EBA                     __end_of_TMR7_ISR:
 16831                           	opt stack 0
 16832                           tosu	equ	0xFFF
 16833                           tosh	equ	0xFFE
 16834                           tosl	equ	0xFFD
 16835                           pclatu	equ	0xFFB
 16836                           pclath	equ	0xFFA
 16837                           tblptru	equ	0xFF8
 16838                           tblptrh	equ	0xFF7
 16839                           tblptrl	equ	0xFF6
 16840                           tablat	equ	0xFF5
 16841                           prodh	equ	0xFF4
 16842                           prodl	equ	0xFF3
 16843                           intcon	equ	0xFF2
 16844                           postinc0	equ	0xFEE
 16845                           fsr0h	equ	0xFEA
 16846                           fsr0l	equ	0xFE9
 16847                           wreg	equ	0xFE8
 16848                           indf1	equ	0xFE7
 16849                           postdec1	equ	0xFE5
 16850                           fsr1h	equ	0xFE2
 16851                           fsr1l	equ	0xFE1
 16852                           bsr	equ	0xFE0
 16853                           indf2	equ	0xFDF
 16854                           postinc2	equ	0xFDE
 16855                           postdec2	equ	0xFDD
 16856                           fsr2h	equ	0xFDA
 16857                           fsr2l	equ	0xFD9
 16858                           status	equ	0xFD8
 16859                           
 16860 ;; *************** function _TMR7_DefaultInterruptHandler *****************
 16861 ;; Defined at:
 16862 ;;		line 182 in file "mcc_generated_files/tmr7.c"
 16863 ;; Parameters:    Size  Location     Type
 16864 ;;		None
 16865 ;; Auto vars:     Size  Location     Type
 16866 ;;		None
 16867 ;; Return value:  Size  Location     Type
 16868 ;;                  1    wreg      void 
 16869 ;; Registers used:
 16870 ;;		None
 16871 ;; Tracked objects:
 16872 ;;		On entry : 0/0
 16873 ;;		On exit  : 0/0
 16874 ;;		Unchanged: 0/0
 16875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16880 ;;Total ram usage:        0 bytes
 16881 ;; Hardware stack levels used:    1
 16882 ;; Hardware stack levels required when called:   10
 16883 ;; This function calls:
 16884 ;;		Nothing
 16885 ;; This function is called by:
 16886 ;;		_TMR7_Initialize
 16887 ;;		_TMR7_ISR
 16888 ;; This function uses a non-reentrant model
 16889 ;;
 16890                           
 16891                           	psect	text59
 16892  01626A                     __ptext59:
 16893                           	opt stack 0
 16894  01626A                     _TMR7_DefaultInterruptHandler:
 16895                           	opt stack 10
 16896                           
 16897                           ;incstack = 0
 16898  01626A  0012               	return		;funcret
 16899  01626C                     __end_of_TMR7_DefaultInterruptHandler:
 16900                           	opt stack 0
 16901                           tosu	equ	0xFFF
 16902                           tosh	equ	0xFFE
 16903                           tosl	equ	0xFFD
 16904                           pclatu	equ	0xFFB
 16905                           pclath	equ	0xFFA
 16906                           tblptru	equ	0xFF8
 16907                           tblptrh	equ	0xFF7
 16908                           tblptrl	equ	0xFF6
 16909                           tablat	equ	0xFF5
 16910                           prodh	equ	0xFF4
 16911                           prodl	equ	0xFF3
 16912                           intcon	equ	0xFF2
 16913                           postinc0	equ	0xFEE
 16914                           fsr0h	equ	0xFEA
 16915                           fsr0l	equ	0xFE9
 16916                           wreg	equ	0xFE8
 16917                           indf1	equ	0xFE7
 16918                           postdec1	equ	0xFE5
 16919                           fsr1h	equ	0xFE2
 16920                           fsr1l	equ	0xFE1
 16921                           bsr	equ	0xFE0
 16922                           indf2	equ	0xFDF
 16923                           postinc2	equ	0xFDE
 16924                           postdec2	equ	0xFDD
 16925                           fsr2h	equ	0xFDA
 16926                           fsr2l	equ	0xFD9
 16927                           status	equ	0xFD8
 16928                           
 16929 ;; *************** function _acquisitionTimerCallback *****************
 16930 ;; Defined at:
 16931 ;;		line 199 in file "main.c"
 16932 ;; Parameters:    Size  Location     Type
 16933 ;;		None
 16934 ;; Auto vars:     Size  Location     Type
 16935 ;;		None
 16936 ;; Return value:  Size  Location     Type
 16937 ;;                  1    wreg      void 
 16938 ;; Registers used:
 16939 ;;		wreg, status,2, cstack
 16940 ;; Tracked objects:
 16941 ;;		On entry : 0/0
 16942 ;;		On exit  : 0/0
 16943 ;;		Unchanged: 0/0
 16944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 16945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16949 ;;Total ram usage:        0 bytes
 16950 ;; Hardware stack levels used:    1
 16951 ;; Hardware stack levels required when called:   11
 16952 ;; This function calls:
 16953 ;;		_ADCC_IsConversionDone
 16954 ;;		_ADCC_StartConversion
 16955 ;; This function is called by:
 16956 ;;		_main
 16957 ;;		_TMR7_ISR
 16958 ;; This function uses a non-reentrant model
 16959 ;;
 16960                           
 16961                           	psect	text60
 16962  015B02                     __ptext60:
 16963                           	opt stack 0
 16964  015B02                     _acquisitionTimerCallback:
 16965                           	opt stack 9
 16966                           
 16967                           ;main.c: 202: ADCC_StartConversion(channel_FVR_buf1);
 16968                           
 16969                           ;incstack = 0
 16970  015B02  0E3F               	movlw	63
 16971  015B04  EC1C  F0B1         	call	_ADCC_StartConversion
 16972  015B08  EC23  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 16973  015B0C  0900               	iorlw	0
 16974  015B0E  B4D8               	btfsc	status,2,c
 16975  015B10  D7FB               	goto	i1l757
 16976                           
 16977                           ;main.c: 208: ADCC_StartConversion(POS3P3_ADC);
 16978  015B12  0E22               	movlw	34
 16979  015B14  EC1C  F0B1         	call	_ADCC_StartConversion
 16980  015B18  EC23  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 16981  015B1C  0900               	iorlw	0
 16982  015B1E  B4D8               	btfsc	status,2,c
 16983  015B20  D7FB               	goto	i1l760
 16984                           
 16985                           ;main.c: 214: ADCC_StartConversion(ISNS_ADC);
 16986  015B22  0E00               	movlw	0
 16987  015B24  EC1C  F0B1         	call	_ADCC_StartConversion
 16988  015B28  EC23  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 16989  015B2C  0900               	iorlw	0
 16990  015B2E  B4D8               	btfsc	status,2,c
 16991  015B30  D7FB               	goto	i1l763
 16992                           
 16993                           ;main.c: 220: ADCC_StartConversion(POS12_ADC);
 16994  015B32  0E04               	movlw	4
 16995  015B34  EC1C  F0B1         	call	_ADCC_StartConversion
 16996  015B38  EC23  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 16997  015B3C  0900               	iorlw	0
 16998  015B3E  B4D8               	btfsc	status,2,c
 16999  015B40  D7FB               	goto	i1l766
 17000                           
 17001                           ;main.c: 226: ADCC_StartConversion(channel_Temp);
 17002  015B42  0E3D               	movlw	61
 17003  015B44  EC1C  F0B1         	call	_ADCC_StartConversion
 17004  015B48  EC23  F0B1         	call	_ADCC_IsConversionDone	;wreg free
 17005  015B4C  0900               	iorlw	0
 17006  015B4E  A4D8               	btfss	status,2,c
 17007  015B50  0012               	return	
 17008  015B52  D7FA               	goto	i1l769
 17009  015B54                     __end_of_acquisitionTimerCallback:
 17010                           	opt stack 0
 17011                           tosu	equ	0xFFF
 17012                           tosh	equ	0xFFE
 17013                           tosl	equ	0xFFD
 17014                           pclatu	equ	0xFFB
 17015                           pclath	equ	0xFFA
 17016                           tblptru	equ	0xFF8
 17017                           tblptrh	equ	0xFF7
 17018                           tblptrl	equ	0xFF6
 17019                           tablat	equ	0xFF5
 17020                           prodh	equ	0xFF4
 17021                           prodl	equ	0xFF3
 17022                           intcon	equ	0xFF2
 17023                           postinc0	equ	0xFEE
 17024                           fsr0h	equ	0xFEA
 17025                           fsr0l	equ	0xFE9
 17026                           wreg	equ	0xFE8
 17027                           indf1	equ	0xFE7
 17028                           postdec1	equ	0xFE5
 17029                           fsr1h	equ	0xFE2
 17030                           fsr1l	equ	0xFE1
 17031                           bsr	equ	0xFE0
 17032                           indf2	equ	0xFDF
 17033                           postinc2	equ	0xFDE
 17034                           postdec2	equ	0xFDD
 17035                           fsr2h	equ	0xFDA
 17036                           fsr2l	equ	0xFD9
 17037                           status	equ	0xFD8
 17038                           
 17039 ;; *************** function _ADCC_StartConversion *****************
 17040 ;; Defined at:
 17041 ;;		line 112 in file "mcc_generated_files/adcc.c"
 17042 ;; Parameters:    Size  Location     Type
 17043 ;;  channel         1    wreg     enum E17310
 17044 ;; Auto vars:     Size  Location     Type
 17045 ;;  channel         1    0[BANK1 ] enum E17310
 17046 ;; Return value:  Size  Location     Type
 17047 ;;                  1    wreg      void 
 17048 ;; Registers used:
 17049 ;;		wreg
 17050 ;; Tracked objects:
 17051 ;;		On entry : 0/0
 17052 ;;		On exit  : 0/0
 17053 ;;		Unchanged: 0/0
 17054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17056 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17058 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17059 ;;Total ram usage:        1 bytes
 17060 ;; Hardware stack levels used:    1
 17061 ;; Hardware stack levels required when called:   10
 17062 ;; This function calls:
 17063 ;;		Nothing
 17064 ;; This function is called by:
 17065 ;;		_acquisitionTimerCallback
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069                           	psect	text61
 17070  016238                     __ptext61:
 17071                           	opt stack 0
 17072  016238                     _ADCC_StartConversion:
 17073                           	opt stack 9
 17074                           
 17075                           ;incstack = 0
 17076                           ;ADCC_StartConversion@channel stored from wreg
 17077  016238  0101               	movlb	1	; () banked
 17078  01623A  6F00               	movwf	ADCC_StartConversion@channel& (0+255),b
 17079                           
 17080                           ;adcc.c: 115: ADPCH = channel;
 17081  01623C  C100  FF5F         	movff	ADCC_StartConversion@channel,3935	;volatile
 17082                           
 17083                           ;adcc.c: 118: ADCON0bits.ADON = 1;
 17084  016240  8E60               	bsf	3936,7,c	;volatile
 17085                           
 17086                           ;adcc.c: 121: ADCON0bits.ADGO = 1;
 17087  016242  8060               	bsf	3936,0,c	;volatile
 17088  016244  0012               	return		;funcret
 17089  016246                     __end_of_ADCC_StartConversion:
 17090                           	opt stack 0
 17091                           tosu	equ	0xFFF
 17092                           tosh	equ	0xFFE
 17093                           tosl	equ	0xFFD
 17094                           pclatu	equ	0xFFB
 17095                           pclath	equ	0xFFA
 17096                           tblptru	equ	0xFF8
 17097                           tblptrh	equ	0xFF7
 17098                           tblptrl	equ	0xFF6
 17099                           tablat	equ	0xFF5
 17100                           prodh	equ	0xFF4
 17101                           prodl	equ	0xFF3
 17102                           intcon	equ	0xFF2
 17103                           postinc0	equ	0xFEE
 17104                           fsr0h	equ	0xFEA
 17105                           fsr0l	equ	0xFE9
 17106                           wreg	equ	0xFE8
 17107                           indf1	equ	0xFE7
 17108                           postdec1	equ	0xFE5
 17109                           fsr1h	equ	0xFE2
 17110                           fsr1l	equ	0xFE1
 17111                           bsr	equ	0xFE0
 17112                           indf2	equ	0xFDF
 17113                           postinc2	equ	0xFDE
 17114                           postdec2	equ	0xFDD
 17115                           fsr2h	equ	0xFDA
 17116                           fsr2l	equ	0xFD9
 17117                           status	equ	0xFD8
 17118                           
 17119 ;; *************** function _ADCC_IsConversionDone *****************
 17120 ;; Defined at:
 17121 ;;		line 124 in file "mcc_generated_files/adcc.c"
 17122 ;; Parameters:    Size  Location     Type
 17123 ;;		None
 17124 ;; Auto vars:     Size  Location     Type
 17125 ;;		None
 17126 ;; Return value:  Size  Location     Type
 17127 ;;                  1    wreg      unsigned char 
 17128 ;; Registers used:
 17129 ;;		wreg
 17130 ;; Tracked objects:
 17131 ;;		On entry : 0/0
 17132 ;;		On exit  : 0/0
 17133 ;;		Unchanged: 0/0
 17134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17139 ;;Total ram usage:        0 bytes
 17140 ;; Hardware stack levels used:    1
 17141 ;; Hardware stack levels required when called:   10
 17142 ;; This function calls:
 17143 ;;		Nothing
 17144 ;; This function is called by:
 17145 ;;		_acquisitionTimerCallback
 17146 ;; This function uses a non-reentrant model
 17147 ;;
 17148                           
 17149                           	psect	text62
 17150  016246                     __ptext62:
 17151                           	opt stack 0
 17152  016246                     _ADCC_IsConversionDone:
 17153                           	opt stack 9
 17154                           
 17155                           ;adcc.c: 127: return ((unsigned char)(!ADCON0bits.ADGO));
 17156                           
 17157                           ;incstack = 0
 17158  016246  B060               	btfsc	3936,0,c	;volatile
 17159  016248  D002               	goto	i1u678_20
 17160  01624A  0E01               	movlw	1
 17161  01624C  0012               	return	
 17162  01624E                     i1u678_20:
 17163  01624E  0E00               	movlw	0
 17164  016250  0012               	return	
 17165  016252                     __end_of_ADCC_IsConversionDone:
 17166                           	opt stack 0
 17167                           tosu	equ	0xFFF
 17168                           tosh	equ	0xFFE
 17169                           tosl	equ	0xFFD
 17170                           pclatu	equ	0xFFB
 17171                           pclath	equ	0xFFA
 17172                           tblptru	equ	0xFF8
 17173                           tblptrh	equ	0xFF7
 17174                           tblptrl	equ	0xFF6
 17175                           tablat	equ	0xFF5
 17176                           prodh	equ	0xFF4
 17177                           prodl	equ	0xFF3
 17178                           intcon	equ	0xFF2
 17179                           postinc0	equ	0xFEE
 17180                           fsr0h	equ	0xFEA
 17181                           fsr0l	equ	0xFE9
 17182                           wreg	equ	0xFE8
 17183                           indf1	equ	0xFE7
 17184                           postdec1	equ	0xFE5
 17185                           fsr1h	equ	0xFE2
 17186                           fsr1l	equ	0xFE1
 17187                           bsr	equ	0xFE0
 17188                           indf2	equ	0xFDF
 17189                           postinc2	equ	0xFDE
 17190                           postdec2	equ	0xFDD
 17191                           fsr2h	equ	0xFDA
 17192                           fsr2l	equ	0xFD9
 17193                           status	equ	0xFD8
 17194                           
 17195 ;; *************** function _TMR7_WriteTimer *****************
 17196 ;; Defined at:
 17197 ;;		line 127 in file "mcc_generated_files/tmr7.c"
 17198 ;; Parameters:    Size  Location     Type
 17199 ;;  timerVal        2    0[BANK1 ] unsigned int 
 17200 ;; Auto vars:     Size  Location     Type
 17201 ;;		None
 17202 ;; Return value:  Size  Location     Type
 17203 ;;                  1    wreg      void 
 17204 ;; Registers used:
 17205 ;;		wreg, status,2
 17206 ;; Tracked objects:
 17207 ;;		On entry : 0/0
 17208 ;;		On exit  : 0/0
 17209 ;;		Unchanged: 0/0
 17210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17211 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17214 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17215 ;;Total ram usage:        2 bytes
 17216 ;; Hardware stack levels used:    1
 17217 ;; Hardware stack levels required when called:   10
 17218 ;; This function calls:
 17219 ;;		Nothing
 17220 ;; This function is called by:
 17221 ;;		_TMR7_ISR
 17222 ;;		_TMR7_Reload
 17223 ;; This function uses a non-reentrant model
 17224 ;;
 17225                           
 17226                           	psect	text63
 17227  016046                     __ptext63:
 17228                           	opt stack 0
 17229  016046                     _TMR7_WriteTimer:
 17230                           	opt stack 10
 17231                           
 17232                           ;tmr7.c: 129: if (T7CONbits.nT7SYNC == 1)
 17233                           
 17234                           ;incstack = 0
 17235  016046  010F               	movlb	15	; () banked
 17236  016048  A530               	btfss	48,2,b	;volatile
 17237  01604A  D009               	goto	i1l626
 17238                           
 17239                           ; BSR set to: 15
 17240                           ;tmr7.c: 130: {
 17241                           ;tmr7.c: 132: T7CONbits.TMR7ON = 0;
 17242  01604C  9130               	bcf	48,0,b	;volatile
 17243                           
 17244                           ; BSR set to: 15
 17245                           ;tmr7.c: 135: TMR7H = (timerVal >> 8);
 17246  01604E  0101               	movlb	1	; () banked
 17247  016050  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 17248  016052  010F               	movlb	15	; () banked
 17249  016054  6F2F               	movwf	47,b	;volatile
 17250                           
 17251                           ; BSR set to: 15
 17252                           ;tmr7.c: 136: TMR7L = timerVal;
 17253  016056  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 17254                           
 17255                           ; BSR set to: 15
 17256                           ;tmr7.c: 139: T7CONbits.TMR7ON =1;
 17257  01605A  8130               	bsf	48,0,b	;volatile
 17258                           
 17259                           ;tmr7.c: 140: }
 17260  01605C  0012               	return	
 17261  01605E                     i1l626:
 17262                           
 17263                           ; BSR set to: 15
 17264                           ;tmr7.c: 141: else
 17265                           ;tmr7.c: 142: {
 17266                           ;tmr7.c: 144: TMR7H = (timerVal >> 8);
 17267                           
 17268                           ; BSR set to: 15
 17269  01605E  0101               	movlb	1	; () banked
 17270  016060  5101               	movf	(TMR7_WriteTimer@timerVal+1)& (0+255),w,b
 17271  016062  010F               	movlb	15	; () banked
 17272  016064  6F2F               	movwf	47,b	;volatile
 17273                           
 17274                           ; BSR set to: 15
 17275                           ;tmr7.c: 145: TMR7L = timerVal;
 17276  016066  C100  FF2E         	movff	TMR7_WriteTimer@timerVal,3886	;volatile
 17277  01606A  0012               	return	
 17278  01606C                     __end_of_TMR7_WriteTimer:
 17279                           	opt stack 0
 17280                           tosu	equ	0xFFF
 17281                           tosh	equ	0xFFE
 17282                           tosl	equ	0xFFD
 17283                           pclatu	equ	0xFFB
 17284                           pclath	equ	0xFFA
 17285                           tblptru	equ	0xFF8
 17286                           tblptrh	equ	0xFF7
 17287                           tblptrl	equ	0xFF6
 17288                           tablat	equ	0xFF5
 17289                           prodh	equ	0xFF4
 17290                           prodl	equ	0xFF3
 17291                           intcon	equ	0xFF2
 17292                           postinc0	equ	0xFEE
 17293                           fsr0h	equ	0xFEA
 17294                           fsr0l	equ	0xFE9
 17295                           wreg	equ	0xFE8
 17296                           indf1	equ	0xFE7
 17297                           postdec1	equ	0xFE5
 17298                           fsr1h	equ	0xFE2
 17299                           fsr1l	equ	0xFE1
 17300                           bsr	equ	0xFE0
 17301                           indf2	equ	0xFDF
 17302                           postinc2	equ	0xFDE
 17303                           postdec2	equ	0xFDD
 17304                           fsr2h	equ	0xFDA
 17305                           fsr2l	equ	0xFD9
 17306                           status	equ	0xFD8
 17307                           
 17308 ;; *************** function _TMR6_ISR *****************
 17309 ;; Defined at:
 17310 ;;		line 165 in file "mcc_generated_files/tmr6.c"
 17311 ;; Parameters:    Size  Location     Type
 17312 ;;		None
 17313 ;; Auto vars:     Size  Location     Type
 17314 ;;		None
 17315 ;; Return value:  Size  Location     Type
 17316 ;;                  1    wreg      void 
 17317 ;; Registers used:
 17318 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17319 ;; Tracked objects:
 17320 ;;		On entry : 0/0
 17321 ;;		On exit  : 0/0
 17322 ;;		Unchanged: 0/0
 17323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17324 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17327 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17328 ;;Total ram usage:        0 bytes
 17329 ;; Hardware stack levels used:    1
 17330 ;; Hardware stack levels required when called:   11
 17331 ;; This function calls:
 17332 ;;		Absolute function
 17333 ;;		_TMR6_DefaultInterruptHandler
 17334 ;;		_heartbeatTimerCallback
 17335 ;; This function is called by:
 17336 ;;		_INTERRUPT_InterruptManagerLow
 17337 ;; This function uses a non-reentrant model
 17338 ;;
 17339                           
 17340                           	psect	text64
 17341  015FD0                     __ptext64:
 17342                           	opt stack 0
 17343  015FD0                     _TMR6_ISR:
 17344                           	opt stack 10
 17345                           
 17346                           ;tmr6.c: 169: PIR5bits.TMR6IF = 0;
 17347                           
 17348                           ; BSR set to: 15
 17349                           ;incstack = 0
 17350  015FD0  010E               	movlb	14	; () banked
 17351  015FD2  9B38               	bcf	56,5,b	;volatile
 17352                           
 17353                           ; BSR set to: 14
 17354                           ;tmr6.c: 171: if(TMR6_InterruptHandler)
 17355  015FD4  0101               	movlb	1	; () banked
 17356  015FD6  51CF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17357  015FD8  11D0               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17358  015FDA  11D1               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17359  015FDC  B4D8               	btfsc	status,2,c
 17360  015FDE  0012               	return	
 17361                           
 17362                           ; BSR set to: 1
 17363                           ;tmr6.c: 172: {
 17364                           ;tmr6.c: 173: TMR6_InterruptHandler();
 17365  015FE0  D801               	call	i1u1593_28
 17366  015FE2  0012               	return	
 17367  015FE4                     i1u1593_28:
 17368  015FE4  0005               	push	
 17369  015FE6  6EFA               	movwf	pclath,c
 17370  015FE8  51CF               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17371  015FEA  6EFD               	movwf	tosl,c
 17372  015FEC  51D0               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17373  015FEE  6EFE               	movwf	tosh,c
 17374  015FF0  51D1               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17375  015FF2  6EFF               	movwf	tosu,c
 17376  015FF4  50FA               	movf	pclath,w,c
 17377  015FF6  0012               	return		;indir
 17378  015FF8                     __end_of_TMR6_ISR:
 17379                           	opt stack 0
 17380                           tosu	equ	0xFFF
 17381                           tosh	equ	0xFFE
 17382                           tosl	equ	0xFFD
 17383                           pclatu	equ	0xFFB
 17384                           pclath	equ	0xFFA
 17385                           tblptru	equ	0xFF8
 17386                           tblptrh	equ	0xFF7
 17387                           tblptrl	equ	0xFF6
 17388                           tablat	equ	0xFF5
 17389                           prodh	equ	0xFF4
 17390                           prodl	equ	0xFF3
 17391                           intcon	equ	0xFF2
 17392                           postinc0	equ	0xFEE
 17393                           fsr0h	equ	0xFEA
 17394                           fsr0l	equ	0xFE9
 17395                           wreg	equ	0xFE8
 17396                           indf1	equ	0xFE7
 17397                           postdec1	equ	0xFE5
 17398                           fsr1h	equ	0xFE2
 17399                           fsr1l	equ	0xFE1
 17400                           bsr	equ	0xFE0
 17401                           indf2	equ	0xFDF
 17402                           postinc2	equ	0xFDE
 17403                           postdec2	equ	0xFDD
 17404                           fsr2h	equ	0xFDA
 17405                           fsr2l	equ	0xFD9
 17406                           status	equ	0xFD8
 17407                           
 17408 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17409 ;; Defined at:
 17410 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;		None
 17413 ;; Auto vars:     Size  Location     Type
 17414 ;;		None
 17415 ;; Return value:  Size  Location     Type
 17416 ;;                  1    wreg      void 
 17417 ;; Registers used:
 17418 ;;		None
 17419 ;; Tracked objects:
 17420 ;;		On entry : 0/0
 17421 ;;		On exit  : 0/0
 17422 ;;		Unchanged: 0/0
 17423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17428 ;;Total ram usage:        0 bytes
 17429 ;; Hardware stack levels used:    1
 17430 ;; Hardware stack levels required when called:   10
 17431 ;; This function calls:
 17432 ;;		Nothing
 17433 ;; This function is called by:
 17434 ;;		_TMR6_Initialize
 17435 ;;		_TMR6_ISR
 17436 ;; This function uses a non-reentrant model
 17437 ;;
 17438                           
 17439                           	psect	text65
 17440  01626C                     __ptext65:
 17441                           	opt stack 0
 17442  01626C                     _TMR6_DefaultInterruptHandler:
 17443                           	opt stack 10
 17444                           
 17445                           ;incstack = 0
 17446  01626C  0012               	return		;funcret
 17447  01626E                     __end_of_TMR6_DefaultInterruptHandler:
 17448                           	opt stack 0
 17449                           tosu	equ	0xFFF
 17450                           tosh	equ	0xFFE
 17451                           tosl	equ	0xFFD
 17452                           pclatu	equ	0xFFB
 17453                           pclath	equ	0xFFA
 17454                           tblptru	equ	0xFF8
 17455                           tblptrh	equ	0xFF7
 17456                           tblptrl	equ	0xFF6
 17457                           tablat	equ	0xFF5
 17458                           prodh	equ	0xFF4
 17459                           prodl	equ	0xFF3
 17460                           intcon	equ	0xFF2
 17461                           postinc0	equ	0xFEE
 17462                           fsr0h	equ	0xFEA
 17463                           fsr0l	equ	0xFE9
 17464                           wreg	equ	0xFE8
 17465                           indf1	equ	0xFE7
 17466                           postdec1	equ	0xFE5
 17467                           fsr1h	equ	0xFE2
 17468                           fsr1l	equ	0xFE1
 17469                           bsr	equ	0xFE0
 17470                           indf2	equ	0xFDF
 17471                           postinc2	equ	0xFDE
 17472                           postdec2	equ	0xFDD
 17473                           fsr2h	equ	0xFDA
 17474                           fsr2l	equ	0xFD9
 17475                           status	equ	0xFD8
 17476                           
 17477 ;; *************** function _heartbeatTimerCallback *****************
 17478 ;; Defined at:
 17479 ;;		line 122 in file "main.c"
 17480 ;; Parameters:    Size  Location     Type
 17481 ;;		None
 17482 ;; Auto vars:     Size  Location     Type
 17483 ;;		None
 17484 ;; Return value:  Size  Location     Type
 17485 ;;                  1    wreg      void 
 17486 ;; Registers used:
 17487 ;;		wreg, status,2, status,0
 17488 ;; Tracked objects:
 17489 ;;		On entry : 0/0
 17490 ;;		On exit  : 0/0
 17491 ;;		Unchanged: 0/0
 17492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17495 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17496 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17497 ;;Total ram usage:        1 bytes
 17498 ;; Hardware stack levels used:    1
 17499 ;; Hardware stack levels required when called:   10
 17500 ;; This function calls:
 17501 ;;		Nothing
 17502 ;; This function is called by:
 17503 ;;		_main
 17504 ;;		_TMR6_ISR
 17505 ;; This function uses a non-reentrant model
 17506 ;;
 17507                           
 17508                           	psect	text66
 17509  015F50                     __ptext66:
 17510                           	opt stack 0
 17511  015F50                     _heartbeatTimerCallback:
 17512                           	opt stack 10
 17513                           
 17514                           ;main.c: 125: LATFbits.LATF2 = !LATFbits.LATF2;
 17515                           
 17516                           ;incstack = 0
 17517  015F50  B47E               	btfsc	3966,2,c	;volatile
 17518  015F52  D004               	goto	i1u733_20
 17519  015F54  0101               	movlb	1	; () banked
 17520  015F56  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17521  015F58  2B00               	incf	??_heartbeatTimerCallback& (0+255),f,b
 17522  015F5A  D002               	goto	i1u734_28
 17523  015F5C                     i1u733_20:
 17524  015F5C  0101               	movlb	1	; () banked
 17525  015F5E  6B00               	clrf	??_heartbeatTimerCallback& (0+255),b
 17526  015F60                     i1u734_28:
 17527  015F60  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17528  015F62  4700               	rlncf	??_heartbeatTimerCallback& (0+255),f,b
 17529  015F64  507E               	movf	3966,w,c	;volatile
 17530  015F66  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17531  015F68  0BFB               	andlw	-5
 17532  015F6A  1900               	xorwf	??_heartbeatTimerCallback& (0+255),w,b
 17533  015F6C  6E7E               	movwf	3966,c	;volatile
 17534                           
 17535                           ;main.c: 128: on_time++;
 17536  015F6E  0E01               	movlw	1
 17537  015F70  27B9               	addwf	_on_time& (0+255),f,b
 17538  015F72  0E00               	movlw	0
 17539  015F74  23BA               	addwfc	(_on_time+1)& (0+255),f,b
 17540  015F76  23BB               	addwfc	(_on_time+2)& (0+255),f,b
 17541  015F78  23BC               	addwfc	(_on_time+3)& (0+255),f,b
 17542  015F7A  0004               	clrwdt		;# 
 17543  015F7C  0012               	return		;funcret
 17544  015F7E                     __end_of_heartbeatTimerCallback:
 17545                           	opt stack 0
 17546                           tosu	equ	0xFFF
 17547                           tosh	equ	0xFFE
 17548                           tosl	equ	0xFFD
 17549                           pclatu	equ	0xFFB
 17550                           pclath	equ	0xFFA
 17551                           tblptru	equ	0xFF8
 17552                           tblptrh	equ	0xFF7
 17553                           tblptrl	equ	0xFF6
 17554                           tablat	equ	0xFF5
 17555                           prodh	equ	0xFF4
 17556                           prodl	equ	0xFF3
 17557                           intcon	equ	0xFF2
 17558                           postinc0	equ	0xFEE
 17559                           fsr0h	equ	0xFEA
 17560                           fsr0l	equ	0xFE9
 17561                           wreg	equ	0xFE8
 17562                           indf1	equ	0xFE7
 17563                           postdec1	equ	0xFE5
 17564                           fsr1h	equ	0xFE2
 17565                           fsr1l	equ	0xFE1
 17566                           bsr	equ	0xFE0
 17567                           indf2	equ	0xFDF
 17568                           postinc2	equ	0xFDE
 17569                           postdec2	equ	0xFDD
 17570                           fsr2h	equ	0xFDA
 17571                           fsr2l	equ	0xFD9
 17572                           status	equ	0xFD8
 17573                           
 17574 ;; *************** function _EUSART2_Transmit_ISR *****************
 17575 ;; Defined at:
 17576 ;;		line 185 in file "mcc_generated_files/eusart2.c"
 17577 ;; Parameters:    Size  Location     Type
 17578 ;;		None
 17579 ;; Auto vars:     Size  Location     Type
 17580 ;;		None
 17581 ;; Return value:  Size  Location     Type
 17582 ;;                  1    wreg      void 
 17583 ;; Registers used:
 17584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17585 ;; Tracked objects:
 17586 ;;		On entry : 0/0
 17587 ;;		On exit  : 0/0
 17588 ;;		Unchanged: 0/0
 17589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17594 ;;Total ram usage:        0 bytes
 17595 ;; Hardware stack levels used:    1
 17596 ;; Hardware stack levels required when called:   10
 17597 ;; This function calls:
 17598 ;;		Nothing
 17599 ;; This function is called by:
 17600 ;;		_EUSART2_Initialize
 17601 ;;		_INTERRUPT_InterruptManagerLow
 17602 ;; This function uses a non-reentrant model
 17603 ;;
 17604                           
 17605                           	psect	text67
 17606  015E50                     __ptext67:
 17607                           	opt stack 0
 17608  015E50                     _EUSART2_Transmit_ISR:
 17609                           	opt stack 11
 17610                           
 17611                           ;eusart2.c: 189: if(sizeof(eusart2TxBuffer) > eusart2TxBufferRemaining)
 17612                           
 17613                           ;incstack = 0
 17614  015E50  0E80               	movlw	128
 17615  015E52  0101               	movlb	1	; () banked
 17616  015E54  61DD               	cpfslt	_eusart2TxBufferRemaining& (0+255),b	;volatile
 17617  015E56  D014               	goto	i1l389
 17618                           
 17619                           ; BSR set to: 1
 17620                           ;eusart2.c: 190: {
 17621                           ;eusart2.c: 191: TX2REG = eusart2TxBuffer[eusart2TxTail++];
 17622  015E58  51DE               	movf	_eusart2TxTail& (0+255),w,b	;volatile
 17623  015E5A  0D01               	mullw	1
 17624  015E5C  0E00               	movlw	low _eusart2TxBuffer
 17625  015E5E  24F3               	addwf	prodl,w,c
 17626  015E60  6ED9               	movwf	fsr2l,c
 17627  015E62  0E02               	movlw	high _eusart2TxBuffer
 17628  015E64  20F4               	addwfc	prodh,w,c
 17629  015E66  6EDA               	movwf	fsr2h,c
 17630  015E68  50DF               	movf	indf2,w,c
 17631  015E6A  010E               	movlb	14	; () banked
 17632  015E6C  6FF2               	movwf	242,b	;volatile
 17633                           
 17634                           ; BSR set to: 14
 17635  015E6E  0101               	movlb	1	; () banked
 17636  015E70  2BDE               	incf	_eusart2TxTail& (0+255),f,b	;volatile
 17637                           
 17638                           ; BSR set to: 1
 17639                           ;eusart2.c: 192: if(sizeof(eusart2TxBuffer) <= eusart2TxTail)
 17640  015E72  0E7F               	movlw	127
 17641  015E74  65DE               	cpfsgt	_eusart2TxTail& (0+255),b	;volatile
 17642  015E76  D002               	goto	i1l390
 17643                           
 17644                           ; BSR set to: 1
 17645                           ;eusart2.c: 193: {
 17646                           ;eusart2.c: 194: eusart2TxTail = 0;
 17647  015E78  0E00               	movlw	0
 17648  015E7A  6FDE               	movwf	_eusart2TxTail& (0+255),b	;volatile
 17649  015E7C                     i1l390:
 17650                           
 17651                           ; BSR set to: 1
 17652                           ;eusart2.c: 195: }
 17653                           ;eusart2.c: 196: eusart2TxBufferRemaining++;
 17654                           
 17655                           ; BSR set to: 1
 17656  015E7C  2BDD               	incf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 17657                           
 17658                           ;eusart2.c: 197: }
 17659  015E7E  0012               	return	
 17660  015E80                     i1l389:
 17661                           
 17662                           ; BSR set to: 1
 17663                           ;eusart2.c: 198: else
 17664                           ;eusart2.c: 199: {
 17665                           ;eusart2.c: 200: PIE3bits.TX2IE = 0;
 17666  015E80  010E               	movlb	14	; () banked
 17667  015E82  9D2C               	bcf	44,6,b	;volatile
 17668  015E84  0012               	return	
 17669  015E86                     __end_of_EUSART2_Transmit_ISR:
 17670                           	opt stack 0
 17671                           tosu	equ	0xFFF
 17672                           tosh	equ	0xFFE
 17673                           tosl	equ	0xFFD
 17674                           pclatu	equ	0xFFB
 17675                           pclath	equ	0xFFA
 17676                           tblptru	equ	0xFF8
 17677                           tblptrh	equ	0xFF7
 17678                           tblptrl	equ	0xFF6
 17679                           tablat	equ	0xFF5
 17680                           prodh	equ	0xFF4
 17681                           prodl	equ	0xFF3
 17682                           intcon	equ	0xFF2
 17683                           postinc0	equ	0xFEE
 17684                           fsr0h	equ	0xFEA
 17685                           fsr0l	equ	0xFE9
 17686                           wreg	equ	0xFE8
 17687                           indf1	equ	0xFE7
 17688                           postdec1	equ	0xFE5
 17689                           fsr1h	equ	0xFE2
 17690                           fsr1l	equ	0xFE1
 17691                           bsr	equ	0xFE0
 17692                           indf2	equ	0xFDF
 17693                           postinc2	equ	0xFDE
 17694                           postdec2	equ	0xFDD
 17695                           fsr2h	equ	0xFDA
 17696                           fsr2l	equ	0xFD9
 17697                           status	equ	0xFD8
 17698                           
 17699 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
 17700 ;; Defined at:
 17701 ;;		line 80 in file "mcc_generated_files/interrupt_manager.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;		None
 17704 ;; Auto vars:     Size  Location     Type
 17705 ;;		None
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  1    wreg      void 
 17708 ;; Registers used:
 17709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17717 ;;      Temps:          0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17718 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17719 ;;Total ram usage:       18 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:    9
 17722 ;; This function calls:
 17723 ;;		Absolute function
 17724 ;;		_ADCC_ISR
 17725 ;;		_EUSART2_Receive_ISR
 17726 ;;		_TMR5_ISR
 17727 ;; This function is called by:
 17728 ;;		Interrupt level 2
 17729 ;; This function uses a non-reentrant model
 17730 ;;
 17731                           
 17732                           	psect	intcode
 17733  000008                     __pintcode:
 17734                           	opt stack 0
 17735  000008                     _INTERRUPT_InterruptManagerHigh:
 17736                           	opt stack 9
 17737                           
 17738                           ;incstack = 0
 17739  000008  825E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 17740  00000A  EF6C  F0A6         	goto	int_func
 17741                           tosu	equ	0xFFF
 17742                           tosh	equ	0xFFE
 17743                           tosl	equ	0xFFD
 17744                           pclatu	equ	0xFFB
 17745                           pclath	equ	0xFFA
 17746                           tblptru	equ	0xFF8
 17747                           tblptrh	equ	0xFF7
 17748                           tblptrl	equ	0xFF6
 17749                           tablat	equ	0xFF5
 17750                           prodh	equ	0xFF4
 17751                           prodl	equ	0xFF3
 17752                           intcon	equ	0xFF2
 17753                           postinc0	equ	0xFEE
 17754                           fsr0h	equ	0xFEA
 17755                           fsr0l	equ	0xFE9
 17756                           wreg	equ	0xFE8
 17757                           indf1	equ	0xFE7
 17758                           postdec1	equ	0xFE5
 17759                           fsr1h	equ	0xFE2
 17760                           fsr1l	equ	0xFE1
 17761                           bsr	equ	0xFE0
 17762                           indf2	equ	0xFDF
 17763                           postinc2	equ	0xFDE
 17764                           postdec2	equ	0xFDD
 17765                           fsr2h	equ	0xFDA
 17766                           fsr2l	equ	0xFD9
 17767                           status	equ	0xFD8
 17768                           
 17769                           	psect	intcode_body
 17770  014CD8                     __pintcode_body:
 17771                           	opt stack 9
 17772  014CD8                     int_func:
 17773                           	opt stack 9
 17774  014CD8  CFFA F0B3          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
 17775  014CDC  CFFB F0B4          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
 17776  014CE0  CFE9 F0B5          	movff	fsr0l,??_INTERRUPT_InterruptManagerHigh+2
 17777  014CE4  CFEA F0B6          	movff	fsr0h,??_INTERRUPT_InterruptManagerHigh+3
 17778  014CE8  CFE1 F0B7          	movff	fsr1l,??_INTERRUPT_InterruptManagerHigh+4
 17779  014CEC  CFE2 F0B8          	movff	fsr1h,??_INTERRUPT_InterruptManagerHigh+5
 17780  014CF0  CFD9 F0B9          	movff	fsr2l,??_INTERRUPT_InterruptManagerHigh+6
 17781  014CF4  CFDA F0BA          	movff	fsr2h,??_INTERRUPT_InterruptManagerHigh+7
 17782  014CF8  CFF3 F0BB          	movff	prodl,??_INTERRUPT_InterruptManagerHigh+8
 17783  014CFC  CFF4 F0BC          	movff	prodh,??_INTERRUPT_InterruptManagerHigh+9
 17784  014D00  CFF6 F0BD          	movff	tblptrl,??_INTERRUPT_InterruptManagerHigh+10
 17785  014D04  CFF7 F0BE          	movff	tblptrh,??_INTERRUPT_InterruptManagerHigh+11
 17786  014D08  CFF8 F0BF          	movff	tblptru,??_INTERRUPT_InterruptManagerHigh+12
 17787  014D0C  CFF5 F0C0          	movff	tablat,??_INTERRUPT_InterruptManagerHigh+13
 17788  014D10  C05E  F0C1         	movff	btemp,??_INTERRUPT_InterruptManagerHigh+14
 17789  014D14  C05F  F0C2         	movff	btemp+1,??_INTERRUPT_InterruptManagerHigh+15
 17790  014D18  C060  F0C3         	movff	btemp+2,??_INTERRUPT_InterruptManagerHigh+16
 17791  014D1C  C061  F0C4         	movff	btemp+3,??_INTERRUPT_InterruptManagerHigh+17
 17792                           
 17793                           ;interrupt_manager.c: 83: if(PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 1)
 17794  014D20  010E               	movlb	14	; () banked
 17795  014D22  BF2C               	btfsc	44,7,b	;volatile
 17796                           
 17797                           ; BSR set to: 14
 17798  014D24  AF36               	btfss	54,7,b	;volatile
 17799  014D26  D00D               	goto	i2l202
 17800                           
 17801                           ; BSR set to: 14
 17802                           ;interrupt_manager.c: 84: {
 17803                           ;interrupt_manager.c: 85: EUSART2_RxDefaultInterruptHandler();
 17804  014D28  D801               	call	i2u1604_48
 17805  014D2A  D016               	goto	i2l206
 17806  014D2C                     i2u1604_48:
 17807  014D2C  0005               	push	
 17808  014D2E  6EFA               	movwf	pclath,c
 17809  014D30  0100               	movlb	0	; () banked
 17810  014D32  51D4               	movf	_EUSART2_RxDefaultInterruptHandler& (0+255),w,b
 17811  014D34  6EFD               	movwf	tosl,c
 17812  014D36  51D5               	movf	(_EUSART2_RxDefaultInterruptHandler+1)& (0+255),w,b
 17813  014D38  6EFE               	movwf	tosh,c
 17814  014D3A  51D6               	movf	(_EUSART2_RxDefaultInterruptHandler+2)& (0+255),w,b
 17815  014D3C  6EFF               	movwf	tosu,c
 17816  014D3E  50FA               	movf	pclath,w,c
 17817  014D40  0012               	return		;indir
 17818  014D42                     i2l202:
 17819                           
 17820                           ; BSR set to: 14
 17821                           ;interrupt_manager.c: 87: else if(PIE5bits.TMR5IE == 1 && PIR5bits.TMR5IF == 1)
 17822  014D42  B92E               	btfsc	46,4,b	;volatile
 17823                           
 17824                           ; BSR set to: 14
 17825  014D44  A938               	btfss	56,4,b	;volatile
 17826  014D46  D003               	goto	i2l204
 17827                           
 17828                           ; BSR set to: 14
 17829                           ;interrupt_manager.c: 88: {
 17830                           ;interrupt_manager.c: 89: TMR5_ISR();
 17831  014D48  EC5D  F0AF         	call	_TMR5_ISR	;wreg free
 17832                           
 17833                           ;interrupt_manager.c: 90: }
 17834  014D4C  D005               	goto	i2l206
 17835  014D4E                     i2l204:
 17836                           
 17837                           ; BSR set to: 14
 17838                           ;interrupt_manager.c: 91: else if(PIE1bits.ADIE == 1 && PIR1bits.ADIF == 1)
 17839  014D4E  B12A               	btfsc	42,0,b	;volatile
 17840                           
 17841                           ; BSR set to: 14
 17842  014D50  A134               	btfss	52,0,b	;volatile
 17843  014D52  D002               	goto	i2l206
 17844                           
 17845                           ; BSR set to: 14
 17846                           ;interrupt_manager.c: 92: {
 17847                           ;interrupt_manager.c: 93: ADCC_ISR();
 17848  014D54  ECFC  F0AF         	call	_ADCC_ISR	;wreg free
 17849  014D58                     i2l206:
 17850                           
 17851                           ;interrupt_manager.c: 95: else
 17852                           ;interrupt_manager.c: 96: {
 17853  014D58  C0C4  F061         	movff	??_INTERRUPT_InterruptManagerHigh+17,btemp+3
 17854  014D5C  C0C3  F060         	movff	??_INTERRUPT_InterruptManagerHigh+16,btemp+2
 17855  014D60  C0C2  F05F         	movff	??_INTERRUPT_InterruptManagerHigh+15,btemp+1
 17856  014D64  C0C1  F05E         	movff	??_INTERRUPT_InterruptManagerHigh+14,btemp
 17857  014D68  C0C0  FFF5         	movff	??_INTERRUPT_InterruptManagerHigh+13,tablat
 17858  014D6C  C0BF  FFF8         	movff	??_INTERRUPT_InterruptManagerHigh+12,tblptru
 17859  014D70  C0BE  FFF7         	movff	??_INTERRUPT_InterruptManagerHigh+11,tblptrh
 17860  014D74  C0BD  FFF6         	movff	??_INTERRUPT_InterruptManagerHigh+10,tblptrl
 17861  014D78  C0BC  FFF4         	movff	??_INTERRUPT_InterruptManagerHigh+9,prodh
 17862  014D7C  C0BB  FFF3         	movff	??_INTERRUPT_InterruptManagerHigh+8,prodl
 17863  014D80  C0BA  FFDA         	movff	??_INTERRUPT_InterruptManagerHigh+7,fsr2h
 17864  014D84  C0B9  FFD9         	movff	??_INTERRUPT_InterruptManagerHigh+6,fsr2l
 17865  014D88  C0B8  FFE2         	movff	??_INTERRUPT_InterruptManagerHigh+5,fsr1h
 17866  014D8C  C0B7  FFE1         	movff	??_INTERRUPT_InterruptManagerHigh+4,fsr1l
 17867  014D90  C0B6  FFEA         	movff	??_INTERRUPT_InterruptManagerHigh+3,fsr0h
 17868  014D94  C0B5  FFE9         	movff	??_INTERRUPT_InterruptManagerHigh+2,fsr0l
 17869  014D98  C0B4  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
 17870  014D9C  C0B3  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
 17871  014DA0  925E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 17872  014DA2  0011               	retfie		f
 17873  014DA4                     __end_of_INTERRUPT_InterruptManagerHigh:
 17874                           	opt stack 0
 17875                           tosu	equ	0xFFF
 17876                           tosh	equ	0xFFE
 17877                           tosl	equ	0xFFD
 17878                           pclatu	equ	0xFFB
 17879                           pclath	equ	0xFFA
 17880                           tblptru	equ	0xFF8
 17881                           tblptrh	equ	0xFF7
 17882                           tblptrl	equ	0xFF6
 17883                           tablat	equ	0xFF5
 17884                           prodh	equ	0xFF4
 17885                           prodl	equ	0xFF3
 17886                           intcon	equ	0xFF2
 17887                           postinc0	equ	0xFEE
 17888                           fsr0h	equ	0xFEA
 17889                           fsr0l	equ	0xFE9
 17890                           wreg	equ	0xFE8
 17891                           indf1	equ	0xFE7
 17892                           postdec1	equ	0xFE5
 17893                           fsr1h	equ	0xFE2
 17894                           fsr1l	equ	0xFE1
 17895                           bsr	equ	0xFE0
 17896                           indf2	equ	0xFDF
 17897                           postinc2	equ	0xFDE
 17898                           postdec2	equ	0xFDD
 17899                           fsr2h	equ	0xFDA
 17900                           fsr2l	equ	0xFD9
 17901                           status	equ	0xFD8
 17902                           
 17903 ;; *************** function _TMR5_ISR *****************
 17904 ;; Defined at:
 17905 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17906 ;; Parameters:    Size  Location     Type
 17907 ;;		None
 17908 ;; Auto vars:     Size  Location     Type
 17909 ;;		None
 17910 ;; Return value:  Size  Location     Type
 17911 ;;                  1    wreg      void 
 17912 ;; Registers used:
 17913 ;;		wreg, status,2, status,0, pclath, tosl, cstack
 17914 ;; Tracked objects:
 17915 ;;		On entry : 0/0
 17916 ;;		On exit  : 0/0
 17917 ;;		Unchanged: 0/0
 17918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 17919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17923 ;;Total ram usage:        0 bytes
 17924 ;; Hardware stack levels used:    1
 17925 ;; Hardware stack levels required when called:    1
 17926 ;; This function calls:
 17927 ;;		Absolute function
 17928 ;;		_TMR5_DefaultInterruptHandler
 17929 ;;		_TMR5_WriteTimer
 17930 ;; This function is called by:
 17931 ;;		_INTERRUPT_InterruptManagerHigh
 17932 ;; This function uses a non-reentrant model
 17933 ;;
 17934                           
 17935                           	psect	text69
 17936  015EBA                     __ptext69:
 17937                           	opt stack 0
 17938  015EBA                     _TMR5_ISR:
 17939                           	opt stack 16
 17940                           
 17941                           ;tmr5.c: 168: PIR5bits.TMR5IF = 0;
 17942                           
 17943                           ;incstack = 0
 17944  015EBA  010E               	movlb	14	; () banked
 17945  015EBC  9938               	bcf	56,4,b	;volatile
 17946                           
 17947                           ; BSR set to: 14
 17948                           ;tmr5.c: 169: TMR5_WriteTimer(timer5ReloadVal);
 17949  015EBE  C1D5  F001         	movff	_timer5ReloadVal,TMR5_WriteTimer@timerVal	;volatile
 17950  015EC2  C1D6  F002         	movff	_timer5ReloadVal+1,TMR5_WriteTimer@timerVal+1	;volatile
 17951  015EC6  ECA9  F0B0         	call	_TMR5_WriteTimer	;wreg free
 17952                           
 17953                           ;tmr5.c: 171: if(TMR5_InterruptHandler)
 17954  015ECA  0101               	movlb	1	; () banked
 17955  015ECC  51BD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17956  015ECE  11BE               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17957  015ED0  11BF               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17958  015ED2  B4D8               	btfsc	status,2,c
 17959  015ED4  0012               	return	
 17960                           
 17961                           ; BSR set to: 1
 17962                           ;tmr5.c: 172: {
 17963                           ;tmr5.c: 173: TMR5_InterruptHandler();
 17964  015ED6  D801               	call	i2u1589_48
 17965  015ED8  0012               	return	
 17966  015EDA                     i2u1589_48:
 17967  015EDA  0005               	push	
 17968  015EDC  6EFA               	movwf	pclath,c
 17969  015EDE  51BD               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17970  015EE0  6EFD               	movwf	tosl,c
 17971  015EE2  51BE               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17972  015EE4  6EFE               	movwf	tosh,c
 17973  015EE6  51BF               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17974  015EE8  6EFF               	movwf	tosu,c
 17975  015EEA  50FA               	movf	pclath,w,c
 17976  015EEC  0012               	return		;indir
 17977  015EEE                     __end_of_TMR5_ISR:
 17978                           	opt stack 0
 17979                           tosu	equ	0xFFF
 17980                           tosh	equ	0xFFE
 17981                           tosl	equ	0xFFD
 17982                           pclatu	equ	0xFFB
 17983                           pclath	equ	0xFFA
 17984                           tblptru	equ	0xFF8
 17985                           tblptrh	equ	0xFF7
 17986                           tblptrl	equ	0xFF6
 17987                           tablat	equ	0xFF5
 17988                           prodh	equ	0xFF4
 17989                           prodl	equ	0xFF3
 17990                           intcon	equ	0xFF2
 17991                           postinc0	equ	0xFEE
 17992                           fsr0h	equ	0xFEA
 17993                           fsr0l	equ	0xFE9
 17994                           wreg	equ	0xFE8
 17995                           indf1	equ	0xFE7
 17996                           postdec1	equ	0xFE5
 17997                           fsr1h	equ	0xFE2
 17998                           fsr1l	equ	0xFE1
 17999                           bsr	equ	0xFE0
 18000                           indf2	equ	0xFDF
 18001                           postinc2	equ	0xFDE
 18002                           postdec2	equ	0xFDD
 18003                           fsr2h	equ	0xFDA
 18004                           fsr2l	equ	0xFD9
 18005                           status	equ	0xFD8
 18006                           
 18007 ;; *************** function _TMR5_WriteTimer *****************
 18008 ;; Defined at:
 18009 ;;		line 127 in file "mcc_generated_files/tmr5.c"
 18010 ;; Parameters:    Size  Location     Type
 18011 ;;  timerVal        2    0[COMRAM] unsigned int 
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;		None
 18014 ;; Return value:  Size  Location     Type
 18015 ;;                  1    wreg      void 
 18016 ;; Registers used:
 18017 ;;		wreg, status,2
 18018 ;; Tracked objects:
 18019 ;;		On entry : 0/0
 18020 ;;		On exit  : 0/0
 18021 ;;		Unchanged: 0/0
 18022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18023 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18026 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18027 ;;Total ram usage:        2 bytes
 18028 ;; Hardware stack levels used:    1
 18029 ;; This function calls:
 18030 ;;		Nothing
 18031 ;; This function is called by:
 18032 ;;		_TMR5_ISR
 18033 ;;		_TMR5_Reload
 18034 ;; This function uses a non-reentrant model
 18035 ;;
 18036                           
 18037                           	psect	text70
 18038  016152                     __ptext70:
 18039                           	opt stack 0
 18040  016152                     _TMR5_WriteTimer:
 18041                           	opt stack 16
 18042                           
 18043                           ;tmr5.c: 129: if (T5CONbits.nT5SYNC == 1)
 18044                           
 18045                           ;incstack = 0
 18046  016152  A4C3               	btfss	4035,2,c	;volatile
 18047  016154  D007               	goto	i2l1010
 18048                           
 18049                           ;tmr5.c: 130: {
 18050                           ;tmr5.c: 132: T5CONbits.TMR5ON = 0;
 18051  016156  90C3               	bcf	4035,0,c	;volatile
 18052                           
 18053                           ;tmr5.c: 135: TMR5H = (timerVal >> 8);
 18054  016158  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18055  01615A  6EC2               	movwf	4034,c	;volatile
 18056                           
 18057                           ;tmr5.c: 136: TMR5L = timerVal;
 18058  01615C  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18059                           
 18060                           ;tmr5.c: 139: T5CONbits.TMR5ON =1;
 18061  016160  80C3               	bsf	4035,0,c	;volatile
 18062                           
 18063                           ;tmr5.c: 140: }
 18064  016162  0012               	return	
 18065  016164                     i2l1010:
 18066                           
 18067                           ;tmr5.c: 141: else
 18068                           ;tmr5.c: 142: {
 18069                           ;tmr5.c: 144: TMR5H = (timerVal >> 8);
 18070  016164  5002               	movf	TMR5_WriteTimer@timerVal+1,w,c
 18071  016166  6EC2               	movwf	4034,c	;volatile
 18072                           
 18073                           ;tmr5.c: 145: TMR5L = timerVal;
 18074  016168  C001  FFC1         	movff	TMR5_WriteTimer@timerVal,4033	;volatile
 18075  01616C  0012               	return	
 18076  01616E                     __end_of_TMR5_WriteTimer:
 18077                           	opt stack 0
 18078                           tosu	equ	0xFFF
 18079                           tosh	equ	0xFFE
 18080                           tosl	equ	0xFFD
 18081                           pclatu	equ	0xFFB
 18082                           pclath	equ	0xFFA
 18083                           tblptru	equ	0xFF8
 18084                           tblptrh	equ	0xFF7
 18085                           tblptrl	equ	0xFF6
 18086                           tablat	equ	0xFF5
 18087                           prodh	equ	0xFF4
 18088                           prodl	equ	0xFF3
 18089                           intcon	equ	0xFF2
 18090                           postinc0	equ	0xFEE
 18091                           fsr0h	equ	0xFEA
 18092                           fsr0l	equ	0xFE9
 18093                           wreg	equ	0xFE8
 18094                           indf1	equ	0xFE7
 18095                           postdec1	equ	0xFE5
 18096                           fsr1h	equ	0xFE2
 18097                           fsr1l	equ	0xFE1
 18098                           bsr	equ	0xFE0
 18099                           indf2	equ	0xFDF
 18100                           postinc2	equ	0xFDE
 18101                           postdec2	equ	0xFDD
 18102                           fsr2h	equ	0xFDA
 18103                           fsr2l	equ	0xFD9
 18104                           status	equ	0xFD8
 18105                           
 18106 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 18107 ;; Defined at:
 18108 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 18109 ;; Parameters:    Size  Location     Type
 18110 ;;		None
 18111 ;; Auto vars:     Size  Location     Type
 18112 ;;		None
 18113 ;; Return value:  Size  Location     Type
 18114 ;;                  1    wreg      void 
 18115 ;; Registers used:
 18116 ;;		None
 18117 ;; Tracked objects:
 18118 ;;		On entry : 0/0
 18119 ;;		On exit  : 0/0
 18120 ;;		Unchanged: 0/0
 18121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18126 ;;Total ram usage:        0 bytes
 18127 ;; Hardware stack levels used:    1
 18128 ;; This function calls:
 18129 ;;		Nothing
 18130 ;; This function is called by:
 18131 ;;		_TMR5_Initialize
 18132 ;;		_TMR5_ISR
 18133 ;; This function uses a non-reentrant model
 18134 ;;
 18135                           
 18136                           	psect	text71
 18137  01626E                     __ptext71:
 18138                           	opt stack 0
 18139  01626E                     _TMR5_DefaultInterruptHandler:
 18140                           	opt stack 16
 18141                           
 18142                           ;incstack = 0
 18143  01626E  0012               	return		;funcret
 18144  016270                     __end_of_TMR5_DefaultInterruptHandler:
 18145                           	opt stack 0
 18146                           tosu	equ	0xFFF
 18147                           tosh	equ	0xFFE
 18148                           tosl	equ	0xFFD
 18149                           pclatu	equ	0xFFB
 18150                           pclath	equ	0xFFA
 18151                           tblptru	equ	0xFF8
 18152                           tblptrh	equ	0xFF7
 18153                           tblptrl	equ	0xFF6
 18154                           tablat	equ	0xFF5
 18155                           prodh	equ	0xFF4
 18156                           prodl	equ	0xFF3
 18157                           intcon	equ	0xFF2
 18158                           postinc0	equ	0xFEE
 18159                           fsr0h	equ	0xFEA
 18160                           fsr0l	equ	0xFE9
 18161                           wreg	equ	0xFE8
 18162                           indf1	equ	0xFE7
 18163                           postdec1	equ	0xFE5
 18164                           fsr1h	equ	0xFE2
 18165                           fsr1l	equ	0xFE1
 18166                           bsr	equ	0xFE0
 18167                           indf2	equ	0xFDF
 18168                           postinc2	equ	0xFDE
 18169                           postdec2	equ	0xFDD
 18170                           fsr2h	equ	0xFDA
 18171                           fsr2l	equ	0xFD9
 18172                           status	equ	0xFD8
 18173                           
 18174 ;; *************** function _EUSART2_Receive_ISR *****************
 18175 ;; Defined at:
 18176 ;;		line 204 in file "mcc_generated_files/eusart2.c"
 18177 ;; Parameters:    Size  Location     Type
 18178 ;;		None
 18179 ;; Auto vars:     Size  Location     Type
 18180 ;;		None
 18181 ;; Return value:  Size  Location     Type
 18182 ;;                  1    wreg      void 
 18183 ;; Registers used:
 18184 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18185 ;; Tracked objects:
 18186 ;;		On entry : 0/0
 18187 ;;		On exit  : 0/0
 18188 ;;		Unchanged: 0/0
 18189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18194 ;;Total ram usage:        0 bytes
 18195 ;; Hardware stack levels used:    1
 18196 ;; Hardware stack levels required when called:    4
 18197 ;; This function calls:
 18198 ;;		i2_printf
 18199 ;; This function is called by:
 18200 ;;		_EUSART2_Initialize
 18201 ;;		_INTERRUPT_InterruptManagerHigh
 18202 ;; This function uses a non-reentrant model
 18203 ;;
 18204                           
 18205                           	psect	text72
 18206  014F02                     __ptext72:
 18207                           	opt stack 0
 18208  014F02                     _EUSART2_Receive_ISR:
 18209                           	opt stack 13
 18210                           
 18211                           ;eusart2.c: 207: if(1 == RC2STAbits.OERR)
 18212                           
 18213                           ;incstack = 0
 18214  014F02  010E               	movlb	14	; () banked
 18215  014F04  A3F5               	btfss	245,1,b	;volatile
 18216  014F06  D002               	goto	i2l395
 18217                           
 18218                           ; BSR set to: 14
 18219                           ;eusart2.c: 208: {
 18220                           ;eusart2.c: 211: RC2STAbits.CREN = 0;
 18221  014F08  99F5               	bcf	245,4,b	;volatile
 18222                           
 18223                           ;eusart2.c: 212: RC2STAbits.CREN = 1;
 18224  014F0A  89F5               	bsf	245,4,b	;volatile
 18225  014F0C                     i2l395:
 18226                           
 18227                           ; BSR set to: 14
 18228                           ;eusart2.c: 213: }
 18229                           ;eusart2.c: 216: eusart2RxBuffer[eusart2RxHead++] = RC2REG;
 18230                           
 18231                           ; BSR set to: 14
 18232  014F0C  0100               	movlb	0	; () banked
 18233  014F0E  51DC               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18234  014F10  0D01               	mullw	1
 18235  014F12  0E80               	movlw	low _eusart2RxBuffer
 18236  014F14  24F3               	addwf	prodl,w,c
 18237  014F16  6ED9               	movwf	fsr2l,c
 18238  014F18  0E02               	movlw	high _eusart2RxBuffer
 18239  014F1A  20F4               	addwfc	prodh,w,c
 18240  014F1C  6EDA               	movwf	fsr2h,c
 18241  014F1E  CEF1 FFDF          	movff	3825,indf2	;volatile
 18242                           
 18243                           ; BSR set to: 0
 18244  014F22  2BDC               	incf	_eusart2RxHead& (0+255),f,b	;volatile
 18245                           
 18246                           ; BSR set to: 0
 18247                           ;eusart2.c: 217: if(sizeof(eusart2RxBuffer) <= eusart2RxHead)
 18248  014F24  0E3F               	movlw	63
 18249  014F26  65DC               	cpfsgt	_eusart2RxHead& (0+255),b	;volatile
 18250  014F28  D002               	goto	i2l396
 18251                           
 18252                           ; BSR set to: 0
 18253                           ;eusart2.c: 218: {
 18254                           ;eusart2.c: 219: eusart2RxHead = 0;
 18255  014F2A  0E00               	movlw	0
 18256  014F2C  6FDC               	movwf	_eusart2RxHead& (0+255),b	;volatile
 18257  014F2E                     i2l396:
 18258                           
 18259                           ; BSR set to: 0
 18260                           ;eusart2.c: 220: }
 18261                           ;eusart2.c: 221: eusart2RxCount++;
 18262                           
 18263                           ; BSR set to: 0
 18264  014F2E  0101               	movlb	1	; () banked
 18265  014F30  2BDB               	incf	_eusart2RxCount& (0+255),f,b	;volatile
 18266                           
 18267                           ; BSR set to: 1
 18268                           ;eusart2.c: 227: if((RC2REG == (int) '\n') || (RC2REG == (int) '\r')) {
 18269  014F32  0E0A               	movlw	10
 18270  014F34  010E               	movlb	14	; () banked
 18271  014F36  19F1               	xorwf	241,w,b	;volatile
 18272  014F38  B4D8               	btfsc	status,2,c
 18273  014F3A  D004               	goto	i2u1599_40
 18274                           
 18275                           ; BSR set to: 14
 18276  014F3C  0E0D               	movlw	13
 18277  014F3E  19F1               	xorwf	241,w,b	;volatile
 18278  014F40  A4D8               	btfss	status,2,c
 18279  014F42  D006               	goto	i2l397
 18280  014F44                     i2u1599_40:
 18281                           
 18282                           ; BSR set to: 14
 18283                           ;eusart2.c: 229: eusart2RxStringReady = 1;
 18284  014F44  0100               	movlb	0	; () banked
 18285  014F46  81E9               	bsf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 18286                           
 18287                           ; BSR set to: 0
 18288                           ;eusart2.c: 232: RC2REG = 0;
 18289  014F48  0E00               	movlw	0
 18290  014F4A  010E               	movlb	14	; () banked
 18291  014F4C  6FF1               	movwf	241,b	;volatile
 18292                           
 18293                           ;eusart2.c: 234: }
 18294  014F4E  D002               	goto	i2l400
 18295  014F50                     i2l397:
 18296                           
 18297                           ; BSR set to: 14
 18298                           ;eusart2.c: 236: else {
 18299                           ;eusart2.c: 238: eusart2RxStringReady = 0;
 18300  014F50  0100               	movlb	0	; () banked
 18301  014F52  91E9               	bcf	(_eusart2RxStringReady/(0+8))& (0+255),_eusart2RxStringReady& (0+7),b	;volatile
 18302  014F54                     i2l400:
 18303                           
 18304                           ;eusart2.c: 240: }
 18305                           ;eusart2.c: 243: if((RC2REG == (int) '\b')) {
 18306                           
 18307                           ; BSR set to: 0
 18308  014F54  0E08               	movlw	8
 18309  014F56  010E               	movlb	14	; () banked
 18310  014F58  19F1               	xorwf	241,w,b	;volatile
 18311  014F5A  A4D8               	btfss	status,2,c
 18312  014F5C  0012               	return	
 18313                           
 18314                           ; BSR set to: 14
 18315                           ;eusart2.c: 245: eusart2RxBuffer[eusart2RxHead] = '\0';
 18316  014F5E  0100               	movlb	0	; () banked
 18317  014F60  51DC               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18318  014F62  0D01               	mullw	1
 18319  014F64  0E80               	movlw	low _eusart2RxBuffer
 18320  014F66  24F3               	addwf	prodl,w,c
 18321  014F68  6ED9               	movwf	fsr2l,c
 18322  014F6A  0E02               	movlw	high _eusart2RxBuffer
 18323  014F6C  20F4               	addwfc	prodh,w,c
 18324  014F6E  6EDA               	movwf	fsr2h,c
 18325  014F70  0E00               	movlw	0
 18326  014F72  6EDF               	movwf	indf2,c
 18327                           
 18328                           ; BSR set to: 0
 18329                           ;eusart2.c: 246: eusart2RxHead--;
 18330  014F74  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18331                           
 18332                           ; BSR set to: 0
 18333                           ;eusart2.c: 249: printf("\033[K");
 18334  014F76  0EC1               	movlw	low STR_1
 18335  014F78  6F66               	movwf	i2printf@f& (0+255),b
 18336  014F7A  0EFF               	movlw	high STR_1
 18337  014F7C  6F67               	movwf	(i2printf@f+1)& (0+255),b
 18338  014F7E  EC17  F085         	call	i2_printf	;wreg free
 18339                           
 18340                           ;eusart2.c: 251: if(eusart2RxHead != eusart2RxTail) {
 18341  014F82  0101               	movlb	1	; () banked
 18342  014F84  51DC               	movf	_eusart2RxTail& (0+255),w,b	;volatile
 18343  014F86  0100               	movlb	0	; () banked
 18344  014F88  19DC               	xorwf	_eusart2RxHead& (0+255),w,b	;volatile
 18345  014F8A  B4D8               	btfsc	status,2,c
 18346  014F8C  D00B               	goto	i2l402
 18347                           
 18348                           ; BSR set to: 0
 18349                           ;eusart2.c: 253: eusart2RxBuffer[eusart2RxHead] = '\0';
 18350  014F8E  51DC               	movf	_eusart2RxHead& (0+255),w,b	;volatile
 18351  014F90  0D01               	mullw	1
 18352  014F92  0E80               	movlw	low _eusart2RxBuffer
 18353  014F94  24F3               	addwf	prodl,w,c
 18354  014F96  6ED9               	movwf	fsr2l,c
 18355  014F98  0E02               	movlw	high _eusart2RxBuffer
 18356  014F9A  20F4               	addwfc	prodh,w,c
 18357  014F9C  6EDA               	movwf	fsr2h,c
 18358  014F9E  0E00               	movlw	0
 18359  014FA0  6EDF               	movwf	indf2,c
 18360                           
 18361                           ; BSR set to: 0
 18362                           ;eusart2.c: 254: eusart2RxHead--;
 18363  014FA2  07DC               	decf	_eusart2RxHead& (0+255),f,b	;volatile
 18364  014FA4                     i2l402:
 18365                           
 18366                           ; BSR set to: 0
 18367                           ;eusart2.c: 256: }
 18368                           ;eusart2.c: 258: RC2REG = 0;
 18369                           
 18370                           ; BSR set to: 0
 18371  014FA4  0E00               	movlw	0
 18372  014FA6  010E               	movlb	14	; () banked
 18373  014FA8  6FF1               	movwf	241,b	;volatile
 18374  014FAA  0012               	return	
 18375  014FAC                     __end_of_EUSART2_Receive_ISR:
 18376                           	opt stack 0
 18377                           tosu	equ	0xFFF
 18378                           tosh	equ	0xFFE
 18379                           tosl	equ	0xFFD
 18380                           pclatu	equ	0xFFB
 18381                           pclath	equ	0xFFA
 18382                           tblptru	equ	0xFF8
 18383                           tblptrh	equ	0xFF7
 18384                           tblptrl	equ	0xFF6
 18385                           tablat	equ	0xFF5
 18386                           prodh	equ	0xFF4
 18387                           prodl	equ	0xFF3
 18388                           intcon	equ	0xFF2
 18389                           postinc0	equ	0xFEE
 18390                           fsr0h	equ	0xFEA
 18391                           fsr0l	equ	0xFE9
 18392                           wreg	equ	0xFE8
 18393                           indf1	equ	0xFE7
 18394                           postdec1	equ	0xFE5
 18395                           fsr1h	equ	0xFE2
 18396                           fsr1l	equ	0xFE1
 18397                           bsr	equ	0xFE0
 18398                           indf2	equ	0xFDF
 18399                           postinc2	equ	0xFDE
 18400                           postdec2	equ	0xFDD
 18401                           fsr2h	equ	0xFDA
 18402                           fsr2l	equ	0xFD9
 18403                           status	equ	0xFD8
 18404                           
 18405 ;; *************** function i2_printf *****************
 18406 ;; Defined at:
 18407 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 18408 ;; Parameters:    Size  Location     Type
 18409 ;;  f               2    6[BANK0 ] PTR const unsigned char 
 18410 ;;		 -> STR_87(30), STR_86(23), STR_85(40), STR_84(30), 
 18411 ;;		 -> STR_83(33), STR_82(1152), STR_80(58), STR_78(63), 
 18412 ;;		 -> STR_77(63), STR_76(37), STR_75(102), STR_74(86), 
 18413 ;;		 -> STR_72(25), STR_70(24), STR_68(41), STR_66(40), 
 18414 ;;		 -> STR_64(34), STR_62(34), STR_60(32), STR_58(56), 
 18415 ;;		 -> STR_56(34), STR_54(34), STR_52(35), STR_50(47), 
 18416 ;;		 -> STR_49(17), STR_46(4), STR_45(5), STR_43(4), 
 18417 ;;		 -> STR_42(5), STR_40(3), terminal_textAttributes@output_buff(15), STR_10(4), 
 18418 ;;		 -> STR_9(4), STR_8(4), STR_7(4), STR_6(5), 
 18419 ;;		 -> STR_5(3), STR_4(372), STR_3(4), STR_2(5), 
 18420 ;;		 -> STR_1(4), 
 18421 ;; Auto vars:     Size  Location     Type
 18422 ;;  printf          4   35[BANK0 ] unsigned long 
 18423 ;;  printf          4   28[BANK0 ] struct .
 18424 ;;  printf          3   32[BANK0 ] struct .
 18425 ;;  printf          2   39[BANK0 ] int 
 18426 ;;  printf          2   26[BANK0 ] int 
 18427 ;;  printf          2   24[BANK0 ] unsigned short 
 18428 ;;  printf          2   22[BANK0 ] PTR void [1]
 18429 ;;		 -> ?i2_printf(2), ?_printf(2), 
 18430 ;;  printf          2   20[BANK0 ] unsigned int 
 18431 ;;  printf          2   18[BANK0 ] PTR const unsigned char 
 18432 ;;		 -> printf@c(1), 
 18433 ;;  printf          2    0        int 
 18434 ;;  printf          1   41[BANK0 ] char 
 18435 ;;  printf          1   17[BANK0 ] unsigned char 
 18436 ;;  printf          1    0        unsigned char 
 18437 ;; Return value:  Size  Location     Type
 18438 ;;                  2    6[BANK0 ] int 
 18439 ;; Registers used:
 18440 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18441 ;; Tracked objects:
 18442 ;;		On entry : 0/0
 18443 ;;		On exit  : 0/0
 18444 ;;		Unchanged: 0/0
 18445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 18446 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18447 ;;      Locals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18448 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18449 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18450 ;;Total ram usage:       36 bytes
 18451 ;; Hardware stack levels used:    1
 18452 ;; Hardware stack levels required when called:    3
 18453 ;; This function calls:
 18454 ;;		i2___awdiv
 18455 ;;		i2___ftadd
 18456 ;;		i2___ftge
 18457 ;;		i2___ftmul
 18458 ;;		i2___ftneg
 18459 ;;		i2___ftsub
 18460 ;;		i2___fttol
 18461 ;;		i2___lldiv
 18462 ;;		i2___llmod
 18463 ;;		i2___lltoft
 18464 ;;		i2___wmul
 18465 ;;		i2__div_to_l_
 18466 ;;		i2__tdiv_to_l_
 18467 ;;		i2_fround
 18468 ;;		i2_isdigit
 18469 ;;		i2_putch
 18470 ;;		i2_scale
 18471 ;; This function is called by:
 18472 ;;		_EUSART2_Receive_ISR
 18473 ;; This function uses a non-reentrant model
 18474 ;;
 18475                           
 18476                           	psect	text73
 18477  010A2E                     __ptext73:
 18478                           	opt stack 0
 18479  010A2E                     i2_printf:
 18480                           	opt stack 13
 18481                           
 18482                           ;doprnt.c: 466: va_list ap;
 18483                           ;doprnt.c: 499: signed char c;
 18484                           ;doprnt.c: 501: int width;
 18485                           ;doprnt.c: 504: int prec;
 18486                           ;doprnt.c: 508: unsigned short flag;
 18487                           ;doprnt.c: 515: char d;
 18488                           ;doprnt.c: 516: double fval;
 18489                           ;doprnt.c: 517: int exp;
 18490                           ;doprnt.c: 523: union {
 18491                           ;doprnt.c: 524: unsigned long vd;
 18492                           ;doprnt.c: 525: double integ;
 18493                           ;doprnt.c: 526: } tmpval;
 18494                           ;doprnt.c: 528: unsigned long val;
 18495                           ;doprnt.c: 529: unsigned len;
 18496                           ;doprnt.c: 530: const char * cp;
 18497                           ;doprnt.c: 533: *ap = __va_start();
 18498                           
 18499                           ; BSR set to: 14
 18500                           ;incstack = 0
 18501  010A2E  0E68               	movlw	low (?i2_printf+2)
 18502  010A30  0100               	movlb	0	; () banked
 18503  010A32  6F76               	movwf	i2printf@ap& (0+255),b
 18504  010A34  0E00               	movlw	high (?i2_printf+2)
 18505  010A36  6F77               	movwf	(i2printf@ap+1)& (0+255),b
 18506                           
 18507                           ;doprnt.c: 536: while(c = *f++) {
 18508  010A38  EF0C  F08A         	goto	i2u1585_40
 18509  010A3C                     
 18510                           ; BSR set to: 0
 18511                           ;doprnt.c: 538: if(c != '%')
 18512                           
 18513                           ; BSR set to: 0
 18514  010A3C  0E25               	movlw	37
 18515  010A3E  1989               	xorwf	i2printf@c& (0+255),w,b
 18516  010A40  B4D8               	btfsc	status,2,c
 18517  010A42  D005               	goto	i2l1072
 18518                           
 18519                           ; BSR set to: 0
 18520                           ;doprnt.c: 540: {
 18521                           ;doprnt.c: 541: (putch(c) );
 18522  010A44  5189               	movf	i2printf@c& (0+255),w,b
 18523  010A46  EC29  F0B1         	call	i2_putch
 18524                           
 18525                           ;doprnt.c: 542: continue;
 18526  010A4A  EF0C  F08A         	goto	i2u1585_40
 18527  010A4E                     i2l1072:
 18528                           
 18529                           ;doprnt.c: 543: }
 18530                           ;doprnt.c: 548: flag = 0;
 18531  010A4E  0E00               	movlw	0
 18532  010A50  0100               	movlb	0	; () banked
 18533  010A52  6F79               	movwf	(i2printf@flag+1)& (0+255),b
 18534  010A54  0E00               	movlw	0
 18535  010A56  6F78               	movwf	i2printf@flag& (0+255),b
 18536                           
 18537                           ; BSR set to: 0
 18538                           ;doprnt.c: 611: if(*f == '.') {
 18539  010A58  C066  FFF6         	movff	i2printf@f,tblptrl
 18540  010A5C  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18541  010A60  0E00               	movlw	low (__mediumconst shr (0+16))
 18542  010A62  6EF8               	movwf	tblptru,c
 18543  010A64  0E0D               	movlw	(high __ramtop+-1)
 18544  010A66  64F7               	cpfsgt	tblptrh,c
 18545  010A68  D003               	bra	i2u1539_47
 18546  010A6A  0008               	tblrd		*
 18547  010A6C  50F5               	movf	tablat,w,c
 18548  010A6E  D005               	bra	i2u1539_40
 18549  010A70                     i2u1539_47:
 18550  010A70  CFF6 FFE1          	movff	tblptrl,fsr1l
 18551  010A74  CFF7 FFE2          	movff	tblptrh,fsr1h
 18552  010A78  50E7               	movf	indf1,w,c
 18553  010A7A                     i2u1539_40:
 18554  010A7A  0A2E               	xorlw	46
 18555  010A7C  A4D8               	btfss	status,2,c
 18556  010A7E  D048               	goto	i2l1073
 18557                           
 18558                           ;doprnt.c: 612: flag |= 0x4000;
 18559  010A80  0100               	movlb	0	; () banked
 18560  010A82  8D79               	bsf	(i2printf@flag+1)& (0+255),6,b
 18561                           
 18562                           ;doprnt.c: 613: f++;
 18563  010A84  4B66               	infsnz	i2printf@f& (0+255),f,b
 18564  010A86  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18565                           
 18566                           ; BSR set to: 0
 18567                           ;doprnt.c: 620: {
 18568                           ;doprnt.c: 621: prec = 0;
 18569  010A88  0E00               	movlw	0
 18570  010A8A  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 18571  010A8C  0E00               	movlw	0
 18572  010A8E  6F87               	movwf	i2printf@prec& (0+255),b
 18573                           
 18574                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 18575  010A90  D029               	goto	i2l1074
 18576  010A92                     
 18577                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 18578                           
 18579                           ; BSR set to: 0
 18580  010A92  C087  F00F         	movff	i2printf@prec,i2___wmul@multiplier
 18581  010A96  C088  F010         	movff	i2printf@prec+1,i2___wmul@multiplier+1
 18582  010A9A  0E00               	movlw	0
 18583  010A9C  6E12               	movwf	i2___wmul@multiplicand+1,c
 18584  010A9E  0E0A               	movlw	10
 18585  010AA0  6E11               	movwf	i2___wmul@multiplicand,c
 18586  010AA2  EC36  F0B0         	call	i2___wmul	;wreg free
 18587  010AA6  C066  FFF6         	movff	i2printf@f,tblptrl
 18588  010AAA  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18589  010AAE  0E00               	movlw	low (__mediumconst shr (0+16))
 18590  010AB0  6EF8               	movwf	tblptru,c
 18591  010AB2  0E0D               	movlw	(high __ramtop+-1)
 18592  010AB4  64F7               	cpfsgt	tblptrh,c
 18593  010AB6  D003               	bra	i2u1541_47
 18594  010AB8  0008               	tblrd		*
 18595  010ABA  50F5               	movf	tablat,w,c
 18596  010ABC  D005               	bra	i2u1541_40
 18597  010ABE                     i2u1541_47:
 18598  010ABE  CFF6 FFE1          	movff	tblptrl,fsr1l
 18599  010AC2  CFF7 FFE2          	movff	tblptrh,fsr1h
 18600  010AC6  50E7               	movf	indf1,w,c
 18601  010AC8                     i2u1541_40:
 18602  010AC8  0100               	movlb	0	; () banked
 18603  010ACA  6F68               	movwf	??i2_printf& (0+255),b
 18604  010ACC  5168               	movf	??i2_printf& (0+255),w,b
 18605  010ACE  260F               	addwf	?i2___wmul,f,c
 18606  010AD0  0E00               	movlw	0
 18607  010AD2  2210               	addwfc	?i2___wmul+1,f,c
 18608  010AD4  0ED0               	movlw	208
 18609  010AD6  240F               	addwf	?i2___wmul,w,c
 18610  010AD8  6F87               	movwf	i2printf@prec& (0+255),b
 18611  010ADA  0EFF               	movlw	255
 18612  010ADC  2010               	addwfc	?i2___wmul+1,w,c
 18613  010ADE  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 18614                           
 18615                           ; BSR set to: 0
 18616  010AE0  4B66               	infsnz	i2printf@f& (0+255),f,b
 18617  010AE2  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18618  010AE4                     i2l1074:
 18619                           
 18620                           ; BSR set to: 0
 18621                           
 18622                           ; BSR set to: 0
 18623  010AE4  C066  FFF6         	movff	i2printf@f,tblptrl
 18624  010AE8  C067  FFF7         	movff	i2printf@f+1,tblptrh
 18625  010AEC  0E00               	movlw	low (__mediumconst shr (0+16))
 18626  010AEE  6EF8               	movwf	tblptru,c
 18627  010AF0  0E0D               	movlw	(high __ramtop+-1)
 18628  010AF2  64F7               	cpfsgt	tblptrh,c
 18629  010AF4  D003               	bra	i2u1542_47
 18630  010AF6  0008               	tblrd		*
 18631  010AF8  50F5               	movf	tablat,w,c
 18632  010AFA  D005               	bra	i2u1542_40
 18633  010AFC                     i2u1542_47:
 18634  010AFC  CFF6 FFE1          	movff	tblptrl,fsr1l
 18635  010B00  CFF7 FFE2          	movff	tblptrh,fsr1h
 18636  010B04  50E7               	movf	indf1,w,c
 18637  010B06                     i2u1542_40:
 18638  010B06  EC7E  F0B0         	call	i2_isdigit
 18639  010B0A  A0D8               	btfss	status,0,c
 18640  010B0C  D03B               	goto	i2l1078
 18641  010B0E  D7C1               	goto	i2l1075
 18642  010B10                     i2l1073:
 18643                           
 18644                           ;doprnt.c: 626: prec = 0;
 18645  010B10  0E00               	movlw	0
 18646  010B12  0100               	movlb	0	; () banked
 18647  010B14  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 18648  010B16  0E00               	movlw	0
 18649  010B18  6F87               	movwf	i2printf@prec& (0+255),b
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;doprnt.c: 628: flag |= 0x1000;
 18653  010B1A  8979               	bsf	(i2printf@flag+1)& (0+255),4,b
 18654                           
 18655                           ; BSR set to: 0
 18656                           ;doprnt.c: 630: }
 18657                           ;doprnt.c: 635: switch(c = *f++) {
 18658  010B1C  D033               	goto	i2l1078
 18659  010B1E                     
 18660                           ; BSR set to: 0
 18661                           ;doprnt.c: 663: flag |= 0x400;
 18662                           
 18663                           ; BSR set to: 0
 18664  010B1E  8579               	bsf	(i2printf@flag+1)& (0+255),2,b
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;doprnt.c: 698: case 'i':
 18668                           ;doprnt.c: 699: break;
 18669                           
 18670                           ; BSR set to: 0
 18671                           
 18672                           ;doprnt.c: 697: case 'd':
 18673                           
 18674                           ;doprnt.c: 664: break;
 18675  010B20  D062               	goto	i2l1082
 18676  010B22                     
 18677                           ; BSR set to: 0
 18678                           ;doprnt.c: 718: case 'x':
 18679                           ;doprnt.c: 721: flag |= 0x80;
 18680                           
 18681                           ; BSR set to: 0
 18682                           
 18683                           ; BSR set to: 0
 18684  010B22  8F78               	bsf	i2printf@flag& (0+255),7,b
 18685                           
 18686                           ;doprnt.c: 723: break;
 18687  010B24  D060               	goto	i2l1082
 18688  010B26                     
 18689                           ; BSR set to: 0
 18690                           ;doprnt.c: 753: if(prec && prec < len)
 18691                           
 18692                           ; BSR set to: 0
 18693  010B26  5187               	movf	i2printf@prec& (0+255),w,b
 18694  010B28  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 18695  010B2A  B4D8               	btfsc	status,2,c
 18696  010B2C  D015               	goto	i2l1089
 18697                           
 18698                           ; BSR set to: 0
 18699  010B2E  5174               	movf	i2printf@len& (0+255),w,b
 18700  010B30  5D87               	subwf	i2printf@prec& (0+255),w,b
 18701  010B32  5175               	movf	(i2printf@len+1)& (0+255),w,b
 18702  010B34  5988               	subwfb	(i2printf@prec+1)& (0+255),w,b
 18703  010B36  B0D8               	btfsc	status,0,c
 18704  010B38  D00F               	goto	i2l1089
 18705                           
 18706                           ; BSR set to: 0
 18707                           ;doprnt.c: 754: len = prec;
 18708  010B3A  C087  F074         	movff	i2printf@prec,i2printf@len
 18709  010B3E  C088  F075         	movff	i2printf@prec+1,i2printf@len+1
 18710                           
 18711                           ; BSR set to: 0
 18712                           ;doprnt.c: 767: while(len--)
 18713  010B42  D00A               	goto	i2l1089
 18714  010B44                     i2l12249:
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;doprnt.c: 768: (putch(*cp++) );
 18718  010B44  C072  FFD9         	movff	i2printf@cp,fsr2l
 18719  010B48  C073  FFDA         	movff	i2printf@cp+1,fsr2h
 18720  010B4C  50DF               	movf	indf2,w,c
 18721  010B4E  EC29  F0B1         	call	i2_putch
 18722  010B52  0100               	movlb	0	; () banked
 18723  010B54  4B72               	infsnz	i2printf@cp& (0+255),f,b
 18724  010B56  2B73               	incf	(i2printf@cp+1)& (0+255),f,b
 18725  010B58                     i2l1089:
 18726                           
 18727                           ; BSR set to: 0
 18728                           
 18729                           ; BSR set to: 0
 18730  010B58  0774               	decf	i2printf@len& (0+255),f,b
 18731  010B5A  A0D8               	btfss	status,0,c
 18732  010B5C  0775               	decf	(i2printf@len+1)& (0+255),f,b
 18733  010B5E  2974               	incf	i2printf@len& (0+255),w,b
 18734  010B60  E1F1               	bnz	i2l12249
 18735  010B62  2975               	incf	(i2printf@len+1)& (0+255),w,b
 18736  010B64  B4D8               	btfsc	status,2,c
 18737  010B66  EF0C  F08A         	goto	i2u1585_40
 18738  010B6A  D7EC               	goto	i2l1090
 18739  010B6C                     
 18740                           ; BSR set to: 0
 18741                           ;doprnt.c: 805: cp = (char *)&c;
 18742                           
 18743                           ; BSR set to: 0
 18744  010B6C  0E89               	movlw	low i2printf@c
 18745  010B6E  6F72               	movwf	i2printf@cp& (0+255),b
 18746  010B70  0E00               	movlw	high i2printf@c
 18747  010B72  6F73               	movwf	(i2printf@cp+1)& (0+255),b
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;doprnt.c: 806: len = 1;
 18751  010B74  0E00               	movlw	0
 18752  010B76  6F75               	movwf	(i2printf@len+1)& (0+255),b
 18753  010B78  0E01               	movlw	1
 18754  010B7A  6F74               	movwf	i2printf@len& (0+255),b
 18755                           
 18756                           ;doprnt.c: 807: goto dostring;
 18757  010B7C  D7D4               	goto	i2l1087
 18758  010B7E                     
 18759                           ; BSR set to: 0
 18760                           ;doprnt.c: 818: flag |= 0xC0;
 18761                           
 18762                           ; BSR set to: 0
 18763  010B7E  0EC0               	movlw	192
 18764  010B80  1378               	iorwf	i2printf@flag& (0+255),f,b
 18765                           
 18766                           ; BSR set to: 0
 18767                           ;doprnt.c: 822: }
 18768                           
 18769                           ;doprnt.c: 819: break;
 18770  010B82  D031               	goto	i2l1082
 18771  010B84                     i2l1078:
 18772                           
 18773                           ; BSR set to: 0
 18774  010B84  0100               	movlb	0	; () banked
 18775  010B86  5166               	movf	i2printf@f& (0+255),w,b
 18776  010B88  6F68               	movwf	??i2_printf& (0+255),b
 18777  010B8A  5167               	movf	(i2printf@f+1)& (0+255),w,b
 18778  010B8C  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18779  010B8E  4B66               	infsnz	i2printf@f& (0+255),f,b
 18780  010B90  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 18781  010B92  C068  FFF6         	movff	??i2_printf,tblptrl
 18782  010B96  C069  FFF7         	movff	??i2_printf+1,tblptrh
 18783  010B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 18784  010B9C  6EF8               	movwf	tblptru,c
 18785  010B9E  0E0D               	movlw	(high __ramtop+-1)
 18786  010BA0  64F7               	cpfsgt	tblptrh,c
 18787  010BA2  D003               	bra	i2u1547_47
 18788  010BA4  0008               	tblrd		*
 18789  010BA6  50F5               	movf	tablat,w,c
 18790  010BA8  D005               	bra	i2u1547_40
 18791  010BAA                     i2u1547_47:
 18792  010BAA  CFF6 FFE1          	movff	tblptrl,fsr1l
 18793  010BAE  CFF7 FFE2          	movff	tblptrh,fsr1h
 18794  010BB2  50E7               	movf	indf1,w,c
 18795  010BB4                     i2u1547_40:
 18796  010BB4  0100               	movlb	0	; () banked
 18797  010BB6  6F89               	movwf	i2printf@c& (0+255),b
 18798  010BB8  5189               	movf	i2printf@c& (0+255),w,b
 18799                           
 18800                           ; Switch size 1, requested type "space"
 18801                           ; Number of cases is 7, Range of values is 0 to 120
 18802                           ; switch strategies available:
 18803                           ; Name         Instructions Cycles
 18804                           ; simple_byte           22    12 (average)
 18805                           ;	Chosen strategy is simple_byte
 18806  010BBA  0A00               	xorlw	0	; case 0
 18807  010BBC  B4D8               	btfsc	status,2,c
 18808  010BBE  0012               	return	
 18809  010BC0  0A58               	xorlw	88	; case 88
 18810  010BC2  B4D8               	btfsc	status,2,c
 18811  010BC4  D7AE               	goto	i2l1085
 18812  010BC6  0A3C               	xorlw	60	; case 100
 18813  010BC8  B4D8               	btfsc	status,2,c
 18814  010BCA  D00D               	goto	i2l1082
 18815  010BCC  0A02               	xorlw	2	; case 102
 18816  010BCE  B4D8               	btfsc	status,2,c
 18817  010BD0  D7A6               	goto	i2l1081
 18818  010BD2  0A0F               	xorlw	15	; case 105
 18819  010BD4  B4D8               	btfsc	status,2,c
 18820  010BD6  D007               	goto	i2l1082
 18821  010BD8  0A1C               	xorlw	28	; case 117
 18822  010BDA  B4D8               	btfsc	status,2,c
 18823  010BDC  D7D0               	goto	i2l1093
 18824  010BDE  0A0D               	xorlw	13	; case 120
 18825  010BE0  B4D8               	btfsc	status,2,c
 18826  010BE2  D79F               	goto	i2l1085
 18827  010BE4  D7C3               	goto	i2l1092
 18828  010BE6                     i2l1082:
 18829                           
 18830                           ; BSR set to: 0
 18831                           ;doprnt.c: 825: if(flag & (0x700)) {
 18832                           
 18833                           ; BSR set to: 0
 18834  010BE6  0E07               	movlw	7
 18835  010BE8  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 18836  010BEA  B4D8               	btfsc	status,2,c
 18837  010BEC  D2C0               	goto	i2l1094
 18838                           
 18839                           ; BSR set to: 0
 18840                           ;doprnt.c: 827: if(flag & 0x1000)
 18841  010BEE  A979               	btfss	(i2printf@flag+1)& (0+255),4,b
 18842  010BF0  D004               	goto	i2l1095
 18843                           
 18844                           ; BSR set to: 0
 18845                           ;doprnt.c: 829: prec = 6;
 18846  010BF2  0E00               	movlw	0
 18847  010BF4  6F88               	movwf	(i2printf@prec+1)& (0+255),b
 18848  010BF6  0E06               	movlw	6
 18849  010BF8  6F87               	movwf	i2printf@prec& (0+255),b
 18850  010BFA                     i2l1095:
 18851                           
 18852                           ; BSR set to: 0
 18853                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
 18854                           
 18855                           ; BSR set to: 0
 18856  010BFA  C076  FFD9         	movff	i2printf@ap,fsr2l
 18857  010BFE  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 18858  010C02  CFDE F080          	movff	postinc2,i2printf@fval
 18859  010C06  CFDE F081          	movff	postinc2,i2printf@fval+1
 18860  010C0A  CFDD F082          	movff	postdec2,i2printf@fval+2
 18861                           
 18862                           ; BSR set to: 0
 18863  010C0E  0E03               	movlw	3
 18864  010C10  2776               	addwf	i2printf@ap& (0+255),f,b
 18865  010C12  0E00               	movlw	0
 18866  010C14  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 18867                           
 18868                           ; BSR set to: 0
 18869                           ;doprnt.c: 831: if(fval < 0.0) {
 18870  010C16  AF82               	btfss	(i2printf@fval+2)& (0+255),7,b
 18871  010C18  D011               	goto	i2l1096
 18872                           
 18873                           ; BSR set to: 0
 18874                           ;doprnt.c: 832: fval = -fval;
 18875  010C1A  C080  F024         	movff	i2printf@fval,i2___ftneg@f1
 18876  010C1E  C081  F025         	movff	i2printf@fval+1,i2___ftneg@f1+1
 18877  010C22  C082  F026         	movff	i2printf@fval+2,i2___ftneg@f1+2
 18878  010C26  EC49  F0B0         	call	i2___ftneg	;wreg free
 18879  010C2A  C024  F080         	movff	?i2___ftneg,i2printf@fval
 18880  010C2E  C025  F081         	movff	?i2___ftneg+1,i2printf@fval+1
 18881  010C32  C026  F082         	movff	?i2___ftneg+2,i2printf@fval+2
 18882                           
 18883                           ;doprnt.c: 833: flag |= 0x03;
 18884  010C36  0E03               	movlw	3
 18885  010C38  0100               	movlb	0	; () banked
 18886  010C3A  1378               	iorwf	i2printf@flag& (0+255),f,b
 18887  010C3C                     i2l1096:
 18888                           
 18889                           ; BSR set to: 0
 18890                           ;doprnt.c: 834: }
 18891                           ;doprnt.c: 835: exp = 0;
 18892                           
 18893                           ; BSR set to: 0
 18894  010C3C  0E00               	movlw	0
 18895  010C3E  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 18896  010C40  0E00               	movlw	0
 18897  010C42  6F7A               	movwf	i2printf@exp& (0+255),b
 18898                           
 18899                           ; BSR set to: 0
 18900                           ;doprnt.c: 836: if( fval!=0) {
 18901  010C44  5180               	movf	i2printf@fval& (0+255),w,b
 18902  010C46  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 18903  010C48  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 18904  010C4A  B4D8               	btfsc	status,2,c
 18905  010C4C  D086               	goto	i2l1101
 18906                           
 18907                           ; BSR set to: 0
 18908                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
 18909  010C4E  0E82               	movlw	130
 18910  010C50  6F68               	movwf	??i2_printf& (0+255),b
 18911  010C52  0EFF               	movlw	255
 18912  010C54  6F69               	movwf	(??i2_printf+1)& (0+255),b
 18913  010C56  C080  F06A         	movff	i2printf@fval,??i2_printf+2
 18914  010C5A  C081  F06B         	movff	i2printf@fval+1,??i2_printf+3
 18915  010C5E  C082  F06C         	movff	i2printf@fval+2,??i2_printf+4
 18916  010C62  C083  F06D         	movff	i2printf@fval+3,??i2_printf+5
 18917  010C66  0E10               	movlw	16
 18918  010C68  D005               	goto	i2u1552_40
 18919  010C6A                     i2u1552_45:
 18920  010C6A  90D8               	bcf	status,0,c
 18921  010C6C  336D               	rrcf	(??i2_printf+5)& (0+255),f,b
 18922  010C6E  336C               	rrcf	(??i2_printf+4)& (0+255),f,b
 18923  010C70  336B               	rrcf	(??i2_printf+3)& (0+255),f,b
 18924  010C72  336A               	rrcf	(??i2_printf+2)& (0+255),f,b
 18925  010C74                     i2u1552_40:
 18926  010C74  2EE8               	decfsz	wreg,f,c
 18927  010C76  D7F9               	goto	i2u1552_45
 18928  010C78  516A               	movf	(??i2_printf+2)& (0+255),w,b
 18929  010C7A  2568               	addwf	??i2_printf& (0+255),w,b
 18930  010C7C  6F7A               	movwf	i2printf@exp& (0+255),b
 18931  010C7E  0E00               	movlw	0
 18932  010C80  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 18933  010C82  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 18934                           
 18935                           ; BSR set to: 0
 18936                           ;doprnt.c: 838: exp--;
 18937  010C84  077A               	decf	i2printf@exp& (0+255),f,b
 18938  010C86  A0D8               	btfss	status,0,c
 18939  010C88  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 18940                           
 18941                           ; BSR set to: 0
 18942                           ;doprnt.c: 839: exp *= 3;
 18943  010C8A  C07A  F00F         	movff	i2printf@exp,i2___wmul@multiplier
 18944  010C8E  C07B  F010         	movff	i2printf@exp+1,i2___wmul@multiplier+1
 18945  010C92  0E00               	movlw	0
 18946  010C94  6E12               	movwf	i2___wmul@multiplicand+1,c
 18947  010C96  0E03               	movlw	3
 18948  010C98  6E11               	movwf	i2___wmul@multiplicand,c
 18949  010C9A  EC36  F0B0         	call	i2___wmul	;wreg free
 18950  010C9E  C00F  F07A         	movff	?i2___wmul,i2printf@exp
 18951  010CA2  C010  F07B         	movff	?i2___wmul+1,i2printf@exp+1
 18952                           
 18953                           ;doprnt.c: 840: exp /= 10;
 18954  010CA6  C07A  F007         	movff	i2printf@exp,i2___awdiv@dividend
 18955  010CAA  C07B  F008         	movff	i2printf@exp+1,i2___awdiv@dividend+1
 18956  010CAE  0E00               	movlw	0
 18957  010CB0  6E0A               	movwf	i2___awdiv@divisor+1,c
 18958  010CB2  0E0A               	movlw	10
 18959  010CB4  6E09               	movwf	i2___awdiv@divisor,c
 18960  010CB6  ECCB  F0A9         	call	i2___awdiv	;wreg free
 18961  010CBA  C007  F07A         	movff	?i2___awdiv,i2printf@exp
 18962  010CBE  C008  F07B         	movff	?i2___awdiv+1,i2printf@exp+1
 18963                           
 18964                           ;doprnt.c: 841: if(exp < 0)
 18965  010CC2  0100               	movlb	0	; () banked
 18966  010CC4  AF7B               	btfss	(i2printf@exp+1)& (0+255),7,b
 18967  010CC6  D003               	goto	i2l1098
 18968                           
 18969                           ; BSR set to: 0
 18970                           ;doprnt.c: 842: exp--;
 18971  010CC8  077A               	decf	i2printf@exp& (0+255),f,b
 18972  010CCA  A0D8               	btfss	status,0,c
 18973  010CCC  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 18974  010CCE                     i2l1098:
 18975                           
 18976                           ; BSR set to: 0
 18977                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
 18978                           
 18979                           ; BSR set to: 0
 18980  010CCE  517A               	movf	i2printf@exp& (0+255),w,b
 18981  010CD0  0800               	sublw	0
 18982  010CD2  EC62  F090         	call	i2_scale
 18983  010CD6  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 18984  010CDA  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 18985  010CDE  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 18986                           
 18987                           ;doprnt.c: 847: tmpval.integ *= fval;
 18988  010CE2  C07C  F027         	movff	i2printf@tmpval,i2___ftmul@f1
 18989  010CE6  C07D  F028         	movff	i2printf@tmpval+1,i2___ftmul@f1+1
 18990  010CEA  C07E  F029         	movff	i2printf@tmpval+2,i2___ftmul@f1+2
 18991  010CEE  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 18992  010CF2  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 18993  010CF6  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 18994  010CFA  ECC3  F0A3         	call	i2___ftmul	;wreg free
 18995  010CFE  C027  F07C         	movff	?i2___ftmul,i2printf@tmpval
 18996  010D02  C028  F07D         	movff	?i2___ftmul+1,i2printf@tmpval+1
 18997  010D06  C029  F07E         	movff	?i2___ftmul+2,i2printf@tmpval+2
 18998                           
 18999                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
 19000  010D0A  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19001  010D0E  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19002  010D12  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19003  010D16  0E00               	movlw	0
 19004  010D18  6E2D               	movwf	i2___ftge@ff2,c
 19005  010D1A  0E80               	movlw	128
 19006  010D1C  6E2E               	movwf	i2___ftge@ff2+1,c
 19007  010D1E  0E3F               	movlw	63
 19008  010D20  6E2F               	movwf	i2___ftge@ff2+2,c
 19009  010D22  ECB8  F0A8         	call	i2___ftge	;wreg free
 19010  010D26  B0D8               	btfsc	status,0,c
 19011  010D28  D005               	goto	i2l1099
 19012                           
 19013                           ;doprnt.c: 849: exp--;
 19014  010D2A  0100               	movlb	0	; () banked
 19015  010D2C  077A               	decf	i2printf@exp& (0+255),f,b
 19016  010D2E  A0D8               	btfss	status,0,c
 19017  010D30  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19018  010D32  D013               	goto	i2l1101
 19019  010D34                     i2l1099:
 19020                           
 19021                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
 19022                           
 19023                           ; BSR set to: 0
 19024  010D34  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19025  010D38  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19026  010D3C  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19027  010D40  0E00               	movlw	0
 19028  010D42  6E2D               	movwf	i2___ftge@ff2,c
 19029  010D44  0E20               	movlw	32
 19030  010D46  6E2E               	movwf	i2___ftge@ff2+1,c
 19031  010D48  0E41               	movlw	65
 19032  010D4A  6E2F               	movwf	i2___ftge@ff2+2,c
 19033  010D4C  ECB8  F0A8         	call	i2___ftge	;wreg free
 19034  010D50  A0D8               	btfss	status,0,c
 19035  010D52  D003               	goto	i2l1101
 19036                           
 19037                           ;doprnt.c: 851: exp++;
 19038  010D54  0100               	movlb	0	; () banked
 19039  010D56  4B7A               	infsnz	i2printf@exp& (0+255),f,b
 19040  010D58  2B7B               	incf	(i2printf@exp+1)& (0+255),f,b
 19041  010D5A                     i2l1101:
 19042                           
 19043                           ;doprnt.c: 852: }
 19044                           ;doprnt.c: 1112: if(prec <= 12)
 19045                           
 19046                           ; BSR set to: 0
 19047                           
 19048                           ; BSR set to: 0
 19049                           
 19050                           ; BSR set to: 0
 19051  010D5A  0100               	movlb	0	; () banked
 19052  010D5C  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 19053  010D5E  D006               	goto	i2u1556_40
 19054  010D60  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19055  010D62  E11B               	bnz	i2l12313
 19056  010D64  0E0D               	movlw	13
 19057  010D66  5D87               	subwf	i2printf@prec& (0+255),w,b
 19058  010D68  B0D8               	btfsc	status,0,c
 19059  010D6A  D017               	goto	i2l1102
 19060  010D6C                     i2u1556_40:
 19061                           
 19062                           ; BSR set to: 0
 19063                           ;doprnt.c: 1113: fval += fround(prec);
 19064  010D6C  C080  F040         	movff	i2printf@fval,i2___ftadd@f1
 19065  010D70  C081  F041         	movff	i2printf@fval+1,i2___ftadd@f1+1
 19066  010D74  C082  F042         	movff	i2printf@fval+2,i2___ftadd@f1+2
 19067  010D78  5187               	movf	i2printf@prec& (0+255),w,b
 19068  010D7A  EC8F  F097         	call	i2_fround
 19069  010D7E  C036  F043         	movff	?i2_fround,i2___ftadd@f2
 19070  010D82  C037  F044         	movff	?i2_fround+1,i2___ftadd@f2+1
 19071  010D86  C038  F045         	movff	?i2_fround+2,i2___ftadd@f2+2
 19072  010D8A  ECC9  F09D         	call	i2___ftadd	;wreg free
 19073  010D8E  C040  F080         	movff	?i2___ftadd,i2printf@fval
 19074  010D92  C041  F081         	movff	?i2___ftadd+1,i2printf@fval+1
 19075  010D96  C042  F082         	movff	?i2___ftadd+2,i2printf@fval+2
 19076  010D9A                     i2l1102:
 19077  010D9A                     i2l12313:
 19078                           
 19079                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
 19080  010D9A  0100               	movlb	0	; () banked
 19081  010D9C  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19082  010D9E  D006               	goto	i2u1557_40
 19083  010DA0  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19084  010DA2  E120               	bnz	i2l12321
 19085  010DA4  0E0A               	movlw	10
 19086  010DA6  5D7A               	subwf	i2printf@exp& (0+255),w,b
 19087  010DA8  B0D8               	btfsc	status,0,c
 19088  010DAA  D01C               	goto	i2u1560_40
 19089  010DAC                     i2u1557_40:
 19090                           
 19091                           ; BSR set to: 0
 19092  010DAC  5180               	movf	i2printf@fval& (0+255),w,b
 19093  010DAE  1181               	iorwf	(i2printf@fval+1)& (0+255),w,b
 19094  010DB0  1182               	iorwf	(i2printf@fval+2)& (0+255),w,b
 19095  010DB2  B4D8               	btfsc	status,2,c
 19096  010DB4  D056               	goto	i2l1103
 19097                           
 19098                           ; BSR set to: 0
 19099  010DB6  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 19100  010DBA  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 19101  010DBE  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 19102  010DC2  EC49  F0A3         	call	i2___fttol	;wreg free
 19103  010DC6  503D               	movf	?i2___fttol,w,c
 19104  010DC8  103E               	iorwf	?i2___fttol+1,w,c
 19105  010DCA  103F               	iorwf	?i2___fttol+2,w,c
 19106  010DCC  1040               	iorwf	?i2___fttol+3,w,c
 19107  010DCE  A4D8               	btfss	status,2,c
 19108  010DD0  D048               	goto	i2l1103
 19109  010DD2  0100               	movlb	0	; () banked
 19110  010DD4  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19111  010DD6  D045               	goto	i2l1103
 19112  010DD8  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19113  010DDA  E104               	bnz	i2l12321
 19114  010DDC  0E02               	movlw	2
 19115  010DDE  5D7A               	subwf	i2printf@exp& (0+255),w,b
 19116  010DE0  A0D8               	btfss	status,0,c
 19117  010DE2  D03F               	goto	i2l1103
 19118  010DE4                     i2u1560_40:
 19119  010DE4                     i2l12321:
 19120                           
 19121                           ; BSR set to: 0
 19122                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
 19123  010DE4  C07C  F02A         	movff	i2printf@tmpval,i2___ftge@ff1
 19124  010DE8  C07D  F02B         	movff	i2printf@tmpval+1,i2___ftge@ff1+1
 19125  010DEC  C07E  F02C         	movff	i2printf@tmpval+2,i2___ftge@ff1+2
 19126  010DF0  0E70               	movlw	112
 19127  010DF2  6E2D               	movwf	i2___ftge@ff2,c
 19128  010DF4  0E89               	movlw	137
 19129  010DF6  6E2E               	movwf	i2___ftge@ff2+1,c
 19130  010DF8  0E40               	movlw	64
 19131  010DFA  6E2F               	movwf	i2___ftge@ff2+2,c
 19132  010DFC  ECB8  F0A8         	call	i2___ftge	;wreg free
 19133  010E00  B0D8               	btfsc	status,0,c
 19134  010E02  D003               	goto	i2l1106
 19135                           
 19136                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
 19137  010E04  0100               	movlb	0	; () banked
 19138  010E06  0EF7               	movlw	247
 19139  010E08  D002               	goto	L2
 19140  010E0A                     i2l1106:
 19141                           
 19142                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
 19143                           
 19144                           ; BSR set to: 0
 19145  010E0A  0100               	movlb	0	; () banked
 19146  010E0C  0EF8               	movlw	248
 19147  010E0E                     L2:
 19148  010E0E  277A               	addwf	i2printf@exp& (0+255),f,b
 19149  010E10  0EFF               	movlw	255
 19150  010E12  237B               	addwfc	(i2printf@exp+1)& (0+255),f,b
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;doprnt.c: 1124: }
 19154                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
 19155                           
 19156                           ; BSR set to: 0
 19157  010E14  517A               	movf	i2printf@exp& (0+255),w,b
 19158  010E16  EC62  F090         	call	i2_scale
 19159  010E1A  C036  F07C         	movff	?i2_scale,i2printf@tmpval
 19160  010E1E  C037  F07D         	movff	?i2_scale+1,i2printf@tmpval+1
 19161  010E22  C038  F07E         	movff	?i2_scale+2,i2printf@tmpval+2
 19162                           
 19163                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
 19164  010E26  C080  F001         	movff	i2printf@fval,i2__tdiv_to_l_@f1
 19165  010E2A  C081  F002         	movff	i2printf@fval+1,i2__tdiv_to_l_@f1+1
 19166  010E2E  C082  F003         	movff	i2printf@fval+2,i2__tdiv_to_l_@f1+2
 19167  010E32  C07C  F004         	movff	i2printf@tmpval,i2__tdiv_to_l_@f2
 19168  010E36  C07D  F005         	movff	i2printf@tmpval+1,i2__tdiv_to_l_@f2+1
 19169  010E3A  C07E  F006         	movff	i2printf@tmpval+2,i2__tdiv_to_l_@f2+2
 19170  010E3E  EC02  F0A0         	call	i2__tdiv_to_l_	;wreg free
 19171  010E42  C001  F083         	movff	?i2__tdiv_to_l_,i2printf@val
 19172  010E46  C002  F084         	movff	?i2__tdiv_to_l_+1,i2printf@val+1
 19173  010E4A  C003  F085         	movff	?i2__tdiv_to_l_+2,i2printf@val+2
 19174  010E4E  C004  F086         	movff	?i2__tdiv_to_l_+3,i2printf@val+3
 19175                           
 19176                           ;doprnt.c: 1129: fval = 0.0;
 19177  010E52  0E00               	movlw	0
 19178  010E54  0100               	movlb	0	; () banked
 19179  010E56  6F80               	movwf	i2printf@fval& (0+255),b
 19180  010E58  0E00               	movlw	0
 19181  010E5A  6F81               	movwf	(i2printf@fval+1)& (0+255),b
 19182  010E5C  0E00               	movlw	0
 19183  010E5E  6F82               	movwf	(i2printf@fval+2)& (0+255),b
 19184                           
 19185                           ;doprnt.c: 1130: } else {
 19186  010E60  D033               	goto	i2l1112
 19187  010E62                     i2l1103:
 19188                           
 19189                           ;doprnt.c: 1131: val = (unsigned long)fval;
 19190                           
 19191                           ; BSR set to: 0
 19192  010E62  C080  F03D         	movff	i2printf@fval,i2___fttol@f1
 19193  010E66  C081  F03E         	movff	i2printf@fval+1,i2___fttol@f1+1
 19194  010E6A  C082  F03F         	movff	i2printf@fval+2,i2___fttol@f1+2
 19195  010E6E  EC49  F0A3         	call	i2___fttol	;wreg free
 19196  010E72  C03D  F083         	movff	?i2___fttol,i2printf@val
 19197  010E76  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 19198  010E7A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 19199  010E7E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 19200                           
 19201                           ;doprnt.c: 1132: fval -= (double)val;
 19202  010E82  C080  F060         	movff	i2printf@fval,i2___ftsub@f1
 19203  010E86  C081  F061         	movff	i2printf@fval+1,i2___ftsub@f1+1
 19204  010E8A  C082  F062         	movff	i2printf@fval+2,i2___ftsub@f1+2
 19205  010E8E  C083  F009         	movff	i2printf@val,i2___lltoft@c
 19206  010E92  C084  F00A         	movff	i2printf@val+1,i2___lltoft@c+1
 19207  010E96  C085  F00B         	movff	i2printf@val+2,i2___lltoft@c+2
 19208  010E9A  C086  F00C         	movff	i2printf@val+3,i2___lltoft@c+3
 19209  010E9E  ECCF  F0AC         	call	i2___lltoft	;wreg free
 19210  010EA2  C009  F063         	movff	?i2___lltoft,i2___ftsub@f2
 19211  010EA6  C00A  F064         	movff	?i2___lltoft+1,i2___ftsub@f2+1
 19212  010EAA  C00B  F065         	movff	?i2___lltoft+2,i2___ftsub@f2+2
 19213  010EAE  ECCE  F0AE         	call	i2___ftsub	;wreg free
 19214  010EB2  C060  F080         	movff	?i2___ftsub,i2printf@fval
 19215  010EB6  C061  F081         	movff	?i2___ftsub+1,i2printf@fval+1
 19216  010EBA  C062  F082         	movff	?i2___ftsub+2,i2printf@fval+2
 19217                           
 19218                           ;doprnt.c: 1133: exp = 0;
 19219  010EBE  0E00               	movlw	0
 19220  010EC0  0100               	movlb	0	; () banked
 19221  010EC2  6F7B               	movwf	(i2printf@exp+1)& (0+255),b
 19222  010EC4  0E00               	movlw	0
 19223  010EC6  6F7A               	movwf	i2printf@exp& (0+255),b
 19224  010EC8                     i2l1112:
 19225                           
 19226                           ; BSR set to: 0
 19227                           ;doprnt.c: 1134: }
 19228                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 19229                           
 19230                           ; BSR set to: 0
 19231  010EC8  0E01               	movlw	1
 19232  010ECA  6F89               	movwf	i2printf@c& (0+255),b
 19233  010ECC                     i2l12341:
 19234                           
 19235                           ; BSR set to: 0
 19236  010ECC  0E0A               	movlw	10
 19237  010ECE  1989               	xorwf	i2printf@c& (0+255),w,b
 19238  010ED0  B4D8               	btfsc	status,2,c
 19239  010ED2  D01B               	goto	i2u1564_40
 19240                           
 19241                           ; BSR set to: 0
 19242                           ;doprnt.c: 1137: if(val < dpowers[c])
 19243                           
 19244                           ; BSR set to: 0
 19245                           
 19246                           ; BSR set to: 0
 19247  010ED4  5189               	movf	i2printf@c& (0+255),w,b
 19248  010ED6  0D04               	mullw	4
 19249  010ED8  0EE9               	movlw	low _dpowers
 19250  010EDA  24F3               	addwf	prodl,w,c
 19251  010EDC  6EF6               	movwf	tblptrl,c
 19252  010EDE  0EF3               	movlw	high _dpowers
 19253  010EE0  20F4               	addwfc	prodh,w,c
 19254  010EE2  6EF7               	movwf	tblptrh,c
 19255  010EE4                     	if	1	;There are 3 active tblptr bytes
 19256  010EE4  6AF8               	clrf	tblptru,c
 19257  010EE6  0E00               	movlw	low (__mediumconst shr (0+16))
 19258  010EE8  22F8               	addwfc	tblptru,f,c
 19259  010EEA                     	endif
 19260  010EEA  0009               	tblrd		*+
 19261  010EEC  50F5               	movf	tablat,w,c
 19262  010EEE  5D83               	subwf	i2printf@val& (0+255),w,b
 19263  010EF0  0009               	tblrd		*+
 19264  010EF2  50F5               	movf	tablat,w,c
 19265  010EF4  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 19266  010EF6  0009               	tblrd		*+
 19267  010EF8  50F5               	movf	tablat,w,c
 19268  010EFA  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 19269  010EFC  0009               	tblrd		*+
 19270  010EFE  50F5               	movf	tablat,w,c
 19271  010F00  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 19272  010F02  A0D8               	btfss	status,0,c
 19273  010F04  D002               	goto	i2u1564_40
 19274                           
 19275                           ; BSR set to: 0
 19276                           
 19277                           ; BSR set to: 0
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;doprnt.c: 1138: break;
 19281  010F06  2B89               	incf	i2printf@c& (0+255),f,b
 19282  010F08  D7E1               	goto	i2l12341
 19283  010F0A                     i2u1564_40:
 19284                           
 19285                           ; BSR set to: 0
 19286                           ;doprnt.c: 1175: {
 19287                           ;doprnt.c: 1188: if(flag & 0x03)
 19288                           
 19289                           ; BSR set to: 0
 19290  010F0A  0E03               	movlw	3
 19291  010F0C  1578               	andwf	i2printf@flag& (0+255),w,b
 19292  010F0E  6F68               	movwf	??i2_printf& (0+255),b
 19293  010F10  0E00               	movlw	0
 19294  010F12  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19295  010F14  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19296  010F16  5168               	movf	??i2_printf& (0+255),w,b
 19297  010F18  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19298  010F1A  B4D8               	btfsc	status,2,c
 19299  010F1C  D04D               	goto	i2l1117
 19300                           
 19301                           ; BSR set to: 0
 19302                           ;doprnt.c: 1190: (putch('-') );
 19303  010F1E  0E2D               	movlw	45
 19304  010F20  EC29  F0B1         	call	i2_putch
 19305                           
 19306                           ;doprnt.c: 1195: }
 19307                           ;doprnt.c: 1196: while(c--) {
 19308  010F24  D049               	goto	i2l1117
 19309  010F26                     
 19310                           ;doprnt.c: 1200: {
 19311                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
 19312  010F26  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 19313  010F2A  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19314  010F2E  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19315  010F32  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19316  010F36  0100               	movlb	0	; () banked
 19317  010F38  5189               	movf	i2printf@c& (0+255),w,b
 19318  010F3A  0D04               	mullw	4
 19319  010F3C  0EE9               	movlw	low _dpowers
 19320  010F3E  24F3               	addwf	prodl,w,c
 19321  010F40  6EF6               	movwf	tblptrl,c
 19322  010F42  0EF3               	movlw	high _dpowers
 19323  010F44  20F4               	addwfc	prodh,w,c
 19324  010F46  6EF7               	movwf	tblptrh,c
 19325  010F48                     	if	1	;There are 3 active tblptr bytes
 19326  010F48  6AF8               	clrf	tblptru,c
 19327  010F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 19328  010F4C  22F8               	addwfc	tblptru,f,c
 19329  010F4E                     	endif
 19330  010F4E  0009               	tblrd		*+
 19331  010F50  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19332  010F54  0009               	tblrd		*+
 19333  010F56  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19334  010F5A  0009               	tblrd		*+
 19335  010F5C  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19336  010F60  000A               	tblrd		*-
 19337  010F62  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19338  010F66  EC0D  F0AA         	call	i2___lldiv	;wreg free
 19339  010F6A  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 19340  010F6E  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19341  010F72  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19342  010F76  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19343                           
 19344                           ;doprnt.c: 1202: tmpval.vd %= 10;
 19345  010F7A  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19346  010F7E  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19347  010F82  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19348  010F86  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19349  010F8A  0E0A               	movlw	10
 19350  010F8C  6E12               	movwf	i2___llmod@divisor,c
 19351  010F8E  0E00               	movlw	0
 19352  010F90  6E13               	movwf	i2___llmod@divisor+1,c
 19353  010F92  0E00               	movlw	0
 19354  010F94  6E14               	movwf	i2___llmod@divisor+2,c
 19355  010F96  0E00               	movlw	0
 19356  010F98  6E15               	movwf	i2___llmod@divisor+3,c
 19357  010F9A  EC0B  F0AC         	call	i2___llmod	;wreg free
 19358  010F9E  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 19359  010FA2  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 19360  010FA6  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 19361  010FAA  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 19362                           
 19363                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
 19364  010FAE  0100               	movlb	0	; () banked
 19365  010FB0  517C               	movf	i2printf@tmpval& (0+255),w,b
 19366  010FB2  0F30               	addlw	48
 19367  010FB4  EC29  F0B1         	call	i2_putch
 19368  010FB8                     i2l1117:
 19369  010FB8  0100               	movlb	0	; () banked
 19370  010FBA  0789               	decf	i2printf@c& (0+255),f,b
 19371  010FBC  2989               	incf	i2printf@c& (0+255),w,b
 19372  010FBE  B4D8               	btfsc	status,2,c
 19373  010FC0  D008               	goto	i2l1120
 19374  010FC2  D7B1               	goto	i2l1118
 19375  010FC4                     i2l12365:
 19376                           
 19377                           ; BSR set to: 0
 19378                           ;doprnt.c: 1208: (putch('0') );
 19379  010FC4  0E30               	movlw	48
 19380  010FC6  EC29  F0B1         	call	i2_putch
 19381                           
 19382                           ;doprnt.c: 1209: exp--;
 19383  010FCA  0100               	movlb	0	; () banked
 19384  010FCC  077A               	decf	i2printf@exp& (0+255),f,b
 19385  010FCE  A0D8               	btfss	status,0,c
 19386  010FD0  077B               	decf	(i2printf@exp+1)& (0+255),f,b
 19387  010FD2                     i2l1120:
 19388                           
 19389                           ; BSR set to: 0
 19390                           
 19391                           ; BSR set to: 0
 19392  010FD2  BF7B               	btfsc	(i2printf@exp+1)& (0+255),7,b
 19393  010FD4  D005               	goto	i2u1567_40
 19394  010FD6  517B               	movf	(i2printf@exp+1)& (0+255),w,b
 19395  010FD8  E1F5               	bnz	i2l12365
 19396  010FDA  057A               	decf	i2printf@exp& (0+255),w,b
 19397  010FDC  B0D8               	btfsc	status,0,c
 19398  010FDE  D7F2               	goto	i2l1121
 19399  010FE0                     i2u1567_40:
 19400                           
 19401                           ; BSR set to: 0
 19402                           ;doprnt.c: 1210: }
 19403                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 19404                           
 19405                           ; BSR set to: 0
 19406  010FE0  BF88               	btfsc	(i2printf@prec+1)& (0+255),7,b
 19407  010FE2  D009               	goto	i2l1123
 19408  010FE4  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19409  010FE6  E104               	bnz	i2u1568_40
 19410  010FE8  0E09               	movlw	9
 19411  010FEA  5D87               	subwf	i2printf@prec& (0+255),w,b
 19412  010FEC  A0D8               	btfss	status,0,c
 19413  010FEE  D003               	goto	i2l1123
 19414  010FF0                     i2u1568_40:
 19415                           
 19416                           ; BSR set to: 0
 19417                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
 19418  010FF0  0E08               	movlw	8
 19419  010FF2  6F89               	movwf	i2printf@c& (0+255),b
 19420  010FF4  D002               	goto	i2l1124
 19421  010FF6                     i2l1123:
 19422                           
 19423                           ; BSR set to: 0
 19424                           ;doprnt.c: 1213: else
 19425                           ;doprnt.c: 1214: c = prec;
 19426  010FF6  C087  F089         	movff	i2printf@prec,i2printf@c
 19427  010FFA                     i2l1124:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;doprnt.c: 1215: prec -= c;
 19431                           
 19432                           ; BSR set to: 0
 19433  010FFA  5189               	movf	i2printf@c& (0+255),w,b
 19434  010FFC  5F87               	subwf	i2printf@prec& (0+255),f,b
 19435  010FFE  0E00               	movlw	0
 19436  011000  BF89               	btfsc	i2printf@c& (0+255),7,b
 19437  011002  0EFF               	movlw	255
 19438  011004  5B88               	subwfb	(i2printf@prec+1)& (0+255),f,b
 19439                           
 19440                           ; BSR set to: 0
 19441                           ;doprnt.c: 1219: if(c)
 19442  011006  5189               	movf	i2printf@c& (0+255),w,b
 19443  011008  B4D8               	btfsc	status,2,c
 19444  01100A  D003               	goto	i2l1125
 19445                           
 19446                           ; BSR set to: 0
 19447                           ;doprnt.c: 1221: (putch('.') );
 19448  01100C  0E2E               	movlw	46
 19449  01100E  EC29  F0B1         	call	i2_putch
 19450  011012                     i2l1125:
 19451                           
 19452                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 19453  011012  0100               	movlb	0	; () banked
 19454  011014  5189               	movf	i2printf@c& (0+255),w,b
 19455  011016  EC62  F090         	call	i2_scale
 19456  01101A  C036  F06E         	movff	?i2_scale,i2_printf$3329
 19457  01101E  C037  F06F         	movff	?i2_scale+1,i2_printf$3329+1
 19458  011022  C038  F070         	movff	?i2_scale+2,i2_printf$3329+2
 19459                           
 19460                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
 19461  011026  C080  F02A         	movff	i2printf@fval,i2___ftmul@f2
 19462  01102A  C081  F02B         	movff	i2printf@fval+1,i2___ftmul@f2+1
 19463  01102E  C082  F02C         	movff	i2printf@fval+2,i2___ftmul@f2+2
 19464  011032  C06E  F027         	movff	i2_printf$3329,i2___ftmul@f1
 19465  011036  C06F  F028         	movff	i2_printf$3329+1,i2___ftmul@f1+1
 19466  01103A  C070  F029         	movff	i2_printf$3329+2,i2___ftmul@f1+2
 19467  01103E  ECC3  F0A3         	call	i2___ftmul	;wreg free
 19468  011042  C027  F03D         	movff	?i2___ftmul,i2___fttol@f1
 19469  011046  C028  F03E         	movff	?i2___ftmul+1,i2___fttol@f1+1
 19470  01104A  C029  F03F         	movff	?i2___ftmul+2,i2___fttol@f1+2
 19471  01104E  EC49  F0A3         	call	i2___fttol	;wreg free
 19472  011052  C03D  F083         	movff	?i2___fttol,i2printf@val
 19473  011056  C03E  F084         	movff	?i2___fttol+1,i2printf@val+1
 19474  01105A  C03F  F085         	movff	?i2___fttol+2,i2printf@val+2
 19475  01105E  C040  F086         	movff	?i2___fttol+3,i2printf@val+3
 19476                           
 19477                           ;doprnt.c: 1228: while(c--) {
 19478  011062  D073               	goto	i2l1126
 19479  011064                     
 19480                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
 19481  011064  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 19482  011068  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19483  01106C  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19484  011070  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19485  011074  0100               	movlb	0	; () banked
 19486  011076  5189               	movf	i2printf@c& (0+255),w,b
 19487  011078  0D04               	mullw	4
 19488  01107A  0EE9               	movlw	low _dpowers
 19489  01107C  24F3               	addwf	prodl,w,c
 19490  01107E  6EF6               	movwf	tblptrl,c
 19491  011080  0EF3               	movlw	high _dpowers
 19492  011082  20F4               	addwfc	prodh,w,c
 19493  011084  6EF7               	movwf	tblptrh,c
 19494  011086                     	if	1	;There are 3 active tblptr bytes
 19495  011086  6AF8               	clrf	tblptru,c
 19496  011088  0E00               	movlw	low (__mediumconst shr (0+16))
 19497  01108A  22F8               	addwfc	tblptru,f,c
 19498  01108C                     	endif
 19499  01108C  0009               	tblrd		*+
 19500  01108E  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19501  011092  0009               	tblrd		*+
 19502  011094  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19503  011098  0009               	tblrd		*+
 19504  01109A  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19505  01109E  000A               	tblrd		*-
 19506  0110A0  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19507  0110A4  EC0D  F0AA         	call	i2___lldiv	;wreg free
 19508  0110A8  C001  F07C         	movff	?i2___lldiv,i2printf@tmpval
 19509  0110AC  C002  F07D         	movff	?i2___lldiv+1,i2printf@tmpval+1
 19510  0110B0  C003  F07E         	movff	?i2___lldiv+2,i2printf@tmpval+2
 19511  0110B4  C004  F07F         	movff	?i2___lldiv+3,i2printf@tmpval+3
 19512                           
 19513                           ;doprnt.c: 1230: tmpval.vd %= 10;
 19514  0110B8  C07C  F00E         	movff	i2printf@tmpval,i2___llmod@dividend
 19515  0110BC  C07D  F00F         	movff	i2printf@tmpval+1,i2___llmod@dividend+1
 19516  0110C0  C07E  F010         	movff	i2printf@tmpval+2,i2___llmod@dividend+2
 19517  0110C4  C07F  F011         	movff	i2printf@tmpval+3,i2___llmod@dividend+3
 19518  0110C8  0E0A               	movlw	10
 19519  0110CA  6E12               	movwf	i2___llmod@divisor,c
 19520  0110CC  0E00               	movlw	0
 19521  0110CE  6E13               	movwf	i2___llmod@divisor+1,c
 19522  0110D0  0E00               	movlw	0
 19523  0110D2  6E14               	movwf	i2___llmod@divisor+2,c
 19524  0110D4  0E00               	movlw	0
 19525  0110D6  6E15               	movwf	i2___llmod@divisor+3,c
 19526  0110D8  EC0B  F0AC         	call	i2___llmod	;wreg free
 19527  0110DC  C00E  F07C         	movff	?i2___llmod,i2printf@tmpval
 19528  0110E0  C00F  F07D         	movff	?i2___llmod+1,i2printf@tmpval+1
 19529  0110E4  C010  F07E         	movff	?i2___llmod+2,i2printf@tmpval+2
 19530  0110E8  C011  F07F         	movff	?i2___llmod+3,i2printf@tmpval+3
 19531                           
 19532                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
 19533  0110EC  0100               	movlb	0	; () banked
 19534  0110EE  517C               	movf	i2printf@tmpval& (0+255),w,b
 19535  0110F0  0F30               	addlw	48
 19536  0110F2  EC29  F0B1         	call	i2_putch
 19537                           
 19538                           ;doprnt.c: 1232: val %= dpowers[c];
 19539  0110F6  C083  F00E         	movff	i2printf@val,i2___llmod@dividend
 19540  0110FA  C084  F00F         	movff	i2printf@val+1,i2___llmod@dividend+1
 19541  0110FE  C085  F010         	movff	i2printf@val+2,i2___llmod@dividend+2
 19542  011102  C086  F011         	movff	i2printf@val+3,i2___llmod@dividend+3
 19543  011106  0100               	movlb	0	; () banked
 19544  011108  5189               	movf	i2printf@c& (0+255),w,b
 19545  01110A  0D04               	mullw	4
 19546  01110C  0EE9               	movlw	low _dpowers
 19547  01110E  24F3               	addwf	prodl,w,c
 19548  011110  6EF6               	movwf	tblptrl,c
 19549  011112  0EF3               	movlw	high _dpowers
 19550  011114  20F4               	addwfc	prodh,w,c
 19551  011116  6EF7               	movwf	tblptrh,c
 19552  011118                     	if	1	;There are 3 active tblptr bytes
 19553  011118  6AF8               	clrf	tblptru,c
 19554  01111A  0E00               	movlw	low (__mediumconst shr (0+16))
 19555  01111C  22F8               	addwfc	tblptru,f,c
 19556  01111E                     	endif
 19557  01111E  0009               	tblrd		*+
 19558  011120  CFF5 F012          	movff	tablat,i2___llmod@divisor
 19559  011124  0009               	tblrd		*+
 19560  011126  CFF5 F013          	movff	tablat,i2___llmod@divisor+1
 19561  01112A  0009               	tblrd		*+
 19562  01112C  CFF5 F014          	movff	tablat,i2___llmod@divisor+2
 19563  011130  000A               	tblrd		*-
 19564  011132  CFF5 F015          	movff	tablat,i2___llmod@divisor+3
 19565  011136  EC0B  F0AC         	call	i2___llmod	;wreg free
 19566  01113A  C00E  F083         	movff	?i2___llmod,i2printf@val
 19567  01113E  C00F  F084         	movff	?i2___llmod+1,i2printf@val+1
 19568  011142  C010  F085         	movff	?i2___llmod+2,i2printf@val+2
 19569  011146  C011  F086         	movff	?i2___llmod+3,i2printf@val+3
 19570  01114A                     i2l1126:
 19571  01114A  0100               	movlb	0	; () banked
 19572  01114C  0789               	decf	i2printf@c& (0+255),f,b
 19573  01114E  2989               	incf	i2printf@c& (0+255),w,b
 19574  011150  B4D8               	btfsc	status,2,c
 19575  011152  D008               	goto	i2l1129
 19576  011154  D787               	goto	i2l1127
 19577  011156                     
 19578                           ; BSR set to: 0
 19579                           ;doprnt.c: 1236: (putch('0') );
 19580                           
 19581                           ; BSR set to: 0
 19582  011156  0E30               	movlw	48
 19583  011158  EC29  F0B1         	call	i2_putch
 19584                           
 19585                           ;doprnt.c: 1237: prec--;
 19586  01115C  0100               	movlb	0	; () banked
 19587  01115E  0787               	decf	i2printf@prec& (0+255),f,b
 19588  011160  A0D8               	btfss	status,0,c
 19589  011162  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 19590  011164                     i2l1129:
 19591                           
 19592                           ; BSR set to: 0
 19593                           
 19594                           ; BSR set to: 0
 19595  011164  5187               	movf	i2printf@prec& (0+255),w,b
 19596  011166  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19597  011168  B4D8               	btfsc	status,2,c
 19598  01116A  D156               	goto	i2u1585_40
 19599  01116C  D7F4               	goto	i2l1130
 19600  01116E                     i2l1094:
 19601                           
 19602                           ; BSR set to: 0
 19603                           ;doprnt.c: 1246: }
 19604                           ;doprnt.c: 1251: if((flag & (0xC0)) == 0x00)
 19605                           
 19606                           ; BSR set to: 0
 19607  01116E  0EC0               	movlw	192
 19608  011170  1578               	andwf	i2printf@flag& (0+255),w,b
 19609  011172  6F68               	movwf	??i2_printf& (0+255),b
 19610  011174  0E00               	movlw	0
 19611  011176  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19612  011178  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19613  01117A  5168               	movf	??i2_printf& (0+255),w,b
 19614  01117C  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19615  01117E  A4D8               	btfss	status,2,c
 19616  011180  D01E               	goto	i2l1132
 19617                           
 19618                           ; BSR set to: 0
 19619                           ;doprnt.c: 1253: {
 19620                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
 19621  011182  C076  FFD9         	movff	i2printf@ap,fsr2l
 19622  011186  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 19623  01118A  CFDE F083          	movff	postinc2,i2printf@val
 19624  01118E  CFDD F084          	movff	postdec2,i2printf@val+1
 19625  011192  0E00               	movlw	0
 19626  011194  BF84               	btfsc	(i2printf@val+1)& (0+255),7,b
 19627  011196  0EFF               	movlw	-1
 19628  011198  6F85               	movwf	(i2printf@val+2)& (0+255),b
 19629  01119A  6F86               	movwf	(i2printf@val+3)& (0+255),b
 19630                           
 19631                           ; BSR set to: 0
 19632  01119C  0E02               	movlw	2
 19633  01119E  2776               	addwf	i2printf@ap& (0+255),f,b
 19634  0111A0  0E00               	movlw	0
 19635  0111A2  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19636                           
 19637                           ; BSR set to: 0
 19638                           ;doprnt.c: 1261: if((long)val < 0) {
 19639  0111A4  AF86               	btfss	(i2printf@val+3)& (0+255),7,b
 19640  0111A6  D01D               	goto	i2l1134
 19641                           
 19642                           ; BSR set to: 0
 19643                           ;doprnt.c: 1262: flag |= 0x03;
 19644  0111A8  0E03               	movlw	3
 19645  0111AA  1378               	iorwf	i2printf@flag& (0+255),f,b
 19646                           
 19647                           ; BSR set to: 0
 19648                           ;doprnt.c: 1263: val = -val;
 19649  0111AC  1F86               	comf	(i2printf@val+3)& (0+255),f,b
 19650  0111AE  1F85               	comf	(i2printf@val+2)& (0+255),f,b
 19651  0111B0  1F84               	comf	(i2printf@val+1)& (0+255),f,b
 19652  0111B2  6D83               	negf	i2printf@val& (0+255),b
 19653  0111B4  0E00               	movlw	0
 19654  0111B6  2384               	addwfc	(i2printf@val+1)& (0+255),f,b
 19655  0111B8  2385               	addwfc	(i2printf@val+2)& (0+255),f,b
 19656  0111BA  2386               	addwfc	(i2printf@val+3)& (0+255),f,b
 19657                           
 19658                           ; BSR set to: 0
 19659                           ;doprnt.c: 1264: }
 19660                           ;doprnt.c: 1266: }
 19661  0111BC  D012               	goto	i2l1134
 19662  0111BE                     i2l1132:
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;doprnt.c: 1268: else
 19666                           ;doprnt.c: 1273: {
 19667                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 19668                           
 19669                           ; BSR set to: 0
 19670  0111BE  C076  FFD9         	movff	i2printf@ap,fsr2l
 19671  0111C2  C077  FFDA         	movff	i2printf@ap+1,fsr2h
 19672  0111C6  CFDE F068          	movff	postinc2,??i2_printf
 19673  0111CA  CFDD F069          	movff	postdec2,??i2_printf+1
 19674  0111CE  C068  F083         	movff	??i2_printf,i2printf@val
 19675  0111D2  C069  F084         	movff	??i2_printf+1,i2printf@val+1
 19676  0111D6  6B85               	clrf	(i2printf@val+2)& (0+255),b
 19677  0111D8  6B86               	clrf	(i2printf@val+3)& (0+255),b
 19678                           
 19679                           ; BSR set to: 0
 19680  0111DA  0E02               	movlw	2
 19681  0111DC  2776               	addwf	i2printf@ap& (0+255),f,b
 19682  0111DE  0E00               	movlw	0
 19683  0111E0  2377               	addwfc	(i2printf@ap+1)& (0+255),f,b
 19684  0111E2                     i2l1134:
 19685                           
 19686                           ; BSR set to: 0
 19687                           ;doprnt.c: 1287: }
 19688                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 19689                           
 19690                           ; BSR set to: 0
 19691  0111E2  5187               	movf	i2printf@prec& (0+255),w,b
 19692  0111E4  1188               	iorwf	(i2printf@prec+1)& (0+255),w,b
 19693  0111E6  A4D8               	btfss	status,2,c
 19694  0111E8  D04B               	goto	i2l1136
 19695                           
 19696                           ; BSR set to: 0
 19697  0111EA  5183               	movf	i2printf@val& (0+255),w,b
 19698  0111EC  1184               	iorwf	(i2printf@val+1)& (0+255),w,b
 19699  0111EE  1185               	iorwf	(i2printf@val+2)& (0+255),w,b
 19700  0111F0  1186               	iorwf	(i2printf@val+3)& (0+255),w,b
 19701  0111F2  A4D8               	btfss	status,2,c
 19702  0111F4  D045               	goto	i2l1136
 19703                           
 19704                           ; BSR set to: 0
 19705                           ;doprnt.c: 1291: prec++;
 19706  0111F6  4B87               	infsnz	i2printf@prec& (0+255),f,b
 19707  0111F8  2B88               	incf	(i2printf@prec+1)& (0+255),f,b
 19708                           
 19709                           ; BSR set to: 0
 19710                           ;doprnt.c: 1294: switch((unsigned char)(flag & (0xC0))) {
 19711  0111FA  D042               	goto	i2l1136
 19712  0111FC                     
 19713                           ; BSR set to: 0
 19714                           ;doprnt.c: 1302: case 0xC0:
 19715                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 19716                           
 19717                           ; BSR set to: 0
 19718                           
 19719                           ; BSR set to: 0
 19720  0111FC  0E01               	movlw	1
 19721  0111FE  6F89               	movwf	i2printf@c& (0+255),b
 19722  011200                     i2l12425:
 19723                           
 19724                           ; BSR set to: 0
 19725  011200  0E0A               	movlw	10
 19726  011202  1989               	xorwf	i2printf@c& (0+255),w,b
 19727  011204  B4D8               	btfsc	status,2,c
 19728  011206  D047               	goto	i2l1142
 19729                           
 19730                           ; BSR set to: 0
 19731                           ;doprnt.c: 1306: if(val < dpowers[c])
 19732                           
 19733                           ; BSR set to: 0
 19734                           
 19735                           ; BSR set to: 0
 19736  011208  5189               	movf	i2printf@c& (0+255),w,b
 19737  01120A  0D04               	mullw	4
 19738  01120C  0EE9               	movlw	low _dpowers
 19739  01120E  24F3               	addwf	prodl,w,c
 19740  011210  6EF6               	movwf	tblptrl,c
 19741  011212  0EF3               	movlw	high _dpowers
 19742  011214  20F4               	addwfc	prodh,w,c
 19743  011216  6EF7               	movwf	tblptrh,c
 19744  011218                     	if	1	;There are 3 active tblptr bytes
 19745  011218  6AF8               	clrf	tblptru,c
 19746  01121A  0E00               	movlw	low (__mediumconst shr (0+16))
 19747  01121C  22F8               	addwfc	tblptru,f,c
 19748  01121E                     	endif
 19749  01121E  0009               	tblrd		*+
 19750  011220  50F5               	movf	tablat,w,c
 19751  011222  5D83               	subwf	i2printf@val& (0+255),w,b
 19752  011224  0009               	tblrd		*+
 19753  011226  50F5               	movf	tablat,w,c
 19754  011228  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 19755  01122A  0009               	tblrd		*+
 19756  01122C  50F5               	movf	tablat,w,c
 19757  01122E  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 19758  011230  0009               	tblrd		*+
 19759  011232  50F5               	movf	tablat,w,c
 19760  011234  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 19761  011236  A0D8               	btfss	status,0,c
 19762  011238  D02E               	goto	i2l1142
 19763                           
 19764                           ; BSR set to: 0
 19765                           
 19766                           ; BSR set to: 0
 19767                           
 19768                           ; BSR set to: 0
 19769                           ;doprnt.c: 1307: break;
 19770  01123A  2B89               	incf	i2printf@c& (0+255),f,b
 19771  01123C  D7E1               	goto	i2l12425
 19772  01123E                     
 19773                           ; BSR set to: 0
 19774                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 19775                           
 19776                           ; BSR set to: 0
 19777  01123E  0E01               	movlw	1
 19778  011240  6F89               	movwf	i2printf@c& (0+255),b
 19779  011242                     i2l12439:
 19780                           
 19781                           ; BSR set to: 0
 19782  011242  0E08               	movlw	8
 19783  011244  1989               	xorwf	i2printf@c& (0+255),w,b
 19784  011246  B4D8               	btfsc	status,2,c
 19785  011248  D026               	goto	i2l1142
 19786                           
 19787                           ; BSR set to: 0
 19788                           ;doprnt.c: 1317: if(val < hexpowers[c])
 19789                           
 19790                           ; BSR set to: 0
 19791                           
 19792                           ; BSR set to: 0
 19793  01124A  5189               	movf	i2printf@c& (0+255),w,b
 19794  01124C  0D04               	mullw	4
 19795  01124E  0E5F               	movlw	low _hexpowers
 19796  011250  24F3               	addwf	prodl,w,c
 19797  011252  6EF6               	movwf	tblptrl,c
 19798  011254  0EF4               	movlw	high _hexpowers
 19799  011256  20F4               	addwfc	prodh,w,c
 19800  011258  6EF7               	movwf	tblptrh,c
 19801  01125A                     	if	1	;There are 3 active tblptr bytes
 19802  01125A  6AF8               	clrf	tblptru,c
 19803  01125C  0E00               	movlw	low (__mediumconst shr (0+16))
 19804  01125E  22F8               	addwfc	tblptru,f,c
 19805  011260                     	endif
 19806  011260  0009               	tblrd		*+
 19807  011262  50F5               	movf	tablat,w,c
 19808  011264  5D83               	subwf	i2printf@val& (0+255),w,b
 19809  011266  0009               	tblrd		*+
 19810  011268  50F5               	movf	tablat,w,c
 19811  01126A  5984               	subwfb	(i2printf@val+1)& (0+255),w,b
 19812  01126C  0009               	tblrd		*+
 19813  01126E  50F5               	movf	tablat,w,c
 19814  011270  5985               	subwfb	(i2printf@val+2)& (0+255),w,b
 19815  011272  0009               	tblrd		*+
 19816  011274  50F5               	movf	tablat,w,c
 19817  011276  5986               	subwfb	(i2printf@val+3)& (0+255),w,b
 19818  011278  A0D8               	btfss	status,0,c
 19819  01127A  D00D               	goto	i2l1142
 19820                           
 19821                           ; BSR set to: 0
 19822                           
 19823                           ; BSR set to: 0
 19824                           
 19825                           ; BSR set to: 0
 19826                           ;doprnt.c: 1318: break;
 19827  01127C  2B89               	incf	i2printf@c& (0+255),f,b
 19828  01127E  D7E1               	goto	i2l12439
 19829  011280                     i2l1136:
 19830                           
 19831                           ; BSR set to: 0
 19832                           
 19833                           ; BSR set to: 0
 19834  011280  5178               	movf	i2printf@flag& (0+255),w,b
 19835  011282  0BC0               	andlw	192
 19836                           
 19837                           ; Switch size 1, requested type "space"
 19838                           ; Number of cases is 3, Range of values is 0 to 192
 19839                           ; switch strategies available:
 19840                           ; Name         Instructions Cycles
 19841                           ; simple_byte           10     6 (average)
 19842                           ;	Chosen strategy is simple_byte
 19843  011284  0A00               	xorlw	0	; case 0
 19844  011286  B4D8               	btfsc	status,2,c
 19845  011288  D7B9               	goto	i2l1137
 19846  01128A  0A80               	xorlw	128	; case 128
 19847  01128C  B4D8               	btfsc	status,2,c
 19848  01128E  D7D7               	goto	i2l1143
 19849  011290  0A40               	xorlw	64	; case 192
 19850  011292  B4D8               	btfsc	status,2,c
 19851  011294  D7B3               	goto	i2l1137
 19852  011296                     i2l1142:
 19853                           
 19854                           ; BSR set to: 0
 19855                           ;doprnt.c: 1339: if(c < prec)
 19856                           
 19857                           ; BSR set to: 0
 19858  011296  0E80               	movlw	128
 19859  011298  BF89               	btfsc	i2printf@c& (0+255),7,b
 19860  01129A  0E7F               	movlw	127
 19861  01129C  6F68               	movwf	??i2_printf& (0+255),b
 19862  01129E  5187               	movf	i2printf@prec& (0+255),w,b
 19863  0112A0  5D89               	subwf	i2printf@c& (0+255),w,b
 19864  0112A2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19865  0112A4  0A80               	xorlw	128
 19866  0112A6  5968               	subwfb	??i2_printf& (0+255),w,b
 19867  0112A8  B0D8               	btfsc	status,0,c
 19868  0112AA  D003               	goto	i2l1147
 19869                           
 19870                           ; BSR set to: 0
 19871                           ;doprnt.c: 1340: c = prec;
 19872  0112AC  C087  F089         	movff	i2printf@prec,i2printf@c
 19873  0112B0  D010               	goto	i2l1149
 19874  0112B2                     i2l1147:
 19875                           
 19876                           ; BSR set to: 0
 19877                           ;doprnt.c: 1341: else if(prec < c)
 19878                           
 19879                           ; BSR set to: 0
 19880  0112B2  5188               	movf	(i2printf@prec+1)& (0+255),w,b
 19881  0112B4  0A80               	xorlw	128
 19882  0112B6  6F68               	movwf	??i2_printf& (0+255),b
 19883  0112B8  5189               	movf	i2printf@c& (0+255),w,b
 19884  0112BA  5D87               	subwf	i2printf@prec& (0+255),w,b
 19885  0112BC  0E80               	movlw	128
 19886  0112BE  BF89               	btfsc	i2printf@c& (0+255),7,b
 19887  0112C0  0E7F               	movlw	127
 19888  0112C2  5968               	subwfb	??i2_printf& (0+255),w,b
 19889  0112C4  B0D8               	btfsc	status,0,c
 19890  0112C6  D005               	goto	i2l1149
 19891                           
 19892                           ; BSR set to: 0
 19893                           ;doprnt.c: 1342: prec = c;
 19894  0112C8  5189               	movf	i2printf@c& (0+255),w,b
 19895  0112CA  6F87               	movwf	i2printf@prec& (0+255),b
 19896  0112CC  6B88               	clrf	(i2printf@prec+1)& (0+255),b
 19897  0112CE  BF87               	btfsc	i2printf@prec& (0+255),7,b
 19898  0112D0  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 19899  0112D2                     i2l1149:
 19900                           
 19901                           ; BSR set to: 0
 19902                           ;doprnt.c: 1422: {
 19903                           ;doprnt.c: 1438: if(flag & 0x03)
 19904                           
 19905                           ; BSR set to: 0
 19906                           
 19907                           ; BSR set to: 0
 19908  0112D2  0E03               	movlw	3
 19909  0112D4  1578               	andwf	i2printf@flag& (0+255),w,b
 19910  0112D6  6F68               	movwf	??i2_printf& (0+255),b
 19911  0112D8  0E00               	movlw	0
 19912  0112DA  1579               	andwf	(i2printf@flag+1)& (0+255),w,b
 19913  0112DC  6F69               	movwf	(??i2_printf+1)& (0+255),b
 19914  0112DE  5168               	movf	??i2_printf& (0+255),w,b
 19915  0112E0  1169               	iorwf	(??i2_printf+1)& (0+255),w,b
 19916  0112E2  B4D8               	btfsc	status,2,c
 19917  0112E4  D090               	goto	i2l1151
 19918                           
 19919                           ; BSR set to: 0
 19920                           ;doprnt.c: 1439: (putch('-') );
 19921  0112E6  0E2D               	movlw	45
 19922  0112E8  EC29  F0B1         	call	i2_putch
 19923                           
 19924                           ;doprnt.c: 1469: }
 19925                           ;doprnt.c: 1474: while(prec--) {
 19926  0112EC  D08C               	goto	i2l1151
 19927  0112EE                     
 19928                           ;doprnt.c: 1486: case 0xC0:
 19929                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 19930  0112EE  C087  F068         	movff	i2printf@prec,??i2_printf
 19931  0112F2  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 19932  0112F6  0100               	movlb	0	; () banked
 19933  0112F8  90D8               	bcf	status,0,c
 19934  0112FA  3768               	rlcf	??i2_printf& (0+255),f,b
 19935  0112FC  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 19936  0112FE  90D8               	bcf	status,0,c
 19937  011300  3768               	rlcf	??i2_printf& (0+255),f,b
 19938  011302  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 19939  011304  0EE9               	movlw	low _dpowers
 19940  011306  2568               	addwf	??i2_printf& (0+255),w,b
 19941  011308  6EF6               	movwf	tblptrl,c
 19942  01130A  0EF3               	movlw	high _dpowers
 19943  01130C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 19944  01130E  6EF7               	movwf	tblptrh,c
 19945  011310                     	if	1	;There are 3 active tblptr bytes
 19946  011310  6AF8               	clrf	tblptru,c
 19947  011312  0E00               	movlw	low (__mediumconst shr (0+16))
 19948  011314  22F8               	addwfc	tblptru,f,c
 19949  011316                     	endif
 19950  011316  0009               	tblrd		*+
 19951  011318  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 19952  01131C  0009               	tblrd		*+
 19953  01131E  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 19954  011322  0009               	tblrd		*+
 19955  011324  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 19956  011328  000A               	tblrd		*-
 19957  01132A  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 19958  01132E  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 19959  011332  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19960  011336  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19961  01133A  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19962  01133E  EC0D  F0AA         	call	i2___lldiv	;wreg free
 19963  011342  C001  F00E         	movff	?i2___lldiv,i2___llmod@dividend
 19964  011346  C002  F00F         	movff	?i2___lldiv+1,i2___llmod@dividend+1
 19965  01134A  C003  F010         	movff	?i2___lldiv+2,i2___llmod@dividend+2
 19966  01134E  C004  F011         	movff	?i2___lldiv+3,i2___llmod@dividend+3
 19967  011352  0E0A               	movlw	10
 19968  011354  6E12               	movwf	i2___llmod@divisor,c
 19969  011356  0E00               	movlw	0
 19970  011358  6E13               	movwf	i2___llmod@divisor+1,c
 19971  01135A  0E00               	movlw	0
 19972  01135C  6E14               	movwf	i2___llmod@divisor+2,c
 19973  01135E  0E00               	movlw	0
 19974  011360  6E15               	movwf	i2___llmod@divisor+3,c
 19975  011362  EC0B  F0AC         	call	i2___llmod	;wreg free
 19976  011366  500E               	movf	?i2___llmod,w,c
 19977  011368  0F30               	addlw	48
 19978  01136A  0100               	movlb	0	; () banked
 19979  01136C  6F89               	movwf	i2printf@c& (0+255),b
 19980                           
 19981                           ;doprnt.c: 1491: break;
 19982  01136E  D048               	goto	i2l1156
 19983  011370                     
 19984                           ; BSR set to: 0
 19985                           ;doprnt.c: 1499: {
 19986                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 19987                           
 19988                           ; BSR set to: 0
 19989  011370  C083  F001         	movff	i2printf@val,i2___lldiv@dividend
 19990  011374  C084  F002         	movff	i2printf@val+1,i2___lldiv@dividend+1
 19991  011378  C085  F003         	movff	i2printf@val+2,i2___lldiv@dividend+2
 19992  01137C  C086  F004         	movff	i2printf@val+3,i2___lldiv@dividend+3
 19993  011380  C087  F068         	movff	i2printf@prec,??i2_printf
 19994  011384  C088  F069         	movff	i2printf@prec+1,??i2_printf+1
 19995  011388  90D8               	bcf	status,0,c
 19996  01138A  3768               	rlcf	??i2_printf& (0+255),f,b
 19997  01138C  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 19998  01138E  90D8               	bcf	status,0,c
 19999  011390  3768               	rlcf	??i2_printf& (0+255),f,b
 20000  011392  3769               	rlcf	(??i2_printf+1)& (0+255),f,b
 20001  011394  0E5F               	movlw	low _hexpowers
 20002  011396  2568               	addwf	??i2_printf& (0+255),w,b
 20003  011398  6EF6               	movwf	tblptrl,c
 20004  01139A  0EF4               	movlw	high _hexpowers
 20005  01139C  2169               	addwfc	(??i2_printf+1)& (0+255),w,b
 20006  01139E  6EF7               	movwf	tblptrh,c
 20007  0113A0                     	if	1	;There are 3 active tblptr bytes
 20008  0113A0  6AF8               	clrf	tblptru,c
 20009  0113A2  0E00               	movlw	low (__mediumconst shr (0+16))
 20010  0113A4  22F8               	addwfc	tblptru,f,c
 20011  0113A6                     	endif
 20012  0113A6  0009               	tblrd		*+
 20013  0113A8  CFF5 F005          	movff	tablat,i2___lldiv@divisor
 20014  0113AC  0009               	tblrd		*+
 20015  0113AE  CFF5 F006          	movff	tablat,i2___lldiv@divisor+1
 20016  0113B2  0009               	tblrd		*+
 20017  0113B4  CFF5 F007          	movff	tablat,i2___lldiv@divisor+2
 20018  0113B8  000A               	tblrd		*-
 20019  0113BA  CFF5 F008          	movff	tablat,i2___lldiv@divisor+3
 20020  0113BE  EC0D  F0AA         	call	i2___lldiv	;wreg free
 20021  0113C2  5001               	movf	?i2___lldiv,w,c
 20022  0113C4  0B0F               	andlw	15
 20023  0113C6  0100               	movlb	0	; () banked
 20024  0113C8  6F71               	movwf	i2printf@idx& (0+255),b
 20025                           
 20026                           ; BSR set to: 0
 20027                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
 20028  0113CA  5171               	movf	i2printf@idx& (0+255),w,b
 20029  0113CC  0D01               	mullw	1
 20030  0113CE  0E06               	movlw	low STR_88
 20031  0113D0  24F3               	addwf	prodl,w,c
 20032  0113D2  6EF6               	movwf	tblptrl,c
 20033  0113D4  0EFF               	movlw	high STR_88
 20034  0113D6  20F4               	addwfc	prodh,w,c
 20035  0113D8  6EF7               	movwf	tblptrh,c
 20036  0113DA                     	if	1	;There are 3 active tblptr bytes
 20037  0113DA  6AF8               	clrf	tblptru,c
 20038  0113DC  0E00               	movlw	low (__mediumconst shr (0+16))
 20039  0113DE  22F8               	addwfc	tblptru,f,c
 20040  0113E0                     	endif
 20041  0113E0  0008               	tblrd		*
 20042  0113E2  CFF5 F089          	movff	tablat,i2printf@c
 20043                           
 20044                           ; BSR set to: 0
 20045                           ;doprnt.c: 1523: }
 20046                           
 20047                           ;doprnt.c: 1508: }
 20048                           ;doprnt.c: 1510: break;
 20049  0113E6  D00C               	goto	i2l1156
 20050  0113E8                     i2l12475:
 20051  0113E8  0100               	movlb	0	; () banked
 20052  0113EA  5178               	movf	i2printf@flag& (0+255),w,b
 20053  0113EC  0BC0               	andlw	192
 20054                           
 20055                           ; Switch size 1, requested type "space"
 20056                           ; Number of cases is 3, Range of values is 0 to 192
 20057                           ; switch strategies available:
 20058                           ; Name         Instructions Cycles
 20059                           ; simple_byte           10     6 (average)
 20060                           ;	Chosen strategy is simple_byte
 20061  0113EE  0A00               	xorlw	0	; case 0
 20062  0113F0  B4D8               	btfsc	status,2,c
 20063  0113F2  D77D               	goto	i2l1154
 20064  0113F4  0A80               	xorlw	128	; case 128
 20065  0113F6  B4D8               	btfsc	status,2,c
 20066  0113F8  D7BB               	goto	i2l1157
 20067  0113FA  0A40               	xorlw	64	; case 192
 20068  0113FC  B4D8               	btfsc	status,2,c
 20069  0113FE  D777               	goto	i2l1154
 20070  011400                     i2l1156:
 20071                           
 20072                           ; BSR set to: 0
 20073                           ;doprnt.c: 1524: (putch(c) );
 20074                           
 20075                           ; BSR set to: 0
 20076  011400  5189               	movf	i2printf@c& (0+255),w,b
 20077  011402  EC29  F0B1         	call	i2_putch
 20078  011406                     i2l1151:
 20079  011406  0100               	movlb	0	; () banked
 20080  011408  0787               	decf	i2printf@prec& (0+255),f,b
 20081  01140A  A0D8               	btfss	status,0,c
 20082  01140C  0788               	decf	(i2printf@prec+1)& (0+255),f,b
 20083  01140E  2987               	incf	i2printf@prec& (0+255),w,b
 20084  011410  E1EB               	bnz	i2l12475
 20085  011412  2988               	incf	(i2printf@prec+1)& (0+255),w,b
 20086  011414  A4D8               	btfss	status,2,c
 20087  011416  D7E8               	goto	i2l1153
 20088  011418                     i2u1585_40:
 20089                           
 20090                           ; BSR set to: 0
 20091                           
 20092                           ; BSR set to: 0
 20093  011418  0100               	movlb	0	; () banked
 20094  01141A  5166               	movf	i2printf@f& (0+255),w,b
 20095  01141C  6F68               	movwf	??i2_printf& (0+255),b
 20096  01141E  5167               	movf	(i2printf@f+1)& (0+255),w,b
 20097  011420  6F69               	movwf	(??i2_printf+1)& (0+255),b
 20098  011422  4B66               	infsnz	i2printf@f& (0+255),f,b
 20099  011424  2B67               	incf	(i2printf@f+1)& (0+255),f,b
 20100  011426  C068  FFF6         	movff	??i2_printf,tblptrl
 20101  01142A  C069  FFF7         	movff	??i2_printf+1,tblptrh
 20102  01142E  0E00               	movlw	low (__mediumconst shr (0+16))
 20103  011430  6EF8               	movwf	tblptru,c
 20104  011432  0E0D               	movlw	(high __ramtop+-1)
 20105  011434  64F7               	cpfsgt	tblptrh,c
 20106  011436  D003               	bra	i2u1586_47
 20107  011438  0008               	tblrd		*
 20108  01143A  50F5               	movf	tablat,w,c
 20109  01143C  D005               	bra	i2u1586_40
 20110  01143E                     i2u1586_47:
 20111  01143E  CFF6 FFE1          	movff	tblptrl,fsr1l
 20112  011442  CFF7 FFE2          	movff	tblptrh,fsr1h
 20113  011446  50E7               	movf	indf1,w,c
 20114  011448                     i2u1586_40:
 20115  011448  0100               	movlb	0	; () banked
 20116  01144A  6F89               	movwf	i2printf@c& (0+255),b
 20117  01144C  5189               	movf	i2printf@c& (0+255),w,b
 20118  01144E  B4D8               	btfsc	status,2,c
 20119  011450  0012               	return	
 20120  011452  EF1E  F085         	goto	i2l1071
 20121  011456                     __end_ofi2_printf:
 20122                           	opt stack 0
 20123                           tosu	equ	0xFFF
 20124                           tosh	equ	0xFFE
 20125                           tosl	equ	0xFFD
 20126                           pclatu	equ	0xFFB
 20127                           pclath	equ	0xFFA
 20128                           tblptru	equ	0xFF8
 20129                           tblptrh	equ	0xFF7
 20130                           tblptrl	equ	0xFF6
 20131                           tablat	equ	0xFF5
 20132                           prodh	equ	0xFF4
 20133                           prodl	equ	0xFF3
 20134                           intcon	equ	0xFF2
 20135                           postinc0	equ	0xFEE
 20136                           fsr0h	equ	0xFEA
 20137                           fsr0l	equ	0xFE9
 20138                           wreg	equ	0xFE8
 20139                           indf1	equ	0xFE7
 20140                           postdec1	equ	0xFE5
 20141                           fsr1h	equ	0xFE2
 20142                           fsr1l	equ	0xFE1
 20143                           bsr	equ	0xFE0
 20144                           indf2	equ	0xFDF
 20145                           postinc2	equ	0xFDE
 20146                           postdec2	equ	0xFDD
 20147                           fsr2h	equ	0xFDA
 20148                           fsr2l	equ	0xFD9
 20149                           status	equ	0xFD8
 20150                           
 20151 ;; *************** function i2_scale *****************
 20152 ;; Defined at:
 20153 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 20154 ;; Parameters:    Size  Location     Type
 20155 ;;  scl             1    wreg     char 
 20156 ;; Auto vars:     Size  Location     Type
 20157 ;;  scl             1   59[COMRAM] char 
 20158 ;; Return value:  Size  Location     Type
 20159 ;;                  3   53[COMRAM] char 
 20160 ;; Registers used:
 20161 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20162 ;; Tracked objects:
 20163 ;;		On entry : 0/0
 20164 ;;		On exit  : 0/0
 20165 ;;		Unchanged: 0/0
 20166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20167 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20168 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20170 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20171 ;;Total ram usage:        7 bytes
 20172 ;; Hardware stack levels used:    1
 20173 ;; Hardware stack levels required when called:    2
 20174 ;; This function calls:
 20175 ;;		i2___awdiv
 20176 ;;		i2___awmod
 20177 ;;		i2___ftmul
 20178 ;;		i2___wmul
 20179 ;; This function is called by:
 20180 ;;		i2_printf
 20181 ;; This function uses a non-reentrant model
 20182 ;;
 20183                           
 20184                           	psect	text74
 20185  0120C4                     __ptext74:
 20186                           	opt stack 0
 20187  0120C4                     i2_scale:
 20188                           	opt stack 13
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;incstack = 0
 20192                           ;i2scale@scl stored from wreg
 20193  0120C4  6E3C               	movwf	i2scale@scl,c
 20194                           
 20195                           ;doprnt.c: 428: if(scl < 0) {
 20196  0120C6  AE3C               	btfss	i2scale@scl,7,c
 20197  0120C8  D113               	goto	i2l1060
 20198                           
 20199                           ;doprnt.c: 429: scl = -scl;
 20200  0120CA  6C3C               	negf	i2scale@scl,c
 20201                           
 20202                           ;doprnt.c: 430: if(scl>=110)
 20203  0120CC  503C               	movf	i2scale@scl,w,c
 20204  0120CE  0A80               	xorlw	128
 20205  0120D0  0F12               	addlw	-238
 20206  0120D2  A0D8               	btfss	status,0,c
 20207  0120D4  D09A               	goto	i2l1061
 20208                           
 20209                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 20210  0120D6  0E00               	movlw	0
 20211  0120D8  6E12               	movwf	i2___wmul@multiplicand+1,c
 20212  0120DA  0E03               	movlw	3
 20213  0120DC  6E11               	movwf	i2___wmul@multiplicand,c
 20214  0120DE  0E00               	movlw	0
 20215  0120E0  6E0A               	movwf	i2___awdiv@divisor+1,c
 20216  0120E2  0E0A               	movlw	10
 20217  0120E4  6E09               	movwf	i2___awdiv@divisor,c
 20218  0120E6  0E00               	movlw	0
 20219  0120E8  6E04               	movwf	i2___awmod@divisor+1,c
 20220  0120EA  0E64               	movlw	100
 20221  0120EC  6E03               	movwf	i2___awmod@divisor,c
 20222  0120EE  503C               	movf	i2scale@scl,w,c
 20223  0120F0  6E01               	movwf	i2___awmod@dividend,c
 20224  0120F2  6A02               	clrf	i2___awmod@dividend+1,c
 20225  0120F4  BE01               	btfsc	i2___awmod@dividend,7,c
 20226  0120F6  0602               	decf	i2___awmod@dividend+1,f,c
 20227  0120F8  EC38  F0AB         	call	i2___awmod	;wreg free
 20228  0120FC  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 20229  012100  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 20230  012104  ECCB  F0A9         	call	i2___awdiv	;wreg free
 20231  012108  0E09               	movlw	9
 20232  01210A  2407               	addwf	?i2___awdiv,w,c
 20233  01210C  6E0F               	movwf	i2___wmul@multiplier,c
 20234  01210E  0E00               	movlw	0
 20235  012110  2008               	addwfc	?i2___awdiv+1,w,c
 20236  012112  6E10               	movwf	i2___wmul@multiplier+1,c
 20237  012114  EC36  F0B0         	call	i2___wmul	;wreg free
 20238  012118  0E38               	movlw	low __npowers_
 20239  01211A  240F               	addwf	?i2___wmul,w,c
 20240  01211C  6EF6               	movwf	tblptrl,c
 20241  01211E  0EF4               	movlw	high __npowers_
 20242  012120  2010               	addwfc	?i2___wmul+1,w,c
 20243  012122  6EF7               	movwf	tblptrh,c
 20244  012124                     	if	1	;There are 3 active tblptr bytes
 20245  012124  6AF8               	clrf	tblptru,c
 20246  012126  0E00               	movlw	low (__mediumconst shr (0+16))
 20247  012128  22F8               	addwfc	tblptru,f,c
 20248  01212A                     	endif
 20249  01212A  0009               	tblrd		*+
 20250  01212C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20251  012130  0009               	tblrd		*+
 20252  012132  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20253  012136  000A               	tblrd		*-
 20254  012138  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20255  01213C  0E00               	movlw	0
 20256  01213E  6E0A               	movwf	i2___awdiv@divisor+1,c
 20257  012140  0E64               	movlw	100
 20258  012142  6E09               	movwf	i2___awdiv@divisor,c
 20259  012144  503C               	movf	i2scale@scl,w,c
 20260  012146  6E07               	movwf	i2___awdiv@dividend,c
 20261  012148  6A08               	clrf	i2___awdiv@dividend+1,c
 20262  01214A  BE07               	btfsc	i2___awdiv@dividend,7,c
 20263  01214C  0608               	decf	i2___awdiv@dividend+1,f,c
 20264  01214E  ECCB  F0A9         	call	i2___awdiv	;wreg free
 20265  012152  0E12               	movlw	18
 20266  012154  2407               	addwf	?i2___awdiv,w,c
 20267  012156  6E0F               	movwf	i2___wmul@multiplier,c
 20268  012158  0E00               	movlw	0
 20269  01215A  2008               	addwfc	?i2___awdiv+1,w,c
 20270  01215C  6E10               	movwf	i2___wmul@multiplier+1,c
 20271  01215E  0E00               	movlw	0
 20272  012160  6E12               	movwf	i2___wmul@multiplicand+1,c
 20273  012162  0E03               	movlw	3
 20274  012164  6E11               	movwf	i2___wmul@multiplicand,c
 20275  012166  EC36  F0B0         	call	i2___wmul	;wreg free
 20276  01216A  0E38               	movlw	low __npowers_
 20277  01216C  240F               	addwf	?i2___wmul,w,c
 20278  01216E  6EF6               	movwf	tblptrl,c
 20279  012170  0EF4               	movlw	high __npowers_
 20280  012172  2010               	addwfc	?i2___wmul+1,w,c
 20281  012174  6EF7               	movwf	tblptrh,c
 20282  012176                     	if	1	;There are 3 active tblptr bytes
 20283  012176  6AF8               	clrf	tblptru,c
 20284  012178  0E00               	movlw	low (__mediumconst shr (0+16))
 20285  01217A  22F8               	addwfc	tblptru,f,c
 20286  01217C                     	endif
 20287  01217C  0009               	tblrd		*+
 20288  01217E  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20289  012182  0009               	tblrd		*+
 20290  012184  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20291  012188  000A               	tblrd		*-
 20292  01218A  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20293  01218E  ECC3  F0A3         	call	i2___ftmul	;wreg free
 20294  012192  C027  F039         	movff	?i2___ftmul,i2_scale$3328
 20295  012196  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3328+1
 20296  01219A  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3328+2
 20297                           
 20298                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
 20299  01219E  C039  F027         	movff	i2_scale$3328,i2___ftmul@f1
 20300  0121A2  C03A  F028         	movff	i2_scale$3328+1,i2___ftmul@f1+1
 20301  0121A6  C03B  F029         	movff	i2_scale$3328+2,i2___ftmul@f1+2
 20302  0121AA  0E00               	movlw	0
 20303  0121AC  6E12               	movwf	i2___wmul@multiplicand+1,c
 20304  0121AE  0E03               	movlw	3
 20305  0121B0  6E11               	movwf	i2___wmul@multiplicand,c
 20306  0121B2  0E00               	movlw	0
 20307  0121B4  6E04               	movwf	i2___awmod@divisor+1,c
 20308  0121B6  0E0A               	movlw	10
 20309  0121B8  6E03               	movwf	i2___awmod@divisor,c
 20310  0121BA  503C               	movf	i2scale@scl,w,c
 20311  0121BC  6E01               	movwf	i2___awmod@dividend,c
 20312  0121BE  6A02               	clrf	i2___awmod@dividend+1,c
 20313  0121C0  BE01               	btfsc	i2___awmod@dividend,7,c
 20314  0121C2  0602               	decf	i2___awmod@dividend+1,f,c
 20315  0121C4  EC38  F0AB         	call	i2___awmod	;wreg free
 20316  0121C8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20317  0121CC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20318  0121D0  EC36  F0B0         	call	i2___wmul	;wreg free
 20319  0121D4  0E38               	movlw	low __npowers_
 20320  0121D6  240F               	addwf	?i2___wmul,w,c
 20321  0121D8  6EF6               	movwf	tblptrl,c
 20322  0121DA  0EF4               	movlw	high __npowers_
 20323  0121DC  2010               	addwfc	?i2___wmul+1,w,c
 20324  0121DE  6EF7               	movwf	tblptrh,c
 20325  0121E0                     	if	1	;There are 3 active tblptr bytes
 20326  0121E0  6AF8               	clrf	tblptru,c
 20327  0121E2  0E00               	movlw	low (__mediumconst shr (0+16))
 20328  0121E4  22F8               	addwfc	tblptru,f,c
 20329  0121E6                     	endif
 20330  0121E6  0009               	tblrd		*+
 20331  0121E8  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20332  0121EC  0009               	tblrd		*+
 20333  0121EE  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20334  0121F2  000A               	tblrd		*-
 20335  0121F4  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20336  0121F8  ECC3  F0A3         	call	i2___ftmul	;wreg free
 20337  0121FC  C027  F036         	movff	?i2___ftmul,?i2_scale
 20338  012200  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20339  012204  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20340  012208  0012               	return	
 20341  01220A                     i2l1061:
 20342                           
 20343                           ;doprnt.c: 432: else if(scl > 10)
 20344  01220A  503C               	movf	i2scale@scl,w,c
 20345  01220C  0A80               	xorlw	128
 20346  01220E  0F75               	addlw	-139
 20347  012210  A0D8               	btfss	status,0,c
 20348  012212  D059               	goto	i2l1064
 20349                           
 20350                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
 20351  012214  0E00               	movlw	0
 20352  012216  6E0A               	movwf	i2___awdiv@divisor+1,c
 20353  012218  0E0A               	movlw	10
 20354  01221A  6E09               	movwf	i2___awdiv@divisor,c
 20355  01221C  503C               	movf	i2scale@scl,w,c
 20356  01221E  6E07               	movwf	i2___awdiv@dividend,c
 20357  012220  6A08               	clrf	i2___awdiv@dividend+1,c
 20358  012222  BE07               	btfsc	i2___awdiv@dividend,7,c
 20359  012224  0608               	decf	i2___awdiv@dividend+1,f,c
 20360  012226  ECCB  F0A9         	call	i2___awdiv	;wreg free
 20361  01222A  0E09               	movlw	9
 20362  01222C  2407               	addwf	?i2___awdiv,w,c
 20363  01222E  6E0F               	movwf	i2___wmul@multiplier,c
 20364  012230  0E00               	movlw	0
 20365  012232  2008               	addwfc	?i2___awdiv+1,w,c
 20366  012234  6E10               	movwf	i2___wmul@multiplier+1,c
 20367  012236  0E00               	movlw	0
 20368  012238  6E12               	movwf	i2___wmul@multiplicand+1,c
 20369  01223A  0E03               	movlw	3
 20370  01223C  6E11               	movwf	i2___wmul@multiplicand,c
 20371  01223E  EC36  F0B0         	call	i2___wmul	;wreg free
 20372  012242  0E38               	movlw	low __npowers_
 20373  012244  240F               	addwf	?i2___wmul,w,c
 20374  012246  6EF6               	movwf	tblptrl,c
 20375  012248  0EF4               	movlw	high __npowers_
 20376  01224A  2010               	addwfc	?i2___wmul+1,w,c
 20377  01224C  6EF7               	movwf	tblptrh,c
 20378  01224E                     	if	1	;There are 3 active tblptr bytes
 20379  01224E  6AF8               	clrf	tblptru,c
 20380  012250  0E00               	movlw	low (__mediumconst shr (0+16))
 20381  012252  22F8               	addwfc	tblptru,f,c
 20382  012254                     	endif
 20383  012254  0009               	tblrd		*+
 20384  012256  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20385  01225A  0009               	tblrd		*+
 20386  01225C  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20387  012260  000A               	tblrd		*-
 20388  012262  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20389  012266  0E00               	movlw	0
 20390  012268  6E12               	movwf	i2___wmul@multiplicand+1,c
 20391  01226A  0E03               	movlw	3
 20392  01226C  6E11               	movwf	i2___wmul@multiplicand,c
 20393  01226E  0E00               	movlw	0
 20394  012270  6E04               	movwf	i2___awmod@divisor+1,c
 20395  012272  0E0A               	movlw	10
 20396  012274  6E03               	movwf	i2___awmod@divisor,c
 20397  012276  503C               	movf	i2scale@scl,w,c
 20398  012278  6E01               	movwf	i2___awmod@dividend,c
 20399  01227A  6A02               	clrf	i2___awmod@dividend+1,c
 20400  01227C  BE01               	btfsc	i2___awmod@dividend,7,c
 20401  01227E  0602               	decf	i2___awmod@dividend+1,f,c
 20402  012280  EC38  F0AB         	call	i2___awmod	;wreg free
 20403  012284  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20404  012288  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20405  01228C  EC36  F0B0         	call	i2___wmul	;wreg free
 20406  012290  0E38               	movlw	low __npowers_
 20407  012292  240F               	addwf	?i2___wmul,w,c
 20408  012294  6EF6               	movwf	tblptrl,c
 20409  012296  0EF4               	movlw	high __npowers_
 20410  012298  2010               	addwfc	?i2___wmul+1,w,c
 20411  01229A  6EF7               	movwf	tblptrh,c
 20412  01229C                     	if	1	;There are 3 active tblptr bytes
 20413  01229C  6AF8               	clrf	tblptru,c
 20414  01229E  0E00               	movlw	low (__mediumconst shr (0+16))
 20415  0122A0  22F8               	addwfc	tblptru,f,c
 20416  0122A2                     	endif
 20417  0122A2  0009               	tblrd		*+
 20418  0122A4  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20419  0122A8  0009               	tblrd		*+
 20420  0122AA  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20421  0122AE  000A               	tblrd		*-
 20422  0122B0  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20423  0122B4  ECC3  F0A3         	call	i2___ftmul	;wreg free
 20424  0122B8  C027  F036         	movff	?i2___ftmul,?i2_scale
 20425  0122BC  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20426  0122C0  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20427  0122C4  0012               	return	
 20428  0122C6                     i2l1064:
 20429                           
 20430                           ;doprnt.c: 434: return _npowers_[scl];
 20431  0122C6  503C               	movf	i2scale@scl,w,c
 20432  0122C8  0D03               	mullw	3
 20433  0122CA  0E38               	movlw	low __npowers_
 20434  0122CC  24F3               	addwf	prodl,w,c
 20435  0122CE  6EF6               	movwf	tblptrl,c
 20436  0122D0  0EF4               	movlw	high __npowers_
 20437  0122D2  20F4               	addwfc	prodh,w,c
 20438  0122D4  6EF7               	movwf	tblptrh,c
 20439  0122D6                     	if	1	;There are 3 active tblptr bytes
 20440  0122D6  6AF8               	clrf	tblptru,c
 20441  0122D8  0E00               	movlw	low (__mediumconst shr (0+16))
 20442  0122DA  22F8               	addwfc	tblptru,f,c
 20443  0122DC                     	endif
 20444  0122DC  0009               	tblrd		*+
 20445  0122DE  CFF5 F036          	movff	tablat,?i2_scale
 20446  0122E2  0009               	tblrd		*+
 20447  0122E4  CFF5 F037          	movff	tablat,?i2_scale+1
 20448  0122E8  000A               	tblrd		*-
 20449  0122EA  CFF5 F038          	movff	tablat,?i2_scale+2
 20450  0122EE  0012               	return	
 20451  0122F0                     i2l1060:
 20452                           
 20453                           ;doprnt.c: 435: }
 20454                           ;doprnt.c: 436: if(scl>=110)
 20455  0122F0  503C               	movf	i2scale@scl,w,c
 20456  0122F2  0A80               	xorlw	128
 20457  0122F4  0F12               	addlw	-238
 20458  0122F6  A0D8               	btfss	status,0,c
 20459  0122F8  D09A               	goto	i2l1065
 20460                           
 20461                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 20462  0122FA  0E00               	movlw	0
 20463  0122FC  6E12               	movwf	i2___wmul@multiplicand+1,c
 20464  0122FE  0E03               	movlw	3
 20465  012300  6E11               	movwf	i2___wmul@multiplicand,c
 20466  012302  0E00               	movlw	0
 20467  012304  6E0A               	movwf	i2___awdiv@divisor+1,c
 20468  012306  0E0A               	movlw	10
 20469  012308  6E09               	movwf	i2___awdiv@divisor,c
 20470  01230A  0E00               	movlw	0
 20471  01230C  6E04               	movwf	i2___awmod@divisor+1,c
 20472  01230E  0E64               	movlw	100
 20473  012310  6E03               	movwf	i2___awmod@divisor,c
 20474  012312  503C               	movf	i2scale@scl,w,c
 20475  012314  6E01               	movwf	i2___awmod@dividend,c
 20476  012316  6A02               	clrf	i2___awmod@dividend+1,c
 20477  012318  BE01               	btfsc	i2___awmod@dividend,7,c
 20478  01231A  0602               	decf	i2___awmod@dividend+1,f,c
 20479  01231C  EC38  F0AB         	call	i2___awmod	;wreg free
 20480  012320  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 20481  012324  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 20482  012328  ECCB  F0A9         	call	i2___awdiv	;wreg free
 20483  01232C  0E09               	movlw	9
 20484  01232E  2407               	addwf	?i2___awdiv,w,c
 20485  012330  6E0F               	movwf	i2___wmul@multiplier,c
 20486  012332  0E00               	movlw	0
 20487  012334  2008               	addwfc	?i2___awdiv+1,w,c
 20488  012336  6E10               	movwf	i2___wmul@multiplier+1,c
 20489  012338  EC36  F0B0         	call	i2___wmul	;wreg free
 20490  01233C  0E11               	movlw	low __powers_
 20491  01233E  240F               	addwf	?i2___wmul,w,c
 20492  012340  6EF6               	movwf	tblptrl,c
 20493  012342  0EF4               	movlw	high __powers_
 20494  012344  2010               	addwfc	?i2___wmul+1,w,c
 20495  012346  6EF7               	movwf	tblptrh,c
 20496  012348                     	if	1	;There are 3 active tblptr bytes
 20497  012348  6AF8               	clrf	tblptru,c
 20498  01234A  0E00               	movlw	low (__mediumconst shr (0+16))
 20499  01234C  22F8               	addwfc	tblptru,f,c
 20500  01234E                     	endif
 20501  01234E  0009               	tblrd		*+
 20502  012350  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20503  012354  0009               	tblrd		*+
 20504  012356  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20505  01235A  000A               	tblrd		*-
 20506  01235C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20507  012360  0E00               	movlw	0
 20508  012362  6E0A               	movwf	i2___awdiv@divisor+1,c
 20509  012364  0E64               	movlw	100
 20510  012366  6E09               	movwf	i2___awdiv@divisor,c
 20511  012368  503C               	movf	i2scale@scl,w,c
 20512  01236A  6E07               	movwf	i2___awdiv@dividend,c
 20513  01236C  6A08               	clrf	i2___awdiv@dividend+1,c
 20514  01236E  BE07               	btfsc	i2___awdiv@dividend,7,c
 20515  012370  0608               	decf	i2___awdiv@dividend+1,f,c
 20516  012372  ECCB  F0A9         	call	i2___awdiv	;wreg free
 20517  012376  0E12               	movlw	18
 20518  012378  2407               	addwf	?i2___awdiv,w,c
 20519  01237A  6E0F               	movwf	i2___wmul@multiplier,c
 20520  01237C  0E00               	movlw	0
 20521  01237E  2008               	addwfc	?i2___awdiv+1,w,c
 20522  012380  6E10               	movwf	i2___wmul@multiplier+1,c
 20523  012382  0E00               	movlw	0
 20524  012384  6E12               	movwf	i2___wmul@multiplicand+1,c
 20525  012386  0E03               	movlw	3
 20526  012388  6E11               	movwf	i2___wmul@multiplicand,c
 20527  01238A  EC36  F0B0         	call	i2___wmul	;wreg free
 20528  01238E  0E11               	movlw	low __powers_
 20529  012390  240F               	addwf	?i2___wmul,w,c
 20530  012392  6EF6               	movwf	tblptrl,c
 20531  012394  0EF4               	movlw	high __powers_
 20532  012396  2010               	addwfc	?i2___wmul+1,w,c
 20533  012398  6EF7               	movwf	tblptrh,c
 20534  01239A                     	if	1	;There are 3 active tblptr bytes
 20535  01239A  6AF8               	clrf	tblptru,c
 20536  01239C  0E00               	movlw	low (__mediumconst shr (0+16))
 20537  01239E  22F8               	addwfc	tblptru,f,c
 20538  0123A0                     	endif
 20539  0123A0  0009               	tblrd		*+
 20540  0123A2  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20541  0123A6  0009               	tblrd		*+
 20542  0123A8  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20543  0123AC  000A               	tblrd		*-
 20544  0123AE  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20545  0123B2  ECC3  F0A3         	call	i2___ftmul	;wreg free
 20546  0123B6  C027  F039         	movff	?i2___ftmul,i2_scale$3328
 20547  0123BA  C028  F03A         	movff	?i2___ftmul+1,i2_scale$3328+1
 20548  0123BE  C029  F03B         	movff	?i2___ftmul+2,i2_scale$3328+2
 20549                           
 20550                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
 20551  0123C2  C039  F027         	movff	i2_scale$3328,i2___ftmul@f1
 20552  0123C6  C03A  F028         	movff	i2_scale$3328+1,i2___ftmul@f1+1
 20553  0123CA  C03B  F029         	movff	i2_scale$3328+2,i2___ftmul@f1+2
 20554  0123CE  0E00               	movlw	0
 20555  0123D0  6E12               	movwf	i2___wmul@multiplicand+1,c
 20556  0123D2  0E03               	movlw	3
 20557  0123D4  6E11               	movwf	i2___wmul@multiplicand,c
 20558  0123D6  0E00               	movlw	0
 20559  0123D8  6E04               	movwf	i2___awmod@divisor+1,c
 20560  0123DA  0E0A               	movlw	10
 20561  0123DC  6E03               	movwf	i2___awmod@divisor,c
 20562  0123DE  503C               	movf	i2scale@scl,w,c
 20563  0123E0  6E01               	movwf	i2___awmod@dividend,c
 20564  0123E2  6A02               	clrf	i2___awmod@dividend+1,c
 20565  0123E4  BE01               	btfsc	i2___awmod@dividend,7,c
 20566  0123E6  0602               	decf	i2___awmod@dividend+1,f,c
 20567  0123E8  EC38  F0AB         	call	i2___awmod	;wreg free
 20568  0123EC  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20569  0123F0  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20570  0123F4  EC36  F0B0         	call	i2___wmul	;wreg free
 20571  0123F8  0E11               	movlw	low __powers_
 20572  0123FA  240F               	addwf	?i2___wmul,w,c
 20573  0123FC  6EF6               	movwf	tblptrl,c
 20574  0123FE  0EF4               	movlw	high __powers_
 20575  012400  2010               	addwfc	?i2___wmul+1,w,c
 20576  012402  6EF7               	movwf	tblptrh,c
 20577  012404                     	if	1	;There are 3 active tblptr bytes
 20578  012404  6AF8               	clrf	tblptru,c
 20579  012406  0E00               	movlw	low (__mediumconst shr (0+16))
 20580  012408  22F8               	addwfc	tblptru,f,c
 20581  01240A                     	endif
 20582  01240A  0009               	tblrd		*+
 20583  01240C  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20584  012410  0009               	tblrd		*+
 20585  012412  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20586  012416  000A               	tblrd		*-
 20587  012418  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20588  01241C  ECC3  F0A3         	call	i2___ftmul	;wreg free
 20589  012420  C027  F036         	movff	?i2___ftmul,?i2_scale
 20590  012424  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20591  012428  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20592  01242C  0012               	return	
 20593  01242E                     i2l1065:
 20594                           
 20595                           ;doprnt.c: 438: else if(scl > 10)
 20596  01242E  503C               	movf	i2scale@scl,w,c
 20597  012430  0A80               	xorlw	128
 20598  012432  0F75               	addlw	-139
 20599  012434  A0D8               	btfss	status,0,c
 20600  012436  D059               	goto	i2l1067
 20601                           
 20602                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
 20603  012438  0E00               	movlw	0
 20604  01243A  6E0A               	movwf	i2___awdiv@divisor+1,c
 20605  01243C  0E0A               	movlw	10
 20606  01243E  6E09               	movwf	i2___awdiv@divisor,c
 20607  012440  503C               	movf	i2scale@scl,w,c
 20608  012442  6E07               	movwf	i2___awdiv@dividend,c
 20609  012444  6A08               	clrf	i2___awdiv@dividend+1,c
 20610  012446  BE07               	btfsc	i2___awdiv@dividend,7,c
 20611  012448  0608               	decf	i2___awdiv@dividend+1,f,c
 20612  01244A  ECCB  F0A9         	call	i2___awdiv	;wreg free
 20613  01244E  0E09               	movlw	9
 20614  012450  2407               	addwf	?i2___awdiv,w,c
 20615  012452  6E0F               	movwf	i2___wmul@multiplier,c
 20616  012454  0E00               	movlw	0
 20617  012456  2008               	addwfc	?i2___awdiv+1,w,c
 20618  012458  6E10               	movwf	i2___wmul@multiplier+1,c
 20619  01245A  0E00               	movlw	0
 20620  01245C  6E12               	movwf	i2___wmul@multiplicand+1,c
 20621  01245E  0E03               	movlw	3
 20622  012460  6E11               	movwf	i2___wmul@multiplicand,c
 20623  012462  EC36  F0B0         	call	i2___wmul	;wreg free
 20624  012466  0E11               	movlw	low __powers_
 20625  012468  240F               	addwf	?i2___wmul,w,c
 20626  01246A  6EF6               	movwf	tblptrl,c
 20627  01246C  0EF4               	movlw	high __powers_
 20628  01246E  2010               	addwfc	?i2___wmul+1,w,c
 20629  012470  6EF7               	movwf	tblptrh,c
 20630  012472                     	if	1	;There are 3 active tblptr bytes
 20631  012472  6AF8               	clrf	tblptru,c
 20632  012474  0E00               	movlw	low (__mediumconst shr (0+16))
 20633  012476  22F8               	addwfc	tblptru,f,c
 20634  012478                     	endif
 20635  012478  0009               	tblrd		*+
 20636  01247A  CFF5 F027          	movff	tablat,i2___ftmul@f1
 20637  01247E  0009               	tblrd		*+
 20638  012480  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 20639  012484  000A               	tblrd		*-
 20640  012486  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 20641  01248A  0E00               	movlw	0
 20642  01248C  6E12               	movwf	i2___wmul@multiplicand+1,c
 20643  01248E  0E03               	movlw	3
 20644  012490  6E11               	movwf	i2___wmul@multiplicand,c
 20645  012492  0E00               	movlw	0
 20646  012494  6E04               	movwf	i2___awmod@divisor+1,c
 20647  012496  0E0A               	movlw	10
 20648  012498  6E03               	movwf	i2___awmod@divisor,c
 20649  01249A  503C               	movf	i2scale@scl,w,c
 20650  01249C  6E01               	movwf	i2___awmod@dividend,c
 20651  01249E  6A02               	clrf	i2___awmod@dividend+1,c
 20652  0124A0  BE01               	btfsc	i2___awmod@dividend,7,c
 20653  0124A2  0602               	decf	i2___awmod@dividend+1,f,c
 20654  0124A4  EC38  F0AB         	call	i2___awmod	;wreg free
 20655  0124A8  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 20656  0124AC  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 20657  0124B0  EC36  F0B0         	call	i2___wmul	;wreg free
 20658  0124B4  0E11               	movlw	low __powers_
 20659  0124B6  240F               	addwf	?i2___wmul,w,c
 20660  0124B8  6EF6               	movwf	tblptrl,c
 20661  0124BA  0EF4               	movlw	high __powers_
 20662  0124BC  2010               	addwfc	?i2___wmul+1,w,c
 20663  0124BE  6EF7               	movwf	tblptrh,c
 20664  0124C0                     	if	1	;There are 3 active tblptr bytes
 20665  0124C0  6AF8               	clrf	tblptru,c
 20666  0124C2  0E00               	movlw	low (__mediumconst shr (0+16))
 20667  0124C4  22F8               	addwfc	tblptru,f,c
 20668  0124C6                     	endif
 20669  0124C6  0009               	tblrd		*+
 20670  0124C8  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 20671  0124CC  0009               	tblrd		*+
 20672  0124CE  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 20673  0124D2  000A               	tblrd		*-
 20674  0124D4  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 20675  0124D8  ECC3  F0A3         	call	i2___ftmul	;wreg free
 20676  0124DC  C027  F036         	movff	?i2___ftmul,?i2_scale
 20677  0124E0  C028  F037         	movff	?i2___ftmul+1,?i2_scale+1
 20678  0124E4  C029  F038         	movff	?i2___ftmul+2,?i2_scale+2
 20679  0124E8  0012               	return	
 20680  0124EA                     i2l1067:
 20681                           
 20682                           ;doprnt.c: 440: return _powers_[scl];
 20683  0124EA  503C               	movf	i2scale@scl,w,c
 20684  0124EC  0D03               	mullw	3
 20685  0124EE  0E11               	movlw	low __powers_
 20686  0124F0  24F3               	addwf	prodl,w,c
 20687  0124F2  6EF6               	movwf	tblptrl,c
 20688  0124F4  0EF4               	movlw	high __powers_
 20689  0124F6  20F4               	addwfc	prodh,w,c
 20690  0124F8  6EF7               	movwf	tblptrh,c
 20691  0124FA                     	if	1	;There are 3 active tblptr bytes
 20692  0124FA  6AF8               	clrf	tblptru,c
 20693  0124FC  0E00               	movlw	low (__mediumconst shr (0+16))
 20694  0124FE  22F8               	addwfc	tblptru,f,c
 20695  012500                     	endif
 20696  012500  0009               	tblrd		*+
 20697  012502  CFF5 F036          	movff	tablat,?i2_scale
 20698  012506  0009               	tblrd		*+
 20699  012508  CFF5 F037          	movff	tablat,?i2_scale+1
 20700  01250C  000A               	tblrd		*-
 20701  01250E  CFF5 F038          	movff	tablat,?i2_scale+2
 20702  012512  0012               	return	
 20703  012514                     __end_ofi2_scale:
 20704                           	opt stack 0
 20705                           tosu	equ	0xFFF
 20706                           tosh	equ	0xFFE
 20707                           tosl	equ	0xFFD
 20708                           pclatu	equ	0xFFB
 20709                           pclath	equ	0xFFA
 20710                           tblptru	equ	0xFF8
 20711                           tblptrh	equ	0xFF7
 20712                           tblptrl	equ	0xFF6
 20713                           tablat	equ	0xFF5
 20714                           prodh	equ	0xFF4
 20715                           prodl	equ	0xFF3
 20716                           intcon	equ	0xFF2
 20717                           postinc0	equ	0xFEE
 20718                           fsr0h	equ	0xFEA
 20719                           fsr0l	equ	0xFE9
 20720                           wreg	equ	0xFE8
 20721                           indf1	equ	0xFE7
 20722                           postdec1	equ	0xFE5
 20723                           fsr1h	equ	0xFE2
 20724                           fsr1l	equ	0xFE1
 20725                           bsr	equ	0xFE0
 20726                           indf2	equ	0xFDF
 20727                           postinc2	equ	0xFDE
 20728                           postdec2	equ	0xFDD
 20729                           fsr2h	equ	0xFDA
 20730                           fsr2l	equ	0xFD9
 20731                           status	equ	0xFD8
 20732                           
 20733 ;; *************** function i2_putch *****************
 20734 ;; Defined at:
 20735 ;;		line 180 in file "mcc_generated_files/eusart2.c"
 20736 ;; Parameters:    Size  Location     Type
 20737 ;;  txData          1    wreg     unsigned char 
 20738 ;; Auto vars:     Size  Location     Type
 20739 ;;  txData          1    1[COMRAM] unsigned char 
 20740 ;; Return value:  Size  Location     Type
 20741 ;;                  1    wreg      void 
 20742 ;; Registers used:
 20743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20744 ;; Tracked objects:
 20745 ;;		On entry : 0/0
 20746 ;;		On exit  : 0/0
 20747 ;;		Unchanged: 0/0
 20748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20750 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20752 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20753 ;;Total ram usage:        1 bytes
 20754 ;; Hardware stack levels used:    1
 20755 ;; Hardware stack levels required when called:    1
 20756 ;; This function calls:
 20757 ;;		i2_EUSART2_Write
 20758 ;; This function is called by:
 20759 ;;		i2_printf
 20760 ;; This function uses a non-reentrant model
 20761 ;;
 20762                           
 20763                           	psect	text75
 20764  016252                     __ptext75:
 20765                           	opt stack 0
 20766  016252                     i2_putch:
 20767                           	opt stack 14
 20768                           
 20769                           ;incstack = 0
 20770                           ;i2putch@txData stored from wreg
 20771  016252  6E02               	movwf	i2putch@txData,c
 20772                           
 20773                           ;eusart2.c: 182: EUSART2_Write(txData);
 20774  016254  5002               	movf	i2putch@txData,w,c
 20775  016256  EC68  F0AE         	call	i2_EUSART2_Write
 20776  01625A  0012               	return		;funcret
 20777  01625C                     __end_ofi2_putch:
 20778                           	opt stack 0
 20779                           tosu	equ	0xFFF
 20780                           tosh	equ	0xFFE
 20781                           tosl	equ	0xFFD
 20782                           pclatu	equ	0xFFB
 20783                           pclath	equ	0xFFA
 20784                           tblptru	equ	0xFF8
 20785                           tblptrh	equ	0xFF7
 20786                           tblptrl	equ	0xFF6
 20787                           tablat	equ	0xFF5
 20788                           prodh	equ	0xFF4
 20789                           prodl	equ	0xFF3
 20790                           intcon	equ	0xFF2
 20791                           postinc0	equ	0xFEE
 20792                           fsr0h	equ	0xFEA
 20793                           fsr0l	equ	0xFE9
 20794                           wreg	equ	0xFE8
 20795                           indf1	equ	0xFE7
 20796                           postdec1	equ	0xFE5
 20797                           fsr1h	equ	0xFE2
 20798                           fsr1l	equ	0xFE1
 20799                           bsr	equ	0xFE0
 20800                           indf2	equ	0xFDF
 20801                           postinc2	equ	0xFDE
 20802                           postdec2	equ	0xFDD
 20803                           fsr2h	equ	0xFDA
 20804                           fsr2l	equ	0xFD9
 20805                           status	equ	0xFD8
 20806                           
 20807 ;; *************** function i2_EUSART2_Write *****************
 20808 ;; Defined at:
 20809 ;;		line 151 in file "mcc_generated_files/eusart2.c"
 20810 ;; Parameters:    Size  Location     Type
 20811 ;;  txData          1    wreg     unsigned char 
 20812 ;; Auto vars:     Size  Location     Type
 20813 ;;  txData          1    0[COMRAM] unsigned char 
 20814 ;; Return value:  Size  Location     Type
 20815 ;;                  1    wreg      void 
 20816 ;; Registers used:
 20817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20818 ;; Tracked objects:
 20819 ;;		On entry : 0/0
 20820 ;;		On exit  : 0/0
 20821 ;;		Unchanged: 0/0
 20822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20824 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20826 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20827 ;;Total ram usage:        1 bytes
 20828 ;; Hardware stack levels used:    1
 20829 ;; This function calls:
 20830 ;;		Nothing
 20831 ;; This function is called by:
 20832 ;;		i2_putch
 20833 ;; This function uses a non-reentrant model
 20834 ;;
 20835                           
 20836                           	psect	text76
 20837  015CD0                     __ptext76:
 20838                           	opt stack 0
 20839  015CD0                     i2_EUSART2_Write:
 20840                           	opt stack 14
 20841                           
 20842                           ;incstack = 0
 20843                           ;i2EUSART2_Write@txData stored from wreg
 20844  015CD0  6E01               	movwf	i2EUSART2_Write@txData,c
 20845                           
 20846                           ;eusart2.c: 153: while(0 == eusart2TxBufferRemaining)
 20847  015CD2  D001               	goto	i2l374
 20848  015CD4                     i2l375:
 20849                           
 20850                           ; BSR set to: 1
 20851  015CD4  0004               	clrwdt		;# 
 20852  015CD6                     i2l374:
 20853  015CD6  0101               	movlb	1	; () banked
 20854  015CD8  51DD               	movf	_eusart2TxBufferRemaining& (0+255),w,b	;volatile
 20855  015CDA  B4D8               	btfsc	status,2,c
 20856  015CDC  D7FB               	goto	i2l375
 20857                           
 20858                           ; BSR set to: 1
 20859                           ;eusart2.c: 156: }
 20860                           ;eusart2.c: 158: if(0 == PIE3bits.TX2IE)
 20861  015CDE  010E               	movlb	14	; () banked
 20862  015CE0  BD2C               	btfsc	44,6,b	;volatile
 20863  015CE2  D003               	goto	i2l377
 20864                           
 20865                           ; BSR set to: 14
 20866                           ;eusart2.c: 159: {
 20867                           ;eusart2.c: 160: TX2REG = txData;
 20868  015CE4  C001  FEF2         	movff	i2EUSART2_Write@txData,3826	;volatile
 20869                           
 20870                           ;eusart2.c: 161: }
 20871  015CE8  D013               	goto	i2l378
 20872  015CEA                     i2l377:
 20873                           
 20874                           ; BSR set to: 14
 20875                           ;eusart2.c: 162: else
 20876                           ;eusart2.c: 163: {
 20877                           ;eusart2.c: 164: PIE3bits.TX2IE = 0;
 20878  015CEA  9D2C               	bcf	44,6,b	;volatile
 20879                           
 20880                           ; BSR set to: 14
 20881                           ;eusart2.c: 165: eusart2TxBuffer[eusart2TxHead++] = txData;
 20882  015CEC  0101               	movlb	1	; () banked
 20883  015CEE  51DF               	movf	_eusart2TxHead& (0+255),w,b	;volatile
 20884  015CF0  0D01               	mullw	1
 20885  015CF2  0E00               	movlw	low _eusart2TxBuffer
 20886  015CF4  24F3               	addwf	prodl,w,c
 20887  015CF6  6ED9               	movwf	fsr2l,c
 20888  015CF8  0E02               	movlw	high _eusart2TxBuffer
 20889  015CFA  20F4               	addwfc	prodh,w,c
 20890  015CFC  6EDA               	movwf	fsr2h,c
 20891  015CFE  C001  FFDF         	movff	i2EUSART2_Write@txData,indf2
 20892                           
 20893                           ; BSR set to: 1
 20894  015D02  2BDF               	incf	_eusart2TxHead& (0+255),f,b	;volatile
 20895                           
 20896                           ; BSR set to: 1
 20897                           ;eusart2.c: 166: if(sizeof(eusart2TxBuffer) <= eusart2TxHead)
 20898  015D04  0E7F               	movlw	127
 20899  015D06  65DF               	cpfsgt	_eusart2TxHead& (0+255),b	;volatile
 20900  015D08  D002               	goto	i2l379
 20901                           
 20902                           ; BSR set to: 1
 20903                           ;eusart2.c: 167: {
 20904                           ;eusart2.c: 168: eusart2TxHead = 0;
 20905  015D0A  0E00               	movlw	0
 20906  015D0C  6FDF               	movwf	_eusart2TxHead& (0+255),b	;volatile
 20907  015D0E                     i2l379:
 20908                           
 20909                           ; BSR set to: 1
 20910                           ;eusart2.c: 169: }
 20911                           ;eusart2.c: 170: eusart2TxBufferRemaining--;
 20912                           
 20913                           ; BSR set to: 1
 20914  015D0E  07DD               	decf	_eusart2TxBufferRemaining& (0+255),f,b	;volatile
 20915  015D10                     i2l378:
 20916                           
 20917                           ;eusart2.c: 171: }
 20918                           ;eusart2.c: 172: PIE3bits.TX2IE = 1;
 20919                           
 20920                           ; BSR set to: 1
 20921  015D10  010E               	movlb	14	; () banked
 20922  015D12  8D2C               	bsf	44,6,b	;volatile
 20923                           
 20924                           ; BSR set to: 14
 20925  015D14  0012               	return		;funcret
 20926  015D16                     __end_ofi2_EUSART2_Write:
 20927                           	opt stack 0
 20928                           tosu	equ	0xFFF
 20929                           tosh	equ	0xFFE
 20930                           tosl	equ	0xFFD
 20931                           pclatu	equ	0xFFB
 20932                           pclath	equ	0xFFA
 20933                           tblptru	equ	0xFF8
 20934                           tblptrh	equ	0xFF7
 20935                           tblptrl	equ	0xFF6
 20936                           tablat	equ	0xFF5
 20937                           prodh	equ	0xFF4
 20938                           prodl	equ	0xFF3
 20939                           intcon	equ	0xFF2
 20940                           postinc0	equ	0xFEE
 20941                           fsr0h	equ	0xFEA
 20942                           fsr0l	equ	0xFE9
 20943                           wreg	equ	0xFE8
 20944                           indf1	equ	0xFE7
 20945                           postdec1	equ	0xFE5
 20946                           fsr1h	equ	0xFE2
 20947                           fsr1l	equ	0xFE1
 20948                           bsr	equ	0xFE0
 20949                           indf2	equ	0xFDF
 20950                           postinc2	equ	0xFDE
 20951                           postdec2	equ	0xFDD
 20952                           fsr2h	equ	0xFDA
 20953                           fsr2l	equ	0xFD9
 20954                           status	equ	0xFD8
 20955                           
 20956 ;; *************** function i2_isdigit *****************
 20957 ;; Defined at:
 20958 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
 20959 ;; Parameters:    Size  Location     Type
 20960 ;;  c               1    wreg     unsigned char 
 20961 ;; Auto vars:     Size  Location     Type
 20962 ;;  c               1    2[COMRAM] unsigned char 
 20963 ;; Return value:  Size  Location     Type
 20964 ;;		None               void
 20965 ;; Registers used:
 20966 ;;		wreg, status,2, status,0
 20967 ;; Tracked objects:
 20968 ;;		On entry : 0/0
 20969 ;;		On exit  : 0/0
 20970 ;;		Unchanged: 0/0
 20971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 20972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20973 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20974 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20975 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20976 ;;Total ram usage:        3 bytes
 20977 ;; Hardware stack levels used:    1
 20978 ;; This function calls:
 20979 ;;		Nothing
 20980 ;; This function is called by:
 20981 ;;		i2_printf
 20982 ;; This function uses a non-reentrant model
 20983 ;;
 20984                           
 20985                           	psect	text77
 20986  0160FC                     __ptext77:
 20987                           	opt stack 0
 20988  0160FC                     i2_isdigit:
 20989                           	opt stack 15
 20990                           
 20991                           ; BSR set to: 14
 20992                           ;incstack = 0
 20993                           ;i2isdigit@c stored from wreg
 20994  0160FC  6E03               	movwf	i2isdigit@c,c
 20995  0160FE  0E00               	movlw	0
 20996  016100  6E02               	movwf	i2_isdigit$2489,c
 20997  016102  0E3A               	movlw	58
 20998  016104  6003               	cpfslt	i2isdigit@c,c
 20999  016106  D005               	goto	i2l1588
 21000  016108  0E2F               	movlw	47
 21001  01610A  6403               	cpfsgt	i2isdigit@c,c
 21002  01610C  D002               	goto	i2l1588
 21003  01610E  0E01               	movlw	1
 21004  016110  6E02               	movwf	i2_isdigit$2489,c
 21005  016112                     i2l1588:
 21006  016112  C002  F001         	movff	i2_isdigit$2489,??i2_isdigit
 21007  016116  3001               	rrcf	??i2_isdigit,w,c
 21008  016118  0012               	return	
 21009  01611A                     __end_ofi2_isdigit:
 21010                           	opt stack 0
 21011                           tosu	equ	0xFFF
 21012                           tosh	equ	0xFFE
 21013                           tosl	equ	0xFFD
 21014                           pclatu	equ	0xFFB
 21015                           pclath	equ	0xFFA
 21016                           tblptru	equ	0xFF8
 21017                           tblptrh	equ	0xFF7
 21018                           tblptrl	equ	0xFF6
 21019                           tablat	equ	0xFF5
 21020                           prodh	equ	0xFF4
 21021                           prodl	equ	0xFF3
 21022                           intcon	equ	0xFF2
 21023                           postinc0	equ	0xFEE
 21024                           fsr0h	equ	0xFEA
 21025                           fsr0l	equ	0xFE9
 21026                           wreg	equ	0xFE8
 21027                           indf1	equ	0xFE7
 21028                           postdec1	equ	0xFE5
 21029                           fsr1h	equ	0xFE2
 21030                           fsr1l	equ	0xFE1
 21031                           bsr	equ	0xFE0
 21032                           indf2	equ	0xFDF
 21033                           postinc2	equ	0xFDE
 21034                           postdec2	equ	0xFDD
 21035                           fsr2h	equ	0xFDA
 21036                           fsr2l	equ	0xFD9
 21037                           status	equ	0xFD8
 21038                           
 21039 ;; *************** function i2_fround *****************
 21040 ;; Defined at:
 21041 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
 21042 ;; Parameters:    Size  Location     Type
 21043 ;;  prec            1    wreg     unsigned char 
 21044 ;; Auto vars:     Size  Location     Type
 21045 ;;  prec            1   62[COMRAM] unsigned char 
 21046 ;; Return value:  Size  Location     Type
 21047 ;;                  3   53[COMRAM] unsigned char 
 21048 ;; Registers used:
 21049 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21050 ;; Tracked objects:
 21051 ;;		On entry : 0/0
 21052 ;;		On exit  : 0/0
 21053 ;;		Unchanged: 0/0
 21054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21055 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21056 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21058 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21059 ;;Total ram usage:       10 bytes
 21060 ;; Hardware stack levels used:    1
 21061 ;; Hardware stack levels required when called:    2
 21062 ;; This function calls:
 21063 ;;		i2___awdiv
 21064 ;;		i2___awmod
 21065 ;;		i2___ftmul
 21066 ;;		i2___wmul
 21067 ;; This function is called by:
 21068 ;;		i2_printf
 21069 ;; This function uses a non-reentrant model
 21070 ;;
 21071                           
 21072                           	psect	text78
 21073  012F1E                     __ptext78:
 21074                           	opt stack 0
 21075  012F1E                     i2_fround:
 21076                           	opt stack 13
 21077                           
 21078                           ;incstack = 0
 21079                           ;i2fround@prec stored from wreg
 21080  012F1E  6E3F               	movwf	i2fround@prec,c
 21081                           
 21082                           ;doprnt.c: 413: if(prec>=110)
 21083  012F20  0E6D               	movlw	109
 21084  012F22  643F               	cpfsgt	i2fround@prec,c
 21085  012F24  D0A8               	goto	i2l1054
 21086                           
 21087                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21088  012F26  0E00               	movlw	0
 21089  012F28  6E12               	movwf	i2___wmul@multiplicand+1,c
 21090  012F2A  0E03               	movlw	3
 21091  012F2C  6E11               	movwf	i2___wmul@multiplicand,c
 21092  012F2E  0E00               	movlw	0
 21093  012F30  6E0A               	movwf	i2___awdiv@divisor+1,c
 21094  012F32  0E0A               	movlw	10
 21095  012F34  6E09               	movwf	i2___awdiv@divisor,c
 21096  012F36  0E00               	movlw	0
 21097  012F38  6E04               	movwf	i2___awmod@divisor+1,c
 21098  012F3A  0E64               	movlw	100
 21099  012F3C  6E03               	movwf	i2___awmod@divisor,c
 21100  012F3E  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21101  012F42  6A02               	clrf	i2___awmod@dividend+1,c
 21102  012F44  EC38  F0AB         	call	i2___awmod	;wreg free
 21103  012F48  C001  F007         	movff	?i2___awmod,i2___awdiv@dividend
 21104  012F4C  C002  F008         	movff	?i2___awmod+1,i2___awdiv@dividend+1
 21105  012F50  ECCB  F0A9         	call	i2___awdiv	;wreg free
 21106  012F54  0E09               	movlw	9
 21107  012F56  2407               	addwf	?i2___awdiv,w,c
 21108  012F58  6E0F               	movwf	i2___wmul@multiplier,c
 21109  012F5A  0E00               	movlw	0
 21110  012F5C  2008               	addwfc	?i2___awdiv+1,w,c
 21111  012F5E  6E10               	movwf	i2___wmul@multiplier+1,c
 21112  012F60  EC36  F0B0         	call	i2___wmul	;wreg free
 21113  012F64  0E38               	movlw	low __npowers_
 21114  012F66  240F               	addwf	?i2___wmul,w,c
 21115  012F68  6EF6               	movwf	tblptrl,c
 21116  012F6A  0EF4               	movlw	high __npowers_
 21117  012F6C  2010               	addwfc	?i2___wmul+1,w,c
 21118  012F6E  6EF7               	movwf	tblptrh,c
 21119  012F70                     	if	1	;There are 3 active tblptr bytes
 21120  012F70  6AF8               	clrf	tblptru,c
 21121  012F72  0E00               	movlw	low (__mediumconst shr (0+16))
 21122  012F74  22F8               	addwfc	tblptru,f,c
 21123  012F76                     	endif
 21124  012F76  0009               	tblrd		*+
 21125  012F78  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21126  012F7C  0009               	tblrd		*+
 21127  012F7E  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21128  012F82  000A               	tblrd		*-
 21129  012F84  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21130  012F88  0E00               	movlw	0
 21131  012F8A  6E0A               	movwf	i2___awdiv@divisor+1,c
 21132  012F8C  0E64               	movlw	100
 21133  012F8E  6E09               	movwf	i2___awdiv@divisor,c
 21134  012F90  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 21135  012F94  6A08               	clrf	i2___awdiv@dividend+1,c
 21136  012F96  ECCB  F0A9         	call	i2___awdiv	;wreg free
 21137  012F9A  0E12               	movlw	18
 21138  012F9C  2407               	addwf	?i2___awdiv,w,c
 21139  012F9E  6E0F               	movwf	i2___wmul@multiplier,c
 21140  012FA0  0E00               	movlw	0
 21141  012FA2  2008               	addwfc	?i2___awdiv+1,w,c
 21142  012FA4  6E10               	movwf	i2___wmul@multiplier+1,c
 21143  012FA6  0E00               	movlw	0
 21144  012FA8  6E12               	movwf	i2___wmul@multiplicand+1,c
 21145  012FAA  0E03               	movlw	3
 21146  012FAC  6E11               	movwf	i2___wmul@multiplicand,c
 21147  012FAE  EC36  F0B0         	call	i2___wmul	;wreg free
 21148  012FB2  0E38               	movlw	low __npowers_
 21149  012FB4  240F               	addwf	?i2___wmul,w,c
 21150  012FB6  6EF6               	movwf	tblptrl,c
 21151  012FB8  0EF4               	movlw	high __npowers_
 21152  012FBA  2010               	addwfc	?i2___wmul+1,w,c
 21153  012FBC  6EF7               	movwf	tblptrh,c
 21154  012FBE                     	if	1	;There are 3 active tblptr bytes
 21155  012FBE  6AF8               	clrf	tblptru,c
 21156  012FC0  0E00               	movlw	low (__mediumconst shr (0+16))
 21157  012FC2  22F8               	addwfc	tblptru,f,c
 21158  012FC4                     	endif
 21159  012FC4  0009               	tblrd		*+
 21160  012FC6  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21161  012FCA  0009               	tblrd		*+
 21162  012FCC  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21163  012FD0  000A               	tblrd		*-
 21164  012FD2  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21165  012FD6  ECC3  F0A3         	call	i2___ftmul	;wreg free
 21166  012FDA  C027  F03C         	movff	?i2___ftmul,i2_fround$3326
 21167  012FDE  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3326+1
 21168  012FE2  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3326+2
 21169                           
 21170                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21171  012FE6  0E00               	movlw	0
 21172  012FE8  6E12               	movwf	i2___wmul@multiplicand+1,c
 21173  012FEA  0E03               	movlw	3
 21174  012FEC  6E11               	movwf	i2___wmul@multiplicand,c
 21175  012FEE  0E00               	movlw	0
 21176  012FF0  6E04               	movwf	i2___awmod@divisor+1,c
 21177  012FF2  0E0A               	movlw	10
 21178  012FF4  6E03               	movwf	i2___awmod@divisor,c
 21179  012FF6  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21180  012FFA  6A02               	clrf	i2___awmod@dividend+1,c
 21181  012FFC  EC38  F0AB         	call	i2___awmod	;wreg free
 21182  013000  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21183  013004  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21184  013008  EC36  F0B0         	call	i2___wmul	;wreg free
 21185  01300C  0E38               	movlw	low __npowers_
 21186  01300E  240F               	addwf	?i2___wmul,w,c
 21187  013010  6EF6               	movwf	tblptrl,c
 21188  013012  0EF4               	movlw	high __npowers_
 21189  013014  2010               	addwfc	?i2___wmul+1,w,c
 21190  013016  6EF7               	movwf	tblptrh,c
 21191  013018                     	if	1	;There are 3 active tblptr bytes
 21192  013018  6AF8               	clrf	tblptru,c
 21193  01301A  0E00               	movlw	low (__mediumconst shr (0+16))
 21194  01301C  22F8               	addwfc	tblptru,f,c
 21195  01301E                     	endif
 21196  01301E  0009               	tblrd		*+
 21197  013020  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21198  013024  0009               	tblrd		*+
 21199  013026  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21200  01302A  000A               	tblrd		*-
 21201  01302C  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21202  013030  C03C  F027         	movff	i2_fround$3326,i2___ftmul@f1
 21203  013034  C03D  F028         	movff	i2_fround$3326+1,i2___ftmul@f1+1
 21204  013038  C03E  F029         	movff	i2_fround$3326+2,i2___ftmul@f1+2
 21205  01303C  ECC3  F0A3         	call	i2___ftmul	;wreg free
 21206  013040  C027  F039         	movff	?i2___ftmul,i2_fround$3327
 21207  013044  C028  F03A         	movff	?i2___ftmul+1,i2_fround$3327+1
 21208  013048  C029  F03B         	movff	?i2___ftmul+2,i2_fround$3327+2
 21209                           
 21210                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
 21211  01304C  C039  F027         	movff	i2_fround$3327,i2___ftmul@f1
 21212  013050  C03A  F028         	movff	i2_fround$3327+1,i2___ftmul@f1+1
 21213  013054  C03B  F029         	movff	i2_fround$3327+2,i2___ftmul@f1+2
 21214  013058  0E00               	movlw	0
 21215  01305A  6E2A               	movwf	i2___ftmul@f2,c
 21216  01305C  0E00               	movlw	0
 21217  01305E  6E2B               	movwf	i2___ftmul@f2+1,c
 21218  013060  0E3F               	movlw	63
 21219  013062  6E2C               	movwf	i2___ftmul@f2+2,c
 21220  013064  ECC3  F0A3         	call	i2___ftmul	;wreg free
 21221  013068  C027  F036         	movff	?i2___ftmul,?i2_fround
 21222  01306C  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21223  013070  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21224  013074  0012               	return	
 21225  013076                     i2l1054:
 21226                           
 21227                           ;doprnt.c: 415: else if(prec > 10)
 21228  013076  0E0A               	movlw	10
 21229  013078  643F               	cpfsgt	i2fround@prec,c
 21230  01307A  D069               	goto	i2l1057
 21231                           
 21232                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 21233  01307C  0E00               	movlw	0
 21234  01307E  6E12               	movwf	i2___wmul@multiplicand+1,c
 21235  013080  0E03               	movlw	3
 21236  013082  6E11               	movwf	i2___wmul@multiplicand,c
 21237  013084  0E00               	movlw	0
 21238  013086  6E04               	movwf	i2___awmod@divisor+1,c
 21239  013088  0E0A               	movlw	10
 21240  01308A  6E03               	movwf	i2___awmod@divisor,c
 21241  01308C  C03F  F001         	movff	i2fround@prec,i2___awmod@dividend
 21242  013090  6A02               	clrf	i2___awmod@dividend+1,c
 21243  013092  EC38  F0AB         	call	i2___awmod	;wreg free
 21244  013096  C001  F00F         	movff	?i2___awmod,i2___wmul@multiplier
 21245  01309A  C002  F010         	movff	?i2___awmod+1,i2___wmul@multiplier+1
 21246  01309E  EC36  F0B0         	call	i2___wmul	;wreg free
 21247  0130A2  0E38               	movlw	low __npowers_
 21248  0130A4  240F               	addwf	?i2___wmul,w,c
 21249  0130A6  6EF6               	movwf	tblptrl,c
 21250  0130A8  0EF4               	movlw	high __npowers_
 21251  0130AA  2010               	addwfc	?i2___wmul+1,w,c
 21252  0130AC  6EF7               	movwf	tblptrh,c
 21253  0130AE                     	if	1	;There are 3 active tblptr bytes
 21254  0130AE  6AF8               	clrf	tblptru,c
 21255  0130B0  0E00               	movlw	low (__mediumconst shr (0+16))
 21256  0130B2  22F8               	addwfc	tblptru,f,c
 21257  0130B4                     	endif
 21258  0130B4  0009               	tblrd		*+
 21259  0130B6  CFF5 F02A          	movff	tablat,i2___ftmul@f2
 21260  0130BA  0009               	tblrd		*+
 21261  0130BC  CFF5 F02B          	movff	tablat,i2___ftmul@f2+1
 21262  0130C0  000A               	tblrd		*-
 21263  0130C2  CFF5 F02C          	movff	tablat,i2___ftmul@f2+2
 21264  0130C6  0E00               	movlw	0
 21265  0130C8  6E0A               	movwf	i2___awdiv@divisor+1,c
 21266  0130CA  0E0A               	movlw	10
 21267  0130CC  6E09               	movwf	i2___awdiv@divisor,c
 21268  0130CE  C03F  F007         	movff	i2fround@prec,i2___awdiv@dividend
 21269  0130D2  6A08               	clrf	i2___awdiv@dividend+1,c
 21270  0130D4  ECCB  F0A9         	call	i2___awdiv	;wreg free
 21271  0130D8  0E09               	movlw	9
 21272  0130DA  2407               	addwf	?i2___awdiv,w,c
 21273  0130DC  6E0F               	movwf	i2___wmul@multiplier,c
 21274  0130DE  0E00               	movlw	0
 21275  0130E0  2008               	addwfc	?i2___awdiv+1,w,c
 21276  0130E2  6E10               	movwf	i2___wmul@multiplier+1,c
 21277  0130E4  0E00               	movlw	0
 21278  0130E6  6E12               	movwf	i2___wmul@multiplicand+1,c
 21279  0130E8  0E03               	movlw	3
 21280  0130EA  6E11               	movwf	i2___wmul@multiplicand,c
 21281  0130EC  EC36  F0B0         	call	i2___wmul	;wreg free
 21282  0130F0  0E38               	movlw	low __npowers_
 21283  0130F2  240F               	addwf	?i2___wmul,w,c
 21284  0130F4  6EF6               	movwf	tblptrl,c
 21285  0130F6  0EF4               	movlw	high __npowers_
 21286  0130F8  2010               	addwfc	?i2___wmul+1,w,c
 21287  0130FA  6EF7               	movwf	tblptrh,c
 21288  0130FC                     	if	1	;There are 3 active tblptr bytes
 21289  0130FC  6AF8               	clrf	tblptru,c
 21290  0130FE  0E00               	movlw	low (__mediumconst shr (0+16))
 21291  013100  22F8               	addwfc	tblptru,f,c
 21292  013102                     	endif
 21293  013102  0009               	tblrd		*+
 21294  013104  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21295  013108  0009               	tblrd		*+
 21296  01310A  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21297  01310E  000A               	tblrd		*-
 21298  013110  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21299  013114  ECC3  F0A3         	call	i2___ftmul	;wreg free
 21300  013118  C027  F03C         	movff	?i2___ftmul,i2_fround$3326
 21301  01311C  C028  F03D         	movff	?i2___ftmul+1,i2_fround$3326+1
 21302  013120  C029  F03E         	movff	?i2___ftmul+2,i2_fround$3326+2
 21303                           
 21304                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
 21305  013124  C03C  F027         	movff	i2_fround$3326,i2___ftmul@f1
 21306  013128  C03D  F028         	movff	i2_fround$3326+1,i2___ftmul@f1+1
 21307  01312C  C03E  F029         	movff	i2_fround$3326+2,i2___ftmul@f1+2
 21308  013130  0E00               	movlw	0
 21309  013132  6E2A               	movwf	i2___ftmul@f2,c
 21310  013134  0E00               	movlw	0
 21311  013136  6E2B               	movwf	i2___ftmul@f2+1,c
 21312  013138  0E3F               	movlw	63
 21313  01313A  6E2C               	movwf	i2___ftmul@f2+2,c
 21314  01313C  ECC3  F0A3         	call	i2___ftmul	;wreg free
 21315  013140  C027  F036         	movff	?i2___ftmul,?i2_fround
 21316  013144  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21317  013148  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21318  01314C  0012               	return	
 21319  01314E                     i2l1057:
 21320                           
 21321                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
 21322  01314E  503F               	movf	i2fround@prec,w,c
 21323  013150  0D03               	mullw	3
 21324  013152  0E38               	movlw	low __npowers_
 21325  013154  24F3               	addwf	prodl,w,c
 21326  013156  6EF6               	movwf	tblptrl,c
 21327  013158  0EF4               	movlw	high __npowers_
 21328  01315A  20F4               	addwfc	prodh,w,c
 21329  01315C  6EF7               	movwf	tblptrh,c
 21330  01315E                     	if	1	;There are 3 active tblptr bytes
 21331  01315E  6AF8               	clrf	tblptru,c
 21332  013160  0E00               	movlw	low (__mediumconst shr (0+16))
 21333  013162  22F8               	addwfc	tblptru,f,c
 21334  013164                     	endif
 21335  013164  0009               	tblrd		*+
 21336  013166  CFF5 F027          	movff	tablat,i2___ftmul@f1
 21337  01316A  0009               	tblrd		*+
 21338  01316C  CFF5 F028          	movff	tablat,i2___ftmul@f1+1
 21339  013170  000A               	tblrd		*-
 21340  013172  CFF5 F029          	movff	tablat,i2___ftmul@f1+2
 21341  013176  0E00               	movlw	0
 21342  013178  6E2A               	movwf	i2___ftmul@f2,c
 21343  01317A  0E00               	movlw	0
 21344  01317C  6E2B               	movwf	i2___ftmul@f2+1,c
 21345  01317E  0E3F               	movlw	63
 21346  013180  6E2C               	movwf	i2___ftmul@f2+2,c
 21347  013182  ECC3  F0A3         	call	i2___ftmul	;wreg free
 21348  013186  C027  F036         	movff	?i2___ftmul,?i2_fround
 21349  01318A  C028  F037         	movff	?i2___ftmul+1,?i2_fround+1
 21350  01318E  C029  F038         	movff	?i2___ftmul+2,?i2_fround+2
 21351  013192  0012               	return	
 21352  013194                     __end_ofi2_fround:
 21353                           	opt stack 0
 21354                           tosu	equ	0xFFF
 21355                           tosh	equ	0xFFE
 21356                           tosl	equ	0xFFD
 21357                           pclatu	equ	0xFFB
 21358                           pclath	equ	0xFFA
 21359                           tblptru	equ	0xFF8
 21360                           tblptrh	equ	0xFF7
 21361                           tblptrl	equ	0xFF6
 21362                           tablat	equ	0xFF5
 21363                           prodh	equ	0xFF4
 21364                           prodl	equ	0xFF3
 21365                           intcon	equ	0xFF2
 21366                           postinc0	equ	0xFEE
 21367                           fsr0h	equ	0xFEA
 21368                           fsr0l	equ	0xFE9
 21369                           wreg	equ	0xFE8
 21370                           indf1	equ	0xFE7
 21371                           postdec1	equ	0xFE5
 21372                           fsr1h	equ	0xFE2
 21373                           fsr1l	equ	0xFE1
 21374                           bsr	equ	0xFE0
 21375                           indf2	equ	0xFDF
 21376                           postinc2	equ	0xFDE
 21377                           postdec2	equ	0xFDD
 21378                           fsr2h	equ	0xFDA
 21379                           fsr2l	equ	0xFD9
 21380                           status	equ	0xFD8
 21381                           
 21382 ;; *************** function i2___awmod *****************
 21383 ;; Defined at:
 21384 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 21385 ;; Parameters:    Size  Location     Type
 21386 ;;  dividend        2    0[COMRAM] int 
 21387 ;;  divisor         2    2[COMRAM] int 
 21388 ;; Auto vars:     Size  Location     Type
 21389 ;;  __awmod         1    5[COMRAM] unsigned char 
 21390 ;;  __awmod         1    4[COMRAM] unsigned char 
 21391 ;; Return value:  Size  Location     Type
 21392 ;;                  2    0[COMRAM] int 
 21393 ;; Registers used:
 21394 ;;		wreg, status,2, status,0
 21395 ;; Tracked objects:
 21396 ;;		On entry : 0/0
 21397 ;;		On exit  : 0/0
 21398 ;;		Unchanged: 0/0
 21399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21401 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21403 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21404 ;;Total ram usage:        6 bytes
 21405 ;; Hardware stack levels used:    1
 21406 ;; This function calls:
 21407 ;;		Nothing
 21408 ;; This function is called by:
 21409 ;;		i2_fround
 21410 ;;		i2_scale
 21411 ;; This function uses a non-reentrant model
 21412 ;;
 21413                           
 21414                           	psect	text79
 21415  015670                     __ptext79:
 21416                           	opt stack 0
 21417  015670                     i2___awmod:
 21418                           	opt stack 14
 21419                           
 21420                           ;incstack = 0
 21421  015670  0E00               	movlw	0
 21422  015672  6E06               	movwf	i2___awmod@sign,c
 21423  015674  AE02               	btfss	i2___awmod@dividend+1,7,c
 21424  015676  D006               	goto	i2l1393
 21425  015678  6C01               	negf	i2___awmod@dividend,c
 21426  01567A  1E02               	comf	i2___awmod@dividend+1,f,c
 21427  01567C  B0D8               	btfsc	status,0,c
 21428  01567E  2A02               	incf	i2___awmod@dividend+1,f,c
 21429  015680  0E01               	movlw	1
 21430  015682  6E06               	movwf	i2___awmod@sign,c
 21431  015684                     i2l1393:
 21432  015684  AE04               	btfss	i2___awmod@divisor+1,7,c
 21433  015686  D004               	goto	i2l1394
 21434  015688  6C03               	negf	i2___awmod@divisor,c
 21435  01568A  1E04               	comf	i2___awmod@divisor+1,f,c
 21436  01568C  B0D8               	btfsc	status,0,c
 21437  01568E  2A04               	incf	i2___awmod@divisor+1,f,c
 21438  015690                     i2l1394:
 21439  015690  5003               	movf	i2___awmod@divisor,w,c
 21440  015692  1004               	iorwf	i2___awmod@divisor+1,w,c
 21441  015694  B4D8               	btfsc	status,2,c
 21442  015696  D018               	goto	i2l1401
 21443  015698  0E01               	movlw	1
 21444  01569A  6E05               	movwf	i2___awmod@counter,c
 21445  01569C  D004               	goto	i2l1396
 21446  01569E  90D8               	bcf	status,0,c
 21447  0156A0  3603               	rlcf	i2___awmod@divisor,f,c
 21448  0156A2  3604               	rlcf	i2___awmod@divisor+1,f,c
 21449  0156A4  2A05               	incf	i2___awmod@counter,f,c
 21450  0156A6                     i2l1396:
 21451  0156A6  AE04               	btfss	i2___awmod@divisor+1,7,c
 21452  0156A8  D7FA               	goto	i2l1397
 21453  0156AA                     i2u1097_40:
 21454  0156AA  5003               	movf	i2___awmod@divisor,w,c
 21455  0156AC  5C01               	subwf	i2___awmod@dividend,w,c
 21456  0156AE  5004               	movf	i2___awmod@divisor+1,w,c
 21457  0156B0  5802               	subwfb	i2___awmod@dividend+1,w,c
 21458  0156B2  A0D8               	btfss	status,0,c
 21459  0156B4  D004               	goto	i2l1400
 21460  0156B6  5003               	movf	i2___awmod@divisor,w,c
 21461  0156B8  5E01               	subwf	i2___awmod@dividend,f,c
 21462  0156BA  5004               	movf	i2___awmod@divisor+1,w,c
 21463  0156BC  5A02               	subwfb	i2___awmod@dividend+1,f,c
 21464  0156BE                     i2l1400:
 21465  0156BE  90D8               	bcf	status,0,c
 21466  0156C0  3204               	rrcf	i2___awmod@divisor+1,f,c
 21467  0156C2  3203               	rrcf	i2___awmod@divisor,f,c
 21468  0156C4  2E05               	decfsz	i2___awmod@counter,f,c
 21469  0156C6  D7F1               	goto	i2u1097_40
 21470  0156C8                     i2l1401:
 21471  0156C8  5006               	movf	i2___awmod@sign,w,c
 21472  0156CA  B4D8               	btfsc	status,2,c
 21473  0156CC  D004               	goto	i2l1402
 21474  0156CE  6C01               	negf	i2___awmod@dividend,c
 21475  0156D0  1E02               	comf	i2___awmod@dividend+1,f,c
 21476  0156D2  B0D8               	btfsc	status,0,c
 21477  0156D4  2A02               	incf	i2___awmod@dividend+1,f,c
 21478  0156D6                     i2l1402:
 21479  0156D6  C001  F001         	movff	i2___awmod@dividend,?i2___awmod
 21480  0156DA  C002  F002         	movff	i2___awmod@dividend+1,?i2___awmod+1
 21481  0156DE  0012               	return	
 21482  0156E0                     __end_ofi2___awmod:
 21483                           	opt stack 0
 21484                           tosu	equ	0xFFF
 21485                           tosh	equ	0xFFE
 21486                           tosl	equ	0xFFD
 21487                           pclatu	equ	0xFFB
 21488                           pclath	equ	0xFFA
 21489                           tblptru	equ	0xFF8
 21490                           tblptrh	equ	0xFF7
 21491                           tblptrl	equ	0xFF6
 21492                           tablat	equ	0xFF5
 21493                           prodh	equ	0xFF4
 21494                           prodl	equ	0xFF3
 21495                           intcon	equ	0xFF2
 21496                           postinc0	equ	0xFEE
 21497                           fsr0h	equ	0xFEA
 21498                           fsr0l	equ	0xFE9
 21499                           wreg	equ	0xFE8
 21500                           indf1	equ	0xFE7
 21501                           postdec1	equ	0xFE5
 21502                           fsr1h	equ	0xFE2
 21503                           fsr1l	equ	0xFE1
 21504                           bsr	equ	0xFE0
 21505                           indf2	equ	0xFDF
 21506                           postinc2	equ	0xFDE
 21507                           postdec2	equ	0xFDD
 21508                           fsr2h	equ	0xFDA
 21509                           fsr2l	equ	0xFD9
 21510                           status	equ	0xFD8
 21511                           
 21512 ;; *************** function i2___awdiv *****************
 21513 ;; Defined at:
 21514 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
 21515 ;; Parameters:    Size  Location     Type
 21516 ;;  dividend        2    6[COMRAM] int 
 21517 ;;  divisor         2    8[COMRAM] int 
 21518 ;; Auto vars:     Size  Location     Type
 21519 ;;  __awdiv         2   12[COMRAM] int 
 21520 ;;  __awdiv         1   11[COMRAM] unsigned char 
 21521 ;;  __awdiv         1   10[COMRAM] unsigned char 
 21522 ;; Return value:  Size  Location     Type
 21523 ;;                  2    6[COMRAM] int 
 21524 ;; Registers used:
 21525 ;;		wreg, status,2, status,0
 21526 ;; Tracked objects:
 21527 ;;		On entry : 0/0
 21528 ;;		On exit  : 0/0
 21529 ;;		Unchanged: 0/0
 21530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21531 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21532 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21534 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21535 ;;Total ram usage:        8 bytes
 21536 ;; Hardware stack levels used:    1
 21537 ;; This function calls:
 21538 ;;		Nothing
 21539 ;; This function is called by:
 21540 ;;		i2_fround
 21541 ;;		i2_scale
 21542 ;;		i2_printf
 21543 ;; This function uses a non-reentrant model
 21544 ;;
 21545                           
 21546                           	psect	text80
 21547  015396                     __ptext80:
 21548                           	opt stack 0
 21549  015396                     i2___awdiv:
 21550                           	opt stack 14
 21551                           
 21552                           ;incstack = 0
 21553  015396  0E00               	movlw	0
 21554  015398  6E0C               	movwf	i2___awdiv@sign,c
 21555  01539A  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 21556  01539C  D006               	goto	i2l1380
 21557  01539E  6C09               	negf	i2___awdiv@divisor,c
 21558  0153A0  1E0A               	comf	i2___awdiv@divisor+1,f,c
 21559  0153A2  B0D8               	btfsc	status,0,c
 21560  0153A4  2A0A               	incf	i2___awdiv@divisor+1,f,c
 21561  0153A6  0E01               	movlw	1
 21562  0153A8  6E0C               	movwf	i2___awdiv@sign,c
 21563  0153AA                     i2l1380:
 21564  0153AA  AE08               	btfss	i2___awdiv@dividend+1,7,c
 21565  0153AC  D006               	goto	i2l1381
 21566  0153AE  6C07               	negf	i2___awdiv@dividend,c
 21567  0153B0  1E08               	comf	i2___awdiv@dividend+1,f,c
 21568  0153B2  B0D8               	btfsc	status,0,c
 21569  0153B4  2A08               	incf	i2___awdiv@dividend+1,f,c
 21570  0153B6  0E01               	movlw	1
 21571  0153B8  1A0C               	xorwf	i2___awdiv@sign,f,c
 21572  0153BA                     i2l1381:
 21573  0153BA  0E00               	movlw	0
 21574  0153BC  6E0E               	movwf	i2___awdiv@quotient+1,c
 21575  0153BE  0E00               	movlw	0
 21576  0153C0  6E0D               	movwf	i2___awdiv@quotient,c
 21577  0153C2  5009               	movf	i2___awdiv@divisor,w,c
 21578  0153C4  100A               	iorwf	i2___awdiv@divisor+1,w,c
 21579  0153C6  B4D8               	btfsc	status,2,c
 21580  0153C8  D01C               	goto	i2l1388
 21581  0153CA  0E01               	movlw	1
 21582  0153CC  6E0B               	movwf	i2___awdiv@counter,c
 21583  0153CE  D004               	goto	i2l1383
 21584  0153D0  90D8               	bcf	status,0,c
 21585  0153D2  3609               	rlcf	i2___awdiv@divisor,f,c
 21586  0153D4  360A               	rlcf	i2___awdiv@divisor+1,f,c
 21587  0153D6  2A0B               	incf	i2___awdiv@counter,f,c
 21588  0153D8                     i2l1383:
 21589  0153D8  AE0A               	btfss	i2___awdiv@divisor+1,7,c
 21590  0153DA  D7FA               	goto	i2l1384
 21591  0153DC                     i2u1091_40:
 21592  0153DC  90D8               	bcf	status,0,c
 21593  0153DE  360D               	rlcf	i2___awdiv@quotient,f,c
 21594  0153E0  360E               	rlcf	i2___awdiv@quotient+1,f,c
 21595  0153E2  5009               	movf	i2___awdiv@divisor,w,c
 21596  0153E4  5C07               	subwf	i2___awdiv@dividend,w,c
 21597  0153E6  500A               	movf	i2___awdiv@divisor+1,w,c
 21598  0153E8  5808               	subwfb	i2___awdiv@dividend+1,w,c
 21599  0153EA  A0D8               	btfss	status,0,c
 21600  0153EC  D005               	goto	i2l1387
 21601  0153EE  5009               	movf	i2___awdiv@divisor,w,c
 21602  0153F0  5E07               	subwf	i2___awdiv@dividend,f,c
 21603  0153F2  500A               	movf	i2___awdiv@divisor+1,w,c
 21604  0153F4  5A08               	subwfb	i2___awdiv@dividend+1,f,c
 21605  0153F6  800D               	bsf	i2___awdiv@quotient,0,c
 21606  0153F8                     i2l1387:
 21607  0153F8  90D8               	bcf	status,0,c
 21608  0153FA  320A               	rrcf	i2___awdiv@divisor+1,f,c
 21609  0153FC  3209               	rrcf	i2___awdiv@divisor,f,c
 21610  0153FE  2E0B               	decfsz	i2___awdiv@counter,f,c
 21611  015400  D7ED               	goto	i2u1091_40
 21612  015402                     i2l1388:
 21613  015402  500C               	movf	i2___awdiv@sign,w,c
 21614  015404  B4D8               	btfsc	status,2,c
 21615  015406  D004               	goto	i2l1389
 21616  015408  6C0D               	negf	i2___awdiv@quotient,c
 21617  01540A  1E0E               	comf	i2___awdiv@quotient+1,f,c
 21618  01540C  B0D8               	btfsc	status,0,c
 21619  01540E  2A0E               	incf	i2___awdiv@quotient+1,f,c
 21620  015410                     i2l1389:
 21621  015410  C00D  F007         	movff	i2___awdiv@quotient,?i2___awdiv
 21622  015414  C00E  F008         	movff	i2___awdiv@quotient+1,?i2___awdiv+1
 21623  015418  0012               	return	
 21624  01541A                     __end_ofi2___awdiv:
 21625                           	opt stack 0
 21626                           tosu	equ	0xFFF
 21627                           tosh	equ	0xFFE
 21628                           tosl	equ	0xFFD
 21629                           pclatu	equ	0xFFB
 21630                           pclath	equ	0xFFA
 21631                           tblptru	equ	0xFF8
 21632                           tblptrh	equ	0xFF7
 21633                           tblptrl	equ	0xFF6
 21634                           tablat	equ	0xFF5
 21635                           prodh	equ	0xFF4
 21636                           prodl	equ	0xFF3
 21637                           intcon	equ	0xFF2
 21638                           postinc0	equ	0xFEE
 21639                           fsr0h	equ	0xFEA
 21640                           fsr0l	equ	0xFE9
 21641                           wreg	equ	0xFE8
 21642                           indf1	equ	0xFE7
 21643                           postdec1	equ	0xFE5
 21644                           fsr1h	equ	0xFE2
 21645                           fsr1l	equ	0xFE1
 21646                           bsr	equ	0xFE0
 21647                           indf2	equ	0xFDF
 21648                           postinc2	equ	0xFDE
 21649                           postdec2	equ	0xFDD
 21650                           fsr2h	equ	0xFDA
 21651                           fsr2l	equ	0xFD9
 21652                           status	equ	0xFD8
 21653                           
 21654 ;; *************** function i2__tdiv_to_l_ *****************
 21655 ;; Defined at:
 21656 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
 21657 ;; Parameters:    Size  Location     Type
 21658 ;;  f1              3    0[COMRAM] float 
 21659 ;;  f2              3    3[COMRAM] float 
 21660 ;; Auto vars:     Size  Location     Type
 21661 ;;  _tdiv_to_l_     4    9[COMRAM] unsigned long 
 21662 ;;  _tdiv_to_l_     1   14[COMRAM] unsigned char 
 21663 ;;  _tdiv_to_l_     1   13[COMRAM] unsigned char 
 21664 ;; Return value:  Size  Location     Type
 21665 ;;                  4    0[COMRAM] unsigned long 
 21666 ;; Registers used:
 21667 ;;		wreg, status,2, status,0
 21668 ;; Tracked objects:
 21669 ;;		On entry : 0/0
 21670 ;;		On exit  : 0/0
 21671 ;;		Unchanged: 0/0
 21672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21673 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21674 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21675 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21676 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21677 ;;Total ram usage:       15 bytes
 21678 ;; Hardware stack levels used:    1
 21679 ;; This function calls:
 21680 ;;		Nothing
 21681 ;; This function is called by:
 21682 ;;		i2_printf
 21683 ;; This function uses a non-reentrant model
 21684 ;;
 21685                           
 21686                           	psect	text81
 21687  014004                     __ptext81:
 21688                           	opt stack 0
 21689  014004                     i2__tdiv_to_l_:
 21690                           	opt stack 15
 21691                           
 21692                           ;incstack = 0
 21693  014004  C003  F007         	movff	i2__tdiv_to_l_@f1+2,??i2__tdiv_to_l_
 21694  014008  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 21695  01400A  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 21696  01400C  3402               	rlcf	i2__tdiv_to_l_@f1+1,w,c
 21697  01400E  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 21698  014010  E301               	bnc	u1131_41
 21699  014012  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 21700  014014                     u1131_41:
 21701  014014  5007               	movf	??i2__tdiv_to_l_,w,c
 21702  014016  6E0F               	movwf	i2__tdiv_to_l_@exp1,c
 21703  014018  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21704  01401A  A4D8               	btfss	status,2,c
 21705  01401C  D009               	goto	i2l1528
 21706  01401E  0E00               	movlw	0
 21707  014020  6E01               	movwf	?i2__tdiv_to_l_,c
 21708  014022  0E00               	movlw	0
 21709  014024  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21710  014026  0E00               	movlw	0
 21711  014028  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21712  01402A  0E00               	movlw	0
 21713  01402C  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21714  01402E  0012               	return	
 21715  014030                     i2l1528:
 21716  014030  C006  F007         	movff	i2__tdiv_to_l_@f2+2,??i2__tdiv_to_l_
 21717  014034  6A08               	clrf	(??i2__tdiv_to_l_+1)& (0+255),c
 21718  014036  6A09               	clrf	(??i2__tdiv_to_l_+2)& (0+255),c
 21719  014038  3405               	rlcf	i2__tdiv_to_l_@f2+1,w,c
 21720  01403A  3607               	rlcf	??i2__tdiv_to_l_& (0+255),f,c
 21721  01403C  E301               	bnc	u1133_41
 21722  01403E  8008               	bsf	(??i2__tdiv_to_l_+1)& (0+255),0,c
 21723  014040                     u1133_41:
 21724  014040  5007               	movf	??i2__tdiv_to_l_,w,c
 21725  014042  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 21726  014044  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 21727  014046  A4D8               	btfss	status,2,c
 21728  014048  D009               	goto	i2l1530
 21729  01404A  0E00               	movlw	0
 21730  01404C  6E01               	movwf	?i2__tdiv_to_l_,c
 21731  01404E  0E00               	movlw	0
 21732  014050  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21733  014052  0E00               	movlw	0
 21734  014054  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21735  014056  0E00               	movlw	0
 21736  014058  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21737  01405A  0012               	return	
 21738  01405C                     i2l1530:
 21739  01405C  8E02               	bsf	i2__tdiv_to_l_@f1+1,7,c
 21740  01405E  0EFF               	movlw	255
 21741  014060  1601               	andwf	i2__tdiv_to_l_@f1,f,c
 21742  014062  0EFF               	movlw	255
 21743  014064  1602               	andwf	i2__tdiv_to_l_@f1+1,f,c
 21744  014066  0E00               	movlw	0
 21745  014068  1603               	andwf	i2__tdiv_to_l_@f1+2,f,c
 21746  01406A  8E05               	bsf	i2__tdiv_to_l_@f2+1,7,c
 21747  01406C  0EFF               	movlw	255
 21748  01406E  1604               	andwf	i2__tdiv_to_l_@f2,f,c
 21749  014070  0EFF               	movlw	255
 21750  014072  1605               	andwf	i2__tdiv_to_l_@f2+1,f,c
 21751  014074  0E00               	movlw	0
 21752  014076  1606               	andwf	i2__tdiv_to_l_@f2+2,f,c
 21753  014078  0E00               	movlw	0
 21754  01407A  6E0A               	movwf	i2__tdiv_to_l_@quot,c
 21755  01407C  0E00               	movlw	0
 21756  01407E  6E0B               	movwf	i2__tdiv_to_l_@quot+1,c
 21757  014080  0E00               	movlw	0
 21758  014082  6E0C               	movwf	i2__tdiv_to_l_@quot+2,c
 21759  014084  0E00               	movlw	0
 21760  014086  6E0D               	movwf	i2__tdiv_to_l_@quot+3,c
 21761  014088  0E7F               	movlw	127
 21762  01408A  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 21763  01408C  500E               	movf	i2__tdiv_to_l_@cntr,w,c
 21764  01408E  0F98               	addlw	152
 21765  014090  5E0F               	subwf	i2__tdiv_to_l_@exp1,f,c
 21766  014092  0E18               	movlw	24
 21767  014094  6E0E               	movwf	i2__tdiv_to_l_@cntr,c
 21768  014096                     i2l1531:
 21769  014096  90D8               	bcf	status,0,c
 21770  014098  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 21771  01409A  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 21772  01409C  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 21773  01409E  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 21774  0140A0  5004               	movf	i2__tdiv_to_l_@f2,w,c
 21775  0140A2  5C01               	subwf	i2__tdiv_to_l_@f1,w,c
 21776  0140A4  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 21777  0140A6  5802               	subwfb	i2__tdiv_to_l_@f1+1,w,c
 21778  0140A8  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 21779  0140AA  5803               	subwfb	i2__tdiv_to_l_@f1+2,w,c
 21780  0140AC  A0D8               	btfss	status,0,c
 21781  0140AE  D007               	goto	i2l1532
 21782  0140B0  5004               	movf	i2__tdiv_to_l_@f2,w,c
 21783  0140B2  5E01               	subwf	i2__tdiv_to_l_@f1,f,c
 21784  0140B4  5005               	movf	i2__tdiv_to_l_@f2+1,w,c
 21785  0140B6  5A02               	subwfb	i2__tdiv_to_l_@f1+1,f,c
 21786  0140B8  5006               	movf	i2__tdiv_to_l_@f2+2,w,c
 21787  0140BA  5A03               	subwfb	i2__tdiv_to_l_@f1+2,f,c
 21788  0140BC  800A               	bsf	i2__tdiv_to_l_@quot,0,c
 21789  0140BE                     i2l1532:
 21790  0140BE  90D8               	bcf	status,0,c
 21791  0140C0  3601               	rlcf	i2__tdiv_to_l_@f1,f,c
 21792  0140C2  3602               	rlcf	i2__tdiv_to_l_@f1+1,f,c
 21793  0140C4  3603               	rlcf	i2__tdiv_to_l_@f1+2,f,c
 21794  0140C6  2E0E               	decfsz	i2__tdiv_to_l_@cntr,f,c
 21795  0140C8  D7E6               	goto	i2l1531
 21796  0140CA  AE0F               	btfss	i2__tdiv_to_l_@exp1,7,c
 21797  0140CC  D016               	goto	i2l1534
 21798  0140CE  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21799  0140D0  0A80               	xorlw	128
 21800  0140D2  0F97               	addlw	151
 21801  0140D4  B0D8               	btfsc	status,0,c
 21802  0140D6  D009               	goto	i2l1535
 21803  0140D8  0E00               	movlw	0
 21804  0140DA  6E01               	movwf	?i2__tdiv_to_l_,c
 21805  0140DC  0E00               	movlw	0
 21806  0140DE  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21807  0140E0  0E00               	movlw	0
 21808  0140E2  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21809  0140E4  0E00               	movlw	0
 21810  0140E6  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21811  0140E8  0012               	return	
 21812  0140EA                     i2l1535:
 21813  0140EA  90D8               	bcf	status,0,c
 21814  0140EC  320D               	rrcf	i2__tdiv_to_l_@quot+3,f,c
 21815  0140EE  320C               	rrcf	i2__tdiv_to_l_@quot+2,f,c
 21816  0140F0  320B               	rrcf	i2__tdiv_to_l_@quot+1,f,c
 21817  0140F2  320A               	rrcf	i2__tdiv_to_l_@quot,f,c
 21818  0140F4  3E0F               	incfsz	i2__tdiv_to_l_@exp1,f,c
 21819  0140F6  D7F9               	goto	i2l1535
 21820  0140F8  D015               	goto	i2u1139_40
 21821  0140FA                     i2l1534:
 21822  0140FA  0E17               	movlw	23
 21823  0140FC  640F               	cpfsgt	i2__tdiv_to_l_@exp1,c
 21824  0140FE  D00F               	goto	i2l1540
 21825  014100  0E00               	movlw	0
 21826  014102  6E01               	movwf	?i2__tdiv_to_l_,c
 21827  014104  0E00               	movlw	0
 21828  014106  6E02               	movwf	?i2__tdiv_to_l_+1,c
 21829  014108  0E00               	movlw	0
 21830  01410A  6E03               	movwf	?i2__tdiv_to_l_+2,c
 21831  01410C  0E00               	movlw	0
 21832  01410E  6E04               	movwf	?i2__tdiv_to_l_+3,c
 21833  014110  0012               	return	
 21834  014112  90D8               	bcf	status,0,c
 21835  014114  360A               	rlcf	i2__tdiv_to_l_@quot,f,c
 21836  014116  360B               	rlcf	i2__tdiv_to_l_@quot+1,f,c
 21837  014118  360C               	rlcf	i2__tdiv_to_l_@quot+2,f,c
 21838  01411A  360D               	rlcf	i2__tdiv_to_l_@quot+3,f,c
 21839  01411C  060F               	decf	i2__tdiv_to_l_@exp1,f,c
 21840  01411E                     i2l1540:
 21841  01411E  500F               	movf	i2__tdiv_to_l_@exp1,w,c
 21842  014120  A4D8               	btfss	status,2,c
 21843  014122  D7F7               	goto	i2l1541
 21844  014124                     i2u1139_40:
 21845  014124  C00A  F001         	movff	i2__tdiv_to_l_@quot,?i2__tdiv_to_l_
 21846  014128  C00B  F002         	movff	i2__tdiv_to_l_@quot+1,?i2__tdiv_to_l_+1
 21847  01412C  C00C  F003         	movff	i2__tdiv_to_l_@quot+2,?i2__tdiv_to_l_+2
 21848  014130  C00D  F004         	movff	i2__tdiv_to_l_@quot+3,?i2__tdiv_to_l_+3
 21849  014134  0012               	return		;funcret
 21850  014136                     __end_ofi2__tdiv_to_l_:
 21851                           	opt stack 0
 21852                           tosu	equ	0xFFF
 21853                           tosh	equ	0xFFE
 21854                           tosl	equ	0xFFD
 21855                           pclatu	equ	0xFFB
 21856                           pclath	equ	0xFFA
 21857                           tblptru	equ	0xFF8
 21858                           tblptrh	equ	0xFF7
 21859                           tblptrl	equ	0xFF6
 21860                           tablat	equ	0xFF5
 21861                           prodh	equ	0xFF4
 21862                           prodl	equ	0xFF3
 21863                           intcon	equ	0xFF2
 21864                           postinc0	equ	0xFEE
 21865                           fsr0h	equ	0xFEA
 21866                           fsr0l	equ	0xFE9
 21867                           wreg	equ	0xFE8
 21868                           indf1	equ	0xFE7
 21869                           postdec1	equ	0xFE5
 21870                           fsr1h	equ	0xFE2
 21871                           fsr1l	equ	0xFE1
 21872                           bsr	equ	0xFE0
 21873                           indf2	equ	0xFDF
 21874                           postinc2	equ	0xFDE
 21875                           postdec2	equ	0xFDD
 21876                           fsr2h	equ	0xFDA
 21877                           fsr2l	equ	0xFD9
 21878                           status	equ	0xFD8
 21879                           
 21880 ;; *************** function i2__div_to_l_ *****************
 21881 ;; Defined at:
 21882 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 21883 ;; Parameters:    Size  Location     Type
 21884 ;;  f1              3    0[COMRAM] unsigned long 
 21885 ;;  f2              3    3[COMRAM] unsigned long 
 21886 ;; Auto vars:     Size  Location     Type
 21887 ;;  _div_to_l_      4    6[COMRAM] unsigned long 
 21888 ;;  _div_to_l_      1   11[COMRAM] unsigned char 
 21889 ;;  _div_to_l_      1   10[COMRAM] unsigned char 
 21890 ;; Return value:  Size  Location     Type
 21891 ;;                  4    0[COMRAM] unsigned long 
 21892 ;; Registers used:
 21893 ;;		wreg, status,2, status,0
 21894 ;; Tracked objects:
 21895 ;;		On entry : 0/0
 21896 ;;		On exit  : 0/0
 21897 ;;		Unchanged: 0/0
 21898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 21899 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21900 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21902 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21903 ;;Total ram usage:       12 bytes
 21904 ;; Hardware stack levels used:    1
 21905 ;; This function calls:
 21906 ;;		Nothing
 21907 ;; This function is called by:
 21908 ;;		i2_printf
 21909 ;; This function uses a non-reentrant model
 21910 ;;
 21911                           
 21912                           	psect	text82
 21913  014260                     __ptext82:
 21914                           	opt stack 0
 21915  014260                     i2__div_to_l_:
 21916                           	opt stack 15
 21917                           
 21918                           ;incstack = 0
 21919  014260  3403               	rlcf	i2__div_to_l_@f1+2,w,c
 21920  014262  3404               	rlcf	i2__div_to_l_@f1+3,w,c
 21921  014264  6E0C               	movwf	i2__div_to_l_@exp1,c
 21922  014266  500C               	movf	i2__div_to_l_@exp1,w,c
 21923  014268  A4D8               	btfss	status,2,c
 21924  01426A  D009               	goto	i2l1424
 21925  01426C  0E00               	movlw	0
 21926  01426E  6E01               	movwf	?i2__div_to_l_,c
 21927  014270  0E00               	movlw	0
 21928  014272  6E02               	movwf	?i2__div_to_l_+1,c
 21929  014274  0E00               	movlw	0
 21930  014276  6E03               	movwf	?i2__div_to_l_+2,c
 21931  014278  0E00               	movlw	0
 21932  01427A  6E04               	movwf	?i2__div_to_l_+3,c
 21933  01427C  0012               	return	
 21934  01427E                     i2l1424:
 21935  01427E  3406               	rlcf	i2__div_to_l_@f2+2,w,c
 21936  014280  3407               	rlcf	i2__div_to_l_@f2+3,w,c
 21937  014282  6E0B               	movwf	i2__div_to_l_@cntr,c
 21938  014284  500B               	movf	i2__div_to_l_@cntr,w,c
 21939  014286  A4D8               	btfss	status,2,c
 21940  014288  D009               	goto	i2l1426
 21941  01428A  0E00               	movlw	0
 21942  01428C  6E01               	movwf	?i2__div_to_l_,c
 21943  01428E  0E00               	movlw	0
 21944  014290  6E02               	movwf	?i2__div_to_l_+1,c
 21945  014292  0E00               	movlw	0
 21946  014294  6E03               	movwf	?i2__div_to_l_+2,c
 21947  014296  0E00               	movlw	0
 21948  014298  6E04               	movwf	?i2__div_to_l_+3,c
 21949  01429A  0012               	return	
 21950  01429C                     i2l1426:
 21951  01429C  8E03               	bsf	i2__div_to_l_@f1+2,7,c
 21952  01429E  0EFF               	movlw	255
 21953  0142A0  1601               	andwf	i2__div_to_l_@f1,f,c
 21954  0142A2  0EFF               	movlw	255
 21955  0142A4  1602               	andwf	i2__div_to_l_@f1+1,f,c
 21956  0142A6  0EFF               	movlw	255
 21957  0142A8  1603               	andwf	i2__div_to_l_@f1+2,f,c
 21958  0142AA  0E00               	movlw	0
 21959  0142AC  1604               	andwf	i2__div_to_l_@f1+3,f,c
 21960  0142AE  8E06               	bsf	i2__div_to_l_@f2+2,7,c
 21961  0142B0  0EFF               	movlw	255
 21962  0142B2  1604               	andwf	i2__div_to_l_@f2,f,c
 21963  0142B4  0EFF               	movlw	255
 21964  0142B6  1605               	andwf	i2__div_to_l_@f2+1,f,c
 21965  0142B8  0EFF               	movlw	255
 21966  0142BA  1606               	andwf	i2__div_to_l_@f2+2,f,c
 21967  0142BC  0E00               	movlw	0
 21968  0142BE  1607               	andwf	i2__div_to_l_@f2+3,f,c
 21969  0142C0  0E00               	movlw	0
 21970  0142C2  6E07               	movwf	i2__div_to_l_@quot,c
 21971  0142C4  0E00               	movlw	0
 21972  0142C6  6E08               	movwf	i2__div_to_l_@quot+1,c
 21973  0142C8  0E00               	movlw	0
 21974  0142CA  6E09               	movwf	i2__div_to_l_@quot+2,c
 21975  0142CC  0E00               	movlw	0
 21976  0142CE  6E0A               	movwf	i2__div_to_l_@quot+3,c
 21977  0142D0  0E7F               	movlw	127
 21978  0142D2  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 21979  0142D4  500B               	movf	i2__div_to_l_@cntr,w,c
 21980  0142D6  0FA0               	addlw	160
 21981  0142D8  5E0C               	subwf	i2__div_to_l_@exp1,f,c
 21982  0142DA  0E20               	movlw	32
 21983  0142DC  6E0B               	movwf	i2__div_to_l_@cntr,c
 21984  0142DE  90D8               	bcf	status,0,c
 21985  0142E0  3607               	rlcf	i2__div_to_l_@quot,f,c
 21986  0142E2  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 21987  0142E4  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 21988  0142E6  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 21989  0142E8  5004               	movf	i2__div_to_l_@f2,w,c
 21990  0142EA  5C01               	subwf	i2__div_to_l_@f1,w,c
 21991  0142EC  5005               	movf	i2__div_to_l_@f2+1,w,c
 21992  0142EE  5802               	subwfb	i2__div_to_l_@f1+1,w,c
 21993  0142F0  5006               	movf	i2__div_to_l_@f2+2,w,c
 21994  0142F2  5803               	subwfb	i2__div_to_l_@f1+2,w,c
 21995  0142F4  5007               	movf	i2__div_to_l_@f2+3,w,c
 21996  0142F6  5804               	subwfb	i2__div_to_l_@f1+3,w,c
 21997  0142F8  A0D8               	btfss	status,0,c
 21998  0142FA  D009               	goto	i2l1428
 21999  0142FC  5004               	movf	i2__div_to_l_@f2,w,c
 22000  0142FE  5E01               	subwf	i2__div_to_l_@f1,f,c
 22001  014300  5005               	movf	i2__div_to_l_@f2+1,w,c
 22002  014302  5A02               	subwfb	i2__div_to_l_@f1+1,f,c
 22003  014304  5006               	movf	i2__div_to_l_@f2+2,w,c
 22004  014306  5A03               	subwfb	i2__div_to_l_@f1+2,f,c
 22005  014308  5007               	movf	i2__div_to_l_@f2+3,w,c
 22006  01430A  5A04               	subwfb	i2__div_to_l_@f1+3,f,c
 22007  01430C  8007               	bsf	i2__div_to_l_@quot,0,c
 22008  01430E                     i2l1428:
 22009  01430E  90D8               	bcf	status,0,c
 22010  014310  3601               	rlcf	i2__div_to_l_@f1,f,c
 22011  014312  3602               	rlcf	i2__div_to_l_@f1+1,f,c
 22012  014314  3603               	rlcf	i2__div_to_l_@f1+2,f,c
 22013  014316  3604               	rlcf	i2__div_to_l_@f1+3,f,c
 22014  014318  2E0B               	decfsz	i2__div_to_l_@cntr,f,c
 22015  01431A  D7E1               	goto	i2l1427
 22016  01431C  AE0C               	btfss	i2__div_to_l_@exp1,7,c
 22017  01431E  D016               	goto	i2l1430
 22018  014320  500C               	movf	i2__div_to_l_@exp1,w,c
 22019  014322  0A80               	xorlw	128
 22020  014324  0F9F               	addlw	159
 22021  014326  B0D8               	btfsc	status,0,c
 22022  014328  D009               	goto	i2l1431
 22023  01432A  0E00               	movlw	0
 22024  01432C  6E01               	movwf	?i2__div_to_l_,c
 22025  01432E  0E00               	movlw	0
 22026  014330  6E02               	movwf	?i2__div_to_l_+1,c
 22027  014332  0E00               	movlw	0
 22028  014334  6E03               	movwf	?i2__div_to_l_+2,c
 22029  014336  0E00               	movlw	0
 22030  014338  6E04               	movwf	?i2__div_to_l_+3,c
 22031  01433A  0012               	return	
 22032  01433C                     i2l1431:
 22033  01433C  90D8               	bcf	status,0,c
 22034  01433E  320A               	rrcf	i2__div_to_l_@quot+3,f,c
 22035  014340  3209               	rrcf	i2__div_to_l_@quot+2,f,c
 22036  014342  3208               	rrcf	i2__div_to_l_@quot+1,f,c
 22037  014344  3207               	rrcf	i2__div_to_l_@quot,f,c
 22038  014346  3E0C               	incfsz	i2__div_to_l_@exp1,f,c
 22039  014348  D7F9               	goto	i2l1431
 22040  01434A  D015               	goto	i2u1130_40
 22041  01434C                     i2l1430:
 22042  01434C  0E1F               	movlw	31
 22043  01434E  640C               	cpfsgt	i2__div_to_l_@exp1,c
 22044  014350  D00F               	goto	i2l1436
 22045  014352  0E00               	movlw	0
 22046  014354  6E01               	movwf	?i2__div_to_l_,c
 22047  014356  0E00               	movlw	0
 22048  014358  6E02               	movwf	?i2__div_to_l_+1,c
 22049  01435A  0E00               	movlw	0
 22050  01435C  6E03               	movwf	?i2__div_to_l_+2,c
 22051  01435E  0E00               	movlw	0
 22052  014360  6E04               	movwf	?i2__div_to_l_+3,c
 22053  014362  0012               	return	
 22054  014364  90D8               	bcf	status,0,c
 22055  014366  3607               	rlcf	i2__div_to_l_@quot,f,c
 22056  014368  3608               	rlcf	i2__div_to_l_@quot+1,f,c
 22057  01436A  3609               	rlcf	i2__div_to_l_@quot+2,f,c
 22058  01436C  360A               	rlcf	i2__div_to_l_@quot+3,f,c
 22059  01436E  060C               	decf	i2__div_to_l_@exp1,f,c
 22060  014370                     i2l1436:
 22061  014370  500C               	movf	i2__div_to_l_@exp1,w,c
 22062  014372  A4D8               	btfss	status,2,c
 22063  014374  D7F7               	goto	i2l1437
 22064  014376                     i2u1130_40:
 22065  014376  C007  F001         	movff	i2__div_to_l_@quot,?i2__div_to_l_
 22066  01437A  C008  F002         	movff	i2__div_to_l_@quot+1,?i2__div_to_l_+1
 22067  01437E  C009  F003         	movff	i2__div_to_l_@quot+2,?i2__div_to_l_+2
 22068  014382  C00A  F004         	movff	i2__div_to_l_@quot+3,?i2__div_to_l_+3
 22069  014386  0012               	return		;funcret
 22070  014388                     __end_ofi2__div_to_l_:
 22071                           	opt stack 0
 22072                           tosu	equ	0xFFF
 22073                           tosh	equ	0xFFE
 22074                           tosl	equ	0xFFD
 22075                           pclatu	equ	0xFFB
 22076                           pclath	equ	0xFFA
 22077                           tblptru	equ	0xFF8
 22078                           tblptrh	equ	0xFF7
 22079                           tblptrl	equ	0xFF6
 22080                           tablat	equ	0xFF5
 22081                           prodh	equ	0xFF4
 22082                           prodl	equ	0xFF3
 22083                           intcon	equ	0xFF2
 22084                           postinc0	equ	0xFEE
 22085                           fsr0h	equ	0xFEA
 22086                           fsr0l	equ	0xFE9
 22087                           wreg	equ	0xFE8
 22088                           indf1	equ	0xFE7
 22089                           postdec1	equ	0xFE5
 22090                           fsr1h	equ	0xFE2
 22091                           fsr1l	equ	0xFE1
 22092                           bsr	equ	0xFE0
 22093                           indf2	equ	0xFDF
 22094                           postinc2	equ	0xFDE
 22095                           postdec2	equ	0xFDD
 22096                           fsr2h	equ	0xFDA
 22097                           fsr2l	equ	0xFD9
 22098                           status	equ	0xFD8
 22099                           
 22100 ;; *************** function i2___lltoft *****************
 22101 ;; Defined at:
 22102 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lltoft.c"
 22103 ;; Parameters:    Size  Location     Type
 22104 ;;  c               4    8[COMRAM] unsigned long 
 22105 ;; Auto vars:     Size  Location     Type
 22106 ;;  __lltoft        1   16[COMRAM] unsigned char 
 22107 ;; Return value:  Size  Location     Type
 22108 ;;                  3    8[COMRAM] float 
 22109 ;; Registers used:
 22110 ;;		wreg, status,2, status,0, cstack
 22111 ;; Tracked objects:
 22112 ;;		On entry : 0/0
 22113 ;;		On exit  : 0/0
 22114 ;;		Unchanged: 0/0
 22115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22119 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22120 ;;Total ram usage:        9 bytes
 22121 ;; Hardware stack levels used:    1
 22122 ;; Hardware stack levels required when called:    1
 22123 ;; This function calls:
 22124 ;;		i2___ftpack
 22125 ;; This function is called by:
 22126 ;;		i2_printf
 22127 ;; This function uses a non-reentrant model
 22128 ;;
 22129                           
 22130                           	psect	text83
 22131  01599E                     __ptext83:
 22132                           	opt stack 0
 22133  01599E                     i2___lltoft:
 22134                           	opt stack 14
 22135                           
 22136                           ;incstack = 0
 22137  01599E  0E8E               	movlw	142
 22138  0159A0  6E11               	movwf	i2___lltoft@exp,c
 22139  0159A2  D006               	goto	i2l1635
 22140  0159A4  90D8               	bcf	status,0,c
 22141  0159A6  320C               	rrcf	i2___lltoft@c+3,f,c
 22142  0159A8  320B               	rrcf	i2___lltoft@c+2,f,c
 22143  0159AA  320A               	rrcf	i2___lltoft@c+1,f,c
 22144  0159AC  3209               	rrcf	i2___lltoft@c,f,c
 22145  0159AE  2A11               	incf	i2___lltoft@exp,f,c
 22146  0159B0                     i2l1635:
 22147  0159B0  0E00               	movlw	0
 22148  0159B2  1409               	andwf	i2___lltoft@c,w,c
 22149  0159B4  6E0D               	movwf	??i2___lltoft& (0+255),c
 22150  0159B6  0E00               	movlw	0
 22151  0159B8  140A               	andwf	i2___lltoft@c+1,w,c
 22152  0159BA  6E0E               	movwf	(??i2___lltoft+1)& (0+255),c
 22153  0159BC  0E00               	movlw	0
 22154  0159BE  140B               	andwf	i2___lltoft@c+2,w,c
 22155  0159C0  6E0F               	movwf	(??i2___lltoft+2)& (0+255),c
 22156  0159C2  0EFF               	movlw	255
 22157  0159C4  140C               	andwf	i2___lltoft@c+3,w,c
 22158  0159C6  6E10               	movwf	(??i2___lltoft+3)& (0+255),c
 22159  0159C8  500D               	movf	??i2___lltoft,w,c
 22160  0159CA  100E               	iorwf	??i2___lltoft+1,w,c
 22161  0159CC  100F               	iorwf	??i2___lltoft+2,w,c
 22162  0159CE  1010               	iorwf	??i2___lltoft+3,w,c
 22163  0159D0  A4D8               	btfss	status,2,c
 22164  0159D2  D7E8               	goto	i2l1636
 22165  0159D4  C009  F001         	movff	i2___lltoft@c,i2___ftpack@arg
 22166  0159D8  C00A  F002         	movff	i2___lltoft@c+1,i2___ftpack@arg+1
 22167  0159DC  C00B  F003         	movff	i2___lltoft@c+2,i2___ftpack@arg+2
 22168  0159E0  C011  F004         	movff	i2___lltoft@exp,i2___ftpack@exp
 22169  0159E4  0E00               	movlw	0
 22170  0159E6  6E05               	movwf	i2___ftpack@sign,c
 22171  0159E8  EC2A  F0A7         	call	i2___ftpack	;wreg free
 22172  0159EC  C001  F009         	movff	?i2___ftpack,?i2___lltoft
 22173  0159F0  C002  F00A         	movff	?i2___ftpack+1,?i2___lltoft+1
 22174  0159F4  C003  F00B         	movff	?i2___ftpack+2,?i2___lltoft+2
 22175  0159F8  0012               	return	
 22176  0159FA                     __end_ofi2___lltoft:
 22177                           	opt stack 0
 22178                           tosu	equ	0xFFF
 22179                           tosh	equ	0xFFE
 22180                           tosl	equ	0xFFD
 22181                           pclatu	equ	0xFFB
 22182                           pclath	equ	0xFFA
 22183                           tblptru	equ	0xFF8
 22184                           tblptrh	equ	0xFF7
 22185                           tblptrl	equ	0xFF6
 22186                           tablat	equ	0xFF5
 22187                           prodh	equ	0xFF4
 22188                           prodl	equ	0xFF3
 22189                           intcon	equ	0xFF2
 22190                           postinc0	equ	0xFEE
 22191                           fsr0h	equ	0xFEA
 22192                           fsr0l	equ	0xFE9
 22193                           wreg	equ	0xFE8
 22194                           indf1	equ	0xFE7
 22195                           postdec1	equ	0xFE5
 22196                           fsr1h	equ	0xFE2
 22197                           fsr1l	equ	0xFE1
 22198                           bsr	equ	0xFE0
 22199                           indf2	equ	0xFDF
 22200                           postinc2	equ	0xFDE
 22201                           postdec2	equ	0xFDD
 22202                           fsr2h	equ	0xFDA
 22203                           fsr2l	equ	0xFD9
 22204                           status	equ	0xFD8
 22205                           
 22206 ;; *************** function i2___llmod *****************
 22207 ;; Defined at:
 22208 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 22209 ;; Parameters:    Size  Location     Type
 22210 ;;  dividend        4   13[COMRAM] unsigned long 
 22211 ;;  divisor         4   17[COMRAM] unsigned long 
 22212 ;; Auto vars:     Size  Location     Type
 22213 ;;  __llmod         1   21[COMRAM] unsigned char 
 22214 ;; Return value:  Size  Location     Type
 22215 ;;                  4   13[COMRAM] unsigned long 
 22216 ;; Registers used:
 22217 ;;		wreg, status,2, status,0
 22218 ;; Tracked objects:
 22219 ;;		On entry : 0/0
 22220 ;;		On exit  : 0/0
 22221 ;;		Unchanged: 0/0
 22222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22223 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22224 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22226 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22227 ;;Total ram usage:        9 bytes
 22228 ;; Hardware stack levels used:    1
 22229 ;; This function calls:
 22230 ;;		Nothing
 22231 ;; This function is called by:
 22232 ;;		i2_printf
 22233 ;; This function uses a non-reentrant model
 22234 ;;
 22235                           
 22236                           	psect	text84
 22237  015816                     __ptext84:
 22238                           	opt stack 0
 22239  015816                     i2___llmod:
 22240                           	opt stack 15
 22241                           
 22242                           ;incstack = 0
 22243  015816  5012               	movf	i2___llmod@divisor,w,c
 22244  015818  1013               	iorwf	i2___llmod@divisor+1,w,c
 22245  01581A  1014               	iorwf	i2___llmod@divisor+2,w,c
 22246  01581C  1015               	iorwf	i2___llmod@divisor+3,w,c
 22247  01581E  B4D8               	btfsc	status,2,c
 22248  015820  D024               	goto	i2l1629
 22249  015822  0E01               	movlw	1
 22250  015824  6E16               	movwf	i2___llmod@counter,c
 22251  015826  D006               	goto	i2l1624
 22252  015828  90D8               	bcf	status,0,c
 22253  01582A  3612               	rlcf	i2___llmod@divisor,f,c
 22254  01582C  3613               	rlcf	i2___llmod@divisor+1,f,c
 22255  01582E  3614               	rlcf	i2___llmod@divisor+2,f,c
 22256  015830  3615               	rlcf	i2___llmod@divisor+3,f,c
 22257  015832  2A16               	incf	i2___llmod@counter,f,c
 22258  015834                     i2l1624:
 22259  015834  AE15               	btfss	i2___llmod@divisor+3,7,c
 22260  015836  D7F8               	goto	i2l1625
 22261  015838                     i2u1146_40:
 22262  015838  5012               	movf	i2___llmod@divisor,w,c
 22263  01583A  5C0E               	subwf	i2___llmod@dividend,w,c
 22264  01583C  5013               	movf	i2___llmod@divisor+1,w,c
 22265  01583E  580F               	subwfb	i2___llmod@dividend+1,w,c
 22266  015840  5014               	movf	i2___llmod@divisor+2,w,c
 22267  015842  5810               	subwfb	i2___llmod@dividend+2,w,c
 22268  015844  5015               	movf	i2___llmod@divisor+3,w,c
 22269  015846  5811               	subwfb	i2___llmod@dividend+3,w,c
 22270  015848  A0D8               	btfss	status,0,c
 22271  01584A  D008               	goto	i2l1628
 22272  01584C  5012               	movf	i2___llmod@divisor,w,c
 22273  01584E  5E0E               	subwf	i2___llmod@dividend,f,c
 22274  015850  5013               	movf	i2___llmod@divisor+1,w,c
 22275  015852  5A0F               	subwfb	i2___llmod@dividend+1,f,c
 22276  015854  5014               	movf	i2___llmod@divisor+2,w,c
 22277  015856  5A10               	subwfb	i2___llmod@dividend+2,f,c
 22278  015858  5015               	movf	i2___llmod@divisor+3,w,c
 22279  01585A  5A11               	subwfb	i2___llmod@dividend+3,f,c
 22280  01585C                     i2l1628:
 22281  01585C  90D8               	bcf	status,0,c
 22282  01585E  3215               	rrcf	i2___llmod@divisor+3,f,c
 22283  015860  3214               	rrcf	i2___llmod@divisor+2,f,c
 22284  015862  3213               	rrcf	i2___llmod@divisor+1,f,c
 22285  015864  3212               	rrcf	i2___llmod@divisor,f,c
 22286  015866  2E16               	decfsz	i2___llmod@counter,f,c
 22287  015868  D7E7               	goto	i2u1146_40
 22288  01586A                     i2l1629:
 22289  01586A  C00E  F00E         	movff	i2___llmod@dividend,?i2___llmod
 22290  01586E  C00F  F00F         	movff	i2___llmod@dividend+1,?i2___llmod+1
 22291  015872  C010  F010         	movff	i2___llmod@dividend+2,?i2___llmod+2
 22292  015876  C011  F011         	movff	i2___llmod@dividend+3,?i2___llmod+3
 22293  01587A  0012               	return		;funcret
 22294  01587C                     __end_ofi2___llmod:
 22295                           	opt stack 0
 22296                           tosu	equ	0xFFF
 22297                           tosh	equ	0xFFE
 22298                           tosl	equ	0xFFD
 22299                           pclatu	equ	0xFFB
 22300                           pclath	equ	0xFFA
 22301                           tblptru	equ	0xFF8
 22302                           tblptrh	equ	0xFF7
 22303                           tblptrl	equ	0xFF6
 22304                           tablat	equ	0xFF5
 22305                           prodh	equ	0xFF4
 22306                           prodl	equ	0xFF3
 22307                           intcon	equ	0xFF2
 22308                           postinc0	equ	0xFEE
 22309                           fsr0h	equ	0xFEA
 22310                           fsr0l	equ	0xFE9
 22311                           wreg	equ	0xFE8
 22312                           indf1	equ	0xFE7
 22313                           postdec1	equ	0xFE5
 22314                           fsr1h	equ	0xFE2
 22315                           fsr1l	equ	0xFE1
 22316                           bsr	equ	0xFE0
 22317                           indf2	equ	0xFDF
 22318                           postinc2	equ	0xFDE
 22319                           postdec2	equ	0xFDD
 22320                           fsr2h	equ	0xFDA
 22321                           fsr2l	equ	0xFD9
 22322                           status	equ	0xFD8
 22323                           
 22324 ;; *************** function i2___lldiv *****************
 22325 ;; Defined at:
 22326 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;  dividend        4    0[COMRAM] unsigned long 
 22329 ;;  divisor         4    4[COMRAM] unsigned long 
 22330 ;; Auto vars:     Size  Location     Type
 22331 ;;  __lldiv         4    8[COMRAM] unsigned long 
 22332 ;;  __lldiv         1   12[COMRAM] unsigned char 
 22333 ;; Return value:  Size  Location     Type
 22334 ;;                  4    0[COMRAM] unsigned long 
 22335 ;; Registers used:
 22336 ;;		wreg, status,2, status,0
 22337 ;; Tracked objects:
 22338 ;;		On entry : 0/0
 22339 ;;		On exit  : 0/0
 22340 ;;		Unchanged: 0/0
 22341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22342 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22343 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22345 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22346 ;;Total ram usage:       13 bytes
 22347 ;; Hardware stack levels used:    1
 22348 ;; This function calls:
 22349 ;;		Nothing
 22350 ;; This function is called by:
 22351 ;;		i2_printf
 22352 ;; This function uses a non-reentrant model
 22353 ;;
 22354                           
 22355                           	psect	text85
 22356  01541A                     __ptext85:
 22357                           	opt stack 0
 22358  01541A                     i2___lldiv:
 22359                           	opt stack 15
 22360                           
 22361                           ;incstack = 0
 22362  01541A  0E00               	movlw	0
 22363  01541C  6E09               	movwf	i2___lldiv@quotient,c
 22364  01541E  0E00               	movlw	0
 22365  015420  6E0A               	movwf	i2___lldiv@quotient+1,c
 22366  015422  0E00               	movlw	0
 22367  015424  6E0B               	movwf	i2___lldiv@quotient+2,c
 22368  015426  0E00               	movlw	0
 22369  015428  6E0C               	movwf	i2___lldiv@quotient+3,c
 22370  01542A  5005               	movf	i2___lldiv@divisor,w,c
 22371  01542C  1006               	iorwf	i2___lldiv@divisor+1,w,c
 22372  01542E  1007               	iorwf	i2___lldiv@divisor+2,w,c
 22373  015430  1008               	iorwf	i2___lldiv@divisor+3,w,c
 22374  015432  B4D8               	btfsc	status,2,c
 22375  015434  D02A               	goto	i2l1619
 22376  015436  0E01               	movlw	1
 22377  015438  6E0D               	movwf	i2___lldiv@counter,c
 22378  01543A  D006               	goto	i2l1614
 22379  01543C  90D8               	bcf	status,0,c
 22380  01543E  3605               	rlcf	i2___lldiv@divisor,f,c
 22381  015440  3606               	rlcf	i2___lldiv@divisor+1,f,c
 22382  015442  3607               	rlcf	i2___lldiv@divisor+2,f,c
 22383  015444  3608               	rlcf	i2___lldiv@divisor+3,f,c
 22384  015446  2A0D               	incf	i2___lldiv@counter,f,c
 22385  015448                     i2l1614:
 22386  015448  AE08               	btfss	i2___lldiv@divisor+3,7,c
 22387  01544A  D7F8               	goto	i2l1615
 22388  01544C                     i2u1143_40:
 22389  01544C  90D8               	bcf	status,0,c
 22390  01544E  3609               	rlcf	i2___lldiv@quotient,f,c
 22391  015450  360A               	rlcf	i2___lldiv@quotient+1,f,c
 22392  015452  360B               	rlcf	i2___lldiv@quotient+2,f,c
 22393  015454  360C               	rlcf	i2___lldiv@quotient+3,f,c
 22394  015456  5005               	movf	i2___lldiv@divisor,w,c
 22395  015458  5C01               	subwf	i2___lldiv@dividend,w,c
 22396  01545A  5006               	movf	i2___lldiv@divisor+1,w,c
 22397  01545C  5802               	subwfb	i2___lldiv@dividend+1,w,c
 22398  01545E  5007               	movf	i2___lldiv@divisor+2,w,c
 22399  015460  5803               	subwfb	i2___lldiv@dividend+2,w,c
 22400  015462  5008               	movf	i2___lldiv@divisor+3,w,c
 22401  015464  5804               	subwfb	i2___lldiv@dividend+3,w,c
 22402  015466  A0D8               	btfss	status,0,c
 22403  015468  D009               	goto	i2l1618
 22404  01546A  5005               	movf	i2___lldiv@divisor,w,c
 22405  01546C  5E01               	subwf	i2___lldiv@dividend,f,c
 22406  01546E  5006               	movf	i2___lldiv@divisor+1,w,c
 22407  015470  5A02               	subwfb	i2___lldiv@dividend+1,f,c
 22408  015472  5007               	movf	i2___lldiv@divisor+2,w,c
 22409  015474  5A03               	subwfb	i2___lldiv@dividend+2,f,c
 22410  015476  5008               	movf	i2___lldiv@divisor+3,w,c
 22411  015478  5A04               	subwfb	i2___lldiv@dividend+3,f,c
 22412  01547A  8009               	bsf	i2___lldiv@quotient,0,c
 22413  01547C                     i2l1618:
 22414  01547C  90D8               	bcf	status,0,c
 22415  01547E  3208               	rrcf	i2___lldiv@divisor+3,f,c
 22416  015480  3207               	rrcf	i2___lldiv@divisor+2,f,c
 22417  015482  3206               	rrcf	i2___lldiv@divisor+1,f,c
 22418  015484  3205               	rrcf	i2___lldiv@divisor,f,c
 22419  015486  2E0D               	decfsz	i2___lldiv@counter,f,c
 22420  015488  D7E1               	goto	i2u1143_40
 22421  01548A                     i2l1619:
 22422  01548A  C009  F001         	movff	i2___lldiv@quotient,?i2___lldiv
 22423  01548E  C00A  F002         	movff	i2___lldiv@quotient+1,?i2___lldiv+1
 22424  015492  C00B  F003         	movff	i2___lldiv@quotient+2,?i2___lldiv+2
 22425  015496  C00C  F004         	movff	i2___lldiv@quotient+3,?i2___lldiv+3
 22426  01549A  0012               	return		;funcret
 22427  01549C                     __end_ofi2___lldiv:
 22428                           	opt stack 0
 22429                           tosu	equ	0xFFF
 22430                           tosh	equ	0xFFE
 22431                           tosl	equ	0xFFD
 22432                           pclatu	equ	0xFFB
 22433                           pclath	equ	0xFFA
 22434                           tblptru	equ	0xFF8
 22435                           tblptrh	equ	0xFF7
 22436                           tblptrl	equ	0xFF6
 22437                           tablat	equ	0xFF5
 22438                           prodh	equ	0xFF4
 22439                           prodl	equ	0xFF3
 22440                           intcon	equ	0xFF2
 22441                           postinc0	equ	0xFEE
 22442                           fsr0h	equ	0xFEA
 22443                           fsr0l	equ	0xFE9
 22444                           wreg	equ	0xFE8
 22445                           indf1	equ	0xFE7
 22446                           postdec1	equ	0xFE5
 22447                           fsr1h	equ	0xFE2
 22448                           fsr1l	equ	0xFE1
 22449                           bsr	equ	0xFE0
 22450                           indf2	equ	0xFDF
 22451                           postinc2	equ	0xFDE
 22452                           postdec2	equ	0xFDD
 22453                           fsr2h	equ	0xFDA
 22454                           fsr2l	equ	0xFD9
 22455                           status	equ	0xFD8
 22456                           
 22457 ;; *************** function _ADCC_ISR *****************
 22458 ;; Defined at:
 22459 ;;		line 297 in file "mcc_generated_files/adcc.c"
 22460 ;; Parameters:    Size  Location     Type
 22461 ;;		None
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;		None
 22464 ;; Return value:  Size  Location     Type
 22465 ;;                  1    wreg      void 
 22466 ;; Registers used:
 22467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22468 ;; Tracked objects:
 22469 ;;		On entry : 0/0
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22477 ;;Total ram usage:        0 bytes
 22478 ;; Hardware stack levels used:    1
 22479 ;; Hardware stack levels required when called:    8
 22480 ;; This function calls:
 22481 ;;		Absolute function
 22482 ;;		_ADCC_DefaultInterruptHandler
 22483 ;;		_ADC_postProcessingCallback
 22484 ;; This function is called by:
 22485 ;;		_INTERRUPT_InterruptManagerHigh
 22486 ;; This function uses a non-reentrant model
 22487 ;;
 22488                           
 22489                           	psect	text86
 22490  015FF8                     __ptext86:
 22491                           	opt stack 0
 22492  015FF8                     _ADCC_ISR:
 22493                           	opt stack 9
 22494                           
 22495                           ;adcc.c: 300: PIR1bits.ADIF = 0;
 22496                           
 22497                           ;incstack = 0
 22498  015FF8  010E               	movlb	14	; () banked
 22499  015FFA  9134               	bcf	52,0,b	;volatile
 22500                           
 22501                           ; BSR set to: 14
 22502                           ;adcc.c: 302: if (ADCC_ADI_InterruptHandler)
 22503  015FFC  0100               	movlb	0	; () banked
 22504  015FFE  51D1               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 22505  016000  11D2               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 22506  016002  11D3               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 22507  016004  B4D8               	btfsc	status,2,c
 22508  016006  0012               	return	
 22509                           
 22510                           ; BSR set to: 0
 22511                           ;adcc.c: 303: ADCC_ADI_InterruptHandler();
 22512  016008  D801               	call	i2u1591_48
 22513  01600A  0012               	return	
 22514  01600C                     i2u1591_48:
 22515  01600C  0005               	push	
 22516  01600E  6EFA               	movwf	pclath,c
 22517  016010  51D1               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 22518  016012  6EFD               	movwf	tosl,c
 22519  016014  51D2               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 22520  016016  6EFE               	movwf	tosh,c
 22521  016018  51D3               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 22522  01601A  6EFF               	movwf	tosu,c
 22523  01601C  50FA               	movf	pclath,w,c
 22524  01601E  0012               	return		;indir
 22525  016020                     __end_of_ADCC_ISR:
 22526                           	opt stack 0
 22527                           tosu	equ	0xFFF
 22528                           tosh	equ	0xFFE
 22529                           tosl	equ	0xFFD
 22530                           pclatu	equ	0xFFB
 22531                           pclath	equ	0xFFA
 22532                           tblptru	equ	0xFF8
 22533                           tblptrh	equ	0xFF7
 22534                           tblptrl	equ	0xFF6
 22535                           tablat	equ	0xFF5
 22536                           prodh	equ	0xFF4
 22537                           prodl	equ	0xFF3
 22538                           intcon	equ	0xFF2
 22539                           postinc0	equ	0xFEE
 22540                           fsr0h	equ	0xFEA
 22541                           fsr0l	equ	0xFE9
 22542                           wreg	equ	0xFE8
 22543                           indf1	equ	0xFE7
 22544                           postdec1	equ	0xFE5
 22545                           fsr1h	equ	0xFE2
 22546                           fsr1l	equ	0xFE1
 22547                           bsr	equ	0xFE0
 22548                           indf2	equ	0xFDF
 22549                           postinc2	equ	0xFDE
 22550                           postdec2	equ	0xFDD
 22551                           fsr2h	equ	0xFDA
 22552                           fsr2l	equ	0xFD9
 22553                           status	equ	0xFD8
 22554                           
 22555 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 22556 ;; Defined at:
 22557 ;;		line 310 in file "mcc_generated_files/adcc.c"
 22558 ;; Parameters:    Size  Location     Type
 22559 ;;		None
 22560 ;; Auto vars:     Size  Location     Type
 22561 ;;		None
 22562 ;; Return value:  Size  Location     Type
 22563 ;;                  1    wreg      void 
 22564 ;; Registers used:
 22565 ;;		None
 22566 ;; Tracked objects:
 22567 ;;		On entry : 0/0
 22568 ;;		On exit  : 0/0
 22569 ;;		Unchanged: 0/0
 22570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22575 ;;Total ram usage:        0 bytes
 22576 ;; Hardware stack levels used:    1
 22577 ;; This function calls:
 22578 ;;		Nothing
 22579 ;; This function is called by:
 22580 ;;		_ADCC_Initialize
 22581 ;;		_ADCC_ISR
 22582 ;; This function uses a non-reentrant model
 22583 ;;
 22584                           
 22585                           	psect	text87
 22586  016270                     __ptext87:
 22587                           	opt stack 0
 22588  016270                     _ADCC_DefaultInterruptHandler:
 22589                           	opt stack 16
 22590                           
 22591                           ;incstack = 0
 22592  016270  0012               	return		;funcret
 22593  016272                     __end_of_ADCC_DefaultInterruptHandler:
 22594                           	opt stack 0
 22595                           tosu	equ	0xFFF
 22596                           tosh	equ	0xFFE
 22597                           tosl	equ	0xFFD
 22598                           pclatu	equ	0xFFB
 22599                           pclath	equ	0xFFA
 22600                           tblptru	equ	0xFF8
 22601                           tblptrh	equ	0xFF7
 22602                           tblptrl	equ	0xFF6
 22603                           tablat	equ	0xFF5
 22604                           prodh	equ	0xFF4
 22605                           prodl	equ	0xFF3
 22606                           intcon	equ	0xFF2
 22607                           postinc0	equ	0xFEE
 22608                           fsr0h	equ	0xFEA
 22609                           fsr0l	equ	0xFE9
 22610                           wreg	equ	0xFE8
 22611                           indf1	equ	0xFE7
 22612                           postdec1	equ	0xFE5
 22613                           fsr1h	equ	0xFE2
 22614                           fsr1l	equ	0xFE1
 22615                           bsr	equ	0xFE0
 22616                           indf2	equ	0xFDF
 22617                           postinc2	equ	0xFDE
 22618                           postdec2	equ	0xFDD
 22619                           fsr2h	equ	0xFDA
 22620                           fsr2l	equ	0xFD9
 22621                           status	equ	0xFD8
 22622                           
 22623 ;; *************** function _ADC_postProcessingCallback *****************
 22624 ;; Defined at:
 22625 ;;		line 136 in file "main.c"
 22626 ;; Parameters:    Size  Location     Type
 22627 ;;		None
 22628 ;; Auto vars:     Size  Location     Type
 22629 ;;  currentADCCh    1   79[BANK0 ] enum E17343
 22630 ;; Return value:  Size  Location     Type
 22631 ;;                  1    wreg      void 
 22632 ;; Registers used:
 22633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22634 ;; Tracked objects:
 22635 ;;		On entry : 0/0
 22636 ;;		On exit  : 0/0
 22637 ;;		Unchanged: 0/0
 22638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 22639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22640 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22642 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22643 ;;Total ram usage:       13 bytes
 22644 ;; Hardware stack levels used:    1
 22645 ;; Hardware stack levels required when called:    7
 22646 ;; This function calls:
 22647 ;;		_ADCC_GetConversionResult
 22648 ;;		___lwtoft
 22649 ;;		_currentMeasuredToPeak
 22650 ;;		_peakToRMS
 22651 ;;		i2___ftadd
 22652 ;;		i2___ftdiv
 22653 ;;		i2___ftmul
 22654 ;;		i2___ftneg
 22655 ;; This function is called by:
 22656 ;;		_main
 22657 ;;		_ADCC_ISR
 22658 ;; This function uses a non-reentrant model
 22659 ;;
 22660                           
 22661                           	psect	text88
 22662  012514                     __ptext88:
 22663                           	opt stack 0
 22664  012514                     _ADC_postProcessingCallback:
 22665                           	opt stack 9
 22666                           
 22667                           ;main.c: 138: adcc_channel_t currentADCChannel = ADPCH;
 22668                           
 22669                           ;incstack = 0
 22670  012514  CF5F F0AF          	movff	3935,ADC_postProcessingCallback@currentADCChannel	;volatile
 22671                           
 22672                           ;main.c: 140: switch (currentADCChannel) {
 22673  012518  D1F2               	goto	i2l743
 22674  01251A                     
 22675                           ;main.c: 144: FVR_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0);
 22676  01251A  ECB7  F0B0         	call	_ADCC_GetConversionResult	;wreg free
 22677  01251E  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22678  012522  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22679  012526  EC5B  F0B0         	call	___lwtoft	;wreg free
 22680  01252A  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22681  01252E  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22682  012532  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22683  012536  0E68               	movlw	104
 22684  012538  6E2A               	movwf	i2___ftmul@f2,c
 22685  01253A  0E53               	movlw	83
 22686  01253C  6E2B               	movwf	i2___ftmul@f2+1,c
 22687  01253E  0E3B               	movlw	59
 22688  012540  6E2C               	movwf	i2___ftmul@f2+2,c
 22689  012542  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22690  012546  C027  F0E0         	movff	?i2___ftmul,_FVR_ADC_Result
 22691  01254A  C028  F0E1         	movff	?i2___ftmul+1,_FVR_ADC_Result+1
 22692  01254E  C029  F0E2         	movff	?i2___ftmul+2,_FVR_ADC_Result+2
 22693                           
 22694                           ;main.c: 145: ADC_Result_Scaling = 2.048/FVR_ADC_Result;
 22695  012552  0E12               	movlw	18
 22696  012554  6E15               	movwf	i2___ftdiv@f1,c
 22697  012556  0E03               	movlw	3
 22698  012558  6E16               	movwf	i2___ftdiv@f1+1,c
 22699  01255A  0E40               	movlw	64
 22700  01255C  6E17               	movwf	i2___ftdiv@f1+2,c
 22701  01255E  C0E0  F018         	movff	_FVR_ADC_Result,i2___ftdiv@f2
 22702  012562  C0E1  F019         	movff	_FVR_ADC_Result+1,i2___ftdiv@f2+1
 22703  012566  C0E2  F01A         	movff	_FVR_ADC_Result+2,i2___ftdiv@f2+2
 22704  01256A  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 22705  01256E  C015  F0CE         	movff	?i2___ftdiv,_ADC_Result_Scaling
 22706  012572  C016  F0CF         	movff	?i2___ftdiv+1,_ADC_Result_Scaling+1
 22707  012576  C017  F0D0         	movff	?i2___ftdiv+2,_ADC_Result_Scaling+2
 22708                           
 22709                           ;main.c: 146: break;
 22710  01257A  0012               	return	
 22711  01257C                     
 22712                           ;main.c: 150: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 22713  01257C  C0CE  F02A         	movff	_ADC_Result_Scaling,i2___ftmul@f2
 22714  012580  C0CF  F02B         	movff	_ADC_Result_Scaling+1,i2___ftmul@f2+1
 22715  012584  C0D0  F02C         	movff	_ADC_Result_Scaling+2,i2___ftmul@f2+2
 22716  012588  ECB7  F0B0         	call	_ADCC_GetConversionResult	;wreg free
 22717  01258C  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22718  012590  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22719  012594  EC5B  F0B0         	call	___lwtoft	;wreg free
 22720  012598  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22721  01259C  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22722  0125A0  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22723  0125A4  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22724  0125A8  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3316
 22725  0125AC  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3316+1
 22726  0125B0  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3316+2
 22727                           
 22728                           ;main.c: 150: POS3P3_ADC_Result = (ADCC_GetConversionResult()) * (3.3/1023.0) * 2.0 * AD
      +                          C_Result_Scaling;
 22729  0125B4  C0B0  F027         	movff	_ADC_postProcessingCallback$3316,i2___ftmul@f1
 22730  0125B8  C0B1  F028         	movff	_ADC_postProcessingCallback$3316+1,i2___ftmul@f1+1
 22731  0125BC  C0B2  F029         	movff	_ADC_postProcessingCallback$3316+2,i2___ftmul@f1+2
 22732  0125C0  0E68               	movlw	104
 22733  0125C2  6E2A               	movwf	i2___ftmul@f2,c
 22734  0125C4  0ED3               	movlw	211
 22735  0125C6  6E2B               	movwf	i2___ftmul@f2+1,c
 22736  0125C8  0E3B               	movlw	59
 22737  0125CA  6E2C               	movwf	i2___ftmul@f2+2,c
 22738  0125CC  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22739  0125D0  C027  F0CB         	movff	?i2___ftmul,_POS3P3_ADC_Result
 22740  0125D4  C028  F0CC         	movff	?i2___ftmul+1,_POS3P3_ADC_Result+1
 22741  0125D8  C029  F0CD         	movff	?i2___ftmul+2,_POS3P3_ADC_Result+2
 22742                           
 22743                           ;main.c: 151: break;
 22744  0125DC  0012               	return	
 22745  0125DE                     
 22746                           ;main.c: 154: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 22747  0125DE  0EC0               	movlw	192
 22748  0125E0  6E18               	movwf	i2___ftdiv@f2,c
 22749  0125E2  0E7F               	movlw	127
 22750  0125E4  6E19               	movwf	i2___ftdiv@f2+1,c
 22751  0125E6  0E44               	movlw	68
 22752  0125E8  6E1A               	movwf	i2___ftdiv@f2+2,c
 22753  0125EA  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22754  0125EE  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22755  0125F2  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22756  0125F6  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 22757  0125FA  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22758  0125FE  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22759  012602  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22760  012606  ECB7  F0B0         	call	_ADCC_GetConversionResult	;wreg free
 22761  01260A  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22762  01260E  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22763  012612  EC5B  F0B0         	call	___lwtoft	;wreg free
 22764  012616  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22765  01261A  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22766  01261E  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22767  012622  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22768  012626  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3316
 22769  01262A  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3316+1
 22770  01262E  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3316+2
 22771                           
 22772                           ;main.c: 154: Imeas = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.0) * (3.787
      +                           / 2.0);
 22773  012632  C0B0  F027         	movff	_ADC_postProcessingCallback$3316,i2___ftmul@f1
 22774  012636  C0B1  F028         	movff	_ADC_postProcessingCallback$3316+1,i2___ftmul@f1+1
 22775  01263A  C0B2  F029         	movff	_ADC_postProcessingCallback$3316+2,i2___ftmul@f1+2
 22776  01263E  0E5E               	movlw	94
 22777  012640  6E2A               	movwf	i2___ftmul@f2,c
 22778  012642  0EF2               	movlw	242
 22779  012644  6E2B               	movwf	i2___ftmul@f2+1,c
 22780  012646  0E3F               	movlw	63
 22781  012648  6E2C               	movwf	i2___ftmul@f2+2,c
 22782  01264A  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22783  01264E  C027  F0C5         	movff	?i2___ftmul,_Imeas
 22784  012652  C028  F0C6         	movff	?i2___ftmul+1,_Imeas+1
 22785  012656  C029  F0C7         	movff	?i2___ftmul+2,_Imeas+2
 22786                           
 22787                           ;main.c: 158: if (LATGbits.LATG0 != 1) {
 22788  01265A  B07F               	btfsc	3967,0,c	;volatile
 22789  01265C  D03D               	goto	i2l748
 22790                           
 22791                           ;main.c: 160: Ipk = currentMeasuredToPeak(Imeas, TRIAC_Firing_Angle);
 22792  01265E  C0C5  F073         	movff	_Imeas,currentMeasuredToPeak@Measured
 22793  012662  C0C6  F074         	movff	_Imeas+1,currentMeasuredToPeak@Measured+1
 22794  012666  C0C7  F075         	movff	_Imeas+2,currentMeasuredToPeak@Measured+2
 22795  01266A  C0DD  F076         	movff	_TRIAC_Firing_Angle,currentMeasuredToPeak@Angle
 22796  01266E  C0DE  F077         	movff	_TRIAC_Firing_Angle+1,currentMeasuredToPeak@Angle+1
 22797  012672  C0DF  F078         	movff	_TRIAC_Firing_Angle+2,currentMeasuredToPeak@Angle+2
 22798  012676  EC70  F0AC         	call	_currentMeasuredToPeak	;wreg free
 22799  01267A  C073  F0C8         	movff	?_currentMeasuredToPeak,_Ipk
 22800  01267E  C074  F0C9         	movff	?_currentMeasuredToPeak+1,_Ipk+1
 22801  012682  C075  F0CA         	movff	?_currentMeasuredToPeak+2,_Ipk+2
 22802                           
 22803                           ;main.c: 161: Irms = peakToRMS(Ipk, TRIAC_Firing_Angle);
 22804  012686  C0C8  F094         	movff	_Ipk,peakToRMS@Peak
 22805  01268A  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1
 22806  01268E  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2
 22807  012692  C0DD  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle
 22808  012696  C0DE  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1
 22809  01269A  C0DF  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2
 22810  01269E  EC2E  F09B         	call	_peakToRMS	;wreg free
 22811  0126A2  C094  F1C3         	movff	?_peakToRMS,_Irms
 22812  0126A6  C095  F1C4         	movff	?_peakToRMS+1,_Irms+1
 22813  0126AA  C096  F1C5         	movff	?_peakToRMS+2,_Irms+2
 22814                           
 22815                           ;main.c: 162: Vrms = peakToRMS(Vpk, TRIAC_Firing_Angle);
 22816  0126AE  C0E3  F094         	movff	_Vpk,peakToRMS@Peak
 22817  0126B2  C0E4  F095         	movff	_Vpk+1,peakToRMS@Peak+1
 22818  0126B6  C0E5  F096         	movff	_Vpk+2,peakToRMS@Peak+2
 22819  0126BA  C0DD  F097         	movff	_TRIAC_Firing_Angle,peakToRMS@Angle
 22820  0126BE  C0DE  F098         	movff	_TRIAC_Firing_Angle+1,peakToRMS@Angle+1
 22821  0126C2  C0DF  F099         	movff	_TRIAC_Firing_Angle+2,peakToRMS@Angle+2
 22822  0126C6  EC2E  F09B         	call	_peakToRMS	;wreg free
 22823  0126CA  C094  F1C0         	movff	?_peakToRMS,_Vrms
 22824  0126CE  C095  F1C1         	movff	?_peakToRMS+1,_Vrms+1
 22825  0126D2  C096  F1C2         	movff	?_peakToRMS+2,_Vrms+2
 22826                           
 22827                           ;main.c: 164: }
 22828  0126D6  0012               	return	
 22829  0126D8                     i2l748:
 22830                           
 22831                           ;main.c: 167: else {
 22832                           ;main.c: 169: Ipk = Imeas;
 22833  0126D8  C0C5  F0C8         	movff	_Imeas,_Ipk
 22834  0126DC  C0C6  F0C9         	movff	_Imeas+1,_Ipk+1
 22835  0126E0  C0C7  F0CA         	movff	_Imeas+2,_Ipk+2
 22836                           
 22837                           ;main.c: 170: Irms = peakToRMS(Ipk, 0.0);
 22838  0126E4  C0C8  F094         	movff	_Ipk,peakToRMS@Peak
 22839  0126E8  C0C9  F095         	movff	_Ipk+1,peakToRMS@Peak+1
 22840  0126EC  C0CA  F096         	movff	_Ipk+2,peakToRMS@Peak+2
 22841  0126F0  0E00               	movlw	0
 22842  0126F2  0100               	movlb	0	; () banked
 22843  0126F4  6F97               	movwf	peakToRMS@Angle& (0+255),b
 22844  0126F6  0E00               	movlw	0
 22845  0126F8  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 22846  0126FA  0E00               	movlw	0
 22847  0126FC  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 22848  0126FE  EC2E  F09B         	call	_peakToRMS	;wreg free
 22849  012702  C094  F1C3         	movff	?_peakToRMS,_Irms
 22850  012706  C095  F1C4         	movff	?_peakToRMS+1,_Irms+1
 22851  01270A  C096  F1C5         	movff	?_peakToRMS+2,_Irms+2
 22852                           
 22853                           ;main.c: 171: Vrms = peakToRMS(Vpk, 0.0);
 22854  01270E  C0E3  F094         	movff	_Vpk,peakToRMS@Peak
 22855  012712  C0E4  F095         	movff	_Vpk+1,peakToRMS@Peak+1
 22856  012716  C0E5  F096         	movff	_Vpk+2,peakToRMS@Peak+2
 22857  01271A  0E00               	movlw	0
 22858  01271C  0100               	movlb	0	; () banked
 22859  01271E  6F97               	movwf	peakToRMS@Angle& (0+255),b
 22860  012720  0E00               	movlw	0
 22861  012722  6F98               	movwf	(peakToRMS@Angle+1)& (0+255),b
 22862  012724  0E00               	movlw	0
 22863  012726  6F99               	movwf	(peakToRMS@Angle+2)& (0+255),b
 22864  012728  EC2E  F09B         	call	_peakToRMS	;wreg free
 22865  01272C  C094  F1C0         	movff	?_peakToRMS,_Vrms
 22866  012730  C095  F1C1         	movff	?_peakToRMS+1,_Vrms+1
 22867  012734  C096  F1C2         	movff	?_peakToRMS+2,_Vrms+2
 22868                           
 22869                           ;main.c: 173: }
 22870                           ;main.c: 177: break;
 22871  012738  0012               	return	
 22872  01273A                     
 22873                           ;main.c: 181: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 22874  01273A  0EC0               	movlw	192
 22875  01273C  6E18               	movwf	i2___ftdiv@f2,c
 22876  01273E  0E7F               	movlw	127
 22877  012740  6E19               	movwf	i2___ftdiv@f2+1,c
 22878  012742  0E44               	movlw	68
 22879  012744  6E1A               	movwf	i2___ftdiv@f2+2,c
 22880  012746  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22881  01274A  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22882  01274E  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22883  012752  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 22884  012756  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22885  01275A  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22886  01275E  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22887  012762  ECB7  F0B0         	call	_ADCC_GetConversionResult	;wreg free
 22888  012766  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22889  01276A  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22890  01276E  EC5B  F0B0         	call	___lwtoft	;wreg free
 22891  012772  C009  F027         	movff	?___lwtoft,i2___ftmul@f1
 22892  012776  C00A  F028         	movff	?___lwtoft+1,i2___ftmul@f1+1
 22893  01277A  C00B  F029         	movff	?___lwtoft+2,i2___ftmul@f1+2
 22894  01277E  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22895  012782  C027  F0B0         	movff	?i2___ftmul,_ADC_postProcessingCallback$3316
 22896  012786  C028  F0B1         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3316+1
 22897  01278A  C029  F0B2         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3316+2
 22898                           
 22899                           ;main.c: 181: POS12_ADC_Result = (ADCC_GetConversionResult()) * (POS3P3_ADC_Result/1023.
      +                          0) * 4.0303030303;
 22900  01278E  C0B0  F027         	movff	_ADC_postProcessingCallback$3316,i2___ftmul@f1
 22901  012792  C0B1  F028         	movff	_ADC_postProcessingCallback$3316+1,i2___ftmul@f1+1
 22902  012796  C0B2  F029         	movff	_ADC_postProcessingCallback$3316+2,i2___ftmul@f1+2
 22903  01279A  0EF8               	movlw	248
 22904  01279C  6E2A               	movwf	i2___ftmul@f2,c
 22905  01279E  0E80               	movlw	128
 22906  0127A0  6E2B               	movwf	i2___ftmul@f2+1,c
 22907  0127A2  0E40               	movlw	64
 22908  0127A4  6E2C               	movwf	i2___ftmul@f2+2,c
 22909  0127A6  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22910  0127AA  C027  F1C9         	movff	?i2___ftmul,_POS12_ADC_Result
 22911  0127AE  C028  F1CA         	movff	?i2___ftmul+1,_POS12_ADC_Result+1
 22912  0127B2  C029  F1CB         	movff	?i2___ftmul+2,_POS12_ADC_Result+2
 22913                           
 22914                           ;main.c: 182: break;
 22915  0127B6  0012               	return	
 22916  0127B8                     
 22917                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22918  0127B8  0E00               	movlw	0
 22919  0127BA  6E18               	movwf	i2___ftdiv@f2,c
 22920  0127BC  0E00               	movlw	0
 22921  0127BE  6E19               	movwf	i2___ftdiv@f2+1,c
 22922  0127C0  0E40               	movlw	64
 22923  0127C2  6E1A               	movwf	i2___ftdiv@f2+2,c
 22924  0127C4  C0CB  F015         	movff	_POS3P3_ADC_Result,i2___ftdiv@f1
 22925  0127C8  C0CC  F016         	movff	_POS3P3_ADC_Result+1,i2___ftdiv@f1+1
 22926  0127CC  C0CD  F017         	movff	_POS3P3_ADC_Result+2,i2___ftdiv@f1+2
 22927  0127D0  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 22928  0127D4  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 22929  0127D8  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 22930  0127DC  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 22931  0127E0  0E00               	movlw	0
 22932  0127E2  6E43               	movwf	i2___ftadd@f2,c
 22933  0127E4  0E80               	movlw	128
 22934  0127E6  6E44               	movwf	i2___ftadd@f2+1,c
 22935  0127E8  0E3F               	movlw	63
 22936  0127EA  6E45               	movwf	i2___ftadd@f2+2,c
 22937  0127EC  0EC0               	movlw	192
 22938  0127EE  6E18               	movwf	i2___ftdiv@f2,c
 22939  0127F0  0E7F               	movlw	127
 22940  0127F2  6E19               	movwf	i2___ftdiv@f2+1,c
 22941  0127F4  0E44               	movlw	68
 22942  0127F6  6E1A               	movwf	i2___ftdiv@f2+2,c
 22943  0127F8  ECB7  F0B0         	call	_ADCC_GetConversionResult	;wreg free
 22944  0127FC  C001  F009         	movff	?_ADCC_GetConversionResult,___lwtoft@c
 22945  012800  C002  F00A         	movff	?_ADCC_GetConversionResult+1,___lwtoft@c+1
 22946  012804  EC5B  F0B0         	call	___lwtoft	;wreg free
 22947  012808  C009  F015         	movff	?___lwtoft,i2___ftdiv@f1
 22948  01280C  C00A  F016         	movff	?___lwtoft+1,i2___ftdiv@f1+1
 22949  012810  C00B  F017         	movff	?___lwtoft+2,i2___ftdiv@f1+2
 22950  012814  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 22951  012818  C015  F024         	movff	?i2___ftdiv,i2___ftneg@f1
 22952  01281C  C016  F025         	movff	?i2___ftdiv+1,i2___ftneg@f1+1
 22953  012820  C017  F026         	movff	?i2___ftdiv+2,i2___ftneg@f1+2
 22954  012824  EC49  F0B0         	call	i2___ftneg	;wreg free
 22955  012828  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22956  01282C  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22957  012830  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22958  012834  ECC9  F09D         	call	i2___ftadd	;wreg free
 22959  012838  C040  F027         	movff	?i2___ftadd,i2___ftmul@f1
 22960  01283C  C041  F028         	movff	?i2___ftadd+1,i2___ftmul@f1+1
 22961  012840  C042  F029         	movff	?i2___ftadd+2,i2___ftmul@f1+2
 22962  012844  ECC3  F0A3         	call	i2___ftmul	;wreg free
 22963  012848  C027  F0A6         	movff	?i2___ftmul,_ADC_postProcessingCallback$3317
 22964  01284C  C028  F0A7         	movff	?i2___ftmul+1,_ADC_postProcessingCallback$3317+1
 22965  012850  C029  F0A8         	movff	?i2___ftmul+2,_ADC_postProcessingCallback$3317+2
 22966                           
 22967                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22968  012854  0E04               	movlw	4
 22969  012856  6E18               	movwf	i2___ftdiv@f2,c
 22970  012858  0EAD               	movlw	173
 22971  01285A  6E19               	movwf	i2___ftdiv@f2+1,c
 22972  01285C  0E3A               	movlw	58
 22973  01285E  6E1A               	movwf	i2___ftdiv@f2+2,c
 22974  012860  0EB4               	movlw	180
 22975  012862  6E43               	movwf	i2___ftadd@f2,c
 22976  012864  0E28               	movlw	40
 22977  012866  6E44               	movwf	i2___ftadd@f2+1,c
 22978  012868  0E3F               	movlw	63
 22979  01286A  6E45               	movwf	i2___ftadd@f2+2,c
 22980  01286C  C0A6  F024         	movff	_ADC_postProcessingCallback$3317,i2___ftneg@f1
 22981  012870  C0A7  F025         	movff	_ADC_postProcessingCallback$3317+1,i2___ftneg@f1+1
 22982  012874  C0A8  F026         	movff	_ADC_postProcessingCallback$3317+2,i2___ftneg@f1+2
 22983  012878  EC49  F0B0         	call	i2___ftneg	;wreg free
 22984  01287C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 22985  012880  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 22986  012884  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 22987  012888  ECC9  F09D         	call	i2___ftadd	;wreg free
 22988  01288C  C040  F015         	movff	?i2___ftadd,i2___ftdiv@f1
 22989  012890  C041  F016         	movff	?i2___ftadd+1,i2___ftdiv@f1+1
 22990  012894  C042  F017         	movff	?i2___ftadd+2,i2___ftdiv@f1+2
 22991  012898  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 22992  01289C  C015  F0A9         	movff	?i2___ftdiv,_ADC_postProcessingCallback$3318
 22993  0128A0  C016  F0AA         	movff	?i2___ftdiv+1,_ADC_postProcessingCallback$3318+1
 22994  0128A4  C017  F0AB         	movff	?i2___ftdiv+2,_ADC_postProcessingCallback$3318+2
 22995                           
 22996                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 22997  0128A8  C0E6  F043         	movff	_Temp_ADC_Offset,i2___ftadd@f2
 22998  0128AC  C0E7  F044         	movff	_Temp_ADC_Offset+1,i2___ftadd@f2+1
 22999  0128B0  C0E8  F045         	movff	_Temp_ADC_Offset+2,i2___ftadd@f2+2
 23000  0128B4  C0A9  F040         	movff	_ADC_postProcessingCallback$3318,i2___ftadd@f1
 23001  0128B8  C0AA  F041         	movff	_ADC_postProcessingCallback$3318+1,i2___ftadd@f1+1
 23002  0128BC  C0AB  F042         	movff	_ADC_postProcessingCallback$3318+2,i2___ftadd@f1+2
 23003  0128C0  ECC9  F09D         	call	i2___ftadd	;wreg free
 23004  0128C4  C040  F0AC         	movff	?i2___ftadd,_ADC_postProcessingCallback$3319
 23005  0128C8  C041  F0AD         	movff	?i2___ftadd+1,_ADC_postProcessingCallback$3319+1
 23006  0128CC  C042  F0AE         	movff	?i2___ftadd+2,_ADC_postProcessingCallback$3319+2
 23007                           
 23008                           ;main.c: 186: Temp_ADC_Result = (0.659 - (POS3P3_ADC_Result/2.0) * (1 - ADCC_GetConversi
      +                          onResult()/1023.0)) / .00132 - 40.0 + Temp_ADC_Offset;
 23009  0128D0  C0AC  F040         	movff	_ADC_postProcessingCallback$3319,i2___ftadd@f1
 23010  0128D4  C0AD  F041         	movff	_ADC_postProcessingCallback$3319+1,i2___ftadd@f1+1
 23011  0128D8  C0AE  F042         	movff	_ADC_postProcessingCallback$3319+2,i2___ftadd@f1+2
 23012  0128DC  0E00               	movlw	0
 23013  0128DE  6E43               	movwf	i2___ftadd@f2,c
 23014  0128E0  0E20               	movlw	32
 23015  0128E2  6E44               	movwf	i2___ftadd@f2+1,c
 23016  0128E4  0EC2               	movlw	194
 23017  0128E6  6E45               	movwf	i2___ftadd@f2+2,c
 23018  0128E8  ECC9  F09D         	call	i2___ftadd	;wreg free
 23019  0128EC  C040  F1C6         	movff	?i2___ftadd,_Temp_ADC_Result
 23020  0128F0  C041  F1C7         	movff	?i2___ftadd+1,_Temp_ADC_Result+1
 23021  0128F4  C042  F1C8         	movff	?i2___ftadd+2,_Temp_ADC_Result+2
 23022                           
 23023                           ;main.c: 187: break;
 23024  0128F8  0012               	return	
 23025  0128FA                     i2l752:
 23026                           
 23027                           ; BSR set to: 0
 23028                           ;main.c: 191: LATFbits.LATF3 = 1;
 23029  0128FA  867E               	bsf	3966,3,c	;volatile
 23030                           
 23031                           ; BSR set to: 0
 23032                           ;main.c: 194: }
 23033                           
 23034                           ;main.c: 192: break;
 23035  0128FC  0012               	return	
 23036  0128FE                     i2l743:
 23037                           
 23038                           ; BSR set to: 0
 23039  0128FE  0100               	movlb	0	; () banked
 23040  012900  51AF               	movf	ADC_postProcessingCallback@currentADCChannel& (0+255),w,b
 23041                           
 23042                           ; Switch size 1, requested type "space"
 23043                           ; Number of cases is 5, Range of values is 0 to 63
 23044                           ; switch strategies available:
 23045                           ; Name         Instructions Cycles
 23046                           ; simple_byte           16     9 (average)
 23047                           ;	Chosen strategy is simple_byte
 23048  012902  0A00               	xorlw	0	; case 0
 23049  012904  B4D8               	btfsc	status,2,c
 23050  012906  D66B               	goto	i2l747
 23051  012908  0A04               	xorlw	4	; case 4
 23052  01290A  B4D8               	btfsc	status,2,c
 23053  01290C  D716               	goto	i2l750
 23054  01290E  0A26               	xorlw	38	; case 34
 23055  012910  B4D8               	btfsc	status,2,c
 23056  012912  D634               	goto	i2l746
 23057  012914  0A1F               	xorlw	31	; case 61
 23058  012916  B4D8               	btfsc	status,2,c
 23059  012918  D74F               	goto	i2l751
 23060  01291A  0A02               	xorlw	2	; case 63
 23061  01291C  B4D8               	btfsc	status,2,c
 23062  01291E  D5FD               	goto	i2l744
 23063  012920  D7EC               	goto	i2l752
 23064  012922                     __end_of_ADC_postProcessingCallback:
 23065                           	opt stack 0
 23066                           tosu	equ	0xFFF
 23067                           tosh	equ	0xFFE
 23068                           tosl	equ	0xFFD
 23069                           pclatu	equ	0xFFB
 23070                           pclath	equ	0xFFA
 23071                           tblptru	equ	0xFF8
 23072                           tblptrh	equ	0xFF7
 23073                           tblptrl	equ	0xFF6
 23074                           tablat	equ	0xFF5
 23075                           prodh	equ	0xFF4
 23076                           prodl	equ	0xFF3
 23077                           intcon	equ	0xFF2
 23078                           postinc0	equ	0xFEE
 23079                           fsr0h	equ	0xFEA
 23080                           fsr0l	equ	0xFE9
 23081                           wreg	equ	0xFE8
 23082                           indf1	equ	0xFE7
 23083                           postdec1	equ	0xFE5
 23084                           fsr1h	equ	0xFE2
 23085                           fsr1l	equ	0xFE1
 23086                           bsr	equ	0xFE0
 23087                           indf2	equ	0xFDF
 23088                           postinc2	equ	0xFDE
 23089                           postdec2	equ	0xFDD
 23090                           fsr2h	equ	0xFDA
 23091                           fsr2l	equ	0xFD9
 23092                           status	equ	0xFD8
 23093                           
 23094 ;; *************** function _peakToRMS *****************
 23095 ;; Defined at:
 23096 ;;		line 86 in file "main.c"
 23097 ;; Parameters:    Size  Location     Type
 23098 ;;  Peak            3   52[BANK0 ] void 
 23099 ;;  Angle           3   55[BANK0 ] void 
 23100 ;; Auto vars:     Size  Location     Type
 23101 ;;  RMS             3   67[BANK0 ] void 
 23102 ;; Return value:  Size  Location     Type
 23103 ;;                  3   52[BANK0 ] void 
 23104 ;; Registers used:
 23105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23106 ;; Tracked objects:
 23107 ;;		On entry : 0/0
 23108 ;;		On exit  : 0/0
 23109 ;;		Unchanged: 0/0
 23110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23111 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23112 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23114 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23115 ;;Total ram usage:       18 bytes
 23116 ;; Hardware stack levels used:    1
 23117 ;; Hardware stack levels required when called:    6
 23118 ;; This function calls:
 23119 ;;		_acos
 23120 ;;		_sin
 23121 ;;		_sqrt
 23122 ;;		i2___ftadd
 23123 ;;		i2___ftdiv
 23124 ;;		i2___ftmul
 23125 ;;		i2___ftneg
 23126 ;; This function is called by:
 23127 ;;		_ADC_postProcessingCallback
 23128 ;; This function uses a non-reentrant model
 23129 ;;
 23130                           
 23131                           	psect	text89
 23132  01365C                     __ptext89:
 23133                           	opt stack 0
 23134  01365C                     _peakToRMS:
 23135                           	opt stack 9
 23136                           
 23137                           ;main.c: 89: double RMS = 0.0;
 23138                           
 23139                           ;incstack = 0
 23140  01365C  0E00               	movlw	0
 23141  01365E  0100               	movlb	0	; () banked
 23142  013660  6FA3               	movwf	peakToRMS@RMS& (0+255),b
 23143  013662  0E00               	movlw	0
 23144  013664  6FA4               	movwf	(peakToRMS@RMS+1)& (0+255),b
 23145  013666  0E00               	movlw	0
 23146  013668  6FA5               	movwf	(peakToRMS@RMS+2)& (0+255),b
 23147                           
 23148                           ; BSR set to: 0
 23149                           ;main.c: 92: RMS = 2.0 * acos(-1.0);
 23150  01366A  0E00               	movlw	0
 23151  01366C  6F8E               	movwf	acos@x& (0+255),b
 23152  01366E  0E80               	movlw	128
 23153  013670  6F8F               	movwf	(acos@x+1)& (0+255),b
 23154  013672  0EBF               	movlw	191
 23155  013674  6F90               	movwf	(acos@x+2)& (0+255),b
 23156  013676  EC56  F0AD         	call	_acos	;wreg free
 23157  01367A  C08E  F0A0         	movff	?_acos,_peakToRMS$3313
 23158  01367E  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3313+1
 23159  013682  C090  F0A2         	movff	?_acos+2,_peakToRMS$3313+2
 23160                           
 23161                           ;main.c: 92: RMS = 2.0 * acos(-1.0);
 23162  013686  C0A0  F027         	movff	_peakToRMS$3313,i2___ftmul@f1
 23163  01368A  C0A1  F028         	movff	_peakToRMS$3313+1,i2___ftmul@f1+1
 23164  01368E  C0A2  F029         	movff	_peakToRMS$3313+2,i2___ftmul@f1+2
 23165  013692  0E00               	movlw	0
 23166  013694  6E2A               	movwf	i2___ftmul@f2,c
 23167  013696  0E00               	movlw	0
 23168  013698  6E2B               	movwf	i2___ftmul@f2+1,c
 23169  01369A  0E40               	movlw	64
 23170  01369C  6E2C               	movwf	i2___ftmul@f2+2,c
 23171  01369E  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23172  0136A2  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 23173  0136A6  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 23174  0136AA  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 23175                           
 23176                           ;main.c: 93: RMS = RMS - (2.0 * Angle);
 23177  0136AE  0E00               	movlw	0
 23178  0136B0  6E2A               	movwf	i2___ftmul@f2,c
 23179  0136B2  0E00               	movlw	0
 23180  0136B4  6E2B               	movwf	i2___ftmul@f2+1,c
 23181  0136B6  0E40               	movlw	64
 23182  0136B8  6E2C               	movwf	i2___ftmul@f2+2,c
 23183  0136BA  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 23184  0136BE  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 23185  0136C2  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 23186  0136C6  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23187  0136CA  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 23188  0136CE  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 23189  0136D2  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 23190  0136D6  EC49  F0B0         	call	i2___ftneg	;wreg free
 23191  0136DA  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23192  0136DE  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23193  0136E2  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23194  0136E6  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 23195  0136EA  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 23196  0136EE  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 23197  0136F2  ECC9  F09D         	call	i2___ftadd	;wreg free
 23198  0136F6  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 23199  0136FA  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 23200  0136FE  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 23201                           
 23202                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 23203  013702  0E00               	movlw	0
 23204  013704  6E2A               	movwf	i2___ftmul@f2,c
 23205  013706  0E00               	movlw	0
 23206  013708  6E2B               	movwf	i2___ftmul@f2+1,c
 23207  01370A  0E40               	movlw	64
 23208  01370C  6E2C               	movwf	i2___ftmul@f2+2,c
 23209  01370E  C097  F027         	movff	peakToRMS@Angle,i2___ftmul@f1
 23210  013712  C098  F028         	movff	peakToRMS@Angle+1,i2___ftmul@f1+1
 23211  013716  C099  F029         	movff	peakToRMS@Angle+2,i2___ftmul@f1+2
 23212  01371A  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23213  01371E  C027  F09A         	movff	?i2___ftmul,_peakToRMS$3314
 23214  013722  C028  F09B         	movff	?i2___ftmul+1,_peakToRMS$3314+1
 23215  013726  C029  F09C         	movff	?i2___ftmul+2,_peakToRMS$3314+2
 23216                           
 23217                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 23218  01372A  C09A  F066         	movff	_peakToRMS$3314,sin@f
 23219  01372E  C09B  F067         	movff	_peakToRMS$3314+1,sin@f+1
 23220  013732  C09C  F068         	movff	_peakToRMS$3314+2,sin@f+2
 23221  013736  ECFF  F099         	call	_sin	;wreg free
 23222  01373A  C066  F09D         	movff	?_sin,_peakToRMS$3315
 23223  01373E  C067  F09E         	movff	?_sin+1,_peakToRMS$3315+1
 23224  013742  C068  F09F         	movff	?_sin+2,_peakToRMS$3315+2
 23225                           
 23226                           ;main.c: 94: RMS = RMS + sin(2.0 * Angle);
 23227  013746  C09D  F040         	movff	_peakToRMS$3315,i2___ftadd@f1
 23228  01374A  C09E  F041         	movff	_peakToRMS$3315+1,i2___ftadd@f1+1
 23229  01374E  C09F  F042         	movff	_peakToRMS$3315+2,i2___ftadd@f1+2
 23230  013752  C0A3  F043         	movff	peakToRMS@RMS,i2___ftadd@f2
 23231  013756  C0A4  F044         	movff	peakToRMS@RMS+1,i2___ftadd@f2+1
 23232  01375A  C0A5  F045         	movff	peakToRMS@RMS+2,i2___ftadd@f2+2
 23233  01375E  ECC9  F09D         	call	i2___ftadd	;wreg free
 23234  013762  C040  F0A3         	movff	?i2___ftadd,peakToRMS@RMS
 23235  013766  C041  F0A4         	movff	?i2___ftadd+1,peakToRMS@RMS+1
 23236  01376A  C042  F0A5         	movff	?i2___ftadd+2,peakToRMS@RMS+2
 23237                           
 23238                           ;main.c: 95: RMS = RMS / (4.0 * acos(-1.0));
 23239  01376E  0E00               	movlw	0
 23240  013770  0100               	movlb	0	; () banked
 23241  013772  6F8E               	movwf	acos@x& (0+255),b
 23242  013774  0E80               	movlw	128
 23243  013776  6F8F               	movwf	(acos@x+1)& (0+255),b
 23244  013778  0EBF               	movlw	191
 23245  01377A  6F90               	movwf	(acos@x+2)& (0+255),b
 23246  01377C  EC56  F0AD         	call	_acos	;wreg free
 23247  013780  C08E  F0A0         	movff	?_acos,_peakToRMS$3313
 23248  013784  C08F  F0A1         	movff	?_acos+1,_peakToRMS$3313+1
 23249  013788  C090  F0A2         	movff	?_acos+2,_peakToRMS$3313+2
 23250                           
 23251                           ;main.c: 95: RMS = RMS / (4.0 * acos(-1.0));
 23252  01378C  C0A3  F015         	movff	peakToRMS@RMS,i2___ftdiv@f1
 23253  013790  C0A4  F016         	movff	peakToRMS@RMS+1,i2___ftdiv@f1+1
 23254  013794  C0A5  F017         	movff	peakToRMS@RMS+2,i2___ftdiv@f1+2
 23255  013798  0E00               	movlw	0
 23256  01379A  6E2A               	movwf	i2___ftmul@f2,c
 23257  01379C  0E80               	movlw	128
 23258  01379E  6E2B               	movwf	i2___ftmul@f2+1,c
 23259  0137A0  0E40               	movlw	64
 23260  0137A2  6E2C               	movwf	i2___ftmul@f2+2,c
 23261  0137A4  C0A0  F027         	movff	_peakToRMS$3313,i2___ftmul@f1
 23262  0137A8  C0A1  F028         	movff	_peakToRMS$3313+1,i2___ftmul@f1+1
 23263  0137AC  C0A2  F029         	movff	_peakToRMS$3313+2,i2___ftmul@f1+2
 23264  0137B0  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23265  0137B4  C027  F018         	movff	?i2___ftmul,i2___ftdiv@f2
 23266  0137B8  C028  F019         	movff	?i2___ftmul+1,i2___ftdiv@f2+1
 23267  0137BC  C029  F01A         	movff	?i2___ftmul+2,i2___ftdiv@f2+2
 23268  0137C0  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 23269  0137C4  C015  F0A3         	movff	?i2___ftdiv,peakToRMS@RMS
 23270  0137C8  C016  F0A4         	movff	?i2___ftdiv+1,peakToRMS@RMS+1
 23271  0137CC  C017  F0A5         	movff	?i2___ftdiv+2,peakToRMS@RMS+2
 23272                           
 23273                           ;main.c: 96: RMS = sqrt(RMS);
 23274  0137D0  C0A3  F066         	movff	peakToRMS@RMS,sqrt@a
 23275  0137D4  C0A4  F067         	movff	peakToRMS@RMS+1,sqrt@a+1
 23276  0137D8  C0A5  F068         	movff	peakToRMS@RMS+2,sqrt@a+2
 23277  0137DC  EC9F  F09E         	call	_sqrt	;wreg free
 23278  0137E0  C066  F0A3         	movff	?_sqrt,peakToRMS@RMS
 23279  0137E4  C067  F0A4         	movff	?_sqrt+1,peakToRMS@RMS+1
 23280  0137E8  C068  F0A5         	movff	?_sqrt+2,peakToRMS@RMS+2
 23281                           
 23282                           ;main.c: 97: RMS = Peak * RMS;
 23283  0137EC  C094  F027         	movff	peakToRMS@Peak,i2___ftmul@f1
 23284  0137F0  C095  F028         	movff	peakToRMS@Peak+1,i2___ftmul@f1+1
 23285  0137F4  C096  F029         	movff	peakToRMS@Peak+2,i2___ftmul@f1+2
 23286  0137F8  C0A3  F02A         	movff	peakToRMS@RMS,i2___ftmul@f2
 23287  0137FC  C0A4  F02B         	movff	peakToRMS@RMS+1,i2___ftmul@f2+1
 23288  013800  C0A5  F02C         	movff	peakToRMS@RMS+2,i2___ftmul@f2+2
 23289  013804  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23290  013808  C027  F0A3         	movff	?i2___ftmul,peakToRMS@RMS
 23291  01380C  C028  F0A4         	movff	?i2___ftmul+1,peakToRMS@RMS+1
 23292  013810  C029  F0A5         	movff	?i2___ftmul+2,peakToRMS@RMS+2
 23293                           
 23294                           ;main.c: 98: return RMS;
 23295  013814  C0A3  F094         	movff	peakToRMS@RMS,?_peakToRMS
 23296  013818  C0A4  F095         	movff	peakToRMS@RMS+1,?_peakToRMS+1
 23297  01381C  C0A5  F096         	movff	peakToRMS@RMS+2,?_peakToRMS+2
 23298  013820  0012               	return	
 23299  013822                     __end_of_peakToRMS:
 23300                           	opt stack 0
 23301                           tosu	equ	0xFFF
 23302                           tosh	equ	0xFFE
 23303                           tosl	equ	0xFFD
 23304                           pclatu	equ	0xFFB
 23305                           pclath	equ	0xFFA
 23306                           tblptru	equ	0xFF8
 23307                           tblptrh	equ	0xFF7
 23308                           tblptrl	equ	0xFF6
 23309                           tablat	equ	0xFF5
 23310                           prodh	equ	0xFF4
 23311                           prodl	equ	0xFF3
 23312                           intcon	equ	0xFF2
 23313                           postinc0	equ	0xFEE
 23314                           fsr0h	equ	0xFEA
 23315                           fsr0l	equ	0xFE9
 23316                           wreg	equ	0xFE8
 23317                           indf1	equ	0xFE7
 23318                           postdec1	equ	0xFE5
 23319                           fsr1h	equ	0xFE2
 23320                           fsr1l	equ	0xFE1
 23321                           bsr	equ	0xFE0
 23322                           indf2	equ	0xFDF
 23323                           postinc2	equ	0xFDE
 23324                           postdec2	equ	0xFDD
 23325                           fsr2h	equ	0xFDA
 23326                           fsr2l	equ	0xFD9
 23327                           status	equ	0xFD8
 23328                           
 23329 ;; *************** function _acos *****************
 23330 ;; Defined at:
 23331 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\acos.c"
 23332 ;; Parameters:    Size  Location     Type
 23333 ;;  x               3   46[BANK0 ] void 
 23334 ;; Auto vars:     Size  Location     Type
 23335 ;;		None
 23336 ;; Return value:  Size  Location     Type
 23337 ;;                  3   46[BANK0 ] void 
 23338 ;; Registers used:
 23339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23340 ;; Tracked objects:
 23341 ;;		On entry : 0/0
 23342 ;;		On exit  : 0/0
 23343 ;;		Unchanged: 0/0
 23344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23345 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23346 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23348 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23349 ;;Total ram usage:        6 bytes
 23350 ;; Hardware stack levels used:    1
 23351 ;; Hardware stack levels required when called:    5
 23352 ;; This function calls:
 23353 ;;		_asin
 23354 ;;		i2___ftadd
 23355 ;;		i2___ftneg
 23356 ;; This function is called by:
 23357 ;;		_peakToRMS
 23358 ;; This function uses a non-reentrant model
 23359 ;;
 23360                           
 23361                           	psect	text90
 23362  015AAC                     __ptext90:
 23363                           	opt stack 0
 23364  015AAC                     _acos:
 23365                           	opt stack 9
 23366                           
 23367                           ;incstack = 0
 23368  015AAC  C08E  F079         	movff	acos@x,asin@x
 23369  015AB0  C08F  F07A         	movff	acos@x+1,asin@x+1
 23370  015AB4  C090  F07B         	movff	acos@x+2,asin@x+2
 23371  015AB8  ECCA  F098         	call	_asin	;wreg free
 23372  015ABC  C079  F091         	movff	?_asin,_acos$3320
 23373  015AC0  C07A  F092         	movff	?_asin+1,_acos$3320+1
 23374  015AC4  C07B  F093         	movff	?_asin+2,_acos$3320+2
 23375  015AC8  C091  F024         	movff	_acos$3320,i2___ftneg@f1
 23376  015ACC  C092  F025         	movff	_acos$3320+1,i2___ftneg@f1+1
 23377  015AD0  C093  F026         	movff	_acos$3320+2,i2___ftneg@f1+2
 23378  015AD4  EC49  F0B0         	call	i2___ftneg	;wreg free
 23379  015AD8  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23380  015ADC  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23381  015AE0  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23382  015AE4  0E10               	movlw	16
 23383  015AE6  6E43               	movwf	i2___ftadd@f2,c
 23384  015AE8  0EC9               	movlw	201
 23385  015AEA  6E44               	movwf	i2___ftadd@f2+1,c
 23386  015AEC  0E3F               	movlw	63
 23387  015AEE  6E45               	movwf	i2___ftadd@f2+2,c
 23388  015AF0  ECC9  F09D         	call	i2___ftadd	;wreg free
 23389  015AF4  C040  F08E         	movff	?i2___ftadd,?_acos
 23390  015AF8  C041  F08F         	movff	?i2___ftadd+1,?_acos+1
 23391  015AFC  C042  F090         	movff	?i2___ftadd+2,?_acos+2
 23392  015B00  0012               	return	
 23393  015B02                     __end_of_acos:
 23394                           	opt stack 0
 23395                           tosu	equ	0xFFF
 23396                           tosh	equ	0xFFE
 23397                           tosl	equ	0xFFD
 23398                           pclatu	equ	0xFFB
 23399                           pclath	equ	0xFFA
 23400                           tblptru	equ	0xFF8
 23401                           tblptrh	equ	0xFF7
 23402                           tblptrl	equ	0xFF6
 23403                           tablat	equ	0xFF5
 23404                           prodh	equ	0xFF4
 23405                           prodl	equ	0xFF3
 23406                           intcon	equ	0xFF2
 23407                           postinc0	equ	0xFEE
 23408                           fsr0h	equ	0xFEA
 23409                           fsr0l	equ	0xFE9
 23410                           wreg	equ	0xFE8
 23411                           indf1	equ	0xFE7
 23412                           postdec1	equ	0xFE5
 23413                           fsr1h	equ	0xFE2
 23414                           fsr1l	equ	0xFE1
 23415                           bsr	equ	0xFE0
 23416                           indf2	equ	0xFDF
 23417                           postinc2	equ	0xFDE
 23418                           postdec2	equ	0xFDD
 23419                           fsr2h	equ	0xFDA
 23420                           fsr2l	equ	0xFD9
 23421                           status	equ	0xFD8
 23422                           
 23423 ;; *************** function _asin *****************
 23424 ;; Defined at:
 23425 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\asin.c"
 23426 ;; Parameters:    Size  Location     Type
 23427 ;;  x               3   25[BANK0 ] void 
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;  y               3   40[BANK0 ] void 
 23430 ;;  sgn             3   28[BANK0 ] void 
 23431 ;; Return value:  Size  Location     Type
 23432 ;;                  3   25[BANK0 ] void 
 23433 ;; Registers used:
 23434 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23435 ;; Tracked objects:
 23436 ;;		On entry : 0/0
 23437 ;;		On exit  : 0/0
 23438 ;;		Unchanged: 0/0
 23439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23440 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23441 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23443 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23444 ;;Total ram usage:       21 bytes
 23445 ;; Hardware stack levels used:    1
 23446 ;; Hardware stack levels required when called:    4
 23447 ;; This function calls:
 23448 ;;		_atan
 23449 ;;		_fabs
 23450 ;;		_sqrt
 23451 ;;		i2___ftadd
 23452 ;;		i2___ftdiv
 23453 ;;		i2___ftge
 23454 ;;		i2___ftmul
 23455 ;;		i2___ftneg
 23456 ;; This function is called by:
 23457 ;;		_acos
 23458 ;; This function uses a non-reentrant model
 23459 ;;
 23460                           
 23461                           	psect	text91
 23462  013194                     __ptext91:
 23463                           	opt stack 0
 23464  013194                     _asin:
 23465                           	opt stack 9
 23466                           
 23467                           ;incstack = 0
 23468  013194  0E00               	movlw	0
 23469  013196  6E2A               	movwf	i2___ftge@ff1,c
 23470  013198  0E80               	movlw	128
 23471  01319A  6E2B               	movwf	i2___ftge@ff1+1,c
 23472  01319C  0E3F               	movlw	63
 23473  01319E  6E2C               	movwf	i2___ftge@ff1+2,c
 23474  0131A0  C079  F027         	movff	asin@x,fabs@d
 23475  0131A4  C07A  F028         	movff	asin@x+1,fabs@d+1
 23476  0131A8  C07B  F029         	movff	asin@x+2,fabs@d+2
 23477  0131AC  EC90  F0AF         	call	_fabs	;wreg free
 23478  0131B0  C027  F02D         	movff	?_fabs,i2___ftge@ff2
 23479  0131B4  C028  F02E         	movff	?_fabs+1,i2___ftge@ff2+1
 23480  0131B8  C029  F02F         	movff	?_fabs+2,i2___ftge@ff2+2
 23481  0131BC  ECB8  F0A8         	call	i2___ftge	;wreg free
 23482  0131C0  B0D8               	btfsc	status,0,c
 23483  0131C2  D00C               	goto	i2l1304
 23484  0131C4  0E00               	movlw	0
 23485  0131C6  0100               	movlb	0	; () banked
 23486  0131C8  6FD8               	movwf	(_errno+1)& (0+255),b
 23487  0131CA  0E21               	movlw	33
 23488  0131CC  6FD7               	movwf	_errno& (0+255),b
 23489  0131CE  0E00               	movlw	0
 23490  0131D0  6F79               	movwf	?_asin& (0+255),b
 23491  0131D2  0E00               	movlw	0
 23492  0131D4  6F7A               	movwf	(?_asin+1)& (0+255),b
 23493  0131D6  0E00               	movlw	0
 23494  0131D8  6F7B               	movwf	(?_asin+2)& (0+255),b
 23495                           
 23496                           ; BSR set to: 0
 23497  0131DA  0012               	return	
 23498  0131DC                     i2l1304:
 23499                           
 23500                           ; BSR set to: 0
 23501  0131DC  0E00               	movlw	0
 23502  0131DE  0100               	movlb	0	; () banked
 23503  0131E0  6F7C               	movwf	asin@sgn& (0+255),b
 23504  0131E2  0E80               	movlw	128
 23505  0131E4  6F7D               	movwf	(asin@sgn+1)& (0+255),b
 23506  0131E6  0E3F               	movlw	63
 23507  0131E8  6F7E               	movwf	(asin@sgn+2)& (0+255),b
 23508                           
 23509                           ; BSR set to: 0
 23510  0131EA  C079  F02A         	movff	asin@x,i2___ftmul@f2
 23511  0131EE  C07A  F02B         	movff	asin@x+1,i2___ftmul@f2+1
 23512  0131F2  C07B  F02C         	movff	asin@x+2,i2___ftmul@f2+2
 23513  0131F6  C079  F027         	movff	asin@x,i2___ftmul@f1
 23514  0131FA  C07A  F028         	movff	asin@x+1,i2___ftmul@f1+1
 23515  0131FE  C07B  F029         	movff	asin@x+2,i2___ftmul@f1+2
 23516  013202  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23517  013206  C027  F024         	movff	?i2___ftmul,i2___ftneg@f1
 23518  01320A  C028  F025         	movff	?i2___ftmul+1,i2___ftneg@f1+1
 23519  01320E  C029  F026         	movff	?i2___ftmul+2,i2___ftneg@f1+2
 23520  013212  EC49  F0B0         	call	i2___ftneg	;wreg free
 23521  013216  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23522  01321A  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23523  01321E  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23524  013222  0E00               	movlw	0
 23525  013224  6E43               	movwf	i2___ftadd@f2,c
 23526  013226  0E80               	movlw	128
 23527  013228  6E44               	movwf	i2___ftadd@f2+1,c
 23528  01322A  0E3F               	movlw	63
 23529  01322C  6E45               	movwf	i2___ftadd@f2+2,c
 23530  01322E  ECC9  F09D         	call	i2___ftadd	;wreg free
 23531  013232  C040  F07F         	movff	?i2___ftadd,_asin$3321
 23532  013236  C041  F080         	movff	?i2___ftadd+1,_asin$3321+1
 23533  01323A  C042  F081         	movff	?i2___ftadd+2,_asin$3321+2
 23534  01323E  C07F  F066         	movff	_asin$3321,sqrt@a
 23535  013242  C080  F067         	movff	_asin$3321+1,sqrt@a+1
 23536  013246  C081  F068         	movff	_asin$3321+2,sqrt@a+2
 23537  01324A  EC9F  F09E         	call	_sqrt	;wreg free
 23538  01324E  C066  F088         	movff	?_sqrt,asin@y
 23539  013252  C067  F089         	movff	?_sqrt+1,asin@y+1
 23540  013256  C068  F08A         	movff	?_sqrt+2,asin@y+2
 23541  01325A  C079  F027         	movff	asin@x,fabs@d
 23542  01325E  C07A  F028         	movff	asin@x+1,fabs@d+1
 23543  013262  C07B  F029         	movff	asin@x+2,fabs@d+2
 23544  013266  EC90  F0AF         	call	_fabs	;wreg free
 23545  01326A  C027  F02A         	movff	?_fabs,i2___ftge@ff1
 23546  01326E  C028  F02B         	movff	?_fabs+1,i2___ftge@ff1+1
 23547  013272  C029  F02C         	movff	?_fabs+2,i2___ftge@ff1+2
 23548  013276  0EC3               	movlw	195
 23549  013278  6E2D               	movwf	i2___ftge@ff2,c
 23550  01327A  0E35               	movlw	53
 23551  01327C  6E2E               	movwf	i2___ftge@ff2+1,c
 23552  01327E  0E3F               	movlw	63
 23553  013280  6E2F               	movwf	i2___ftge@ff2+2,c
 23554  013282  ECB8  F0A8         	call	i2___ftge	;wreg free
 23555  013286  B0D8               	btfsc	status,0,c
 23556  013288  D023               	goto	i2l1306
 23557  01328A  C079  F015         	movff	asin@x,i2___ftdiv@f1
 23558  01328E  C07A  F016         	movff	asin@x+1,i2___ftdiv@f1+1
 23559  013292  C07B  F017         	movff	asin@x+2,i2___ftdiv@f1+2
 23560  013296  C088  F018         	movff	asin@y,i2___ftdiv@f2
 23561  01329A  C089  F019         	movff	asin@y+1,i2___ftdiv@f2+1
 23562  01329E  C08A  F01A         	movff	asin@y+2,i2___ftdiv@f2+2
 23563  0132A2  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 23564  0132A6  C015  F08B         	movff	?i2___ftdiv,_asin$3322
 23565  0132AA  C016  F08C         	movff	?i2___ftdiv+1,_asin$3322+1
 23566  0132AE  C017  F08D         	movff	?i2___ftdiv+2,_asin$3322+2
 23567  0132B2  C08B  F058         	movff	_asin$3322,atan@f
 23568  0132B6  C08C  F059         	movff	_asin$3322+1,atan@f+1
 23569  0132BA  C08D  F05A         	movff	_asin$3322+2,atan@f+2
 23570  0132BE  EC11  F09C         	call	_atan	;wreg free
 23571  0132C2  C058  F079         	movff	?_atan,?_asin
 23572  0132C6  C059  F07A         	movff	?_atan+1,?_asin+1
 23573  0132CA  C05A  F07B         	movff	?_atan+2,?_asin+2
 23574  0132CE  0012               	return	
 23575  0132D0                     i2l1306:
 23576  0132D0  0100               	movlb	0	; () banked
 23577  0132D2  AF7B               	btfss	(asin@x+2)& (0+255),7,b
 23578  0132D4  D055               	goto	i2l1307
 23579                           
 23580                           ; BSR set to: 0
 23581  0132D6  C079  F018         	movff	asin@x,i2___ftdiv@f2
 23582  0132DA  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 23583  0132DE  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 23584  0132E2  C088  F024         	movff	asin@y,i2___ftneg@f1
 23585  0132E6  C089  F025         	movff	asin@y+1,i2___ftneg@f1+1
 23586  0132EA  C08A  F026         	movff	asin@y+2,i2___ftneg@f1+2
 23587  0132EE  EC49  F0B0         	call	i2___ftneg	;wreg free
 23588  0132F2  C024  F015         	movff	?i2___ftneg,i2___ftdiv@f1
 23589  0132F6  C025  F016         	movff	?i2___ftneg+1,i2___ftdiv@f1+1
 23590  0132FA  C026  F017         	movff	?i2___ftneg+2,i2___ftdiv@f1+2
 23591  0132FE  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 23592  013302  C015  F08B         	movff	?i2___ftdiv,_asin$3322
 23593  013306  C016  F08C         	movff	?i2___ftdiv+1,_asin$3322+1
 23594  01330A  C017  F08D         	movff	?i2___ftdiv+2,_asin$3322+2
 23595  01330E  C08B  F058         	movff	_asin$3322,atan@f
 23596  013312  C08C  F059         	movff	_asin$3322+1,atan@f+1
 23597  013316  C08D  F05A         	movff	_asin$3322+2,atan@f+2
 23598  01331A  EC11  F09C         	call	_atan	;wreg free
 23599  01331E  C058  F085         	movff	?_atan,_asin$3323
 23600  013322  C059  F086         	movff	?_atan+1,_asin$3323+1
 23601  013326  C05A  F087         	movff	?_atan+2,_asin$3323+2
 23602  01332A  0E10               	movlw	16
 23603  01332C  6E43               	movwf	i2___ftadd@f2,c
 23604  01332E  0EC9               	movlw	201
 23605  013330  6E44               	movwf	i2___ftadd@f2+1,c
 23606  013332  0E3F               	movlw	63
 23607  013334  6E45               	movwf	i2___ftadd@f2+2,c
 23608  013336  C085  F024         	movff	_asin$3323,i2___ftneg@f1
 23609  01333A  C086  F025         	movff	_asin$3323+1,i2___ftneg@f1+1
 23610  01333E  C087  F026         	movff	_asin$3323+2,i2___ftneg@f1+2
 23611  013342  EC49  F0B0         	call	i2___ftneg	;wreg free
 23612  013346  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23613  01334A  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23614  01334E  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23615  013352  ECC9  F09D         	call	i2___ftadd	;wreg free
 23616  013356  C040  F082         	movff	?i2___ftadd,_asin$3324
 23617  01335A  C041  F083         	movff	?i2___ftadd+1,_asin$3324+1
 23618  01335E  C042  F084         	movff	?i2___ftadd+2,_asin$3324+2
 23619  013362  C082  F024         	movff	_asin$3324,i2___ftneg@f1
 23620  013366  C083  F025         	movff	_asin$3324+1,i2___ftneg@f1+1
 23621  01336A  C084  F026         	movff	_asin$3324+2,i2___ftneg@f1+2
 23622  01336E  EC49  F0B0         	call	i2___ftneg	;wreg free
 23623  013372  C024  F079         	movff	?i2___ftneg,?_asin
 23624  013376  C025  F07A         	movff	?i2___ftneg+1,?_asin+1
 23625  01337A  C026  F07B         	movff	?i2___ftneg+2,?_asin+2
 23626  01337E  0012               	return	
 23627  013380                     i2l1307:
 23628  013380  C079  F018         	movff	asin@x,i2___ftdiv@f2
 23629  013384  C07A  F019         	movff	asin@x+1,i2___ftdiv@f2+1
 23630  013388  C07B  F01A         	movff	asin@x+2,i2___ftdiv@f2+2
 23631  01338C  C088  F015         	movff	asin@y,i2___ftdiv@f1
 23632  013390  C089  F016         	movff	asin@y+1,i2___ftdiv@f1+1
 23633  013394  C08A  F017         	movff	asin@y+2,i2___ftdiv@f1+2
 23634  013398  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 23635  01339C  C015  F08B         	movff	?i2___ftdiv,_asin$3322
 23636  0133A0  C016  F08C         	movff	?i2___ftdiv+1,_asin$3322+1
 23637  0133A4  C017  F08D         	movff	?i2___ftdiv+2,_asin$3322+2
 23638  0133A8  C08B  F058         	movff	_asin$3322,atan@f
 23639  0133AC  C08C  F059         	movff	_asin$3322+1,atan@f+1
 23640  0133B0  C08D  F05A         	movff	_asin$3322+2,atan@f+2
 23641  0133B4  EC11  F09C         	call	_atan	;wreg free
 23642  0133B8  C058  F085         	movff	?_atan,_asin$3323
 23643  0133BC  C059  F086         	movff	?_atan+1,_asin$3323+1
 23644  0133C0  C05A  F087         	movff	?_atan+2,_asin$3323+2
 23645  0133C4  C085  F024         	movff	_asin$3323,i2___ftneg@f1
 23646  0133C8  C086  F025         	movff	_asin$3323+1,i2___ftneg@f1+1
 23647  0133CC  C087  F026         	movff	_asin$3323+2,i2___ftneg@f1+2
 23648  0133D0  EC49  F0B0         	call	i2___ftneg	;wreg free
 23649  0133D4  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 23650  0133D8  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 23651  0133DC  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 23652  0133E0  0E10               	movlw	16
 23653  0133E2  6E43               	movwf	i2___ftadd@f2,c
 23654  0133E4  0EC9               	movlw	201
 23655  0133E6  6E44               	movwf	i2___ftadd@f2+1,c
 23656  0133E8  0E3F               	movlw	63
 23657  0133EA  6E45               	movwf	i2___ftadd@f2+2,c
 23658  0133EC  ECC9  F09D         	call	i2___ftadd	;wreg free
 23659  0133F0  C040  F079         	movff	?i2___ftadd,?_asin
 23660  0133F4  C041  F07A         	movff	?i2___ftadd+1,?_asin+1
 23661  0133F8  C042  F07B         	movff	?i2___ftadd+2,?_asin+2
 23662  0133FC  0012               	return	
 23663  0133FE                     __end_of_asin:
 23664                           	opt stack 0
 23665                           tosu	equ	0xFFF
 23666                           tosh	equ	0xFFE
 23667                           tosl	equ	0xFFD
 23668                           pclatu	equ	0xFFB
 23669                           pclath	equ	0xFFA
 23670                           tblptru	equ	0xFF8
 23671                           tblptrh	equ	0xFF7
 23672                           tblptrl	equ	0xFF6
 23673                           tablat	equ	0xFF5
 23674                           prodh	equ	0xFF4
 23675                           prodl	equ	0xFF3
 23676                           intcon	equ	0xFF2
 23677                           postinc0	equ	0xFEE
 23678                           fsr0h	equ	0xFEA
 23679                           fsr0l	equ	0xFE9
 23680                           wreg	equ	0xFE8
 23681                           indf1	equ	0xFE7
 23682                           postdec1	equ	0xFE5
 23683                           fsr1h	equ	0xFE2
 23684                           fsr1l	equ	0xFE1
 23685                           bsr	equ	0xFE0
 23686                           indf2	equ	0xFDF
 23687                           postinc2	equ	0xFDE
 23688                           postdec2	equ	0xFDD
 23689                           fsr2h	equ	0xFDA
 23690                           fsr2l	equ	0xFD9
 23691                           status	equ	0xFD8
 23692                           
 23693 ;; *************** function _sqrt *****************
 23694 ;; Defined at:
 23695 ;;		line 9 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcsqrt.c"
 23696 ;; Parameters:    Size  Location     Type
 23697 ;;  a               3    6[BANK0 ] void 
 23698 ;; Auto vars:     Size  Location     Type
 23699 ;;  x               3   22[BANK0 ] void 
 23700 ;;  q               3   19[BANK0 ] void 
 23701 ;;  z               3   16[BANK0 ] void 
 23702 ;;  og              3   12[BANK0 ] void 
 23703 ;;  i               1   15[BANK0 ] unsigned char 
 23704 ;; Return value:  Size  Location     Type
 23705 ;;                  3    6[BANK0 ] unsigned char 
 23706 ;; Registers used:
 23707 ;;		wreg, status,2, status,0, cstack
 23708 ;; Tracked objects:
 23709 ;;		On entry : 0/0
 23710 ;;		On exit  : 0/0
 23711 ;;		Unchanged: 0/0
 23712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23713 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23714 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23715 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23716 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23717 ;;Total ram usage:       19 bytes
 23718 ;; Hardware stack levels used:    1
 23719 ;; Hardware stack levels required when called:    3
 23720 ;; This function calls:
 23721 ;;		i2___ftge
 23722 ;;		i2___ftmul
 23723 ;;		i2___ftsub
 23724 ;; This function is called by:
 23725 ;;		_peakToRMS
 23726 ;;		_asin
 23727 ;; This function uses a non-reentrant model
 23728 ;;
 23729                           
 23730                           	psect	text92
 23731  013D3E                     __ptext92:
 23732                           	opt stack 0
 23733  013D3E                     _sqrt:
 23734                           	opt stack 11
 23735                           
 23736                           ;incstack = 0
 23737  013D3E  0E00               	movlw	0
 23738  013D40  6E2A               	movwf	i2___ftge@ff1,c
 23739  013D42  0E00               	movlw	0
 23740  013D44  6E2B               	movwf	i2___ftge@ff1+1,c
 23741  013D46  0E00               	movlw	0
 23742  013D48  6E2C               	movwf	i2___ftge@ff1+2,c
 23743  013D4A  C066  F02D         	movff	sqrt@a,i2___ftge@ff2
 23744  013D4E  C067  F02E         	movff	sqrt@a+1,i2___ftge@ff2+1
 23745  013D52  C068  F02F         	movff	sqrt@a+2,i2___ftge@ff2+2
 23746  013D56  ECB8  F0A8         	call	i2___ftge	;wreg free
 23747  013D5A  A0D8               	btfss	status,0,c
 23748  013D5C  D00E               	goto	i2l1832
 23749  013D5E  0100               	movlb	0	; () banked
 23750  013D60  AF68               	btfss	(sqrt@a+2)& (0+255),7,b
 23751  013D62  D004               	goto	i2l1833
 23752                           
 23753                           ; BSR set to: 0
 23754  013D64  0E00               	movlw	0
 23755  013D66  6FD8               	movwf	(_errno+1)& (0+255),b
 23756  013D68  0E21               	movlw	33
 23757  013D6A  6FD7               	movwf	_errno& (0+255),b
 23758  013D6C                     i2l1833:
 23759                           
 23760                           ; BSR set to: 0
 23761  013D6C  0E00               	movlw	0
 23762  013D6E  6F66               	movwf	?_sqrt& (0+255),b
 23763  013D70  0E00               	movlw	0
 23764  013D72  6F67               	movwf	(?_sqrt+1)& (0+255),b
 23765  013D74  0E00               	movlw	0
 23766  013D76  6F68               	movwf	(?_sqrt+2)& (0+255),b
 23767                           
 23768                           ; BSR set to: 0
 23769  013D78  0012               	return	
 23770  013D7A                     i2l1832:
 23771  013D7A  C066  F070         	movff	sqrt@a,sqrt@z
 23772  013D7E  C067  F071         	movff	sqrt@a+1,sqrt@z+1
 23773  013D82  C068  F072         	movff	sqrt@a+2,sqrt@z+2
 23774  013D86  C066  F069         	movff	sqrt@a,??_sqrt
 23775  013D8A  C067  F06A         	movff	sqrt@a+1,??_sqrt+1
 23776  013D8E  C068  F06B         	movff	sqrt@a+2,??_sqrt+2
 23777  013D92  0100               	movlb	0	; () banked
 23778  013D94  1F69               	comf	??_sqrt& (0+255),f,b
 23779  013D96  1F6A               	comf	(??_sqrt+1)& (0+255),f,b
 23780  013D98  1F6B               	comf	(??_sqrt+2)& (0+255),f,b
 23781  013D9A  2B69               	incf	??_sqrt& (0+255),f,b
 23782  013D9C  0E00               	movlw	0
 23783  013D9E  236A               	addwfc	(??_sqrt+1)& (0+255),f,b
 23784  013DA0  236B               	addwfc	(??_sqrt+2)& (0+255),f,b
 23785  013DA2  0EC8               	movlw	200
 23786  013DA4  2569               	addwf	??_sqrt& (0+255),w,b
 23787  013DA6  6F76               	movwf	sqrt@x& (0+255),b
 23788  013DA8  0E6E               	movlw	110
 23789  013DAA  216A               	addwfc	(??_sqrt+1)& (0+255),w,b
 23790  013DAC  6F77               	movwf	(sqrt@x+1)& (0+255),b
 23791  013DAE  0EBE               	movlw	190
 23792  013DB0  216B               	addwfc	(??_sqrt+2)& (0+255),w,b
 23793  013DB2  6F78               	movwf	(sqrt@x+2)& (0+255),b
 23794                           
 23795                           ; BSR set to: 0
 23796  013DB4  90D8               	bcf	status,0,c
 23797  013DB6  3378               	rrcf	(sqrt@x+2)& (0+255),f,b
 23798  013DB8  3377               	rrcf	(sqrt@x+1)& (0+255),f,b
 23799  013DBA  3376               	rrcf	sqrt@x& (0+255),f,b
 23800                           
 23801                           ; BSR set to: 0
 23802  013DBC  0E00               	movlw	0
 23803  013DBE  5F70               	subwf	sqrt@z& (0+255),f,b
 23804  013DC0  0E80               	movlw	128
 23805  013DC2  5B71               	subwfb	(sqrt@z+1)& (0+255),f,b
 23806  013DC4  0E00               	movlw	0
 23807  013DC6  5B72               	subwfb	(sqrt@z+2)& (0+255),f,b
 23808                           
 23809                           ; BSR set to: 0
 23810  013DC8  0E04               	movlw	4
 23811  013DCA  6F6F               	movwf	sqrt@i& (0+255),b
 23812  013DCC                     
 23813                           ; BSR set to: 0
 23814                           
 23815                           ; BSR set to: 0
 23816  013DCC  C076  F06C         	movff	sqrt@x,sqrt@og
 23817  013DD0  C077  F06D         	movff	sqrt@x+1,sqrt@og+1
 23818  013DD4  C078  F06E         	movff	sqrt@x+2,sqrt@og+2
 23819                           
 23820                           ; BSR set to: 0
 23821  013DD8  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23822  013DDC  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23823  013DE0  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23824  013DE4  C070  F02A         	movff	sqrt@z,i2___ftmul@f2
 23825  013DE8  C071  F02B         	movff	sqrt@z+1,i2___ftmul@f2+1
 23826  013DEC  C072  F02C         	movff	sqrt@z+2,i2___ftmul@f2+2
 23827  013DF0  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23828  013DF4  C027  F073         	movff	?i2___ftmul,sqrt@q
 23829  013DF8  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23830  013DFC  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23831  013E00  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 23832  013E04  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 23833  013E08  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 23834  013E0C  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 23835  013E10  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 23836  013E14  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 23837  013E18  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23838  013E1C  C027  F073         	movff	?i2___ftmul,sqrt@q
 23839  013E20  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23840  013E24  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23841  013E28  C073  F027         	movff	sqrt@q,i2___ftmul@f1
 23842  013E2C  C074  F028         	movff	sqrt@q+1,i2___ftmul@f1+1
 23843  013E30  C075  F029         	movff	sqrt@q+2,i2___ftmul@f1+2
 23844  013E34  C076  F02A         	movff	sqrt@x,i2___ftmul@f2
 23845  013E38  C077  F02B         	movff	sqrt@x+1,i2___ftmul@f2+1
 23846  013E3C  C078  F02C         	movff	sqrt@x+2,i2___ftmul@f2+2
 23847  013E40  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23848  013E44  C027  F073         	movff	?i2___ftmul,sqrt@q
 23849  013E48  C028  F074         	movff	?i2___ftmul+1,sqrt@q+1
 23850  013E4C  C029  F075         	movff	?i2___ftmul+2,sqrt@q+2
 23851  013E50  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23852  013E54  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23853  013E58  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23854  013E5C  0E00               	movlw	0
 23855  013E5E  6E2A               	movwf	i2___ftmul@f2,c
 23856  013E60  0EC0               	movlw	192
 23857  013E62  6E2B               	movwf	i2___ftmul@f2+1,c
 23858  013E64  0E3F               	movlw	63
 23859  013E66  6E2C               	movwf	i2___ftmul@f2+2,c
 23860  013E68  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23861  013E6C  C027  F076         	movff	?i2___ftmul,sqrt@x
 23862  013E70  C028  F077         	movff	?i2___ftmul+1,sqrt@x+1
 23863  013E74  C029  F078         	movff	?i2___ftmul+2,sqrt@x+2
 23864  013E78  C076  F060         	movff	sqrt@x,i2___ftsub@f1
 23865  013E7C  C077  F061         	movff	sqrt@x+1,i2___ftsub@f1+1
 23866  013E80  C078  F062         	movff	sqrt@x+2,i2___ftsub@f1+2
 23867  013E84  C073  F063         	movff	sqrt@q,i2___ftsub@f2
 23868  013E88  C074  F064         	movff	sqrt@q+1,i2___ftsub@f2+1
 23869  013E8C  C075  F065         	movff	sqrt@q+2,i2___ftsub@f2+2
 23870  013E90  ECCE  F0AE         	call	i2___ftsub	;wreg free
 23871  013E94  C060  F076         	movff	?i2___ftsub,sqrt@x
 23872  013E98  C061  F077         	movff	?i2___ftsub+1,sqrt@x+1
 23873  013E9C  C062  F078         	movff	?i2___ftsub+2,sqrt@x+2
 23874  013EA0  0100               	movlb	0	; () banked
 23875  013EA2  2F6F               	decfsz	sqrt@i& (0+255),f,b
 23876  013EA4  D793               	goto	i2l1835
 23877                           
 23878                           ; BSR set to: 0
 23879                           
 23880                           ; BSR set to: 0
 23881  013EA6  C076  F027         	movff	sqrt@x,i2___ftmul@f1
 23882  013EAA  C077  F028         	movff	sqrt@x+1,i2___ftmul@f1+1
 23883  013EAE  C078  F029         	movff	sqrt@x+2,i2___ftmul@f1+2
 23884  013EB2  C066  F02A         	movff	sqrt@a,i2___ftmul@f2
 23885  013EB6  C067  F02B         	movff	sqrt@a+1,i2___ftmul@f2+1
 23886  013EBA  C068  F02C         	movff	sqrt@a+2,i2___ftmul@f2+2
 23887  013EBE  ECC3  F0A3         	call	i2___ftmul	;wreg free
 23888  013EC2  C027  F066         	movff	?i2___ftmul,?_sqrt
 23889  013EC6  C028  F067         	movff	?i2___ftmul+1,?_sqrt+1
 23890  013ECA  C029  F068         	movff	?i2___ftmul+2,?_sqrt+2
 23891  013ECE  0012               	return	
 23892  013ED0                     __end_of_sqrt:
 23893                           	opt stack 0
 23894                           tosu	equ	0xFFF
 23895                           tosh	equ	0xFFE
 23896                           tosl	equ	0xFFD
 23897                           pclatu	equ	0xFFB
 23898                           pclath	equ	0xFFA
 23899                           tblptru	equ	0xFF8
 23900                           tblptrh	equ	0xFF7
 23901                           tblptrl	equ	0xFF6
 23902                           tablat	equ	0xFF5
 23903                           prodh	equ	0xFF4
 23904                           prodl	equ	0xFF3
 23905                           intcon	equ	0xFF2
 23906                           postinc0	equ	0xFEE
 23907                           fsr0h	equ	0xFEA
 23908                           fsr0l	equ	0xFE9
 23909                           wreg	equ	0xFE8
 23910                           indf1	equ	0xFE7
 23911                           postdec1	equ	0xFE5
 23912                           fsr1h	equ	0xFE2
 23913                           fsr1l	equ	0xFE1
 23914                           bsr	equ	0xFE0
 23915                           indf2	equ	0xFDF
 23916                           postinc2	equ	0xFDE
 23917                           postdec2	equ	0xFDD
 23918                           fsr2h	equ	0xFDA
 23919                           fsr2l	equ	0xFD9
 23920                           status	equ	0xFD8
 23921                           
 23922 ;; *************** function _atan *****************
 23923 ;; Defined at:
 23924 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\atan.c"
 23925 ;; Parameters:    Size  Location     Type
 23926 ;;  f               3   87[COMRAM] unsigned char 
 23927 ;; Auto vars:     Size  Location     Type
 23928 ;;  val             3   10[BANK0 ] unsigned char 
 23929 ;;  val_squared     3    7[BANK0 ] unsigned char 
 23930 ;;  x               3    3[BANK0 ] unsigned char 
 23931 ;;  y               3    0[BANK0 ] unsigned char 
 23932 ;;  recip           1    6[BANK0 ] unsigned char 
 23933 ;; Return value:  Size  Location     Type
 23934 ;;                  3   87[COMRAM] unsigned char 
 23935 ;; Registers used:
 23936 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23937 ;; Tracked objects:
 23938 ;;		On entry : 0/0
 23939 ;;		On exit  : 0/0
 23940 ;;		Unchanged: 0/0
 23941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 23942 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23943 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23945 ;;      Totals:         3      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23946 ;;Total ram usage:       16 bytes
 23947 ;; Hardware stack levels used:    1
 23948 ;; Hardware stack levels required when called:    3
 23949 ;; This function calls:
 23950 ;;		_eval_poly
 23951 ;;		_fabs
 23952 ;;		i2___ftadd
 23953 ;;		i2___ftdiv
 23954 ;;		i2___ftge
 23955 ;;		i2___ftmul
 23956 ;;		i2___ftneg
 23957 ;; This function is called by:
 23958 ;;		_asin
 23959 ;; This function uses a non-reentrant model
 23960 ;;
 23961                           
 23962                           	psect	text93
 23963  013822                     __ptext93:
 23964                           	opt stack 0
 23965  013822                     _atan:
 23966                           	opt stack 9
 23967                           
 23968                           ;incstack = 0
 23969  013822  C058  F027         	movff	atan@f,fabs@d
 23970  013826  C059  F028         	movff	atan@f+1,fabs@d+1
 23971  01382A  C05A  F029         	movff	atan@f+2,fabs@d+2
 23972  01382E  EC90  F0AF         	call	_fabs	;wreg free
 23973  013832  C027  F06A         	movff	?_fabs,atan@val
 23974  013836  C028  F06B         	movff	?_fabs+1,atan@val+1
 23975  01383A  C029  F06C         	movff	?_fabs+2,atan@val+2
 23976  01383E  0100               	movlb	0	; () banked
 23977  013840  516A               	movf	atan@val& (0+255),w,b
 23978  013842  116B               	iorwf	(atan@val+1)& (0+255),w,b
 23979  013844  116C               	iorwf	(atan@val+2)& (0+255),w,b
 23980  013846  A4D8               	btfss	status,2,c
 23981  013848  D007               	goto	i2l1323
 23982                           
 23983                           ; BSR set to: 0
 23984  01384A  0E00               	movlw	0
 23985  01384C  6E58               	movwf	?_atan,c
 23986  01384E  0E00               	movlw	0
 23987  013850  6E59               	movwf	?_atan+1,c
 23988  013852  0E00               	movlw	0
 23989  013854  6E5A               	movwf	?_atan+2,c
 23990                           
 23991                           ; BSR set to: 0
 23992  013856  0012               	return	
 23993  013858                     i2l1323:
 23994                           
 23995                           ; BSR set to: 0
 23996                           
 23997                           ; BSR set to: 0
 23998  013858  0E00               	movlw	0
 23999  01385A  6E2A               	movwf	i2___ftge@ff1,c
 24000  01385C  0E80               	movlw	128
 24001  01385E  6E2B               	movwf	i2___ftge@ff1+1,c
 24002  013860  0E3F               	movlw	63
 24003  013862  6E2C               	movwf	i2___ftge@ff1+2,c
 24004  013864  C06A  F02D         	movff	atan@val,i2___ftge@ff2
 24005  013868  C06B  F02E         	movff	atan@val+1,i2___ftge@ff2+1
 24006  01386C  C06C  F02F         	movff	atan@val+2,i2___ftge@ff2+2
 24007  013870  ECB8  F0A8         	call	i2___ftge	;wreg free
 24008  013874  B0D8               	btfsc	status,0,c
 24009  013876  D002               	goto	i2u1501_40
 24010  013878  0E01               	movlw	1
 24011  01387A  D001               	goto	i2u1502_40
 24012  01387C                     i2u1501_40:
 24013  01387C  0E00               	movlw	0
 24014  01387E                     i2u1502_40:
 24015  01387E  0100               	movlb	0	; () banked
 24016  013880  6F66               	movwf	atan@recip& (0+255),b
 24017  013882  5166               	movf	atan@recip& (0+255),w,b
 24018  013884  B4D8               	btfsc	status,2,c
 24019  013886  D014               	goto	i2l1325
 24020                           
 24021                           ; BSR set to: 0
 24022  013888  0E00               	movlw	0
 24023  01388A  6E15               	movwf	i2___ftdiv@f1,c
 24024  01388C  0E80               	movlw	128
 24025  01388E  6E16               	movwf	i2___ftdiv@f1+1,c
 24026  013890  0E3F               	movlw	63
 24027  013892  6E17               	movwf	i2___ftdiv@f1+2,c
 24028  013894  C06A  F018         	movff	atan@val,i2___ftdiv@f2
 24029  013898  C06B  F019         	movff	atan@val+1,i2___ftdiv@f2+1
 24030  01389C  C06C  F01A         	movff	atan@val+2,i2___ftdiv@f2+2
 24031  0138A0  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 24032  0138A4  C015  F06A         	movff	?i2___ftdiv,atan@val
 24033  0138A8  C016  F06B         	movff	?i2___ftdiv+1,atan@val+1
 24034  0138AC  C017  F06C         	movff	?i2___ftdiv+2,atan@val+2
 24035  0138B0                     i2l1325:
 24036  0138B0  C06A  F027         	movff	atan@val,i2___ftmul@f1
 24037  0138B4  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 24038  0138B8  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 24039  0138BC  C06A  F02A         	movff	atan@val,i2___ftmul@f2
 24040  0138C0  C06B  F02B         	movff	atan@val+1,i2___ftmul@f2+1
 24041  0138C4  C06C  F02C         	movff	atan@val+2,i2___ftmul@f2+2
 24042  0138C8  ECC3  F0A3         	call	i2___ftmul	;wreg free
 24043  0138CC  C027  F067         	movff	?i2___ftmul,atan@val_squared
 24044  0138D0  C028  F068         	movff	?i2___ftmul+1,atan@val_squared+1
 24045  0138D4  C029  F069         	movff	?i2___ftmul+2,atan@val_squared+2
 24046  0138D8  C067  F04C         	movff	atan@val_squared,eval_poly@x
 24047  0138DC  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 24048  0138E0  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 24049  0138E4  0EA0               	movlw	low atan@coeff_b
 24050  0138E6  6E4F               	movwf	eval_poly@d,c
 24051  0138E8  0EF4               	movlw	high atan@coeff_b
 24052  0138EA  6E50               	movwf	eval_poly@d+1,c
 24053  0138EC  0E00               	movlw	0
 24054  0138EE  6E52               	movwf	eval_poly@n+1,c
 24055  0138F0  0E04               	movlw	4
 24056  0138F2  6E51               	movwf	eval_poly@n,c
 24057  0138F4  EC93  F0A5         	call	_eval_poly	;wreg free
 24058  0138F8  C04C  F060         	movff	?_eval_poly,atan@y
 24059  0138FC  C04D  F061         	movff	?_eval_poly+1,atan@y+1
 24060  013900  C04E  F062         	movff	?_eval_poly+2,atan@y+2
 24061  013904  C067  F04C         	movff	atan@val_squared,eval_poly@x
 24062  013908  C068  F04D         	movff	atan@val_squared+1,eval_poly@x+1
 24063  01390C  C069  F04E         	movff	atan@val_squared+2,eval_poly@x+2
 24064  013910  0E7F               	movlw	low atan@coeff_a
 24065  013912  6E4F               	movwf	eval_poly@d,c
 24066  013914  0EF4               	movlw	high atan@coeff_a
 24067  013916  6E50               	movwf	eval_poly@d+1,c
 24068  013918  0E00               	movlw	0
 24069  01391A  6E52               	movwf	eval_poly@n+1,c
 24070  01391C  0E05               	movlw	5
 24071  01391E  6E51               	movwf	eval_poly@n,c
 24072  013920  EC93  F0A5         	call	_eval_poly	;wreg free
 24073  013924  C04C  F063         	movff	?_eval_poly,atan@x
 24074  013928  C04D  F064         	movff	?_eval_poly+1,atan@x+1
 24075  01392C  C04E  F065         	movff	?_eval_poly+2,atan@x+2
 24076  013930  C06A  F027         	movff	atan@val,i2___ftmul@f1
 24077  013934  C06B  F028         	movff	atan@val+1,i2___ftmul@f1+1
 24078  013938  C06C  F029         	movff	atan@val+2,i2___ftmul@f1+2
 24079  01393C  C060  F018         	movff	atan@y,i2___ftdiv@f2
 24080  013940  C061  F019         	movff	atan@y+1,i2___ftdiv@f2+1
 24081  013944  C062  F01A         	movff	atan@y+2,i2___ftdiv@f2+2
 24082  013948  C063  F015         	movff	atan@x,i2___ftdiv@f1
 24083  01394C  C064  F016         	movff	atan@x+1,i2___ftdiv@f1+1
 24084  013950  C065  F017         	movff	atan@x+2,i2___ftdiv@f1+2
 24085  013954  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 24086  013958  C015  F02A         	movff	?i2___ftdiv,i2___ftmul@f2
 24087  01395C  C016  F02B         	movff	?i2___ftdiv+1,i2___ftmul@f2+1
 24088  013960  C017  F02C         	movff	?i2___ftdiv+2,i2___ftmul@f2+2
 24089  013964  ECC3  F0A3         	call	i2___ftmul	;wreg free
 24090  013968  C027  F06A         	movff	?i2___ftmul,atan@val
 24091  01396C  C028  F06B         	movff	?i2___ftmul+1,atan@val+1
 24092  013970  C029  F06C         	movff	?i2___ftmul+2,atan@val+2
 24093  013974  0100               	movlb	0	; () banked
 24094  013976  5166               	movf	atan@recip& (0+255),w,b
 24095  013978  B4D8               	btfsc	status,2,c
 24096  01397A  D01C               	goto	i2l1326
 24097                           
 24098                           ; BSR set to: 0
 24099  01397C  C06A  F024         	movff	atan@val,i2___ftneg@f1
 24100  013980  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 24101  013984  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 24102  013988  EC49  F0B0         	call	i2___ftneg	;wreg free
 24103  01398C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24104  013990  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24105  013994  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24106  013998  0E10               	movlw	16
 24107  01399A  6E43               	movwf	i2___ftadd@f2,c
 24108  01399C  0EC9               	movlw	201
 24109  01399E  6E44               	movwf	i2___ftadd@f2+1,c
 24110  0139A0  0E3F               	movlw	63
 24111  0139A2  6E45               	movwf	i2___ftadd@f2+2,c
 24112  0139A4  ECC9  F09D         	call	i2___ftadd	;wreg free
 24113  0139A8  C040  F06A         	movff	?i2___ftadd,atan@val
 24114  0139AC  C041  F06B         	movff	?i2___ftadd+1,atan@val+1
 24115  0139B0  C042  F06C         	movff	?i2___ftadd+2,atan@val+2
 24116  0139B4                     i2l1326:
 24117  0139B4  BE5A               	btfsc	atan@f+2,7,c
 24118  0139B6  D007               	goto	i2l1328
 24119  0139B8  C06A  F058         	movff	atan@val,?_atan
 24120  0139BC  C06B  F059         	movff	atan@val+1,?_atan+1
 24121  0139C0  C06C  F05A         	movff	atan@val+2,?_atan+2
 24122  0139C4  0012               	return	
 24123  0139C6                     i2l1328:
 24124  0139C6  C06A  F024         	movff	atan@val,i2___ftneg@f1
 24125  0139CA  C06B  F025         	movff	atan@val+1,i2___ftneg@f1+1
 24126  0139CE  C06C  F026         	movff	atan@val+2,i2___ftneg@f1+2
 24127  0139D2  EC49  F0B0         	call	i2___ftneg	;wreg free
 24128  0139D6  C024  F058         	movff	?i2___ftneg,?_atan
 24129  0139DA  C025  F059         	movff	?i2___ftneg+1,?_atan+1
 24130  0139DE  C026  F05A         	movff	?i2___ftneg+2,?_atan+2
 24131  0139E2  0012               	return	
 24132  0139E4                     __end_of_atan:
 24133                           	opt stack 0
 24134                           tosu	equ	0xFFF
 24135                           tosh	equ	0xFFE
 24136                           tosl	equ	0xFFD
 24137                           pclatu	equ	0xFFB
 24138                           pclath	equ	0xFFA
 24139                           tblptru	equ	0xFF8
 24140                           tblptrh	equ	0xFF7
 24141                           tblptrl	equ	0xFF6
 24142                           tablat	equ	0xFF5
 24143                           prodh	equ	0xFF4
 24144                           prodl	equ	0xFF3
 24145                           intcon	equ	0xFF2
 24146                           postinc0	equ	0xFEE
 24147                           fsr0h	equ	0xFEA
 24148                           fsr0l	equ	0xFE9
 24149                           wreg	equ	0xFE8
 24150                           indf1	equ	0xFE7
 24151                           postdec1	equ	0xFE5
 24152                           fsr1h	equ	0xFE2
 24153                           fsr1l	equ	0xFE1
 24154                           bsr	equ	0xFE0
 24155                           indf2	equ	0xFDF
 24156                           postinc2	equ	0xFDE
 24157                           postdec2	equ	0xFDD
 24158                           fsr2h	equ	0xFDA
 24159                           fsr2l	equ	0xFD9
 24160                           status	equ	0xFD8
 24161                           
 24162 ;; *************** function _fabs *****************
 24163 ;; Defined at:
 24164 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fabs.c"
 24165 ;; Parameters:    Size  Location     Type
 24166 ;;  d               3   38[COMRAM] unsigned char 
 24167 ;; Auto vars:     Size  Location     Type
 24168 ;;		None
 24169 ;; Return value:  Size  Location     Type
 24170 ;;                  3   38[COMRAM] unsigned char 
 24171 ;; Registers used:
 24172 ;;		wreg, status,2, status,0, cstack
 24173 ;; Tracked objects:
 24174 ;;		On entry : 0/0
 24175 ;;		On exit  : 0/0
 24176 ;;		Unchanged: 0/0
 24177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24178 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24181 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24182 ;;Total ram usage:        3 bytes
 24183 ;; Hardware stack levels used:    1
 24184 ;; Hardware stack levels required when called:    1
 24185 ;; This function calls:
 24186 ;;		i2___ftneg
 24187 ;; This function is called by:
 24188 ;;		_asin
 24189 ;;		_atan
 24190 ;; This function uses a non-reentrant model
 24191 ;;
 24192                           
 24193                           	psect	text94
 24194  015F20                     __ptext94:
 24195                           	opt stack 0
 24196  015F20                     _fabs:
 24197                           	opt stack 11
 24198                           
 24199                           ;incstack = 0
 24200  015F20  AE29               	btfss	fabs@d+2,7,c
 24201  015F22  D00F               	goto	i2l1420
 24202  015F24  C027  F024         	movff	fabs@d,i2___ftneg@f1
 24203  015F28  C028  F025         	movff	fabs@d+1,i2___ftneg@f1+1
 24204  015F2C  C029  F026         	movff	fabs@d+2,i2___ftneg@f1+2
 24205  015F30  EC49  F0B0         	call	i2___ftneg	;wreg free
 24206  015F34  C024  F027         	movff	?i2___ftneg,?_fabs
 24207  015F38  C025  F028         	movff	?i2___ftneg+1,?_fabs+1
 24208  015F3C  C026  F029         	movff	?i2___ftneg+2,?_fabs+2
 24209  015F40  0012               	return	
 24210  015F42                     i2l1420:
 24211  015F42  C027  F027         	movff	fabs@d,?_fabs
 24212  015F46  C028  F028         	movff	fabs@d+1,?_fabs+1
 24213  015F4A  C029  F029         	movff	fabs@d+2,?_fabs+2
 24214  015F4E  0012               	return		;funcret
 24215  015F50                     __end_of_fabs:
 24216                           	opt stack 0
 24217                           tosu	equ	0xFFF
 24218                           tosh	equ	0xFFE
 24219                           tosl	equ	0xFFD
 24220                           pclatu	equ	0xFFB
 24221                           pclath	equ	0xFFA
 24222                           tblptru	equ	0xFF8
 24223                           tblptrh	equ	0xFF7
 24224                           tblptrl	equ	0xFF6
 24225                           tablat	equ	0xFF5
 24226                           prodh	equ	0xFF4
 24227                           prodl	equ	0xFF3
 24228                           intcon	equ	0xFF2
 24229                           postinc0	equ	0xFEE
 24230                           fsr0h	equ	0xFEA
 24231                           fsr0l	equ	0xFE9
 24232                           wreg	equ	0xFE8
 24233                           indf1	equ	0xFE7
 24234                           postdec1	equ	0xFE5
 24235                           fsr1h	equ	0xFE2
 24236                           fsr1l	equ	0xFE1
 24237                           bsr	equ	0xFE0
 24238                           indf2	equ	0xFDF
 24239                           postinc2	equ	0xFDE
 24240                           postdec2	equ	0xFDD
 24241                           fsr2h	equ	0xFDA
 24242                           fsr2l	equ	0xFD9
 24243                           status	equ	0xFD8
 24244                           
 24245 ;; *************** function _currentMeasuredToPeak *****************
 24246 ;; Defined at:
 24247 ;;		line 103 in file "main.c"
 24248 ;; Parameters:    Size  Location     Type
 24249 ;;  Measured        3   19[BANK0 ] unsigned char 
 24250 ;;  Angle           3   22[BANK0 ] unsigned char 
 24251 ;; Auto vars:     Size  Location     Type
 24252 ;;  Peak            3   25[BANK0 ] unsigned char 
 24253 ;; Return value:  Size  Location     Type
 24254 ;;                  3   19[BANK0 ] unsigned char 
 24255 ;; Registers used:
 24256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24257 ;; Tracked objects:
 24258 ;;		On entry : 0/0
 24259 ;;		On exit  : 0/0
 24260 ;;		Unchanged: 0/0
 24261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24262 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24263 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24265 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24266 ;;Total ram usage:        9 bytes
 24267 ;; Hardware stack levels used:    1
 24268 ;; Hardware stack levels required when called:    4
 24269 ;; This function calls:
 24270 ;;		_sin
 24271 ;;		i2___ftdiv
 24272 ;; This function is called by:
 24273 ;;		_ADC_postProcessingCallback
 24274 ;; This function uses a non-reentrant model
 24275 ;;
 24276                           
 24277                           	psect	text95
 24278  0158E0                     __ptext95:
 24279                           	opt stack 0
 24280  0158E0                     _currentMeasuredToPeak:
 24281                           	opt stack 11
 24282                           
 24283                           ;main.c: 106: double Peak = 0.0;
 24284                           
 24285                           ;incstack = 0
 24286  0158E0  0E00               	movlw	0
 24287  0158E2  0100               	movlb	0	; () banked
 24288  0158E4  6F79               	movwf	currentMeasuredToPeak@Peak& (0+255),b
 24289  0158E6  0E00               	movlw	0
 24290  0158E8  6F7A               	movwf	(currentMeasuredToPeak@Peak+1)& (0+255),b
 24291  0158EA  0E00               	movlw	0
 24292  0158EC  6F7B               	movwf	(currentMeasuredToPeak@Peak+2)& (0+255),b
 24293                           
 24294                           ; BSR set to: 0
 24295                           ;main.c: 109: Peak = sin(Angle);
 24296  0158EE  C076  F066         	movff	currentMeasuredToPeak@Angle,sin@f
 24297  0158F2  C077  F067         	movff	currentMeasuredToPeak@Angle+1,sin@f+1
 24298  0158F6  C078  F068         	movff	currentMeasuredToPeak@Angle+2,sin@f+2
 24299  0158FA  ECFF  F099         	call	_sin	;wreg free
 24300  0158FE  C066  F079         	movff	?_sin,currentMeasuredToPeak@Peak
 24301  015902  C067  F07A         	movff	?_sin+1,currentMeasuredToPeak@Peak+1
 24302  015906  C068  F07B         	movff	?_sin+2,currentMeasuredToPeak@Peak+2
 24303                           
 24304                           ;main.c: 110: Peak = Measured / Peak;
 24305  01590A  C073  F015         	movff	currentMeasuredToPeak@Measured,i2___ftdiv@f1
 24306  01590E  C074  F016         	movff	currentMeasuredToPeak@Measured+1,i2___ftdiv@f1+1
 24307  015912  C075  F017         	movff	currentMeasuredToPeak@Measured+2,i2___ftdiv@f1+2
 24308  015916  C079  F018         	movff	currentMeasuredToPeak@Peak,i2___ftdiv@f2
 24309  01591A  C07A  F019         	movff	currentMeasuredToPeak@Peak+1,i2___ftdiv@f2+1
 24310  01591E  C07B  F01A         	movff	currentMeasuredToPeak@Peak+2,i2___ftdiv@f2+2
 24311  015922  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 24312  015926  C015  F079         	movff	?i2___ftdiv,currentMeasuredToPeak@Peak
 24313  01592A  C016  F07A         	movff	?i2___ftdiv+1,currentMeasuredToPeak@Peak+1
 24314  01592E  C017  F07B         	movff	?i2___ftdiv+2,currentMeasuredToPeak@Peak+2
 24315                           
 24316                           ;main.c: 111: return Peak;
 24317  015932  C079  F073         	movff	currentMeasuredToPeak@Peak,?_currentMeasuredToPeak
 24318  015936  C07A  F074         	movff	currentMeasuredToPeak@Peak+1,?_currentMeasuredToPeak+1
 24319  01593A  C07B  F075         	movff	currentMeasuredToPeak@Peak+2,?_currentMeasuredToPeak+2
 24320  01593E  0012               	return	
 24321  015940                     __end_of_currentMeasuredToPeak:
 24322                           	opt stack 0
 24323                           tosu	equ	0xFFF
 24324                           tosh	equ	0xFFE
 24325                           tosl	equ	0xFFD
 24326                           pclatu	equ	0xFFB
 24327                           pclath	equ	0xFFA
 24328                           tblptru	equ	0xFF8
 24329                           tblptrh	equ	0xFF7
 24330                           tblptrl	equ	0xFF6
 24331                           tablat	equ	0xFF5
 24332                           prodh	equ	0xFF4
 24333                           prodl	equ	0xFF3
 24334                           intcon	equ	0xFF2
 24335                           postinc0	equ	0xFEE
 24336                           fsr0h	equ	0xFEA
 24337                           fsr0l	equ	0xFE9
 24338                           wreg	equ	0xFE8
 24339                           indf1	equ	0xFE7
 24340                           postdec1	equ	0xFE5
 24341                           fsr1h	equ	0xFE2
 24342                           fsr1l	equ	0xFE1
 24343                           bsr	equ	0xFE0
 24344                           indf2	equ	0xFDF
 24345                           postinc2	equ	0xFDE
 24346                           postdec2	equ	0xFDD
 24347                           fsr2h	equ	0xFDA
 24348                           fsr2l	equ	0xFD9
 24349                           status	equ	0xFD8
 24350                           
 24351 ;; *************** function _sin *****************
 24352 ;; Defined at:
 24353 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sin.c"
 24354 ;; Parameters:    Size  Location     Type
 24355 ;;  f               3    6[BANK0 ] unsigned char 
 24356 ;; Auto vars:     Size  Location     Type
 24357 ;;  x2              3   15[BANK0 ] unsigned char 
 24358 ;;  y               3    9[BANK0 ] unsigned char 
 24359 ;;  sgn             1   18[BANK0 ] unsigned char 
 24360 ;; Return value:  Size  Location     Type
 24361 ;;                  3    6[BANK0 ] unsigned char 
 24362 ;; Registers used:
 24363 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24364 ;; Tracked objects:
 24365 ;;		On entry : 0/0
 24366 ;;		On exit  : 0/0
 24367 ;;		Unchanged: 0/0
 24368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24369 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24370 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24372 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24373 ;;Total ram usage:       13 bytes
 24374 ;; Hardware stack levels used:    1
 24375 ;; Hardware stack levels required when called:    3
 24376 ;; This function calls:
 24377 ;;		_eval_poly
 24378 ;;		_floor
 24379 ;;		i2___ftadd
 24380 ;;		i2___ftdiv
 24381 ;;		i2___ftge
 24382 ;;		i2___ftmul
 24383 ;;		i2___ftneg
 24384 ;;		i2___ftsub
 24385 ;; This function is called by:
 24386 ;;		_peakToRMS
 24387 ;;		_currentMeasuredToPeak
 24388 ;; This function uses a non-reentrant model
 24389 ;;
 24390                           
 24391                           	psect	text96
 24392  0133FE                     __ptext96:
 24393                           	opt stack 0
 24394  0133FE                     _sin:
 24395                           	opt stack 11
 24396                           
 24397                           ;incstack = 0
 24398  0133FE  0E00               	movlw	0
 24399  013400  0100               	movlb	0	; () banked
 24400  013402  6F72               	movwf	sin@sgn& (0+255),b
 24401                           
 24402                           ; BSR set to: 0
 24403  013404  AF68               	btfss	(sin@f+2)& (0+255),7,b
 24404  013406  D011               	goto	i2l1703
 24405                           
 24406                           ; BSR set to: 0
 24407  013408  C066  F024         	movff	sin@f,i2___ftneg@f1
 24408  01340C  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 24409  013410  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 24410  013414  EC49  F0B0         	call	i2___ftneg	;wreg free
 24411  013418  C024  F066         	movff	?i2___ftneg,sin@f
 24412  01341C  C025  F067         	movff	?i2___ftneg+1,sin@f+1
 24413  013420  C026  F068         	movff	?i2___ftneg+2,sin@f+2
 24414  013424  0E01               	movlw	1
 24415  013426  0100               	movlb	0	; () banked
 24416  013428  6F72               	movwf	sin@sgn& (0+255),b
 24417  01342A                     i2l1703:
 24418                           
 24419                           ; BSR set to: 0
 24420                           
 24421                           ; BSR set to: 0
 24422  01342A  C066  F027         	movff	sin@f,i2___ftmul@f1
 24423  01342E  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24424  013432  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24425  013436  0EFA               	movlw	250
 24426  013438  6E2A               	movwf	i2___ftmul@f2,c
 24427  01343A  0E22               	movlw	34
 24428  01343C  6E2B               	movwf	i2___ftmul@f2+1,c
 24429  01343E  0E3E               	movlw	62
 24430  013440  6E2C               	movwf	i2___ftmul@f2+2,c
 24431  013442  ECC3  F0A3         	call	i2___ftmul	;wreg free
 24432  013446  C027  F066         	movff	?i2___ftmul,sin@f
 24433  01344A  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 24434  01344E  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 24435  013452  C066  F060         	movff	sin@f,i2___ftsub@f1
 24436  013456  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 24437  01345A  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 24438  01345E  C066  F056         	movff	sin@f,floor@x
 24439  013462  C067  F057         	movff	sin@f+1,floor@x+1
 24440  013466  C068  F058         	movff	sin@f+2,floor@x+2
 24441  01346A  EC24  F0A5         	call	_floor	;wreg free
 24442  01346E  C056  F063         	movff	?_floor,i2___ftsub@f2
 24443  013472  C057  F064         	movff	?_floor+1,i2___ftsub@f2+1
 24444  013476  C058  F065         	movff	?_floor+2,i2___ftsub@f2+2
 24445  01347A  ECCE  F0AE         	call	i2___ftsub	;wreg free
 24446  01347E  C060  F066         	movff	?i2___ftsub,sin@f
 24447  013482  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 24448  013486  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 24449  01348A  C066  F027         	movff	sin@f,i2___ftmul@f1
 24450  01348E  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24451  013492  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24452  013496  0E00               	movlw	0
 24453  013498  6E2A               	movwf	i2___ftmul@f2,c
 24454  01349A  0E80               	movlw	128
 24455  01349C  6E2B               	movwf	i2___ftmul@f2+1,c
 24456  01349E  0E40               	movlw	64
 24457  0134A0  6E2C               	movwf	i2___ftmul@f2+2,c
 24458  0134A2  ECC3  F0A3         	call	i2___ftmul	;wreg free
 24459  0134A6  C027  F066         	movff	?i2___ftmul,sin@f
 24460  0134AA  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 24461  0134AE  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 24462  0134B2  0E00               	movlw	0
 24463  0134B4  6E2A               	movwf	i2___ftge@ff1,c
 24464  0134B6  0E00               	movlw	0
 24465  0134B8  6E2B               	movwf	i2___ftge@ff1+1,c
 24466  0134BA  0E40               	movlw	64
 24467  0134BC  6E2C               	movwf	i2___ftge@ff1+2,c
 24468  0134BE  C066  F02D         	movff	sin@f,i2___ftge@ff2
 24469  0134C2  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 24470  0134C6  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 24471  0134CA  ECB8  F0A8         	call	i2___ftge	;wreg free
 24472  0134CE  B0D8               	btfsc	status,0,c
 24473  0134D0  D01D               	goto	i2l1704
 24474  0134D2  C066  F060         	movff	sin@f,i2___ftsub@f1
 24475  0134D6  C067  F061         	movff	sin@f+1,i2___ftsub@f1+1
 24476  0134DA  C068  F062         	movff	sin@f+2,i2___ftsub@f1+2
 24477  0134DE  0E00               	movlw	0
 24478  0134E0  0100               	movlb	0	; () banked
 24479  0134E2  6F63               	movwf	i2___ftsub@f2& (0+255),b
 24480  0134E4  0E00               	movlw	0
 24481  0134E6  6F64               	movwf	(i2___ftsub@f2+1)& (0+255),b
 24482  0134E8  0E40               	movlw	64
 24483  0134EA  6F65               	movwf	(i2___ftsub@f2+2)& (0+255),b
 24484  0134EC  ECCE  F0AE         	call	i2___ftsub	;wreg free
 24485  0134F0  C060  F066         	movff	?i2___ftsub,sin@f
 24486  0134F4  C061  F067         	movff	?i2___ftsub+1,sin@f+1
 24487  0134F8  C062  F068         	movff	?i2___ftsub+2,sin@f+2
 24488  0134FC  0100               	movlb	0	; () banked
 24489  0134FE  5172               	movf	sin@sgn& (0+255),w,b
 24490  013500  A4D8               	btfss	status,2,c
 24491  013502  D002               	goto	i2u1525_40
 24492  013504  0E01               	movlw	1
 24493  013506  D001               	goto	i2u1526_40
 24494  013508                     i2u1525_40:
 24495  013508  0E00               	movlw	0
 24496  01350A                     i2u1526_40:
 24497  01350A  6F72               	movwf	sin@sgn& (0+255),b
 24498  01350C                     i2l1704:
 24499                           
 24500                           ; BSR set to: 0
 24501  01350C  0E00               	movlw	0
 24502  01350E  6E2A               	movwf	i2___ftge@ff1,c
 24503  013510  0E80               	movlw	128
 24504  013512  6E2B               	movwf	i2___ftge@ff1+1,c
 24505  013514  0E3F               	movlw	63
 24506  013516  6E2C               	movwf	i2___ftge@ff1+2,c
 24507  013518  C066  F02D         	movff	sin@f,i2___ftge@ff2
 24508  01351C  C067  F02E         	movff	sin@f+1,i2___ftge@ff2+1
 24509  013520  C068  F02F         	movff	sin@f+2,i2___ftge@ff2+2
 24510  013524  ECB8  F0A8         	call	i2___ftge	;wreg free
 24511  013528  B0D8               	btfsc	status,0,c
 24512  01352A  D01C               	goto	i2l1705
 24513  01352C  C066  F024         	movff	sin@f,i2___ftneg@f1
 24514  013530  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 24515  013534  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 24516  013538  EC49  F0B0         	call	i2___ftneg	;wreg free
 24517  01353C  C024  F040         	movff	?i2___ftneg,i2___ftadd@f1
 24518  013540  C025  F041         	movff	?i2___ftneg+1,i2___ftadd@f1+1
 24519  013544  C026  F042         	movff	?i2___ftneg+2,i2___ftadd@f1+2
 24520  013548  0E00               	movlw	0
 24521  01354A  6E43               	movwf	i2___ftadd@f2,c
 24522  01354C  0E00               	movlw	0
 24523  01354E  6E44               	movwf	i2___ftadd@f2+1,c
 24524  013550  0E40               	movlw	64
 24525  013552  6E45               	movwf	i2___ftadd@f2+2,c
 24526  013554  ECC9  F09D         	call	i2___ftadd	;wreg free
 24527  013558  C040  F066         	movff	?i2___ftadd,sin@f
 24528  01355C  C041  F067         	movff	?i2___ftadd+1,sin@f+1
 24529  013560  C042  F068         	movff	?i2___ftadd+2,sin@f+2
 24530  013564                     i2l1705:
 24531  013564  C066  F027         	movff	sin@f,i2___ftmul@f1
 24532  013568  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24533  01356C  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24534  013570  C066  F02A         	movff	sin@f,i2___ftmul@f2
 24535  013574  C067  F02B         	movff	sin@f+1,i2___ftmul@f2+1
 24536  013578  C068  F02C         	movff	sin@f+2,i2___ftmul@f2+2
 24537  01357C  ECC3  F0A3         	call	i2___ftmul	;wreg free
 24538  013580  C027  F06F         	movff	?i2___ftmul,sin@x2
 24539  013584  C028  F070         	movff	?i2___ftmul+1,sin@x2+1
 24540  013588  C029  F071         	movff	?i2___ftmul+2,sin@x2+2
 24541  01358C  C06F  F04C         	movff	sin@x2,eval_poly@x
 24542  013590  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 24543  013594  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 24544  013598  0EAF               	movlw	low sin@coeff_b
 24545  01359A  6E4F               	movwf	eval_poly@d,c
 24546  01359C  0EF4               	movlw	high sin@coeff_b
 24547  01359E  6E50               	movwf	eval_poly@d+1,c
 24548  0135A0  0E00               	movlw	0
 24549  0135A2  6E52               	movwf	eval_poly@n+1,c
 24550  0135A4  0E03               	movlw	3
 24551  0135A6  6E51               	movwf	eval_poly@n,c
 24552  0135A8  EC93  F0A5         	call	_eval_poly	;wreg free
 24553  0135AC  C04C  F069         	movff	?_eval_poly,sin@y
 24554  0135B0  C04D  F06A         	movff	?_eval_poly+1,sin@y+1
 24555  0135B4  C04E  F06B         	movff	?_eval_poly+2,sin@y+2
 24556  0135B8  C069  F018         	movff	sin@y,i2___ftdiv@f2
 24557  0135BC  C06A  F019         	movff	sin@y+1,i2___ftdiv@f2+1
 24558  0135C0  C06B  F01A         	movff	sin@y+2,i2___ftdiv@f2+2
 24559  0135C4  0E00               	movlw	0
 24560  0135C6  6E52               	movwf	eval_poly@n+1,c
 24561  0135C8  0E04               	movlw	4
 24562  0135CA  6E51               	movwf	eval_poly@n,c
 24563  0135CC  0E91               	movlw	low sin@coeff_a
 24564  0135CE  6E4F               	movwf	eval_poly@d,c
 24565  0135D0  0EF4               	movlw	high sin@coeff_a
 24566  0135D2  6E50               	movwf	eval_poly@d+1,c
 24567  0135D4  C06F  F04C         	movff	sin@x2,eval_poly@x
 24568  0135D8  C070  F04D         	movff	sin@x2+1,eval_poly@x+1
 24569  0135DC  C071  F04E         	movff	sin@x2+2,eval_poly@x+2
 24570  0135E0  EC93  F0A5         	call	_eval_poly	;wreg free
 24571  0135E4  C04C  F015         	movff	?_eval_poly,i2___ftdiv@f1
 24572  0135E8  C04D  F016         	movff	?_eval_poly+1,i2___ftdiv@f1+1
 24573  0135EC  C04E  F017         	movff	?_eval_poly+2,i2___ftdiv@f1+2
 24574  0135F0  ECB1  F0A4         	call	i2___ftdiv	;wreg free
 24575  0135F4  C015  F06C         	movff	?i2___ftdiv,_sin$3325
 24576  0135F8  C016  F06D         	movff	?i2___ftdiv+1,_sin$3325+1
 24577  0135FC  C017  F06E         	movff	?i2___ftdiv+2,_sin$3325+2
 24578  013600  C066  F027         	movff	sin@f,i2___ftmul@f1
 24579  013604  C067  F028         	movff	sin@f+1,i2___ftmul@f1+1
 24580  013608  C068  F029         	movff	sin@f+2,i2___ftmul@f1+2
 24581  01360C  C06C  F02A         	movff	_sin$3325,i2___ftmul@f2
 24582  013610  C06D  F02B         	movff	_sin$3325+1,i2___ftmul@f2+1
 24583  013614  C06E  F02C         	movff	_sin$3325+2,i2___ftmul@f2+2
 24584  013618  ECC3  F0A3         	call	i2___ftmul	;wreg free
 24585  01361C  C027  F066         	movff	?i2___ftmul,sin@f
 24586  013620  C028  F067         	movff	?i2___ftmul+1,sin@f+1
 24587  013624  C029  F068         	movff	?i2___ftmul+2,sin@f+2
 24588  013628  0100               	movlb	0	; () banked
 24589  01362A  5172               	movf	sin@sgn& (0+255),w,b
 24590  01362C  B4D8               	btfsc	status,2,c
 24591  01362E  D00F               	goto	i2l1706
 24592                           
 24593                           ; BSR set to: 0
 24594  013630  C066  F024         	movff	sin@f,i2___ftneg@f1
 24595  013634  C067  F025         	movff	sin@f+1,i2___ftneg@f1+1
 24596  013638  C068  F026         	movff	sin@f+2,i2___ftneg@f1+2
 24597  01363C  EC49  F0B0         	call	i2___ftneg	;wreg free
 24598  013640  C024  F066         	movff	?i2___ftneg,?_sin
 24599  013644  C025  F067         	movff	?i2___ftneg+1,?_sin+1
 24600  013648  C026  F068         	movff	?i2___ftneg+2,?_sin+2
 24601  01364C  0012               	return	
 24602  01364E                     i2l1706:
 24603                           
 24604                           ; BSR set to: 0
 24605  01364E  C066  F066         	movff	sin@f,?_sin
 24606  013652  C067  F067         	movff	sin@f+1,?_sin+1
 24607  013656  C068  F068         	movff	sin@f+2,?_sin+2
 24608  01365A  0012               	return		;funcret
 24609  01365C                     __end_of_sin:
 24610                           	opt stack 0
 24611                           tosu	equ	0xFFF
 24612                           tosh	equ	0xFFE
 24613                           tosl	equ	0xFFD
 24614                           pclatu	equ	0xFFB
 24615                           pclath	equ	0xFFA
 24616                           tblptru	equ	0xFF8
 24617                           tblptrh	equ	0xFF7
 24618                           tblptrl	equ	0xFF6
 24619                           tablat	equ	0xFF5
 24620                           prodh	equ	0xFF4
 24621                           prodl	equ	0xFF3
 24622                           intcon	equ	0xFF2
 24623                           postinc0	equ	0xFEE
 24624                           fsr0h	equ	0xFEA
 24625                           fsr0l	equ	0xFE9
 24626                           wreg	equ	0xFE8
 24627                           indf1	equ	0xFE7
 24628                           postdec1	equ	0xFE5
 24629                           fsr1h	equ	0xFE2
 24630                           fsr1l	equ	0xFE1
 24631                           bsr	equ	0xFE0
 24632                           indf2	equ	0xFDF
 24633                           postinc2	equ	0xFDE
 24634                           postdec2	equ	0xFDD
 24635                           fsr2h	equ	0xFDA
 24636                           fsr2l	equ	0xFD9
 24637                           status	equ	0xFD8
 24638                           
 24639 ;; *************** function i2___ftsub *****************
 24640 ;; Defined at:
 24641 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftsub.c"
 24642 ;; Parameters:    Size  Location     Type
 24643 ;;  f1              3    0[BANK0 ] float 
 24644 ;;  f2              3    3[BANK0 ] float 
 24645 ;; Auto vars:     Size  Location     Type
 24646 ;;		None
 24647 ;; Return value:  Size  Location     Type
 24648 ;;                  3    0[BANK0 ] float 
 24649 ;; Registers used:
 24650 ;;		wreg, status,2, status,0, cstack
 24651 ;; Tracked objects:
 24652 ;;		On entry : 0/0
 24653 ;;		On exit  : 0/0
 24654 ;;		Unchanged: 0/0
 24655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24656 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24659 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24660 ;;Total ram usage:        6 bytes
 24661 ;; Hardware stack levels used:    1
 24662 ;; Hardware stack levels required when called:    2
 24663 ;; This function calls:
 24664 ;;		i2___ftadd
 24665 ;; This function is called by:
 24666 ;;		_sin
 24667 ;;		_sqrt
 24668 ;;		i2_printf
 24669 ;; This function uses a non-reentrant model
 24670 ;;
 24671                           
 24672                           	psect	text97
 24673  015D9C                     __ptext97:
 24674                           	opt stack 0
 24675  015D9C                     i2___ftsub:
 24676                           	opt stack 13
 24677                           
 24678                           ;incstack = 0
 24679  015D9C  0100               	movlb	0	; () banked
 24680  015D9E  5163               	movf	i2___ftsub@f2& (0+255),w,b
 24681  015DA0  1164               	iorwf	(i2___ftsub@f2+1)& (0+255),w,b
 24682  015DA2  1165               	iorwf	(i2___ftsub@f2+2)& (0+255),w,b
 24683  015DA4  B4D8               	btfsc	status,2,c
 24684  015DA6  D006               	goto	i2l1569
 24685                           
 24686                           ; BSR set to: 0
 24687  015DA8  0E00               	movlw	0
 24688  015DAA  1B63               	xorwf	i2___ftsub@f2& (0+255),f,b
 24689  015DAC  0E00               	movlw	0
 24690  015DAE  1B64               	xorwf	(i2___ftsub@f2+1)& (0+255),f,b
 24691  015DB0  0E80               	movlw	128
 24692  015DB2  1B65               	xorwf	(i2___ftsub@f2+2)& (0+255),f,b
 24693  015DB4                     i2l1569:
 24694                           
 24695                           ; BSR set to: 0
 24696                           
 24697                           ; BSR set to: 0
 24698  015DB4  C060  F040         	movff	i2___ftsub@f1,i2___ftadd@f1
 24699  015DB8  C061  F041         	movff	i2___ftsub@f1+1,i2___ftadd@f1+1
 24700  015DBC  C062  F042         	movff	i2___ftsub@f1+2,i2___ftadd@f1+2
 24701  015DC0  C063  F043         	movff	i2___ftsub@f2,i2___ftadd@f2
 24702  015DC4  C064  F044         	movff	i2___ftsub@f2+1,i2___ftadd@f2+1
 24703  015DC8  C065  F045         	movff	i2___ftsub@f2+2,i2___ftadd@f2+2
 24704  015DCC  ECC9  F09D         	call	i2___ftadd	;wreg free
 24705  015DD0  C040  F060         	movff	?i2___ftadd,?i2___ftsub
 24706  015DD4  C041  F061         	movff	?i2___ftadd+1,?i2___ftsub+1
 24707  015DD8  C042  F062         	movff	?i2___ftadd+2,?i2___ftsub+2
 24708  015DDC  0012               	return	
 24709  015DDE                     __end_ofi2___ftsub:
 24710                           	opt stack 0
 24711                           tosu	equ	0xFFF
 24712                           tosh	equ	0xFFE
 24713                           tosl	equ	0xFFD
 24714                           pclatu	equ	0xFFB
 24715                           pclath	equ	0xFFA
 24716                           tblptru	equ	0xFF8
 24717                           tblptrh	equ	0xFF7
 24718                           tblptrl	equ	0xFF6
 24719                           tablat	equ	0xFF5
 24720                           prodh	equ	0xFF4
 24721                           prodl	equ	0xFF3
 24722                           intcon	equ	0xFF2
 24723                           postinc0	equ	0xFEE
 24724                           fsr0h	equ	0xFEA
 24725                           fsr0l	equ	0xFE9
 24726                           wreg	equ	0xFE8
 24727                           indf1	equ	0xFE7
 24728                           postdec1	equ	0xFE5
 24729                           fsr1h	equ	0xFE2
 24730                           fsr1l	equ	0xFE1
 24731                           bsr	equ	0xFE0
 24732                           indf2	equ	0xFDF
 24733                           postinc2	equ	0xFDE
 24734                           postdec2	equ	0xFDD
 24735                           fsr2h	equ	0xFDA
 24736                           fsr2l	equ	0xFD9
 24737                           status	equ	0xFD8
 24738                           
 24739 ;; *************** function i2___ftneg *****************
 24740 ;; Defined at:
 24741 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftneg.c"
 24742 ;; Parameters:    Size  Location     Type
 24743 ;;  f1              3   35[COMRAM] float 
 24744 ;; Auto vars:     Size  Location     Type
 24745 ;;		None
 24746 ;; Return value:  Size  Location     Type
 24747 ;;                  3   35[COMRAM] float 
 24748 ;; Registers used:
 24749 ;;		wreg, status,2, status,0
 24750 ;; Tracked objects:
 24751 ;;		On entry : 0/0
 24752 ;;		On exit  : 0/0
 24753 ;;		Unchanged: 0/0
 24754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24755 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24758 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24759 ;;Total ram usage:        3 bytes
 24760 ;; Hardware stack levels used:    1
 24761 ;; This function calls:
 24762 ;;		Nothing
 24763 ;; This function is called by:
 24764 ;;		_peakToRMS
 24765 ;;		_ADC_postProcessingCallback
 24766 ;;		_acos
 24767 ;;		_asin
 24768 ;;		_atan
 24769 ;;		_fabs
 24770 ;;		_sin
 24771 ;;		i2_printf
 24772 ;; This function uses a non-reentrant model
 24773 ;;
 24774                           
 24775                           	psect	text98
 24776  016092                     __ptext98:
 24777                           	opt stack 0
 24778  016092                     i2___ftneg:
 24779                           	opt stack 15
 24780                           
 24781                           ;incstack = 0
 24782  016092  5024               	movf	i2___ftneg@f1,w,c
 24783  016094  1025               	iorwf	i2___ftneg@f1+1,w,c
 24784  016096  1026               	iorwf	i2___ftneg@f1+2,w,c
 24785  016098  B4D8               	btfsc	status,2,c
 24786  01609A  D006               	goto	i2l1563
 24787  01609C  0E00               	movlw	0
 24788  01609E  1A24               	xorwf	i2___ftneg@f1,f,c
 24789  0160A0  0E00               	movlw	0
 24790  0160A2  1A25               	xorwf	i2___ftneg@f1+1,f,c
 24791  0160A4  0E80               	movlw	128
 24792  0160A6  1A26               	xorwf	i2___ftneg@f1+2,f,c
 24793  0160A8                     i2l1563:
 24794  0160A8  C024  F024         	movff	i2___ftneg@f1,?i2___ftneg
 24795  0160AC  C025  F025         	movff	i2___ftneg@f1+1,?i2___ftneg+1
 24796  0160B0  C026  F026         	movff	i2___ftneg@f1+2,?i2___ftneg+2
 24797  0160B4  0012               	return		;funcret
 24798  0160B6                     __end_ofi2___ftneg:
 24799                           	opt stack 0
 24800                           tosu	equ	0xFFF
 24801                           tosh	equ	0xFFE
 24802                           tosl	equ	0xFFD
 24803                           pclatu	equ	0xFFB
 24804                           pclath	equ	0xFFA
 24805                           tblptru	equ	0xFF8
 24806                           tblptrh	equ	0xFF7
 24807                           tblptrl	equ	0xFF6
 24808                           tablat	equ	0xFF5
 24809                           prodh	equ	0xFF4
 24810                           prodl	equ	0xFF3
 24811                           intcon	equ	0xFF2
 24812                           postinc0	equ	0xFEE
 24813                           fsr0h	equ	0xFEA
 24814                           fsr0l	equ	0xFE9
 24815                           wreg	equ	0xFE8
 24816                           indf1	equ	0xFE7
 24817                           postdec1	equ	0xFE5
 24818                           fsr1h	equ	0xFE2
 24819                           fsr1l	equ	0xFE1
 24820                           bsr	equ	0xFE0
 24821                           indf2	equ	0xFDF
 24822                           postinc2	equ	0xFDE
 24823                           postdec2	equ	0xFDD
 24824                           fsr2h	equ	0xFDA
 24825                           fsr2l	equ	0xFD9
 24826                           status	equ	0xFD8
 24827                           
 24828 ;; *************** function i2___ftdiv *****************
 24829 ;; Defined at:
 24830 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdiv.c"
 24831 ;; Parameters:    Size  Location     Type
 24832 ;;  f1              3   20[COMRAM] float 
 24833 ;;  f2              3   23[COMRAM] float 
 24834 ;; Auto vars:     Size  Location     Type
 24835 ;;  __ftdiv         3   31[COMRAM] float 
 24836 ;;  __ftdiv         1   34[COMRAM] unsigned char 
 24837 ;;  __ftdiv         1   30[COMRAM] unsigned char 
 24838 ;;  __ftdiv         1   29[COMRAM] unsigned char 
 24839 ;; Return value:  Size  Location     Type
 24840 ;;                  3   20[COMRAM] float 
 24841 ;; Registers used:
 24842 ;;		wreg, status,2, status,0, cstack
 24843 ;; Tracked objects:
 24844 ;;		On entry : 0/0
 24845 ;;		On exit  : 0/0
 24846 ;;		Unchanged: 0/0
 24847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 24848 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24849 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24850 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24851 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24852 ;;Total ram usage:       15 bytes
 24853 ;; Hardware stack levels used:    1
 24854 ;; Hardware stack levels required when called:    1
 24855 ;; This function calls:
 24856 ;;		i2___ftpack
 24857 ;; This function is called by:
 24858 ;;		_peakToRMS
 24859 ;;		_currentMeasuredToPeak
 24860 ;;		_ADC_postProcessingCallback
 24861 ;;		_asin
 24862 ;;		_atan
 24863 ;;		_sin
 24864 ;; This function uses a non-reentrant model
 24865 ;;
 24866                           
 24867                           	psect	text99
 24868  014962                     __ptext99:
 24869                           	opt stack 0
 24870  014962                     i2___ftdiv:
 24871                           	opt stack 14
 24872                           
 24873                           ;incstack = 0
 24874  014962  C017  F01B         	movff	i2___ftdiv@f1+2,??i2___ftdiv
 24875  014966  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 24876  014968  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 24877  01496A  3416               	rlcf	i2___ftdiv@f1+1,w,c
 24878  01496C  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 24879  01496E  E301               	bnc	u1487_41
 24880  014970  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 24881  014972                     u1487_41:
 24882  014972  501B               	movf	??i2___ftdiv,w,c
 24883  014974  6E1F               	movwf	i2___ftdiv@exp,c
 24884  014976  501F               	movf	i2___ftdiv@exp,w,c
 24885  014978  A4D8               	btfss	status,2,c
 24886  01497A  D007               	goto	i2l1520
 24887  01497C  0E00               	movlw	0
 24888  01497E  6E15               	movwf	?i2___ftdiv,c
 24889  014980  0E00               	movlw	0
 24890  014982  6E16               	movwf	?i2___ftdiv+1,c
 24891  014984  0E00               	movlw	0
 24892  014986  6E17               	movwf	?i2___ftdiv+2,c
 24893  014988  0012               	return	
 24894  01498A                     i2l1520:
 24895  01498A  C01A  F01B         	movff	i2___ftdiv@f2+2,??i2___ftdiv
 24896  01498E  6A1C               	clrf	(??i2___ftdiv+1)& (0+255),c
 24897  014990  6A1D               	clrf	(??i2___ftdiv+2)& (0+255),c
 24898  014992  3419               	rlcf	i2___ftdiv@f2+1,w,c
 24899  014994  361B               	rlcf	??i2___ftdiv& (0+255),f,c
 24900  014996  E301               	bnc	u1489_41
 24901  014998  801C               	bsf	(??i2___ftdiv+1)& (0+255),0,c
 24902  01499A                     u1489_41:
 24903  01499A  501B               	movf	??i2___ftdiv,w,c
 24904  01499C  6E23               	movwf	i2___ftdiv@sign,c
 24905  01499E  5023               	movf	i2___ftdiv@sign,w,c
 24906  0149A0  A4D8               	btfss	status,2,c
 24907  0149A2  D007               	goto	i2l1522
 24908  0149A4  0E00               	movlw	0
 24909  0149A6  6E15               	movwf	?i2___ftdiv,c
 24910  0149A8  0E00               	movlw	0
 24911  0149AA  6E16               	movwf	?i2___ftdiv+1,c
 24912  0149AC  0E00               	movlw	0
 24913  0149AE  6E17               	movwf	?i2___ftdiv+2,c
 24914  0149B0  0012               	return	
 24915  0149B2                     i2l1522:
 24916  0149B2  0E00               	movlw	0
 24917  0149B4  6E20               	movwf	i2___ftdiv@f3,c
 24918  0149B6  0E00               	movlw	0
 24919  0149B8  6E21               	movwf	i2___ftdiv@f3+1,c
 24920  0149BA  0E00               	movlw	0
 24921  0149BC  6E22               	movwf	i2___ftdiv@f3+2,c
 24922  0149BE  5023               	movf	i2___ftdiv@sign,w,c
 24923  0149C0  0F89               	addlw	137
 24924  0149C2  5E1F               	subwf	i2___ftdiv@exp,f,c
 24925  0149C4  C017  F023         	movff	i2___ftdiv@f1+2,i2___ftdiv@sign
 24926  0149C8  501A               	movf	i2___ftdiv@f2+2,w,c
 24927  0149CA  1A23               	xorwf	i2___ftdiv@sign,f,c
 24928  0149CC  0E80               	movlw	128
 24929  0149CE  1623               	andwf	i2___ftdiv@sign,f,c
 24930  0149D0  8E16               	bsf	i2___ftdiv@f1+1,7,c
 24931  0149D2  0EFF               	movlw	255
 24932  0149D4  1615               	andwf	i2___ftdiv@f1,f,c
 24933  0149D6  0EFF               	movlw	255
 24934  0149D8  1616               	andwf	i2___ftdiv@f1+1,f,c
 24935  0149DA  0E00               	movlw	0
 24936  0149DC  1617               	andwf	i2___ftdiv@f1+2,f,c
 24937  0149DE  8E19               	bsf	i2___ftdiv@f2+1,7,c
 24938  0149E0  0EFF               	movlw	255
 24939  0149E2  1618               	andwf	i2___ftdiv@f2,f,c
 24940  0149E4  0EFF               	movlw	255
 24941  0149E6  1619               	andwf	i2___ftdiv@f2+1,f,c
 24942  0149E8  0E00               	movlw	0
 24943  0149EA  161A               	andwf	i2___ftdiv@f2+2,f,c
 24944  0149EC  0E18               	movlw	24
 24945  0149EE  6E1E               	movwf	i2___ftdiv@cntr,c
 24946  0149F0  90D8               	bcf	status,0,c
 24947  0149F2  3620               	rlcf	i2___ftdiv@f3,f,c
 24948  0149F4  3621               	rlcf	i2___ftdiv@f3+1,f,c
 24949  0149F6  3622               	rlcf	i2___ftdiv@f3+2,f,c
 24950  0149F8  5018               	movf	i2___ftdiv@f2,w,c
 24951  0149FA  5C15               	subwf	i2___ftdiv@f1,w,c
 24952  0149FC  5019               	movf	i2___ftdiv@f2+1,w,c
 24953  0149FE  5816               	subwfb	i2___ftdiv@f1+1,w,c
 24954  014A00  501A               	movf	i2___ftdiv@f2+2,w,c
 24955  014A02  5817               	subwfb	i2___ftdiv@f1+2,w,c
 24956  014A04  A0D8               	btfss	status,0,c
 24957  014A06  D007               	goto	i2l1524
 24958  014A08  5018               	movf	i2___ftdiv@f2,w,c
 24959  014A0A  5E15               	subwf	i2___ftdiv@f1,f,c
 24960  014A0C  5019               	movf	i2___ftdiv@f2+1,w,c
 24961  014A0E  5A16               	subwfb	i2___ftdiv@f1+1,f,c
 24962  014A10  501A               	movf	i2___ftdiv@f2+2,w,c
 24963  014A12  5A17               	subwfb	i2___ftdiv@f1+2,f,c
 24964  014A14  8020               	bsf	i2___ftdiv@f3,0,c
 24965  014A16                     i2l1524:
 24966  014A16  90D8               	bcf	status,0,c
 24967  014A18  3615               	rlcf	i2___ftdiv@f1,f,c
 24968  014A1A  3616               	rlcf	i2___ftdiv@f1+1,f,c
 24969  014A1C  3617               	rlcf	i2___ftdiv@f1+2,f,c
 24970  014A1E  2E1E               	decfsz	i2___ftdiv@cntr,f,c
 24971  014A20  D7E7               	goto	i2l1523
 24972  014A22  C020  F001         	movff	i2___ftdiv@f3,i2___ftpack@arg
 24973  014A26  C021  F002         	movff	i2___ftdiv@f3+1,i2___ftpack@arg+1
 24974  014A2A  C022  F003         	movff	i2___ftdiv@f3+2,i2___ftpack@arg+2
 24975  014A2E  C01F  F004         	movff	i2___ftdiv@exp,i2___ftpack@exp
 24976  014A32  C023  F005         	movff	i2___ftdiv@sign,i2___ftpack@sign
 24977  014A36  EC2A  F0A7         	call	i2___ftpack	;wreg free
 24978  014A3A  C001  F015         	movff	?i2___ftpack,?i2___ftdiv
 24979  014A3E  C002  F016         	movff	?i2___ftpack+1,?i2___ftdiv+1
 24980  014A42  C003  F017         	movff	?i2___ftpack+2,?i2___ftdiv+2
 24981  014A46  0012               	return	
 24982  014A48                     __end_ofi2___ftdiv:
 24983                           	opt stack 0
 24984                           tosu	equ	0xFFF
 24985                           tosh	equ	0xFFE
 24986                           tosl	equ	0xFFD
 24987                           pclatu	equ	0xFFB
 24988                           pclath	equ	0xFFA
 24989                           tblptru	equ	0xFF8
 24990                           tblptrh	equ	0xFF7
 24991                           tblptrl	equ	0xFF6
 24992                           tablat	equ	0xFF5
 24993                           prodh	equ	0xFF4
 24994                           prodl	equ	0xFF3
 24995                           intcon	equ	0xFF2
 24996                           postinc0	equ	0xFEE
 24997                           fsr0h	equ	0xFEA
 24998                           fsr0l	equ	0xFE9
 24999                           wreg	equ	0xFE8
 25000                           indf1	equ	0xFE7
 25001                           postdec1	equ	0xFE5
 25002                           fsr1h	equ	0xFE2
 25003                           fsr1l	equ	0xFE1
 25004                           bsr	equ	0xFE0
 25005                           indf2	equ	0xFDF
 25006                           postinc2	equ	0xFDE
 25007                           postdec2	equ	0xFDD
 25008                           fsr2h	equ	0xFDA
 25009                           fsr2l	equ	0xFD9
 25010                           status	equ	0xFD8
 25011                           
 25012 ;; *************** function _floor *****************
 25013 ;; Defined at:
 25014 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\floor.c"
 25015 ;; Parameters:    Size  Location     Type
 25016 ;;  x               3   85[COMRAM] float 
 25017 ;; Auto vars:     Size  Location     Type
 25018 ;;  i               3   88[COMRAM] float 
 25019 ;;  expon           2   91[COMRAM] int 
 25020 ;; Return value:  Size  Location     Type
 25021 ;;                  3   85[COMRAM] int 
 25022 ;; Registers used:
 25023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25024 ;; Tracked objects:
 25025 ;;		On entry : 0/0
 25026 ;;		On exit  : 0/0
 25027 ;;		Unchanged: 0/0
 25028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25029 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25030 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25032 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25033 ;;Total ram usage:        8 bytes
 25034 ;; Hardware stack levels used:    1
 25035 ;; Hardware stack levels required when called:    2
 25036 ;; This function calls:
 25037 ;;		___altoft
 25038 ;;		_frexp
 25039 ;;		i2___ftadd
 25040 ;;		i2___ftge
 25041 ;;		i2___fttol
 25042 ;; This function is called by:
 25043 ;;		_sin
 25044 ;; This function uses a non-reentrant model
 25045 ;;
 25046                           
 25047                           	psect	text100
 25048  014A48                     __ptext100:
 25049                           	opt stack 0
 25050  014A48                     _floor:
 25051                           	opt stack 11
 25052                           
 25053                           ;incstack = 0
 25054  014A48  C056  F001         	movff	floor@x,frexp@value
 25055  014A4C  C057  F002         	movff	floor@x+1,frexp@value+1
 25056  014A50  C058  F003         	movff	floor@x+2,frexp@value+2
 25057  014A54  0E5C               	movlw	low floor@expon
 25058  014A56  6E04               	movwf	frexp@eptr,c
 25059  014A58  0E00               	movlw	high floor@expon
 25060  014A5A  6E05               	movwf	frexp@eptr+1,c
 25061  014A5C  EC4E  F0AA         	call	_frexp	;wreg free
 25062  014A60  AE5D               	btfss	floor@expon+1,7,c
 25063  014A62  D010               	goto	i2l1908
 25064  014A64  AE58               	btfss	floor@x+2,7,c
 25065  014A66  D007               	goto	i2l1909
 25066  014A68  0E00               	movlw	0
 25067  014A6A  6E56               	movwf	?_floor,c
 25068  014A6C  0E80               	movlw	128
 25069  014A6E  6E57               	movwf	?_floor+1,c
 25070  014A70  0EBF               	movlw	191
 25071  014A72  6E58               	movwf	?_floor+2,c
 25072  014A74  0012               	return	
 25073  014A76                     i2l1909:
 25074  014A76  0E00               	movlw	0
 25075  014A78  6E56               	movwf	?_floor,c
 25076  014A7A  0E00               	movlw	0
 25077  014A7C  6E57               	movwf	?_floor+1,c
 25078  014A7E  0E00               	movlw	0
 25079  014A80  6E58               	movwf	?_floor+2,c
 25080  014A82  0012               	return	
 25081  014A84                     i2l1908:
 25082  014A84  505D               	movf	floor@expon+1,w,c
 25083  014A86  E104               	bnz	i2u1521_40
 25084  014A88  0E15               	movlw	21
 25085  014A8A  5C5C               	subwf	floor@expon,w,c
 25086  014A8C  A0D8               	btfss	status,0,c
 25087  014A8E  D007               	goto	i2l1911
 25088  014A90                     i2u1521_40:
 25089  014A90  C056  F056         	movff	floor@x,?_floor
 25090  014A94  C057  F057         	movff	floor@x+1,?_floor+1
 25091  014A98  C058  F058         	movff	floor@x+2,?_floor+2
 25092  014A9C  0012               	return	
 25093  014A9E                     i2l1911:
 25094  014A9E  C056  F03D         	movff	floor@x,i2___fttol@f1
 25095  014AA2  C057  F03E         	movff	floor@x+1,i2___fttol@f1+1
 25096  014AA6  C058  F03F         	movff	floor@x+2,i2___fttol@f1+2
 25097  014AAA  EC49  F0A3         	call	i2___fttol	;wreg free
 25098  014AAE  C03D  F04C         	movff	?i2___fttol,___altoft@c
 25099  014AB2  C03E  F04D         	movff	?i2___fttol+1,___altoft@c+1
 25100  014AB6  C03F  F04E         	movff	?i2___fttol+2,___altoft@c+2
 25101  014ABA  C040  F04F         	movff	?i2___fttol+3,___altoft@c+3
 25102  014ABE  EC8A  F0AA         	call	___altoft	;wreg free
 25103  014AC2  C04C  F059         	movff	?___altoft,floor@i
 25104  014AC6  C04D  F05A         	movff	?___altoft+1,floor@i+1
 25105  014ACA  C04E  F05B         	movff	?___altoft+2,floor@i+2
 25106  014ACE  C056  F02A         	movff	floor@x,i2___ftge@ff1
 25107  014AD2  C057  F02B         	movff	floor@x+1,i2___ftge@ff1+1
 25108  014AD6  C058  F02C         	movff	floor@x+2,i2___ftge@ff1+2
 25109  014ADA  C059  F02D         	movff	floor@i,i2___ftge@ff2
 25110  014ADE  C05A  F02E         	movff	floor@i+1,i2___ftge@ff2+1
 25111  014AE2  C05B  F02F         	movff	floor@i+2,i2___ftge@ff2+2
 25112  014AE6  ECB8  F0A8         	call	i2___ftge	;wreg free
 25113  014AEA  B0D8               	btfsc	status,0,c
 25114  014AEC  D015               	goto	i2l1912
 25115  014AEE  C059  F040         	movff	floor@i,i2___ftadd@f1
 25116  014AF2  C05A  F041         	movff	floor@i+1,i2___ftadd@f1+1
 25117  014AF6  C05B  F042         	movff	floor@i+2,i2___ftadd@f1+2
 25118  014AFA  0E00               	movlw	0
 25119  014AFC  6E43               	movwf	i2___ftadd@f2,c
 25120  014AFE  0E80               	movlw	128
 25121  014B00  6E44               	movwf	i2___ftadd@f2+1,c
 25122  014B02  0EBF               	movlw	191
 25123  014B04  6E45               	movwf	i2___ftadd@f2+2,c
 25124  014B06  ECC9  F09D         	call	i2___ftadd	;wreg free
 25125  014B0A  C040  F056         	movff	?i2___ftadd,?_floor
 25126  014B0E  C041  F057         	movff	?i2___ftadd+1,?_floor+1
 25127  014B12  C042  F058         	movff	?i2___ftadd+2,?_floor+2
 25128  014B16  0012               	return	
 25129  014B18                     i2l1912:
 25130  014B18  C059  F056         	movff	floor@i,?_floor
 25131  014B1C  C05A  F057         	movff	floor@i+1,?_floor+1
 25132  014B20  C05B  F058         	movff	floor@i+2,?_floor+2
 25133  014B24  0012               	return		;funcret
 25134  014B26                     __end_of_floor:
 25135                           	opt stack 0
 25136                           tosu	equ	0xFFF
 25137                           tosh	equ	0xFFE
 25138                           tosl	equ	0xFFD
 25139                           pclatu	equ	0xFFB
 25140                           pclath	equ	0xFFA
 25141                           tblptru	equ	0xFF8
 25142                           tblptrh	equ	0xFF7
 25143                           tblptrl	equ	0xFF6
 25144                           tablat	equ	0xFF5
 25145                           prodh	equ	0xFF4
 25146                           prodl	equ	0xFF3
 25147                           intcon	equ	0xFF2
 25148                           postinc0	equ	0xFEE
 25149                           fsr0h	equ	0xFEA
 25150                           fsr0l	equ	0xFE9
 25151                           wreg	equ	0xFE8
 25152                           indf1	equ	0xFE7
 25153                           postdec1	equ	0xFE5
 25154                           fsr1h	equ	0xFE2
 25155                           fsr1l	equ	0xFE1
 25156                           bsr	equ	0xFE0
 25157                           indf2	equ	0xFDF
 25158                           postinc2	equ	0xFDE
 25159                           postdec2	equ	0xFDD
 25160                           fsr2h	equ	0xFDA
 25161                           fsr2l	equ	0xFD9
 25162                           status	equ	0xFD8
 25163                           
 25164 ;; *************** function i2___fttol *****************
 25165 ;; Defined at:
 25166 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fttol.c"
 25167 ;; Parameters:    Size  Location     Type
 25168 ;;  f1              3   60[COMRAM] float 
 25169 ;; Auto vars:     Size  Location     Type
 25170 ;;  __fttol         4   70[COMRAM] unsigned long 
 25171 ;;  __fttol         1   74[COMRAM] unsigned char 
 25172 ;;  __fttol         1   69[COMRAM] unsigned char 
 25173 ;; Return value:  Size  Location     Type
 25174 ;;                  4   60[COMRAM] long 
 25175 ;; Registers used:
 25176 ;;		wreg, status,2, status,0
 25177 ;; Tracked objects:
 25178 ;;		On entry : 0/0
 25179 ;;		On exit  : 0/0
 25180 ;;		Unchanged: 0/0
 25181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25182 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25183 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25184 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25185 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25186 ;;Total ram usage:       15 bytes
 25187 ;; Hardware stack levels used:    1
 25188 ;; This function calls:
 25189 ;;		Nothing
 25190 ;; This function is called by:
 25191 ;;		_floor
 25192 ;;		i2_printf
 25193 ;; This function uses a non-reentrant model
 25194 ;;
 25195                           
 25196                           	psect	text101
 25197  014692                     __ptext101:
 25198                           	opt stack 0
 25199  014692                     i2___fttol:
 25200                           	opt stack 15
 25201                           
 25202                           ;incstack = 0
 25203  014692  C03F  F041         	movff	i2___fttol@f1+2,??i2___fttol
 25204  014696  6A42               	clrf	(??i2___fttol+1)& (0+255),c
 25205  014698  6A43               	clrf	(??i2___fttol+2)& (0+255),c
 25206  01469A  343E               	rlcf	i2___fttol@f1+1,w,c
 25207  01469C  3641               	rlcf	??i2___fttol& (0+255),f,c
 25208  01469E  E301               	bnc	u1508_41
 25209  0146A0  8042               	bsf	(??i2___fttol+1)& (0+255),0,c
 25210  0146A2                     u1508_41:
 25211  0146A2  5041               	movf	??i2___fttol,w,c
 25212  0146A4  6E4B               	movwf	i2___fttol@exp1,c
 25213  0146A6  504B               	movf	i2___fttol@exp1,w,c
 25214  0146A8  A4D8               	btfss	status,2,c
 25215  0146AA  D009               	goto	i2l1573
 25216  0146AC  0E00               	movlw	0
 25217  0146AE  6E3D               	movwf	?i2___fttol,c
 25218  0146B0  0E00               	movlw	0
 25219  0146B2  6E3E               	movwf	?i2___fttol+1,c
 25220  0146B4  0E00               	movlw	0
 25221  0146B6  6E3F               	movwf	?i2___fttol+2,c
 25222  0146B8  0E00               	movlw	0
 25223  0146BA  6E40               	movwf	?i2___fttol+3,c
 25224  0146BC  0012               	return	
 25225  0146BE                     i2l1573:
 25226  0146BE  0E17               	movlw	23
 25227  0146C0  6E41               	movwf	??i2___fttol& (0+255),c
 25228  0146C2  C03D  F042         	movff	i2___fttol@f1,??i2___fttol+1
 25229  0146C6  C03E  F043         	movff	i2___fttol@f1+1,??i2___fttol+2
 25230  0146CA  C03F  F044         	movff	i2___fttol@f1+2,??i2___fttol+3
 25231  0146CE  2841               	incf	??i2___fttol,w,c
 25232  0146D0  6E45               	movwf	(??i2___fttol+4)& (0+255),c
 25233  0146D2  D004               	goto	i2u1510_40
 25234  0146D4                     i2u1510_45:
 25235  0146D4  90D8               	bcf	status,0,c
 25236  0146D6  3244               	rrcf	??i2___fttol+3,f,c
 25237  0146D8  3243               	rrcf	??i2___fttol+2,f,c
 25238  0146DA  3242               	rrcf	??i2___fttol+1,f,c
 25239  0146DC                     i2u1510_40:
 25240  0146DC  2E45               	decfsz	(??i2___fttol+4)& (0+255),f,c
 25241  0146DE  D7FA               	goto	i2u1510_45
 25242  0146E0  5042               	movf	??i2___fttol+1,w,c
 25243  0146E2  6E46               	movwf	i2___fttol@sign1,c
 25244  0146E4  8E3E               	bsf	i2___fttol@f1+1,7,c
 25245  0146E6  0EFF               	movlw	255
 25246  0146E8  163D               	andwf	i2___fttol@f1,f,c
 25247  0146EA  0EFF               	movlw	255
 25248  0146EC  163E               	andwf	i2___fttol@f1+1,f,c
 25249  0146EE  0E00               	movlw	0
 25250  0146F0  163F               	andwf	i2___fttol@f1+2,f,c
 25251  0146F2  503D               	movf	i2___fttol@f1,w,c
 25252  0146F4  6E47               	movwf	i2___fttol@lval,c
 25253  0146F6  503E               	movf	i2___fttol@f1+1,w,c
 25254  0146F8  6E48               	movwf	i2___fttol@lval+1,c
 25255  0146FA  503F               	movf	i2___fttol@f1+2,w,c
 25256  0146FC  6E49               	movwf	i2___fttol@lval+2,c
 25257  0146FE  6A4A               	clrf	i2___fttol@lval+3,c
 25258  014700  0E8E               	movlw	142
 25259  014702  5E4B               	subwf	i2___fttol@exp1,f,c
 25260  014704  AE4B               	btfss	i2___fttol@exp1,7,c
 25261  014706  D016               	goto	i2l1575
 25262  014708  504B               	movf	i2___fttol@exp1,w,c
 25263  01470A  0A80               	xorlw	128
 25264  01470C  0F8F               	addlw	143
 25265  01470E  B0D8               	btfsc	status,0,c
 25266  014710  D009               	goto	i2l1576
 25267  014712  0E00               	movlw	0
 25268  014714  6E3D               	movwf	?i2___fttol,c
 25269  014716  0E00               	movlw	0
 25270  014718  6E3E               	movwf	?i2___fttol+1,c
 25271  01471A  0E00               	movlw	0
 25272  01471C  6E3F               	movwf	?i2___fttol+2,c
 25273  01471E  0E00               	movlw	0
 25274  014720  6E40               	movwf	?i2___fttol+3,c
 25275  014722  0012               	return	
 25276  014724                     i2l1576:
 25277  014724  90D8               	bcf	status,0,c
 25278  014726  324A               	rrcf	i2___fttol@lval+3,f,c
 25279  014728  3249               	rrcf	i2___fttol@lval+2,f,c
 25280  01472A  3248               	rrcf	i2___fttol@lval+1,f,c
 25281  01472C  3247               	rrcf	i2___fttol@lval,f,c
 25282  01472E  3E4B               	incfsz	i2___fttol@exp1,f,c
 25283  014730  D7F9               	goto	i2l1576
 25284  014732  D015               	goto	i2u1514_40
 25285  014734                     i2l1575:
 25286  014734  0E17               	movlw	23
 25287  014736  644B               	cpfsgt	i2___fttol@exp1,c
 25288  014738  D00F               	goto	i2l1581
 25289  01473A  0E00               	movlw	0
 25290  01473C  6E3D               	movwf	?i2___fttol,c
 25291  01473E  0E00               	movlw	0
 25292  014740  6E3E               	movwf	?i2___fttol+1,c
 25293  014742  0E00               	movlw	0
 25294  014744  6E3F               	movwf	?i2___fttol+2,c
 25295  014746  0E00               	movlw	0
 25296  014748  6E40               	movwf	?i2___fttol+3,c
 25297  01474A  0012               	return	
 25298  01474C  90D8               	bcf	status,0,c
 25299  01474E  3647               	rlcf	i2___fttol@lval,f,c
 25300  014750  3648               	rlcf	i2___fttol@lval+1,f,c
 25301  014752  3649               	rlcf	i2___fttol@lval+2,f,c
 25302  014754  364A               	rlcf	i2___fttol@lval+3,f,c
 25303  014756  064B               	decf	i2___fttol@exp1,f,c
 25304  014758                     i2l1581:
 25305  014758  504B               	movf	i2___fttol@exp1,w,c
 25306  01475A  A4D8               	btfss	status,2,c
 25307  01475C  D7F7               	goto	i2l1582
 25308  01475E                     i2u1514_40:
 25309  01475E  5046               	movf	i2___fttol@sign1,w,c
 25310  014760  B4D8               	btfsc	status,2,c
 25311  014762  D008               	goto	i2l1584
 25312  014764  1E4A               	comf	i2___fttol@lval+3,f,c
 25313  014766  1E49               	comf	i2___fttol@lval+2,f,c
 25314  014768  1E48               	comf	i2___fttol@lval+1,f,c
 25315  01476A  6C47               	negf	i2___fttol@lval,c
 25316  01476C  0E00               	movlw	0
 25317  01476E  2248               	addwfc	i2___fttol@lval+1,f,c
 25318  014770  2249               	addwfc	i2___fttol@lval+2,f,c
 25319  014772  224A               	addwfc	i2___fttol@lval+3,f,c
 25320  014774                     i2l1584:
 25321  014774  C047  F03D         	movff	i2___fttol@lval,?i2___fttol
 25322  014778  C048  F03E         	movff	i2___fttol@lval+1,?i2___fttol+1
 25323  01477C  C049  F03F         	movff	i2___fttol@lval+2,?i2___fttol+2
 25324  014780  C04A  F040         	movff	i2___fttol@lval+3,?i2___fttol+3
 25325  014784  0012               	return	
 25326  014786                     __end_ofi2___fttol:
 25327                           	opt stack 0
 25328                           tosu	equ	0xFFF
 25329                           tosh	equ	0xFFE
 25330                           tosl	equ	0xFFD
 25331                           pclatu	equ	0xFFB
 25332                           pclath	equ	0xFFA
 25333                           tblptru	equ	0xFF8
 25334                           tblptrh	equ	0xFF7
 25335                           tblptrl	equ	0xFF6
 25336                           tablat	equ	0xFF5
 25337                           prodh	equ	0xFF4
 25338                           prodl	equ	0xFF3
 25339                           intcon	equ	0xFF2
 25340                           postinc0	equ	0xFEE
 25341                           fsr0h	equ	0xFEA
 25342                           fsr0l	equ	0xFE9
 25343                           wreg	equ	0xFE8
 25344                           indf1	equ	0xFE7
 25345                           postdec1	equ	0xFE5
 25346                           fsr1h	equ	0xFE2
 25347                           fsr1l	equ	0xFE1
 25348                           bsr	equ	0xFE0
 25349                           indf2	equ	0xFDF
 25350                           postinc2	equ	0xFDE
 25351                           postdec2	equ	0xFDD
 25352                           fsr2h	equ	0xFDA
 25353                           fsr2l	equ	0xFD9
 25354                           status	equ	0xFD8
 25355                           
 25356 ;; *************** function i2___ftge *****************
 25357 ;; Defined at:
 25358 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftge.c"
 25359 ;; Parameters:    Size  Location     Type
 25360 ;;  ff1             3   41[COMRAM] float 
 25361 ;;  ff2             3   44[COMRAM] float 
 25362 ;; Auto vars:     Size  Location     Type
 25363 ;;		None
 25364 ;; Return value:  Size  Location     Type
 25365 ;;		None               void
 25366 ;; Registers used:
 25367 ;;		wreg, status,2, status,0
 25368 ;; Tracked objects:
 25369 ;;		On entry : 0/0
 25370 ;;		On exit  : 0/0
 25371 ;;		Unchanged: 0/0
 25372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25373 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25375 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25376 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25377 ;;Total ram usage:        9 bytes
 25378 ;; Hardware stack levels used:    1
 25379 ;; This function calls:
 25380 ;;		Nothing
 25381 ;; This function is called by:
 25382 ;;		_asin
 25383 ;;		_atan
 25384 ;;		_sin
 25385 ;;		_sqrt
 25386 ;;		_floor
 25387 ;;		i2_printf
 25388 ;; This function uses a non-reentrant model
 25389 ;;
 25390                           
 25391                           	psect	text102
 25392  015170                     __ptext102:
 25393                           	opt stack 0
 25394  015170                     i2___ftge:
 25395                           	opt stack 15
 25396                           
 25397                           ;incstack = 0
 25398  015170  AE2C               	btfss	i2___ftge@ff1+2,7,c
 25399  015172  D016               	goto	i2l1545
 25400  015174  C02A  F030         	movff	i2___ftge@ff1,??i2___ftge
 25401  015178  C02B  F031         	movff	i2___ftge@ff1+1,??i2___ftge+1
 25402  01517C  C02C  F032         	movff	i2___ftge@ff1+2,??i2___ftge+2
 25403  015180  1E30               	comf	??i2___ftge,f,c
 25404  015182  1E31               	comf	??i2___ftge+1,f,c
 25405  015184  1E32               	comf	??i2___ftge+2,f,c
 25406  015186  2A30               	incf	??i2___ftge,f,c
 25407  015188  0E00               	movlw	0
 25408  01518A  2231               	addwfc	??i2___ftge+1,f,c
 25409  01518C  2232               	addwfc	??i2___ftge+2,f,c
 25410  01518E  0E00               	movlw	0
 25411  015190  2430               	addwf	??i2___ftge,w,c
 25412  015192  6E2A               	movwf	i2___ftge@ff1,c
 25413  015194  0E00               	movlw	0
 25414  015196  2031               	addwfc	??i2___ftge+1,w,c
 25415  015198  6E2B               	movwf	i2___ftge@ff1+1,c
 25416  01519A  0E80               	movlw	128
 25417  01519C  2032               	addwfc	??i2___ftge+2,w,c
 25418  01519E  6E2C               	movwf	i2___ftge@ff1+2,c
 25419  0151A0                     i2l1545:
 25420  0151A0  AE2F               	btfss	i2___ftge@ff2+2,7,c
 25421  0151A2  D016               	goto	i2l1546
 25422  0151A4  C02D  F030         	movff	i2___ftge@ff2,??i2___ftge
 25423  0151A8  C02E  F031         	movff	i2___ftge@ff2+1,??i2___ftge+1
 25424  0151AC  C02F  F032         	movff	i2___ftge@ff2+2,??i2___ftge+2
 25425  0151B0  1E30               	comf	??i2___ftge,f,c
 25426  0151B2  1E31               	comf	??i2___ftge+1,f,c
 25427  0151B4  1E32               	comf	??i2___ftge+2,f,c
 25428  0151B6  2A30               	incf	??i2___ftge,f,c
 25429  0151B8  0E00               	movlw	0
 25430  0151BA  2231               	addwfc	??i2___ftge+1,f,c
 25431  0151BC  2232               	addwfc	??i2___ftge+2,f,c
 25432  0151BE  0E00               	movlw	0
 25433  0151C0  2430               	addwf	??i2___ftge,w,c
 25434  0151C2  6E2D               	movwf	i2___ftge@ff2,c
 25435  0151C4  0E00               	movlw	0
 25436  0151C6  2031               	addwfc	??i2___ftge+1,w,c
 25437  0151C8  6E2E               	movwf	i2___ftge@ff2+1,c
 25438  0151CA  0E80               	movlw	128
 25439  0151CC  2032               	addwfc	??i2___ftge+2,w,c
 25440  0151CE  6E2F               	movwf	i2___ftge@ff2+2,c
 25441  0151D0                     i2l1546:
 25442  0151D0  0E00               	movlw	0
 25443  0151D2  1A2A               	xorwf	i2___ftge@ff1,f,c
 25444  0151D4  0E00               	movlw	0
 25445  0151D6  1A2B               	xorwf	i2___ftge@ff1+1,f,c
 25446  0151D8  0E80               	movlw	128
 25447  0151DA  1A2C               	xorwf	i2___ftge@ff1+2,f,c
 25448  0151DC  0E00               	movlw	0
 25449  0151DE  1A2D               	xorwf	i2___ftge@ff2,f,c
 25450  0151E0  0E00               	movlw	0
 25451  0151E2  1A2E               	xorwf	i2___ftge@ff2+1,f,c
 25452  0151E4  0E80               	movlw	128
 25453  0151E6  1A2F               	xorwf	i2___ftge@ff2+2,f,c
 25454  0151E8  502D               	movf	i2___ftge@ff2,w,c
 25455  0151EA  5C2A               	subwf	i2___ftge@ff1,w,c
 25456  0151EC  502E               	movf	i2___ftge@ff2+1,w,c
 25457  0151EE  582B               	subwfb	i2___ftge@ff1+1,w,c
 25458  0151F0  502F               	movf	i2___ftge@ff2+2,w,c
 25459  0151F2  582C               	subwfb	i2___ftge@ff1+2,w,c
 25460  0151F4  B0D8               	btfsc	status,0,c
 25461  0151F6  D002               	goto	i2l11559
 25462  0151F8  90D8               	bcf	status,0,c
 25463  0151FA  0012               	return	
 25464  0151FC                     i2l11559:
 25465  0151FC  80D8               	bsf	status,0,c
 25466  0151FE  0012               	return	
 25467  015200                     __end_ofi2___ftge:
 25468                           	opt stack 0
 25469                           tosu	equ	0xFFF
 25470                           tosh	equ	0xFFE
 25471                           tosl	equ	0xFFD
 25472                           pclatu	equ	0xFFB
 25473                           pclath	equ	0xFFA
 25474                           tblptru	equ	0xFF8
 25475                           tblptrh	equ	0xFF7
 25476                           tblptrl	equ	0xFF6
 25477                           tablat	equ	0xFF5
 25478                           prodh	equ	0xFF4
 25479                           prodl	equ	0xFF3
 25480                           intcon	equ	0xFF2
 25481                           postinc0	equ	0xFEE
 25482                           fsr0h	equ	0xFEA
 25483                           fsr0l	equ	0xFE9
 25484                           wreg	equ	0xFE8
 25485                           indf1	equ	0xFE7
 25486                           postdec1	equ	0xFE5
 25487                           fsr1h	equ	0xFE2
 25488                           fsr1l	equ	0xFE1
 25489                           bsr	equ	0xFE0
 25490                           indf2	equ	0xFDF
 25491                           postinc2	equ	0xFDE
 25492                           postdec2	equ	0xFDD
 25493                           fsr2h	equ	0xFDA
 25494                           fsr2l	equ	0xFD9
 25495                           status	equ	0xFD8
 25496                           
 25497 ;; *************** function _frexp *****************
 25498 ;; Defined at:
 25499 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\frexp.c"
 25500 ;; Parameters:    Size  Location     Type
 25501 ;;  value           3    0[COMRAM] float 
 25502 ;;  eptr            2    3[COMRAM] PTR int 
 25503 ;;		 -> floor@expon(2), 
 25504 ;; Auto vars:     Size  Location     Type
 25505 ;;		None
 25506 ;; Return value:  Size  Location     Type
 25507 ;;                  3    0[COMRAM] PTR int 
 25508 ;; Registers used:
 25509 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25510 ;; Tracked objects:
 25511 ;;		On entry : 0/0
 25512 ;;		On exit  : 0/0
 25513 ;;		Unchanged: 0/0
 25514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25515 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25518 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25519 ;;Total ram usage:        7 bytes
 25520 ;; Hardware stack levels used:    1
 25521 ;; This function calls:
 25522 ;;		Nothing
 25523 ;; This function is called by:
 25524 ;;		_floor
 25525 ;; This function uses a non-reentrant model
 25526 ;;
 25527                           
 25528                           	psect	text103
 25529  01549C                     __ptext103:
 25530                           	opt stack 0
 25531  01549C                     _frexp:
 25532                           	opt stack 12
 25533                           
 25534                           ;incstack = 0
 25535  01549C  5001               	movf	frexp@value,w,c
 25536  01549E  1002               	iorwf	frexp@value+1,w,c
 25537  0154A0  1003               	iorwf	frexp@value+2,w,c
 25538  0154A2  A4D8               	btfss	status,2,c
 25539  0154A4  D009               	goto	i2l1917
 25540  0154A6  C004  FFD9         	movff	frexp@eptr,fsr2l
 25541  0154AA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25542  0154AE  0E00               	movlw	0
 25543  0154B0  6EDE               	movwf	postinc2,c
 25544  0154B2  0E00               	movlw	0
 25545  0154B4  6EDD               	movwf	postdec2,c
 25546                           
 25547                           ;	Return value of _frexp is never used
 25548  0154B6  0012               	return	
 25549  0154B8                     i2l1917:
 25550  0154B8  5003               	movf	frexp@value+2,w,c
 25551  0154BA  0B7F               	andlw	127
 25552  0154BC  6E06               	movwf	??_frexp& (0+255),c
 25553  0154BE  6A07               	clrf	(??_frexp+1)& (0+255),c
 25554  0154C0  90D8               	bcf	status,0,c
 25555  0154C2  3606               	rlcf	??_frexp,f,c
 25556  0154C4  3607               	rlcf	??_frexp+1,f,c
 25557  0154C6  C004  FFD9         	movff	frexp@eptr,fsr2l
 25558  0154CA  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25559  0154CE  C006  FFDE         	movff	??_frexp,postinc2
 25560  0154D2  C007  FFDD         	movff	??_frexp+1,postdec2
 25561  0154D6  AE02               	btfss	frexp@value+1,7,c
 25562  0154D8  D003               	goto	i2u1507_40
 25563  0154DA  6A06               	clrf	??_frexp& (0+255),c
 25564  0154DC  2A06               	incf	??_frexp& (0+255),f,c
 25565  0154DE  D001               	goto	i2u1507_48
 25566  0154E0                     i2u1507_40:
 25567  0154E0  6A06               	clrf	??_frexp& (0+255),c
 25568  0154E2                     i2u1507_48:
 25569  0154E2  5006               	movf	??_frexp,w,c
 25570  0154E4  C004  FFD9         	movff	frexp@eptr,fsr2l
 25571  0154E8  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25572  0154EC  12DE               	iorwf	postinc2,f,c
 25573  0154EE  0E00               	movlw	0
 25574  0154F0  12DD               	iorwf	postdec2,f,c
 25575  0154F2  C004  FFD9         	movff	frexp@eptr,fsr2l
 25576  0154F6  C005  FFDA         	movff	frexp@eptr+1,fsr2h
 25577  0154FA  0E82               	movlw	130
 25578  0154FC  26DE               	addwf	postinc2,f,c
 25579  0154FE  0EFF               	movlw	255
 25580  015500  22DD               	addwfc	postdec2,f,c
 25581  015502  8003               	bsf	frexp@value+2,0,c
 25582  015504  8203               	bsf	frexp@value+2,1,c
 25583  015506  8403               	bsf	frexp@value+2,2,c
 25584  015508  8603               	bsf	frexp@value+2,3,c
 25585  01550A  8803               	bsf	frexp@value+2,4,c
 25586  01550C  8A03               	bsf	frexp@value+2,5,c
 25587  01550E  9C03               	bcf	frexp@value+2,6,c
 25588  015510  9E02               	bcf	frexp@value+1,7,c
 25589  015512  0012               	return	
 25590  015514                     __end_of_frexp:
 25591                           	opt stack 0
 25592                           tosu	equ	0xFFF
 25593                           tosh	equ	0xFFE
 25594                           tosl	equ	0xFFD
 25595                           pclatu	equ	0xFFB
 25596                           pclath	equ	0xFFA
 25597                           tblptru	equ	0xFF8
 25598                           tblptrh	equ	0xFF7
 25599                           tblptrl	equ	0xFF6
 25600                           tablat	equ	0xFF5
 25601                           prodh	equ	0xFF4
 25602                           prodl	equ	0xFF3
 25603                           intcon	equ	0xFF2
 25604                           postinc0	equ	0xFEE
 25605                           fsr0h	equ	0xFEA
 25606                           fsr0l	equ	0xFE9
 25607                           wreg	equ	0xFE8
 25608                           indf1	equ	0xFE7
 25609                           postdec1	equ	0xFE5
 25610                           fsr1h	equ	0xFE2
 25611                           fsr1l	equ	0xFE1
 25612                           bsr	equ	0xFE0
 25613                           indf2	equ	0xFDF
 25614                           postinc2	equ	0xFDE
 25615                           postdec2	equ	0xFDD
 25616                           fsr2h	equ	0xFDA
 25617                           fsr2l	equ	0xFD9
 25618                           status	equ	0xFD8
 25619                           
 25620 ;; *************** function ___altoft *****************
 25621 ;; Defined at:
 25622 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\altoft.c"
 25623 ;; Parameters:    Size  Location     Type
 25624 ;;  c               4   75[COMRAM] long 
 25625 ;; Auto vars:     Size  Location     Type
 25626 ;;  sign            1   84[COMRAM] unsigned char 
 25627 ;;  exp             1   83[COMRAM] unsigned char 
 25628 ;; Return value:  Size  Location     Type
 25629 ;;                  3   75[COMRAM] float 
 25630 ;; Registers used:
 25631 ;;		wreg, status,2, status,0, cstack
 25632 ;; Tracked objects:
 25633 ;;		On entry : 0/0
 25634 ;;		On exit  : 0/0
 25635 ;;		Unchanged: 0/0
 25636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25637 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25639 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25640 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25641 ;;Total ram usage:       10 bytes
 25642 ;; Hardware stack levels used:    1
 25643 ;; Hardware stack levels required when called:    1
 25644 ;; This function calls:
 25645 ;;		i2___ftpack
 25646 ;; This function is called by:
 25647 ;;		_floor
 25648 ;; This function uses a non-reentrant model
 25649 ;;
 25650                           
 25651                           	psect	text104
 25652  015514                     __ptext104:
 25653                           	opt stack 0
 25654  015514                     ___altoft:
 25655                           	opt stack 11
 25656                           
 25657                           ;incstack = 0
 25658  015514  0E00               	movlw	0
 25659  015516  6E55               	movwf	___altoft@sign,c
 25660  015518  0E8E               	movlw	142
 25661  01551A  6E54               	movwf	___altoft@exp,c
 25662  01551C  AE4F               	btfss	___altoft@c+3,7,c
 25663  01551E  D011               	goto	i2l1250
 25664  015520  1E4F               	comf	___altoft@c+3,f,c
 25665  015522  1E4E               	comf	___altoft@c+2,f,c
 25666  015524  1E4D               	comf	___altoft@c+1,f,c
 25667  015526  6C4C               	negf	___altoft@c,c
 25668  015528  0E00               	movlw	0
 25669  01552A  224D               	addwfc	___altoft@c+1,f,c
 25670  01552C  224E               	addwfc	___altoft@c+2,f,c
 25671  01552E  224F               	addwfc	___altoft@c+3,f,c
 25672  015530  0E01               	movlw	1
 25673  015532  6E55               	movwf	___altoft@sign,c
 25674  015534  D006               	goto	i2l1250
 25675  015536  90D8               	bcf	status,0,c
 25676  015538  324F               	rrcf	___altoft@c+3,f,c
 25677  01553A  324E               	rrcf	___altoft@c+2,f,c
 25678  01553C  324D               	rrcf	___altoft@c+1,f,c
 25679  01553E  324C               	rrcf	___altoft@c,f,c
 25680  015540  2A54               	incf	___altoft@exp,f,c
 25681  015542                     i2l1250:
 25682  015542  0E00               	movlw	0
 25683  015544  144C               	andwf	___altoft@c,w,c
 25684  015546  6E50               	movwf	??___altoft& (0+255),c
 25685  015548  0E00               	movlw	0
 25686  01554A  144D               	andwf	___altoft@c+1,w,c
 25687  01554C  6E51               	movwf	(??___altoft+1)& (0+255),c
 25688  01554E  0E00               	movlw	0
 25689  015550  144E               	andwf	___altoft@c+2,w,c
 25690  015552  6E52               	movwf	(??___altoft+2)& (0+255),c
 25691  015554  0EFF               	movlw	255
 25692  015556  144F               	andwf	___altoft@c+3,w,c
 25693  015558  6E53               	movwf	(??___altoft+3)& (0+255),c
 25694  01555A  5050               	movf	??___altoft,w,c
 25695  01555C  1051               	iorwf	??___altoft+1,w,c
 25696  01555E  1052               	iorwf	??___altoft+2,w,c
 25697  015560  1053               	iorwf	??___altoft+3,w,c
 25698  015562  A4D8               	btfss	status,2,c
 25699  015564  D7E8               	goto	i2l1251
 25700  015566  C04C  F001         	movff	___altoft@c,i2___ftpack@arg
 25701  01556A  C04D  F002         	movff	___altoft@c+1,i2___ftpack@arg+1
 25702  01556E  C04E  F003         	movff	___altoft@c+2,i2___ftpack@arg+2
 25703  015572  C054  F004         	movff	___altoft@exp,i2___ftpack@exp
 25704  015576  C055  F005         	movff	___altoft@sign,i2___ftpack@sign
 25705  01557A  EC2A  F0A7         	call	i2___ftpack	;wreg free
 25706  01557E  C001  F04C         	movff	?i2___ftpack,?___altoft
 25707  015582  C002  F04D         	movff	?i2___ftpack+1,?___altoft+1
 25708  015586  C003  F04E         	movff	?i2___ftpack+2,?___altoft+2
 25709  01558A  0012               	return	
 25710  01558C                     __end_of___altoft:
 25711                           	opt stack 0
 25712                           tosu	equ	0xFFF
 25713                           tosh	equ	0xFFE
 25714                           tosl	equ	0xFFD
 25715                           pclatu	equ	0xFFB
 25716                           pclath	equ	0xFFA
 25717                           tblptru	equ	0xFF8
 25718                           tblptrh	equ	0xFF7
 25719                           tblptrl	equ	0xFF6
 25720                           tablat	equ	0xFF5
 25721                           prodh	equ	0xFF4
 25722                           prodl	equ	0xFF3
 25723                           intcon	equ	0xFF2
 25724                           postinc0	equ	0xFEE
 25725                           fsr0h	equ	0xFEA
 25726                           fsr0l	equ	0xFE9
 25727                           wreg	equ	0xFE8
 25728                           indf1	equ	0xFE7
 25729                           postdec1	equ	0xFE5
 25730                           fsr1h	equ	0xFE2
 25731                           fsr1l	equ	0xFE1
 25732                           bsr	equ	0xFE0
 25733                           indf2	equ	0xFDF
 25734                           postinc2	equ	0xFDE
 25735                           postdec2	equ	0xFDD
 25736                           fsr2h	equ	0xFDA
 25737                           fsr2l	equ	0xFD9
 25738                           status	equ	0xFD8
 25739                           
 25740 ;; *************** function _eval_poly *****************
 25741 ;; Defined at:
 25742 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\evalpoly.c"
 25743 ;; Parameters:    Size  Location     Type
 25744 ;;  x               3   75[COMRAM] float 
 25745 ;;  d               2   78[COMRAM] PTR const 
 25746 ;;		 -> sin@coeff_a(15), sin@coeff_b(12), atan@coeff_a(18), atan@coeff_b(15), 
 25747 ;;  n               2   80[COMRAM] int 
 25748 ;; Auto vars:     Size  Location     Type
 25749 ;;  res             3   84[COMRAM] int 
 25750 ;; Return value:  Size  Location     Type
 25751 ;;                  3   75[COMRAM] int 
 25752 ;; Registers used:
 25753 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25754 ;; Tracked objects:
 25755 ;;		On entry : 0/0
 25756 ;;		On exit  : 0/0
 25757 ;;		Unchanged: 0/0
 25758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25759 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25760 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25761 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25762 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25763 ;;Total ram usage:       12 bytes
 25764 ;; Hardware stack levels used:    1
 25765 ;; Hardware stack levels required when called:    2
 25766 ;; This function calls:
 25767 ;;		i2___ftadd
 25768 ;;		i2___ftmul
 25769 ;;		i2___wmul
 25770 ;; This function is called by:
 25771 ;;		_atan
 25772 ;;		_sin
 25773 ;; This function uses a non-reentrant model
 25774 ;;
 25775                           
 25776                           	psect	text105
 25777  014B26                     __ptext105:
 25778                           	opt stack 0
 25779  014B26                     _eval_poly:
 25780                           	opt stack 11
 25781                           
 25782                           ;incstack = 0
 25783  014B26  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 25784  014B2A  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 25785  014B2E  0E00               	movlw	0
 25786  014B30  6E12               	movwf	i2___wmul@multiplicand+1,c
 25787  014B32  0E03               	movlw	3
 25788  014B34  6E11               	movwf	i2___wmul@multiplicand,c
 25789  014B36  EC36  F0B0         	call	i2___wmul	;wreg free
 25790  014B3A  C04F  F053         	movff	eval_poly@d,??_eval_poly
 25791  014B3E  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 25792  014B42  500F               	movf	?i2___wmul,w,c
 25793  014B44  2653               	addwf	??_eval_poly,f,c
 25794  014B46  5010               	movf	?i2___wmul+1,w,c
 25795  014B48  2254               	addwfc	??_eval_poly+1,f,c
 25796  014B4A  C053  FFF6         	movff	??_eval_poly,tblptrl
 25797  014B4E  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 25798  014B52                     	if	0	;tblptru may be non-zero
 25799  014B52                     	endif
 25800  014B52                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25801  014B52  0E00               	movlw	low (__mediumconst shr (0+16))
 25802  014B54  6EF8               	movwf	tblptru,c
 25803  014B56                     	endif
 25804  014B56  0009               	tblrd		*+
 25805  014B58  CFF5 F055          	movff	tablat,eval_poly@res
 25806  014B5C  0009               	tblrd		*+
 25807  014B5E  CFF5 F056          	movff	tablat,eval_poly@res+1
 25808  014B62  000A               	tblrd		*-
 25809  014B64  CFF5 F057          	movff	tablat,eval_poly@res+2
 25810  014B68  D040               	goto	i2l1414
 25811  014B6A  C055  F02A         	movff	eval_poly@res,i2___ftmul@f2
 25812  014B6E  C056  F02B         	movff	eval_poly@res+1,i2___ftmul@f2+1
 25813  014B72  C057  F02C         	movff	eval_poly@res+2,i2___ftmul@f2+2
 25814  014B76  C04C  F027         	movff	eval_poly@x,i2___ftmul@f1
 25815  014B7A  C04D  F028         	movff	eval_poly@x+1,i2___ftmul@f1+1
 25816  014B7E  C04E  F029         	movff	eval_poly@x+2,i2___ftmul@f1+2
 25817  014B82  ECC3  F0A3         	call	i2___ftmul	;wreg free
 25818  014B86  C027  F040         	movff	?i2___ftmul,i2___ftadd@f1
 25819  014B8A  C028  F041         	movff	?i2___ftmul+1,i2___ftadd@f1+1
 25820  014B8E  C029  F042         	movff	?i2___ftmul+2,i2___ftadd@f1+2
 25821  014B92  0E00               	movlw	0
 25822  014B94  6E12               	movwf	i2___wmul@multiplicand+1,c
 25823  014B96  0E03               	movlw	3
 25824  014B98  6E11               	movwf	i2___wmul@multiplicand,c
 25825  014B9A  0651               	decf	eval_poly@n,f,c
 25826  014B9C  A0D8               	btfss	status,0,c
 25827  014B9E  0652               	decf	eval_poly@n+1,f,c
 25828  014BA0  C051  F00F         	movff	eval_poly@n,i2___wmul@multiplier
 25829  014BA4  C052  F010         	movff	eval_poly@n+1,i2___wmul@multiplier+1
 25830  014BA8  EC36  F0B0         	call	i2___wmul	;wreg free
 25831  014BAC  C04F  F053         	movff	eval_poly@d,??_eval_poly
 25832  014BB0  C050  F054         	movff	eval_poly@d+1,??_eval_poly+1
 25833  014BB4  500F               	movf	?i2___wmul,w,c
 25834  014BB6  2653               	addwf	??_eval_poly,f,c
 25835  014BB8  5010               	movf	?i2___wmul+1,w,c
 25836  014BBA  2254               	addwfc	??_eval_poly+1,f,c
 25837  014BBC  C053  FFF6         	movff	??_eval_poly,tblptrl
 25838  014BC0  C054  FFF7         	movff	??_eval_poly+1,tblptrh
 25839  014BC4                     	if	0	;tblptru may be non-zero
 25840  014BC4                     	endif
 25841  014BC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 25842  014BC4  0E00               	movlw	low (__mediumconst shr (0+16))
 25843  014BC6  6EF8               	movwf	tblptru,c
 25844  014BC8                     	endif
 25845  014BC8  0009               	tblrd		*+
 25846  014BCA  CFF5 F043          	movff	tablat,i2___ftadd@f2
 25847  014BCE  0009               	tblrd		*+
 25848  014BD0  CFF5 F044          	movff	tablat,i2___ftadd@f2+1
 25849  014BD4  000A               	tblrd		*-
 25850  014BD6  CFF5 F045          	movff	tablat,i2___ftadd@f2+2
 25851  014BDA  ECC9  F09D         	call	i2___ftadd	;wreg free
 25852  014BDE  C040  F055         	movff	?i2___ftadd,eval_poly@res
 25853  014BE2  C041  F056         	movff	?i2___ftadd+1,eval_poly@res+1
 25854  014BE6  C042  F057         	movff	?i2___ftadd+2,eval_poly@res+2
 25855  014BEA                     i2l1414:
 25856  014BEA  5051               	movf	eval_poly@n,w,c
 25857  014BEC  1052               	iorwf	eval_poly@n+1,w,c
 25858  014BEE  A4D8               	btfss	status,2,c
 25859  014BF0  D7BC               	goto	i2l1415
 25860  014BF2  C055  F04C         	movff	eval_poly@res,?_eval_poly
 25861  014BF6  C056  F04D         	movff	eval_poly@res+1,?_eval_poly+1
 25862  014BFA  C057  F04E         	movff	eval_poly@res+2,?_eval_poly+2
 25863  014BFE  0012               	return		;funcret
 25864  014C00                     __end_of_eval_poly:
 25865                           	opt stack 0
 25866                           tosu	equ	0xFFF
 25867                           tosh	equ	0xFFE
 25868                           tosl	equ	0xFFD
 25869                           pclatu	equ	0xFFB
 25870                           pclath	equ	0xFFA
 25871                           tblptru	equ	0xFF8
 25872                           tblptrh	equ	0xFF7
 25873                           tblptrl	equ	0xFF6
 25874                           tablat	equ	0xFF5
 25875                           prodh	equ	0xFF4
 25876                           prodl	equ	0xFF3
 25877                           intcon	equ	0xFF2
 25878                           postinc0	equ	0xFEE
 25879                           fsr0h	equ	0xFEA
 25880                           fsr0l	equ	0xFE9
 25881                           wreg	equ	0xFE8
 25882                           indf1	equ	0xFE7
 25883                           postdec1	equ	0xFE5
 25884                           fsr1h	equ	0xFE2
 25885                           fsr1l	equ	0xFE1
 25886                           bsr	equ	0xFE0
 25887                           indf2	equ	0xFDF
 25888                           postinc2	equ	0xFDE
 25889                           postdec2	equ	0xFDD
 25890                           fsr2h	equ	0xFDA
 25891                           fsr2l	equ	0xFD9
 25892                           status	equ	0xFD8
 25893                           
 25894 ;; *************** function i2___wmul *****************
 25895 ;; Defined at:
 25896 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 25897 ;; Parameters:    Size  Location     Type
 25898 ;;  multiplier      2   14[COMRAM] unsigned int 
 25899 ;;  multiplicand    2   16[COMRAM] unsigned int 
 25900 ;; Auto vars:     Size  Location     Type
 25901 ;;  __wmul          2   18[COMRAM] unsigned int 
 25902 ;; Return value:  Size  Location     Type
 25903 ;;                  2   14[COMRAM] unsigned int 
 25904 ;; Registers used:
 25905 ;;		wreg, status,2, status,0, prodl, prodh
 25906 ;; Tracked objects:
 25907 ;;		On entry : 0/0
 25908 ;;		On exit  : 0/0
 25909 ;;		Unchanged: 0/0
 25910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25914 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25915 ;;Total ram usage:        6 bytes
 25916 ;; Hardware stack levels used:    1
 25917 ;; This function calls:
 25918 ;;		Nothing
 25919 ;; This function is called by:
 25920 ;;		_eval_poly
 25921 ;;		i2_fround
 25922 ;;		i2_scale
 25923 ;;		i2_printf
 25924 ;; This function uses a non-reentrant model
 25925 ;;
 25926                           
 25927                           	psect	text106
 25928  01606C                     __ptext106:
 25929                           	opt stack 0
 25930  01606C                     i2___wmul:
 25931                           	opt stack 14
 25932                           
 25933                           ;incstack = 0
 25934  01606C  500F               	movf	i2___wmul@multiplier,w,c
 25935  01606E  0211               	mulwf	i2___wmul@multiplicand,c
 25936  016070  CFF3 F013          	movff	prodl,i2___wmul@product
 25937  016074  CFF4 F014          	movff	prodh,i2___wmul@product+1
 25938  016078  500F               	movf	i2___wmul@multiplier,w,c
 25939  01607A  0212               	mulwf	i2___wmul@multiplicand+1,c
 25940  01607C  50F3               	movf	prodl,w,c
 25941  01607E  2614               	addwf	i2___wmul@product+1,f,c
 25942  016080  5010               	movf	i2___wmul@multiplier+1,w,c
 25943  016082  0211               	mulwf	i2___wmul@multiplicand,c
 25944  016084  50F3               	movf	prodl,w,c
 25945  016086  2614               	addwf	i2___wmul@product+1,f,c
 25946  016088  C013  F00F         	movff	i2___wmul@product,?i2___wmul
 25947  01608C  C014  F010         	movff	i2___wmul@product+1,?i2___wmul+1
 25948  016090  0012               	return	
 25949  016092                     __end_ofi2___wmul:
 25950                           	opt stack 0
 25951                           tosu	equ	0xFFF
 25952                           tosh	equ	0xFFE
 25953                           tosl	equ	0xFFD
 25954                           pclatu	equ	0xFFB
 25955                           pclath	equ	0xFFA
 25956                           tblptru	equ	0xFF8
 25957                           tblptrh	equ	0xFF7
 25958                           tblptrl	equ	0xFF6
 25959                           tablat	equ	0xFF5
 25960                           prodh	equ	0xFF4
 25961                           prodl	equ	0xFF3
 25962                           intcon	equ	0xFF2
 25963                           postinc0	equ	0xFEE
 25964                           fsr0h	equ	0xFEA
 25965                           fsr0l	equ	0xFE9
 25966                           wreg	equ	0xFE8
 25967                           indf1	equ	0xFE7
 25968                           postdec1	equ	0xFE5
 25969                           fsr1h	equ	0xFE2
 25970                           fsr1l	equ	0xFE1
 25971                           bsr	equ	0xFE0
 25972                           indf2	equ	0xFDF
 25973                           postinc2	equ	0xFDE
 25974                           postdec2	equ	0xFDD
 25975                           fsr2h	equ	0xFDA
 25976                           fsr2l	equ	0xFD9
 25977                           status	equ	0xFD8
 25978                           
 25979 ;; *************** function i2___ftmul *****************
 25980 ;; Defined at:
 25981 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftmul.c"
 25982 ;; Parameters:    Size  Location     Type
 25983 ;;  f1              3   38[COMRAM] float 
 25984 ;;  f2              3   41[COMRAM] float 
 25985 ;; Auto vars:     Size  Location     Type
 25986 ;;  __ftmul         3   48[COMRAM] unsigned um
 25987 ;;  __ftmul         1   52[COMRAM] unsigned char 
 25988 ;;  __ftmul         1   51[COMRAM] unsigned char 
 25989 ;;  __ftmul         1   47[COMRAM] unsigned char 
 25990 ;; Return value:  Size  Location     Type
 25991 ;;                  3   38[COMRAM] float 
 25992 ;; Registers used:
 25993 ;;		wreg, status,2, status,0, cstack
 25994 ;; Tracked objects:
 25995 ;;		On entry : 0/0
 25996 ;;		On exit  : 0/0
 25997 ;;		Unchanged: 0/0
 25998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 25999 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26000 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26001 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26002 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26003 ;;Total ram usage:       15 bytes
 26004 ;; Hardware stack levels used:    1
 26005 ;; Hardware stack levels required when called:    1
 26006 ;; This function calls:
 26007 ;;		i2___ftpack
 26008 ;; This function is called by:
 26009 ;;		_peakToRMS
 26010 ;;		_ADC_postProcessingCallback
 26011 ;;		_asin
 26012 ;;		_atan
 26013 ;;		_eval_poly
 26014 ;;		_sin
 26015 ;;		_sqrt
 26016 ;;		i2_fround
 26017 ;;		i2_scale
 26018 ;;		i2_printf
 26019 ;; This function uses a non-reentrant model
 26020 ;;
 26021                           
 26022                           	psect	text107
 26023  014786                     __ptext107:
 26024                           	opt stack 0
 26025  014786                     i2___ftmul:
 26026                           	opt stack 13
 26027                           
 26028                           ;incstack = 0
 26029  014786  C029  F02D         	movff	i2___ftmul@f1+2,??i2___ftmul
 26030  01478A  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 26031  01478C  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 26032  01478E  3428               	rlcf	i2___ftmul@f1+1,w,c
 26033  014790  362D               	rlcf	??i2___ftmul& (0+255),f,c
 26034  014792  E301               	bnc	u1478_41
 26035  014794  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 26036  014796                     u1478_41:
 26037  014796  502D               	movf	??i2___ftmul,w,c
 26038  014798  6E30               	movwf	i2___ftmul@exp,c
 26039  01479A  5030               	movf	i2___ftmul@exp,w,c
 26040  01479C  A4D8               	btfss	status,2,c
 26041  01479E  D007               	goto	i2l1552
 26042  0147A0  0E00               	movlw	0
 26043  0147A2  6E27               	movwf	?i2___ftmul,c
 26044  0147A4  0E00               	movlw	0
 26045  0147A6  6E28               	movwf	?i2___ftmul+1,c
 26046  0147A8  0E00               	movlw	0
 26047  0147AA  6E29               	movwf	?i2___ftmul+2,c
 26048  0147AC  0012               	return	
 26049  0147AE                     i2l1552:
 26050  0147AE  C02C  F02D         	movff	i2___ftmul@f2+2,??i2___ftmul
 26051  0147B2  6A2E               	clrf	(??i2___ftmul+1)& (0+255),c
 26052  0147B4  6A2F               	clrf	(??i2___ftmul+2)& (0+255),c
 26053  0147B6  342B               	rlcf	i2___ftmul@f2+1,w,c
 26054  0147B8  362D               	rlcf	??i2___ftmul& (0+255),f,c
 26055  0147BA  E301               	bnc	u1480_41
 26056  0147BC  802E               	bsf	(??i2___ftmul+1)& (0+255),0,c
 26057  0147BE                     u1480_41:
 26058  0147BE  502D               	movf	??i2___ftmul,w,c
 26059  0147C0  6E35               	movwf	i2___ftmul@sign,c
 26060  0147C2  5035               	movf	i2___ftmul@sign,w,c
 26061  0147C4  A4D8               	btfss	status,2,c
 26062  0147C6  D007               	goto	i2l1554
 26063  0147C8  0E00               	movlw	0
 26064  0147CA  6E27               	movwf	?i2___ftmul,c
 26065  0147CC  0E00               	movlw	0
 26066  0147CE  6E28               	movwf	?i2___ftmul+1,c
 26067  0147D0  0E00               	movlw	0
 26068  0147D2  6E29               	movwf	?i2___ftmul+2,c
 26069  0147D4  0012               	return	
 26070  0147D6                     i2l1554:
 26071  0147D6  5035               	movf	i2___ftmul@sign,w,c
 26072  0147D8  0F7B               	addlw	123
 26073  0147DA  2630               	addwf	i2___ftmul@exp,f,c
 26074  0147DC  C029  F035         	movff	i2___ftmul@f1+2,i2___ftmul@sign
 26075  0147E0  502C               	movf	i2___ftmul@f2+2,w,c
 26076  0147E2  1A35               	xorwf	i2___ftmul@sign,f,c
 26077  0147E4  0E80               	movlw	128
 26078  0147E6  1635               	andwf	i2___ftmul@sign,f,c
 26079  0147E8  8E28               	bsf	i2___ftmul@f1+1,7,c
 26080  0147EA  8E2B               	bsf	i2___ftmul@f2+1,7,c
 26081  0147EC  0EFF               	movlw	255
 26082  0147EE  162A               	andwf	i2___ftmul@f2,f,c
 26083  0147F0  0EFF               	movlw	255
 26084  0147F2  162B               	andwf	i2___ftmul@f2+1,f,c
 26085  0147F4  0E00               	movlw	0
 26086  0147F6  162C               	andwf	i2___ftmul@f2+2,f,c
 26087  0147F8  0E00               	movlw	0
 26088  0147FA  6E31               	movwf	i2___ftmul@f3_as_product,c
 26089  0147FC  0E00               	movlw	0
 26090  0147FE  6E32               	movwf	i2___ftmul@f3_as_product+1,c
 26091  014800  0E00               	movlw	0
 26092  014802  6E33               	movwf	i2___ftmul@f3_as_product+2,c
 26093  014804  0E07               	movlw	7
 26094  014806  6E34               	movwf	i2___ftmul@cntr,c
 26095  014808  A027               	btfss	i2___ftmul@f1,0,c
 26096  01480A  D006               	goto	i2l1556
 26097  01480C  502A               	movf	i2___ftmul@f2,w,c
 26098  01480E  2631               	addwf	i2___ftmul@f3_as_product,f,c
 26099  014810  502B               	movf	i2___ftmul@f2+1,w,c
 26100  014812  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 26101  014814  502C               	movf	i2___ftmul@f2+2,w,c
 26102  014816  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 26103  014818                     i2l1556:
 26104  014818  90D8               	bcf	status,0,c
 26105  01481A  3229               	rrcf	i2___ftmul@f1+2,f,c
 26106  01481C  3228               	rrcf	i2___ftmul@f1+1,f,c
 26107  01481E  3227               	rrcf	i2___ftmul@f1,f,c
 26108  014820  90D8               	bcf	status,0,c
 26109  014822  362A               	rlcf	i2___ftmul@f2,f,c
 26110  014824  362B               	rlcf	i2___ftmul@f2+1,f,c
 26111  014826  362C               	rlcf	i2___ftmul@f2+2,f,c
 26112  014828  2E34               	decfsz	i2___ftmul@cntr,f,c
 26113  01482A  D7EE               	goto	i2l1555
 26114  01482C  0E09               	movlw	9
 26115  01482E  6E34               	movwf	i2___ftmul@cntr,c
 26116  014830  A027               	btfss	i2___ftmul@f1,0,c
 26117  014832  D006               	goto	i2l1559
 26118  014834  502A               	movf	i2___ftmul@f2,w,c
 26119  014836  2631               	addwf	i2___ftmul@f3_as_product,f,c
 26120  014838  502B               	movf	i2___ftmul@f2+1,w,c
 26121  01483A  2232               	addwfc	i2___ftmul@f3_as_product+1,f,c
 26122  01483C  502C               	movf	i2___ftmul@f2+2,w,c
 26123  01483E  2233               	addwfc	i2___ftmul@f3_as_product+2,f,c
 26124  014840                     i2l1559:
 26125  014840  90D8               	bcf	status,0,c
 26126  014842  3229               	rrcf	i2___ftmul@f1+2,f,c
 26127  014844  3228               	rrcf	i2___ftmul@f1+1,f,c
 26128  014846  3227               	rrcf	i2___ftmul@f1,f,c
 26129  014848  90D8               	bcf	status,0,c
 26130  01484A  3233               	rrcf	i2___ftmul@f3_as_product+2,f,c
 26131  01484C  3232               	rrcf	i2___ftmul@f3_as_product+1,f,c
 26132  01484E  3231               	rrcf	i2___ftmul@f3_as_product,f,c
 26133  014850  2E34               	decfsz	i2___ftmul@cntr,f,c
 26134  014852  D7EE               	goto	i2l1558
 26135  014854  C031  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
 26136  014858  C032  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
 26137  01485C  C033  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
 26138  014860  C030  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
 26139  014864  C035  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
 26140  014868  EC2A  F0A7         	call	i2___ftpack	;wreg free
 26141  01486C  C001  F027         	movff	?i2___ftpack,?i2___ftmul
 26142  014870  C002  F028         	movff	?i2___ftpack+1,?i2___ftmul+1
 26143  014874  C003  F029         	movff	?i2___ftpack+2,?i2___ftmul+2
 26144  014878  0012               	return	
 26145  01487A                     __end_ofi2___ftmul:
 26146                           	opt stack 0
 26147                           tosu	equ	0xFFF
 26148                           tosh	equ	0xFFE
 26149                           tosl	equ	0xFFD
 26150                           pclatu	equ	0xFFB
 26151                           pclath	equ	0xFFA
 26152                           tblptru	equ	0xFF8
 26153                           tblptrh	equ	0xFF7
 26154                           tblptrl	equ	0xFF6
 26155                           tablat	equ	0xFF5
 26156                           prodh	equ	0xFF4
 26157                           prodl	equ	0xFF3
 26158                           intcon	equ	0xFF2
 26159                           postinc0	equ	0xFEE
 26160                           fsr0h	equ	0xFEA
 26161                           fsr0l	equ	0xFE9
 26162                           wreg	equ	0xFE8
 26163                           indf1	equ	0xFE7
 26164                           postdec1	equ	0xFE5
 26165                           fsr1h	equ	0xFE2
 26166                           fsr1l	equ	0xFE1
 26167                           bsr	equ	0xFE0
 26168                           indf2	equ	0xFDF
 26169                           postinc2	equ	0xFDE
 26170                           postdec2	equ	0xFDD
 26171                           fsr2h	equ	0xFDA
 26172                           fsr2l	equ	0xFD9
 26173                           status	equ	0xFD8
 26174                           
 26175 ;; *************** function i2___ftadd *****************
 26176 ;; Defined at:
 26177 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftadd.c"
 26178 ;; Parameters:    Size  Location     Type
 26179 ;;  f1              3   63[COMRAM] float 
 26180 ;;  f2              3   66[COMRAM] float 
 26181 ;; Auto vars:     Size  Location     Type
 26182 ;;  __ftadd         1   74[COMRAM] unsigned char 
 26183 ;;  __ftadd         1   73[COMRAM] unsigned char 
 26184 ;;  __ftadd         1   72[COMRAM] unsigned char 
 26185 ;; Return value:  Size  Location     Type
 26186 ;;                  3   63[COMRAM] float 
 26187 ;; Registers used:
 26188 ;;		wreg, status,2, status,0, cstack
 26189 ;; Tracked objects:
 26190 ;;		On entry : 0/0
 26191 ;;		On exit  : 0/0
 26192 ;;		Unchanged: 0/0
 26193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26194 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26195 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26196 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26197 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26198 ;;Total ram usage:       12 bytes
 26199 ;; Hardware stack levels used:    1
 26200 ;; Hardware stack levels required when called:    1
 26201 ;; This function calls:
 26202 ;;		i2___ftpack
 26203 ;; This function is called by:
 26204 ;;		_peakToRMS
 26205 ;;		_ADC_postProcessingCallback
 26206 ;;		_acos
 26207 ;;		_asin
 26208 ;;		_atan
 26209 ;;		_eval_poly
 26210 ;;		_sin
 26211 ;;		_floor
 26212 ;;		i2_printf
 26213 ;;		i2___ftsub
 26214 ;; This function uses a non-reentrant model
 26215 ;;
 26216                           
 26217                           	psect	text108
 26218  013B92                     __ptext108:
 26219                           	opt stack 0
 26220  013B92                     i2___ftadd:
 26221                           	opt stack 13
 26222                           
 26223                           ;incstack = 0
 26224  013B92  C042  F046         	movff	i2___ftadd@f1+2,??i2___ftadd
 26225  013B96  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 26226  013B98  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 26227  013B9A  3441               	rlcf	i2___ftadd@f1+1,w,c
 26228  013B9C  3646               	rlcf	??i2___ftadd& (0+255),f,c
 26229  013B9E  E301               	bnc	u1457_41
 26230  013BA0  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 26231  013BA2                     u1457_41:
 26232  013BA2  5046               	movf	??i2___ftadd,w,c
 26233  013BA4  6E4B               	movwf	i2___ftadd@exp1,c
 26234  013BA6  C045  F046         	movff	i2___ftadd@f2+2,??i2___ftadd
 26235  013BAA  6A47               	clrf	(??i2___ftadd+1)& (0+255),c
 26236  013BAC  6A48               	clrf	(??i2___ftadd+2)& (0+255),c
 26237  013BAE  3444               	rlcf	i2___ftadd@f2+1,w,c
 26238  013BB0  3646               	rlcf	??i2___ftadd& (0+255),f,c
 26239  013BB2  E301               	bnc	u1458_41
 26240  013BB4  8047               	bsf	(??i2___ftadd+1)& (0+255),0,c
 26241  013BB6                     u1458_41:
 26242  013BB6  5046               	movf	??i2___ftadd,w,c
 26243  013BB8  6E4A               	movwf	i2___ftadd@exp2,c
 26244  013BBA  504B               	movf	i2___ftadd@exp1,w,c
 26245  013BBC  B4D8               	btfsc	status,2,c
 26246  013BBE  D00B               	goto	i2u1461_40
 26247  013BC0  504A               	movf	i2___ftadd@exp2,w,c
 26248  013BC2  5C4B               	subwf	i2___ftadd@exp1,w,c
 26249  013BC4  B0D8               	btfsc	status,0,c
 26250  013BC6  D00E               	goto	i2l1487
 26251  013BC8  504B               	movf	i2___ftadd@exp1,w,c
 26252  013BCA  0800               	sublw	0
 26253  013BCC  244A               	addwf	i2___ftadd@exp2,w,c
 26254  013BCE  6E46               	movwf	??i2___ftadd& (0+255),c
 26255  013BD0  0E18               	movlw	24
 26256  013BD2  6446               	cpfsgt	??i2___ftadd,c
 26257  013BD4  D007               	goto	i2l1487
 26258  013BD6                     i2u1461_40:
 26259  013BD6  C043  F040         	movff	i2___ftadd@f2,?i2___ftadd
 26260  013BDA  C044  F041         	movff	i2___ftadd@f2+1,?i2___ftadd+1
 26261  013BDE  C045  F042         	movff	i2___ftadd@f2+2,?i2___ftadd+2
 26262  013BE2  0012               	return	
 26263  013BE4                     i2l1487:
 26264  013BE4  504A               	movf	i2___ftadd@exp2,w,c
 26265  013BE6  B4D8               	btfsc	status,2,c
 26266  013BE8  D00B               	goto	i2u1464_40
 26267  013BEA  504B               	movf	i2___ftadd@exp1,w,c
 26268  013BEC  5C4A               	subwf	i2___ftadd@exp2,w,c
 26269  013BEE  B0D8               	btfsc	status,0,c
 26270  013BF0  D00E               	goto	i2l1491
 26271  013BF2  504A               	movf	i2___ftadd@exp2,w,c
 26272  013BF4  0800               	sublw	0
 26273  013BF6  244B               	addwf	i2___ftadd@exp1,w,c
 26274  013BF8  6E46               	movwf	??i2___ftadd& (0+255),c
 26275  013BFA  0E18               	movlw	24
 26276  013BFC  6446               	cpfsgt	??i2___ftadd,c
 26277  013BFE  D007               	goto	i2l1491
 26278  013C00                     i2u1464_40:
 26279  013C00  C040  F040         	movff	i2___ftadd@f1,?i2___ftadd
 26280  013C04  C041  F041         	movff	i2___ftadd@f1+1,?i2___ftadd+1
 26281  013C08  C042  F042         	movff	i2___ftadd@f1+2,?i2___ftadd+2
 26282  013C0C  0012               	return	
 26283  013C0E                     i2l1491:
 26284  013C0E  0E06               	movlw	6
 26285  013C10  6E49               	movwf	i2___ftadd@sign,c
 26286  013C12  BE42               	btfsc	i2___ftadd@f1+2,7,c
 26287  013C14  8E49               	bsf	i2___ftadd@sign,7,c
 26288  013C16  BE45               	btfsc	i2___ftadd@f2+2,7,c
 26289  013C18  8C49               	bsf	i2___ftadd@sign,6,c
 26290  013C1A  8E41               	bsf	i2___ftadd@f1+1,7,c
 26291  013C1C  0EFF               	movlw	255
 26292  013C1E  1640               	andwf	i2___ftadd@f1,f,c
 26293  013C20  0EFF               	movlw	255
 26294  013C22  1641               	andwf	i2___ftadd@f1+1,f,c
 26295  013C24  0E00               	movlw	0
 26296  013C26  1642               	andwf	i2___ftadd@f1+2,f,c
 26297  013C28  8E44               	bsf	i2___ftadd@f2+1,7,c
 26298  013C2A  0EFF               	movlw	255
 26299  013C2C  1643               	andwf	i2___ftadd@f2,f,c
 26300  013C2E  0EFF               	movlw	255
 26301  013C30  1644               	andwf	i2___ftadd@f2+1,f,c
 26302  013C32  0E00               	movlw	0
 26303  013C34  1645               	andwf	i2___ftadd@f2+2,f,c
 26304  013C36  504A               	movf	i2___ftadd@exp2,w,c
 26305  013C38  5C4B               	subwf	i2___ftadd@exp1,w,c
 26306  013C3A  B0D8               	btfsc	status,0,c
 26307  013C3C  D01B               	goto	i2l1496
 26308  013C3E                     i2u1467_40:
 26309  013C3E  90D8               	bcf	status,0,c
 26310  013C40  3643               	rlcf	i2___ftadd@f2,f,c
 26311  013C42  3644               	rlcf	i2___ftadd@f2+1,f,c
 26312  013C44  3645               	rlcf	i2___ftadd@f2+2,f,c
 26313  013C46  064A               	decf	i2___ftadd@exp2,f,c
 26314  013C48  504B               	movf	i2___ftadd@exp1,w,c
 26315  013C4A  184A               	xorwf	i2___ftadd@exp2,w,c
 26316  013C4C  B4D8               	btfsc	status,2,c
 26317  013C4E  D00D               	goto	i2l1501
 26318  013C50  0649               	decf	i2___ftadd@sign,f,c
 26319  013C52  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 26320  013C56  0E07               	movlw	7
 26321  013C58  1646               	andwf	??i2___ftadd,f,c
 26322  013C5A  B4D8               	btfsc	status,2,c
 26323  013C5C  D006               	goto	i2l1501
 26324  013C5E  D7EF               	goto	i2u1467_40
 26325  013C60  90D8               	bcf	status,0,c
 26326  013C62  3242               	rrcf	i2___ftadd@f1+2,f,c
 26327  013C64  3241               	rrcf	i2___ftadd@f1+1,f,c
 26328  013C66  3240               	rrcf	i2___ftadd@f1,f,c
 26329  013C68  2A4B               	incf	i2___ftadd@exp1,f,c
 26330  013C6A                     i2l1501:
 26331  013C6A  504A               	movf	i2___ftadd@exp2,w,c
 26332  013C6C  184B               	xorwf	i2___ftadd@exp1,w,c
 26333  013C6E  B4D8               	btfsc	status,2,c
 26334  013C70  D01F               	goto	i2u1474_40
 26335  013C72  D7F6               	goto	i2l1502
 26336  013C74                     i2l1496:
 26337  013C74  504B               	movf	i2___ftadd@exp1,w,c
 26338  013C76  5C4A               	subwf	i2___ftadd@exp2,w,c
 26339  013C78  B0D8               	btfsc	status,0,c
 26340  013C7A  D01A               	goto	i2u1474_40
 26341  013C7C                     i2u1471_40:
 26342  013C7C  90D8               	bcf	status,0,c
 26343  013C7E  3640               	rlcf	i2___ftadd@f1,f,c
 26344  013C80  3641               	rlcf	i2___ftadd@f1+1,f,c
 26345  013C82  3642               	rlcf	i2___ftadd@f1+2,f,c
 26346  013C84  064B               	decf	i2___ftadd@exp1,f,c
 26347  013C86  504B               	movf	i2___ftadd@exp1,w,c
 26348  013C88  184A               	xorwf	i2___ftadd@exp2,w,c
 26349  013C8A  B4D8               	btfsc	status,2,c
 26350  013C8C  D00D               	goto	i2l1510
 26351  013C8E  0649               	decf	i2___ftadd@sign,f,c
 26352  013C90  C049  F046         	movff	i2___ftadd@sign,??i2___ftadd
 26353  013C94  0E07               	movlw	7
 26354  013C96  1646               	andwf	??i2___ftadd,f,c
 26355  013C98  B4D8               	btfsc	status,2,c
 26356  013C9A  D006               	goto	i2l1510
 26357  013C9C  D7EF               	goto	i2u1471_40
 26358  013C9E  90D8               	bcf	status,0,c
 26359  013CA0  3245               	rrcf	i2___ftadd@f2+2,f,c
 26360  013CA2  3244               	rrcf	i2___ftadd@f2+1,f,c
 26361  013CA4  3243               	rrcf	i2___ftadd@f2,f,c
 26362  013CA6  2A4A               	incf	i2___ftadd@exp2,f,c
 26363  013CA8                     i2l1510:
 26364  013CA8  504A               	movf	i2___ftadd@exp2,w,c
 26365  013CAA  184B               	xorwf	i2___ftadd@exp1,w,c
 26366  013CAC  A4D8               	btfss	status,2,c
 26367  013CAE  D7F7               	goto	i2l1511
 26368  013CB0                     i2u1474_40:
 26369  013CB0  AE49               	btfss	i2___ftadd@sign,7,c
 26370  013CB2  D00C               	goto	i2l1513
 26371  013CB4  0EFF               	movlw	255
 26372  013CB6  1A40               	xorwf	i2___ftadd@f1,f,c
 26373  013CB8  0EFF               	movlw	255
 26374  013CBA  1A41               	xorwf	i2___ftadd@f1+1,f,c
 26375  013CBC  0EFF               	movlw	255
 26376  013CBE  1A42               	xorwf	i2___ftadd@f1+2,f,c
 26377  013CC0  0E01               	movlw	1
 26378  013CC2  2640               	addwf	i2___ftadd@f1,f,c
 26379  013CC4  0E00               	movlw	0
 26380  013CC6  2241               	addwfc	i2___ftadd@f1+1,f,c
 26381  013CC8  0E00               	movlw	0
 26382  013CCA  2242               	addwfc	i2___ftadd@f1+2,f,c
 26383  013CCC                     i2l1513:
 26384  013CCC  AC49               	btfss	i2___ftadd@sign,6,c
 26385  013CCE  D00C               	goto	i2l1514
 26386  013CD0  0EFF               	movlw	255
 26387  013CD2  1A43               	xorwf	i2___ftadd@f2,f,c
 26388  013CD4  0EFF               	movlw	255
 26389  013CD6  1A44               	xorwf	i2___ftadd@f2+1,f,c
 26390  013CD8  0EFF               	movlw	255
 26391  013CDA  1A45               	xorwf	i2___ftadd@f2+2,f,c
 26392  013CDC  0E01               	movlw	1
 26393  013CDE  2643               	addwf	i2___ftadd@f2,f,c
 26394  013CE0  0E00               	movlw	0
 26395  013CE2  2244               	addwfc	i2___ftadd@f2+1,f,c
 26396  013CE4  0E00               	movlw	0
 26397  013CE6  2245               	addwfc	i2___ftadd@f2+2,f,c
 26398  013CE8                     i2l1514:
 26399  013CE8  0E00               	movlw	0
 26400  013CEA  6E49               	movwf	i2___ftadd@sign,c
 26401  013CEC  5040               	movf	i2___ftadd@f1,w,c
 26402  013CEE  2643               	addwf	i2___ftadd@f2,f,c
 26403  013CF0  5041               	movf	i2___ftadd@f1+1,w,c
 26404  013CF2  2244               	addwfc	i2___ftadd@f2+1,f,c
 26405  013CF4  5042               	movf	i2___ftadd@f1+2,w,c
 26406  013CF6  2245               	addwfc	i2___ftadd@f2+2,f,c
 26407  013CF8  AE45               	btfss	i2___ftadd@f2+2,7,c
 26408  013CFA  D00E               	goto	i2l1515
 26409  013CFC  0EFF               	movlw	255
 26410  013CFE  1A43               	xorwf	i2___ftadd@f2,f,c
 26411  013D00  0EFF               	movlw	255
 26412  013D02  1A44               	xorwf	i2___ftadd@f2+1,f,c
 26413  013D04  0EFF               	movlw	255
 26414  013D06  1A45               	xorwf	i2___ftadd@f2+2,f,c
 26415  013D08  0E01               	movlw	1
 26416  013D0A  2643               	addwf	i2___ftadd@f2,f,c
 26417  013D0C  0E00               	movlw	0
 26418  013D0E  2244               	addwfc	i2___ftadd@f2+1,f,c
 26419  013D10  0E00               	movlw	0
 26420  013D12  2245               	addwfc	i2___ftadd@f2+2,f,c
 26421  013D14  0E01               	movlw	1
 26422  013D16  6E49               	movwf	i2___ftadd@sign,c
 26423  013D18                     i2l1515:
 26424  013D18  C043  F001         	movff	i2___ftadd@f2,i2___ftpack@arg
 26425  013D1C  C044  F002         	movff	i2___ftadd@f2+1,i2___ftpack@arg+1
 26426  013D20  C045  F003         	movff	i2___ftadd@f2+2,i2___ftpack@arg+2
 26427  013D24  C04B  F004         	movff	i2___ftadd@exp1,i2___ftpack@exp
 26428  013D28  C049  F005         	movff	i2___ftadd@sign,i2___ftpack@sign
 26429  013D2C  EC2A  F0A7         	call	i2___ftpack	;wreg free
 26430  013D30  C001  F040         	movff	?i2___ftpack,?i2___ftadd
 26431  013D34  C002  F041         	movff	?i2___ftpack+1,?i2___ftadd+1
 26432  013D38  C003  F042         	movff	?i2___ftpack+2,?i2___ftadd+2
 26433  013D3C  0012               	return	
 26434  013D3E                     __end_ofi2___ftadd:
 26435                           	opt stack 0
 26436                           tosu	equ	0xFFF
 26437                           tosh	equ	0xFFE
 26438                           tosl	equ	0xFFD
 26439                           pclatu	equ	0xFFB
 26440                           pclath	equ	0xFFA
 26441                           tblptru	equ	0xFF8
 26442                           tblptrh	equ	0xFF7
 26443                           tblptrl	equ	0xFF6
 26444                           tablat	equ	0xFF5
 26445                           prodh	equ	0xFF4
 26446                           prodl	equ	0xFF3
 26447                           intcon	equ	0xFF2
 26448                           postinc0	equ	0xFEE
 26449                           fsr0h	equ	0xFEA
 26450                           fsr0l	equ	0xFE9
 26451                           wreg	equ	0xFE8
 26452                           indf1	equ	0xFE7
 26453                           postdec1	equ	0xFE5
 26454                           fsr1h	equ	0xFE2
 26455                           fsr1l	equ	0xFE1
 26456                           bsr	equ	0xFE0
 26457                           indf2	equ	0xFDF
 26458                           postinc2	equ	0xFDE
 26459                           postdec2	equ	0xFDD
 26460                           fsr2h	equ	0xFDA
 26461                           fsr2l	equ	0xFD9
 26462                           status	equ	0xFD8
 26463                           
 26464 ;; *************** function ___lwtoft *****************
 26465 ;; Defined at:
 26466 ;;		line 28 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwtoft.c"
 26467 ;; Parameters:    Size  Location     Type
 26468 ;;  c               2    8[COMRAM] unsigned int 
 26469 ;; Auto vars:     Size  Location     Type
 26470 ;;		None
 26471 ;; Return value:  Size  Location     Type
 26472 ;;                  3    8[COMRAM] float 
 26473 ;; Registers used:
 26474 ;;		wreg, status,2, status,0, cstack
 26475 ;; Tracked objects:
 26476 ;;		On entry : 0/0
 26477 ;;		On exit  : 0/0
 26478 ;;		Unchanged: 0/0
 26479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26480 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26483 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26484 ;;Total ram usage:        3 bytes
 26485 ;; Hardware stack levels used:    1
 26486 ;; Hardware stack levels required when called:    1
 26487 ;; This function calls:
 26488 ;;		i2___ftpack
 26489 ;; This function is called by:
 26490 ;;		_ADC_postProcessingCallback
 26491 ;; This function uses a non-reentrant model
 26492 ;;
 26493                           
 26494                           	psect	text109
 26495  0160B6                     __ptext109:
 26496                           	opt stack 0
 26497  0160B6                     ___lwtoft:
 26498                           	opt stack 14
 26499                           
 26500                           ;incstack = 0
 26501  0160B6  C009  F001         	movff	___lwtoft@c,i2___ftpack@arg
 26502  0160BA  C00A  F002         	movff	___lwtoft@c+1,i2___ftpack@arg+1
 26503  0160BE  6A03               	clrf	i2___ftpack@arg+2,c
 26504  0160C0  0E8E               	movlw	142
 26505  0160C2  6E04               	movwf	i2___ftpack@exp,c
 26506  0160C4  0E00               	movlw	0
 26507  0160C6  6E05               	movwf	i2___ftpack@sign,c
 26508  0160C8  EC2A  F0A7         	call	i2___ftpack	;wreg free
 26509  0160CC  C001  F009         	movff	?i2___ftpack,?___lwtoft
 26510  0160D0  C002  F00A         	movff	?i2___ftpack+1,?___lwtoft+1
 26511  0160D4  C003  F00B         	movff	?i2___ftpack+2,?___lwtoft+2
 26512  0160D8  0012               	return	
 26513  0160DA                     __end_of___lwtoft:
 26514                           	opt stack 0
 26515                           tosu	equ	0xFFF
 26516                           tosh	equ	0xFFE
 26517                           tosl	equ	0xFFD
 26518                           pclatu	equ	0xFFB
 26519                           pclath	equ	0xFFA
 26520                           tblptru	equ	0xFF8
 26521                           tblptrh	equ	0xFF7
 26522                           tblptrl	equ	0xFF6
 26523                           tablat	equ	0xFF5
 26524                           prodh	equ	0xFF4
 26525                           prodl	equ	0xFF3
 26526                           intcon	equ	0xFF2
 26527                           postinc0	equ	0xFEE
 26528                           fsr0h	equ	0xFEA
 26529                           fsr0l	equ	0xFE9
 26530                           wreg	equ	0xFE8
 26531                           indf1	equ	0xFE7
 26532                           postdec1	equ	0xFE5
 26533                           fsr1h	equ	0xFE2
 26534                           fsr1l	equ	0xFE1
 26535                           bsr	equ	0xFE0
 26536                           indf2	equ	0xFDF
 26537                           postinc2	equ	0xFDE
 26538                           postdec2	equ	0xFDD
 26539                           fsr2h	equ	0xFDA
 26540                           fsr2l	equ	0xFD9
 26541                           status	equ	0xFD8
 26542                           
 26543 ;; *************** function i2___ftpack *****************
 26544 ;; Defined at:
 26545 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\float.c"
 26546 ;; Parameters:    Size  Location     Type
 26547 ;;  arg             3    0[COMRAM] unsigned um
 26548 ;;  exp             1    3[COMRAM] unsigned char 
 26549 ;;  sign            1    4[COMRAM] unsigned char 
 26550 ;; Auto vars:     Size  Location     Type
 26551 ;;		None
 26552 ;; Return value:  Size  Location     Type
 26553 ;;                  3    0[COMRAM] float 
 26554 ;; Registers used:
 26555 ;;		wreg, status,2, status,0
 26556 ;; Tracked objects:
 26557 ;;		On entry : 0/0
 26558 ;;		On exit  : 0/0
 26559 ;;		Unchanged: 0/0
 26560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26561 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26563 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26564 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26565 ;;Total ram usage:        8 bytes
 26566 ;; Hardware stack levels used:    1
 26567 ;; This function calls:
 26568 ;;		Nothing
 26569 ;; This function is called by:
 26570 ;;		___altoft
 26571 ;;		___lwtoft
 26572 ;;		i2___ftadd
 26573 ;;		i2___ftdiv
 26574 ;;		i2___ftmul
 26575 ;;		i2___lltoft
 26576 ;; This function uses a non-reentrant model
 26577 ;;
 26578                           
 26579                           	psect	text110
 26580  014E54                     __ptext110:
 26581                           	opt stack 0
 26582  014E54                     i2___ftpack:
 26583                           	opt stack 13
 26584                           
 26585                           ;incstack = 0
 26586  014E54  5004               	movf	i2___ftpack@exp,w,c
 26587  014E56  B4D8               	btfsc	status,2,c
 26588  014E58  D005               	goto	i2u1450_40
 26589  014E5A  5001               	movf	i2___ftpack@arg,w,c
 26590  014E5C  1002               	iorwf	i2___ftpack@arg+1,w,c
 26591  014E5E  1003               	iorwf	i2___ftpack@arg+2,w,c
 26592  014E60  A4D8               	btfss	status,2,c
 26593  014E62  D00C               	goto	i2l1456
 26594  014E64                     i2u1450_40:
 26595  014E64  0E00               	movlw	0
 26596  014E66  6E01               	movwf	?i2___ftpack,c
 26597  014E68  0E00               	movlw	0
 26598  014E6A  6E02               	movwf	?i2___ftpack+1,c
 26599  014E6C  0E00               	movlw	0
 26600  014E6E  6E03               	movwf	?i2___ftpack+2,c
 26601  014E70  0012               	return	
 26602  014E72  2A04               	incf	i2___ftpack@exp,f,c
 26603  014E74  90D8               	bcf	status,0,c
 26604  014E76  3203               	rrcf	i2___ftpack@arg+2,f,c
 26605  014E78  3202               	rrcf	i2___ftpack@arg+1,f,c
 26606  014E7A  3201               	rrcf	i2___ftpack@arg,f,c
 26607  014E7C                     i2l1456:
 26608  014E7C  0E00               	movlw	0
 26609  014E7E  1401               	andwf	i2___ftpack@arg,w,c
 26610  014E80  6E06               	movwf	??i2___ftpack& (0+255),c
 26611  014E82  0E00               	movlw	0
 26612  014E84  1402               	andwf	i2___ftpack@arg+1,w,c
 26613  014E86  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 26614  014E88  0EFE               	movlw	254
 26615  014E8A  1403               	andwf	i2___ftpack@arg+2,w,c
 26616  014E8C  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 26617  014E8E  5006               	movf	??i2___ftpack,w,c
 26618  014E90  1007               	iorwf	??i2___ftpack+1,w,c
 26619  014E92  1008               	iorwf	??i2___ftpack+2,w,c
 26620  014E94  B4D8               	btfsc	status,2,c
 26621  014E96  D00C               	goto	i2l1459
 26622  014E98  D7EC               	goto	i2l1457
 26623  014E9A  2A04               	incf	i2___ftpack@exp,f,c
 26624  014E9C  0E01               	movlw	1
 26625  014E9E  2601               	addwf	i2___ftpack@arg,f,c
 26626  014EA0  0E00               	movlw	0
 26627  014EA2  2202               	addwfc	i2___ftpack@arg+1,f,c
 26628  014EA4  0E00               	movlw	0
 26629  014EA6  2203               	addwfc	i2___ftpack@arg+2,f,c
 26630  014EA8  90D8               	bcf	status,0,c
 26631  014EAA  3203               	rrcf	i2___ftpack@arg+2,f,c
 26632  014EAC  3202               	rrcf	i2___ftpack@arg+1,f,c
 26633  014EAE  3201               	rrcf	i2___ftpack@arg,f,c
 26634  014EB0                     i2l1459:
 26635  014EB0  0E00               	movlw	0
 26636  014EB2  1401               	andwf	i2___ftpack@arg,w,c
 26637  014EB4  6E06               	movwf	??i2___ftpack& (0+255),c
 26638  014EB6  0E00               	movlw	0
 26639  014EB8  1402               	andwf	i2___ftpack@arg+1,w,c
 26640  014EBA  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
 26641  014EBC  0EFF               	movlw	255
 26642  014EBE  1403               	andwf	i2___ftpack@arg+2,w,c
 26643  014EC0  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
 26644  014EC2  5006               	movf	??i2___ftpack,w,c
 26645  014EC4  1007               	iorwf	??i2___ftpack+1,w,c
 26646  014EC6  1008               	iorwf	??i2___ftpack+2,w,c
 26647  014EC8  B4D8               	btfsc	status,2,c
 26648  014ECA  D006               	goto	i2l1462
 26649  014ECC  D7E6               	goto	i2l1460
 26650  014ECE  0604               	decf	i2___ftpack@exp,f,c
 26651  014ED0  90D8               	bcf	status,0,c
 26652  014ED2  3601               	rlcf	i2___ftpack@arg,f,c
 26653  014ED4  3602               	rlcf	i2___ftpack@arg+1,f,c
 26654  014ED6  3603               	rlcf	i2___ftpack@arg+2,f,c
 26655  014ED8                     i2l1462:
 26656  014ED8  BE02               	btfsc	i2___ftpack@arg+1,7,c
 26657  014EDA  D003               	goto	i2u1454_40
 26658  014EDC  0E02               	movlw	2
 26659  014EDE  6004               	cpfslt	i2___ftpack@exp,c
 26660  014EE0  D7F6               	goto	i2l1463
 26661  014EE2                     i2u1454_40:
 26662  014EE2  A004               	btfss	i2___ftpack@exp,0,c
 26663  014EE4  9E02               	bcf	i2___ftpack@arg+1,7,c
 26664  014EE6  90D8               	bcf	status,0,c
 26665  014EE8  3204               	rrcf	i2___ftpack@exp,f,c
 26666  014EEA  5004               	movf	i2___ftpack@exp,w,c
 26667  014EEC  1203               	iorwf	i2___ftpack@arg+2,f,c
 26668  014EEE  5005               	movf	i2___ftpack@sign,w,c
 26669  014EF0  A4D8               	btfss	status,2,c
 26670  014EF2  8E03               	bsf	i2___ftpack@arg+2,7,c
 26671  014EF4  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
 26672  014EF8  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
 26673  014EFC  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
 26674  014F00  0012               	return	
 26675  014F02                     __end_ofi2___ftpack:
 26676                           	opt stack 0
 26677                           tosu	equ	0xFFF
 26678                           tosh	equ	0xFFE
 26679                           tosl	equ	0xFFD
 26680                           pclatu	equ	0xFFB
 26681                           pclath	equ	0xFFA
 26682                           tblptru	equ	0xFF8
 26683                           tblptrh	equ	0xFF7
 26684                           tblptrl	equ	0xFF6
 26685                           tablat	equ	0xFF5
 26686                           prodh	equ	0xFF4
 26687                           prodl	equ	0xFF3
 26688                           intcon	equ	0xFF2
 26689                           postinc0	equ	0xFEE
 26690                           fsr0h	equ	0xFEA
 26691                           fsr0l	equ	0xFE9
 26692                           wreg	equ	0xFE8
 26693                           indf1	equ	0xFE7
 26694                           postdec1	equ	0xFE5
 26695                           fsr1h	equ	0xFE2
 26696                           fsr1l	equ	0xFE1
 26697                           bsr	equ	0xFE0
 26698                           indf2	equ	0xFDF
 26699                           postinc2	equ	0xFDE
 26700                           postdec2	equ	0xFDD
 26701                           fsr2h	equ	0xFDA
 26702                           fsr2l	equ	0xFD9
 26703                           status	equ	0xFD8
 26704                           
 26705 ;; *************** function _ADCC_GetConversionResult *****************
 26706 ;; Defined at:
 26707 ;;		line 130 in file "mcc_generated_files/adcc.c"
 26708 ;; Parameters:    Size  Location     Type
 26709 ;;		None
 26710 ;; Auto vars:     Size  Location     Type
 26711 ;;		None
 26712 ;; Return value:  Size  Location     Type
 26713 ;;                  2    0[COMRAM] unsigned int 
 26714 ;; Registers used:
 26715 ;;		wreg, status,2, status,0
 26716 ;; Tracked objects:
 26717 ;;		On entry : 0/0
 26718 ;;		On exit  : 0/0
 26719 ;;		Unchanged: 0/0
 26720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
 26721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26724 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26725 ;;Total ram usage:        4 bytes
 26726 ;; Hardware stack levels used:    1
 26727 ;; This function calls:
 26728 ;;		Nothing
 26729 ;; This function is called by:
 26730 ;;		_ADC_postProcessingCallback
 26731 ;; This function uses a non-reentrant model
 26732 ;;
 26733                           
 26734                           	psect	text111
 26735  01616E                     __ptext111:
 26736                           	opt stack 0
 26737  01616E                     _ADCC_GetConversionResult:
 26738                           	opt stack 15
 26739                           
 26740                           ;adcc.c: 133: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 26741                           
 26742                           ;incstack = 0
 26743  01616E  5064               	movf	3940,w,c	;volatile
 26744  016170  6E04               	movwf	(??_ADCC_GetConversionResult+1)& (0+255),c
 26745  016172  6A03               	clrf	??_ADCC_GetConversionResult& (0+255),c
 26746  016174  5063               	movf	3939,w,c	;volatile
 26747  016176  2403               	addwf	??_ADCC_GetConversionResult,w,c
 26748  016178  6E01               	movwf	?_ADCC_GetConversionResult,c
 26749  01617A  0E00               	movlw	0
 26750  01617C  2004               	addwfc	??_ADCC_GetConversionResult+1,w,c
 26751  01617E  6E02               	movwf	?_ADCC_GetConversionResult+1,c
 26752  016180  0012               	return	
 26753  016182                     __end_of_ADCC_GetConversionResult:
 26754                           	opt stack 0
 26755                           tosu	equ	0xFFF
 26756                           tosh	equ	0xFFE
 26757                           tosl	equ	0xFFD
 26758                           pclatu	equ	0xFFB
 26759                           pclath	equ	0xFFA
 26760                           tblptru	equ	0xFF8
 26761                           tblptrh	equ	0xFF7
 26762                           tblptrl	equ	0xFF6
 26763                           tablat	equ	0xFF5
 26764                           prodh	equ	0xFF4
 26765                           prodl	equ	0xFF3
 26766                           intcon	equ	0xFF2
 26767                           postinc0	equ	0xFEE
 26768                           fsr0h	equ	0xFEA
 26769                           fsr0l	equ	0xFE9
 26770                           wreg	equ	0xFE8
 26771                           indf1	equ	0xFE7
 26772                           postdec1	equ	0xFE5
 26773                           fsr1h	equ	0xFE2
 26774                           fsr1l	equ	0xFE1
 26775                           bsr	equ	0xFE0
 26776                           indf2	equ	0xFDF
 26777                           postinc2	equ	0xFDE
 26778                           postdec2	equ	0xFDD
 26779                           fsr2h	equ	0xFDA
 26780                           fsr2l	equ	0xFD9
 26781                           status	equ	0xFD8
 26782                           tosu	equ	0xFFF
 26783                           tosh	equ	0xFFE
 26784                           tosl	equ	0xFFD
 26785                           pclatu	equ	0xFFB
 26786                           pclath	equ	0xFFA
 26787                           tblptru	equ	0xFF8
 26788                           tblptrh	equ	0xFF7
 26789                           tblptrl	equ	0xFF6
 26790                           tablat	equ	0xFF5
 26791                           prodh	equ	0xFF4
 26792                           prodl	equ	0xFF3
 26793                           intcon	equ	0xFF2
 26794                           postinc0	equ	0xFEE
 26795                           fsr0h	equ	0xFEA
 26796                           fsr0l	equ	0xFE9
 26797                           wreg	equ	0xFE8
 26798                           indf1	equ	0xFE7
 26799                           postdec1	equ	0xFE5
 26800                           fsr1h	equ	0xFE2
 26801                           fsr1l	equ	0xFE1
 26802                           bsr	equ	0xFE0
 26803                           indf2	equ	0xFDF
 26804                           postinc2	equ	0xFDE
 26805                           postdec2	equ	0xFDD
 26806                           fsr2h	equ	0xFDA
 26807                           fsr2l	equ	0xFD9
 26808                           status	equ	0xFD8
 26809                           
 26810                           	psect	text112
 26811  000000                     __ptext112:
 26812                           	opt stack 0
 26813                           tosu	equ	0xFFF
 26814                           tosh	equ	0xFFE
 26815                           tosl	equ	0xFFD
 26816                           pclatu	equ	0xFFB
 26817                           pclath	equ	0xFFA
 26818                           tblptru	equ	0xFF8
 26819                           tblptrh	equ	0xFF7
 26820                           tblptrl	equ	0xFF6
 26821                           tablat	equ	0xFF5
 26822                           prodh	equ	0xFF4
 26823                           prodl	equ	0xFF3
 26824                           intcon	equ	0xFF2
 26825                           postinc0	equ	0xFEE
 26826                           fsr0h	equ	0xFEA
 26827                           fsr0l	equ	0xFE9
 26828                           wreg	equ	0xFE8
 26829                           indf1	equ	0xFE7
 26830                           postdec1	equ	0xFE5
 26831                           fsr1h	equ	0xFE2
 26832                           fsr1l	equ	0xFE1
 26833                           bsr	equ	0xFE0
 26834                           indf2	equ	0xFDF
 26835                           postinc2	equ	0xFDE
 26836                           postdec2	equ	0xFDD
 26837                           fsr2h	equ	0xFDA
 26838                           fsr2l	equ	0xFD9
 26839                           status	equ	0xFD8
 26840                           
 26841                           	psect	rparam
 26842  0000                     tosu	equ	0xFFF
 26843                           tosh	equ	0xFFE
 26844                           tosl	equ	0xFFD
 26845                           pclatu	equ	0xFFB
 26846                           pclath	equ	0xFFA
 26847                           tblptru	equ	0xFF8
 26848                           tblptrh	equ	0xFF7
 26849                           tblptrl	equ	0xFF6
 26850                           tablat	equ	0xFF5
 26851                           prodh	equ	0xFF4
 26852                           prodl	equ	0xFF3
 26853                           intcon	equ	0xFF2
 26854                           postinc0	equ	0xFEE
 26855                           fsr0h	equ	0xFEA
 26856                           fsr0l	equ	0xFE9
 26857                           wreg	equ	0xFE8
 26858                           indf1	equ	0xFE7
 26859                           postdec1	equ	0xFE5
 26860                           fsr1h	equ	0xFE2
 26861                           fsr1l	equ	0xFE1
 26862                           bsr	equ	0xFE0
 26863                           indf2	equ	0xFDF
 26864                           postinc2	equ	0xFDE
 26865                           postdec2	equ	0xFDD
 26866                           fsr2h	equ	0xFDA
 26867                           fsr2l	equ	0xFD9
 26868                           status	equ	0xFD8
 26869                           
 26870                           	psect	temp
 26871  00005E                     btemp:
 26872                           	opt stack 0
 26873  00005E                     	ds	1
 26874  0000                     int$flags	set	btemp
 26875  0000                     wtemp6	set	btemp+1
 26876                           tosu	equ	0xFFF
 26877                           tosh	equ	0xFFE
 26878                           tosl	equ	0xFFD
 26879                           pclatu	equ	0xFFB
 26880                           pclath	equ	0xFFA
 26881                           tblptru	equ	0xFF8
 26882                           tblptrh	equ	0xFF7
 26883                           tblptrl	equ	0xFF6
 26884                           tablat	equ	0xFF5
 26885                           prodh	equ	0xFF4
 26886                           prodl	equ	0xFF3
 26887                           intcon	equ	0xFF2
 26888                           postinc0	equ	0xFEE
 26889                           fsr0h	equ	0xFEA
 26890                           fsr0l	equ	0xFE9
 26891                           wreg	equ	0xFE8
 26892                           indf1	equ	0xFE7
 26893                           postdec1	equ	0xFE5
 26894                           fsr1h	equ	0xFE2
 26895                           fsr1l	equ	0xFE1
 26896                           bsr	equ	0xFE0
 26897                           indf2	equ	0xFDF
 26898                           postinc2	equ	0xFDE
 26899                           postdec2	equ	0xFDD
 26900                           fsr2h	equ	0xFDA
 26901                           fsr2l	equ	0xFD9
 26902                           status	equ	0xFD8


Data Sizes:
    Strings     2883
    Constant    210
    Data        6
    BSS         325
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      93
    BANK0           160    101     138
    BANK1           256    185     224
    BANK2           256      0     256
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          234      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_73(CODE[24]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strchr@ptr	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> floor@expon(COMRAM[2]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strstr@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_73(CODE[24]), 

    strstr@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    strncpy@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_11(CODE[3]), 

    strncpy@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_73(CODE[24]), line(BANK2[64]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 64
		 -> STR_73(CODE[24]), line(BANK2[64]), 

    strcmp@s2	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_81(CODE[5]), STR_79(CODE[9]), STR_71(CODE[13]), STR_69(CODE[12]), 
		 -> STR_67(CODE[16]), STR_65(CODE[15]), STR_63(CODE[21]), STR_61(CODE[21]), 
		 -> STR_59(CODE[26]), STR_57(CODE[13]), STR_55(CODE[18]), STR_53(CODE[15]), 
		 -> STR_51(CODE[16]), STR_48(CODE[4]), STR_47(CODE[6]), STR_44(CODE[6]), 
		 -> STR_41(CODE[6]), 

    strcmp@s1	PTR const unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    strcat@from	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_39(CODE[2]), STR_38(CODE[3]), STR_37(CODE[3]), STR_36(CODE[3]), 
		 -> STR_35(CODE[3]), STR_34(CODE[3]), STR_33(CODE[3]), STR_32(CODE[3]), 
		 -> STR_31(CODE[3]), STR_30(CODE[3]), STR_29(CODE[2]), STR_28(CODE[3]), 
		 -> STR_27(CODE[3]), STR_26(CODE[3]), STR_25(CODE[3]), STR_24(CODE[3]), 
		 -> STR_23(CODE[3]), STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), 
		 -> STR_19(CODE[2]), STR_18(CODE[2]), STR_17(CODE[2]), STR_16(CODE[2]), 
		 -> STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[2]), STR_12(CODE[2]), 

    strcat@to	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    strcat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    eval_poly@d	PTR const  size(2) Largest target is 18
		 -> sin@coeff_a(CODE[15]), sin@coeff_b(CODE[12]), atan@coeff_a(CODE[18]), atan@coeff_b(CODE[15]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> ringBufferLUT@arg_buff(BANK1[3]), 

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 1152
		 -> STR_87(CODE[30]), STR_86(CODE[23]), STR_85(CODE[40]), STR_84(CODE[30]), 
		 -> STR_83(CODE[33]), STR_82(CODE[1152]), STR_80(CODE[58]), STR_78(CODE[63]), 
		 -> STR_77(CODE[63]), STR_76(CODE[37]), STR_75(CODE[102]), STR_74(CODE[86]), 
		 -> STR_72(CODE[25]), STR_70(CODE[24]), STR_68(CODE[41]), STR_66(CODE[40]), 
		 -> STR_64(CODE[34]), STR_62(CODE[34]), STR_60(CODE[32]), STR_58(CODE[56]), 
		 -> STR_56(CODE[34]), STR_54(CODE[34]), STR_52(CODE[35]), STR_50(CODE[47]), 
		 -> STR_49(CODE[17]), STR_46(CODE[4]), STR_45(CODE[5]), STR_43(CODE[4]), 
		 -> STR_42(CODE[5]), STR_40(CODE[3]), terminal_textAttributes@output_buff(BANK1[15]), STR_10(CODE[4]), 
		 -> STR_9(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), STR_6(CODE[5]), 
		 -> STR_5(CODE[3]), STR_4(CODE[372]), STR_3(CODE[4]), STR_2(CODE[5]), 
		 -> STR_1(CODE[4]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(BANK0[2]), ?_printf(BANK1[2]), 

    TMR5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 64
		 -> NULL(NULL[0]), line(BANK2[64]), 

    ringBufferLUT@line	PTR unsigned char  size(2) Largest target is 64
		 -> line(BANK2[64]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 15
		 -> terminal_textAttributes@output_buff(BANK1[15]), 

    TMR7_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), 

    TMR7_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> acquisitionTimerCallback(), TMR7_DefaultInterruptHandler(), Absolute function(), 

    ADCC_SetADIInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADC_postProcessingCallback(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    EUSART2_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), 

    EUSART2_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), 

    TMR6_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> heartbeatTimerCallback(), Absolute function(), TMR6_DefaultInterruptHandler(), 

    EUSART2_TxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Transmit_ISR(), Absolute function(), 

    EUSART2_RxDefaultInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> EUSART2_Receive_ISR(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _TMR5_ISR->_TMR5_WriteTimer
    i2_scale->i2___ftmul
    i2_putch->i2_EUSART2_Write
    i2_fround->i2___ftmul
    i2___awdiv->i2___awmod
    i2___lltoft->i2___ftpack
    i2___llmod->i2___lldiv
    _atan->_eval_poly
    _fabs->i2___ftneg
    _sin->_floor
    i2___ftsub->_floor
    i2___ftneg->i2___ftdiv
    i2___ftdiv->i2___wmul
    _floor->___altoft
    i2___fttol->i2_scale
    i2___ftge->_fabs
    ___altoft->i2___fttol
    _eval_poly->i2___ftadd
    i2___wmul->i2___awdiv
    i2___ftmul->i2___ftneg
    i2___ftadd->i2_fround
    ___lwtoft->i2___ftpack

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    _EUSART2_Receive_ISR->i2_printf
    i2_printf->i2___ftsub
    _ADCC_ISR->_ADC_postProcessingCallback
    _ADC_postProcessingCallback->_peakToRMS
    _peakToRMS->_acos
    _acos->_asin
    _asin->_sqrt
    _sqrt->i2___ftsub
    _currentMeasuredToPeak->_sin
    _sin->i2___ftsub

Critical Paths under _main in BANK1

    _main->_terminal_ringBufferPull
    _terminal_setCursorHome->_printf
    _terminal_ringBufferPull->_ringBufferLUT
    _ringBufferLUT->_terminal_textAttributes
    _terminal_textAttributesReset->_terminal_textAttributes
    _terminal_textAttributes->_printf
    _terminal_printNewline->_printf
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _terminal_clearTerminal->_printf
    _printf->___fttol
    _scale->___ftmul
    _putch->_EUSART2_Write
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftdiv
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->___ftmul
    ___ftsub->___ftadd
    ___ftadd->___wmul
    ___ftneg->___awtoft
    _SYSTEM_Initialize->_TMR5_Initialize
    _SYSTEM_Initialize->_TMR7_Initialize
    _TMR7_Initialize->_TMR7_SetInterruptHandler
    _TMR6_Initialize->_TMR6_SetInterruptHandler
    _TMR5_Initialize->_TMR5_SetInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetRxInterruptHandler
    _EUSART2_Initialize->_EUSART2_SetTxInterruptHandler
    _ADCC_Initialize->_ADCC_SetADIInterruptHandler

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK1

    _TMR7_ISR->_TMR7_WriteTimer
    _acquisitionTimerCallback->_ADCC_StartConversion
    _TMR6_ISR->_heartbeatTimerCallback

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerLow in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  643888
                                            183 BANK1      2     2      0
        _ADCC_SetADIInterruptHandler
                  _SYSTEM_Initialize
           _TMR6_SetInterruptHandler
           _TMR7_SetInterruptHandler
             _terminal_clearTerminal
            _terminal_ringBufferPull
             _terminal_setCursorHome
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_setCursorHome                               0     0      0   81560
                             _printf
 ---------------------------------------------------------------------------------
 (1) _terminal_ringBufferPull                              9     9      0  387070
                                            174 BANK1      9     9      0
                       _EUSART2_Read
                      _ringBufferLUT
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _ringBufferLUT                                       14    12      2  386342
                                            160 BANK1     14    12      2
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                             ___wmul
                               _atoi
                             _printf
                             _strcmp
                             _strstr
              _terminal_printNewline
            _terminal_textAttributes
       _terminal_textAttributesReset
 ---------------------------------------------------------------------------------
 (1) _terminal_textAttributesReset                         0     0      0   92069
            _terminal_textAttributes
 ---------------------------------------------------------------------------------
 (2) _terminal_textAttributes                             18    16      2   92069
                                            142 BANK1     18    16      2
                             _printf
                             _strcat
                            _strncpy
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     472
                                             23 BANK1      8     2      6
 ---------------------------------------------------------------------------------
 (3) _strcat                                               6     2      4    5183
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _terminal_printNewline                                0     0      0   81560
                             _printf
 ---------------------------------------------------------------------------------
 (3) _strstr                                               4     0      4    1687
                                             38 BANK1      4     0      4
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     462
                                             29 BANK1      9     3      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     490
                                             23 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               5     1      4     304
                                             23 BANK1      5     1      4
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               6     2      4    3193
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    4401
                                             43 BANK1      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    5143
                                             55 BANK1     15     9      6
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3086
                                             31 BANK1      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Read                                         1     1      0      37
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _terminal_clearTerminal                               0     0      0   81560
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              45    37      8   81560
                                            100 BANK1     42    34      8
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                                7     4      3   18036
                                             85 BANK1      7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0      93
                                             24 BANK1      1     1      0
                      _EUSART2_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART2_Write                                        1     1      0      62
                                             23 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             23 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              10     7      3   17757
                                             85 BANK1     10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    3878
                                             37 BANK1      6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftmul                                             15     9      6    9231
                                             70 BANK1     15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftadd (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    2053
                                             23 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    2245
                                             29 BANK1      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         15     9      6     634
                                             23 BANK1     15     9      6
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          12     6      6     904
                                             23 BANK1     12     6      6
 ---------------------------------------------------------------------------------
 (4) ___lltoft                                             9     5      4    3055
                                             31 BANK1      9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     952
                                             36 BANK1      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     961
                                             23 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     696
                                             85 BANK1     15    11      4
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    7054
                                             55 BANK1      6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    6308
                                             43 BANK1     12     6      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___ftpack (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftpack                                             8     3      5    2863
                                             23 BANK1      8     3      5
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3    1070
                                             35 BANK1      3     0      3
                           ___awtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftge                                               9     3      6    1508
                                             23 BANK1      9     3      6
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     996
                    _ADCC_Initialize
                 _EUSART2_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                    _TMR7_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR7_Initialize                                      2     2      0     211
                                             26 BANK1      2     2      0
           _TMR7_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR7_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0     211
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR6_SetInterruptHandler                             3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      2     2      0     121
                                             26 BANK1      2     2      0
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART2_Initialize                                   0     0      0     242
      _EUSART2_SetRxInterruptHandler
      _EUSART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetTxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (3) _EUSART2_SetRxInterruptHandler                        3     0      3     121
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0     211
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3     211
                                             23 BANK1      3     0      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManagerLow                       21    21      0     262
                                              2 BANK1     21    21      0
                   Absolute function *
               _EUSART2_Transmit_ISR *
                           _TMR6_ISR
                           _TMR7_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR7_ISR                                            0     0      0     262
                   Absolute function *
       _TMR7_DefaultInterruptHandler *
                    _TMR7_WriteTimer
           _acquisitionTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _acquisitionTimerCallback                            0     0      0      22
              _ADCC_IsConversionDone
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (12) _ADCC_StartConversion                                1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (12) _ADCC_IsConversionDone                               0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR7_WriteTimer                                     2     0      2     240
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR7_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR6_ISR                                            0     0      0       0
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
             _heartbeatTimerCallback *
 ---------------------------------------------------------------------------------
 (11) _heartbeatTimerCallback                              1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR6_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART2_Transmit_ISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManagerHigh                     18    18      0  332087
                                             83 BANK0     18    18      0
                   Absolute function *
                           _ADCC_ISR
                _EUSART2_Receive_ISR *
                           _TMR5_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            0     0      0     240
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (15) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART2_Receive_ISR                                 0     0      0   64356
                           i2_printf
 ---------------------------------------------------------------------------------
 (15) i2_printf                                           39    37      2   64356
                                              6 BANK0     36    34      2
                          i2___awdiv
                          i2___ftadd
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
                          i2___fttol
                          i2___lldiv
                          i2___llmod
                         i2___lltoft
                           i2___wmul
                       i2__div_to_l_
                      i2__tdiv_to_l_
                           i2_fround
                          i2_isdigit
                            i2_putch
                            i2_scale
 ---------------------------------------------------------------------------------
 (16) i2_scale                                             7     4      3   13387
                                             53 COMRAM     7     4      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (16) i2_putch                                             1     1      0      93
                                              1 COMRAM     1     1      0
                    i2_EUSART2_Write
 ---------------------------------------------------------------------------------
 (17) i2_EUSART2_Write                                     1     1      0      62
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (16) i2_isdigit                                           3     3      0      99
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (16) i2_fround                                           10     7      3   12892
                                             53 COMRAM    10     7      3
                          i2___awdiv
                          i2___awmod
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___awmod                                           6     2      4    1063
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (17) i2___awdiv                                           8     4      4    1145
                                              6 COMRAM     8     4      4
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (16) i2__tdiv_to_l_                                      15     9      6     524
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (16) i2__div_to_l_                                       12     6      6     692
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (16) i2___lltoft                                          9     5      4    1976
                                              8 COMRAM     9     5      4
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (16) i2___llmod                                           9     1      8     512
                                             13 COMRAM     9     1      8
                          i2___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___lldiv                                          13     5      8     521
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (14) _ADCC_ISR                                            0     0      0  267491
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
         _ADC_postProcessingCallback *
 ---------------------------------------------------------------------------------
 (15) _ADC_postProcessingCallback                         13    13      0  267491
                                             70 BANK0     13    13      0
           _ADCC_GetConversionResult
                           ___lwtoft
              _currentMeasuredToPeak
                          _peakToRMS
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _peakToRMS                                          18    12      6  183235
                                             52 BANK0     18    12      6
                               _acos
                                _sin
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _acos                                                6     3      3   87919
                                             46 BANK0      6     3      3
                               _asin
                          i2___ftadd
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (18) _asin                                               21    18      3   80582
                                             25 BANK0     21    18      3
                               _atan
                               _fabs
                               _sqrt
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (17) _sqrt                                               19    16      3   16787
                                              6 BANK0     19    16      3
                           i2___ftge
                          i2___ftmul
                          i2___ftneg (ARG)
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (19) _atan                                               16    13      3   40885
                                             87 COMRAM     3     0      3
                                              0 BANK0     13    13      0
                          _eval_poly
                               _fabs
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (19) _fabs                                                3     0      3    1601
                                             38 COMRAM     3     0      3
                          i2___ftneg
 ---------------------------------------------------------------------------------
 (16) _currentMeasuredToPeak                               9     3      6   62849
                                             19 BANK0      9     3      6
                                _sin
                          i2___ftdiv
 ---------------------------------------------------------------------------------
 (17) _sin                                                13    10      3   58157
                                              6 BANK0     13    10      3
                          _eval_poly
                              _floor
                          i2___ftadd
                          i2___ftdiv
                           i2___ftge
                          i2___ftmul
                          i2___ftneg
                          i2___ftsub
 ---------------------------------------------------------------------------------
 (16) i2___ftsub                                           6     0      6    6552
                                              0 BANK0      6     0      6
                              _floor (ARG)
                          i2___ftadd
                         i2___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftneg                                           3     0      3    1064
                                             35 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                         i2___ftpack (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftdiv                                          15     9      6    4194
                                             20 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (18) _floor                                               8     5      3   12065
                                             85 COMRAM     8     5      3
                           ___altoft
                              _frexp
                          i2___ftadd
                           i2___ftge
                          i2___fttol
 ---------------------------------------------------------------------------------
 (16) i2___fttol                                          15    11      4     941
                                             60 COMRAM    15    11      4
                          i2___ftmul (ARG)
                            i2_scale (ARG)
 ---------------------------------------------------------------------------------
 (16) i2___ftge                                            9     3      6    1550
                                             41 COMRAM     9     3      6
                               _fabs (ARG)
 ---------------------------------------------------------------------------------
 (19) _frexp                                               7     2      5     630
                                              0 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (19) ___altoft                                           10     6      4    2236
                                             75 COMRAM    10     6      4
                         i2___ftpack
                          i2___fttol (ARG)
 ---------------------------------------------------------------------------------
 (18) _eval_poly                                          12     5      7   17902
                                             75 COMRAM    12     5      7
                          i2___ftadd
                          i2___ftdiv (ARG)
                          i2___ftmul
                           i2___wmul
 ---------------------------------------------------------------------------------
 (17) i2___wmul                                            6     2      4    2657
                                             14 COMRAM     6     2      4
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftmul                                          15     9      6    7392
                                             38 COMRAM    15     9      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___awdiv (ARG)
                          i2___awmod (ARG)
                          i2___ftdiv (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                         i2___ftpack (ARG)
                           i2___wmul (ARG)
 ---------------------------------------------------------------------------------
 (17) i2___ftadd                                          12     6      6    5905
                                             63 COMRAM    12     6      6
           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                          i2___ftdiv (ARG)
                          i2___ftmul (ARG)
                          i2___ftneg (ARG)
                         i2___ftpack
                           i2___wmul (ARG)
                           i2_fround (ARG)
 ---------------------------------------------------------------------------------
 (16) ___lwtoft                                            3     0      3    2397
                                              8 COMRAM     3     0      3
           _ADCC_GetConversionResult (ARG)
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (18) i2___ftpack                                          8     3      5    1722
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (16) _ADCC_GetConversionResult                            4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (15) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (15) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_SetADIInterruptHandler
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _EUSART2_Initialize
       _EUSART2_SetRxInterruptHandler
       _EUSART2_SetTxInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _TMR7_Initialize
       _TMR7_SetInterruptHandler
   _TMR6_SetInterruptHandler
   _TMR7_SetInterruptHandler
   _terminal_clearTerminal
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_ringBufferPull
     _EUSART2_Read
     _ringBufferLUT
       ___awtoft
         ___ftpack
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       _atoi
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         _isdigit
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcmp
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
       _terminal_printNewline
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _terminal_textAttributes
         _printf
           ___awdiv
             ___awmod (ARG)
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftge
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg
             ___awtoft (ARG)
               ___ftpack
           ___ftsub
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___lltoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___lltoft
             ___ftpack
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _EUSART2_Write
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         _strcat
         _strncpy
       _terminal_textAttributesReset
         _terminal_textAttributes
           _printf
             ___awdiv
               ___awmod (ARG)
             ___ftadd
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftge
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg
               ___awtoft (ARG)
                 ___ftpack
             ___ftsub
               ___ftadd
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___lltoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___lldiv
             ___llmod
               ___lldiv (ARG)
             ___lltoft
               ___ftpack
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             __div_to_l_
             __tdiv_to_l_
             _fround
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             _isdigit
             _putch
               _EUSART2_Write
             _scale
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___ftmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftadd (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___ftpack (ARG)
                   ___wmul (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftadd (ARG)
                     ___awdiv (ARG)
                       ___awmod (ARG)
                     ___awmod (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftneg (ARG)
                       ___awtoft (ARG)
                         ___ftpack
                     ___ftpack (ARG)
                     ___ftpack (ARG)
                     ___wmul (ARG)
                       ___awdiv (ARG)
                         ___awmod (ARG)
                       ___awmod (ARG)
                   ___ftneg (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___wmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           _strcat
           _strncpy
     _strlen
   _terminal_setCursorHome
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
         ___ftneg (ARG)
           ___awtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
         ___awtoft (ARG)
           ___ftpack
       ___ftsub
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftadd (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _isdigit
       _putch
         _EUSART2_Write
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _terminal_textAttributesReset
     _terminal_textAttributes
       _printf
         ___awdiv
           ___awmod (ARG)
         ___ftadd
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftge
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___awtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg
           ___awtoft (ARG)
             ___ftpack
         ___ftsub
           ___ftadd
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___lltoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___lltoft
           ___ftpack
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftadd (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___ftmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _EUSART2_Write
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftadd (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftneg (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
               ___ftneg (ARG)
                 ___awtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___awtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       _strcat
       _strncpy

 _INTERRUPT_InterruptManagerLow (ROOT)
   Absolute function(Fake) *
   _EUSART2_Transmit_ISR *
   _TMR6_ISR *
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *
     _heartbeatTimerCallback *
   _TMR7_ISR *
     Absolute function(Fake) *
     _TMR7_DefaultInterruptHandler *
     _TMR7_WriteTimer *
     _acquisitionTimerCallback *
       _ADCC_IsConversionDone
       _ADCC_StartConversion

 _INTERRUPT_InterruptManagerHigh (ROOT)
   Absolute function(Fake) *
   _ADCC_ISR *
     Absolute function(Fake) *
     _ADCC_DefaultInterruptHandler *
     _ADC_postProcessingCallback *
       _ADCC_GetConversionResult
       ___lwtoft
         _ADCC_GetConversionResult (ARG)
         i2___ftpack (ARG)
       _currentMeasuredToPeak
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       _peakToRMS
         _acos
           _asin
             _atan
               _eval_poly
                 i2___ftadd
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               _fabs
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftdiv
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _fabs
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
             _sqrt
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftsub (ARG)
                 _floor (ARG)
                   ___altoft
                     i2___ftpack
                     i2___fttol (ARG)
                       i2___ftmul (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2_scale (ARG)
                         i2___awdiv
                           i2___awmod (ARG)
                         i2___awmod
                         i2___ftmul
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftneg (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftdiv (ARG)
                               _ADCC_GetConversionResult (ARG)
                               ___lwtoft (ARG)
                                 _ADCC_GetConversionResult (ARG)
                                 i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___ftpack (ARG)
                               i2___wmul (ARG)
                                 i2___awdiv (ARG)
                                   i2___awmod (ARG)
                                 i2___awmod (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___wmul
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                   _frexp
                   i2___ftadd
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                     i2_fround (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                   i2___ftge
                     _fabs (ARG)
                       i2___ftneg
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                   i2___fttol
                     i2___ftmul (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2_scale (ARG)
                       i2___awdiv
                         i2___awmod (ARG)
                       i2___awmod
                       i2___ftmul
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftneg (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftdiv (ARG)
                             _ADCC_GetConversionResult (ARG)
                             ___lwtoft (ARG)
                               _ADCC_GetConversionResult (ARG)
                               i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___ftpack (ARG)
                             i2___wmul (ARG)
                               i2___awdiv (ARG)
                                 i2___awmod (ARG)
                               i2___awmod (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___wmul
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                 i2___ftadd (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                   i2_fround (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                 i2___lltoft (ARG)
                   i2___ftpack
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
         _sin
           _eval_poly
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           _floor
             ___altoft
               i2___ftpack
               i2___fttol (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             _frexp
             i2___ftadd
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___ftge
               _fabs (ARG)
                 i2___ftneg
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
             i2___fttol
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftdiv
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         _sqrt
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftsub (ARG)
             _floor (ARG)
               ___altoft
                 i2___ftpack
                 i2___fttol (ARG)
                   i2___ftmul (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2_scale (ARG)
                     i2___awdiv
                       i2___awmod (ARG)
                     i2___awmod
                     i2___ftmul
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftneg (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftdiv (ARG)
                           _ADCC_GetConversionResult (ARG)
                           ___lwtoft (ARG)
                             _ADCC_GetConversionResult (ARG)
                             i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___ftpack (ARG)
                           i2___wmul (ARG)
                             i2___awdiv (ARG)
                               i2___awmod (ARG)
                             i2___awmod (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___wmul
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
               _frexp
               i2___ftadd
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                 i2_fround (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
               i2___ftge
                 _fabs (ARG)
                   i2___ftneg
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
               i2___fttol
                 i2___ftmul (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2_scale (ARG)
                   i2___awdiv
                     i2___awmod (ARG)
                   i2___awmod
                   i2___ftmul
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftneg (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftdiv (ARG)
                         _ADCC_GetConversionResult (ARG)
                         ___lwtoft (ARG)
                           _ADCC_GetConversionResult (ARG)
                           i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___ftpack (ARG)
                         i2___wmul (ARG)
                           i2___awdiv (ARG)
                             i2___awmod (ARG)
                           i2___awmod (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___wmul
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
             i2___ftadd (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
               i2_fround (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
             i2___lltoft (ARG)
               i2___ftpack
         i2___ftadd
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___ftdiv
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftdiv
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
   _EUSART2_Receive_ISR *
     i2_printf
       i2___awdiv
         i2___awmod (ARG)
       i2___ftadd
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
         i2_fround (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___ftge
         _fabs (ARG)
           i2___ftneg
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
       i2___ftmul
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftneg (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___ftpack (ARG)
         i2___wmul (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2___ftneg
         _ADCC_GetConversionResult (ARG)
         ___lwtoft (ARG)
           _ADCC_GetConversionResult (ARG)
           i2___ftpack (ARG)
         i2___ftdiv (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___ftpack (ARG)
       i2___ftsub
         _floor (ARG)
           ___altoft
             i2___ftpack
             i2___fttol (ARG)
               i2___ftmul (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2_scale (ARG)
                 i2___awdiv
                   i2___awmod (ARG)
                 i2___awmod
                 i2___ftmul
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftneg (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftdiv (ARG)
                       _ADCC_GetConversionResult (ARG)
                       ___lwtoft (ARG)
                         _ADCC_GetConversionResult (ARG)
                         i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___ftpack (ARG)
                       i2___wmul (ARG)
                         i2___awdiv (ARG)
                           i2___awmod (ARG)
                         i2___awmod (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___wmul
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
           _frexp
           i2___ftadd
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
             i2_fround (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
           i2___ftge
             _fabs (ARG)
               i2___ftneg
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
           i2___fttol
             i2___ftmul (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2_scale (ARG)
               i2___awdiv
                 i2___awmod (ARG)
               i2___awmod
               i2___ftmul
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftneg (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftdiv (ARG)
                     _ADCC_GetConversionResult (ARG)
                     ___lwtoft (ARG)
                       _ADCC_GetConversionResult (ARG)
                       i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___ftpack (ARG)
                     i2___wmul (ARG)
                       i2___awdiv (ARG)
                         i2___awmod (ARG)
                       i2___awmod (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___wmul
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
         i2___ftadd (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftmul (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
           i2_fround (ARG)
             i2___awdiv
               i2___awmod (ARG)
             i2___awmod
             i2___ftmul
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftneg (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftdiv (ARG)
                   _ADCC_GetConversionResult (ARG)
                   ___lwtoft (ARG)
                     _ADCC_GetConversionResult (ARG)
                     i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___ftpack (ARG)
                   i2___wmul (ARG)
                     i2___awdiv (ARG)
                       i2___awmod (ARG)
                     i2___awmod (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___wmul
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
         i2___lltoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2_scale (ARG)
           i2___awdiv
             i2___awmod (ARG)
           i2___awmod
           i2___ftmul
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftneg (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftdiv (ARG)
                 _ADCC_GetConversionResult (ARG)
                 ___lwtoft (ARG)
                   _ADCC_GetConversionResult (ARG)
                   i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___ftpack (ARG)
                 i2___wmul (ARG)
                   i2___awdiv (ARG)
                     i2___awmod (ARG)
                   i2___awmod (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___wmul
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
       i2___lldiv
       i2___llmod
         i2___lldiv (ARG)
       i2___lltoft
         i2___ftpack
       i2___wmul
         i2___awdiv (ARG)
           i2___awmod (ARG)
         i2___awmod (ARG)
       i2__div_to_l_
       i2__tdiv_to_l_
       i2_fround
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
       i2_isdigit
       i2_putch
         i2_EUSART2_Write
       i2_scale
         i2___awdiv
           i2___awmod (ARG)
         i2___awmod
         i2___ftmul
           _ADCC_GetConversionResult (ARG)
           ___lwtoft (ARG)
             _ADCC_GetConversionResult (ARG)
             i2___ftpack (ARG)
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
           i2___ftdiv (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___ftpack (ARG)
             i2___wmul (ARG)
               i2___awdiv (ARG)
                 i2___awmod (ARG)
               i2___awmod (ARG)
           i2___ftneg (ARG)
             _ADCC_GetConversionResult (ARG)
             ___lwtoft (ARG)
               _ADCC_GetConversionResult (ARG)
               i2___ftpack (ARG)
             i2___ftdiv (ARG)
               _ADCC_GetConversionResult (ARG)
               ___lwtoft (ARG)
                 _ADCC_GetConversionResult (ARG)
                 i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___ftpack (ARG)
               i2___wmul (ARG)
                 i2___awdiv (ARG)
                   i2___awmod (ARG)
                 i2___awmod (ARG)
             i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___ftpack (ARG)
           i2___wmul (ARG)
             i2___awdiv (ARG)
               i2___awmod (ARG)
             i2___awmod (ARG)
         i2___wmul
           i2___awdiv (ARG)
             i2___awmod (ARG)
           i2___awmod (ARG)
   _TMR5_ISR *
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
     _TMR5_WriteTimer *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DE9      0       0      33        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0     100      10      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B9      E0       7       87.5%
BITBANK13           EA      0       0      31        0.0%
BANK13              EA      0       0      32        0.0%
BITBANK0            A0      0       1       4        0.6%
BANK0               A0     65      8A       5       86.3%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5D       1       98.9%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2C7       8        0.0%
DATA                 0      0     2C7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Nov 01 18:19:24 2018

                                 ___altoft@exp 0054               __end_of_TMR5_SetInterruptHandler 620E  
                                  __CFG_CP$OFF 000000                                  ___altoft@sign 0055  
                                           l55 614C                                   ___awdiv@sign 0122  
                       __end_of_FVR_Initialize 6264                                             bsr 000FE0  
                          ___wmul@multiplicand 0127                         ?_terminal_printNewline 0001  
                            ??_TMR5_WriteTimer 0003                                     i2___ftpack 4E54  
               __end_of_heartbeatTimerCallback 5F7E                                   ___ftadd@exp1 0136  
                                 ___ftadd@exp2 0135                                     i2___lltoft 599E  
                                 ___ftadd@sign 0134                                            l370 5D48  
                                          l374 5C90                                            l375 5C8E  
                                          l367 5D20                                            l368 5D1E  
                                          l377 5CA4                                            l378 5CCA  
                                          l379 5CC8                                            l820 442C  
                                          l821 43FE                                            l815 43A8  
                                          l817 43E4                                            l850 29A6  
                                          l930 1548                                            l818 43C8  
                                          l851 29BE                                            l860 2AA8  
                                          l844 29EE                                            l852 29D6  
                                          l940 16A8                                            l853 2B08  
                                          l861 2AC0                                            l845 2946  
                                          l870 2BB6                                            l862 2AD8  
                                          l854 2A30                                            l846 2A18  
                                          l950 184E                                            l942 1700  
                                          l934 15A0                                            l926 1494  
                                          l871 2BCE                                            l855 2B3E  
                                          l863 2AF0                                            l847 295E  
                                          l864 2C2E                                            l872 2BE6  
                                          l856 2A48                                            l848 2976  
                                          l952 189A                                            l944 1758  
                                          l936 15F8                                            l928 14D0  
                                          l776 55F2                                            l873 2BFE  
                                          l865 2B56                                            l857 2A60  
                                          l849 298E                                            l866 2C64  
                                          l874 2C16                                            l858 2A78  
                                          l954 18EA                                            l946 17B0  
                                          l938 1650                                            l867 2B6E  
                                          l859 2A90                                            l868 2B86  
                                          l964 1B7E                                            l956 1B22  
                                          l948 17FE                                            l869 2B9E  
                                          l957 1922                                            l959 19CE  
                                 __CFG_CPD$OFF 000000                                            _PR6 000FB0  
                                          _Ipk 00C8                                            _Vpk 00E3  
                                          _sin 33FE                     currentMeasuredToPeak@Angle 0076  
                      __size_of_PMD_Initialize 001C                                   ___awmod@sign 011C  
                                          prod 000FF3                                            tosl 000FFD  
                                          wreg 000FE8                   ?_ADCC_SetADIInterruptHandler 0117  
                                 __CFG_LVP$OFF 000000            __size_of_ADC_postProcessingCallback 040E  
                                 __CFG_ZCD$OFF 000000                                   ___ftdiv@cntr 0140  
                                 ___ftdiv@sign 0145                                           l1101 0332  
                                         l1102 0370                                           l1103 0434  
                                         l1120 05A6                                           l1112 049A  
                                         l1121 0598                                           l1130 072C  
                                         l1106 03DE                                           l1123 05CA  
                                         l1060 1E8A                                           l1132 0794  
                                         l1124 05CE                                           l1061 1D9A  
                                         l1125 05E6                                           l1117 058C  
                                         l1054 2DF4                                           l1142 086C  
                                         l1134 07B8                                           l1126 0720  
                                         l1118 04F8                                           l1151 09DE  
                                         l1143 0814                                           l1127 0638  
                                         l1071 000E                                           l1400 564E  
                                         l1064 1E5E                                           l1136 0856  
                                         l1072 0020                                           l1401 5658  
                                         l1057 2ED6                                           l1065 1FD4  
                                         l1153 09C0                                           l1137 07D2  
                                         l1129 073A                                           l1081 00F2  
                                         l1073 00E4                                           l1402 5666  
                                         l1154 08C4                                           l1082 01BA  
                                         l1090 0118                                           l1074 00B8  
                                         l1067 2098                                           l1147 0888  
                                         l1075 0064                                           l1156 09D8  
                                         l1092 0140                                           l1501 3ABE  
                                         l1157 0948                                           l1149 08A8  
                                         l1093 0152                                           l1085 00F6  
                                         l1510 3AFC                                           l1502 3AB4  
                                         l1430 4224                                           l1094 0744  
                                         l1078 0158                                           l1511 3AF2  
                                         l1431 4214                                           l1095 01CE  
                                         l1087 00FA                                           l1424 4156  
                                         l1096 0210                                           l1408 5DF4  
                                         l1520 48A4                                           l1513 3B20  
                                         l1089 012C                                           l1361 4C08  
                                         l1514 3B3C                                           l1426 4174  
                                         l1530 3F2A                                           l1098 02A4  
                                         l1522 48CC                                           l1370 4CCE  
                                         l1362 4C02                                           l1515 3B6C  
                                         l1427 41B6                                           l1531 3F64  
                                         l1099 030C                                           l1523 490A  
                                         l1460 4DEC                                           l1436 4248  
                                         l1428 41E6                                           l1540 3FEC  
                                         l1532 3F8C                                           l1380 52A2  
                                         l1524 4930                                           l1364 4C4A  
                                         l1437 423C                                           l1541 3FE0  
                                         l1381 52B2                                           l1462 4E2A  
                                         l1614 5342                                           l1534 3FC8  
                                         l1463 4E20                                           l1615 5336  
                                         l1535 3FB8                                           l1383 52D0  
                                         l1367 4C9A                                           l1456 4DCE  
                                         l1624 5768                                           l1528 3EFE  
                                         l1384 52C8                                           l1552 45C6  
                                         l1368 4C5C                                           l1545 5080  
                                         l1457 4DC4                                           l1625 575C  
                                         l1393 5614                                           l1546 50B0  
                                         l1618 5376                                           l1394 5620  
                                         l1554 45EE                                           l1563 6038  
                                         l1459 4E02                                           l1491 3A62  
                                         l1619 5384                                           l1635 5954  
                                         l1387 52F0                                           l1555 4620  
                                         l1628 5790                                           l1636 5948  
                                         l1388 52FA                                           l1396 5636  
                                         l1556 4630                                           l1581 456E  
                                         l1573 44D2                                           l1629 579E  
                                         l1389 5308                                           l1397 562E  
                                         l1582 4562                                           l1558 4648  
                                         l1487 3A38                                           l1575 454A  
                                         l1559 4658                                           l1496 3AC8  
                                         l1584 458A                                           l1576 453A  
                                         l1840 5BFC                                           l1569 5D72  
                                         l1842 5C1C                                           l1843 5C12  
                                         l1588 60F4                                           l1932 5E34  
                         _ADCC_StartConversion 6238                                           l1839 5C02  
                                         l1863 56EA                                           l1848 5B60  
                                         l1856 5A64                                           l1880 523E  
                                         l1864 571A                                           l1849 5B56  
                                         l1857 5A5E                                           l1937 5154  
                                         l1938 50E2                                           l1866 5736  
                                         l1939 514C                                           l1867 5726  
                                         l1878 526A                                           l1879 5202  
                                         l7751 50DC                                           l9183 50E2  
                                         l9409 4C96                                           ?_sin 0066  
                                         l8911 07D6                                           l8807 03B8  
                                         l8735 0118                                           l8851 0598  
                                         l8827 049E                                           l8925 0818  
                                         l8961 09C0                          __size_ofi2__div_to_l_ 0128  
                                         l8799 0370                                           STR_1 FFC1  
                                         STR_2 FFAC                                           STR_3 FFB5  
                                         STR_4 F93B                                           l8979 5726  
                                         l9963 1984                                           l9947 1912  
                                         STR_6 FFAC                                           l9965 19CE  
                                         l9957 1950                                           STR_7 FFB5  
                                         STR_9 FFB9                                           _LATA 000F79  
                                         _LATB 000F7A                                           _LATC 000F7B  
                                         _LATD 000F7C                                           _LATE 000F7D  
                                         _LATF 000F7E                                           _LATG 000F7F  
                                         _LATH 000F80                                   printf@tmpval 0180  
                                         _T6PR 000FB0                                           _PMD0 000E4C  
                                         _PMD1 000E4D                                           _PMD2 000E4E  
                                         _PMD3 000E4F                                           _PMD4 000E50  
                                         _PMD5 000E51                                           u9010 3A2A  
                                         u9110 3AD0                                           u9040 3A54  
                                         u9201 45D6                                           u9140 3B04  
                                         u9070 3A92                                           u9181 45AE  
                                         u8630 4E34                                           u9350 563A  
                                         u9601 3F0E                                           u9290 52D4  
                                         u8590 4DB6                                           u9730 424E  
                                         _PLLR 007230                                           u9660 3FF2  
                                         u9581 3EE2                                           u9930 4574  
                                         u8971 39F6                                           u8981 3A0A  
                                         u9871 44B6                                           u9960 5346  
                                         u9890 44F0                                           u9990 576C  
                                         _TMR6 000FAF                                           u9895 44E8  
                                         _WPUA 000E91                                           _WPUB 000E99  
                                         _WPUC 000EA1                                           _WPUD 000EA6  
                                         _WPUE 000EAE                                           _WPUF 000EB3  
                                         _WPUG 000EBB                                           _WPUH 000EC0  
                        ??_EUSART2_Receive_ISR 005E                               __end_of_ADCC_ISR 6020  
                                         _Irms 01C3                                  __CFG_FCMEN$ON 000000  
                                _EUSART2_Write 5C88                                           _Vrms 01C0  
                                         _acos 5AAC                                           _fabs 5F20  
                                         _atan 3822                                           _asin 3194  
                                         _atoi 4C00                                           _main 558C  
                                         _line 02C0                                   ___ftpack@arg 0117  
                                 ___ftpack@exp 011A                                  ?_EUSART2_Read 0001  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         fsr2h 000FDA                                           fsr0l 000FE9  
                                         indf1 000FE7                                           indf2 000FDF  
                                         fsr1l 000FE1                                           fsr2l 000FD9  
                                         btemp 005E                                           _sqrt 3D3E  
                                 i2___ftadd@f1 0040                                   i2___ftadd@f2 0043  
                                         sin@f 0066                                   i2___ftge@ff1 002A  
                                         sin@y 0069                                   i2___ftge@ff2 002D  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00FE                                _timer5ReloadVal 01D5  
                                 i2___ftdiv@f1 0015                                   i2___ftdiv@f2 0018  
                                 i2___ftdiv@f3 0020                                __end_ofi2_scale 2514  
                 __end_of_EUSART2_Transmit_ISR 5E86                                   i2___ftneg@f1 0024  
                              __end_ofi2_putch 625C                                  __CFG_CSWEN$ON 000000  
                                 ___ftmul@cntr 0153                                   i2___ftmul@f1 0027  
                                 i2___ftmul@f2 002A                                   ___param_bank 000000  
                   ??_TMR7_SetInterruptHandler 011A                                   ___ftmul@sign 0154  
                                 i2___ftsub@f1 0060                                   i2___ftsub@f2 0063  
                                 i2___fttol@f1 003D                       __size_ofi2_EUSART2_Write 0046  
                                 ___fttol@exp1 0163                                _timer7ReloadVal 01D9  
                                 i2___lltoft@c 0009                                   ___fttol@lval 015F  
                                        ??_sin 005E                                ?_FVR_Initialize 0001  
               __size_of_OSCILLATOR_Initialize 001C                  __end_of_OSCILLATOR_Initialize 6152  
                     ?_terminal_textAttributes 018E                              ??_TMR7_WriteTimer 0102  
                                        l10351 4398                                          l10361 43BE  
                                        ?_acos 008E                                          ?_fabs 0027  
                                        ?_atan 0058                                          ?_asin 0079  
                                        _ADACQ 000F5C                                          _ADCAP 000F5D  
                                        _ADACT 000F56                                          ?_atoi 012B  
                                        ?_main 0001                                          _ADCLK 000F57  
                                        _ADCNT 000F67                                          _ADPCH 000F5F  
                                        _ADREF 000F58                                __end_of___awdiv 5312  
                                        _ADPRE 000F5E                                __end_of___ftadd 3B92  
                                        STR_10 FFBD                                          STR_11 FFF5  
                                        STR_12 FFC6                                          STR_20 FFC5  
                                        STR_13 FFCC                                          STR_21 FFCB  
                                        STR_14 FFDE                                          STR_22 FFD1  
                                        STR_30 FFC8                                          STR_15 FFE4  
                                        STR_23 FFD7                                          STR_31 FFCE  
                                        STR_40 FBA7                                          STR_16 FFF0  
                                        STR_24 FFDD                                          STR_32 FFD4  
                                        STR_17 FFF8                                          STR_25 FFE3  
                                        STR_33 FFDA                                          STR_41 FFA1  
                                        STR_18 FFC6                                          STR_42 FFAC  
                                        STR_26 FFE9                                          STR_34 FFE0  
                                        STR_50 FC5B                                          STR_43 FFB5  
                                        STR_19 FFFA                                          STR_27 FFEF  
                                        STR_35 FFE6                                          STR_51 FF28  
                                        STR_28 FFEF                                          STR_36 FFEC  
                                        STR_44 FF9B                                          STR_60 FDF4  
                                        STR_52 FD28                                __end_of___awmod 5670  
                                        STR_29 FFFA                                          STR_45 FFAC  
                                        STR_37 FFF2                                          STR_53 FF48  
                                        STR_61 FEDF                                          STR_38 FFF2  
                                        STR_46 FFB5                                          STR_70 FE83  
                                        STR_54 FDB1                                          STR_62 FD6D  
                                        STR_39 FFFC                                          STR_47 FF95  
                                        STR_71 FF73                                          STR_55 FEF4  
                                        STR_63 FECA                                          STR_48 FFB1  
                                        STR_72 FE6A                                          STR_64 FD8F  
                                        STR_56 FD4B                                          STR_80 FBE9  
                                        _ADRPT 000F66                                          STR_81 FFA7  
                                        STR_57 FF66                                          STR_65 FF57  
                                        STR_49 FF17                                          STR_73 FE9B  
                                        STR_66 FCB3                                          STR_58 FC23  
                                        STR_74 FB15                                          STR_82 F4BB  
                                        STR_67 FF38                                          STR_59 FE50  
                                        STR_83 FDD3                                          STR_75 FAAF  
                                        STR_84 FE32                                          STR_76 FD03  
                                        STR_68 FC8A                                          STR_69 FF80  
                                        STR_85 FCDB                                          STR_77 FBAA  
                                        STR_86 FEB3                                          STR_78 FB6B  
                                        STR_79 FF8C                                          STR_87 FE14  
                                        STR_88 FF06                                __end_of___ftdiv 4962  
                              __end_of___ftneg 6046                                __end_of___lldiv 5396  
                                        ?_sqrt 0066                                          u10110 004C  
                                        u10130 009C                                          u11010 5B98  
                                        u10140 00DA                                          u10117 0042  
                                        u11111 488C                                          u10400 05C4  
                                        u10320 03B8                                          u10240 0248  
                                        u11040 5282                                          u10137 0092  
                                        u10147 00D0                                          u11131 48B4  
                              __end_of___ftmul 4692                                          u10245 023E  
                                        u10190 0188                                          u10360 04DC  
                                        u10280 0342                                          u10290 0382  
                              ___awdiv@divisor 011F                                          u10197 017E  
                                        u10390 05B4                                          u12400 43BE  
                              __end_of___llmod 57B0                                          u10570 09F0  
                                        u10810 5114                                __end_of___ftsub 5D9C  
                                        u10580 0A20                                          u11700 1950  
                              __end_of___fttol 459C                                          u11710 1976  
                                        u11720 1984                                          u11560 150E  
                                        u10587 0A16                                          u10780 5A86  
                                        u10787 5A7C                                          _T5CLK 000FC6  
                                        _T5CON 000FC3                                          _T7CLK 000F33  
                                        _T6CON 000FB1                                          u16177 5598  
                               __CFG_DEBUG$OFF 000000                                          _T7CON 000F30  
                                        _T6HLT 000FB2                                          i1l213 007C  
                                        i1l215 009C                                          i1l217 00A6  
                                        i2l202 4D42                                          i2l204 4D4E  
                                        i2l206 4D58                                          i1l390 5E7C  
                                        i2l400 4F54                                          i2l402 4FA4  
                                        i1l626 605E                                          i1l389 5E80  
                                        i1l760 5B18                                          i1l763 5B28  
                                        _T6TMR 000FAF                                          i1l757 5B08  
                                        i2l374 5CD6                                          i1l766 5B38  
                                        i2l375 5CD4                                          i2l377 5CEA  
                                        i1l769 5B48                                          i2l378 5D10  
                                        _T6RST 000FB4                                          i2l379 5D0E  
                                        i2l395 4F0C                                          i2l396 4F2E  
                                        i2l397 4F50                                          i2l750 273A  
                                        i2l743 28FE                                          i2l751 27B8  
                                        i2l752 28FA                                          i2l744 251A  
                                        i2l746 257C                                          i2l747 25DE  
                                        i2l748 26D8                                ___awdiv@counter 0121  
                                        _OSCEN 000E47                                          _TMR5H 000FC2  
                                        _TMR5L 000FC1                                          _TMR7H 000F2F  
                                        _TMR7L 000F2E                                   i2__div_to_l_ 4260  
                                        _TRISA 000F81                                          _TRISB 000F82  
                                        _TRISC 000F83                                          _TRISD 000F84  
                                        _TRISE 000F85                                          _TRISF 000F86  
                                        _TRISG 000F87                                          _TRISH 000F88  
                           __end_ofsin@coeff_a F4A0                             __end_ofsin@coeff_b F4BB  
                                __CFG_WRT0$OFF 000000                                  __CFG_WRT1$OFF 000000  
                                __CFG_WRT2$OFF 000000                                          _Imeas 00C5  
                                __CFG_WRT3$OFF 000000                                  __CFG_PWRTE$ON 000000  
                                __CFG_WRT4$OFF 000000                                  __CFG_WRT5$OFF 000000  
                                 ___lltoft@exp 0127                                  __CFG_WRT6$OFF 000000  
                      ??_ADCC_IsConversionDone 0100                                  __CFG_WRT7$OFF 000000  
            __size_of_TMR6_SetInterruptHandler 000E                                 __CFG_EBTR0$OFF 000000  
                               __CFG_EBTR1$OFF 000000                                 __CFG_EBTR2$OFF 000000  
                               __CFG_EBTR3$OFF 000000                                 __CFG_EBTR4$OFF 000000  
                               __CFG_EBTR5$OFF 000000                      ?_TMR6_SetInterruptHandler 0117  
                               __CFG_EBTR6$OFF 000000                                 __CFG_EBTR7$OFF 000000  
                                __CFG_WRTB$OFF 000000                                  __CFG_WRTC$OFF 000000  
                                __CFG_WRTD$OFF 000000                               __end_of_TMR5_ISR 5EEE  
                             __end_of_TMR6_ISR 5FF8                               __end_of_TMR7_ISR 5EBA  
                               __CFG_EBTRB$OFF 000000                                     i2isdigit@c 0003  
                                ___awtoft@sign 0122                      ??_terminal_ringBufferPull 01AE  
                              __end_of_dpowers F411                                          acos@x 008E  
                                        fabs@d 0027                                     i2scale@scl 003C  
                                        _floor 4A48                                          _frexp 549C  
                                        _errno 00D7                          ?_ADCC_StartConversion 0001  
                                        _scale 1C44                                __end_of_isdigit 60FC  
                                        atan@f 0058                                          atan@x 0063  
                                        atan@y 0060                             __CFG_MCLRE$EXTMCLR 000000  
                                ___ftpack@sign 011B                                          asin@x 0079  
                                        asin@y 0088                                          atoi@a 0130  
                                        atoi@s 012B                                          _putch 61D6  
                               ?_EUSART2_Write 0001                                          pclath 000FFA  
                                        sin@x2 006F                                          tablat 000FF5  
                             __end_ofi2___ftge 5200                               __end_ofi2___wmul 6092  
                               ??_EUSART2_Read 0117                                          sqrt@a 0066  
                                        sqrt@i 006F                                          sqrt@q 0073  
                                        sqrt@x 0076                                          sqrt@z 0070  
                                        status 000FD8                                          wtemp6 005F  
                              __end_of_strncmp 5170                                __end_of_strncpy 5748  
                             __end_ofi2_fround 3194                 ?_INTERRUPT_InterruptManagerLow 0001  
                                i2___ftdiv@exp 001F                             __size_ofi2___awdiv 0084  
                           __size_ofi2___ftadd 01AC                             __size_ofi2___awmod 0070  
                           __size_ofi2___ftdiv 00E6                             __size_ofi2___ftneg 0024  
                           __size_ofi2___lldiv 0082                             __size_ofi2___ftmul 00F4  
                           __size_ofi2___llmod 0066                             __size_ofi2___ftsub 0042  
                           __size_ofi2___fttol 00F4                               __end_ofi2_printf 1456  
               ??_TMR6_DefaultInterruptHandler 0100          __end_of_EUSART2_SetTxInterruptHandler 621C  
       __size_of_EUSART2_SetTxInterruptHandler 000E                  _EUSART2_SetTxInterruptHandler 620E  
                              _TMR5_Initialize 5C3E                                __initialization 59FA  
                            i2___lldiv@divisor 0005                                   __end_of_acos 5B02  
                                 __end_of_fabs 5F50                                   __end_of_atan 39E4  
                                 __end_of_asin 33FE                                   __end_of_atoi 4CD8  
                                 __end_of_main 55FE                              i2___lldiv@counter 000D  
                                i2___ftmul@exp 0030                                   __end_of_sqrt 3ED0  
                                   i2printf@ap 0076                                     i2printf@cp 0072  
                        __end_of_ringBufferLUT 1C44                                 __CFG_SCANE$OFF 000000  
                           __size_ofi2_isdigit 001E                                    ?i2___ftpack 0001  
                                       ??_acos 005E                                         ??_fabs 002A  
                                       ??_atan 005B                                    ?i2___lltoft 0009  
                                       ??_asin 005E                                         ??_atoi 012D  
                                       ??_main 01B7                                  ___fttol@sign1 015E  
                     _TMR5_SetInterruptHandler 6200                                         ??_sqrt 0069  
                                __activetblptr 000003                           __size_of__tdiv_to_l_ 0134  
                              _TMR6_Initialize 5EEE                             _TRIAC_Firing_Angle 00DD  
                                       _ADACCH 000F71                                         _ADACCL 000F70  
                   __end_of_EUSART2_Initialize 5816                                         _ADCON0 000F60  
                                       _ADCON1 000F59                                         _ADCON2 000F5A  
                                       _ADCON3 000F5B                       _eusart2TxBufferRemaining 01DD  
                                       ?_floor 0056                                         _ADERRH 000F6F  
                                       _ADERRL 000F6E                                         ?_frexp 0001  
                             __end_of___altoft 558C                               ___llmod@dividend 0124  
                                       _ADLTHH 000F6B                                         ?_scale 0155  
                                       _ADLTHL 000F6A                                         _ADRESH 000F64  
                                       _ADRESL 000F63                                         _ADSTAT 000F65  
                                       _ADUTHH 000F6D                               ___awdiv@dividend 011D  
                                       _ADUTHL 000F6C                               __end_of___awtoft 5E18  
                                       _ANSELA 000E92                                         ?_putch 0001  
                                       _ANSELB 000E9A                                         _ANSELD 000EA7  
                                       _ANSELE 000EAF                                         _ANSELF 000EB4  
                             __end_of___ftpack 4E54                                         _ANSELG 000EBC  
                                       _T5GATE 000FC5                                         _T5GCON 000FC4  
                                       _T7GATE 000F32                                         _RC2REG 000EF1  
                                       _T7GCON 000F31                               __end_of___lltoft 599E  
                                       _RC2STA 000EF5                                         _ODCONA 000E90  
                                       _ODCONB 000E98                                         _ODCONC 000EA0  
                                       _ODCOND 000EA5                                         _ODCONE 000EAD  
                                       _ODCONF 000EB2                                         _ODCONG 000EBA  
                                       _ODCONH 000EBF                                         i2l1010 6164  
                                       i2l1101 0D5A                                         i2l1102 0D9A  
                                       i2l1103 0E62                                         i2l1120 0FD2  
                                       i2l1112 0EC8                                         i2l1121 0FC4  
                                       i2l1130 1156                                         i2l1106 0E0A  
                                       i2l1123 0FF6                                         i2l1060 22F0  
                                       i2l1132 11BE                                         i2l1124 0FFA  
                                       i2l1061 220A                                         i2l1125 1012  
                                       i2l1117 0FB8                                         i2l1054 3076  
                                       i2l1142 1296                                         i2l1134 11E2  
                                       i2l1126 114A                                         i2l1118 0F26  
                                       i2l1151 1406                                         i2l1143 123E  
                                       i2l1127 1064                                         i2l1071 0A3C  
                                       i2l1304 31DC                                         i2l1400 56BE  
                                       i2l1064 22C6                                         i2l1136 1280  
                                       i2l1072 0A4E                                         i2l1401 56C8  
                                       i2l1057 314E                                         i2l1065 242E  
                                       i2l1153 13E8                                         i2l1137 11FC  
                                       i2l1129 1164                                         i2l1081 0B1E  
                                       i2l1073 0B10                                         i2l1250 5542  
                                       i2l1306 32D0                                         i2l1402 56D6  
                                       i2l1154 12EE                                         i2l1082 0BE6  
                                       i2l1090 0B44                                         i2l1074 0AE4  
                                       i2l1251 5536                                         i2l1323 3858  
                                       i2l1307 3380                                         i2l1067 24EA  
                                       i2l1147 12B2                                         i2l1075 0A92  
                                       i2l1420 5F42                                         i2l1156 1400  
                                       i2l1092 0B6C                                         i2l1501 3C6A  
                                       i2l1325 38B0                                         i2l1157 1370  
                                       i2l1149 12D2                                         i2l1093 0B7E  
                                       i2l1085 0B22                                         i2l1510 3CA8  
                                       i2l1502 3C60                                         i2l1414 4BEA  
                                       i2l1326 39B4                                         i2l1430 434C  
                                       i2l1094 116E                                         i2l1078 0B84  
                                       i2l1511 3C9E                                         i2l1415 4B6A  
                                       i2l1431 433C                                         i2l1095 0BFA  
                                       i2l1087 0B26                                         i2l1520 498A  
                                       i2l1328 39C6                                         i2l1424 427E  
                                       i2l1096 0C3C                                         i2l1513 3CCC  
                                       i2l1089 0B58                                         i2l1514 3CE8  
                                       i2l1522 49B2                                         i2l1426 429C  
                                       i2l1530 405C                                         i2l1098 0CCE  
                                       i2l1515 3D18                                         i2l1523 49F0  
                                       i2l1427 42DE                                         i2l1531 4096  
                                       i2l1099 0D34                                         i2l1460 4E9A  
                                       i2l1524 4A16                                         i2l1436 4370  
                                       i2l1428 430E                                         i2l1540 411E  
                                       i2l1532 40BE                                         i2l1380 53AA  
                                       i2l1437 4364                                         i2l1541 4112  
                                       i2l1381 53BA                                         i2l1462 4ED8  
                                       i2l1614 5448                                         i2l1534 40FA  
                                       i2l1463 4ECE                                         i2l1703 342A  
                                       i2l1615 543C                                         i2l1535 40EA  
                                       i2l1383 53D8                                         i2l1456 4E7C  
                                       i2l1552 47AE                                         i2l1704 350C  
                                       i2l1624 5834                                         i2l1528 4030  
                                       i2l1384 53D0                                         i2l1457 4E72  
                                       i2l1545 51A0                                         i2l1705 3564  
                                       i2l1625 5828                                         i2l1393 5684  
                                       i2l1554 47D6                                         i2l1546 51D0  
                                       i2l1706 364E                                         i2l1618 547C  
                                       i2l1394 5690                                         i2l1459 4EB0  
                                       i2l1491 3C0E                                         i2l1555 4808  
                                       i2l1563 60A8                                         i2l1619 548A  
                                       i2l1635 59B0                                         i2l1387 53F8  
                                       i2l1556 4818                                         i2l1628 585C  
                                       i2l1636 59A4                                         i2l1388 5402  
                                       i2l1396 56A6                                         i2l1581 4758  
                                       i2l1573 46BE                                         i2l1629 586A  
                                       i2l1389 5410                                         i2l1397 569E  
                                       i2l1558 4830                                         i2l1582 474C  
                                       i2l1487 3BE4                                         i2l1559 4840  
                                       i2l1575 4734                                         i2l1911 4A9E  
                                       i2l1496 3C74                                         i2l1584 4774  
                                       i2l1576 4724                                         i2l1912 4B18  
                                       i2l1832 3D7A                                         i2l1569 5DB4  
                                       i2l1833 3D6C                                         i2l1835 3DCC  
                                       i2l1908 4A84                                         i2l1588 6112  
                                       i2l1917 54B8                                         i2l1909 4A76  
                                       _RG7PPS 000E89                                  i2putch@txData 0002  
                                       _FVRCON 000EC4                                      ??i2_scale 0039  
                             __end_of___lwtoft 60DA                        TMR7_WriteTimer@timerVal 0100  
                                       _OSCFRQ 000E49                                      ??i2_putch 0002  
                                       _RX2PPS 000E11                                         _TX2REG 000EF2  
                                       _TX2STA 000EF6             __end_of_ADC_postProcessingCallback 2922  
                   _ADC_postProcessingCallback 2514                     ??_ADCC_GetConversionResult 0003  
                       __size_ofi2__tdiv_to_l_ 0132                                 __CFG_XINST$OFF 000000  
                              _TMR7_Initialize 5BA4                                   i2_scale$3328 0039  
                             __end_of__powers_ F438           __size_of_ADCC_SetADIInterruptHandler 000E  
              __end_of_terminal_ringBufferPull 44A4                                         ___ftge 504E  
                                       ___wmul 5FA8                                      ??___awdiv 0121  
                                    ??___ftadd 0131                                 __CFG_STVREN$ON 000000  
                                    ??___awmod 011B                                      ??___ftdiv 013D  
                                    ??___ftneg 0126                                      ??___lldiv 011F  
                                    ??___ftmul 014C                                      ??___llmod 012C  
                                    ??___ftsub 013D                                      ??___fttol 0159  
                     ??_terminal_setCursorHome 018E                                         _fround 2C8A  
                                       clear_0 5A22                                         clear_1 5A34  
                                       clear_2 5A44                           _eusart2RxStringReady 0748  
                             ___awdiv@quotient 0123                                ___awmod@divisor 0119  
                              ___awmod@counter 011B                                         _printf 0000  
                                       _strcat 5BF2                                         _strchr 5E18  
                                       _strcmp 5B54                                      ?_ADCC_ISR 0001  
                                       _strlen 5A54                                 i2___awdiv@sign 000C  
                                       _strstr 5200                                         floor@i 0059  
                                       floor@x 0056                          ___ftmul@f3_as_product 0150  
                             _background_color 00D9                                _ADCC_Initialize 587C  
                            ??i2_EUSART2_Write 0001                                 _PMD_Initialize 611A  
                                    ??_isdigit 0117                              __end_ofi2___awdiv 541A  
                            __end_ofi2___ftadd 3D3E                              __end_ofi2___awmod 56E0  
                            __end_ofi2___ftdiv 4A48                                 i2___ftadd@exp1 004B  
                               i2___ftadd@exp2 004A                              __end_ofi2___ftneg 60B6  
                            __end_ofi2___lldiv 549C                                         sin@sgn 0072  
                            __end_ofi2___ftmul 487A                              __end_ofi2___llmod 587C  
                            __end_ofi2___ftsub 5DDE                              __end_ofi2___fttol 4786  
                               i2___ftadd@sign 0049                                   __mediumconst F3E8  
                                       tblptrh 000FF7                                         tblptrl 000FF6  
                                       tblptru 000FF8                           _EUSART2_Transmit_ISR 5E50  
                       ??_ADCC_StartConversion 0100                                 i2___awmod@sign 0006  
                                       sqrt@og 006C                                ??_EUSART2_Write 0117  
     TMR5_SetInterruptHandler@InterruptHandler 0117       TMR7_SetInterruptHandler@InterruptHandler 0117  
  ADCC_SetADIInterruptHandler@InterruptHandler 0117       TMR6_SetInterruptHandler@InterruptHandler 0117  
                               peakToRMS@Angle 0097                                      ??_strncmp 0123  
                                    ??_strncpy 011D        terminal_textAttributes@background_color 018E  
                __size_of_INTERRUPT_Initialize 0012                                _eusart2RxBuffer 0280  
                      __end_of_TMR5_Initialize 5C88                              __end_ofi2_isdigit 611A  
              ?_INTERRUPT_InterruptManagerHigh 0001               ??_INTERRUPT_InterruptManagerHigh 00B3  
                            _SYSTEM_Initialize 5F7E           __end_of_TMR7_DefaultInterruptHandler 626C  
        __size_of_TMR7_DefaultInterruptHandler 0002                   _TMR7_DefaultInterruptHandler 626A  
                               i2___ftdiv@cntr 001E                                _eusart2TxBuffer 0200  
                                   __accesstop 0060                        __end_of__initialization 5A4A  
                                   ___altoft@c 004C                                 i2___ftdiv@sign 0023  
                                   ___ftadd@f1 012B                                     ___ftadd@f2 012E  
                          __size_ofi2___ftpack 00AE                                 i2printf@tmpval 007C  
                                   ___ftge@ff1 0117                                     ___ftge@ff2 011A  
                           ?_SYSTEM_Initialize 0001                            __size_ofi2___lltoft 005C  
                                 eval_poly@res 0055                                  ___rparam_used 000001  
                                   ___ftdiv@f1 0137                                     ___ftdiv@f2 013A  
                                   ___ftdiv@f3 0141                                _TMR5_WriteTimer 6152  
                                   ___ftneg@f1 0123                                     ___awtoft@c 011F  
                               i2___ftpack@arg 0001                             i2__tdiv_to_l_@exp1 000F  
                            i2___llmod@divisor 0012                                 i2___ftpack@exp 0004  
                           i2__tdiv_to_l_@cntr 000E                              i2___llmod@counter 0016  
                           i2__tdiv_to_l_@quot 000A                                     ___ftmul@f1 0146  
                                   ___ftmul@f2 0149              terminal_ringBufferPull@charNumber 01B1  
                                   ___ftsub@f1 0137                                     ___ftsub@f2 013A  
                                   ___fttol@f1 0155                                 __pcstackCOMRAM 0001  
                           i2___lldiv@dividend 0001                        ??_terminal_printNewline 018E  
                                 __pidataBANK0 6264                            ??_SYSTEM_Initialize 011C  
                                   ___lltoft@c 011F                                      ?_TMR5_ISR 0001  
                                    ?_TMR6_ISR 0001                                      ?_TMR7_ISR 0001  
                                __end_of_floor 4B26                                  __end_of_frexp 5514  
                               i2___ftmul@cntr 0034                                  __end_of_scale 20C4  
                               i2___ftmul@sign 0035                 ?_EUSART2_SetTxInterruptHandler 0117  
                                __end_of_putch 61E4                                    i2printf@idx 0071  
                     ??_terminal_clearTerminal 018E                                    i2printf@len 0074  
                                  i2printf@exp 007A                                    i2printf@val 0083  
                      __end_of_TMR6_Initialize 5F20                         __end_of_PMD_Initialize 6136  
                               i2___fttol@exp1 004B                                     ___lwtoft@c 0009  
                               i2___fttol@lval 0047                                      ?i2___ftge 002A  
                                   ??_ADCC_ISR 005E                           __end_of_EUSART2_Read 5D5A  
                                    ?i2___wmul 000F                                  i2__tdiv_to_l_ 4004  
                                   __div_to_l_ 4136                                      ?i2_fround 0036  
                        ?_EUSART2_Transmit_ISR 0001                                      ?i2_printf 0066  
                  ADCC_StartConversion@channel 0100                                __div_to_l_@exp1 0122  
                                      ??_floor 0059                                __div_to_l_@cntr 0121  
                                      ??_frexp 0006                                        ??_scale 0158  
                    __end_of_SYSTEM_Initialize 5FA8                                 i2___lltoft@exp 0011  
                              __div_to_l_@quot 011D                                        ??_putch 0118  
                                 peakToRMS@RMS 00A3                             i2___lldiv@quotient 0009  
                                _eusart2RxHead 00DC                                  _eusart2TxHead 01DF  
                                   __pbssBANK0 00C5                                     __pbssBANK1 01B9  
                                   __pbssBANK2 0200                                  _eusart2RxTail 01DC  
                                _eusart2TxTail 01DE                             __size_of_eval_poly 00DA  
                             i2__tdiv_to_l_@f1 0001                               i2__tdiv_to_l_@f2 0004  
                      __end_of_TMR7_Initialize 5BF2                             __size_of_peakToRMS 01C6  
                ?_TMR7_DefaultInterruptHandler 0001                                  __div_to_l_@f1 0117  
                                __div_to_l_@f2 011A                          EUSART2_Read@readValue 0117  
                              _TMR7_WriteTimer 6046                               ??_FVR_Initialize 0117  
                               _peakToRMS$3313 00A0                                 _peakToRMS$3314 009A  
                               _peakToRMS$3315 009D                          ringBufferLUT@arg_buff 01A7  
                                      ?___ftge 0117              terminal_ringBufferPull@index_1778 01B3  
                                      ?___wmul 0125                          _currentMeasuredToPeak 58E0  
                              __CFG_PPS1WAY$ON 000000               __end_of_TMR6_SetInterruptHandler 6200  
                      __end_of_ADCC_Initialize 58E0                                     ??_TMR5_ISR 0003  
                                   ??_TMR6_ISR 0101                                     ??_TMR7_ISR 0102  
                                      _ADFLTRH 000F73                                        _ADFLTRL 000F72  
                                    ?___altoft 004C                                        ?_fround 0155  
                                      _ADPREVH 000F62                                        _ADPREVL 000F61  
                                    ?___awtoft 011F                                      ?___ftpack 0117  
                                      _ADSTPTH 000F69                                        _ADSTPTL 000F68  
              __size_of_terminal_setCursorHome 0010                                        ?_printf 0164  
                              ?_PMD_Initialize 0001                                      ?___lltoft 011F  
                               ?i2__tdiv_to_l_ 0001                                     ??i2___ftge 0030  
                                      ?_strcat 0117                                        ?_strchr 0117  
                                      ?_strcmp 0117                                        ?_strlen 0117  
                                    ?___lwtoft 0009                                        ?_strstr 0126  
                                      u1131_41 4014                                     ??i2___wmul 0013  
                                      u1133_41 4040                                        u1508_41 46A2  
                                      u1480_41 47BE                                        u1457_41 3BA2  
                                      u1458_41 3BB6                                        i2l12321 0DE4  
                                      i2l12313 0D9A                                        u1478_41 4796  
                                      i2l12341 0ECC                                        i2l12425 1200  
                                      i2l12249 0B44                                        u1487_41 4972  
                                      i2l12365 0FC4                                        i2l11559 51FC  
                                      i2l12439 1242                                        i2l12475 13E8  
                                      u1489_41 499A                                        _SP2BRGH 000EF4  
                                   ??i2_fround 0039                                        _SP2BRGL 000EF3  
                                      _OSCCON1 000E43                                        _OSCCON3 000E45  
                  __end_of_EUSART2_Receive_ISR 4FAC                                     ??i2_printf 0068  
                                      _OSCTUNE 000E48                                        _SLRCONA 000E8F  
                                      _SLRCONB 000E97                                        _SLRCONC 000E9F  
                                      _SLRCOND 000EA4                                        _SLRCONE 000EAC  
                                      _SLRCONF 000EB1                                        _SLRCONG 000EB9  
                                      _SLRCONH 000EBE                 __size_of_ADCC_IsConversionDone 000C  
                __end_of_ADCC_IsConversionDone 6252                       _acquisitionTimerCallback 5B02  
                      __end_of_TMR5_WriteTimer 616E               __size_of_terminal_textAttributes 0368  
                                      i2_scale 20C4                               ?_TMR5_Initialize 0001  
                                      i2_putch 6252           __end_of_terminal_textAttributesReset 6194  
        __size_of_terminal_textAttributesReset 0012                   _terminal_textAttributesReset 6182  
                            __end_of__npowers_ F45F                                        __Hparam 0000  
                                   _scale$3133 0158                                        __Lparam 0000  
                   ??_TMR5_SetInterruptHandler 011A                                __size_of___ftge 0092  
                                      ___awdiv 528C                                        ___ftadd 39E4  
                                      ___awmod 55FE                                        ___ftdiv 487A  
                                      ___ftneg 6020                                        ___lldiv 5312  
                              __size_of___wmul 0028                                        ___ftmul 459C  
                                      ___llmod 5748                                        ___ftsub 5D5A  
                                      ___fttol 44A4                                     ??___altoft 0050  
                                      __pcinit 59FA                                   ??i2___ftpack 0006  
                                   ??___awtoft 0122                                     ??___ftpack 011C  
                            __end_of_eval_poly 4C00                                __size_of_fround 0294  
                             ?_TMR6_Initialize 0001                        i2___ftmul@f3_as_product 0031  
                                      __ramtop 0E00                __size_of_terminal_clearTerminal 0010  
                                 ??i2___lltoft 000D                                     ??___lltoft 0123  
                                      __ptext0 558C                                        __ptext1 61A6  
                                      __ptext2 4388                                        __ptext3 1456  
                                      __ptext4 6182                                        __ptext5 2922  
                                      __ptext6 56E0                                        __ptext7 5BF2  
                                      __ptext8 61B6                                        __ptext9 5200  
                            __end_of_peakToRMS 3822                                __size_of_printf 0A2E  
                currentMeasuredToPeak@Measured 0073                                     ??___lwtoft 000C  
                   ringBufferLUT@angle_degrees 01A4                                __size_of_strcat 004C  
                                i2_fround$3326 003C                                  i2_fround$3327 0039  
                              __size_of_strchr 0038                                __size_of_strcmp 0050  
                              __size_of_strlen 0058                              __end_of_hexpowers F47F  
                                  ?__div_to_l_ 0117                                __size_of_strstr 008C  
                                      _dpowers F3E9                          _OSCILLATOR_Initialize 6136  
                       ??_EUSART2_Transmit_ISR 0100                                   i2fround@prec 003F  
                                      _isdigit 60DA                                atan@val_squared 0067  
                                 __size_of_sin 025E                               ___awmod@dividend 0117  
  ADC_postProcessingCallback@currentADCChannel 00AF                                        _on_time 01B9  
                     ??_PIN_MANAGER_Initialize 0117                                        atan@val 006A  
                                    _T5CONbits 000FC3              __size_of_TMR7_SetInterruptHandler 000E  
                    ?_TMR7_SetInterruptHandler 0117                                      _T6CONbits 000FB1  
                                      asin@sgn 007C                                      _T7CONbits 000F30  
                      ringBufferLUT@percentage 01AC                                      _T6HLTbits 000FB2  
                   __size_of_SYSTEM_Initialize 002A                          i2EUSART2_Write@txData 0001  
                                      _strncmp 50E0                                 __pintcode_body 4CD8  
                                      _strncpy 56E0                           end_of_initialization 5A4A  
                      __end_of_TMR7_WriteTimer 606C                         _terminal_setCursorHome 61A6  
                             ?_TMR7_Initialize 0001                                        int_func 4CD8  
                          i2___wmul@multiplier 000F                                      _T6RSTbits 000FB4  
                                    i1u1613_28 0086                    ?_ADC_postProcessingCallback 0001  
                                    i1u1593_28 5FE4                                      i2u1130_40 4376  
                                    i1u1595_28 5EA6                                      i2u1143_40 544C  
                                    i2u1146_40 5838                                      i2u1139_40 4124  
                                    i2u1091_40 53DC                                      i2u1501_40 387C  
                                    i2u1510_40 46DC                                      i2u1502_40 387E  
                                    i2u1510_45 46D4                             __end_ofi2___ftpack 4F02  
                                    i2u1521_40 4A90                                      i2u1097_40 56AA  
                                    i2u1450_40 4E64                                      i2u1514_40 475E  
                                    i2u1507_40 54E0                                      i2u1507_48 54E2  
                                    i2u1461_40 3BD6                                      i2u1525_40 3508  
                                    i2u1541_40 0AC8                                      i2u1604_48 4D2C  
                                    i2u1541_47 0ABE                                      i2u1454_40 4EE2  
                                    i2u1526_40 350A                                      i2u1542_40 0B06  
                                    i2u1542_47 0AFC                                      i2u1471_40 3C7C  
                                    i2u1464_40 3C00                                      i2u1560_40 0DE4  
                                    i2u1552_40 0C74                                      i2u1552_45 0C6A  
                                    i2u1474_40 3CB0                                      i2u1467_40 3C3E  
                                    i2u1547_40 0BB4                                      i2u1539_40 0A7A  
                                    i2u1547_47 0BAA                                      i2u1539_47 0A70  
                                    i2u1564_40 0F0A                                      i2u1556_40 0D6C  
                                    i2u1557_40 0DAC                                      i2u1567_40 0FE0  
                                    i2u1591_48 600C                                      i2u1568_40 0FF0  
                                    i2u1585_40 1418                                      i2u1586_40 1448  
                                    i2u1586_47 143E                             __end_ofi2___lltoft 59FA  
                                    i2u1589_48 5EDA                                      i2u1599_40 4F44  
                              ___lldiv@divisor 011B                                ___lldiv@counter 0123  
                           _EUSART2_Initialize 57B0                  ?_terminal_textAttributesReset 0001  
                       ?_currentMeasuredToPeak 0073                                i2_EUSART2_Write 5CD0  
                                      printf@c 018D                                        printf@f 0164  
                     ??_heartbeatTimerCallback 0100                 ??_TMR7_DefaultInterruptHandler 0100  
                                      postdec1 000FE5                                        postdec2 000FDD  
                                      postinc0 000FEE                                        postinc2 000FDE  
                        __size_of_EUSART2_Read 0044                               ?_ADCC_Initialize 0001  
                               __tdiv_to_l_@f1 0117                                 __tdiv_to_l_@f2 011A  
                              ??i2__tdiv_to_l_ 0007                                        strcmp@r 011C  
                        __CFG_WDTCPS$WDTCPS_11 000000                            ?_EUSART2_Initialize 0001  
                                      strlen@s 0117                   terminal_ringBufferPull@index 01B5  
                                ??__tdiv_to_l_ 011D                       _TMR6_SetInterruptHandler 61F2  
                        _TMR5_InterruptHandler 01BD                       ?_terminal_ringBufferPull 0001  
                         __CFG_WDTCCS$LFINTOSC 000000                              __size_of_ADCC_ISR 0028  
          __end_of_ADCC_SetADIInterruptHandler 6238                    _ADCC_SetADIInterruptHandler 622A  
                                    i2___awdiv 5396                                      i2___ftadd 3B92  
                                    i2___awmod 5670                               __CFG_FEXTOSC$ECH 000000  
                                    i2___ftdiv 4962                                      i2___ftneg 6092  
                                    i2___lldiv 541A                                      i2___ftmul 4786  
                                    i2___llmod 5816                                      i2___ftsub 5D9C  
                                    i2___fttol 4692                               ?_TMR5_WriteTimer 0001  
                         ??_EUSART2_Initialize 011A                         _terminal_clearTerminal 61C6  
                      TMR5_WriteTimer@timerVal 0001                         __size_of_ringBufferLUT 07EE  
                ??_ADCC_SetADIInterruptHandler 011A                                    ___ftdiv@exp 0144  
                                 _EUSART2_Read 5D16                             i2___llmod@dividend 000E  
                           i2___awdiv@dividend 0007                                i2___ftpack@sign 0005  
                                    i2_isdigit 60FC                            __size_of__div_to_l_ 012A  
                                  ___ftmul@exp 014F                   __end_of_INTERRUPT_Initialize 61A6  
               ??_ADCC_DefaultInterruptHandler 0001                 __size_of_terminal_printNewline 0010  
                               __end_of___ftge 50E0                  __end_of_terminal_printNewline 61C6  
                               __end_of___wmul 5FD0                              __size_of_TMR5_ISR 0034  
                            __size_of_TMR6_ISR 0028                              __size_of_TMR7_ISR 0034  
                       ?_OSCILLATOR_Initialize 0001                                  __pbitbssBANK0 0748  
                               __end_of_fround 2F1E              __size_of_ADCC_GetConversionResult 0014  
                    ?_ADCC_GetConversionResult 0001                                     floor@expon 005C  
                             i2___wmul@product 0013                                 __end_of_printf 0A2E  
                                i2_printf$3329 006E                                 __end_of_strcat 5C3E  
                               __end_of_strchr 5E50                                 __end_of_strcmp 5BA4  
                                 i2printf@flag 0078                                 __end_of_strlen 5AAC  
                                 i2printf@fval 0080                                 __end_of_strstr 528C  
                                 i2printf@prec 0087                            start_initialization 59FA  
                            __size_ofi2___ftge 0090                                     eval_poly@d 004F  
                                   eval_poly@n 0051                                     eval_poly@x 004C  
                           i2___awdiv@quotient 000D                              __size_ofi2___wmul 0026  
         __end_of_TMR5_DefaultInterruptHandler 6270          __size_of_TMR5_DefaultInterruptHandler 0002  
                 _TMR5_DefaultInterruptHandler 626E                __size_of_PIN_MANAGER_Initialize 00A2  
                          __end_of__tdiv_to_l_ 4004                                    __end_of_sin 365C  
                                    i2printf@c 0089                                      i2printf@f 0066  
              _ADC_postProcessingCallback$3316 00B0                _ADC_postProcessingCallback$3317 00A6  
              _ADC_postProcessingCallback$3318 00A9                _ADC_postProcessingCallback$3319 00AC  
                              i2___fttol@sign1 0046                        _terminal_textAttributes 2922  
EUSART2_SetRxInterruptHandler@interruptHandler 0117  EUSART2_SetTxInterruptHandler@interruptHandler 0117  
                            __size_ofi2_fround 0276                                     ?i2___awdiv 0007  
                                   ?i2___ftadd 0040                                     ?i2___awmod 0001  
                                   ?i2___ftdiv 0015                                     ?i2___ftneg 0024  
                                   ?i2___lldiv 0001                                     ?i2___ftmul 0027  
                                   ?i2___llmod 000E                                     ?i2___ftsub 0060  
                                   ?i2___fttol 003D                  __size_of_ADCC_StartConversion 000E  
                                  putch@txData 0118                              __size_ofi2_printf 0A28  
                        __end_of_EUSART2_Write 5CD0                               ?_TMR7_WriteTimer 0100  
                                   frexp@value 0001             terminal_textAttributes@output_buff 0191  
                      __end_ofi2_EUSART2_Write 5D16                                ___llmod@divisor 0128  
                              ___llmod@counter 012C                                     ?i2_isdigit 0001  
                               _FVR_ADC_Result 00E0                               __CFG_LPBOREN$OFF 000000  
                             ??_PMD_Initialize 0117                                       ??___ftge 011D  
                                     ??___wmul 0129                __size_of_heartbeatTimerCallback 002E  
                                  __pdataBANK0 00E3                                       ??_fround 0158  
                                _ringBufferLUT 1456                 ??_terminal_textAttributesReset 01A0  
                                     ??_printf 016C                              _POS3P3_ADC_Result 00CB  
                                     ??_strcat 011B                     ??_acquisitionTimerCallback 0101  
                                     ??_strchr 011B                                       ??_strcmp 011B  
                                     ??_strlen 0119                                  peakToRMS@Peak 0094  
                                     ??_strstr 012A                              __size_of___altoft 0078  
                                   fround@prec 015E                                 _eusart2RxCount 01DB  
                                ?i2__div_to_l_ 0001                              __size_of___awtoft 003A  
                            __size_of___ftpack 00B0                                      _acos$3320 0091  
                            __size_of___lltoft 005E                              __size_of___lwtoft 0024  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0100  
                                 _isdigit$2489 0118                  ?_TMR5_DefaultInterruptHandler 0001  
                          EUSART2_Write@txData 0117                                       ?i2_scale 0036  
              ??_EUSART2_SetRxInterruptHandler 011A                                      _asin$3321 007F  
                                    _asin$3322 008B                                      _asin$3323 0085  
                                    _asin$3324 0082                                       ?i2_putch 0001  
                                   sin@coeff_a F491                                     sin@coeff_b F4AF  
                        _TMR6_InterruptHandler 01CF                         _PIN_MANAGER_Initialize 4FAC  
                                    __pintcode 0008                                  __pmediumconst F3E8  
                                     ?___awdiv 011D                                      __ptext100 4A48  
                                    __ptext101 4692                                      __ptext110 4E54  
                                    __ptext102 5170                                      __ptext111 616E  
                                    __ptext103 549C                                      __ptext112 0000  
                                    __ptext104 5514                                      __ptext105 4B26  
                                    __ptext106 606C                                      __ptext107 4786  
                                    __ptext108 3B92                                      __ptext109 60B6  
                                     ?___ftadd 012B                                       ?___awmod 0117  
                                     ?___ftdiv 0137               __end_of_TMR7_SetInterruptHandler 61F2  
                                     ?___ftneg 0123                                       ?___lldiv 0117  
                                     ?___ftmul 0146                                       ?___llmod 0124  
                                     ?___ftsub 0137                                      __npowers_ F438  
                                     ?___fttol 0155                                 ?_ringBufferLUT 01A0  
            _EUSART2_TxDefaultInterruptHandler 01D2                                    __pintcodelo 0018  
                                  __tdiv_to_l_ 3ED0                                       _ADCC_ISR 5FF8  
                               ??i2__div_to_l_ 0007                                   ??__div_to_l_ 011D  
                             _POS12_ADC_Result 01C9                                       _BAUD2CON 000EF7  
                                     ?_isdigit 0001                                      _eval_poly 4B26  
                    ??_terminal_textAttributes 0190                                      _attribute 00DB  
                                    _peakToRMS 365C                               __CFG_WDTE$NSLEEP 000000  
                      ?_terminal_setCursorHome 0001                                      _hexpowers F45F  
                       _heartbeatTimerCallback 5F50                                 _dimming_period 01D7  
                                  ??i2___awdiv 000B                                    ??i2___ftadd 0046  
                                  ??i2___awmod 0005                                 __size_of_floor 00DE  
                                  ??i2___ftdiv 001B                                 __size_of_frexp 0078  
                                  ??i2___ftneg 0027                                    ??i2___lldiv 0009  
                                  ??i2___ftmul 002D                                 __size_of_scale 0480  
                                  ??i2___llmod 0016                                    ??i2___ftsub 005E  
                                  ??i2___fttol 0041                                       ?_strncmp 011D  
                                     ?_strncpy 0117                                 __size_of_putch 000E  
                         _INTERRUPT_Initialize 6194                                       _T6CLKCON 000FB3  
                        _ADCC_IsConversionDone 6246         terminal_textAttributes@input_attribute 018F  
                 __size_of_EUSART2_Receive_ISR 00AA                                 ___wmul@product 0129  
                    currentMeasuredToPeak@Peak 0079                               ?i2_EUSART2_Write 0001  
                                     _LATFbits 000F7E                                       _LATGbits 000F7F  
                      ??_currentMeasuredToPeak 005E                                    strncpy@from 0119  
                                    atan@recip 0066                                       _IPR1bits 000E20  
                                     _IPR3bits 000E22                                       _PIE1bits 000E2A  
                                  strncpy@size 011B                                       _IPR5bits 000E24  
                                     _PIE3bits 000E2C                                       _PIE5bits 000E2E  
                                  ??i2_isdigit 0001                                       i1u733_20 5F5C  
                                     i1u734_28 5F60                                       _PIR1bits 000E34  
                           __end_of__div_to_l_ 4260                                       _PIR3bits 000E36  
                                     i1u678_20 624E                                       _PIR5bits 000E38  
                   ??_TMR6_SetInterruptHandler 011A                       __size_of_TMR5_Initialize 004A  
                                     _TMR5_ISR 5EBA                                       _TMR6_ISR 5FD0  
                                     _TMR7_ISR 5E86                                i2__div_to_l_@f1 0001  
                              i2__div_to_l_@f2 0004                                     _ADCON0bits 000F60  
                                   _ADCON1bits 000F59                                     _ADCON2bits 000F5A  
                                   _ADCON3bits 000F5B                              ___wmul@multiplier 0125  
                                     i2___ftge 5170                                       i2___wmul 606C  
                      __size_of_FVR_Initialize 0008                                     printf@flag 017C  
                                   printf@fval 0188                                     printf@prec 018B  
                                   ?_eval_poly 004C                 __end_of_terminal_setCursorHome 61B6  
                            i2___awdiv@divisor 0009                                       i2_fround 2F1E  
            __size_of_TMR5_SetInterruptHandler 000E                                     ?_peakToRMS 0094  
                            i2___awdiv@counter 000B                      ?_TMR5_SetInterruptHandler 0117  
                __size_of_EUSART2_Transmit_ISR 0036                                       i2_printf 0A2E  
                          __end_ofatan@coeff_a F491                            __end_ofatan@coeff_b F4AF  
                     __size_of_TMR6_Initialize 0032                        ?_terminal_clearTerminal 0001  
                                    copy_data0 5A0E                          ?_INTERRUPT_Initialize 0001  
                           i2___awmod@dividend 0001               __size_of_terminal_ringBufferPull 011C  
                             __size_ofi2_scale 0450                 ??_TMR5_DefaultInterruptHandler 0001  
                             __size_ofi2_putch 000A                                      frexp@eptr 0004  
              __end_of_terminal_textAttributes 2C8A                                     _ADSTATbits 000F65  
                                     __Hrparam 0000               __end_of_ADCC_GetConversionResult 6182  
                      __CFG_RSTOSC$EXTOSC_4PLL 000000          __end_of_EUSART2_SetRxInterruptHandler 622A  
       __size_of_EUSART2_SetRxInterruptHandler 000E                  _EUSART2_SetRxInterruptHandler 621C  
                                     __Lrparam 0000                             __CFG_BOREN$SBORDIS 000000  
                              ??_ringBufferLUT 01A2                       __size_of_TMR7_Initialize 004E  
                             _foreground_color 00DA                        ??_OSCILLATOR_Initialize 0117  
                             __size_of___awdiv 0086                               __size_of___ftadd 01AE  
                             __size_of___awmod 0072                               __size_of___ftdiv 00E8  
                             __size_of___ftneg 0026                          i2___wmul@multiplicand 0011  
                             __size_of___lldiv 0084                                       ___altoft 5514  
                             __size_of___ftmul 00F6                               __size_of___llmod 0068  
                             __size_of___ftsub 0042                               __size_of___fttol 00F8  
                                     ___awtoft 5DDE                                       ___ftpack 4DA4  
             __end_of_acquisitionTimerCallback 5B54                                    _fround$3131 015B  
                                  _fround$3132 0158                                       ___lltoft 5940  
                        __end_ofi2__tdiv_to_l_ 4136                                       ___lwtoft 60B6  
                     _TMR7_SetInterruptHandler 61E4                          _TMR7_InterruptHandler 01CC  
                           _ADC_Result_Scaling 00CE        terminal_textAttributes@foreground_color 0190  
                     __size_of_ADCC_Initialize 0064                                     strcat@from 0119  
              ??_INTERRUPT_InterruptManagerLow 0102                 __end_of_terminal_clearTerminal 61D6  
                             __size_of_isdigit 0022                                       __ptext10 50E0  
                                     __ptext11 5A54                                       __ptext20 1C44  
                                     __ptext12 5E18                                       __ptext21 61D6  
                                     __ptext13 5B54                                       __ptext30 4136  
                                     __ptext22 5C88                                       __ptext14 4C00  
                                     __ptext31 5940                                       __ptext23 60DA  
                                     __ptext15 487A                                       __ptext40 5F7E  
                                     __ptext32 5748                                       __ptext24 2C8A  
                                     __ptext16 5DDE                                       __ptext41 5BA4  
                                     __ptext33 5312                                       __ptext25 5FA8  
                                     __ptext17 5D16                                       __ptext50 6194  
                                     __ptext42 61E4                                       __ptext34 44A4  
                                     __ptext26 459C                                       __ptext18 61C6  
                                     __ptext51 625C                                       __ptext43 5EEE  
                                     __ptext35 5D5A                                       __ptext27 55FE  
                                     __ptext19 0000                                       __ptext60 5B02  
                                     __ptext52 57B0                                       __ptext44 61F2  
                                     __ptext36 39E4                                       __ptext28 528C  
                                     __ptext61 6238                                       __ptext53 620E  
                                     __ptext45 5C3E                                       __ptext37 4DA4  
                                     __ptext29 3ED0                                       __ptext70 6152  
                                     __ptext62 6246                                       __ptext54 621C  
                                     __ptext46 6200                                       __ptext38 6020  
                                     __ptext71 626E                                       __ptext63 6046  
                                     __ptext55 587C                                       __ptext47 611A  
                                     __ptext39 504E                                       __ptext80 5396  
                                     __ptext72 4F02                                       __ptext64 5FD0  
                                     __ptext56 622A                                       __ptext48 4FAC  
                                     __ptext81 4004                                       __ptext73 0A2E  
                                     __ptext65 626C                                       __ptext49 6136  
                                     __ptext90 5AAC                                       __ptext82 4260  
                                     __ptext74 20C4                                       __ptext66 5F50  
                                     __ptext58 5E86                                       __ptext91 3194  
                                     __ptext83 599E                                       __ptext75 6252  
                                     __ptext67 5E50                                       __ptext59 626A  
                                     __ptext92 3D3E                                       __ptext84 5816  
                                     __ptext76 5CD0                                       __ptext93 3822  
                                     __ptext85 541A                                       __ptext77 60FC  
                                     __ptext69 5EBA                                       __ptext94 5F20  
                                     __ptext86 5FF8                                       __ptext78 2F1E  
                                     __ptext95 58E0                                       __ptext87 6270  
                                     __ptext79 5670                                       __ptext96 33FE  
                                     __ptext88 2514                                       __ptext97 5D9C  
                                     __ptext89 365C                                       __ptext98 6092  
                                     __ptext99 4962                                       _sin$3325 006C  
                                     __powers_ F411                         ?_ADCC_IsConversionDone 0001  
                              _Temp_ADC_Offset 00E6                               __size_of_strncmp 0090  
                             __size_of_strncpy 0068                    __size_of_EUSART2_Initialize 0066  
                               i2_isdigit$2489 0002                                _Temp_ADC_Result 01C6  
                                __size_of_acos 0056                                  __size_of_fabs 0030  
                                __size_of_atan 01C2                                  __size_of_asin 026A  
                                __size_of_atoi 00D8                                  __size_of_main 0072  
                                   _T5GCONbits 000FC4                                  __size_of_sqrt 0192  
                         __end_ofi2__div_to_l_ 4388                                     strncmp@len 0121  
                         __CFG_WDTCWS$WDTCWS_7 000000                                     _T7GCONbits 000F31  
                           __CFG_BORV$VBOR_190 000000                       __size_of_TMR5_WriteTimer 001C  
                    _ADCC_ADI_InterruptHandler 00D1                                     _RC2STAbits 000EF5  
                 __end_of_ADCC_StartConversion 6246                                       int$flags 005E  
                                     atoi@sign 012F                                      printf@idx 0175  
                                    printf@len 0178                                      printf@exp 017E  
                                    printf@val 0184                                    atan@coeff_a F47F  
                                  atan@coeff_b F4A0                              ??_TMR5_Initialize 011A  
                        _terminal_printNewline 61B6                              i2___awmod@divisor 0003  
                            i2___awmod@counter 0005                                     _INTCONbits 000FF2  
                                  ??_eval_poly 0053                                    ??_peakToRMS 005E  
                                   _FVRCONbits 000EC4                                       isdigit@c 0119  
                       ??_INTERRUPT_Initialize 0117                                       scale@scl 015B  
         __end_of_TMR6_DefaultInterruptHandler 626E          __size_of_TMR6_DefaultInterruptHandler 0002  
                 _TMR6_DefaultInterruptHandler 626C           __end_of_ADCC_DefaultInterruptHandler 6272  
        __size_of_ADCC_DefaultInterruptHandler 0002                   _ADCC_DefaultInterruptHandler 6270  
                                     intlevel1 0000                                       intlevel2 0000  
                             __tdiv_to_l_@exp1 0125                               __tdiv_to_l_@cntr 0124  
                             __tdiv_to_l_@quot 0120                                      strchr@chr 0119  
                                    strchr@ptr 0117                             ringBufferLUT@index 01AA  
                             ___lldiv@dividend 0117                        ?_PIN_MANAGER_Initialize 0001  
                            ??_TMR6_Initialize 011A                              __CFG_CLKOUTEN$OFF 000000  
                                    strncmp@s1 011D                                      strncmp@s2 011F  
                                    strncpy@cp 011D                                      strncpy@to 0117  
                     __size_of_TMR7_WriteTimer 0026                                       printf@ap 017A  
                                     printf@cp 0176                       _ADCC_GetConversionResult 616E  
               ?_EUSART2_SetRxInterruptHandler 0117                                   ?__tdiv_to_l_ 0117  
                       __size_of_EUSART2_Write 0048                            _EUSART2_Receive_ISR 4F02  
       __end_of_INTERRUPT_InterruptManagerHigh 4DA4        __size_of_INTERRUPT_InterruptManagerHigh 4D9C  
               _INTERRUPT_InterruptManagerHigh 0008                              ??_TMR7_Initialize 011A  
                                  _printf$3134 0172                                 _FVR_Initialize 625C  
                                     strcat@cp 011B                                       strcat@to 0117  
                      ?_heartbeatTimerCallback 0001                                       strcmp@s1 0117  
                                     strcmp@s2 0119                              ringBufferLUT@line 01A0  
                             ___lldiv@quotient 011F                                       strlen@cp 011B  
                                     strstr@s1 0126                                       strstr@s2 0128  
                                   _TX2STAbits 000EF6          __end_of_INTERRUPT_InterruptManagerLow 00FE  
       __size_of_INTERRUPT_InterruptManagerLow 00E6                  _INTERRUPT_InterruptManagerLow 0018  
               __end_of_PIN_MANAGER_Initialize 504E                              ??_ADCC_Initialize 011A  
                            i2__div_to_l_@exp1 000C                              i2__div_to_l_@cntr 000B  
                      _terminal_ringBufferPull 4388                  ?_TMR6_DefaultInterruptHandler 0001  
              ??_EUSART2_SetTxInterruptHandler 011A                              i2__div_to_l_@quot 0007  
                         ?_EUSART2_Receive_ISR 0001              __size_of_acquisitionTimerCallback 0052  
                ?_ADCC_DefaultInterruptHandler 0001                      ?_acquisitionTimerCallback 0001  
                 ??_ADC_postProcessingCallback 005E              _EUSART2_RxDefaultInterruptHandler 00D4  
               __size_of_currentMeasuredToPeak 0060                  __end_of_currentMeasuredToPeak 5940  
